<languages />
<translate>
<!--T:1-->
Hardware manufactures often provide updates for their BIOS and firmware. To apply (often referred to as to flash) the updates is sometimes not straight forward and requires some work.
{{Warning|If the hardware works, there is often no need to upgrade the BIOS. If something goes wrong, this might cause permanent damage to your BIOS and you might lose your warranty.}}

== Getting BIOS == <!--T:2-->

<!--T:26-->
First you should find the motherboard's manufacturer and the model. Check the user's Manual that comes with your computer, usually there you'll find all needed information.

<!--T:3-->
You can also use {{package|sys-apps/dmidecode}} to retrieve some info.

<!--T:4-->
{{RootCmd|dmidecode -t bios -t baseboard}}

<!--T:5-->
Lastly, if you have physical access to the motherboard, you may find the required information directly on the motherboard itself.

<!--T:27-->
{{Warning|Accessing the motherboard of a computer may cause loss of warranty!}}

<!--T:6-->
After some searching on manufacturer site you can get BIOS update as zip-, exe- or iso-file. 

<!--T:7-->
{{Cmd|unzip 7235v1A.zip
|output=<pre>Archive:  7235v1A.zip
   creating: 7235v1A/
inflating: 7235v1A/7235v1x.txt
inflating: 7235v1A/AWFL865.EXE
inflating: 7235v1A/How to flash the BIOS.DOC
inflating: 7235v1A/W7235IMS.1A0
</pre>}}

== BIOS Option == <!--T:8-->

<!--T:28-->
Many BIOS have an option to read the new binary image from an external memory stick or floppy disk. All you need to do is to go into your BIOS setup and look for the option.

== Boot-CD == <!--T:9-->

<!--T:29-->
Often the manufaturer offers a CD-Rom image to download as a boot medium. The file should have the extension .iso, to burn the image to an empty CD-R:

<!--T:30-->
{{RootCmd|cdrecord BOOT-CD.iso}}

<!--T:31-->
{{Note|cdrecord is provided by two packages (you only need to install one of them): {{Package|app-cdr/cdrtools}} and {{Package|app-cdr/cdrkit}}}}

<!--T:32-->
Now you can choose in your BIOS to boot from CD and follow the instructions on your manufacturers website.

== FreeDOS Environment == <!--T:19-->

<!--T:33-->
You can use FreeDOS to run the DOS-based BIOS utility from your manufacturer.  You must first create a custom FreeDOS image which includes the necessary BIOS tools, and then boot this image via one of the methods shown here.

<!--T:20-->
Download FreeDOS and tools:

<!--T:34-->
* [http://www.ibiblio.org/pub/micro/pc-stuff/freedos/files/distributions/1.0/ FreeDOS] - download the fdboot.img file
* [http://www.ibiblio.org/pub/micro/pc-stuff/freedos/files/dos/sys/sys-freedos-linux/ FreeDOS bootsector] - download the file sys-freedos-linux.zip
* The DOS-Flash program and new BIOS from your manufacturers website

=== Create Custom FreeDOS Image === <!--T:21-->

<!--T:35-->
First we need to install and download the required software and enable the loopback device in our kernel:

<!--T:36-->
{{KernelBox|title=enable loopback device|1=
Device Drivers  --->
    [*] Block devices  --->
        <M>   Loopback device support
}}

<!--T:37-->
If the module isn't loaded yet:

<!--T:38-->
{{RootCmd|modprobe loop}}

<!--T:22-->
Install required software:

<!--T:39-->
{{Emerge|dev-lang/nasm|app-arch/unzip|sys-fs/dosfstools}}

<!--T:23-->
Create an image file of ~20MB using dd (the name needs to be freedos.img if you will be replacing the one on the SystemRescueCD):

<!--T:40-->
{{RootCmd|dd if{{=}}/dev/null of{{=}}freedos.img bs{{=}}1024 seek{{=}}20480}}

<!--T:41-->
Write a file system to the image:

<!--T:42-->
{{RootCmd|mkfs.msdos freedos.img}}

<!--T:43-->
Write the bootsector to the image file:

<!--T:44-->
{{RootCmd|unzip sys-freedos-linux.zip && ./sys-freedos.pl --disk{{=}}freedos.img}}

<!--T:45-->
Now we need to copy the FreeDOS files to our new image.<br>
Create the mountpoints:

<!--T:46-->
{{RootCmd|mkdir -p /mnt/freedos /mnt/freedos_new}}

<!--T:47-->
Mount the original image:

<!--T:48-->
{{RootCmd|mount -o loop fdboot.img /mnt/freedos}}

<!--T:49-->
Mount the new image:

<!--T:50-->
{{RootCmd|mount -o loop freedos.img /mnt/freedos_new}}

<!--T:51-->
Copy the FreeDOS system files to our new image:

<!--T:52-->
{{RootCmd|cp -ar /mnt/freedos/* /mnt/freedos_new/}}

<!--T:53-->
Now you should also copy your flash program and the new BIOS to the image file:

<!--T:54-->
{{RootCmd|cp -ar FLASH-PROGRAM BIOS-UPDATE /mnt/freedos_new}}

<!--T:55-->
Unmount both images:

<!--T:56-->
{{RootCmd|umount /mnt/freedos_new /mnt/freedos}}

<!--T:57-->
{{Note|DOS can only display names up to a length of 8 characters, you probably want to rename some of the files}}

=== Using SystemRescueCD to boot FreeDOS === <!--T:10-->

<!--T:58-->
The SystemRescueCD comes with a version of FreeDOS, we can replace the original image and create a bootable memory stick which contains the needed programs to flash our BIOS.

==== Download SystemRescueCD and prepare LiveUSB ==== <!--T:24-->

<!--T:59-->
* [http://www.sysresccd.org/Download SystemRescueCD] - download the normal ISO image

==== Create Bootable Memory Stick ==== <!--T:12-->

<!--T:92-->
We use the default method to create the SystemRescueCD boot medium, the script {{Path|usb_inst.sh}} will guide through the installation.

<!--T:60-->
{{Warning|This will delete any data on the memory stick}}

<!--T:61-->
Create the folder in {{Path|/mnt}}:

<!--T:62-->
{{RootCmd|mkdir /mnt/SysRescueCD}}

<!--T:63-->
Mount the CD image:

<!--T:64-->
{{RootCmd|mount -o loop systemrescuecd-x86-VERSION.iso /mnt/SysRescueCD}}

<!--T:65-->
Start the installation script:

<!--T:66-->
{{RootCmd|/mnt/SysRescueCD/usb_inst.sh}}

<!--T:67-->
Unmount the CD image:

<!--T:68-->
{{RootCmd|umount /mnt/SysRescueCD}}

==== Replace the FreeDOS image ==== <!--T:13-->

<!--T:69-->
We are going to replace the original FreeDOS image on the SystemRescueCD memory stick.<br>
Mount the SystemRescueCD memory stick ({{Path|/dev/sdX1}} needs to be replaced by the device name of your memory stick):

<!--T:70-->
{{RootCmd|mount /dev/sdX1 /mnt/SysRescueCD}}

<!--T:71-->
Replace the {{Path|freedos.img}} file:

<!--T:72-->
{{RootCmd|cp freedos.img /mnt/SysRescueCD/bootdisk/}}

<!--T:73-->
Unmount the SystemRescueCD memory stick:

<!--T:74-->
{{RootCmd|umount /mnt/SysRescueCD}}

=== Booting the FreeDOS image from GRUB directly === <!--T:25-->

<!--T:75-->
If you would like to boot FreeDOS without any external media, you can use the "memdisk" tool from syslinux to allow grub (or another bootloader) to boot your FreeDOS image directly.

<!--T:76-->
{{Emerge|sys-boot/syslinux}}

<!--T:77-->
Mount your {{Path|/boot}} partition (if needed):

<!--T:78-->
{{RootCmd|mount /boot}}

<!--T:79-->
Copy the memdisk binary, and your newly built FreeDOS image to {{Path|/boot}}:

<!--T:80-->
{{RootCmd|cp /usr/share/syslinux/memdisk /boot}}
{{RootCmd|cp freedos.img /boot}}

<!--T:81-->
Edit {{Path|/boot/grub/grub.conf}} and add an entry for FreeDOS:

<!--T:82-->
{{FileBox|filename=/boot/grub/grub.conf|title=Example grub.conf entry|1=
title FreeDOS (BIOS update)
kernel /boot/memdisk floppy
initrd /boot/freedos.img
}}

=== BIOS Update === <!--T:14-->

<!--T:83-->
Restart and choose to boot from the USB memory stick OR your new grub entry. If using SystemRescueCD, in the GRUB command line type:

<!--T:84-->
{{CodeBox|freedos}}

<!--T:85-->
This should boot you into our new FreeDOS image and you are greeted by the DOS prompt:

<!--T:86-->
{{CodeBox|C:\}}

<!--T:87-->
Now you can start your BIOS update by following the manufacturers instructions. Some useful commands in DOS:
;cd <dir> : change to the directory
;dir : list the files in the current directory
;type : display the contents of a file

== flashrom == <!--T:15-->

<!--T:88->
Your motherboard can support flashing via {{package|sys-apps/flashrom}} directly from your system. In this case only what you need is BIOS image. Please check first list of [http://flashrom.org/Supported_hardware supported hardware].

<!--T:16-->
First we check our new BIOS image:

<!--T:89-->
{{RootCmd|flashrom -v W7235IMS.1A0}}

<!--T:17-->
If all OK, let's flash'em:

<!--T:90-->
{{RootCmd|flashrom -vw W7235IMS.1A0}}

== See also == <!--T:18-->

<!--T:91-->
* [[Bootable DOS USB stick]]
</translate>

[[Category:Core system]]
