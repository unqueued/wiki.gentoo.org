{{InfoBox stack
|{{InfoBox homepage|http://www.winehq.org|header=true}}
|{{InfoBox wikipedia|Wine (software)}}
}}
'''Wine''' ('''W'''ine '''I'''s '''N'''ot an '''E'''mulator) is an application that allows Windows software to run on Linux. This article deals with installing, configuring and maintaining a general purpose Wine environment on Gentoo.

== Installation ==
Enable the USE flags of choice and emerge {{Package|app-emulation/wine}}:
{{Emerge|wine}}

To install the latest, development version, the package needs to be unmasked unless already running ''unstable'':
{{RootCmd|echo "app-emulation/wine" >> /etc/portage/package.accept_keywords}}

== USE Flags ==
=== Media ===
Many users are likely to want support for as much media as possible, in which cases the following flags are recommended.
{{USEflag|package=app-emulation/wine
|fontconfig+yes+yes
|gecko+yes+yes
|gsm
|gstreamer
|jpeg+yes+yes
|lcms
|mp3+yes+yes
|png+yes+yes
|truetype+yes+yes
}}

=== Audio Output ===
{{USEflag|package=app-emulation/wine
|alsa+yes+yes
|openal
|oss++no
|pulseaudio++yes
|realtime+yes+yes+Pull in sys-auth/rtkit for low-latency pulseaudio support
}}

=== Input/Output ===
{{USEflag|package=app-emulation/wine
|X+yes+yes
|cups
|gphoto2
|hardened
|ldap
|nls+yes+yes
|opencl
|opengl+yes+yes
|osmesa++Add support for OpenGL in bitmaps using libOSMesa
|udisks+yes+yes
|v4l
|xcomposite+yes+yes
|xinerama
}}

=== Networking ===
{{USEflag|package=app-emulation/wine
|capi
|ncurses+yes++Enable curses support in wineconsole.
|samba
|ssl+yes+yes
}}

=== Miscellaneous ===
{{USEflag|package=app-emulation/wine
|abi_x86_32+yes+yes+Support 32-bit Windows binaries
|abi_x86_64+yes+yes+Support 64-bit Windows binaries
|custom-cflags++no+Bypass strip-flags, See [[#Debugging|Debugging]].
|dos++Pull in games-emulation/dosbox to run DOS applications
|perl+yes+yes+Install helpers written in perl (winedump/winemaker)
|run-exes+yes+yes+Use Wine to open and run .EXE and .MSI files
|scanner
|test++no
|threads+yes+yes
|xml+yes+yes
}}

== Disabling the Menubuilder ==
To prevent Wine from adding menu entries and desktop links, the following dll override can be used.
{{FileBox|filename=~/.bashrc|lang=bash|1=
# Prevent Wine from adding menu entries and desktop links.
export WINEDLLOVERRIDES='winemenubuilder.exe=d'
}}

Already added entries can be deleted by removing the corresponding files from {{Path|~/.local/share/applications}}.

== Tools and Interfaces ==
Tools such as graphical interfaces for Wine for users who want an alternative to the command-line.
* {{Package|app-emulation/q4wine}} - Qt4 GUI configuration tool for Wine
* {{Package|app-emulation/wine-doors}} - Wine-doors is a package manager for Wine
* {{Package|app-emulation/winetricks}} - Easy way to install DLLs needed to work around problems in Wine
* {{Package|app-emulation/playonlinux}} - Set of scripts to easily install and use Windows games and software

== Environment Variables ==
The environment variables of the shell that '''wine''' is started from are made accessible to the windows/dos processes.  Some very useful Wine-specific variables include, but are not limited to, WINEPREFIX, WINEARCH, and WINEDEBUG.

See also the manual entries (<kbd>man wine</kbd> and <kbd>man wineserver</kbd>).

=== WINEPREFIX ===
To create a Wine prefix in a custom location without affecting the default:
{{Cmd|WINEPREFIX{{=}}~/wine_testi wineboot}}

The above would create the Windows installation in the home path of the user, under ''wine_testi''.
{{Note|Once a prefix has been created, the 'bitness' (arch) can not be changed.  As such, the WINEARCH is not required to be defined for every command, unlike the WINEPREFIX variable.  When using a non-default prefix without exporting it, the prefix and path need to be defined for each command.}}

=== WINEARCH ===
To create a 32-bit installation instead of the default (when built) 64-bit:
{{Cmd|WINEARCH{{=}}win32 WINEPREFIX{{=}}~/wine_testi wineboot}}

The Wine executable used could be anything that runs Wine, such as <kbd>winecfg</kbd>, which often makes sense while creating a clean, new prefix.

=== WINEDEBUG ===
Essential in finding out why an application is misbehaving when the basic terminal output or messages boxes are not enough.  See [[#Debugging|Debugging]] for examples.

== Debugging ==
When a user encounters a problem with an application, they should try the latest development version to see if the unwanted behavior still exists.  If Wine has been built with options such as '''-fomit-frame-pointer''' or '''--hash-style=both''', the Wine developers will likely be unable to help with the issue, and reports including output from such builds should not be reported to the [http://bugs.winehq.org/ Wine Bugzilla].

The ''custom-cflags'' USE flag should be enabled for debugging builds.

For more directions on reporting bugs, see [http://wiki.winehq.org/Bugs Bugzilla and Bugs] at wiki.winehq.

== See also ==
* {{Bug|app-emulation/wine|search=package}}
* [http://wiki.winehq.org/ WineHQ Wiki]
* [http://appdb.winehq.org/ Wine Application Database] 

[[Category:Emulation]]
