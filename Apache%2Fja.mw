<languages />

{{Metadata|abstract=The Apache HTTP Server is an efficient, extensible web server. It is one of the most popular web servers used on the Internet.}}

{{InfoBox stack
|{{InfoBox homepage|http://httpd.apache.org|header=true}}
|{{InfoBox wikipedia|Apache HTTP Server}}
}}

The '''Apache HTTP Server''' is an efficient, extensible [[:Category:Web Servers|web server]]. It is one of the most popular web servers used the Internet.

== インストール ==

{{Note/ja|単にバージョンアップグレードをするだけなら、[http://www.gentoo.org/proj/en/apache/doc/upgrading.xml アップグレーディングガイド]を参照してください。}}

=== USE フラグ ===

{{USEflag|package=www-servers/apache|desc=Possible USE flags for {{Package|www-servers/apache}}:
|debug
|doc
|ldap
|ssl+yes
|static
|suexec
|threads
|APACHE2_MODULES+++See {{Path|[http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/profiles/desc/apache2_modules.desc /usr/portage/profiles/desc/apache2_modules.desc]}}. Enable in {{Path|/etc/portage/make.conf}}.
|APACHE2_MPMS+++See {{Path|[http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/profiles/desc/apache2_mpms.desc /usr/portage/profiles/desc/apache2_mpms.desc]}}. Enable in {{Path|/etc/portage/make.conf}}.
}}

=== Emerge ===

{{Emerge|{{Package|www-servers/apache}}}}

=== 他のパッケージも対応させる ===

Enabling the <code>apache2</code> global USE flag provides support for Apache in other packages. This may cause {{Package|www-servers/apache}} to be installed automatically if a package depending on Apache has been emerged.
 		 
{{FileBox|filename=/etc/portage/make.conf|title|Adding Apache to system USE flags|lang=bash|1=
USE="apache2"
}}

After configuring USE variables, update the system so the changes take effect:

{{Emerge|params+=--changed-use --deep|@world}}

=== 設定 ===

=== 設定ファイル ===

システム上のApache2の動作を設定する、2つの主要なファイルがあります: 

* Gentoo's Apache2 init script configuration file {{path|/etc/conf.d/apache2 }}

* Apache2 server's conventional configuration file {{path|/etc/apache2/httpd.conf}}

==== Gentoo の init スクリプトの設定ファイル ====

The {{Path|apache2}} file located in {{Path|/etc/conf.d}} is Gentoo's init script configuration file. The only active line in this file is the <code>APACHE2_OPTS</code> line:

{{FileBox|filename=/etc/conf.d/apache2|lang=bash|1=
APACHE2_OPTS="-D DEFAULT_VHOST -D INFO -D SSL -D SSL_DEFAULT_VHOST -D LANGUAGE"
}}

この行のオプションは、全体の設定において特定の部分を有効にしたり無効にしたりするために様々な設定ファイルが利用する記述 <code><IfDefine option-name></code> を解釈するための定義です。

==== Apache サーバで一般的に用いられている設定ファイル - httpd.conf ====

The {{Path|httpd.conf}} file is Apache server's conventional configuration file. In fact this file is only an '''entry point''' for configuration. The whole configuration is split in many files in the {{Path|/etc/apache2/}} directory, that are assembled together using the <code>Include</code> directive. For example, the statement <code>Include /etc/apache2/modules.d/*.conf</code>, in {{Path|httpd.conf}}, aims at including all the files in {{Path|/etc/apache2/modules.d/}} which name ends with {{Path|.conf}}. 

上記で見たように、またモジュールの設定ファイル({{Path|/etc/apache2/modules.d}}内のファイル)のほとんどが<code><IfDefine module-name></code>から開始することから、対応する<code>-D module-name</code>というフラグが{{Path|/etc/conf.d/apache2 }}のAPACHE2_OPTS変数に設定されていなければ、{{Path|/ect/apache2/modules.d}}内のファイルの内容は有効にはなりません。{{Path|00_default_settings.conf}}という設定ファイルは例外で<code>IfDefine</code>から開始しておらず、そのため常に有効になります。

=== デフォルトの設定 ===

After a fresh install of an Apache server, the configuration resulting from the assemblage of the different configuration files is as follows. Start with the entry point {{Path|/etc/apache2/httpd.conf}}.

{{Warning/ja| これはクイックリファレンスであり、概観を記載したもの''でしか''ありません。設定における追加や削除を理解するには、様々なファイル群を含めコメント類を熟読することが強く期待されます。また、より深い理解のために apache マニュアルも参照してください。}}

{{FileBox|filename=/etc/apache2/httpd.conf|lang=apache|1=
ServerRoot "/usr/lib64/apache2"
  
#Module loaded unconditionally, assuming the USE flag is no unset in
# /etc/portage/make.conf or in /etc/portage/package.use
LoadModule actions_modulemodules/mod_actions.so
...
#other modules loaded that way : alias_module, auth_basic_module, authn_alias_module,
# authn_anon_module, authn_dbm_module, authn_default_module, authn_file_module, 
# authz_dbm_module, authz_default_module, authz_groupfile_module, authz_host_module, 
# authz_owner_module, authz_user_module, autoindex_module,  cgi_module,  cgid_module, 
# deflate_module, dir_module, env_module, expires_module, ext_filter_module, filter_module,
#  headers_module, include_module,  log_config_module, logio_module, mime_module,  
# mime_magic_module, negotiation_module, rewrite_module, setenvif_module, 
# speling_module,ssl_module, status_module, unique_id_module, usertrack_module, host_alias_module
  
  
#Modules loaded conditionally, assuming matching USE flag is not unset in
# /etc/portage/make.conf or in /etc/portage/package.use (flag to be set in )
<IfDefine AUTHNZ_LDAP>
LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
</IfDefine>
#other modules loaded that way : cache_module, dav_module, dav_fs_module,
# dav_lock_module,disk_cache_module,  file_cache_module, info_module, ldap_module,
# mem_cache_module, userdir_module
  
  
User apache
Group apache
  
# Supplemental configuration
#**************************************************************************************vvv
#this part is included via Include /etc/apache2/modules.d/*.conf 
  
#included from /etc/apache2/modules.d/00_default_settings.conf-------------v
#this is always included as there is not option to deactivate it.
Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 15
UseCanonicalName Off
AccessFileName .htaccess
ServerTokens Prod
TraceEnable off
ServerSignature On 
HostnameLookups Off
EnableMMAP On
EnableSendfile On
FileEtag INode MTime Size
ContentDigest Off
ErrorLog /var/log/apache2/error_log
LogLevel warn
  
<Directory />
	Options FollowSymLinks
	AllowOverride None
	Order deny,allow
	Deny from all
</Directory>
  
<IfModule dir_module>
	DirectoryIndex index.html index.html.var
</IfModule>
<FilesMatch "^\.ht">
	Order allow,deny
	Deny from all
</FilesMatch>
#--------------------------------------------------------------------------^
  
#included from 00_mod_info.conf--------------------------------------------v
<IfDefine INFO>
<Location /server-info>
	SetHandler server-info
	Order deny,allow
	Deny from all
	Allow from 127.0.0.1
</Location>
</IfDefine>
#--------------------------------------------------------------------------^
  
#--------------------------------------------------------------------------v
#included from 00_languages.conf
# Settings for hosting different languages.
<IfDefine LANGUAGE>
  
	AddLanguage ca .ca
	...
	AddLanguage zh-TW .zh-tw
  
	LanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn no pl pt pt-BR ru sv zh-CN zh-TW
  
	ForceLanguagePriority Prefer Fallback
  
	AddCharset us-ascii.ascii	.us-ascii
	AddCharset <nowiki>ISO-8859-1		.iso8859-1 .latin1</nowiki>
	...
	AddCharset shift_jis		.shift_jis .sjis
</IfDefine>
#---------------------------------------------------------------------------^
#**************************************************************************************^^^
  
  
#***************************************************************************************vvv
#this part is included via Include /etc/apache2/vhosts.d/*.conf 
#from 00_default_ssl_vhost.conf-----------------------------------------------------vv
<IfDefine SSL>
	<IfDefine SSL_DEFAULT_VHOST>
		<IfModule ssl_module>
			Listen 443
  
			<VirtualHost _default_:443>
				ServerName localhost
                                #------------------------------------------v
				# this part is included via Include /etc/apache2/vhosts.d/default_vhost.include
				ServerAdmin root@localhost
				DocumentRoot "/var/www/localhost/htdocs"
  
  	
				<Directory "/var/www/localhost/htdocs">
	   				Options Indexes FollowSymLinks
	   				AllowOverride All
	   				Order allow,deny
	   				Allow from all
				</Directory>
  
				<IfModule alias_module>
	   				ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
				</IfModule>
  
				<Directory "/var/www/localhost/cgi-bin">
	   				AllowOverride None
	   				Options None
	   				Order allow,deny
	   				Allow from all
				</Directory>
        			#end of Include ---------------------------^
  	
				ErrorLog /var/log/apache2/ssl_error_log
  
				<IfModule log_config_module>
					TransferLog /var/log/apache2/ssl_access_log
				</IfModule>
				SSLEngine on
				SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
				SSLCertificateFile /etc/ssl/apache2/server.crt
				SSLCertificateKeyFile /etc/ssl/apache2/server.key
  
				<FilesMatch "\.(cgi{{!}}shtml{{!}}phtml{{!}}php)$">
					SSLOptions +StdEnvVars
				</FilesMatch>
  
				<Directory "/var/www/localhost/cgi-bin">
					SSLOptions +StdEnvVars
				</Directory>
  
				<IfModule setenvif_module>
					BrowserMatch ".*MSIE.*" \
					nokeepalive ssl-unclean-shutdown \
					downgrade-1.0 force-response-1.0
				</IfModule>
  
  
				<IfModule log_config_module>
					CustomLog /var/log/apache2/ssl_request_log \
					"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
					</IfModule>
			</VirtualHost>
		</IfModule>
	</IfDefine>
</IfDefine>
#---------------------------------------------------------------------------------^^
#from 00_default_vhost.conf-------------------------------------------------------vv
<IfDefine DEFAULT_VHOST>
	Listen 80
	NameVirtualHost *:80
  
	<VirtualHost *:80>
		ServerName localhost
  
		#---------------------------------------------------------------v
		# this part is included via Include /etc/apache2/vhosts.d/default_vhost.include
		ServerAdmin root@localhost
		DocumentRoot "/var/www/localhost/htdocs"
  
  	
		<Directory "/var/www/localhost/htdocs">
	   		Options Indexes FollowSymLinks
	   		AllowOverride All
	   		Order allow,deny
	   		Allow from all
		</Directory>
  
		<IfModule alias_module>
	   		ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
		</IfModule>
  
		<Directory "/var/www/localhost/cgi-bin">
	   		AllowOverride None
	   		Options None
	   		Order allow,deny
	   		Allow from all
		</Directory>
        	#end of Include -----------------------------------------------^
  
		<IfModule mpm_peruser_module>
			ServerEnvironment apache apache
		</IfModule>
	</VirtualHost>
</IfDefine>
#-----------------------------------------------------------------------------------^^
# end of include ****************************************************************************************^^^
}}

=== 稼働の第一歩 ===

上記初期設定にあるように、インストール済みのバーチャルホストの <code>DocumentRoot</code> ディレクトリが {{Path|/var/www/localhost/htdocs}} にあり、サーバ名は「localhost」です。 <code>DocumentRoot</code> にはさらに、index.html ファイルがひとつ生成されていますので、正常にインストールができたかどうかを確認するためには [http://localhost/ http://localhost/] にブラウザでアクセスしましょう。

An "It works!" message should be printed on the page.

{{Warning/ja| Firefoxには、ブラウザのURLバーでミスタイプした場合に役に立つ機能があります。もし入力したURLが解決できなかった場合、FirfoxはURLのホスト名の部分に.comを追加したり、www.を先頭に追加したりして、自動的に意図していたであろうURLを解決しようとします。

この機能はFirefoxの初期からありますが、開発者にとっては面倒なものでした。つまり、localhostで動いているサーバが応答しなかった場合、Firefoxはlocalhost.comやwww.localhost.comに接続を試みたあげく、結局"not found"のページを見るということになってしまうのです。

以下のようにして、この「機能」を無効にすることができます:
 
# <tt>about:config</tt>とブラウザのURLバーに入力
# 検索ボックスに<tt>browser.fixup.alternate.enabled</tt>と入力
# 下にフィルタされたリストが出てくるので、<tt>browser.fixup.alternate.enabled</tt>を右クリックし、Toggleを選んで値をfalseにする
}}

=== Enabling mod_security ===

{{emerge|mod_security}}

{{FileBox|filename=/etc/conf.d/apache2|lang=bash|1=
APACHE2_OPTS="... -D SECURITY"
}}

このモジュールを制御するには、{{Path|/etc/apache2/modules.d/79_modsecurity.conf}} と {{Path|/etc/apache2/modules.d/80_modsecurity-crs.conf}} を編集し、apache を再起動します。

=== PHP サポートを有効にする ===

Install [[PHP]] with the <code>apache2</code> USE flag and enable the module:

{{FileBox|filename=/etc/conf.d/apache2|lang=bash|1=
APACHE2_OPTS="... -D PHP5"
}}

PHP モジュールが動作しているかテストする前に、{{Path|/etc/apache2/modules.d/70_mod_php5.conf}} ファイルが存在し、以下の定義が記載されているか、確認しましょう。

{{FileBox|filename=/etc/apache2/modules.d/70_mod_php5.conf|lang=apache|1=
<IfDefine PHP5> 
        # Load the module first 
        <IfModule !mod_php5.c> 
                LoadModule php5_module    modules/libphp5.so 
        </IfModule> 
  
        # Set it to handle the files 
        <IfModule mod_mime.c> 
                AddHandler application/x-httpd-php .php .php5 .phtml 
                AddHandler application/x-httpd-php-source .phps 
        </IfModule> 
  
        DirectoryIndex index.php index.phtml 
</IfDefine>
}}

もしこのファイルがないようなら、作りましょう。

PHPモジュールが動作しているか確認するために、テストページを作成:

{{FileBox|filename=/var/www/localhost/htdocs/index.php|lang=php|1=
<html>
 <body>
  <?php phpinfo(); ?>
 </body>
</html>
}}

そして、{{Path|/var/www/localhost/htdocs/index.html}}を削除するかリネームして、テストページを開きましょう: http://localhost/ 。PHPの設定内容を説明した表があらわれるはずです。

A table describing the PHP settings should be visible.

=== あなた固有のバーチャルホストを追加する ===

それぞれのバーチャルホストごとに、 <code>DocumentRoot</code> ディレクトリを用意し Apacheデーモンが見つけられアクセス可能なようにしましょう。{{Path|/etc/apache2/vhosts.d}} ディレクトリ内にバーチャルホスト設定ファイル({{Path|myVirtualHost.conf}})を追加し、その中には この <code>DocumentRoot</code> とホストサーバ名を指定します。また、このホストサーバ名の項目を {{Path|/etc/hosts}} に追記することも忘れないでください。

To assign the apache user/group ownership on the virtual host files, use <tt>chown</tt> like in the following example:

{{RootCmd|chown apache:apache /var/www/sitename}}

以下に、2つのバーチャルホスト定義例があります。1つは domainname1.com で、もう1つは domainname2.com です。本来のホスト自体（<code>*:80</code>）は同じでも、<code>DocumentRoot</code> と <code>ServerName</code>のディレクティブがそれぞれ異なります。

{{CodeBox|title=バーチャルホストの定義の例|lang=apache|1=
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website1
    ServerName domainname1.com
</VirtualHost>
  
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website2
    ServerName domainname2.com
</VirtualHost>
}}

IPアドレスベースのバーチャルホスト定義を行うこともまた推奨されています。管理者はユーザに対して、IPアドレスを通じてサイトへアクセスさせメッセージを掲げられます。

{{CodeBox|title=IPアドレスベースのバーチャルホスト|lang=apache|1=
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/html
    ServerName xxx.xxx.xxx.xxx
</VirtualHost>
>}}

バーチャルホストを挿入したあとには、新たなウェブサイトを有効にするために、ウェブサーバを（完全に）再起動する必要があります。

=== fcgid 経由の PHP を有効にする ===

{{Package|www-apache/mod_fcgid}} と {{Package|dev-lang/php}} をインストール。PHP パッケージには、<code>cgi</code> USE フラグの設定が必要:

{{emerge|mod_fcgid php}}

{{Path|mod_fcgid.conf}} ファイルを編集:

{{FileBox|filename=/etc/apache2/modules.d/20_mod_fcgid.conf|lang=apache|1=
<IfDefine FCGID>
LoadModule fcgid_module modules/mod_fcgid.so
SocketPath /var/run/fcgidsock
SharememPath /var/run/fcgid_shm
  
AddHandler php-fcgid .php
AddType application/x-httpd-php .php
Action php-fcgid /fcgid-bin/php-fcgid-wrapper
# max request 128mb
FcgidMaxRequestLen 134217728
<Location /fcgid-bin/>
        SetHandler fcgid-script
        Options +ExecCGI
</Location>
</IfDefine>
}}

必要なディレクトリの作成: 

{{RootCmd|mkdir /var/www/localhost/htdocs/fcgid-bin}}

PHP ラッパーへのシンボリックリンクを張る:

{{RootCmd|ln -s /usr/bin/php-cgi /var/www/localhost/htdocs/fcgid-bin/php-fcgid-wrapper}}

fcgid モジュールの有効化:

{{FileBox|filename=/etc/conf.d/apache2|lang=bash|1=
APACHE2_OPTS="... -D FCGID"
}}

最後に、Apache を再起動して、すでに作成された<code>phpinfo()</code>サイトを確認します。<code>Server API</code> の値は ''CGI/FastCGI'' になるはずです。

=== Apache 2.4でmod_proxy_fcgiを使ってPHP-FPMを使う ===

PHP の 5.3 以上では、FastCGI およびプロセスマネージャー、FPM のサポートが追加されています。

以下の手法は、FilesMatch ディレクティブに基づいており、メインのサーバー設定か VirtualHost の設定の中に記載します。UNIX ソケットの場所は、php-fpm.conf 内の listen ディレクティブによって決まり、サイトや機能ごとに別々に定めることが可能です。

以下の例では、PHP モジュールの設定ファイルを置いています:

{{FileBox|filename=/etc/conf.d/70_mod_php5.conf|title=PHP-FPM を使う|lang=apache|1=
 <IfDefine PHP5>
        <FilesMatch "\.php$">
                SetHandler "proxy:unix:///var/run/php-fpm/www.sock{{!}}fcgi://localhost/"
        </FilesMatch>
  
	# Set it to handle the files
	<IfModule mod_mime.c>
		AddHandler application/x-httpd-php .php .php5 .phtml
		AddHandler application/x-httpd-php-source .phps
	</IfModule>
  
	DirectoryIndex index.php index.phtml
 </IfDefine>
}}

By default the <code>listen</code> directive is not set to a socket. First create the directory for the socket file:

{{RootCmd|mkdir /var/run/php-fpm}}

Next, update the {{Path|php-fpm.conf}} file as follows:

{{FileBox|filename=php-fpm.conf|title=Updating listen directive|lang=apache|1=
 ; The address on which to accept FastCGI requests.
 ; Valid syntaxes are:
 ;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific address on
 ;                            a specific port;
 ;   'port'                 - to listen on a TCP socket to all addresses on a
 ;                            specific port;
 ;   '/path/to/unix/socket' - to listen on a unix socket.
 ; Note: This value is mandatory.
 ;listen = 127.0.0.1:9000
listen = /var/run/php-fpm/www.sock
}}

そして、PHPおよびプロキシーのモジュールを有効にします:

{{FileBox|filename=/etc/conf.d/apache2|title=PHP およびプロキシーのモジュールを有効にする modules|lang=bash|1=
APACHE2_OPTS="... -D PHP5 -D PROXY"
}}

== Usage ==

=== Services ===

==== OpenRC ====

Start the Apache server:

{{RootCmd|/etc/init.d/apache2 start}}

Add Apache to the default runlevel:

{{RootCmd|rc-update add apache2 default}}

Restart the Apache service:

{{RootCmd|/etc/init.d/apache2 restart}}

Reload Apache configuration files:

{{RootCmd|/etc/init.d/apache2 reload}}

==== systemd ====

Start the Apache server:

{{RootCmd|systemctl start apache2}}

Add Apache to the default runlevel: 

{{RootCmd|systemctl enable apache2}}

Restart the Apache service: 

{{RootCmd|systemctl restart apache2}}

== トラブルシューティング ==

=== Resources ===

The Apache server can be difficult to configure properly. Below are some resources that may be helpful when issues occur:

* [http://www.gentoo.org/proj/en/apache/doc/troubleshooting.xml トラブルシューティングガイド]
* {{Bug|www-servers/apache|search=package}}

=== Testing ===

Verifying IP interfaces and ports on which Apache2 is running on and listening to:

{{RootCmd|netstat -tulpen {{!}} grep apache|output=<pre>
tcp     0     0 0.0.0.0:80      0.0.0.0:*     LISTEN     0     10932720     4544/apache2        
tcp     0     0 0.0.0.0:443     0.0.0.0:*     LISTEN     0     10932716     4544/apache2        
</pre>}}

Testing if a connection to a Apache server is working on localhost:

{{Cmd|telnet localhost 80|output=<pre>
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
</pre>}}

Interrupt the connection test with {{Key|Ctrl}}+{{Key|c}} and {{Key|Enter}}.

=== apr_sockaddr_info_get() failed for <System_Hostname> ===

'''Error:'''

<pre>apache2: apr_sockaddr_info_get() failed for System_Hostname</pre>

'''Resolution:'''

When this occurs, add the host name to the {{Path|/etc/hosts}} file:

{{FileBox|filename=/etc/hosts|title=Adding a Hostname for Apache|1=
127.0.0.1 localhost System_Hostname
}}

== 参考 ==

* [[Lighttpd]] - 高速軽量ウェブサーバ
* [[Nginx]] - 小型で強靭、高性能なHTTPサーバ

== 外部の情報 ==

* [http://articles.slicehost.com/2010/12/2/installing-apache-on-gentoo Slicehostの記事: Installing Apache on Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-files-on-gentoo Slicehostの記事: Apache configuration files on Gentoo]
* [http://articles.slicehost.com/2010/12/3/configuring-the-apache-mpm-on-gentoo Slicehostの記事: Configuring the Apache MPM on Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-on-gentoo-part-1 Slicehostの記事: Apache configuration on Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-virtual-hosts-on-gentoo-part-1 Slicehostの記事: Apache Virtual Hosts on Gentoo]
* [http://articles.slicehost.com/2010/12/3/enabling-and-using-apache-s-mod_status-on-gentoo Slicehostの記事: Enabling and using apache's mod_status on Gentoo]
* [http://httpd.apache.org/docs/ apache.org documentation]
* [http://gentoo-en.vfose.ru/wiki/Apache2_mod_pagespeed Apache2 mod_pagespeed]


[[Category:Web Servers]]
