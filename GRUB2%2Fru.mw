<languages />
{{InfoBox stack
|{{InfoBox homepage|http://www.gnu.org/software/grub/|header=true}}
|{{InfoBox wikipedia|GNU_GRUB#GRUB 2}}
|{{InfoBox gitweb|http://git.savannah.gnu.org/cgit/grub.git/|raw=true}}
|{{InfoBox odoc|http://www.gnu.org/software/grub/grub-documentation.html}}
}}

'''GRUB2''' — загрузчик с поддержкой современных компьютеров. Это значит, что он пришёл на смену [[GRUB]] (теперь известный как "GRUB Legacy"). GRUB2 имеет абсолютно новую, отдельную от GRUB Legacy, кодовую базу и включает в себя много новых возможностей, таких как новый, шелл-подобный синтаксис, который предоставляет расширенные возможности для написания скриптов. Пользователям GRUB Legacy рекомендуется перейти на GRUB2.

Для быстрого знакомства посмотрите статью [[GRUB2 Quick Start/ru|быстрое знакомство с GRUB2]]

== Установка ==

Пакет {{Package|sys-boot/grub}} слоттирован. Это значит, что grub-0.97 ([[GRUB|GRUB Legacy]]) и grub-2.00 могут быть установлены на одной машине, однако только один из них может быть установлен в MBR.

=== Предварительные требования ===

По умолчанию GRUB2 попытается угадать целевую платформу во время сборки. Это может быть переопределено с помощью переменной <var>GRUB_PLATFORMS</var> в {{Path|make.conf}}.

{{FileBox|filename=/etc/portage/make.conf|title=Пример настройки GRUB_PLATFORMS для поддержки EMU, EFI и PC|lang=bash|1=
GRUB_PLATFORMS="emu efi-32 efi-64 pc"
}}

Следующие платформы поддерживаются, в зависимости от целевого CPU:

{| class="table"
!
! colspan="7" | Target
|-
! Platform
! i386
! ia64
! mips
! mipsel
! powerpc
! spac64
! x86_64
|-
! arc
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
|-
! coreboot
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| style="background: PaleTurquoise; text-align: center" | 32-bit
|-
! efi
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
|-
! emu
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|-
! ieee1275
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| style="background: PaleTurquoise;  text-align: center" | 32-bit
|-
! loongson
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
|-
! multiboot
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| style="background: PaleTurquoise; text-align: center" | 32-bit
|-
! qemu
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| style="background: PaleTurquoise; text-align: center" | 32-bit
|-
! qemu-mips
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
|-
! pc
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| style="background: PaleTurquoise; text-align: center" | 32-bit
|-
|}

{{Note|Каждый раз когда значение в переменной  <var>GRUB_PLATFORMS</var> корректируется GRUB2 необходимо будет пересобрать для перекомпиляции измененных двоичных файлов. Убедитесь, что это делается с опцией <code>--newuse --deep</code>, как это показано в [[#Emerge|разделе emerge]] ниже.}}

=== Emerge ===

Чтобы установить GRUB2 используйте обычный для {{c|emerge}} синтаксис:

{{Emerge|sys-boot/grub:2|params+=--newuse --deep}}

=== Дополнительное программное обеспечение ===

Опционально, установите утилиту {{c|os-prober}} (она находится в пакете {{Package|sys-boot/os-prober}}), чтобы GRUB2 мог определять другие операционные системы при запуске {{c|grub-mkconfig}}. В большинстве случаев это даст GRUB возможность определять другие операционные системы (Windows 7, 8.1, 10 и так далее).

{{Emerge|sys-boot/os-prober|params+=--newuse}}

Установка GRUB2 (и, опционально, {{Package|sys-boot/os-prober}}) сама по себе не устанавливает загрузчик. Она лишь устанавливает программы на систему, но для установки загрузчика (чтобы он использовался для загрузки системы), необходимо выполнить дополнительные действия, о которых написано в разделе [[#Конфигурация|конфигурация]].

== Конфигурация ==

Есть два важных аспекта в конфигурации GRUB2:

# установка GRUB2 в качестве загрузчика системы
# настройка самого GRUB2

Установка GRUB2 специфична для каждого типа системы и описана в разделе [[#Установка загрузчика|установка загрузчика]]. Сначала рассмотрим настройку самого загрузчика.

=== Главный конфигурационный файл ===

Скрипт {{c|grub-mkconfig}} используется для генерации grub конфигурации. Он использует скрипты из каталога {{Path|/etc/grub.d/*}} и конфигурационный файл {{Path|/etc/default/grub}} для генерации {{Path|/boot/grub/grub.cfg}} файла, который используется самим GRUB2. 

{| class="table"
|-
! File !! Format !! Edits recommended? !! Description
|-
| {{Path|/usr/sbin/grub-mkconfig}} || POSIX shell script || {{No}} || Installed as part of the {{Package|sys-boot/grub}}:2 package. Run this script to generate {{Path|/boot/grub/grub.cfg}} after configuring the files described below.
|-
| {{Path|/boot/grub/grub.cfg}} || GRUB2 shell script || {{No}} || The file generated by {{c|grub-mkconfig}}. This file is evaluated by GRUB2's built-in script interpreter and doesn't necessarily support all POSIX commands or syntax. See the [https://www.gnu.org/software/grub/manual/grub.html#Shell_002dlike-scripting scripting reference] in the GRUB manual for supported features. Be aware that modifications to this file won't persist to the next time grub-mkconfig is run.
|-
| {{Path|/etc/grub.d/*}} || POSIX shell scripts || {{Partial|Maybe}} || Each script under {{Path|/etc/grub.d/*}} that has its execute bit set is evaluated in sequence, and the stdout is concatenated to form the final {{Path|/boot/grub/grub.cfg}} (or whatever file is given to the {{c|grub-mkconfig}} <code>-o</code> option). These scripts use the current system shell and therefore can use any supported syntax. Ideally they should be POSIX-compatible scripts, and the output script must be compatible with the GRUB2 interpreter. It may be necessary to disable or add scripts. For instance, to add menu items that couldn't be automatically generated.
|-
| {{Path|/boot/grub/custom.cfg}} || GRUB2 shell script || {{Partial|Maybe}} || The /etc/grub.d/41_custom script will reference this file to be read in at boot time if it exists.  This file provides a place to add additional entries or commands and does not require regeneration of the main grub.cfg file.
|-
| {{Path|/etc/default/grub}} || POSIX shell script || {{Yes}} || In most cases this is the only file that should be modified directly. It is mainly used to assign variables used by the scripts in {{Path|/etc/grub.d}} to generate a working configuration file. See [[GRUB2/Config_Variables|GRUB2 configuration variables]] or the [https://www.gnu.org/software/grub/manual/grub.html#Simple-configuration official reference] for supported variables.
|}

GRUB2 не требует ручного администрирования конфигураций загрузочных опций (как в случае с такими загрузчиками как [[GRUB|GRUB Legacy]] и [[LILO/ru|LILO]]). Вместо этого он может генерировать свой конфигурационный файл ({{Path|/boot/grub/grub.cfg}}) с помощью команды {{c|grub-mkconfig}}. Эта утилита использует скрипты из {{Path|/etc/grub.d/}} и настройки из {{Path|/etc/default/grub}}.

{{Warning|Утилита {{c|grub-mkconfig}} может работать не корректно, если используется программный RAID. Необходимо вручную сконфигурировать скрипты в {{Path|/etc/grub.d/}}, так как, в противном случае, после установки, система может не загрузится.
}}

После изменения одной или более настроек, запустите утилиту {{c|grub-mkconfig}} с опцией <code>-o</code>, которая указывает файл, куда необходимо сохранить конфигурацию {{Path|/boot/grub/grub.cfg}} (это конфигурационный файл GRUB2 по умолчанию):

{{RootCmd|grub-mkconfig -o /boot/grub/grub.cfg|output=<pre>
Generating grub.cfg ...
Found linux image: /boot/vmlinuz-3.3.0-gentoo
done
</pre>}}

Каждый раз, когда вызывается утилита {{c|grub-mkconfig}}, будет сгенерирована новая конфигурация. 

{{Warning|Если {{c|grub-mkconfig}} не сообщила о какой-либо найденной записи, то никаких записей не найдено. В этом случае, после перезагрузки системы, GRUB2 не предложит какого-либо выбора для загрузки, что весьма плохо и отнимет много времени для решения этой ситуации. Перед перезагрузкой, убедитесь, что вывод содержит записи об успешно найденном ядре.}}

=== Настройка параметров конфигурации ===

В основном, через следующие переменные из {{Path|/etc/default/grub}} настраивают функциональность GRUB2:

{| class="table"
! Переменная
! Объяснение
! Значение по умолчанию
|-
| <var>GRUB_DEFAULT</var>
| Определяет пункт меню выделенный по умолчанию. Может быть номером, названием пункиа, или "saved". 
| Первый найденный пункт.
|-
| <var>GRUB_TIMEOUT</var> 
| Задержка (в секундах) перед загрузкой стандартного пункта. Выставьте значение в <code>0</code> чтобы загружаться сразу или в <code>-1</code> чтобы отключить автоматическую загрузку. 
| 5 секунд.
|-
| <var>GRUB_CMDLINE_LINUX</var>
| Параметры, передающиеся командной строке ядра для каждого Linux пункта. Например, для поддержки гибернации пользователям надо добавить <code>GRUB_CMDLINE_LINUX="resume=/dev/sdXY"</code>, где {{Path|/dev/sdXY}} - своп-раздел.
| 
|-
| <var>GRUB_CMDLINE_LINUX_DEFAULT</var>
| Параметры, передающиеся всем не-recovery Linux-пунктам.
| 
|-
| <var>GRUB_DEVICE</var> 
| Гланое устройство (т.е. параметр ядра <code>root=</code>). Выставьте его чтобы переопределить устройство, найденное авто-детекцией {{c|grub-mkconfig}}. Например, <code>GRUB_DEVICE=/dev/ram0</code> заставит загрузчик использовать <code>root=/dev/ram0</code> в командной строке ядра.
| 
|}

Для более полного списка обратитесь к [[GRUB2/Config_Variables|списку настроек GRUB2]].

После изменения параметров пересоздайте файл настроек с помощью {{c|grub-mkconfig}}.

=== Включение или отключение конфигурационных скриптов ===

Каталог {{Path|/etc/grub.d/}} содержит скрипты, которые использует {{c|grub-mkconfig}} для генерации файла {{Path|grub.cfg}}. По умолчанию содержимое этого каталога должно выглядеть примерно так:

{{Cmd|ls /etc/grub.d/|output=<pre>
00_header  10_linux  20_linux_xen  30_os-prober  40_custom  41_custom README
</pre>}}

GRUB2 использует все установленные скрипты, которые помечены как выполняемые (по умолчанию, они все включены). Чтобы отключить любой из этих скриптов, просто удалите бит выполнения с скрипт-файла используя команду {{c|chmod}}. В следующем примере все скрипты, кроме {{Path|00_header}} и {{Path|10_linux}}, отключены:

{{RootCmd|chmod -x /etc/grub.d/<nowiki>{</nowiki>20_linux_xen,30_os-prober,40_custom,41_custom<nowiki>}</nowiki>}}

После редактирования скриптов (или удаления бита выполнения), перегенерируйте конфигурационный файл GRUB2 используя {{c|grub-mkconfig}}.

=== Манипулирование конфигурационными скриптами ===

Некоторыми функциями или некоторой функциональностью GRUB2 возможно воспользоваться только в случаи изменений в конфигурационных скриптах. Например, для поддержки двойной загрузки с FreeBSD, необходимо выполнить следующие манипуляции.

Измените конфигурационный скрипт {{Path|/etc/grub.d/40_custom}} так:  

{{FileBox|filename=/etc/grub.d/40_custom|title=Добавление двойной загрузки|<pre>
menuentry "FreeBSD" --class freebsd --class bsd --class os {
 insmod ufs2
 insmod bsd
 set root=(hd0,1)
 kfreebsd /boot/kernel/kernel
 kfreebsd_loadenv /boot/device.hints
 set kFreeBSD.vfs.root.mountfrom=ufs:/dev/ada0s1a
 set kFreeBSD.vfs.root.mountfrom.options=rw
 set kFreeBSD.hw.psm.synaptics_support=1
}
</pre>}}

{{Path|/dev/sda1}} или <code>(hd0,1)</code> это раздел в котором находится FreeBSD. В случаи использования обычной UFS инсталляции для раздела с FreeBSD, {{Path|/dev/sda1}} это контейнер (что-то вроде логического раздела). Он содержит swap и root разделы. Проверьте скрипт {{Path|40_custom}} на возможность запуска, запустив {{c|ls -la /etc/grub.d/40_custom}}. Если бит выполнения не установлен, установите его используя команду {{c|chmod u+x 40_custom}}.  

Далее, установите GRUB2 с помощью команды {{c|grub-install}} и обновите конфигурационный файл GRUB2:

{{RootCmd|grub-install /dev/sda
|grub-mkconfig -o /boot/grub/grub.cfg}}

== Установка загрузчика ==

Установка GRUB2 в качестве системного загрузчика зависит от того, как система будет загружаться (через [[BIOS]] или UEFI) и как диск, на котором должен быть установлен загрузчик, был разбит до этого (использовалась схема MBR или GPT).

Эта статья описывает следующие ситуации:

* [[#BIOS и MBR|BIOS и MBR]]
* [[#BIOS и GPT|BIOS и GPT]]
* [[#UEFI и GPT|UEFI и GPT]]

Выберите одну из инструкций подходящую для используемой системы.

=== BIOS и MBR ===

{{Note|В случаи двойной загрузки с Microsoft Windows, убедитесь, что в системе ''нет'' UEFI-прошивки. Даже если загрузка осуществляется в режиме 'legacy BIOS', Microsoft Windows может не загрузится.}}

Удостоверьтесь, что {{Path|/boot}} существует - если для нее используется отдельный раздел, убедитесь, что он смонтирован:

{{RootCmd|mount /boot}}

Запустите команду {{c|grub-install}}, которая скопиру необходимые файлы в {{Path|/boot/grub}}. На платформе PC также установится загрузочный образ в главную загрузочную запись (MBR) или в загрузочный сектор раздела. Если все пройдет успешно, после запуска {{c|grub-install}}, то следует ожидать примерно такой вывод как показано ниже:

{{RootCmd|grub-install /dev/sda|output=<pre>
Installation finished. No error reported.
</pre>}}

{{c|grub-install}} accepts a <code>--target</code> option to set the CPU architecture and system platform. If unspecified, {{c|grub-install}} will attempt to guess the proper values; on an {{Keyword|amd64}}/{{Keyword|x86}} system it will use <code>i386-pc</code> by default. {{c|grub-install}} also accepts a <code>--boot-directory</code> option to tell the GRUB2 installer which directory to look for GRUB2's boot files. This defaults to the current {{Path|/boot}} but is useful when trying to move a root partition.

==== Partitioning for BIOS with MBR ====

Be sure to leave enough free space before the first partition. Starting the first partition at sector 2048 leaves at least 1 MiB of disk space for the master boot record. It is recommended (but not mandatory) to create an additional partition for GRUB called the ''BIOS boot partition''. This partition just needs to be defined, but not formatted.

If the [[Handbook:Main_Page|Gentoo installation instructions]] were followed, this BIOS boot partition will already be available.

=== BIOS и GPT ===

{{Note|When the system is meant to dual-boot with Microsoft Windows, make sure that the system itself does ''not'' have an UEFI firmware. Even when such systems are booted in 'legacy BIOS' mode, Microsoft Windows will refuse to boot. Also, older Microsoft Windows systems might not support GPT. It is possible to use a hybrid MBR-GPT approach; see [[Hybrid partition table]].}}

If a {{Path|/boot}} partition is needed, start by mounting the {{Path|/boot}} partition:

{{RootCmd|mount /boot}}

If all goes well, after running the {{c|grub-install}} command an output such as the one below is to be expected:

{{RootCmd|grub-install /dev/sda|output=<pre>
Installation finished. No error reported.
</pre>}}

{{c|grub-install}} accepts a <code>--target</code> option to set the CPU architecture and system platform. If unspecified, {{c|grub-install}} will attempt to guess the correct values; on an {{Keyword|amd64}}/{{Keyword|x86}} system it will use <code>i386-pc</code> by default. {{c|grub-install}} also accepts a <code>--boot-directory</code> option to tell the GRUB2 installer which directory to look in for GRUB2's boot files. This defaults to the current {{Path|/boot}} but is useful when trying to move a root partition.

==== Partitioning for BIOS with GPT ====

When a GPT partition table is present on the system, a small ''BIOS boot partition'' with type <code>EF02</code> (which is different from the ''EFI System Partition (ESP)'' which has type <code>EF00</code>) will need to be available. 1 MiB will be enough to work, but 2-4 MiB is a safer option. This BIOS boot partition will hold the stage 2 of the bootloader. BIOS boot partitions do not need to be formatted with a filesystem; the {{c|grub-install}} command will overwrite any existing filesystem with one of its own.

{{Important|The BIOS boot partition is ''not'' the same partition that is commonly mounted at {{Path|/boot}}. The {{Path|/boot}} and BIOS boot are different partitions and should be handled separately. The BIOS boot partition should ''not'' be regularly mounted on the system (i.e., it should ''not'' be defined in {{Path|/etc/fstab}}). The {{Path|/boot}} partition ''can'' be regularly mounted with no issues and therefore can be present in the {{Path|/etc/fstab}} file.}}

To set a partition as a BIOS partition use the command-line tool {{c|parted}} ({{Package|sys-block/parted}}) by typing (change <code>1</code> to the number of the partition to mark as a BIOS boot partition!):

{{RootCmd|set 1 bios_grub on|prompt=(parted) |color=white}}

With {{Package|sys-apps/gptfdisk}}'s {{c|cgdisk}} utility, this is accomplished by setting the partition type to <code>0xEF02</code> and giving it a label of <code>gptbios</code>.

An EFI System Partition is not required, but it would be sensible to make sure that the BIOS boot partition is large enough to be converted to one, should the system motherboard later be upgraded to an UEFI board.

The following is the output of pressing the {{Key|p}} key using the {{c|gdisk}} utility on a GPT-partitioned disk with both a BIOS boot [0xEF02] partition and an EFI [0xEF00] partition:

{{RootCmd|gdisk /dev/sdc|output=<pre>
GPT fdisk (gdisk) version 0.8.1
 
Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present
 
Found valid GPT with protective MBR; using GPT.
 
Command (? for help): p
Disk /dev/sdc: 976773168 sectors, 465.8 GiB
Logical sector size: 512 bytes
Disk identifier (GUID): AA369F4D-37A4-4C0D-A357-DC24B99A6337
Partition table holds up to 128 entries
First usable sector is 34, last usable sector is 976773134
Partitions will be aligned on 2048-sector boundaries
Total free space is 2014 sectors (1007.0 KiB)
 
Number  Start (sector)    End (sector)  Size       Code  Name
   1            2048       828377087   395.0 GiB   8E00  Linux LVM
   2       828377088       891291647   30.0 GiB    0700  Microsoft basic data
   3       891291648       975177727   40.0 GiB    0700  Microsoft basic data
   4       975177728       976754687   770.0 MiB   8300  Linux filesystem
   5       976754688       976756735   1024.0 KiB  EF02  BIOS boot partition
   6       976756736       976773134   8.0 MiB     EF00  EFI System
 
Command (? for help): 
</pre>}}

{{Note|The <code>0x</code> hexadecimal prefix does not need to be entered for GPT when using {{c|fdisk}}.}}

Using the same setup, the {{c|parted}} utility gives output with slightly different syntax:

{{RootCmd|parted /dev/sdc|output=<pre>
GNU Parted 3.0
Using /dev/sdc
(parted) print
...
Sector size (logical/physical): 512B/512B
Partition Table: gpt
  
Number  Start   End    Size    File system  Name                  Flags
 1      1049kB  424GB  424GB                Linux LVM             lvm
 2      424GB   456GB  32.2GB               Microsoft basic data
 3      456GB   499GB  42.9GB               Microsoft basic data
 4      499GB   500GB  807MB   ext2         Linux filesystem
 5      500GB   500GB  1049kB               BIOS boot partition   bios_grub
 6      500GB   500GB  8396kB               EFI System            boot
  
(parted)
</pre>}}

Creating partitions in {{c|gdisk}} is straightforward for users familiar with the {{c|fdisk}} partitioning utility. After starting {{c|gdisk}}, type {{Key|n}} (for new) in the main menu, provide beginning and end sectors (if needed), and set the partition type to <code>EF00</code> for an EFI system partition.

Users who have followed the [[Handbook:Main_Page|Gentoo installation instructions]] will already have the proper partitioning layout set up.

=== UEFI и GPT ===

Удостоверьтесь, что {{Path|/boot}} существует - если для нее используется отдельный раздел, убедитесь, что он смонтирован:

{{RootCmd|mount /boot}}

Run the {{c|grub-install}} command to copy the relevant files to {{Path|/boot/grub}}. This should install Grub2 in {{Path|/boot/grub}}, copy the core image to {{Path|/boot/efi/EFI/gentoo/grubx64.efi}}, and call [[Efibootmgr|efibootmgr]] to add a boot entry.

{{RootCmd|grub-install --efi-directory{{=}}/boot/efi|output=<pre>
Installation finished. No error reported.
</pre>}}

The above command assumes the vfat [[EFI System Partition]] (ESP) is mounted at {{Path|/boot/efi}}.  If the ESP is mounted directly at {{Path|/boot}}, use <code>--efi-directory=/boot</code>. 

{{c|grub-install}} also accepts a <code>--target</code> option to set the CPU architecture and system platform. If unspecified, {{c|grub-install}} will attempt to guess the proper values; on an AMD64 UEFI-booted system it will use <code>x86_64-efi</code> by default. {{c|grub-install}} also accepts a <code>--boot-directory</code> option to tell the GRUB2 installer which directory to look for GRUB2's boot files. This defaults to {{Path|/boot}} but is useful when trying to move a root partition.

==== Partitioning for UEFI with GPT ====

For UEFI GPT boot using GRUB2, the system ''must'' have a dedicated EFI partition containing a FAT filesystem.

The EFI partition can ''replace'' having a {{Path|/boot}} partition on {{Path|/dev/sda1}} by having a {{Path|/boot/efi}} partition on {{Path|/dev/sda1}}. This is to say a successful UEFI boot scenario using GRUB2 ''can'' operate with two partitions total (three total if a swap partition is needed): a root partition and an EFI partition. Using this configuration, the {{Path|/boot}} ''folder'' will be located in the root {{Path|/}} ''partition'' (at {{Path|/boot}}) and the EFI ''partition'' will mount ''in'' the boot ''folder'' (at {{Path|/boot/efi}}). For further clarification, see the example {{Path|/etc/fstab}} file below.

{{FileBox|filename=/etc/fstab|title=Example of an UEFI capable {{Path|/etc/fstab}} file with a swap partition:|<pre>
/dev/sda1		/boot/efi	vfat		noauto,noatime	1 2
/dev/sda2		none		swap		sw		0 0
/dev/sda3		/		ext4		noatime		0 1
</pre>}}

Generating a 100MB partition for {{Path|/boot/efi}} should provide plenty of space for holding multiple {{Path|*.efi}} files (multiple entries will most likely not be needed; most systems will only use one).

Create the partition using the partitioning [[Partition#GUID_Partition_Table|tool of choice]]. The {{c|gdisk}} ({{Package|sys-apps/gptfdisk}}) and {{c|parted}} ({{Package|sys-block/parted}}) tools fit nicely for this purpose. When using the {{c|gdisk}} utility, be sure to use type <code>EF00</code>.

Proceed to create a FAT filesystem on the EFI system partition using {{c|mkdosfs}} and add it to {{Path|/etc/fstab}} by following the example below:

{{RootCmd|mkdosfs -F 32 -n efi-boot /dev/sda1
|mkdir /boot/efi}}

{{FileBox|filename=/etc/fstab|title=Добавление записи для /boot/efi|<pre>
/dev/sda1		/boot/efi	vfat		noauto,noatime	1 2
</pre>}}

{{RootCmd|mount /boot/efi}}

{{Note|It is helpful to set the <var>GRUB_PLATFORMS</var> variable in {{Path|/etc/portage/make.conf}}. This will assist GRUB2 in determining what options to use when detecting the proper EFI target. For 32-bit UEFI systems use <code>efi-32</code>. For 64-bit use <code>efi-64</code>.}}

{{Important|In order for GRUB2 to install properly, the EFI directory ''must'' be mounted ''and'' the <code>efivars</code> kernel module must be loaded before the {{c|grub-install}} command will complete successfully.}}

==== Alternative: using the default UEFI firmware location ====

If the system's UEFI firmware fails to find GRUB2's EFI bootloader file, using the default boot loader location should provide a working solution. This circumvents the boot menu managed by [[Efibootmgr|efibootmgr]] and thus offers reduced functionality, but is less error prone. To do this, verify the EFI partition is mounted at {{Path|/boot/efi}} then copy the file {{Path|grubx64.efi}} located at {{Path|/boot/efi/EFI/gentoo/grubx64.efi}} to {{Path|/boot/efi/EFI/BOOT/BOOTX64.EFI}}. This example assumes a 64-bit UEFI system, adjust accordingly for 32-bit UEFI systems.

== Расширенные возможности ==

GRUB2 has many features that make it a very powerful boot loader. It supports:

* Booting from UEFI platforms.
* Booting from GPT partitioned drives without needing a hybrid MBR (hybrid MBR can enabled as needed for compatibility or portability).
* Booting from a [[btrfs]] formatted {{Path|/boot}} partition.
* Booting directly from a [[btrfs]] raid set without needing an [[initramfs]] for early mount setup.
* Booting directly from logical volume management (such as [[LVM|LVM2]]).
* Booting with support for DM-RAID (RAID 0, 1, 4, 5, 6, 9 and 10).
* Booting from encrypted devices (LUKS).

Some specific features are explained in more detail next.

=== Chainloading ===

GRUB2 was built with a truly improved chainload mode when compared to GRUB Legacy. To chainload another boot loader, use the <code>chainloader</code> option.

{{FileBox|filename=/boot/grub/grub.cfg|title=Chainloading another bootloader|<pre>
menuentry "Custom Super Bootloader Example" {
     insmod part_msdos
     insmod chain
     chainloader (hd1,1)+1
}
</pre>}}

For more information on chainloading, please see the [[GRUB2/Chainloading|Chainloading]] sub-page.

=== Using framebuffer display ===

To have GRUB2 use a [[framebuffer]] graphical display, re-emerge GRUB with the <code>truetype</code> USE flag enabled. This will install a default True Type font as well as a font conversion utility.

{{Emerge|--newuse sys-boot/grub:2}}

Proceed to configure the default GRUB2 configuration file located at {{Path|/etc/default/grub}}. For example:

{{FileBox|filename=/etc/default/grub|title=Framebuffer related settings|lang=bash|1=
# Set resolution and color depth
GRUB_GFXMODE=1366x768x32
 
# Keep resolution when loading the kernel
GRUB_GFXPAYLOAD_LINUX=keep
 
# Set a background image
GRUB_BACKGROUND="/boot/grub/bg.png"
 
# Use a custom font, converted using grub-mkfont utility
GRUB_FONT="/boot/grub/fonts/roboto.pf2"
}}

In order to find out what display modes the system's graphics card supports, use the following commands on the GRUB2 shell:

{{Cmd|prompt=(grub)|color=white|insmod all_video|videoinfo}}

== Устранение проблем ==

Most of the issues can be resolved by ensuring that the partition layout is correct. Make sure enough space is available before the first partition of the disk, or optionally make sure that a ''BIOS boot partition'' is available. Also verify that {{Path|/boot/grub/grub.cfg}} was correctly generated with {{c|grub-mkconfig}}, or generate one with a custom menu entry.

For more GRUB2 troubleshooting, please refer to the [[GRUB2/Troubleshooting|Troubleshooting]] sub-article.

== Смотрите также ==

There are a few specific GRUB2 resources available:

* In [[GRUB2/Chainloading|Chainloading]] the use of GRUB2 to boot other boot loaders is described. This is important to read when dual-booting systems, or when GRUB2 needs to be configured to boot ISO files.
* In [[GRUB2/AdvancedStorage|Advanced storage]] the necessary steps are documented on how to install and use GRUB2 on more advanced storage situations, such as software RAID, logical volumes or encrypted file systems.
* In [[GRUB2/Config_Variables|Configuration variables]] an exhaustive list of GRUB2 configuration variables, as used by {{Path|/etc/default/grub}}, is documented.
* In [[GRUB2/Troubleshooting|Troubleshooting]] a list of common GRUB2 errors (with their solutions) is presented.
* In [[Hybrid_partition_table|Hybrid partition table]] the use of a mixed MBR/GPT setup is documented, as well as how to use such hybrid partition layout with GRUB2.

== Внешние ресурсы ==

Для большей информации смотрите:

* [https://www.gnu.org/software/grub/manual/grub.html GNU GRUB 2 manual page]
** [https://www.gnu.org/software/grub/manual/grub.html#Network Network (PXE) section of GRUB2]
* [http://www.rodsbooks.com/gdisk/bios.html Legacy BIOS issues with GPT article]
* [http://www.rodsbooks.com/gdisk/hybrid.html GPT and Hybrid MBR article]
* [http://www.rodsbooks.com/gdisk/ GPT fdisk utility page]
* [https://wiki.archlinux.org/index.php/GRUB2 Arch Linux GRUB2 wiki article]
* [https://fedoraproject.org/wiki/GRUB_2?rd=Grub2#Encountering_the_dreaded_GRUB_2_boot_prompt Fedora GRUB2 wiki article : Encountering the dreaded GRUB2 boot prompt]
* [https://help.ubuntu.com/community/UEFIBooting ubuntu UEFI booting help]
* [http://unix.stackexchange.com/questions/109272/dualboot-freebsd-gentoo-with-grub2-mbr http://unix.stackexchange.com/questions/109272/dualboot-freebsd-gentoo-with-grub2-mbr]
* [http://daniel-lange.com/archives/75-Securing-the-grub-boot-loader.html A blog post entry on locking specific GRUB2 boot entries with a password]


[[Category:Bootloaders]]
