<languages />

{{Metadata|abstract=Xorg的是X Window服务器，它允许用户在他们的指尖创造一个图形环境。本指南解释了什么是Xorg，如何安装它，以及各种配置选项。}}

Xorg的是X Window服务器，它允许用户在他们的指尖创造一个图形环境。本指南解释了什么是Xorg，如何安装它，以及各种配置选项。

== X Window服务器是什么? ==

=== 图形或命令行 ===

普通用户可能有害怕敲命令的思想。他为什么不能够指向和点击自己的方式，这难道不是（一般和Linux）Gentoo提供的自由吗？嗯，当然，你可以做到这一点！ Linux提供了许多优秀的用户界面和环境，你可以在现有的系统基础上安装。 

这是新用户遇到的最大惊喜之一: 无非是在您的系统运行的应用程序是一个图形用户界面。它并非是 '' Linux 内核的一部分或任何其他内部的系统组件。它只是您的计算机的一个强大工具，完全能使您拥有图形操作的能力。 

标准是重要的，一个标准的绘图和窗口是在屏幕上移动,通过鼠标，键盘和其他基本的东西，重要的方面用户交互的标准，并命名为“”X Window系统'，通常简称为''X11''或只是''X''。它被世界各地的Unix，Linux和Unix类操作系统使用。 

这个程序为Linux用户提供运行图形用户界面的能力，Xorg-X11使用X11的接口和标准，是XFree86项目的一个分支。 XFree86的决定使用的许可证，可能无法与GPL许可兼容;因此建议使用Xorg。官方的Portage树并不提供XFree86包。

=== X.org 项目 ===

[http://www.x.org X.org] 项目创建和维护 X11 的自由可再发行组件的开源实现系统。它是开放源码的，基于 X 11 的桌面基础软件。 

Xorg之间提供了一个接口硬件和图形软件你想运行。除此之外，Xorg完全具有 Network-aware，这意味着你可以运行一个应用程序在一个系统上,同时查看不同的系统。 

== 安装 ==

安装Xorg之前，你需要准备好你的系统。首先，我们将设置内核，使其支持输入设备和显卡。然后，我们将做好准备配置 {{Path|/etc/portage/make.conf}}， 使驱动程序和Xorg包正确的编译并安装。 

=== 输入驱动程序支持 ===

默认情况下，Xorg 使用 <code>evdev</code><ref name=evdev>[[evdev]]</ref>， 它是一个通用的输入驱动程序。 你需要激活<code>evdev</code>支持通过更改你的内核配置。如果你不知道如果配置你的内核，请看[[Kernel/Gentoo_Kernel_Configuration_Guide|Kernel Configuration Guide]] 

{{KernelBox|title=Enabling evdev in the kernel|<pre>
Device Drivers --->
  Input device support --->
  <*>  Event interface
</pre>
}}

=== 内核模式设置 ===

现代开源的视频驱动程序依赖于内核模式设置（KMS）。 KMS提供了改进的图形化引导少闪烁，更快的用户切换，内置framebuffer终端，从控制台Xorg的无缝切换，和其他功能。 KMS与传统的帧缓冲驱动程序，它必须保持'''disable'''在你的内核配置冲突。 

首先，准备好你的内核为KMS。你需要考虑你使用它的Xorg视频驱动程序做到这一步。 

{{KernelBox|title=Configuring framebuffers|<pre>
Device Drivers --->
  Graphics support --->
    Frame Buffer Devices --->
      <*> Support for frame buffer devices --->
      ## (Disable all drivers, including VGA, Intel, nVidia, and ATI)
 
    ## (Further down, enable basic console support. KMS uses this.)
    Console display driver support --->
      <*>  Framebuffer Console Support
</pre>
}}

接下来，配置内核使用正确的KMS驱动程序。英特尔，NVIDIA和AMD / ATI是最常见的显卡，所以按照代码为下文每张显卡。 

对于Intel显卡<ref>https://wiki.gentoo.org/wiki/Intel#Kernel</ref>: 

{{KernelBox|title=Intel settings|<pre>
Device Drivers --->
  Graphics support --->
    /dev/agpgart (AGP Support) --->
    <*>  Intel 440LX/BX/GX, I8xx and E7x05 chipset support
    Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
    <*>  Intel 8xx/9xx/G3x/G4x/HD Graphics
    [*]    Enable modesetting on intel by default
</pre>
}}

对于 NVidia 显卡: 

{{KernelBox|title=nVidia settings|<pre>
Device Drivers --->
  Graphics support --->
    Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
    <*>    Nouveau (nVidia) cards
</pre>
}}

对于新的 AMD/ATI 显卡 ([[ATI_FAQ|RadeonHD 2000 and up]])，emerge {{Package|x11-drivers/radeon-ucode}}或 {{Package|sys-kernel/linux-firmware}}。一旦其中的某个包被安装，在[[Radeon#Firmware|firmware section]] 关于 [[Radeon|Radeon article]]配置详细的内核参数： 

{{KernelBox|title=AMD/ATI settings|<pre>
## (Setup the kernel to use the radeon-ucode firmware)
Device Drivers --->
  Generic Driver Options --->
  [*]  Include in-kernel firmware blobs in kernel binary
  ## # ATI card specific, (see Radeon page for details of firmware to include)
   (radeon/<YOUR-MODEL>.bin ...)
  ## # all:
   (/lib/firmware/) Firmware blobs root directory
 
## (Enable Radeon KMS support)
Device Drivers --->
  Graphics support --->
  <*>  Direct Rendering Manager --->
  <*>    ATI Radeon
  [*]      Enable modesetting on radeon by default
  [ ]      Enable userspace modesetting on radeon (DEPRECATED)
</pre>
}}

{{Note/zh-cn|老的 Radeon 显卡 (X1900 series 甚至更老) 不需要{{Package|x11-drivers/radeon-ucode}} 包或其他任何配置。 只启用直接渲染管理和ATI Radeon模式设置即可。}}

{{Note/zh-cn|Linux kernel >{{=}} 3.9 没有 ''开启radeon的上述选项，因为它在默认情况下已经开启了。}}

现在KMS已经被设置，继续准备下一节，修改 {{Path|/etc/portage/make.conf}} 。

=== make.conf 配置===

现在内核已经配置好了，但是两个重要的变量必须提前在你安装Xorg之前，在 {{Path|/etc/portage/make.conf}}文件中进行配置。 

第一个变量是 <var>VIDEO_CARDS</var>。这是用于设置你打算使用的视频驱动程序,它通常是基于你的显卡。对于NVIDIA显卡最常用的配置是：<code>nouveau</code> ；对于ATI(AMD)显卡常用的配置是：<code>radeon</code> 。NVIDIA和AIT都有积极发展,且支持开源驱动程序。 

{{Note/zh-cn|你也可以试试NVidia 或AMD/ATI各自的闭源驱动: NVIDIA：<code>nvidia</code> ；AMD:<code>fglrx</code> 。 然而，设置闭源驱动不在本指南的范围之内，请阅读[[NVidia/nvidia-drivers|Gentoo Linux nVidia Guide]] 和[[ATI_FAQ|Gentoo Linux ATI FAQ]]. 如果你不知道该挑选哪个闭源驱动，请仔细阅读这些指南以获得更多信息。}}

<code>intel</code> 驱动程序可用于台式机或笔记本电脑常见的英特尔集成显卡芯片组。 

{{Note/zh-cn|<var>VIDEO_CARDS</var> 这个变量可含有多个值，只要用空格隔开它们即可。}}

第二个变量设置是： <var>INPUT_DEVICES</var>，它用于确定需要构建哪些输入设备驱动程序。在大多数情况下设置他 <code>evdev</code><ref name=evdev /> 应该就可以了。 如果您使用其他输入设备,例如笔记本电脑的Synaptics touchpad（触摸板）,一定要将它添加到<var>INPUT_DEVICES</var>。 

决定哪些驱动程序将被使用，然后增加必要的配置到{{Path|/etc/portage/make.conf}} 这个文件: 

{{CodeBox|title=Sample make.conf entries|lang=bash|1=
## (For mouse, keyboard, and Synaptics touchpad support)
INPUT_DEVICES="evdev synaptics"
## (For nVidia cards)
VIDEO_CARDS="nouveau"
## (For AMD/ATI cards)
VIDEO_CARDS="radeon"
}}

如果建议的设置不起作用，emerge {{Package|x11-base/xorg-drivers}}（请参阅下面的步骤）。检查所有可用的选项，并选择适用于该系统那些选项。这个例子是用于使用键盘，鼠标，Synaptics触摸板，以及Radeon显卡的系统配置。 

{{Emerge|x11-base/xorg-drivers|params+=--verbose|output=<pre>
 
These are the packages that would be merged, in order:
 
Calculating dependencies... done!
[ebuild   R   ]  x11-base/xorg-drivers-1.9  INPUT_DEVICES="evdev synaptics
-acecad -aiptek -elographics% -fpit% -joystick -keyboard -mouse -penmount -tslib
-virtualbox -vmmouse -void -wacom"
VIDEO_CARDS="radeon -apm -ark -ast -chips -cirrus -dummy -epson -fbdev -fglrx
(-geode) -glint -i128 (-i740) (-impact) -intel -mach64 -mga -neomagic (-newport)
-nouveau -nv -nvidia -r128 -rendition -s3 -s3virge -savage -siliconmotion -sis
-sisusb (-sunbw2) (-suncg14) (-suncg3) (-suncg6) (-sunffb) (-sunleo) (-suntcx)
-tdfx -tga -trident -tseng -v4l -vesa -via -virtualbox -vmware (-voodoo) (-xgi)"
0 kB
</pre>
}}

设置所有必需的变量后，可以安装Xorg：

{{Emerge|x11-base/xorg-server}}

{{Note/zh-cn| {{Package|x11-base/xorg-x11}} meta-package 可以被安装而不是轻量化的 {{Package|x11-base/xorg-server}}。在功能上{{Package|x11-base/xorg-x11}} 和 {{Package|x11-base/xorg-server}} 是一样的。 然而，{{Package|x11-base/xorg-x11}}附带更多的包，但大多数的系统可能不需要。他的附加软件包，包括各式各样的语言字体包，但它们不是X11工作框架所必需的。}}

当安装完成后，一些环境变量需要在继续之前重新初始化。更新 profile命令配置文件：

{{RootCmd
|env-update
|source /etc/profile
}}

=== NVidia 用户===

For NVidia users it might be beneficial to run 运行<tt>nvidia-xconfig</tt>对于NVidia用户是有用的，为了运行{{Path|xorg.conf}} 文件指定的显卡，如果你没有这个文件： {{Path|xorg.conf}}，那么你需要手动创建如下。 如果缺失 {{Path|xorg.conf}}这个文件，当你试图<tt>startx</tt>， 有时会在终端产生"No screens found" 的错误提示。

当然 NVidia 驱动只有在重启计算机后才会运行，确保在重启系统前执行：<tt>nvidia-xconfig</tt>。

{{RootCmd|nvidia-xconfig}}

如果可能的话，建议设置OpenGL渲染硬件渲染器，而不是软件渲染器：

{{RootCmd|eselect opengl set nvidia}}

== 配置 ==

The X server is designed to work out-of-the-box, with no need to manually edit Xorg's configuration files. It ''should'' detect and configure devices such as displays, keyboards, and mice.

Try [[#Using_startx|using startx]] without editing any configuration files. If Xorg will not start, or there is some other problem, then manual configuration of Xorg will be needed. This is explained in the following section. 

{{Note|If changes have been made to the kernel, do not forget to '''restart the system''' ''before'' using <tt>startx</tt> in order to be using the newly built kernel. If the kernel was updated to a newer version in the process this will most likely require the bootloader's configuration files to be updated as well.}}

===  {{Path|xorg.conf.d}} 目录 ===

{{Important|Configuring files in {{Path|xorg.conf.d}} should be seen as a last resort option. If possible it is desirable to run Xorg without any special configuration.}}

Most of the configuration files for Xorg are stored in {{Path|/etc/X11/xorg.conf.d/}}. Each file is given a unique name and ends in {{Path|.conf}}. The file names in Xorg's configuration directory will read in alpha numeric order. For example, {{Path|10-evdev.conf}} will be read before {{Path|20-synaptics.conf}}; {{Path|a-evdev.conf}} will be read before {{Path|b-synaptics.conf}}, and so on. The files in this directory are not required to be numbered, but doing so will help keep them organize. Organization is helpful in when debugging faulty configuration files.

{{Note|Xorg provides example configurations in {{Path|/usr/share/doc/xorg-server-${version}/xorg.conf.example.bz2}}. These can be used to create custom configuration files in {{Path|/etc/X11/xorg.conf.d/}}. The examples are heavily commented, but if more documentation regarding the syntax is needed <tt>man xorg.conf</tt> is always available. Other examples can be found in the section [[#Other_resources|Other resources]] at the end of this guide.}}

===使用 startx ===

Try {{c|startx}} to start up the X server. {{c|startx}} is a script that executes an ''X session''; that is, it starts the X server and some graphical applications on top of it. It decides which applications to run using the following logic: 

* If a file named {{Path|.xinitrc}} exists in the home directory, it will execute the commands listed there.

* Otherwise, it will read the value of the <var>XSESSION</var> variable and will execute one of the sessions available in {{Path|/etc/X11/Sessions/}} accordingly. The value of <var>XSESSION</var> can be set in the {{Path|/etc/env.d/90xsession}} file to make a default session for all users on the system. For example, as root, run:

: {{RootCmd|echo XSESSION{{=}}"Xfce4" > /etc/env.d/90xsession}}

: This will create the {{Path|90xsession}} file and set the default X session to [[Xfce/Guide|Xfce]]. Remember to run {{c|env-update}} after making changes to {{Path|90xsession}}.

{{Cmd|startx}}

If no window manager has been installed a solid black screen will appear. Since this can also be a sign that something is wrong, the {{Package|x11-wm/twm}} and {{Package|x11-terms/xterm}} packages can be installed only to test X. 

Once the programs are installed, run <tt>startx</tt> again. A few {{c|xterm}} windows should appear, making it easy to verify the X server is working correctly. Once satisfied with the results, unmerge {{Package|x11-wm/twm}} and {{Package|x11-terms/xterm}} if installed in the step above to remove the testing packages. They will not be needed to setup a proper desktop environment.

=== 调整 X 设置 ===

==== 设置屏幕分辨率 ====

If the screen resolution looks to be wrong, you will need to check two sections in your {{Path|xorg.conf.d}} configuration. First of all, you have the ''Screen'' section which lists the resolutions that your X server will run at. This section might not list any resolutions at all. If this is the case, Xorg will estimate the resolutions based on the information in the second section, ''Monitor''. 

Now let us change the resolution. In the next example from {{Path|/etc/X11/xorg.conf.d/40-monitor.conf}} we add the <code>PreferredMode</code> line so that our X server starts at 1440x900 by default. The <code>Option</code> in the <code>Device</code> section must match the name of your monitor (<code>DVI-0</code>), which can be obtained by running <tt>xrandr</tt>. Install <tt>xrandr</tt> (<tt>emerge xrandr</tt>) just long enough to get this information. The argument after the monitor name (in the <code>Device</code> section) must match the <code>Identifier</code> in the <code>Monitor</code> section. 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier  "RadeonHD 4550"
  Option      "Monitor-DVI-0" "DVI screen"
EndSection
Section "Monitor"
  Identifier  "DVI screen"
  Option      "PreferredMode" "1440x900"
EndSection
</pre>
}}

Run X (<tt>startx</tt>) to discover it uses the desired resolution.

====多显示器====

More than one monitor in can be established in {{Path|/etc/X11/xorg.conf.d/}}. Give each monitor a unique identifier, then list its physical position, such as "RightOf" or "Above" another monitor. The following example shows how to configure a DVI and a VGA monitor, with the VGA monitor as the right-hand screen: 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier "RadeonHD 4550"
  Option     "Monitor-DVI-0" "DVI screen"
  Option     "Monitor-VGA-0" "VGA screen"
EndSection
Section "Monitor"
  Identifier "DVI screen"
EndSection
Section "Monitor"
  Identifier "VGA screen"
  Option     "RightOf" "DVI screen"
EndSection
</pre>
}}

==== 配置键盘 ====

To setup X to use an international keyboard create the appropriate config file in {{Path|/etc/X11/xorg.conf.d/}}. This example features a Czech keyboard layout: 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/30-keyboard.conf|output=<pre>
Section "InputClass"
        Identifier "keyboard-all"
        Driver "evdev"
        Option "XkbLayout" "us,cz"
        Option "XkbModel" "logitech_g15"
        Option "XkbRules" "xorg"
        Option "XkbOptions" "grp:alt_shift_toggle,grp:switch,grp_led:scroll,compose:rwin,terminate:ctrl_alt_bksp"
        Option "XkbVariant" ",qwerty"
        MatchIsKeyboard "on"
EndSection
</pre>
}}

The "terminate" command (<code>terminate:ctrl_alt_bksp</code>) lets users kill the X session by using the {{Key|Ctrl}}+{{Key|Alt}}+{{Key|Backspace}} key combination. This will, however, make X exit disgracefully -- something that users might want to avoid. It can be useful when programs have frozen the display entirely, or when configuring and tweaking the Xorg environment. Be careful when killing the desktop with this key combination - most programs really do not like it when they are ended this way. Some, if not all, of the information that has not been written to the disk (information stored in "open documents") will be lost.

==== 结束 ====

Run <tt>startx</tt> and be happy about the result. Congratulations, you now (hopefully) have a working Xorg! The next step is to install a useful window manager or desktop environment such as [[KDE]], [[GNOME]], or [[Xfce]]. Information on installing these desktop environments can be found here on the wiki.

=== 另请参阅 ===

* [[Wayland]] - The next generation window manager for Linux.

== 外部资源 ==

=== 创建和编辑配置文件 ===

First of all, <tt>man xorg.conf</tt> and <tt>man evdev</tt><ref name=evdev /> provide quick yet complete references about the syntax used by these configuration files. Be sure to have them open on a terminal when editing Xorg configuration files! 

There are also many online resources on editing config files in {{Path|/etc/X11/}}. Only a few are listed here; use a choice favorite search engine to find more.

==其他资源==

More information about installing and configuring various graphical desktop environments and applications can be found in the [http://www.gentoo.org/doc/en/?catid=desktop Gentoo Desktop Documentation Resources] section of our documentation. 

When upgrading to xorg-server 1.9 or higher, be sure to read the [https://wiki.gentoo.org/wiki/X_server/upgrade migration guide]. 

X.org provides many [http://www.x.org/wiki/FAQ FAQs] on their website, in addition to their other documentation.

== References ==
{{reflist}}

{{Migrated|originalauthors=swift, nightmorph}}
[[Category:X.Org]]
