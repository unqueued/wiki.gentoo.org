<languages />

{{Metadata|abstract=Xorg的是X Window  server，它让用户通过他们的指尖来拥有一个图形环境。本指南解释了什么是Xorg，如何安装它，以及各种配置选项。}}

Xorg是[[X server|X Window server]] ，它允许用户通过他们的指尖创造一个图形环境。本指南[[Article description::解释了什么是Xorg，如何安装它，以及各种配置选项。]]

== X Window server 是什么? ==

=== 图形VS命令行 ===

一般来说，大多数用户可能都有点害怕敲命令。它为什么不能够按照自己的方式，比如用鼠标指向并点击？这难道不是Gentoo（和大多数的Linux发行版）提供的自由吗？嗯，当然，你可以做到这一点！Linux提供了许多优秀的用户界面和环境，你可以在现有的系统基础上进行安装。 

这是新用户感到的最大惊喜之一: 在您的系统上运行的图形界面只不过是一个应用程序，而且它“并非”是Linux 内核的一部分或任何其他的内部系统组件。它是你工作站的一个强大工具，并能使您拥有完全的图形化的操作能力。 

标准是重要的，一个标准的绘图和移动窗口显示在屏幕上,需要通过鼠标，键盘和其他基本的东西来实现。用户交互的标准是重中之重，把他命名为“”X Window System'，通常简称为''X11''或只是''X''。它被世界各地的Unix，Linux和Unix类操作系统广泛使用。 

这个程序为Linux用户提供运行图形界面的能力，Xorg-X11使用X11的接口和标准，是XFree86项目的一个分支。 XFree86使用的许可证，可能无法与GPL许可兼容；因我们此建议使用Xorg。且官方的Portage树不再提供XFree86包。

=== X.org 项目 ===

[http://www.x.org X.org] 项目旨在创建和维护一个自由、可再发行的并且开源的 X11。它是一个开放源码，基于X11桌面所需要的基本软件。 

Xorg在一个你想运行的硬件和图形软件之间提供了一个接口。除此之外，Xorg也是一个完全的Network-aware，这意味着你可以一个系统上运行一个应用程序,并且还能同时查看其他不同的系统。 

== 安装 ==

在安装Xorg之前，你需要为你的系统做一些准备。首先，我们将设置内核，使其支持输入设备和显卡。现在，我们准备配置{{Path|[[:/etc/portage/make.conf]]}} ，使驱动程序和Xorg包正确编译并安装。 

=== 输入驱动程序支持 ===

您将需要通过对您的内核配置更改，来激活对事件接口(<var>CONFIG_INPUT_EVDEV</var>) 的支持。如果你不知道如何配置你的内核，请看[[Kernel/Gentoo_Kernel_Configuration_Guide|内核配置指南]]。 

{{KernelBox|title=在内核开启evdev|1=
Device Drivers --->
  Input device support --->
  <*>  Event interface
}}

=== 内核模块设置 ===

现代开源的显卡驱动程序依赖于内核模块（KMS）的设置。 KMS提供了改进的图形化引导，更快的用户切换，内置framebuffer终端，便于从控制台Xorg的无缝切换和其他功能。

{{Important/zh-cn|KMS与传统的帧缓冲驱动程序冲突，必须在你的内核配置中保持'''disable'''。}}

首先，准备为你的内核配置好KMS。你必须要做这一步,无论你正在使用哪个Xorg显卡驱动程序。 

{{KernelBox|title=Disable legacy framebuffer support and enable basic console FB support|1=
Device Drivers --->
   Graphics support --->
      Frame Buffer Devices --->
         <*> Support for frame buffer devices --->
         ## (Disable all drivers, including VGA, Intel, nVidia, and ATI, except EFI-based Framebuffer Support, only if you are using UEFI)
 
    ## (Further down, enable basic console support. KMS uses this.)
    Console display driver support --->
      <*>  Framebuffer Console Support
}}

接下来，配置内核使用正确的KMS驱动。Intel，NVIDIA和AMD / ATI是最常见的显卡，所以接下来请按照您自己的显卡来操作。 

对于Intel显卡请看[[Intel#Kernel|kernel section of the Intel article]].

对于 NVidia 显卡: 

{{KernelBox|title=nVidia settings|1=
Device Drivers --->
   Graphics support --->
      <M/*>  Nouveau (nVidia) cards
}}

For newer AMD/ATI cards ([[ATI_FAQ|RadeonHD 2000 and up]]), emerge {{Package|sys-kernel/linux-firmware}} (the package includes {{Path|radeon}} and {{Path|amdgpu}}; the separate package {{Package|x11-drivers/radeon-ucode}} doesn't exist anymore). Once one of these packages has been installed, make the Radeon driver a module in the kernel or, optionally, configure the kernel as detailed in the [[Radeon#Firmware|firmware section]] of the [[Radeon|Radeon article]] or, for newer AMD graphics cards (GCN1.1+), the [[AMDGPU#Firmware|firmware section]] of article [[AMDGPU]]: 

{{KernelBox|title=AMD/ATI Radeon settings|1=
## (Setup the kernel to use the radeon-ucode firmware)
Device Drivers --->
   Generic Driver Options --->
   [*]  Include in-kernel firmware blobs in kernel binary
  ## # ATI card specific, (see Radeon page for details which firmware files to include)
   (radeon/<CARD-MODEL>.bin ...)
  ## # Specify the root directory
   (/lib/firmware/) External firmware blobs to build into the kernel binary
 
## (Enable Radeon KMS support)
Device Drivers --->
   Graphics support --->
   <M/*>    ATI Radeon
   [*]      Enable modesetting on radeon by default
   [ ]      Enable userspace modesetting on radeon (DEPRECATED)
}}

{{KernelBox|title=AMDGPU settings|1=
## (Setup the kernel to use the amdgpu firmware)
Device Drivers --->
   Generic Driver Options --->
   [*]  Include in-kernel firmware blobs in kernel binary
  ## # AMD card specific, (see AMDGPU page for details which firmware files to include)
   (amdgpu/<CARD-MODEL>.bin ...)
  ## # Specify the root directory
   (/lib/firmware/) External firmware blobs to build into the kernel binary
 
## (Enable Radeon KMS support)
Device Drivers --->
   Graphics support --->
   <M/*> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
   <M/*> AMD GPU
         [ /*] Enable amdgpu support for SI parts
         [ /*] Enable amdgpu support for CIK parts 
         [*]   Enable AMD powerplay component  
         ACP (Audio CoProcessor) Configuration  ---> 
             [*] Enable AMD Audio CoProcessor IP support (CONFIG_DRM_AMD_ACP)
         Display Engine Configuration  --->
             [*] AMD DC - Enable new display engine
             [ /*] DC support for Polaris and older ASICs
             [ /*] AMD FBC - Enable Frame Buffer Compression
             [ /*] DCN 1.0 Raven family
   <M/*> HSA kernel driver for AMD GPU devices
}}

{{Note|Old Radeon cards (X1900 series and older) do not need extra firmware or any firmware configuration.  For them simply enable the Direct Rendering Manager (DRM) and ATI Radeon modesetting.}}

{{Note/zh-cn|Linux kernel >{{=}} 3.9 没有 ''Enable modesetting on radeon by default'' 这个选项，因为它默认已经开启了。如果您发现该选项在新内核丢失，请不要惊慌。}}

{{Note|Linux kernel >{{=}} 4.15 does include ''Display Core'' (DC) which is required for AMDGPU to work. This newer driver was written for GCN5.0 ''Vega'' and DCN1.0 ''Raven Ridge'' (APU), but also adds additional functionality for older Radeon graphics cards starting with GCN1.1 ''Southern Islands'' and newer. It is planned to make this additional support for older Radeon cards the standard, so do not be alarmed if you find this option missing in newer kernels.}}

退出内核配置 [[Kernel/Rebuild|重建内核，并重新启动]].

现在KMS已经被设置，继续准备下一节，修改 {{Path|[[:/etc/portage/make.conf]]}} 。

=== make.conf ===

现在内核已经配置好了，但是两个重要的变量必须在你安装Xorg之前，在{{Path|[[:/etc/portage/make.conf]]}}中进行配置。 

The first variable is <var>[[:/etc/portage/make.conf#VIDEO_CARDS|VIDEO_CARDS]]</var>. This is used to set the video drivers that you intend to use and is usually based on the kind of video card you have. The most common settings are <code>nouveau</code> for nVidia cards or <code>radeon</code> for ATI cards. Both have actively developed, well-supported open-source drivers.  If you have a newer AMD video card (Southern Islands and up), you may also try the new open-source <code>amdgpu</code> driver. See the [[AMDGPU]] article for more details.

{{Note/zh-cn|你也可以试试NVidia 或AMD/ATI各自的闭源驱动: NVIDIA：<code>nvidia</code> ；AMD：<code>fglrx</code> 。 然而，如何设置闭源驱动不在本指南的范围之内，请阅读[[NVidia/nvidia-drivers|Gentoo Linux nVidia Guide]] 和[[ATI_FAQ|Gentoo Linux ATI FAQ]]。如果你不知道该挑选哪个闭源驱动，请仔细阅读这些指南以获得更多信息。}}

<code>intel</code> 驱动程序可用于台式机或笔记本电脑常见的英特尔集成显卡芯片组。 

{{Note/zh-cn|<var>VIDEO_CARDS</var> 这个变量可以含有多个值，只要用空格隔开它们即可。}}

The second variable is [[:/etc/portage/make.conf#INPUT_DEVICES|<var>INPUT_DEVICES</var>]] and is used to determine which drivers are to be built for input devices. 

[https://gitweb.gentoo.org/repo/gentoo.git/commit/?id=d3ac878318dd96a88190a13b5ac7572ec0c56380 make.defaults] has [[Libinput]] as the default input device driver.

To check what is presently activated, run:

{{Cmd|portageq envvar INPUT_DEVICES}}

In case alternative input devices, such as a Synaptics touchpad for a laptop are needed, be sure to add them to <var>INPUT_DEVICES</var> the {{Path|[[:/etc/portage/make.conf]]}} file: 

{{CodeBox|title=Sample make.conf entries|lang=bash|1=
## (For mouse, keyboard, and Synaptics touchpad support)
INPUT_DEVICES="libinput synaptics"
## (For nVidia cards)
VIDEO_CARDS="nouveau"
## (For AMD/ATI cards)
VIDEO_CARDS="radeon"
}}

If the suggested settings does not work emerge the {{Package|x11-base/xorg-drivers}} package (see the step below). Check all the options available and choose those which apply to the system. This example is for a system with a keyboard, mouse, Synaptics touchpad, and a Radeon video card. 

{{Emerge|x11-base/xorg-drivers|params+=--verbose|output=<pre>
 
These are the packages that would be merged, in order:
 
Calculating dependencies... done!
[ebuild   R   ]  x11-base/xorg-drivers-1.9  INPUT_DEVICES="evdev synaptics
-acecad -aiptek -elographics% -fpit% -joystick -keyboard -mouse -penmount -tslib
-virtualbox -vmmouse -void -wacom"
VIDEO_CARDS="radeon -apm -ark -ast -chips -cirrus -dummy -epson -fbdev -fglrx
(-geode) -glint -i128 (-i740) (-impact) -intel -mach64 -mga -neomagic (-newport)
-nouveau -nv -nvidia -r128 -rendition -s3 -s3virge -savage -siliconmotion -sis
-sisusb (-sunbw2) (-suncg14) (-suncg3) (-suncg6) (-sunffb) (-sunleo) (-suntcx)
-tdfx -tga -trident -tseng -v4l -vesa -via -virtualbox -vmware (-voodoo) (-xgi)"
0 kB
</pre>
}}

设置好所有必需的变量后，我们可以安装Xorg了：

{{Emerge|x11-base/xorg-server}}

{{Note/zh-cn| 可以安装软件包组{{Package|x11-base/xorg-x11}}，而不是轻量化的{{Package|x11-base/xorg-server}}。在功能上{{Package|x11-base/xorg-x11}} 和 {{Package|x11-base/xorg-server}} 它们是一样的。然而，{{Package|x11-base/xorg-x11}}附带更多的包，涵盖大多数系统可能非必须的功能。他的附加软件包，包括各式各样的语言字体包，它们不是X11工作框架所必需的。}}

当安装完成后，在继续之前重新初始化一些环境变量。更新profile配置文件命令：

{{RootCmd
|env-update
|source /etc/profile
}}

=== NVidia 用户===

为了运行{{Path|xorg.conf}} 文件指定的显卡,执行{{c|nvidia-xconfig}} ，这对于NVidia用户是有用的。如果你没有这个文件：{{Path|xorg.conf}}，那么你需要手动创建详情如下。如果缺失 {{Path|xorg.conf}}这个文件，当你试图{{c|startx}}，有时会在终端产生"No screens found" 的错误提示。

当然 NVidia 驱动只有在重启计算机后才会启用运行，确保在重启系统前执行{{c|nvidia-xconfig}}：。

{{RootCmd|nvidia-xconfig}}

如果可能的话，建议设置使用OpenGL渲染硬件渲染器，而非软件渲染器：

{{RootCmd|eselect opengl set nvidia}}

== 配置 ==

[[X server]] 被设计为开箱即用，即无需手动编辑Xorg配置文件。它“应该”能检测和配置例如显示器，键盘和鼠标这些设备。

试试[[#Using_startx|using startx]]而非直接编辑配置文件。如果Xorg无法启动，那么可能有其他问题，此时，你将需要再去手动编辑Xorg配置。这在下面的部分进行说明。 

{{Note/zh-cn|如果改变了内核配置，不要忘记在'''重启系统''' '''之前'''执行 {{c|startx}} 来使用新构建的内核。 如果内核被更新到新版本，这一般需要更新引导启动程序的配置文件。}}

===  {{Path|xorg.conf.d}} 目录 ===

{{Important/zh-cn| 在 {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|xorg.conf.d]]}}的配置文件，应该被视为最后的设置选项。如果可能的话，直接运行没有任何其他特殊设置的Xorg。}}

大部分Xorg的配置文件存储在 {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|/etc/X11/xorg.conf.d/]]}}。 每个文件的名字都是独一无二的并且以{{Path|.conf}}为扩展名。 Xorg配置目录中的文件名会按字母顺序读取。例如，{{Path|10-evdev.conf}}会在{{Path|20-synaptics.conf}}之前被读取； {{Path|a-evdev.conf}} 会在{{Path|b-synaptics.conf}}之前被读取…… 此目录中的文件不需要编号,但是如果编号，那么会帮助他们有组织化。组织化有助于调试错误的配置文件。

{{Note/zh-cn|Xorg提供了示例配置：{{Path|/usr/share/doc/xorg-server-${version}/xorg.conf.example.bz2}}。这些可以用来自定义配置文件{{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|/etc/X11/xorg.conf.d/]]}}。  {{c|man xorg.conf}} 这些例子有详细的注释，但如果需要有关具体详细的操作说明， 始终可用。其他的例子可以在本指南最后的[[#Other_resources|其他资源]]看到。}}

===使用 startx ===

试试{{c|startx}}来运行 [[X server]]。 {{c|startx}}即执行一个'X会话'脚本;这个脚本{{Package|x11-apps/xinit}}生成. 也就是说，它启动了X服务器并在它上面的一些图形应用程序。它使用下面的方式来判断该运行哪些应用程序： 

*如果一个叫做{{Path|.xinitrc}}的文件存在于主目录（home）中，它会执行里面列出的命令。

* 否则，它会从{{Path|/etc/env.d/90xsession}}读取 <var>XSESSION</var> 这个变量的值，并且将执行一个与之相对应的会话。<var>XSESSION</var>的值可以在{{Path|/etc/X11/Sessions/}}文件中进行配置。例如，设置系统默认会话,以root身份运行：

: {{RootCmd|echo XSESSION{{=}}"Xfce4" > /etc/env.d/90xsession}}

:这将创建文件：{{Path|90xsession}}，然后设置默认X会话[[Xfce/Guide|Xfce]]。 记得在{{Path|90xsession}}修过后，执行命令{{c|env-update}}。

{{Cmd|startx}}

如果你没有安装窗口管理器，那么将会出现一个纯黑色的屏幕，此后这也可以说明，哪些东西发生了错误。{{Package|x11-wm/twm}}和{{Package|x11-terms/xterm}} 包可以用来测试X是否正常配置。 

程序安装后，再次执行 {{c|startx}}。 一些 {{c|xterm}} 窗口将会出现，因此很容易验证[[X server]]是否正常工作。如果一切正常卸载 {{Package|x11-wm/twm}} 和{{Package|x11-terms/xterm}}，如果按上面的步骤，那么你要删除测试软件包。因为我们要安装一个合适的桌面环境，而接下来并不需要它们。

会话（程序启动）也被指定为参数{{c|startx}}:

{{Cmd|startx /usr/bin/startfluxbox}}

您也可以通 X11 服务器选项，通过前面他们带的双破折号 ︰

{{Cmd|startx -- vt7}}

=== 调整 X 设置 ===

==== 设置屏幕分辨率 ====

如果屏幕分辨率看起来不正确，你需要检查你的{{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|xorg.conf.d]]}} 配置的两个部分。首先， 'Screen' 部分会列出你的 [[X server]] 所有可用分辨率选项。这一节可能不会列出所有的分辨率信息，甚至一个都没有。如果是这种情况,Xorg将根据第二部分中的信息：“Monitor”估算分辨率。 

现在让我们来更改分辨率。在下一个示例中的 {{Path|/etc/X11/xorg.conf.d/40-monitor.conf}}， 我们添加进去 <code>PreferredMode</code> 这一行，以便我们 [[X server]]，在分辨率 1440 x 900 的默认情况下启动。<code>Device</code> 部分中的 <code>Option</code> 必须与您的显示器 (<code>DVI-0</code>)的名字一致，可以通过运行 {{c|xrandr}} 的名称相匹配。安装{{c|xrandr}}. Install {{c|xrandr}} ({{c|emerge xrandr}})只是使有足够长的时间来获取此信息。(在 <code>Device</code> 部分中) 的显示器名称后面的参数必须匹配<code>Monitor</code> 节的 <code>Identifier</code>。 

{{FileBox|filename=/etc/X11/xorg.conf.d/40-monitor.conf|1=
Section "Device"
  Identifier  "RadeonHD 4550"
  Option      "Monitor-DVI-0" "DVI screen"
EndSection
Section "Monitor"
  Identifier  "DVI screen"
  Option      "PreferredMode" "1440x900"
EndSection
}}

运行 X ({{c|startx}})来看看它所使用的分辨率。

====多显示器====

可以在{{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|/etc/X11/xorg.conf.d/]]}}中配置多个显示器。给每个显示器，写出它的唯一标识符，然后列出它的物理位置，如另一台显示器是"RightOf"或"Above"。下面的例子展示了如何配置，一个DVI和VGA显示器,另外附带一个VGA的显示器在右侧屏幕: 

{{FileBox|filename=/etc/X11/xorg.conf.d/40-monitor.conf|1=
Section "Device"
  Identifier "RadeonHD 4550"
  Option     "Monitor-DVI-0" "DVI screen"
  Option     "Monitor-VGA-0" "VGA screen"
EndSection
Section "Monitor"
  Identifier "DVI screen"
EndSection
Section "Monitor"
  Identifier "VGA screen"
  Option     "RightOf" "DVI screen"
EndSection
}}

==== 配置键盘 ====

设置X使用国际键盘需要在创建适当的配置文件： {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|/etc/X11/xorg.conf.d/]]}}。在这个例子我们使用一个捷克键盘布局: 

{{FileBox|filename=/etc/X11/xorg.conf.d/30-keyboard.conf|1=
Section "InputClass"
  Identifier "keyboard-all"
  Driver "evdev"
  Option "XkbLayout" "us,cz"
  Option "XkbModel" "logitech_g15"
  Option "XkbRules" "xorg"
  Option "XkbOptions" "grp:alt_shift_toggle,grp:switch,grp_led:scroll,compose:rwin,terminate:ctrl_alt_bksp"
  Option "XkbVariant" ",qwerty"
  MatchIsKeyboard "on"
EndSection
}}

有关切换键盘布局,看[[Keyboard_layout_switching#X11|Keyboard layout switching]] .

"终止"命令 (<code>terminate:ctrl_alt_bksp</code>) 允许用户通过使用{{Key|Ctrl}}+{{Key|Alt}}+{{Key|Backspace}} 组合键来结束X会话。不过，这样退出不怎么好 -- 用户应该尽量避免这样做。但它在程序完全卡死或配置和调整 Xorg环境时很有用。请谨慎使用，通过该组合键结束桌面 — — 大多数程序真的不喜欢以这种方式结束。一些文件，比如尚未写入磁盘（比如存储在“已打开的文档”中的信息）中的数据，将丢失。

==== 即将完成 ====

运行{{c|startx}}，如果您对结果感到高兴。恭喜你，你现在 (希望如此) 拥有一个正常 Xorg!下一步是安装可用的窗口管理器或桌面环境，例如[[GNOME]]、[[KDE]]或[[Xfce]]。在 wiki 上，你可以找到有关安装这些桌面环境的更多信息。

== 参考 ==

* [[Wayland]] - The next generation windowing protocol for Linux.
* [[Security Handbook/Securing services#X|X (Security Handbook)]] - The Security Handbook's entry on securing the X server.

== 外部资源 ==

=== 创建和编辑配置文件 ===

{{c|man xorg.conf}}和{{c|man evdev}}提供了快速而又完整的参考，关于这些配置文件所使用的具体使用的语法。当你编辑 Xorg 配置文件的时候，一定要在终端上打开他们！ 

在编辑配置文件中的也有许多在线资源：{{Path|/etc/X11/}}。只有少数列出在这里;可以选择你最喜爱的搜索引擎来找到更多指导。

==其他资源==

关于安装和配置的各种图形桌面环境和应用程序更多信息，可以在我们的文档部分中找到: [[Category:Desktop|Gentoo desktop resources]] . 

当升级到xorg-server 1.9或更高版本,务必阅读[[X_server/upgrade|migration guide]]。 

除了我们这些文档，在他们自己的网站上，X.org还提供许多[http://www.x.org/wiki/FAQ FAQs]

{{Migrated|originalauthors={{Dev|SwifT}}, {{Dev|nightmorph}}}}
[[Category:X.Org]]
