<languages />

{{Warning/zh-cn|这个页面只完成了一般性翻译，等待进一步校正，请谨慎参考。谢谢。}}


{{Metadata|abstract=Xorg的是X Window  server，它让用户通过他们的指尖来拥有一个图形环境。本指南解释了什么是Xorg，如何安装它，以及各种配置选项。}}

Xorg是[[X server|X Window server]] ，它允许用户在他们的指尖创造一个图形环境。本指南解释了什么是Xorg，如何安装它，以及各种配置选项。

== X Window server 是什么? ==

=== 图形VS命令行 ===

一般来说，大多数用户可能都点有害怕敲命令的想法。它为什么不能够按照自己的方式，指向和点击命令？这难道不是（和通常的Linux发行版）Gentoo提供的自由吗？嗯，当然，你可以做到这一点！ Linux提供了许多优秀的用户界面和环境，你可以在现有的系统基础上进行安装。 

这是新用户感到的最大惊喜之一: 在您的系统上运行的图形界面只不过是一个应用程序而且。它“并非”是Linux 内核的一部分或任何其他内部的系统组件。它是你的工作站的一个强大工具，并能使您拥有完全的图形化操作能力。 

标准是重要的，一个标准的绘图和窗口是在屏幕上移动,通过鼠标，键盘和其他基本的东西，重要的方面用户交互的标准，并命名为“”X Window System'，通常简称为''X11''或只是''X''。它被世界各地的Unix，Linux和Unix类操作系统广泛使用。 

这个程序为Linux用户提供运行图形界面的能力，Xorg-X11使用X11的接口和标准，是XFree86项目的一个分支。 XFree86使用的许可证，可能无法与GPL许可兼容；因我们此建议使用Xorg。且官方的Portage树不再提供XFree86包。

=== X.org 项目 ===

[http://www.x.org X.org] 项目创建和维护一个自由、可再发行的组件、开源的 X11 。它是一个开放源码，基于X11-based的桌面所需要的基本软件。 

Xorg在一个你想运行的，硬件和图形软件之间提供了一个接口。除此之外，Xorg也是一个完全的Network-aware，这意味着你可以运行一个应用程序在一个系统上,并且还能同时查看其他不同的系统。 

== 安装 ==

安装Xorg之前，你需要准备好你的系统。首先，我们将设置内核，使其支持输入设备和显卡。然后，我们做好准备，配置{{Path|[[:/etc/portage/make.conf]]}} ，使驱动程序和Xorg包正确编译并安装。 

=== 输入驱动程序支持 ===

默认情况下，Xorg 使用 <code>[[evdev]]</code>，它是一个通用的输入驱动程序。您将需要通过对您的内核配置更改，来激活对<code>evdev</code> 的支持。如果你不知道如何配置你的内核，请看[[Kernel/Gentoo_Kernel_Configuration_Guide|Kernel Configuration Guide]] 

{{KernelBox|title=在内核开启evdev|<pre>
Device Drivers --->
  Input device support --->
  <*>  Event interface
</pre>
}}

=== 内核模块设置 ===

现代开源的视频驱动程序依赖于内核模块设置（KMS）。 KMS提供了改进的图形化引导，更快的用户切换，内置framebuffer终端，从控制台Xorg的无缝切换，和其他功能。

{{Important|KMS与传统的帧缓冲驱动程序冲突，必须在你的内核配置中保持'''disable'''。}}

首先，准备为你的内核准备好KMS。你要做这一步,无论你正在使用哪个Xorg显卡驱动程序。 

{{KernelBox|title=禁用传统帧缓冲支持，使基本的控制台支持FB|<pre>
Device Drivers --->
   Graphics support --->
      Frame Buffer Devices --->
         <*> Support for frame buffer devices --->
         ## (禁用包括 VGA、 英特尔、 nVidia、 ATI所有的驱动程序.除了基于 EFI 的帧支持，只有如果你正在使用 UEFI的话)
 
    ## (再往下，使基本的控制台支持。 KMS使用他。)
    Console display driver support --->
      <*>  Framebuffer Console Support
</pre>
}}

接下来，配置内核使用正确的KMS驱动。Intel，NVIDIA和AMD / ATI是最常见的显卡，所以接下来请按照您自己的显卡来操作。 

对于Intel显卡请看[[Intel#Kernel|kernel section of the Intel article]].

对于 NVidia 显卡: 

{{KernelBox|title=nVidia 设置|<pre>
Device Drivers --->
   Graphics support --->
      <*>  Nouveau (nVidia) cards
</pre>
}}

对于新的 AMD/ATI 显卡 ([[ATI_FAQ|RadeonHD 2000 and up]])，emerge {{Package|x11-drivers/radeon-ucode}}或 {{Package|sys-kernel/linux-firmware}}。一旦其中的某个包被安装，在[[Radeon#Firmware|firmware section]] 关于 [[Radeon|Radeon article]]配置详细的内核参数： 

{{KernelBox|title=AMD/ATI 设置 |<pre>
## (设置内核使用 radeon-ucode 固件)
 Device Drivers --->
   Generic Driver Options --->
   [*]  Include in-kernel firmware blobs in kernel binary
  ## #  ATI卡有关详细信息,包括固件，请参阅Radeon页面
   (radeon/<CARD-MODEL>.bin ...)
  ## # 指定的根目录
   (/lib/firmware/) External firmware blobs to build into the kernel binary
 
## (开启 Radeon KMS 支持)
Device Drivers --->
   Graphics support --->
   <*>    ATI Radeon
   [*]      Enable modesetting on radeon by default
   [ ]      Enable userspace modesetting on radeon (DEPRECATED)
</pre>
}}

{{Note/zh-cn|老的 Radeon 显卡 (X1900 series 甚至更老) 不需要{{Package|x11-drivers/radeon-ucode}} 包或其他任何配置。 只需启用直接渲染管理(DRM)和ATI Radeon模块即可。}}

{{Note|Linux kernel >{{=}} 3.9 does not have the ''Enable modesetting on radeon by default'' since it is already implied by default. Do not be alarmed if you find this option missing in new kernels.}}

退出内核配置 [[Kernel/Rebuild|重建内核，并重新启动]].

现在KMS已经被设置，继续准备下一节，修改 {{Path|[[:/etc/portage/make.conf]]}} 。

=== make.conf 配置===

现在内核已经配置好了，但是两个重要的变量必须在你安装Xorg之前，在{{Path|[[:/etc/portage/make.conf]]}}进行配置。 

第一个变量是<var>[[:/etc/portage/make.conf#VIDEO_CARDS|VIDEO_CARDS]]</var>。这是用于设置你打算使用的视频驱动程序,它通常是根据你的显卡来选择。对于NVIDIA显卡最常用的配置是：<code>nouveau</code> ；对于ATI(AMD)显卡常用的配置是：<code>radeon</code> 。在支持开源驱动程序方面，NVIDIA和AIT都有积极的发展,。 

{{Note/zh-cn|你也可以试试NVidia 或AMD/ATI各自的闭源驱动: NVIDIA：<code>nvidia</code> ；AMD:<code>fglrx</code> 。 然而，设置闭源驱动不在本指南的范围之内，请阅读[[NVidia/nvidia-drivers|Gentoo Linux nVidia Guide]] 和[[ATI_FAQ|Gentoo Linux ATI FAQ]]。如果你不知道该挑选哪个闭源驱动，请仔细阅读这些指南以获得更多信息。}}

<code>intel</code> 驱动程序可用于台式机或笔记本电脑常见的英特尔集成显卡芯片组。 

{{Note/zh-cn|<var>VIDEO_CARDS</var> 这个变量可以含有多个值，只要用空格隔开它们即可。}}

第二个变量设置是： <var>INPUT_DEVICES</var>，它用于确认将哪些输入设备驱动程序被构建。在大多数情况下设置 <code>[[evdev]]</code>  应该就可以了。 如果您使用有其他输入设备,例如笔记本电脑的Synaptics touchpad（触摸板）,一定要将它添加到<var>INPUT_DEVICES</var>中。 

选择使用哪些驱动程序，然后增加必要的配置设置到这个文件:{{Path|[[:/etc/portage/make.conf]]}} 

{{CodeBox|title= make.conf 文件样板|lang=bash|1=
## (对于鼠标、键盘和Synaptics touchpad的支持)
INPUT_DEVICES="evdev synaptics"
## (对于 NVidia 显卡)
VIDEO_CARDS="nouveau"
## (对于 AMD/ATI 显卡)
VIDEO_CARDS="radeon"
}}

如果推荐的设置不起作用，emerge {{Package|x11-base/xorg-drivers}}（请参阅下面的步骤）。检查所有可用的选项，并选择适用于该系统的那些选项。这个例子是用于使用键盘，鼠标，Synaptics触摸板，以及Radeon显卡的系统配置。 

{{Emerge|x11-base/xorg-drivers|params+=--verbose|output=<pre>
 
These are the packages that would be merged, in order:
 
Calculating dependencies... done!
[ebuild   R   ]  x11-base/xorg-drivers-1.9  INPUT_DEVICES="evdev synaptics
-acecad -aiptek -elographics% -fpit% -joystick -keyboard -mouse -penmount -tslib
-virtualbox -vmmouse -void -wacom"
VIDEO_CARDS="radeon -apm -ark -ast -chips -cirrus -dummy -epson -fbdev -fglrx
(-geode) -glint -i128 (-i740) (-impact) -intel -mach64 -mga -neomagic (-newport)
-nouveau -nv -nvidia -r128 -rendition -s3 -s3virge -savage -siliconmotion -sis
-sisusb (-sunbw2) (-suncg14) (-suncg3) (-suncg6) (-sunffb) (-sunleo) (-suntcx)
-tdfx -tga -trident -tseng -v4l -vesa -via -virtualbox -vmware (-voodoo) (-xgi)"
0 kB
</pre>
}}

设置好所有必需的变量后，我们可以安装Xorg了：

{{Emerge|x11-base/xorg-server}}

{{Note/zh-cn| {{Package|x11-base/xorg-x11}} 元包可以被安装，而不是轻量化的{{Package|x11-base/xorg-server}}。在功能上{{Package|x11-base/xorg-x11}} 和 {{Package|x11-base/xorg-server}} 它们是一样的。 然而，{{Package|x11-base/xorg-x11}}附带更多的包，大多数的系统可能不需要。他的附加软件包，包括各式各样的语言字体包，它们不是X11工作框架所必需的。}}

当安装完成后，在继续之前一些环境变量将需要重新初始化。更新profile配置文件命令：

{{RootCmd
|env-update
|source /etc/profile
}}

=== NVidia 用户===

为了运行{{Path|xorg.conf}} 文件指定的显卡,执行{{c|nvidia-xconfig}} 对于NVidia用户是有用的。如果你没有这个文件：{{Path|xorg.conf}}，那么你需要手动创建详情如下。如果缺失 {{Path|xorg.conf}}这个文件，当你试图{{c|startx}}，有时会在终端产生"No screens found" 的错误提示。

Also the NVidia driver will only work after a reboot, so be sure to restart the system after running {{c|nvidia-xconfig}}.

{{RootCmd|nvidia-xconfig}}

如果可能的话，建议设置使用OpenGL渲染硬件渲染器，而不是软件渲染器：

{{RootCmd|eselect opengl set nvidia}}

== 配置 ==

The [[X server]] is designed to work out-of-the-box, with no need to manually edit Xorg's configuration files. It ''should'' detect and configure devices such as displays, keyboards, and mice.

试试[[#Using_startx|using startx]] 而不是去直接编辑配置文件。如果Xorg无法启动，那么可能有其他问题，此时，你将需要再去手动编辑Xorg配置。这在下面的部分进行说明。 

{{Note|If changes have been made to the kernel, do not forget to '''restart the system''' ''before'' using {{c|startx}} in order to be using the newly built kernel. If the kernel was updated to a newer version in the process this will most likely require the bootloader's configuration files to be updated as well.}}

===  {{Path|xorg.conf.d}} 目录 ===

{{Important|Configuring files in {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|xorg.conf.d]]}} should be seen as a last resort option. If possible it is desirable to run Xorg without any special configuration.}}

Most of the configuration files for Xorg are stored in {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|/etc/X11/xorg.conf.d/]]}}. Each file is given a unique name and ends in {{Path|.conf}}. The file names in Xorg's configuration directory will be read in alpha numeric order. For example, {{Path|10-evdev.conf}} will be read before {{Path|20-synaptics.conf}}; {{Path|a-evdev.conf}} will be read before {{Path|b-synaptics.conf}}, and so on. The files in this directory are not required to be numbered, but doing so will help to keep them organized. Organization is helpful when debugging faulty configuration files.

{{Note|Xorg provides example configurations in {{Path|/usr/share/doc/xorg-server-${version}/xorg.conf.example.bz2}}. These can be used to create custom configuration files in {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|/etc/X11/xorg.conf.d/]]}}. The examples are heavily commented, but if more documentation regarding the syntax is needed, {{c|man xorg.conf}} is always available. Other examples can be found in the section [[#Other_resources|Other resources]] at the end of this guide.}}

===使用 startx ===

Try {{c|startx}} to start up the [[X server]]. {{c|startx}} is a script (it's installed by {{Package|x11-apps/xinit}}) that executes an ''X session''; that is, it starts the [[X server]] and some graphical applications on top of it. It decides which applications to run using the following logic: 

*如果一个叫做{{Path|.xinitrc}}的文件存在于主目录（home）中，它会执行里面列出的命令。

*  Otherwise, it will read the value of the <var>XSESSION</var> variable from the {{Path|/etc/env.d/90xsession}} file and execute the relevant session accordingly. Values for <var>XSESSION</var> are available in {{Path|/etc/X11/Sessions/}}. To set a system wide default session run:

: {{RootCmd|echo XSESSION{{=}}"Xfce4" > /etc/env.d/90xsession}}

:这将创建文件：{{Path|90xsession}}，然后设置默认X会话[[Xfce/Guide|Xfce]]。 记得在{{Path|90xsession}}修过后，执行命令{{c|env-update}}。

{{Cmd|startx}}

如果你没有安装窗口管理器，那么一个纯黑色的屏幕将会出现，此后这也可以说明，哪些东西发生了错误。{{Package|x11-wm/twm}}和{{Package|x11-terms/xterm}} 包可以用来测试X是否正常配置。 

Once the programs are installed, run {{c|startx}} again. A few {{c|xterm}} windows should appear, making it easy to verify the [[X server]] is working correctly. Once satisfied with the results, unmerge {{Package|x11-wm/twm}} and {{Package|x11-terms/xterm}} if installed in the step above to remove the testing packages. They will not be needed to setup a proper desktop environment.

The session (program to start) could also be given as an argument to {{c|startx}}:

{{Cmd|startx /usr/bin/startfluxbox}}

You can also pass X11 server options, by preceding them with a double dash:

{{Cmd|startx -- vt7}}

=== 调整 X 设置 ===

==== 设置屏幕分辨率 ====

If the screen resolution looks to be wrong, you will need to check two sections in your {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|xorg.conf.d]]}} configuration. First of all, you have the ''Screen'' section which lists the resolutions that your [[X server]] will run at. This section might not list any resolutions at all. If this is the case, Xorg will estimate the resolutions based on the information in the second section, ''Monitor''. 

Now let us change the resolution. In the next example from {{Path|/etc/X11/xorg.conf.d/40-monitor.conf}} we add the <code>PreferredMode</code> line so that our [[X server]] starts at 1440x900 by default. The <code>Option</code> in the <code>Device</code> section must match the name of your monitor (<code>DVI-0</code>), which can be obtained by running {{c|xrandr}}. Install {{c|xrandr}} ({{c|emerge xrandr}}) just long enough to get this information. The argument after the monitor name (in the <code>Device</code> section) must match the <code>Identifier</code> in the <code>Monitor</code> section. 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier  "RadeonHD 4550"
  Option      "Monitor-DVI-0" "DVI screen"
EndSection
Section "Monitor"
  Identifier  "DVI screen"
  Option      "PreferredMode" "1440x900"
EndSection
</pre>
}}

Run X ({{c|startx}}) to discover it uses the desired resolution.

====多显示器====

More than one monitor in can be established in {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|/etc/X11/xorg.conf.d/]]}}. Give each monitor a unique identifier, then list its physical position, such as "RightOf" or "Above" another monitor. The following example shows how to configure a DVI and a VGA monitor, with the VGA monitor as the right-hand screen: 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier "RadeonHD 4550"
  Option     "Monitor-DVI-0" "DVI screen"
  Option     "Monitor-VGA-0" "VGA screen"
EndSection
Section "Monitor"
  Identifier "DVI screen"
EndSection
Section "Monitor"
  Identifier "VGA screen"
  Option     "RightOf" "DVI screen"
EndSection
</pre>
}}

==== 配置键盘 ====

To setup X to use an international keyboard create the appropriate config file in {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|/etc/X11/xorg.conf.d/]]}}. This example features a Czech keyboard layout: 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/30-keyboard.conf|output=<pre>
Section "InputClass"
        Identifier "keyboard-all"
        Driver "evdev"
        Option "XkbLayout" "us,cz"
        Option "XkbModel" "logitech_g15"
        Option "XkbRules" "xorg"
        Option "XkbOptions" "grp:alt_shift_toggle,grp:switch,grp_led:scroll,compose:rwin,terminate:ctrl_alt_bksp"
        Option "XkbVariant" ",qwerty"
        MatchIsKeyboard "on"
EndSection
</pre>
}}

For methods of switching the keyboard layout see the [[Keyboard_layout_switching#X11|Keyboard layout switching]] article.

"终止"命令 (<code>terminate:ctrl_alt_bksp</code>) 允许用户通过使用{{Key|Ctrl}}+{{Key|Alt}}+{{Key|Backspace}} 组合键来结束X会话。不过，这样退出不怎么好 -- 用户应该尽量避免这样做。但它在程序完全卡死或配置和调整 Xorg环境时很有用。请谨慎使用，通过该组合键结束桌面 — — 大多数程序真的不喜欢以这种方式结束。一些文件，比如尚未写入磁盘（比如存储在“已打开的文档”中的信息）中的数据，将丢失。

==== 即将完成 ====

Run {{c|startx}} and be happy about the result. Congratulations, you now (hopefully) have a working Xorg! The next step is to install a useful window manager or desktop environment such as [[KDE]], [[GNOME]], or [[Xfce]]. Information on installing these desktop environments can be found here on the wiki.

== 参考 ==

* [[Wayland]] - The next generation window manager for Linux.
* [[Security Handbook/Securing services#X|X (Security Handbook)]] - The Security Handbook's entry on securing the X server.

== 外部资源 ==

=== 创建和编辑配置文件 ===

First of all, {{c|man xorg.conf}} and {{c|man evdev}} provide quick yet complete references about the syntax used by these configuration files. Be sure to have them open on a terminal when editing Xorg configuration files! 

在编辑配置文件中的也有许多在线资源：{{Path|/etc/X11/}}。只有少数列出在这里;可以选择你最喜爱的搜索引擎来找到更多指导。

==其他资源==

More information about installing and configuring various graphical desktop environments and applications can be found in the [[Category:Desktop|Gentoo desktop resources]] section of our documentation. 

When upgrading to xorg-server 1.9 or higher, be sure to read the [[X_server/upgrade|migration guide]]. 

除了我们这些文档，在他们自己的网站上，X.org还提供许多[http://www.x.org/wiki/FAQ FAQs]

{{Migrated|originalauthors=swift, nightmorph}}
[[Category:X.Org]]
