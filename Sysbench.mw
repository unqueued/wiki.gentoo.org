== Sysbench ==

The {{Package|app-benchmarks/sysbench}} package provides the '''sysbench''' application, which provides benchmarking capabilities towards Linux. It supports testing CPU, memory, File I/O, mutex performance and even MySQL benchmarking.

To install benchmark, there are two USE flags applicable.

{{USEflag
|package=app-benchmarks/sysbench
|aio+yes+
|mysql++
}}

=== Using sysbench ===

As mentioned, sysbench supports several benchmark workloads: fileio, cpu, memory, threads, mutex, oltp

==== Using the fileio measurements ====

When using ''fileio'', you will need to create a set of test files to work on. It is recommended that the size is larger than the available memory to ensure that file caching does not influence the workload too much.

{{RootCmd|sysbench --test{{=}}fileio --file-total-size{{=}}128G prepare
|sysbench --test{{=}}fileio --file-total-size{{=}}128G --file-test-mode{{=}}rndrw --max-time{{=}}300 --max-requests{{=}}0 run
|sysbench --test{{=}}fileio --file-total-size{{=}}128G cleanup}}

As this is I/O benchmarking, you can tell sysbench which kind of workload you want to run: sequential reads, writes or random reads, writes, or a combination. In the above example, random read/write is used (rndrw). The duration of the test is given through the ''--max-time'' parameter (in seconds).

The output of a run is shown below:

{{RootCmd|sysbench --test{{=}}fileio --file-total-size{{=}}32G --file-test-mode{{=}}rndrw --max-time{{=}}300 --max-requests{{=}}0 run|output=<pre>
TODO</pre>}}

The important part to look at is the information regarding the operations:
  TODO

These numbers can be compared with runs on different file systems, other systems, etc. 

=== Resources ===

* [http://www.howtoforge.com/how-to-benchmark-your-system-cpu-file-io-mysql-with-sysbench How to benchmark your system with sysbench]
