<languages />

{{Dated|date=March 3rd, 2015}}
{{InfoBox stack
|{{InfoBox homepage|https://gnupg.org/|header=true}}
|{{InfoBox wikipedia|GNU_Privacy_Guard|text=Wikipedia}}
}}

{{Metadata|abstract=Esta pequeña guía le enseñará a los usuarios de Gentoo Linux lo básico del uso de GnuPG, una herramienta para comunicaciones seguras.}}

Esta pequeña guía le enseñará a los usuarios de Gentoo Linux lo básico del uso de GnuPG, una herramienta para comunicaciones seguras.

== Introducción ==

=== Lo que el lector aprenderá de esta guía ===

Esta guía asume que el lector está familiarizado con la criptografía de clave pública, cifrado y firmas digitales. Si no es el caso, eche un vistazo al [http://www.gnupg.org/documentation/guides.html manual oficial de GnuPG], en particular al segundo capítulo, y luego vuelva a este artículo. 

Esta guía ofrece instrucciones a los usuarios de Gentoo sobre cómo instalar GnuPG, cómo crear un par de claves, cómo agregar claves a un anillo de claves, cómo enviar una clave pública a un servidor de claves y cómo firmar, cifrar y verificar o decodificar tanto los mensajes enviados como los recibidos. Los lectores también aprenderán a cifrar archivos para evitar que otros lean el contenido de los mensajes.

== Instalación ==

=== Ajustes USE ===

{{USEflag|package=app-crypt/gnupg|desc=Ajustes USE opcionales para {{Package|app-crypt/gnupg}}:
|bzip2
|doc
|ldap
|mta
|nls
|readline
|smartcard
|static
|tools+++Install extra tools.
|usb
}}

=== Emerge ===

{{Emerge|app-crypt/gnupg}}

=== Otro software ===

En un nivel muy básico, se debe hacer emerge de GnuPG. Actualmente muchas aplicaciones ofrecen algún tipo de soporte para PGP por lo es una buena idea  definir la variable USE <code>crypt</code>. Si queremos un cliente de correo que pueda utilizar GnuPG contamos con las siguientes alternativas:
* PinePGP ({{Package|mail-client/pinepgp}}).
* [[Mutt]] ({{Package|mail-client/mutt}}). Un cliente de correo basado en texto pequeño pero muy potente.
* [[Thunderbird]] ({{Package|mail-client/thunderbird}}). El cliente de correo de Mozilla.
* [[Evolution]] ({{Package|mail-client/evolution}}). Un cliente similar a Microsoft Outlook de GNOME.
* [[KMail]] ({{Package|kde-base/kmail}}). El cliente de correo de KDE.
**Puede ser interesante instalar KGPG ({{Package|kde-base/kgpg}}) cuando se utiliza el entorno de escritorio KDE. Este pequeño programa permite la generación de pares de claves, importar claves desde ficheros ASCII, firmar las claves importadas y exportar claves entre otras ingeniosas características.

== Utilización ==

=== Generar una clave y agregar claves públicas a un llavero público ===

==== Crear una clave ====

Para crear una clave, utilice la orden <tt>gpg --gen-key</tt>. La primera vez que se lanza, se crearán algunos directorios que son esenciales para una operación e implementación correctas de GnuPG, lánzela de nuevo para crear las claves: 

{{Cmd|gpg --gen-key|output=<pre>
gpg (GnuPG) 1.0.7; Copyright (C) 2002 Free Software Foundation, Inc.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions. See the file COPYING for details.

Por favor seleccione tipo de clave deseado:
   (1) RSA y RSA (por defecto)
   (2) DSA y ElGamal
   (3) DSA (sólo firmar)
   (4) RSA (sólo firmar)
Su elección: 1

</pre>
}}

En este momento se puede elegir el tipo de clave que quiere usar. La mayoría de los usuarios elegirán la predeterminada RSA y RSA. Lo siguiente a elegir es el tamaño de la clave, recuerde que cuanto mayor sea la clave, mejor, pero no utilice un tamaño superior a 2048 con claves DSA/ElGamal. Normalmente 2048 es más que suficiente para comunicaciones normales a través del correo electrónico.

Después del tamaño viene la fecha de expiración. Cuanto antes sea esta fecha, mejor. Sin embargo, la mayoría de los usuarios usan claves que nunca expiran o tienen una fecha de expiración de dos o tres años. 

{{CodeBox|title=Elegir el tamaño de la clave|<nowiki>
las claves RSA pueden tener entre 1024 y 4096 bits de longitud.
¿De qué tamaño quiere la clave? (2048) 2048
El tamaño requerido es de 2048 bits
Por favor, especifique el período de validez de la clave.
         0 = la clave nunca caduca
      <n>  = la clave caduca en n días
      <n>w = la clave caduca en n semanas
      <n>m = la clave caduca en n meses
      <n>y = la clave caduca en n años
¿Validez de la clave (0)? 0
La clave nunca caduca
</nowiki>
}}

Ahora es el momento de introducir información personal sobre la clave del usuario. Cuando se envía la clave pública a otros usuarios, es importante escribir una dirección de correo electrónico (contrariamente a una dirección de correo electrónico falsa). 

{{CodeBox|title=Introducir información de usuario|
¿Es correcto? (s/n) s

GnuPG debe construir un ID de usuario para identificar su clave.

Nombre y apellidos: Larry la vaca
Dirección de correo electrónico: larry@gentoo.org
Comentario: El mismísimo Gentoo

Ha seleccionado este ID de usuario:
"Larry la vaca (el mismísimo Gentoo) <larry@gentoo.org>"

¿Cambia (N)ombre, (C)omentario, (D)irección o (V)ale/(S)alir? V

Necesita una frase contraseña para proteger su clave secreta.

Introduzca frase contraseña:
}}

Ahora teclee una contraseña dos veces. Es una buena idea utilizar una contraseña fuerte. Si alguien consigue la clave privada y obtiene la contraseña, podrán suplantar al usuario enviando mensajes firmados en su nombre como si se tratara del usuario legítimo. El usuario malicioso podría engañar a los contactos víctima que creen que los mensajes los envía el usuario legítimo. Esto puede causar problemas muy serios.

A continucación, GnuPG generará una clave. Mover el ratón, navegar por la web o escuchar audio ayudará a acelerar el proceso ya que GnuPG generará datos aleatorios incrementando la seguridad del par de claves.

==== Generar un certificado de revocación ====

{{Important|Esta parte es muy importante y se debe realizar ''AHORA''.}}

Después de crear las claves, se debe crear un certificado de revocación. Hacer esto le permite al usuario revocar su clave en caso que algo desagradable ocurra (piense en un usuario con malas intenciones que obtenga el control de la clave o frase de paso). 

{{Cmd|gpg --list-keys|output=<pre>
/home/humpback/.gnupg/pubring.gpg
---------------------------------
pub  1024D/75447B14 2002-12-08 Larry la vaca (La mismísima vaca Larry de Gentoo) <larry@gentoo.org>
sub  2048g/96D6CDAD 2002-12-08
</pre>}}

{{Cmd|gpg --output revoke.asc --gen-revoke 75447B14|output=<pre>
sec 1024D/75447B14 2002-12-08 Larry la vaca (La mismísima vaca Larry de Gentoo) <larry@gentoo.org>

¿Crear un certificado de revocación para esta clave? (s/N) 
Por favor elija una razón para la revocación:
  0 = No se dio ninguna razón
  1 = La clave ha sido comprometida
  2 = La clave ha sido reemplazada.
  3 = La clave ya no está en uso
  Q = Cancelar
(Probablemente quería seleccionar 1 aquí)
¿Su decisión? 1

Introduzca una descripción opcional; acábela con una línea vacía:
> Alguien ha entrado en mi sistema y ha obtenido mi clave y mi frase contraseña
>
Razón para la revocación: La clave ha sido comprometida
Alguien ha entrado en mi sistema y ha obtenido mi clave y mi frase contraseña
¿Es correcto? (s/N) s

Necesita una frase contraseña para desbloquear la clave secreta del usuario: "Larry la vaca (La mismísima vaca Larry de Gentoo) <larry@gentoo.org>"
clave RSA de 2048 bits, ID 75447B14, creada el 2002-12-08

se fuerza salida con armadura ASCII.
Certificado de revocación creado.

Por favor consérvelo en un medio que pueda esconder; si alguien consigue acceso a este certificado puede usarlo para inutilizar su clave.
Es inteligente imprimir este certificado y guardarlo en otro lugar, por si acaso su medio resulta imposible de leer. Pero precaución: ¡El sistema
de impresión de su máquina podría almacenar los datos y hacerlos accesibles a otras personas!
</pre>
}}

La orden <tt>gpg --list-keys</tt> muestra las claves en el llavero de claves públicas. Se puede usar para ver el ID de la clave y poder crear el certificado de revocación. Es buena idea hacer una copia del directorio {{Path|.gnupg}} y del certificado de revocación (en escudo ASCII, {{Path|revoke.asc}}) a un medio seguro (un CD-R o una memoria USB que se guarde en un lugar seguro). Recuerde que puede usar {{Path|revoke.asc}} para revocar las claves y hacerlas inutilizables en el futuro. 

{{Note|Si un usuario tiene varias direcciones de correo electrónico que quiera usar con esta clave, el usuario puede lanzar <tt>gpg --edit-key <ID_DEL_USUARIO></tt> y luego usar la orden <tt>adduid</tt>. Le preguntará al usuario el nombre, dirección de correo electrónico, y un comentario para el segundo ID que va a utilizar.}}

==== Exportar claves ====

Para exportar una clave, teclee <tt>gpg --armor --output larry.asc --export larry@gentoo.org</tt>. Casi siempre podrá utilzar el ID de la clave o algo que la identifique (en este ejemplo hemos usado una dirección de correo electrónico). Larry tiene ahora un archivo {{Path|larry.asc}} que puede enviar a sus amigos, o poner en su sitio web para que otros se comuniquen con él de forma segura. 

==== Importar claves ====

Para añadir ficheros a un llavero público, se deben seguir los siguientes pasos:
# Importar la clave
# Comprobar la huella digital de la clave
# Después de verificar la huella digital, validarla.

{{Note|Sea cuidadoso cuando verifique las claves. Este es uno de los puntos débiles de la criptografía de clave pública.}}

Ahora agregaremos la clave pública de Luis Pinto (un amigo mio) a nuestro llavero de claves públicas. Despúes de hablar con él por teléfono y de haberle preguntado por su huella digital, comparo esta huella con la salida de la orden <tt>fpr</tt>. Como la clave es auténtica, la agrego al llavero de claves públicas. En este caso particular, la clave de Luis expira el 2003-12-01 entonces se me preguntará si quiero que mi firma en su clave expire en el mismo día. 

{{Cmd|gpg --import luis.asc|output=<pre>
gpg: key 462405BB: clave pública importada
gpg: Cantidad total procesada: 1
gpg:               importadas: 1
</pre>}}

{{Cmd|gpg --list-keys|output=<pre>
/home/humpback/.gnupg/pubring.gpg
---------------------------------
pub 1024D/75447B14 2002-12-08 Larry la vaca (La mismísima vaca Larry de Gentoo) <larry@gentoo.org>
sub 2048g/96D6CDAD 2002-12-08

pub 1024D/462405BB 2002-12-01 Luis Pinto <lmpinto@student.dei.uc.pt>
uid Luis Pinto <lmpinto@dei.uc.pt>
sub 4096g/922175B3 2002-12-01 [expires: 2003-12-01]
</pre>}}

{{Cmd|gpg --edit-key lmpinto@dei.uc.pt|output=<pre>
gpg (GnuPG) 1.0.7; Copyright (C) 2002 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

pub 1024D/462405BB creado: 2002-12-01 caduca: 2003-12-01 trust: -/-
sub 4096g/922175B3 creado: 2002-12-01 caduca: 2003-12-01
(1) Luis Pinto <lmpinto@dei.uc.pt>
(2). Luis Pinto <lmpinto@student.dei.uc.pt>
</pre>}}

{{Cmd|fpr|prompt=Command> |output=<pre>
pub 1024D/462405BB 2002-12-01 Luis Pinto <lmpinto@dei.uc.pt>
 Huella clave primaria: F056 3697 ADE3 CF98 B80B 8494 0AD3 E57B 4624 05BB
</pre>}}

{{Cmd|sign|prompt=Command> |output=<pre>

pub 1024D/462405BB created: 2002-12-01 expires: 2003-12-01 trust: -/-
 Huella clave primaria: F056 3697 ADE3 CF98 B80B 8494 0AD3 E57B 4624 05BB

   Luis Pinto <lmpinto@dei.uc.pt>
   Luis Pinto <lmpinto@student.dei.uc.pt>

Esta clave expirará el 2003-12-01.
¿Quiere que su firma caduque en el mismo momento? (S/n) s
¿Cómo ha verificado que la clave que va a firmar pertenece a la persona nombrada arriba?. Si no sabe qué contestar, introduzca "0".

   (0) No contestaré. (por defecto)
   (1) No lo he comprobado.
   (2) He realizado una comprobación parcial.
   (3) He comprobado la clave cuidadosamente.

   ¿Su decisión? 3

¿Está seguro de querer firmar esta clave con su clave: "Larry la vaca (La mismísima vaca Larry de Gentoo) <larry@gentoo.org>"?

He comprobado la clave cuidadosamente

¿Firmar de verdad? (s/N) s
Necesita una frase contraseña para desbloquear la clave secreta
del usuario: "Larry la vaca (La mismísima vaca Larry de Gentoo) <larry@gentoo.org>"
</pre>}}

{{Cmd|check|prompt=Command> |output=<pre>
uid Luis Pinto <lmpinto@dei.uc.pt>
sig!3 462405BB 2002-12-01 [self-signature]
sig!3 75447B14 2002-12-08 Larry la vaca (La mismísima vaca Larry de Gentoo) <larry@gentoo.org>
uid Luis Pinto <lmpinto@student.dei.uc.pt>
sig!3 462405BB 2002-12-01 [self-signature]
sig!3 75447B14 2002-12-08 Larry la vaca (La mismísima vaca Larry de Gentoo) <larry@gentoo.org>
</pre>
}}

=== Intercambiar claves con servidores de claves ===

==== Enviar claves a los servidores de claves ====

Ahora que se ha generado la clave, probablemente sea buena idea enviarla a un servidor de claves. Hay un montón de servidores de claves en el mundo y muchos de ellos intercambian claves entre sí. En el siguiente ejemplo, vamos a enviar la clave de la vaca Larry al servidor keys.gnupg.net. El envío de claves se hace mediante HTTP, por lo que si se necesita usar un proxy para el tráfico HTTP, no se debe olvidar configurarlo (<tt>export http_proxy=<nowiki>http://maquina_proxy:puerto/</nowiki></tt>). La orden para enviar la clave es: <tt>gpg --keyserver keys.gnupg.net --keyserver-options honor-http-proxy --send-key 75447B14</tt> donde <code>75447B14</code> es el ID de la clave. Si no se necesita un proxy HTTP se puede quitar la opción <code>--keyserver-options honor-http-proxy</code>. 

También es buena idea enviar al servidor las claves de otras personas que Larry ha firmado. Podríamos enviar la clave de Luis Pinto al servidor. De esta forma alguien que confía en la clave de Larry puede usar la firma que ha puesto ahí para confiar en la clave de Luis. 

==== Obtener claves desde los servidores de claves ====

Ahora buscaremos la clave de Gustavo Felisberto y agregarla al llavero de claves de la vaca Larry (solo en el caso que no se haya enterado que Gustavo Felisberto es la persona que escribió esta guía :&#41;). 

{{Cmd|gpg --keyserver keys.gnupg.net --keyserver-options honor-http-proxy --search-keys humpback@felisberto.net|output=<pre>
gpg: buscando "humpback@felisberto.net" de hkp servidor keys.gnupg.net
(1)	Gustavo Felisberto <humpback@gmail.com>
	Gustavo Felisberto <humpback@gentoo.org>
	Gustavo Felisberto <humpback@gentoopt.org>
	Gustavo Felisberto <gustavo@felisberto.net>
	Gustavo Felisberto <humpback@gentoo-pt.org>
	Gustavo Felisberto <humpback@felisberto.net>
	Gustavo Felisberto <gustavo@student.dei.uc.pt>
	Gustavo Felisberto <humpback@student.dec.uc.pt>
	Gustavo Felisberto (apt-get install anarchy) <humpback@felisberto.net>
	  1024 bit DSA key B9F2D52A, created: 2002-12-06
(2)	Gustavo Adolfo Silva Ribeiro Felisberto <humpback@altavista.net>
	  1024 bit DSA key 26471D8F, created: 2001-09-05
(3)	Gustavo Felisberto <humpback@altavista.net>
	  1024 bit DSA key E97E0B46, created: 1999-08-04, expires: 2000-08-04 (expired)
(4)	Gustavo A.S.R. Felisberto <humpback@altavista.net>
	  1024 bit DSA key B59AB043, created: 1998-12-10
(5)	Gustavo Adolfo Silva Ribeiro Felisberto <humpback@altavista.net>
	  1024 bit DSA key 39EB133D, created: 1998-08-27
(6)	Gustavo Adolfo Silva Ribeiro Felisberto <humpback@altavista.net>
	  1024 bit DSA key AE02AF87, created: 1998-06-15
Introduzca número(s), O&41;tro, o F&41;in >

gpg: solicitando clave B9F2D52A de hkp servidor keys.gnupg.net
gpg: clave B9F2D52A: clave pública "Gustavo Felisberto <humpback@felisberto.net>" importada
gpg: 3 dudosa(s) necesarias, 1 completa(s) necesarias, modelo de confianza clásico
gpg: nivel: 0  validez:   4  firmada:   0  confianza: 0-, 0q, 0n, 0m, 0f, 4u
gpg: siguiente comprobación del anillo de confianza expira el 2015-06-28
gpg: Cantidad total procesada: 1
gpg:               importadas: 1
</pre>
}}

Echando un vistazo a la respuesta del servidor, es posible comprobar que se han enviado pocas claves, sin embargo solo se utiliza <code>B9F2D52A</code>. Ahora la vaca Larry puede obtener la clave y firmala si confía en su procedencia.

=== Usar un Agente GPG ===

==== ¿Qué es un Agente GPG? ====

Sometimes working with certain applications requires the use of a GPG key very frequently, which means that a passphrase must be frequently entered. In the past many applications supported a passphrase caching mechanism. This would make life easier for users because passphrases were automatically entered. However, this disallowed sharing this cache across programs (how secure would that be?) and forced applications to reinvent the wheel over and over again. 

A GPG agent is a separate application that GPG uses to cache the passphrase in a standard and secure way. It allows applications to use GPG concurrently: if the passphrase is entered while working in one application, the other application can work with GPG without reiterating the request for the passphrase to unlock the key — if the GPG Agent is configured to allow so, of course. 

Gentoo provides a few GPG agent applications. The {{Package|app-crypt/gnupg}} package contains what could be considered the reference one, and will be the primary choice used in this article.

==== Configurar gpg-agent y pinentry ====

GnuPG includes <tt>gpg-agent</tt>. Pinentry ({{Package|app-crypt/pinentry}}) is a helper application that <tt>gpg-agent</tt> uses to request the passphrase in a graphical window. It comes in three flavors: it can popup a window using the GTK+, QT, or curses libraries (depending on the USE flags set in {{Path|/etc/portage/make.conf}}). 

Si se instaló {{Package|app-crypt/pinentry}} con más de un tipo de gestión de ventana, es posible elegir entre las ventanas utilizando la orden <tt>eselect-pinentry</tt>: 

{{RootCmd|eselect pinentry list|output=
<pre>
Available pinentry implementations:
  [1]   pinentry-gtk-2 *
  [2]   pinentry-curses
  [3]   pinentry-qt4
</pre>
}}

{{RootCmd|eselect pinentry set 1}}

Now create a file called {{Path|~/.gnupg/gpg-agent.conf}} and enter the following lines which define the default timeout of the passphrase (e.g. 30 minutes) and the application to be called for when the passphrase should be retrieved the first time (e.g. the GTK+ version of Pinentry). 

{{FileBox|filename=~/.gnupg/gpg-agent.conf|
pinentry-program /usr/bin/pinentry-gtk-2
no-grab
default-cache-ttl 1800
}}

Ahora configure GnuPG para que use un agente cuando sea conveniente. Edite {{Path|~/.gnupg/gpg.conf}} y agregue la siguiente línea: 

{{FileBox|filename=~/.gnupg/gpg.conf|title=Configurar GnuPG para que utilice un agente GPG|
use-agent
}}

Ahora el sistema está (casi) listo para usar el agente GPG.

==== Iniciar automáticamente el agente GPG ====

If KDE is used as the desktop environment, edit the following {{Path|/etc/kde/startup/agent-startup.sh}} (system-wide) or {{Path|~/.kde4/env/gpg-agent.sh}} (local user) file. Add the following command to the appropriate file to have KDE automatically starting the GPG Agent: 

{{FileBox|filename=/etc/kde/startup/agent-startup.sh|title=Make KDE automatically start the GPG agent|lang=bash|1=
eval "$(gpg-agent --daemon)"
}}

Additionally, uncomment the following lines in {{Path|/etc/kde/shutdown/agent-shutdown.sh}} (system-wide) or add it to {{Path|~/.kde4/shutdown/gpg-agent.sh}} (local user): 

{{FileBox|filename=/etc/kde/shutdown/agent-shutdown.sh|title=Asegúrese de que KDE detiene el agente GPG|lang-bash|1=
if [ -n "${GPG_AGENT_INFO}" ]; then
  kill $(echo ${GPG_AGENT_INFO} {{!}} cut -d':' -f 2) >/dev/null 2>&1
fi
}}

When using a desktop environment other than KDE, put that line (the same as mentioned above) in the {{Path|~/.xinitrc}} file (if the <tt>startx</tt> command is used to invoke the GUI) or the {{Path|~/.xsession}} file (if XDM, GDM, KDM are used).

=== Trabajar con documentos ===

==== Cifrar y firmar ====

Supongamos que Larry tiene un archivo que quiere enviar a Luis. Larry puede cifrarlo, firmarlo, o cifrarlo y firmarlo. Cifrarlo significa que solo Luis
podrá abrirlo. La firma le indica a Luis que el archivó realmente lo creó Larry. 

Las tres órdenes siguientes harán solo eso: cifrar, firmar y cifrar/firmar. 

{{Cmd|gpg --output doc.gpg --encrypt --recipient lmpinto@dei.uc.pt doc_to_encrypt
|gpg --output doc.gpg --sign --recipient lmpinto@dei.uc.pt doc_to_sign
|gpg --output doc.gpg --encrypt --sign --recipient lmpinto@dei.uc.pt doc_to_encrypt_and_sign}}

Esto creará archivos binarios. Cuando se quieren crear archivos ASCII, únicamente se agrega una opción <code>--clearsign</code> al principio de la orden. 

==== Descifrar y verificar firmas ====

Suppose that Larry has received a file which is encrypted to him. The command used to decrypt it is <tt>gpg --output document --decrypt encrypted_doc.gpg</tt>. This will decrypt the document and verify the signature (if there is one). 

==== Cifrar y descifrar sin claves ====

It is possible to encrypt files using passwords instead of keys. The password itself will function ''as'' the key — it will be used as a ''symmetric cypher''. The file can be encrypted using <tt>gpg --symmetric</tt>; decrypting uses the same command as mentioned previously. 

{{Cmd|gpg --output documento.gpg --symmetric documento}}

GnuPG le pedirá una una contraseña y su verificación.

==== Características avanzadas ====

Hay algunas características avanzadas agradables en GnuPG. Para encontrarlas, abra el archivo {{Path|~/.gnupg/gpg.conf}} 

{{FileBox|filename=~/.gnupg/gpg.conf|
#keyserver x-hkp://keys.gnupg.net
#keyserver-options auto-key-retrieve include-disabled include-revoked
}}

Search for the above two lines and uncomment them. With this modification made, any time GnuPG needs to check a signature and does not find the public key on the local keyring it will contact the key server at [http://keys.gnupg.net:11371/ keys.gnupg.net] in attempt to fetch the public key from from the server. 

Another nice command is <tt>gpg --refresh-keys</tt>. This will contact the key server defined in the configuration file and refresh the public keys in the local key ring from there. It is capable of searching for revoked keys, new IDs, and new signatures on keys. It is a wise idea run this command once or twice a month; if a user revokes their key this can provide a notification the key can no longer be trusted.

=== Interfaces GnuPG ===

==== Acerca de las firmas en los correos electrónicos ====

95% of the time GnuPG is used with email by signing/encrypting outgoing messages or reading signed/encrypted messages.

Hay dos formas de firmar o cifrar un correo electrónico con GnuPG, la antigua y nueva. En la antigua, los mensajes aparecían en texto plano sin formato posible y los archivos adjuntos estaban sin firmar o sin cifrar, a continuación se muestra un ejemplo de un mensaje firmado a la antigua: 

{{CodeBox|title=Una firma en texto plano|<nowiki>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


Mensaje de prueba

-----BEGIN PGP SIGNATURE-----
Version: PGPfreeware 6.5.8 for non-commercial use


iQA/AwUBP8461jMX0745gR7AEQIEOwCg011GbufXO3ED3FkLWXmfzg7xm1cAoJD0
0EU3Kd2EKNCqataEqM5qjpPs
=LchZ
-----END PGP SIGNATURE-----
</nowiki>
}}

Messages this way are not good in today's world, where there are nice GUIs and email readers that understand HTML. 

To solve this an addition to the MIME (Multipurpose Internet Mail Extensions) was created. This adds a field to the email that tells the mail reader that the full content of the message is signed and/or encrypted. The problem with this is that not all mail readers support such features. Some even mess up the content (Microsoft's Outlook is famous for not working with this). 

==== Kgpg ====

Kgpg ({{Package|kde-base/kmail}}) is a wonderful GUI for GnuPG. The main screen provides an area to paste text to signed or encrypted, the reverse is also true; ASCII armored text to be decrypted can also be entered. 

From within the main screen text decrypted (a password is needed), files encrypted, and pasted text can be signed.

==== Seahorse ====

Seahorse ({{Package|app-crypt/seahorse}}) pretende ser un interfaz GUI de GnuPG para el escritorio Gnome. El software ha evolucionado rápido, pero aún carece de muchas características importantes que se pueden encontrar en Kgpg o en la versión de línea de órdenes. 

==== KMail ====

If the <code>crypt</code> USE flag is set, KMail will be compiled with gpg support, and will be able to encrypt and decrypt inline PGP mails automatically as well as encrypting OpenPGP/MIME mails. To decrypt OpenPGP/MIME mails as well (most users want) a GPG agent must be running. 

To verify if KMail is properly configured navigate to {{Path|Settings → Configure KMail → Security → Crypto Backends}}. A GpgME-based backend should be listed and the OpenPGP checkbox should be checked. If it is listed but grayed out, click on {{Path|Rescan}}. If the GpgME-based backend remains grayed out, KMail is not working properly. 

When unable to get KMail to behave, see the [https://userbase.kde.org/KMail/PGP_MIME official KMail PGP page] for more information. 

==== Claws-Mail ====

This mail reader is ''very'' fast with big mailboxes, has all the nice features one wants in mail readers and works well with GPG. The only problem is that it does not work with the old PGP signatures, so when receiving those kind of mails the signatures must be hand-checked. 

To use a GPG key with Claws-Mail navigate to {{Path|account configuration → privacy tab}}. Once there choose which key to use, most users should go with the default key.

== Consideraciones finales y créditos ==

=== Algunos problemas ===

I had some problems with photos in keys. Check the version you are using. If you have GnuPG 1.2.1-r1 and up you are probably OK, older versions may have problems. Also most key servers do not like keys with photos, so you are better if you don't add photos. 

The latest versions of GnuPG do not seem to work with the <tt>gpg --send-keys</tt> that was used to send all keys in a keyring to the public server. 

=== ¿Qué no se ha incluido aquí? ===

La herramienta <tt>gpg</tt> es muy compleja, permite al usuario hacer mucho más de lo que se ha cubierto aquí. Este documento está indicado para usuarios novatos en GnuPG. Para más información, eche un vistazo al [http://www.gnupg.org sitio web oficial de GnuPG]. 

Este artículo no cubre herramientas como <tt>pgp4pine</tt>, <tt>gpgpine</tt>, <tt>evolution</tt> ni herramientas GPG para Windows.

=== Créditos ===

El [http://www.gnupg.org Manual GnuPG] de John Michael Ashley es un buen libro para principiantes. 

Swift (Sven Vermeulen) por animarme a reescribir esta guía. 

A todos los miembros del equipo #gentoo-doc, tíos, moláis. 

Gracias a Tiago Serra por apoyarme en el estudio de la privacidad.


[[Category:Server and Security]] {{Migrated|originalauthors=Gustavo Felisberto, John P. Davis, Sven Vermeulen, nightmorph}}
