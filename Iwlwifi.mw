{{Lowercase title}}
<translate>

{{InfoBox stack
|{{InfoBox homepage|https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi|header=true}}
|{{InfoBox gitweb|https://git.kernel.org/cgit/linux/kernel/git/stable/linux-stable.git/tree/drivers/net/wireless/intel/iwlwifi/Kconfig|text=gitweb Driver|raw=true}}
|{{InfoBox gitweb|http://git.kernel.org/cgit/linux/kernel/git/firmware/linux-firmware.git|text=gitweb Firmware|raw=true}}
|{{InfoBox odoc|https://cateee.net/lkddb/web-lkddb/IWLWIFI.html}}
}}

'''iwlwifi''' is the wireless driver for Intel's current wireless chips.<ref name="first">https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi#introduction</ref>

== Kernel ==

To make it work some kernel configuration is needed. The driver supports 802.11a/b/g/n/ac (depending on the device),<ref name="first"/> so IEEE 802.11 should be enabled.
=== IEEE 802.11 ===

{{:Wifi/IEEE 802.11}}

=== Device driver iwlwifi ===

Use this driver for Intel's [https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi#supported_devices current wireless chips]. Set it as a module <code><M></code> as shown here. Do not forget the [https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi?s%5b%5d=iwldvm DVM]/[https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi?s%5b%5d=iwlmvm MVM] options.

{{KernelBox|title=linux-4.1|<pre>
        Device Drivers  --->

        [*] Network device support  --->

        --- Network device support
        [*]   Wireless LAN  --->

            --- Wireless LAN
            < >   Marvell 8xxx Libertas WLAN driver support with thin firmware
            < >   Cisco/Aironet 34X/35X/4500/4800 ISA and PCI cards
            < >   Atmel at76c50x chipset  802.11b support
            < >   Atmel at76c503/at76c505/at76c505a USB cards
            < >   Intersil Prism GT/Duette/Indigo PCI/Cardbus (DEPRECATED)
            < >   USB ZD1201 based Wireless device support
            < >   Wireless RNDIS USB support
            < >   Realtek 8180/8185/8187SE PCI support
            < >   Realtek 8187 and 8187B USB support
            < >   ADMtek ADM8211 support
            < >   Simulated radio testing tool for mac80211
            < >   Marvell 88W8xxx PCI/PCIe Wireless support
            < >   Atheros Wireless Cards  ----
            < >   Broadcom 43xx wireless support (mac80211 stack)
            < >   Broadcom 43xx-legacy wireless support (mac80211 stack)
            < >   Broadcom IEEE802.11n PCIe SoftMAC WLAN driver
            < >   Broadcom IEEE802.11n embedded FullMAC WLAN driver
            < >   IEEE 802.11 for Host AP (Prism2/2.5/3 and WEP/TKIP/CCMP)
            < >   Intel PRO/Wireless 2100 Network Connection
            < >   Intel PRO/Wireless 2200BG and 2915ABG Network Connection
            <M>   Intel Wireless WiFi Next Gen AGN - Wireless-N/Advanced-N/Ultimate-N (iwlwifi)
            <M>     Intel Wireless WiFi DVM Firmware support (NEW)
            <M>     Intel Wireless WiFi MVM Firmware support (NEW)
                    *** WARNING: iwlwifi is useless without IWLDVM or IWLMVM *** 
            [ ]     Enable broadcast filtering
            [ ]     enable U-APSD by default
                    Debugging Options  ---> 
            < >   Intel Wireless WiFi 4965AGN (iwl4965)
            < >   Intel PRO/Wireless 3945ABG/BG Network Connection (iwl3945)
            < >   Marvell 8xxx Libertas WLAN driver support
            < >   Hermes chipset 802.11b support (Orinoco/Prism2/Symbol)
            < >   Softmac Prism54 support
            < >   Ralink driver support  ----
            < >   Realtek rtlwifi family of devices  ----
            [ ]   TI Wireless LAN support  ----
            < >   ZyDAS ZD1211/ZD1211B USB-wireless support
            < >   Marvell WiFi-Ex Driver
            < >   CW1200 WLAN support
            < >   Redpine Signals Inc 91x WLAN driver support
</pre>}}

{{Important|In case the driver is built into the kernel (<code><*></code>) instead as a module (<code><M></code>), also the firmware needs to be built [[Kernel_Modules#Compile-in-kernel_modules_vs_Loadable_kernel_modules_.28LKMs.29|into the kernel]]. See the section "Alternative setup".
<br />After changes on kernel configuration do not forget to [[Kernel/Rebuild|rebuild the kernel]].}}

== Firmware ==

Also firmware for the individual device is needed as listed in [https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi#firmware this table]. It is available in {{Package|sys-kernel/linux-firmware}} and in device-specific [https://packages.gentoo.org/categories/sys-firmware sys-firmware/iwlxxxx-*ucode] packages.

{{Emerge|sys-kernel/linux-firmware}}

== Check the setup ==

{{c|modprobe}} should return nothing:

{{RootCmd|modprobe iwlwifi}}

Most information about the driver module can be obtained by {{c|modinfo iwlwifi}}

{{Cmd|modinfo iwlwifi}}

{{c|lspci}} should display '''iwlwifi'''.

{{RootCmd|lspci -k|output=<pre>xx:xx.x Network controller: Intel Corporation Wireless xxxx
        Kernel driver in use: iwlwifi
        Kernel modules: iwlwifi
</pre>}}

{{c|ifconfig}} will display some information of the [[network interface]] as represented by its [[Handbook:Parts/Networking/Advanced#Network_interface_naming|network interface name]] in {{Path|/sys/class/net/}}

{{Cmd|ifconfig -a}}

== Alternative setup ==

In case the driver is built into the kernel (<code><*></code>) instead as a module (<code><M></code>), also the firmware needs to be built [[Kernel_Modules#Compile-in-kernel_modules_vs_Loadable_kernel_modules_.28LKMs.29|into the kernel]].

{{KernelBox|title=linux-4.1|<pre>
        Device Drivers  --->

            Generic Driver Options  --->

            -*- Userspace firmware loading support
            [ ]   Include in-kernel firmware blobs in kernel binary
            (iwlwifi-xxxx.ucode) External firmware blobs to build into the kernel binary
            (/lib64/firmware) Firmware blobs root directory
            [ ] Fallback user-helper invocation for firmware loading
</pre>}}

In this case replace <code>iwlwifi-xxxx.ucode</code> with the exact firmware name.  Some attention seems to be needed for FW_LOADER_USER_HELPER_FALLBACK.

== Troubleshooting ==

=== Wireless not working ===

==== Kernel not loading firmware on systemd ====

For systems using udev or systemd, it is imperative to configure the kernel to load binary blobs. In this case the wireless card's firmware is the firmware that needs loaded. More information on configuring the kernel in this manner can be found in the following thread on the Gentoo forums: [https://forums.gentoo.org/viewtopic-t-1001638.html FW_LOADER_USER_HELPER_FALLBACK].

== See also ==

* [[Handbook:AMD64/Networking/Wireless]]
* [[wifi]]
* [[wpa_supplicant]]
* [[Network management using DHCPCD]]
* [[netifrc]]

== External resources ==

== References ==

{{reflist}}
</translate>
[[Category:Network devices]]
