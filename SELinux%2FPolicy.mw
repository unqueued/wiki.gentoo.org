The SELinux policy is what contains all the rules that SELinux will enforce. It segregates control from definition, making it possible to distribute the same access control rules towards a multitude of systems.

== Introduction ==

=== Control vs definition ===

A main advantage of having a policy is that it segregates control from definition. The access rules are described / defined in the policy. This policy is then interpreted by the SELinux subsystem to verify and manage access control.

[[File:SELinux_MAC_permissions.png|link=]]

=== Fully enclosed ===

A SELinux policy is ''fully enclosed''. All information that SELinux needs to govern access controls is available inside the policy. No additional information is needed.

=== Modularity ===

In order to make the SELinux policy more manageable, SELinux supports multiple policy modules. Similar to a kernel configuration, where the entire Linux kernel can be build in a monolithic, single image, but also in a base kernel image with additional, loadable Linux kernel modules. 

The base SELinux policy contains rules that cannot be loaded/unloaded, as well as the definitions for the core Linux system controls. Unlike a Linux kernel, even the base policy module can be replaced - but a base policy always needs to be loaded.

Next to the base policies, individual policy modules are defined. These contain all the rules related to an application (or functional coherent set of applications).

=== Binary representation ===

The SELinux policy rules are compiled in a binary format - the human readable rules are not loaded verbatim into the SELinux subsystem. The binary representation allows for much smaller memory requirements, as well as optimized policy decisions.

== Policy operations ==

=== Rebuilding existing policy ===

To rebuild the existing policy (i.e. build the final from the binary base and policy modules), it is sufficient to call <code>semodule</code>:

{{RootCmd|semodule -B}}

If the rules themselves need to be recompiled into binary format, the Gentoo packages that provide the policies need to be rebuild.

{{RootCmd|emerge -1 $(qlist -IC sec-policy)}}

This will also reload the policies.

=== Loading and unloading specific modules ===

Specific modules can be unloaded and loaded using <code>semodule</code>.

For instance, to unload the ''screen'' policy module:

{{RootCmd|semodule -r screen}}

In order to load it again:

{{RootCmd|semodule -i /usr/share/selinux/strict/screen.pp}}

=== Disabling dontaudit rules ===

== Integration in Gentoo ==

=== Tweaking policies ===

=== Policy packages ===
