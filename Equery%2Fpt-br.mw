<languages />
{{InfoBox stack
|{{InfoBox wikipedia|Gentoolkit|header=true}}
|{{InfoBox gitweb|gentoolkit.git}}
|{{InfoBox project|Portage-Tools}}
}}

{{c|equery}} é uma ferramenta para tornar algumas operações comuns do Portage mais simples. Junto de outras operações, ela pode exibir dependências de pacotes, metadata, e arquivos instalados.

== Instalação ==

=== Emerge ===

Equery é parte de um conjunto de ferramentas instalado com o pacote {{Package|app-portage/gentoolkit}}:

{{Emerge|app-portage/gentoolkit}}

Para informações sobre a instalação do {{c|equery}} ou outras ferramentas visite o artigo [[Gentoolkit|Gentoolkit]].

== Uso ==

=== Introdução ===

{{c|equery}} é uma ferramenta que exibe informações úteis sobre os pacotes instalados no sistema. {{c|equery}} é baseado num sistema de módulos. Todo módulo tem um nome curto. Por exemplo, rodar {{c|equery l gcc}} é o mesmo que rodar {{c|equery list gcc}}. Invocando a opção <code>--help</code> ({{c|equery --help}}) irá mostrar opções globais e listar todos os módulos disponíveis e seus nomes curtos. Adicionar o nome de um módulo ao final ({{c|equery --help module}}) irá mostrar a tela de ajuda para este módulo específico. Por último, rodar {{c|man equery}} fornecerá também uma explicação detalhada de todos os módulos e opções disponíveis junto de alguns exemplos úteis. 

Abaixo está uma lista de funcionalidades que funcionam na maioria dos módulos. 

{{Cmd|equery --quiet list gcc|output=<pre>
sys-devel/gcc-4.3.2-r3
</pre>}}

{{Cmd|equery --quiet list sys-devel/gcc|output=<pre>
sys-devel/gcc-4.3.2-r3
</pre>}}

{{Cmd|equery --quiet list '>{{=}}sys-devel/gcc-4'|output=<pre>
sys-devel/gcc-4.3.2-r3
</pre>}}

Assim como o {{c|emerge}}, {{c|equery}} não entende nomes parciais de pacotes:

{{Cmd|equery check zilla|output=<pre>
!!! No package found matching zilla
</pre>}}

Diferente do {{c|emerge}}, {{c|equery}} aceita englobamento estilo shell no nome do pacote e/ou categoria:

{{Cmd|equery check '*zilla*'|output=<pre>
 * Checking www-client/mozilla-firefox-3.0.14 ...
    90 out of 90 files passed
</pre>}}

{{Cmd|equery check 'www-c*/*'|output=<pre>
 * Checking www-client/links-2.2 ...
   30 out of 30 files passed
 * Checking www-client/mozilla-firefox-3.0.14 ...
   90 out of 90 files passed
</pre>}}

A maioria dos módulos do equery tem múltipla saída:

{{Cmd|equery hasuse sse sse2|output=<pre>
 * Searching for USE flag sse ...
[IP-] [  ] media-libs/flac-1.2.1-r3 (0)
[IP-] [  ] media-libs/speex-1.2_beta3_p2 (0)
  
 * Searching for USE flag sse2 ...
[IP-] [  ] dev-libs/openssl-0.9.8k (0)
[IP-] [  ] x11-libs/pixman-0.16.0 (0)
</pre>}}

Alguns módulos também permitem totalmente expressões regulares:

{{Cmd|equery -q list --portage-tree --full-regex '[kr]?flickr.*'|output=<pre>
dev-dotnet/flickrnet-bin-2.2
dev-ruby/flickr-1.0.2-r1
dev-ruby/flickr-1.0.2-r2
dev-ruby/rflickr-20060201
media-gfx/kflickr-0.6
[...]
</pre>}}

{{Note|O suporte a englobamento substituiu algumas opções antigas do {{c|equery}}. Por exemplo, para agir em todos os pacotes em um certo conjunto, use um <code>'*'</code> (asterisco). Para agir em todos os pacotes de uma categoria, use <code>'nome-da-categoria/*'</code>.}}

{{Warning|Não esqueça de '''colocar a entrada entre aspas ao usar caracteres especiais do shell''' como asteriscos ou sinais de maior que/menor que.}}

As próximas seções neste documento darão uma introdução rápida aos diferentes módulos do {{c|equery}}.

=== Capacidades ===

Para uma lista de todas as capacidades do equery, apenas rode o seguinte comando sem argumentos: 

{{Cmd|equery|output=<pre>
Gentoo package query tool
Usage: equery [global-options] module-name [module-options]
 
modules (short name)
 (b)elongs               list what package FILES belong to
 (c)hanges               list changelog entries for ATOM
 chec(k)                 verify checksums and timestamps for PKG
 (d)epends               list all packages directly depending on ATOM
 dep(g)raph              display a tree of all dependencies for PKG
 (f)iles                 list all files installed by PKG
 h(a)s                   list all packages for matching ENVIRONMENT data stored in /var/db/pkg
 (h)asuse                list all packages that have USE flag
 ke(y)words              display keywords for specified PKG
 (l)ist                  list package matching PKG
 (m)eta                  display metadata about PKG
 (s)ize                  display total size of all files owned by PKG
 (u)ses                  display USE flags for PKG
 (w)hich                 print full path to ebuild for PKG
</pre>}}

=== Aliases ===

Uma abordagem comum ao trabalhar com o {{c|equery}} é criar aliases. Ao usar o bash eles normalmente são colocados no arquivo {{Path|~/.bashrc}}:

{{FileBox|filename=~/.bashrc|lang=bash|1=
alias eqf='equery f'
alias equ='equery u'
alias eqh='equery h'
alias eqa='equery a'
alias eqb='equery b'
alias eql='equery l'
alias eqd='equery d'
alias eqg='equery g'
alias eqc='equery c'
alias eqk='equery k'
alias eqm='equery m'
alias eqy='equery y'
alias eqs='equery s'
alias eqw='equery w'
}}

=== Encontrando um pacote ao qual um arquivo pertence (b) ===

{{Cmd|equery belongs -e /usr/bin/glxgears|output=<pre>
 * Searching for /usr/bin/glxgears ...
 x11-apps/mesa-progs-7.5.1 (/usr/bin/glxgears)
</pre>}}

<code>belongs</code> procura por arquivos correspondendo à uma expressão regular com a opção <code>-f</code>. A opção <code>-e</code> para a busca ao encontrar um resultado correspondente. Como nenhum arquivo em seu sistema deve ser propriedade de dois pacotes, esta é uma otimização segura. 

Uma versão encurtada de <code>belongs</code> (<code>b</code>) também pode ser usada. Por exemplo, para listar a qual pacote {{c|equery}} pertence:

{{Cmd|equery b equery|output=<pre>
 * Searching for equery ... 
app-portage/gentoolkit-0.3.0.8-r2 (/usr/lib/python-exec/python2.7/equery)
app-portage/gentoolkit-0.3.0.8-r2 (/usr/lib64/python3.3/site-packages/gentoolkit/test/equery)
app-portage/gentoolkit-0.3.0.8-r2 (/usr/bin/equery -> ../lib/python-exec/python-exec2)
app-portage/gentoolkit-0.3.0.8-r2 (/usr/lib64/python2.7/site-packages/gentoolkit/equery)
app-portage/gentoolkit-0.3.0.8-r2 (/usr/lib/python-exec/python3.3/equery)
app-portage/gentoolkit-0.3.0.8-r2 (/usr/lib64/python2.7/site-packages/gentoolkit/test/equery)
app-portage/gentoolkit-0.3.0.8-r2 (/usr/lib64/python3.3/site-packages/gentoolkit/equery)
</pre>}}

=== Visualizando entradas do ChangeLog com changes (c) ===

<code>changes</code> permite ao usuário visualizar entradas do ChangeLog para uma ou várias versões de um pacote. Imagine após rodar um {{c|emerge --sync}}, o Portage exibir uma mensagem dizendo que será atualizado. Para ver o que mudou este comando pode ser usado:

{{Cmd|equery changes portage|output=<pre>
*portage-2.1.6.13 (03 May 2009)
  
  03 May 2009; Zac Medico <zmedico@gentoo.org> +portage-2.1.6.13.ebuild:
  2.1.6.13 bump. This fixes bug #268398 (document econf automatic die)
  and bug #267104 (handle insufficient space interaction with userfetch).
  Bug #268228 tracks all bugs fixed since 2.1.6.11.
</pre>
}}

=== Verificando integridade de pacotes com check (k) ===

Por vezes é útil verificar a integridade dos pacotes. {{c|equery}} pode verificar MD5 bem como timestamps para indicar quando um pacote pode estar corrompido, substituído ou removido. 

{{Cmd|equery check gentoolkit|output=<pre>
 * Checking app-portage/gentoolkit-0.3.0_rc7 ...
   71 out of 71 files passed
</pre>
}}

=== Listando todos os pacotes que dependem de outro com depends (d) ===

Já se perguntou por que um certo pacote foi instalado no sistema? {{c|equery}} pode dizer quais pacotes listam este como dependência com a opção <code>depends</code>. Inclua dependências indiretas com a opção <code>-D</code>.

{{Cmd|equery depends pygtk|output=<pre>
 * Searching for pygtk ...
app-admin/pessulus-2.24.0 (>=dev-python/pygtk-2.6.0)
app-editors/gedit-2.24.3 (python ? >=dev-python/pygtk-2.12)
dev-libs/libgweather-2.24.3 (python ? >=dev-python/pygtk-2)
dev-python/gnome-python-base-2.22.3 (>=dev-python/pygtk-2.10.3)
dev-python/gnome-python-desktop-base-2.24.1 (>=dev-python/pygtk-2.10.3)
[...]
</pre>
}}

Um segundo exemplo lista todos os pacotes dependendo diretamente de udev:

{{Cmd|equery d udev|output=<pre>
sys-auth/consolekit-0.4.5_p20120320 (acl ? >=sys-fs/udev-146-r1)
sys-fs/cryptsetup-1.4.1 (>=sys-fs/udev-124)
                        (>=sys-fs/udev-182[static-libs])
                        (<=sys-fs/udev-171-r6)
sys-fs/lvm2-2.02.88 (>=sys-fs/udev-151-r4)
virtual/dev-manager-0 (sys-fs/udev)
x11-libs/cairo-1.10.2-r2 (drm ? >=sys-fs/udev-136)
</pre>}}

{{Note|1=This output will include optional dependencies governed by USE flags, i.e. <code>acl</code> USE in <code>(acl ? >=sys-fs/udev-146-r1)</code> above, even if that USE flag is not active.  A package would only be a dependency if that USE flag is active.}}

=== Obtendo gráficos de dependências com depgraph (g) ===

<code>depgraph</code> é o oposto de <code>depends</code>. Ele irá encontrar todos os ebuilds dos quais um dado pacote depende (e não os ebuilds que dependem deste pacote). Quando ele encontra uma dependência, irá recursivamente buscar as dependências ''daquele'' pacote. Controle o quão a fundo a árvore consegue com a opção <code>--depth</code>. 

{{Cmd|equery depgraph mozilla-firefox|output=<pre>
 * Searching for mozilla-firefox ...
 * dependency graph for www-client/mozilla-firefox-2.0.0.19:
`-- www-client/mozilla-firefox-2.0.0.19
 `-- virtual/jre-1.6.0 (virtual/jre) [java]
  `-- virtual/jdk-1.6.0 (virtual/jdk-1.6.0*)
  `-- dev-java/icedtea6-bin (unable to resolve: package masked or removed)
   `-- dev-java/sun-jdk-1.6.0.15
    `-- dev-java/java-sdk-docs-1.6.0.10 [doc]
     `-- app-arch/unzip-6.0-r1
      `-- app-arch/bzip2-1.0.5-r1 [bzip2]
    `-- sys-libs/glibc-2.9_p20081201-r2
     `-- sys-devel/gettext-0.17 [nls]
      `-- virtual/libiconv-0 (virtual/libiconv)
[...]
</pre>
}}

Reparou como <code>jre</code> é uma dependência ''direta'' e <code>jdk</code> é uma dependência ''indireta'' se a USE flag <code>java</code> USE está definida?

=== Listando arquivos instalados por um pacote com files (f) ===

{{c|equery}} pode listar todos os arquivos instalados por um ebuild com o módulo <code>files</code>. Tente <code>--tree</code> para obter um layout de diretório de fácil leitura. Use <code>--filter</code> para encontrar apenas um determinado tipo de arquivo. Por exemplo, para encontrar onde executáveis foram instalados use <code>--filter=cmd</code>, ou para encontrar rapidamente o local do arquivo de configuração tente <code>--filter=conf</code>. 

{{Cmd|equery files --tree gentoolkit|output=<pre>
 * Searching for gentoolkit ...
 * Contents of app-portage/gentoolkit-0.3.0_rc7:
 /etc
   > /eclean
      + distfiles.exclude
      + packages.exclude
   > /env.d
      + 99gentoolkit-env
   > /revdep-rebuild
      + 99revdep-rebuild
 /usr
   > /bin
      + eclean
      + eclean-dist -> eclean
      + eclean-pkg -> eclean
      + epkginfo
      + equery
      + eread
      + euse
      + glsa-check
      + revdep-rebuild
   > /lib
      > /python2.6
         > /site-packages
            > /gentoolkit
            + gentoolkit-0.3.0_rc7-py2.6.egg-info
               + __init__.py
               > /equery
                  + __init__.py
                  + belongs.py
                  + changes.py
                  + check.py
                  + depends.py
                  + depgraph.py
                  + files.py
[...]
</pre>
}}

Outro exemplo, para listar todos os arquivos instalados pelo {{Package|media-sound/ncmpcpp}}:

{{Cmd|equery f ncmpcpp|output=<pre>
 * Searching for ncmpcpp ...
 * Contents of media-sound/ncmpcpp-0.5.10:
/usr
/usr/bin
/usr/bin/ncmpcpp
/usr/share
/usr/share/bash-completion
/usr/share/bash-completion/ncmpcpp
/usr/share/doc
/usr/share/doc/ncmpcpp-0.5.10
/usr/share/doc/ncmpcpp-0.5.10/AUTHORS.bz2
/usr/share/doc/ncmpcpp-0.5.10/NEWS.bz2
/usr/share/doc/ncmpcpp-0.5.10/config.bz2
/usr/share/doc/ncmpcpp-0.5.10/keys.bz2
/usr/share/man
/usr/share/man/man1
/usr/share/man/man1/ncmpcpp.1.bz2
</pre>}}

Descrições de outros módulos e flags de linha de comando adicionais podem ser encontrados na [[man page]] do equery ({{c|man equery}}).

=== Procurando por pacotes que tem uma USE flag específica com hasuse (h) ===

<code>hasuse</code> pode ser usado para encontrar pacotes com uma determinada USE flag. <code>hasuse</code> não irá indicar se a flag foi habilitada ou não; simplesmente exibe uma lista de ebuilds que tem a flag consultada como opção. Veja a seção EXAMPLES de <code>hasuse</code> na man page do {{c|equery}} para mais dicas sobre como obter este tipo de informação.

{{Cmd|equery hasuse qt3 qt4|output=<pre>
 * Searching for USE flag qt3 ...
[IP-] [  ] app-crypt/pinentry-0.7.5 (0)
[IP-] [  ] net-dns/avahi-0.6.24-r2 (0)
[IP-] [  ] net-wireless/wpa_supplicant-0.6.9 (0)
  
 * Searching for USE flag qt4 ...
[IP-] [  ] net-dns/avahi-0.6.24-r2 (0)
[IP-] [  ] net-wireless/wpa_supplicant-0.6.9 (0)
</pre>
}}

=== Listando pacotes com list (l) ===

<code>list</code> é um módulo simples, porém poderoso para listar pacotes instalados da árvore do Portage ou de um overlay.

{{Cmd|equery list '*'|output=<pre>
 * Searching for * ...
[IP-] [  ] app-admin/eselect-1.2.3 (0)
[IP-] [  ] app-admin/eselect-ctags-1.10 (0)
[IP-] [  ] app-admin/eselect-esd-20060719 (0)
[IP-] [  ] app-admin/eselect-fontconfig-1.0 (0)
[IP-] [  ] app-admin/eselect-opengl-1.0.8-r1 (0)
[IP-] [  ] app-admin/eselect-python-20090824 (0)
[IP-] [  ] app-admin/eselect-ruby-20081227 (0)
[IP-] [  ] app-admin/eselect-vi-1.1.5 (0)
[IP-] [  ] app-admin/perl-cleaner-1.05 (0)
[IP-] [  ] app-admin/pessulus-2.24.0 (0)
[IP-] [  ] app-admin/python-updater-0.7 (0)
[IP-] [  ] app-admin/sudo-1.7.2_p1 (0)
[...]
</pre>
}}

A consulta padrão irá buscar pacotes instalados para o nome de pacote informado. Passado com <code>'*'</code> exibe os pacotes no conjunto. No campo mais à esquerda é possível ver que todos os pacotes acima estão <code>I</code>(nstalados) e oriundos da árvore do <code>P</code>(ortage). Eles não estão mascarados (o segundo campo está vazio), e todos estão instalados no slot padrão (0).

Use opções locais para buscar pacotes na árvore do Portage e overlays. 

{{Cmd|equery list -po vim|output=<pre>
 * Searching for vim ...
[-P-] [  ] app-editors/vim-7.0.235 (0)
[-P-] [ ~] app-editors/vim-7.0.243 (0)
[-P-] [  ] app-editors/vim-7.1.123 (0)
[-P-] [ ~] app-editors/vim-7.1.330 (0)
[-P-] [  ] app-editors/vim-7.2 (0)
[-P-] [ ~] app-editors/vim-7.2.108 (0)
[IP-] [  ] app-editors/vim-7.2.182 (0)
[-P-] [ ~] app-editors/vim-7.2.238 (0)
[-P-] [ ~] app-editors/vim-7.2.264 (0)
</pre>
}}

Neste é possível ver que a versão 7.2.182 está instalado e não há versões disponíveis de um overlay. Usuários podem ver quais versões estão mascaradas com <code>~</code> no segundo campo.

=== Visualizando metadata de pacotes com meta (m) ===

Cada pacote na árvore do Portage fornece ao menos algum [https://devmanual.gentoo.org/ebuild-writing/misc-files/metadata/index.html metadata] sobre seu mantenedor, etc. O amontoado de informações úteis depende de quanto os mantenedores decidiram fornecer. Sem opções, <code>meta</code> retorna algumas informações básicas e úteis.

{{Cmd|equery meta gnucash|output=<pre>
 * app-office/gnucash [gentoo]
 Maintainer:  tove@gentoo.org (Torsten Veller)
 Upstream:    None specified
 Location:    /usr/portage/app-office/gnucash
 Keywords:    2.2.9-r1:0: alpha amd64 ppc sparc x86
 Keywords:    2.2.9-r2:0:
 Keywords:    2.3.8:0:
 Keywords:    2.3.10:0: ~alpha ~amd64 ~ppc ~sparc ~x86
</pre>
}}

Alguns mantenedores fornecem informações extras sobre os pacotes que podem ser úteis: 

{{Cmd|equery meta --description emacs|output=<pre>
 * app-editors/emacs
  GNU Emacs is an extensible, customizable text editor - and more. At its core
  is an interpreter for Emacs Lisp, a dialect of the Lisp programming language
  with extensions to support text editing. The features of GNU Emacs include:
   * Content-sensitive editing modes, including syntax coloring, for a wide
     variety of file types including plain text, source code, and HTML.
   * Complete built-in documentation, including a tutorial for new users.
   * Support for many languages and their scripts, including all the European
     "Latin" scripts, Russian, Greek, Japanese, Chinese, Korean, Thai,
     Vietnamese, Lao, Ethiopian, and some Indian scripts.
   * Highly customizable, using Emacs Lisp code or a graphical customization
     interface.
   * A large number of extensions that add other functionality, including a
     project planner, mail and news reader, debugger interface, calendar, and
     more. Many of these extensions are distributed with GNU Emacs; others are
     available separately.
</pre>
}}

=== Encontrando tamanho de pacotes com size (s) ===

Já ficou curioso pra saber quanto espaço um pacote está ocupando? Como um pacote pode ter seus arquivos em um número de diretórios, o comando {{c|du -hc}} de sempre pode não dar a noção correta. Mas não se preocupe, {{c|equery}} ao resgate!

{{Cmd|equery size openoffice-bin|output=<pre>
 * app-office/openoffice-bin-3.1.1
         Total files : 4624
         Total size  : 361.38 MiB
</pre>
}}

Use <code>size</code> para exibir o espaço total usado em unidades legíveis e listar o número total de arquivos que um pacote possui. Para obter o tamanho total em bytes use <code>--bytes</code>.

=== Listando USE flags por pacote com uses (u) ===

O módulo do {{c|equery}} <code>uses</code> fornece informações sobre quais USE flags estão disponíveis para um certo pacote e quais dessas flags estão ativas no momento. 

{{Cmd|equery uses gst-plugins-meta|output=<pre>
 * Searching for gst-plugins-meta ...
[ Legend : U - flag is set in make.conf       ]
[        : I - package is installed with flag ]
[ Colors : set, unset                         ]
 * Found these USE flags for media-plugins/gst-plugins-meta-0.10-r2:
 U I
 + + X      : Adds support for X11
 - - a52    : Enables support for decoding ATSC A/52 streams used in DVD
 + + alsa   : Adds support for media-libs/alsa-lib (Advanced Linux Sound
              Architecture)
 - - dvb    : Adds support for DVB (Digital Video Broadcasting)
 + + dvd    : Adds support for DVDs
 + + esd    : Adds support for media-sound/esound (Enlightened Sound Daemon)
 + + ffmpeg : Enable ffmpeg-based audio/video codec support
 + + flac   : Adds support for FLAC: Free Lossless Audio Codec
 - - mad    : Adds support for mad (high-quality mp3 decoder library and cli
              frontend)
 + + mpeg   : Adds libmpeg3 support to various packages
 - - mythtv : Support for retrieval from media-tv/mythtv backend
 + + ogg    : Adds support for the Ogg container format (commonly used by
              Vorbis, Theora and flac)
 - - oss    : Adds support for OSS (Open Sound System)
 + + theora : Adds support for the Theora Video Compression Codec
 + + vorbis : Adds support for the OggVorbis audio codec
 - - xv     : Adds in optional support for the Xvideo extension (an X API for
              video playback)
</pre>
}}

Aqui está um número de USE flags ativas no pacote de plugins do gstreamer, mas pode ser visto que há outras USE flags disponíveis. Para mais informações sobre USE flags, consulte o capítulo [[Handbook:X86/Working/USE|USE Flags]] do [[Handbook:Main Page|Gentoo Handbook]]. 

=== Encontrando o caminho dos ebuilds com which (w) ===

<code>which</code> é um script simples para ajudar os usuários a encontrar rapidamente o caminho de um ebuild. Se o nome de um pacote não versionado é passado usando <code>which</code> retornará o caminho para a versão do ebuild instalável mais recente. Em outras palavras, irá retornar o ebuild que o Portage usaria se {{c|emerge example/package}} fosse digitado. <code>which</code> também aceita um pacote ''versionado'' para conseguir o caminho para o ebuild citado. 

{{Cmd|equery which gnome|output=<pre>
/usr/portage/gnome-base/gnome/gnome-2.26.3.ebuild
</pre>
}}

Por último, se nenhuma das funcionalidade acima do {{c|equery}} deram alguma resposta, tente usar <code>which</code> para buscar manualmente um ebuild com programas tais como {{c|cat}}, {{c|less}} ou {{c|grep}}: 

{{Cmd|grep HOMEPAGE $(equery which gentoolkit)|output=<pre>
HOMEPAGE="http://www.gentoo.org/proj/en/portage/tools/index.xml"
</pre>
}}

{{Warning|Esteja atento que {{c|equery}} atualmente altera o formato da saída se a mesma é empilhada. O formato vertical visa ser mais fácil de ser analisado por outras ferramentas, mas pode ser desativado adicionando a opção <code>--no-pipe</code>. Ao escrever scripts que usem {{c|equery}} fique atento a este comportamento.}}

== Veja também ==

* [[q applets]] - A collection of small and fast Portage helper tools written in C.
* [[eix]] - A set of utilities for searching and diffing the local Portage tree and overlays using a binary cache.
* [[Gentoolkit]] - A suite of tools to ease the administration of a Gentoo system.

[[Category:Portage tools]]
