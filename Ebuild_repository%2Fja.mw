<languages />
'''オーバーレイは、 Portage がソフトウェアを取扱う際に考慮する追加のリポジトリです。'''

Gentoo Linuxでは、ユーザには既に「Portage ツリー」と呼ばれるメインのリポジトリがあります。このメインのリポジトリは、Gentoo 開発者たちによって維持管理されている全てのソフトウェアパッケージ ([[Ebuild|ebuild]] と呼ばれているもの)で構成されています。しかしユーザは、この Portage ツリーに対して更に追加のリポジトリを付け加えることもできます。メインのツリーに対して覆い被せる("lay over")ことから、からこれを"overlay"と呼んでいます。

パッケージのリポジトリは、 (ebuild や metadata ファイル、ChangeLog エントリなどの) ファイル群以外のなにものでもありません。したがって、こうしたリポジトリは、 (git や cvs、svn などでの)公開リポジトリから pull してくることもできますし、tar アーカイブでダウンロードしてきてシステムに手作業で展開することもできます。ただし、利用するならば、''信頼のおける''サードパーティにより管理されているリポジトリを推奨します。Portage は、インストールするソフトウェアを決定するにあたり、インストール済みオーバーレイのファイルをも読み出すからです。

== オーバーレイの取扱い ==

Portage は、変数 <code>PORTDIR_OVERLAY</code> を読み出して、システム内にインストールされたオーバーレイを組み込みます。この変数は、システム内のディレクトリパスの、空白文字で区切られたリストです。Portage は、指定されたこれらのディレクトリパスから、追加されているリポジトリのルートディレクトリを検出します。

=== 手作業でオーバーレイの場所を設定する ===

自分でオーバーレイを作成したいときはまず、 Portage に検出させたいパッケージを置く場所を作成します。そして、例えば <code>/home/user/overlay</code> を作成したならば、 {{Path|/etc/portage/make.conf}} 内に <code>PORTDIR_OVERLAY="/home/user/overlay"</code> と書き加えます。

{{File|/etc/portage/make.conf|手作業でオーバーレイを追加|<pre>
PORTDIR_OVERLAY="/home/user/overlay"
</pre>}}

=== crossdevを使う ===

[[crossdev]] は自動的に、<code>PORTDIR_OVERLAY</code> で設定されている最初のオーバーレイの中に ebuild と categories を生成します。[[crossdev]]が、 [[layman]] のオーバーレイや自分のマシン固有のオーバーレイ (通常は <code>/usr/local/portage</code> に作成される) を妨害するのを防ぎたいかもしれません。そのためには、 [[crossdev]] 専用のオーバーレイを作成するとよいでしょう:

{{RootCmd|mkdir -p /usr/local/portage-crossdev/profiles
|echo local-crossdev > /usr/local/portage-crossdev/profiles/repo_name}}

そして、portage と crossdev に対して、このオーバーレイを知らせます。

{{File|/etc/portage/make.conf|crossdev に ebuild を  local-crossdev に保存させ、他のオーバーレイより優先するようにする|<pre>
source /var/lib/layman/make.conf
PORTDIR_OVERLAY="/usr/local/portage-crossdev ${PORTDIR_OVERLAY} /usr/local/portage"
</pre>}}

{{File|/etc/portage/make.conf|layman を利用していない場合の、crossdev にローカルオーバーレイを破壊させない方法|<pre>
PORTDIR_OVERLAY="/usr/local/portage-crossdev /usr/local/portage"
</pre>}}

=== laymanを使う ===

複数のオーバーレイを簡単に管理するためには、[[Layman|layman]] というツールがつくられています。このツールは、著名なユーザが管理するオーバーレイやデベロッパのオーバーレイを認識し、それらを<code>PORTDIR_OVERLAY</code> で指定されている場所に追加したり、インストールや同期をしたりすることができます。

=== ローカルオーバーレイ ===

ローカルのオーバーレイの設定方法は、 [[Overlay/Local_overlay]] を参照してください。

=== オーバーレイの優先順位について ===

それぞれのオーバーレイは、固有の優先度を保持します。特定のバージョンが複数のオーバーレイ内に見つかって処理方法が不明確になった場合に備えるための仕様です。優先度のより高いオーバーレイ内の ebuild が、優先度の低いオーバーレイ内の ebuild に先んじて処理されます。

{{Note|以下の''素直な''優先順位処理は、2011年1月に導入されたものです。それ以前には、正反対の順位付けがされていました。すなわち、数字の小さなものほど優先される仕様でした。}}

優先度を含んだオーバーレイのリストは、以下のコマンドの出力で得られます。

{{Cmd|emerge --info --verbose}}

<code>PORTDIR_OVERLAY</code> 変数が [[#Setting overlay priorities|下記]] のような方法で変更されていなければ、gentoo portage ツリーには -1000 という優先度が設定されます。すなわち、他のすべてのオーバーレイのほうが先んじて処理されます。この挙動は既定の仕様です。なぜなら、オーバーレイとは、portage ツリーの上に覆い被せる (''lay over/on top'') ように設計されたものなのですから。

==== オーバーレイの優先度を設定 ====

オーバーレイの優先度は、<code>PORTDIR_OVERLAY</code> 変数内での項目記載順で算出されます。portage は、変数内を左から右へ''歩き''、優先度を増やしていきます。最も左の項目が優先度 1 で始まり、その次の項目が 2 、以下同様です。

{{Note|以前には <code>/etc/portage/repos.conf</code> 内でオーバーレイの優先度を設定していたことがありました。これはもはや機能しません。}}

<code>PORTDIR_OVERLAY</code> 変数に portage ツリーの項目がないかぎりは、portage ツリーは常に優先度 -1000 に設定されます。
この優先度は、 <code>PORTDIR_OVERLAY</code> 変数内に <code>PORTDIR</code> を記載することで容易に変更することができます :

{{File|/etc/portage/make.conf|Manual portage tree priority setting|<pre>
PORTDIR_OVERLAY="/home/user/overlay ${PORTDIR}"
</pre>}}

In the example above the user overlay will be assigned a priority of 1 and the portage tree will be assigned a priority of 2. 

{{Note|オーバーレイを管理する際に [[Layman|layman]] も利用しているなら、 [[Layman#Setting overlay priorities with layman|layman におけるオーバーレイの優先順位設定]] の記事も役に立つかもしれません。}}

=== 安全性が確認されていないオーバーレイの使用 ===

巨大なオーバーレイや、よく知らない・低品質なオーバーレイを利用するなら、そのオーバレイ全体に対してハードマスクをかけるのが最善でしょう。

{{File|/etc/portage/package.mask|オーバーレイ内の全てのパッケージをマスクする|<pre>
*/*::overlay-name
</pre>}}

その後に、emerge したい特定のパッケージだけのマスクを外します。

{{File|/etc/portage/package.unmask|オーバーレイ内の特定パッケージのマスクを外す|<pre>
foo/bar::overlay-name
</pre>}}

この方法ならば、更新の際に何の不具合も起こらないでしょうし、優先順位をつける方法に比べて安全です。

== メタデータのキャッシュ ==

=== キャッシュの生成について ===

portage は、オーバーレイが多量にインストールされている場合には、パッケージの前提関係を解決するような処理に長い時間を要するかもしれません。これは、オーバーレイには一般的に、メタデータキャッシュが含まれていないためです。

ローカルのメタデータキャッシュを生成するには、オーバーレイとの同期後に emerge --regen を実行してください。

{{RootCmd|layman -S
|emerge --regen}}

=== eix との連動 ===

==== eix-sync ====

eix-sync は、オーバレイとportage ツリーを同期させた後に <code>emerge --regen</code> を実行することができます。

{{File|/etc/eix-sync.conf||<pre>
# すべてのオーバーレイの同期
*
  
# オーバーレイのメタデータを再生成
@emerge --regen || true
</pre>}}

==== eix-update ====

eix-update は、 <code>emerge --regen</code> によって生成されたメタデータキャッシュを利用することで、高速化と精度向上を図ることができます。この機能を有効にするには、{{Path|/etc/eixrc/01-cache}} ファイルで <code>OVERLAY_CACHE_METHOD</code> 変数を "<code>assign</code>" に設定しましょう。

{{File|/etc/eixrc/01-cache|OVERLAY_CACHE_METHOD の設定|<pre>
OVERLAY_CACHE_METHOD="assign"
</pre>}}


[[Category:Portage]]
