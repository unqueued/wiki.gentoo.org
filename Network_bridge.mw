{{Stub}}

== Introduction ==

A network bridge can be used to connect two independent network segments at layer 2 level (much like a router).  Common applications include transparent proxying, transparent filtering (using [[iptables]]) and saving money on hardware as some mainboards come with two PHY interfaces.  For this how-to, eth0 and eth1 are used but of course they can be replaced by whatever you need.  

The way bridging works on Linux is that a bridging device is created (brX) that contains at least two network devices as ports (e.g. ethX or pppX).  As the bridge works on layer 2, no IP addresses are needed on the port devices - on a typical setup, the bridging device itself will receive the IP (e.g. via DHCP).

== Kernel ==
{{Kernel||<pre>
[*] Networking support  --->
   Networking options  --->
      <M> 802.1d Ethernet Bridging
</pre>}}

== Installation ==
Install {{Package|net-misc/bridge-utils}}:
{{Emerge|bridge-utils}}

== Host Configuration (using OpenRC init scripts) ==
First, we need to add the bridge device to the {{Path|/etc/conf.d/net}} file. As an example, bridge configuration with DHCP:

{{Note|Note that it is important to include 'setfd 0' and 'sethello 10' in order to bring the interface up quickly.  Other values will cause network packets to be dropped for the first 30 seconds after the bridge has become active.  This in turn could prevent DHCP from working.}}

{{File|/etc/conf.d/net||<pre>
# bridge ports defined empty to avoid DHCP being run for their configuration
config_eth0="null"
config_eth1="null"

# bridge
config_br0="dhcp"
brctl_br0="setfd 0
sethello 10
stp off"
bridge_br0="eth0 eth1"
</pre>}}

More documentation can be found in {{Path|/usr/share/doc/openrc-*/net.example}}.

Next, create the init script and start the interface as follows:
{{RootCmd
|ln -s /etc/init.d/net.lo /etc/init.d/net.br0
|/etc/init.d/net.br0 start
}}

Finally, to make sure the bridge is automatically set up on subsequent boots, run:
{{RootCmd|rc-update add net.br0 default}}

== Host Configuration (using systemd) ==
First, we need to add the bridge device to the {{Path|/etc/conf.d/net}} file. As an example, bridge configuration with fixed IP address (192.168.1.2 connected to the gateway 192.168.1.1 by eth0). This is an example to use for "internal" bridging to e.g. a LXR container and therefore only connects to one physical ethernet card. This example has to be extended for bridging more than one physical card.

{{Note|Include 'setfd 0' and 'sethello 10' in order to bring the interface up quickly (see above)}}

{{File|/etc/conf.d/net||<pre>
# bridge ports defined empty to avoid DHCP being run for their configuration
config_eth0="null"
#Bridge-config
config_br0="192.168.1.2 netmask 255.255.255.0 broadcast 192.168.1.255"
routes_br0="192.168.1.1"
brctl_br0="setfd 0 sethello 10 stp off"
bridge_br0="eth0"
</pre>}}

Next, create a systemd unit script and start the interface as follows:
{{File|/etc/systemd/system/bridge@.service||<pre>
[Unit]
Description=network bridge %I
After=network.target

[Service]
Type=oneshot
RemainAfterExit=yes

EnvironmentFile=/etc/conf.d/net

ExecStart=/sbin/brctl addbr %i
ExecStart=/bin/ifconfig %i ${config_%i} up
ExecStart=/bin/ifconfig ${bridge_%i} up
ExecStart=/sbin/brctl addif %i ${bridge_%i}
ExecStart=/bin/ip route add default via ${routes_%i}

ExecStop=/bin/ip route del default via ${routes_%i}
ExecStop=/bin/ifconfig ${bridge_%i} down
ExecStop=/bin/ifconfig %i down
ExecStop=/sbin/brctl delbr %i

[Install]
WantedBy=multi-user.target
</pre>}}

{{RootCmd|systemctl start bridge@br0.service
}}

Finally, to make sure the bridge is automatically set up on subsequent boots, run:
{{RootCmd|systemctl enable bridge@br0.service}}

== External Resources ==

* [http://www.linuxfoundation.org/collaborate/workgroups/networking/bridge Official Linux network bridge documentation]
* [http://www.tldp.org/HOWTO/Ethernet-Bridge-netfilter-HOWTO.html Generic Linux network bridge how-to]
* [http://www.gentoo-wiki.info/Bridging Article on the inofficial gentoo wiki with VLAN and iptables examples]

[[Category:Network management]]
