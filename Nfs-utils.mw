{{Stub}}
{{InfoBox stack
|{{InfoBox homepage|http://linux-nfs.org/|header=true}}
|{{InfoBox wikipedia|Network_File_System}}
}}

== USE flags ==
The following USE flags are supported by {{Package|net-fs/nfs-utils}} package:
{{USEflag
|package=net-fs/nfs-utils
|elibc_glibc
|nfsv3
|nfsv4++yes
|tcpd+yes
|caps
|ipv6+yes 
|kerberos
}}

==Installation==
{{emerge|net-fs/nfs-utils}}

==Configuration ==
This section explains how to setup a simple NFS server - NFS client configuration. 
The NFSv4 server configuration is mostly like configuring the version 3, with one major change all NFS shares are exported from one virtual root directory.

The server has 2 NFS shares which are: 
* {{Path|/export/home}} - directory with user homes
* {{Path|/export/data}} - directory with example data

These 2 shares are mounted on the server system at following points in the tree:
{{Cmd|<nowiki>df -h | egrep 'File|home|data'</nowiki>
|output=<pre>
Filesystem      Size  Used Avail Use% Mounted on
/dev/sdb1        20G  977M   19G   5% /home
/dev/sdc1       200G   91G  110G  46% /data
</pre>
}}

The client uses now TCP protocol as default, to mount NFS shares. Previous NFS versions use UDP as the default protocol.

===Linux===
Verify if NFS version 4 is enabled in current running linux kernel, this has to be ensured on the server as well as on the client installations:

{{RootCmd|cd /usr/src/linux}}
{{RootCmd|make nconfig}}

{{Kernel||<pre>
File systems  --->
   Network File Systems  --->
      <*>   NFS client support
      [*]     NFS client support for NFS version 4
      <*>   NFS server support
      [*]     NFS server support for NFS version 4 (EXPERIMENTAL)
</pre>
}}

{{Note|NFS server support is not needed on a NFS client installation, also NFS client support is not necessarily needed on a NFS server.}}
Optionally NFSv4 support could be build as a kernel module. After NFSv4 support has been enabled, new linux kernel needs to be build, installed and the system has to be restarted.

===Server===
====/export====
A virtual NFS root directory needs to be created:
{{RootCmd|cd /}}
{{RootCmd|mkdir export}}
{{Note|You can substitute the name and the location of the virtual root (here: {{Path|/export}}), with anything else f.e. {{Path|/nfsroot}} or {{Path|/home/NFSv4root}}.}}

Create 2 directories in the {{Path|/export}} directory for NFS shares:
{{RootCmd|cd /export && mkdir {home,data} }}

====NFS shares====
Mount the shares to its mount points:
{{RootCmd|mount --bind /home /export/home && mount --bind /data /export/data}}

Add following 2 lines to {{Path|/etc/fstab}} file, so NFS shares will still be available after a system reboot:
{{File|/etc/fstab||<pre>
[...]
/home    /export/home   none    bind  0  0
/data    /export/data   none    bind  0  0
[...]
</pre>
}}

====/etc/exports====
NFS shares are configured in {{Path|/etc/exports}} file. This file has following structure:
<pre>
source1         target1(option1,option2)
source2         target2(option1,option3)
</pre>

where:

* ''source'' is a particular directory withing the virtual root f.e. {{Path|/export/home}}, and the virtual root itself.
* ''target'' can be a single host f.e. ''larrysPC'' , or a network ''192.168.0.1/28'', or a wildcard like f.e. ''*'' which means here it can be accessed from all networks by all hosts on all interfaces.

For options view following table:
{| class="wikitable"
|+{{Path|/etc/exports}} options
|-
!Option
!Explanation
|- 
| ro || '''default''' the directory is shared read only; the client machine will not be able to write it.
|-
| rw || The client machine will have read and write access to the directory.
|-
| no_root_squash || If no_root_squash is selected, then root on the client machine will have the same level of access to the files on the system as root on the server. This can have serious security implications. '''You should not specify this option without a good reason'''.
|-
| no_subtree_check || If only part of a volume is exported, a routine called subtree checking verifies that a file that is requested from the client is in the appropriate part of the volume. If the entire volume is exported, disabling this check will speed up transfers. 
|-
| sync || By '''default'''. It is possible to switch to '''async'''.
|-
| insecure || Tells the NFS server to use unprivileged ports (ports above 1024). This may be needed to allow mounting the NFS share from MacOS X or through the nfs:/ kioslave in KDE.
|-
| fsid=0 || NFS sever identifies each file system that it exports with a digit, for the NFSv4 server there is a virtual root filesystem which is the root of all exported file systems. This root is identified with '''fsid=0'''.
|}

Specify the virtual root {{Path|/export}} as the first entry, then define specific shares, in this particular case the file will look like in the example below:

{{File|/etc/exports||<pre>
/export                 192.168.0.0/24(rw,fsid=0,no_subtree_check)
/export/home            192.168.0.0/24(rw,nohide,insecure,no_subtree_check)
/export/data            192.168.0.0/24(rw,nohide,insecure,no_subtree_check)
</pre>
}}
{{Note|Substitute the target network used in this example (''192.168.0.0/24'') with your own network}}

====/etc/conf.d/nfs====
To provide NFSv4 protocol access only, specify which version of the NFS protocol the server has to use ''-V 4'' and which versions are not supported ''-N 3 -N 2''  in the {{Path|/etc/conf.d/nfs}} file
{{File|/etc/conf.d/nfs||<pre>
[...]
# Options to pass to rpc.mountd
# ex. OPTS_RPC_MOUNTD="-p 32767"
OPTS_RPC_MOUNTD="-V 4 -N 3 -N 2"
[...]
</pre>
}}
{{Important|To provide NFS version 3 support additionally, think of building a linux module}}

====starting service daemon====
Finally start the configured NFS daemon:
{{RootCmd|/etc/init.d/nfs start
|output=<pre>
 * Starting rpcbind ...                                                                            [ ok ]
 * Starting NFS statd ...                                                                          [ ok ]
 * Starting idmapd ...                                                                             [ ok ]
 * Use of the opts variable is deprecated and will be
 * removed in the future.
 * Please use extra_commands, extra_started_commands or extra_stopped_commands.
 * Exporting NFS directories ...                                                                   [ ok ]
 * Starting NFS mountd ...                                                                         [ ok ]
 * Starting NFS daemon ...                                                                         [ ok ]
 * Starting NFS smnotify ...                                                                       [ ok ]
</pre>
}}

As shown many services are started in specific order, ''rpcbind'' is started as the first service. 
If there is a need to stop the NFS service, the easiest way to stop all NFS services at once is to stop the '''rpcbind''' service itself. 

It command will shutdown each service shown in the upper starting routine example: 
{{RootCmd|/etc/init.d/rpcbind stop}}

Add nfs to a runlevel, to be able to use it after a reboot:
{{RootCmd|rc-update add nfs default
|output=<pre>
* service nfs added to runlevel default
</pre>
}}

===Client===

==Security==

==Troubleshooting==
Verfiying NFS server is running and listening for connections:
{{RootCmd|<nowiki>netstat -tupan | egrep 'rpc|Active|Proto'</nowiki>
|output=<pre>
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:2049            0.0.0.0:*               LISTEN      -                   
tcp        0      0 0.0.0.0:39746           0.0.0.0:*               LISTEN      16979/rpc.mountd    
tcp        0      0 0.0.0.0:40873           0.0.0.0:*               LISTEN      16943/rpc.statd     
tcp        0      0 0.0.0.0:55307           0.0.0.0:*               LISTEN      16979/rpc.mountd    
tcp        0      0 0.0.0.0:45454           0.0.0.0:*               LISTEN      16979/rpc.mountd    
tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      16911/rpcbind       
udp        0      0 0.0.0.0:111             0.0.0.0:*                           16911/rpcbind       
udp        0      0 0.0.0.0:39450           0.0.0.0:*                           16979/rpc.mountd    
udp        0      0 0.0.0.0:33589           0.0.0.0:*                           16979/rpc.mountd    
udp        0      0 0.0.0.0:969             0.0.0.0:*                           16911/rpcbind       
udp        0      0 0.0.0.0:1007            0.0.0.0:*                           16943/rpc.statd     
udp        0      0 0.0.0.0:56459           0.0.0.0:*                           16943/rpc.statd     
udp        0      0 0.0.0.0:55271           0.0.0.0:*                           16979/rpc.mountd
</pre>
}}

Verifying which NFS specific daemons are running:
{{RootCmd|rpcinfo -p
|output=<pre>
   program vers proto   port  service
    100000    4   tcp    111  portmapper
    100000    3   tcp    111  portmapper
    100000    2   tcp    111  portmapper
    100000    4   udp    111  portmapper
    100000    3   udp    111  portmapper
    100000    2   udp    111  portmapper
    100024    1   udp  56459  status
    100024    1   tcp  40873  status
    100005    1   udp  33589  mountd
    100005    1   tcp  45454  mountd
    100005    2   udp  39450  mountd
    100005    2   tcp  55307  mountd
    100005    3   udp  55271  mountd
    100005    3   tcp  39746  mountd
    100003    3   tcp   2049  nfs
    100003    4   tcp   2049  nfs
    100021    1   udp  53012  nlockmgr
    100021    3   udp  53012  nlockmgr
    100021    4   udp  53012  nlockmgr
    100021    1   tcp  45405  nlockmgr
    100021    3   tcp  45405  nlockmgr
    100021    4   tcp  45405  nlockmgr
</pre>
}}

Verfiying current open connections to the NFS server:
{{Cmd|<nowiki>netstat -tn | egrep '2049|Active|Proto'</nowiki>
|output=<pre>
Active Internet connections (w/o servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State      
tcp        0      0 192.168.0.1:2049       192.168.0.10:884        ESTABLISHED
</pre>
}}

For more specific examples refer to the official NFS troubleshooting section 
* http://nfs.sourceforge.net/nfs-howto/ar01s07.html

==See also==

==External resources==
* http://linux-nfs.org/
* http://www.ietf.org/rfc/rfc3530.txt
* https://help.ubuntu.com/community/NFSv4Howto
* http://www.gentoo-wiki.info/HOWTO_NFSv4
