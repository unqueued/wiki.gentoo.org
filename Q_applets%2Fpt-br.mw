{{Lowercase title}}
<languages />
{{InfoBox stack
|{{InfoBox gdoc|Portage-Tools|header=true}}
|{{InfoBox github|gentoo/portage-utils}}
|{{InfoBox gitweb|portage-utils.git}}
}}

{{Metadata|abstract=As q applets são uma coleção de pequenas e rápidas ferramentas auxiliares do Portage escritas em C. Este guia aborda alguns usos comuns destas ferramentas auxiliares, também conhecidas como app-portage/portage-utils package.}}

As q applets são uma coleção de pequenas e rápidas ferramentas auxiliares do Portage escritas em C. Este guia aborda alguns usos comuns destas ferramentas auxiliares, que são fornecidas através do pacote {{Package|app-portage/portage-utils}}.

O pacote {{Package|app-portage/portage-utils}} é uma coleção de utilitários muito rápidos escritos em C, que são destinados a oferecer uma alternativa mais rápida, mas mais limitada que seu homólogo {{Package|app-portage/gentoolkit}}. Por favor note que as q applets não destinam a substituir o [[Gentoolkit|gentoolkit]]. Os utilitários podem ser muito mais eficientes do que os equivalentes do [[Gentoolkit|gentoolkit]] e podem ser mais adequados para serem usados em scripts que precisam chamar o Portage repetidamente, mas elas "não" oferecem a mesma funcionalidade. q applets não consideram [https://devmanual.gentoo.org/ebuild-writing/using-eclasses/index.html eclasses] e não fornecem ferramentas como {{c|revdep-rebuild}} ou {{c|glsa-check}}. 

__TOC__

== Instalação ==

=== USE flags ===

{{USEflag|package=app-portage/portage-utils}}

=== Emerge ===

Instalar q applets:

{{Emerge|app-portage/portage-utils}}

== Configuration ==

Before using the applets first initialize the cache:

{{RootCmd|q -r}}

== Usage ==

=== Invocation ===

The complete list of applications that are provided by {{Package|app-portage/portage-utils}} can be listed by typing {{c|man q}} or {{c|q --help}}. Please read the man page for each utility described, as this guide is only meant to be a short reference for the most useful functions and does not include all the information about each application.

To see the available applets with a short description of their function, use {{c|q --help}}:

{{Cmd|q --help|output=<pre>
Usage: q <applet> <args>  : invoke a portage utility applet
  
Currently defined applets:
        q <applet> <args> : virtual applet
    qatom <pkg>           : split atom strings
   qcache <action> <args> : search the metadata cache
   qcheck <pkgname>       : verify integrity of installed packages
 qdepends <pkgname>       : show dependency info
    qfile <filename>      : list all pkgs owning files
    qgrep <misc args>     : grep in ebuilds
    qlist <pkgname>       : list files owned by pkgname
     qlop <pkgname>       : emerge log analyzer
   qmerge <pkgnames>      : fetch and merge binary package
     qpkg <misc args>     : manipulate Gentoo binpkgs
  qsearch <regex>         : search pkgname/desc
    qsize <pkgname>       : calculate size usage
    qtbz2 <misc args>     : manipulate tbz2 packages
     quse <useflag>       : find pkgs using useflags
    qxpak <misc args>     : manipulate xpak archives
  
Options: -[irmM:vqChV]
  -i, --install        * Install symlinks for applets
  -r, --reinitialize   * Reinitialize ebuild cache
  -m, --metacache      * Reinitialize metadata cache
  -M, --modpath  <arg> * Module path
  -v, --verbose        * Make a lot of noise
  -q, --quiet          * Tighter output; suppress warnings
  -C, --nocolor        * Don't output color
  -h, --help           * Print this help and exit
  -V, --version        * Print version and exit</pre>
}} 

=== How to find a package to which a file belongs (qfile) ===

The {{c|qfile}} command finds the package to which a file belongs: 

{{Cmd|qfile /etc/fonts/fonts.conf|output=<pre>
media-libs/fontconfig (/etc/fonts/fonts.conf)
</pre>}}

{{Cmd|qfile /usr/share/keymaps/atari/atari-uk-falcon.map.gz|output=<pre>
sys-apps/kbd (/usr/share/keymaps/atari/atari-uk-falcon.map.gz)
</pre>}}

=== Verifying package integrity (qcheck) ===

To check the MD5 sums or modification times of the files installed by some package, use the {{c|qcheck}} application: 

{{Cmd|qcheck portage-utils|output=<pre>
Checking app-portage/portage-utils-0.1.13 ...
  * 36 out of 36 files are good
</pre>}}

Of course, all the files which were changed after installation will be reported here. If the application reports configuration files which have been manually edited after installation, then there's nothing to worry about. 

=== Listing packages which depend on some package (qdepends) ===

Of course there's also an application which allows to list all the packages which depend on some package. This is done using {{c|qdepends}}. Use the <code>-a</code> option to show all the <var>DEPEND</var>, <var>RDEPEND</var>, and <var>PDEPEND</var> information for a package. 

{{Cmd|qdepends -a pygtk|output=<pre>
 * DEPEND
dev-python/pygtk-2.8.2: >=dev-lang/python-2.3 >=x11-libs/gtk+-2.8.0
>=dev-libs/glib-2.8.0 >=x11-libs/pango-1.10.0 >=dev-libs/atk-1.8.0
>=gnome-base/libglade-2.5.0 >=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl >=x11-libs/gtkglarea-1.99
>=dev-util/pkgconfig-0.9 sys-devel/patch
 * RDEPEND
dev-python/pygtk-2.8.2: >=dev-lang/python-2.3 >=x11-libs/gtk+-2.8.0
>=dev-libs/glib-2.8.0 >=x11-libs/pango-1.10.0 >=dev-libs/atk-1.8.0
>=gnome-base/libglade-2.5.0 >=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl >=x11-libs/gtkglarea-1.99
 * PDEPEND
</pre>}}

=== Listing all packages (installed or not) which depend on some package (qgrep) ===

The q applets can be used to find ebuilds that mention an ebuild's name ("libechonest" is used in the example below) with great speed:

{{Cmd|<nowiki>qgrep -H libechonest | cut -f1 -d":" | uniq</nowiki>|output=<pre>
media-libs/libechonest/libechonest-2.0.2.ebuild
media-libs/libechonest/libechonest-2.2.0-r1.ebuild
media-libs/libechonest/libechonest-2.3.0.ebuild
media-libs/libechonest/libechonest-2.3.1.ebuild
media-libs/libechonest/libechonest-2.3.1-r1.ebuild
media-libs/libechonest/libechonest-9999.ebuild
media-sound/clementine/clementine-1.2.3.ebuild
media-sound/clementine/clementine-1.2.3-r1.ebuild
media-sound/clementine/clementine-1.3.1-r1.ebuild
media-sound/tomahawk/tomahawk-0.8.4-r3.ebuild
media-sound/tomahawk/tomahawk-9999.ebuild
</pre>}}

=== Listing files that belong to an ebuild (qlist) ===

The {{c|qlist}} command gives a list of all files that belong to an ebuild. 

{{Cmd|qlist vim|output=<pre>
/usr/bin/gvim
/usr/bin/gvimdiff
/usr/bin/evim
/usr/bin/eview
/usr/bin/gview
/usr/bin/rgvim
[...]
</pre>}}

=== Looking for packages that use some USE flag (quse) ===

Listing used USE flags is done with {{c|quse}}, which must be run with root permissions. It may take some time to first create/update the ebuild cache. 

{{Cmd|quse firefox|output=<pre>
app-misc/tracker/tracker-0.12.10-r1.ebuild applet doc eds elibc_glibc exif firefox-bookmarks flac flickr gif
[...]
</pre>}}

=== Finding package sizes (qsize) ===

To show the size of a package, use the {{c|qsize}} application: 

{{Cmd|qsize vim|output=<pre>
app-editors/gvim-6.4: 10 files, 7 non-files, 2327.516 KB
app-editors/vim-6.4: 6 files, 2 non-files, 2058.14 KB
app-editors/vim-core-6.4: 1024 files, 68 non-files, 10950.984 KB
[...]
</pre>}}

=== Searching the Portage tree (qsearch) ===

One of the most powerful tools of {{Package|app-portage/portage-utils}} is {{c|qsearch}}. This tool allows to search the Portage tree much faster than using the {{c|emerge -s}} command. 

Here are some examples of its usage: 

{{Cmd|qsearch terminus|output=<pre>
media-fonts/terminus-font A clean fixed font for the console and X11
</pre>}}

The homepage of packages can be queried using the <code>-H</code> option:

{{Cmd|qsearch -H terminus|output=<pre>
media-fonts/terminus-font http://www.is-vn.bg/hamster/jimmy-en.html
</pre>}}

In another example, let's look for a jabber client:

{{Cmd|qsearch -S "jabber client"|output=<pre>
app-emacs/emacs-jabber A Jabber client for Emacs.
net-im/gajim Jabber client written in PyGTK
net-im/gnome-jabber Gnome Jabber Client
net-im/gossip Lightweight Jabber client for GNOME
net-im/imcom Python commandline Jabber Client
net-im/psi QT 3.x Jabber Client, with Licq-like interface
net-im/tkabber Featureful Jabber client for tcl/tk.
x11-themes/psi-themes Iconsets for Psi, a QT 3.x Jabber Client
</pre>}}

=== Extracting information from emerge logs (qlop) ===

There is also a tool that allows to extract useful information from the {{Path|emerge.log}} file. It is called {{c|qlop}} and it can be useful when package compilation times need to be estimated or to compare build times with other systems. It also allows to check what's compiling at the moment and how long it will probably take - which is handy when working in the console and don't have any other means to check it. 

To see how long a {{Package|dev-lang/perl}} build usually takes:

{{Cmd|qlop -tH perl|output=<pre>
perl: 7 minutes, 52 seconds for 4 merges
</pre>}}

To see what is emerging at the moment and how long the process has been running already:

{{Cmd|qlop -c|output=<pre>
* perl-5.8.8-r23
    started: Mon May 21 12:41:11 2007
    elapsed: 19 seconds
</pre>}}

== See also ==

* [[Gentoolkit]] - A suite of tools to ease the administration of a Gentoo system.
* [[Q_applets/Qcheck|Qcheck]] - A command-line tool used verify integrity of installed packages.
{{Migrated|originalauthors=Åukasz Damentko, Joshua Saddler, and Marcelo Góes}}

[[Category:Portage tools]]
