<noinclude>{{:{{ROOTPAGENAME}}/TOC}}</noinclude>
<noinclude>This section is on securing the system's kernel.</noinclude>
<includeonly>== Kernel security ==</includeonly>
=== Removing functionality ===

The basic rule when configuring the kernel is to remove everything that you do not need. This will not only create a small kernel but also remove the vulnerabilities that may lie inside drivers and other features.

Also consider turning off loadable module support. Even though it is possible to add root kits without this features, it does make it harder for normal attackers to install root kits via kernel modules.

=== The proc filesystem ===

Many kernel parameters can be altered through the [[Procfs|{{Path|/proc}} file system]] or by using {{c|sysctl}}.

To dynamically change kernel parameters and variables on the fly, you need <var>CONFIG_SYSCTL</var> enabled in the kernel. This is on by default in a standard 2.4 kernel.

Deactivate IP forwarding:

{{RootCmd|/bin/echo "0" > /proc/sys/net/ipv4/ip_forward}}

Make sure that IP forwarding is turned off. We only want this for a multi-homed host. It's advised to set or unset this flag before all other flags since it enabled/disables other flags as well.

Drop ping packets:

{{RootCmd|/bin/echo "1" > /proc/sys/net/ipv4/icmp_echo_ignore_all}}

This will cause the kernel to simply ignore all ping messages (also known as ICMP type 0 messages). The reason for this is that an IP packet carrying an ICMP message can contain a payload with information other than you think. Administrators use ping as a diagnostic tool and often complain if it is disabled, but there is no reason for an outsider to be able to ping. However, since it sometimes can be handy for insiders to be able to ping, you can disable ICMP type 0 messages in the firewall (allowing local administrators to continue to use this tool).

Ignore broadcast pings:

{{RootCmd|/bin/echo "1" > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts}}

This disables response to ICMP broadcasts and will prevent Smurf attacks. The Smurf attack works by sending an ICMP type 0 (ping) message to the broadcast address of a network. Typically the attacker will use a spoofed source address. All the computers on the network will respond to the ping message and thereby flood the host at the spoofed source address.

Disable source routed packets:

{{RootCmd|/bin/echo "0" > /proc/sys/net/ipv4/conf/all/accept_source_route}}

Do not accept source routed packets. Attackers can use source routing to generate traffic pretending to originate from inside your network, but that is actually routed back along the path from which it came, so attackers can compromise your network. Source routing is rarely used for legitimate purposes, so it is safe to disable it.

Disable redirect acceptance:

{{RootCmd|/bin/echo "0" > /proc/sys/net/ipv4/conf/all/accept_redirects}}

Do not accept ICMP redirect packets. ICMP redirects can be used to alter your routing tables, possibly to a malicious end.

Enable protection against bad/bogus error message responses:

{{RootCmd|/bin/echo "1" > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses}}

Enable reverse path filtering:

{{RootCmd|for i in /proc/sys/net/ipv4/conf/*; do
        /bin/echo "1" > $i/rp_filter
done}}

Turn on reverse path filtering. This helps make sure that packets use legitimate source addresses by automatically rejecting incoming packets if the routing table entry for their source address does not match the network interface they are arriving on. This has security advantages because it prevents IP spoofing. We need to enable it for each net/ipv4/conf/* otherwise source validation isn't fully functional.

{{Warning|However turning on reverse path filtering can be a problem if you use asymmetric routing (packets from you to a host take a different path than packets from that host to you) or if you operate a non-routing host which has several IP addresses on different interfaces.}}

Log spoofed packets, source routed packets and redirect packets:

{{RootCmd|/bin/echo "1" > /proc/sys/net/ipv4/conf/all/log_martians}}

All these settings will be reset when the machine is rebooted. I suggest that you add them to {{Path|/etc/sysctl.conf}}, which is automatically sourced by the {{Path|/etc/init.d/bootmisc}} init script.

The syntax for {{Path|/etc/sysctl.conf}} is pretty straightforward. Strip off the {{Path|/proc/sys/}} from the previously mentioned paths and substitute {{Path|/}} with {{Path|.}}:

{{FileBox|filename=/etc/sysctl.conf|1=
net.ipv4.ip_forward = 0
}}

It is also possible to use the {{c|echo}} command to manually make the above adjustment to ip_foward:

{{RootCmd|/bin/echo "0" > /proc/sys/net/ipv4/ip_forward}}

=== Grsecurity ===

The patch from Grsecurity is standard in the {{Path|sys-kernel/hardened-sources}} kernel package but is disabled by default. Configure your kernel as you normally do and then configure the Grsecurity options. An in-depth explanation on the available Grsecurity options is available on the [[Project:Hardened|Gentoo Hardened project page]].

Recent hardened-sources provide the 2.* version of Grsecurity. For more information on this improved Grsecurity patch set, please consult the documentation available on the [http://www.grsecurity.net/ Grsecurity home page].

=== Kerneli ===

Kerneli is a patch that adds encryption to the existing kernel. By patching your kernel you will get new options such as cryptographic ciphers, digest algorithms and cryptographic loop filters.

{{Warning|The kerneli patch is currently not in a stable version for the latest kernel, so be careful when using it.}}

=== Other kernel patches ===

* [http://www.openwall.com/ The OpenWall Project]
* <s>[http://www.lids.org/ Linux Intrusion Detection System] (LIDS)</s> - Dead since 2013.
* [http://www.rsbac.org/ Rule Set Based Access Control] (RSBAC)
* [http://www.nsa.gov/selinux NSA's security enhanced kernel] (SE Linux)
* <s>[http://sourceforge.net/projects/wolk/ Wolk]</s> - Dead since 2004 (Linux v2.6.x).

And there are probably a lot more.

[[Category:Kernel]]
<noinclude>{{#set:Has short Title={{SUBPAGENAME}}|Has Title={{SUBPAGENAME}}}}
{{:{{ROOTPAGENAME}}/Navigator|Prev={{ROOTPAGENAME}}/TCP wrappers|Next={{ROOTPAGENAME}}/Securing services}}</noinclude>
