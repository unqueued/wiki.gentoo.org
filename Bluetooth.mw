{{InfoBox stack
|{{InfoBox wikipedia}}
}}

This article describes the configuration and usage of Bluetooth controllers and devices.

== Prerequisites ==

This article assumes that [[udev]] and [[USB]] have been previously configured.

== Installation ==

=== Kernel ===

In most cases enabling [[Wikipedia:List of Bluetooth protocols#Radio frequency communication (RFCOMM)|RFCOMM]], [[Wikipedia:List of Bluetooth profiles#Human Interface Device Profile (HID)|HIDP]], [[Wikipedia:List of Bluetooth protocols#Host Controller Interface (HCI)|HCI]] USB and/or HCI UART should be sufficient.
{{KernelBox|
[*] Networking support --->
      <*>   Bluetooth subsystem support --->
              <*>   RFCOMM protocol support
              [ ]     RFCOMM TTY support
              < >   BNEP protocol support
              [ ]     Multicast filter support
              [ ]     Protocol filter support
              <*>   HIDP protocol support
                    Bluetooth device drivers --->
                      <*> HCI USB driver
                      <*> HCI UART driver
      <*>   RF switch subsystem support --->
}}

=== Software ===

BlueZ is the Bluetooth protocol stack for Linux. It is provided by the {{Package|net-wireless/bluez}} package. Portage has ebuilds for BlueZ 4, which is deprecated, and BlueZ 5.

Bluetooth support can be enabled system-wide by setting the <code>USE</code> variable to <code>bluetooth</code>.
{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
USE="bluetooth"
}}

Portage will by default install BlueZ 5. If BlueZ 4 is required, [[:/etc/portage/package.mask|mask]] BlueZ 5 to prevent it from being installed.
{{FileBox|filename=/etc/portage/package.mask|1=
>=net-wireless/bluez-5
}}

The system needs to be updated if the <code>USE</code> variable was set to <code>bluetooth</code>.
{{Emerge
|@world
|params+=--changed-use --deep}}

Install BlueZ.
{{Emerge
|net-wireless/bluez
|params+=--noreplace}}

== Configuration ==

=== Permissions ===

Permissions for Bluetooth devices will be handled automatically if the <code>USE</code> variable is set to <code>acl</code> and [[ConsoleKit]] or [[systemd]] is being used.

Alternatively, adding a user to the <tt>plugdev</tt> group will allow that user to access Bluetooth devices.
{{RootCmd|gpasswd -a ''user'' plugdev}}

== Starting ==

'''OpenRC'''
* Start Bluetooth.
{{RootCmd|rc-service bluetooth start}}
* Start Bluetooth at boot.
{{RootCmd|rc-update add bluetooth default}}

'''systemd'''
* Start Bluetooth.
{{RootCmd|systemctl start bluetooth}}
* Start Bluetooth at boot.
{{RootCmd|systemctl enable bluetooth}}

== Usage ==

=== Controller setup ===

* Display controller information.
{{RootCmd|hciconfig -a|output=<pre>
hci0:   Type: BR/EDR  Bus: USB
        BD Address: 00:02:72:2F:A9:33  ACL MTU: 1021:8  SCO MTU: 64:1
        UP RUNNING PSCAN 
        RX bytes:1166 acl:0 sco:0 events:43 errors:0
        TX bytes:960 acl:0 sco:0 commands:43 errors:0
        Features: 0xbf 0xfe 0xcf 0xfe 0xdb 0xff 0x7b 0x87
        Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3 
        Link policy: RSWITCH SNIFF 
        Link mode: SLAVE ACCEPT 
        Name: 'BlueZ 5.21'
        Class: 0x000104
        Service Classes: Unspecified
        Device Class: Computer, Desktop workstation
        HCI Version: 4.0 (0x6)  Revision: 0x1000
        LMP Version: 4.0 (0x6)  Subversion: 0x220e
        Manufacturer: Broadcom Corporation (15)
</pre>}}
Where <code>hci0</code> is the name of the controller and <code>UP</code> indicates that the controller is enabled.

* Enable the controller if <tt>hciconfig</tt> indicates (with <code>DOWN</code>) that the controller is disabled.
{{RootCmd|hciconfig hci0 up}}

* The following message may be displayed when attempting to enable the controller.
{{RootCmd|hciconfig hci0 up|output=<pre>
Can't init device hci0: Operation not possible due to RF-kill
</pre>}}
In this case, query the <tt>rfkill</tt> state of the controller with {{Package|net-wireless/rfkill}}.
{{RootCmd|rfkill list bluetooth|output=<pre>
0: hci0: Bluetooth
        Soft blocked: no
        Hard blocked: no
</pre>}}

* Unblock the controller if <tt>rfkill</tt> indicates (with <code>Soft blocked: yes</code>) that the controller is blocked.
{{RootCmd|rfkill unblock bluetooth}}

* Unblock the controller by physical switch or keyboard function key if <tt>rfkill</tt> indicates (with <code>Hard blocked: yes</code>) that the controller is blocked.

* The following udev rule will enable a controller before a graphical desktop environment is up and running.
{{FileBox|filename=/etc/udev/rules.d/90-bluetooth.rules|1=
# Enable the Bluetooth controller

# BlueZ 4
ACTION=="add", KERNEL=="hci0", TEST=="/usr/sbin/hciconfig", RUN+="/usr/sbin/hciconfig hci0 up"
# BlueZ 5
ACTION=="add", KERNEL=="hci0", TEST=="/usr/bin/hciconfig", RUN+="/usr/bin/hciconfig hci0 up"
}}

=== Device pairing ===

Bluetooth devices need to be paired with a Bluetooth controller before they can be used. This is done by entering a <tt>PIN</tt> (or other code) on both devices via an interaction agent. Certain devices such as headsets do not allow entering an arbitrary <tt>PIN</tt>. These devices use a static <tt>PIN</tt>, which is usually 0000, 1111, 1234 or 9999. There are devices (e.g. [[Wikipedia:PlayStation 3 accessories#Blu-ray Disc Remote Control|Sony BD Remote Control]]) that do not require <tt>PIN</tt> entry and attempting to enter a <tt>PIN</tt> when prompted will result in failure. Paring can be skipped with such devices.

This article only covers device pairing with a command-line interaction agent. If a graphical desktop environment is being used, device paring can be done with a graphical interaction agent. For [[KDE]] use {{Package|net-wireless/bluedevil}}, for [[GNOME]] use {{Package|net-wireless/gnome-bluetooth}} and for GTK+ use {{Package|net-wireless/blueman}}.

==== BlueZ 4 ====

Device paring, which is done with <tt>simple-agent</tt>, requires the <code>USE</code> flag <code>test-programs</code> to be enabled for the {{Package|net-wireless/bluez}} package.

* Put the device into pairing mode. This generally involves pressing a button or a combinations of buttons, usually for several seconds.

* Discover the device MAC address.
{{Cmd|hcitool scan|output=<pre>
Scanning ...
        00:1F:20:1D:1B:4B       Bluetooth Device
</pre>}}
Where <code>00:1F:20:1D:1B:4B</code> is the MAC address of the device.

* Pair with the device.
{{Cmd|simple-agent hci0 00:1F:20:1D:1B:4B|output=<pre>
RequestPinCode (/org/bluez/1664/hci0/dev_00_1F_20_1D_1B_4B)
Enter PIN Code: 0000
Release
New device (/org/bluez/1664/hci0/dev_00_1F_20_1D_1B_4B)
</pre>}}
Enter a <tt>PIN</tt> and press {{Key|Enter}}. Now enter the same <tt>PIN</tt> on the device.

* The following message may be displayed when attempting to pair with the device if a graphical interaction agent (BlueDevil, GNOME Bluetooth etc.) is installed.
{{Cmd|simple-agent hci0 00:1F:20:1D:1B:4B|output=<pre>
dbus.exceptions.DBusException: org.bluez.Error.AlreadyExists: Already Exists
</pre>}}
In this case, stop or disable the graphical interaction agent and attempt to pair with the device again.

* Query the trust status of the device.
{{Cmd|bluez-test-device trusted 00:1F:20:1D:1B:4B|output=<pre>
0
</pre>}}
Where <code>0</code> indicates the device is ''not'' trusted and <code>1</code> would indicate the device ''is'' trusted.

* Trust the device so it can connect automatically.
{{Cmd|bluez-test-device trusted 00:1F:20:1D:1B:4B yes}}

* Connect to the device. This only needs to be done once if the device is trusted.
{{Cmd|bluez-test-input connect 00:1F:20:1D:1B:4B}}

* The device is now paired.

==== BlueZ 5 ====

{{Note|Previously paired devices will need to be paired again when upgrading from BlueZ 4.}}
Device paring is done with <tt>bluetoothctl</tt>, which is provided by the {{Package|net-wireless/bluez}} package.

* Start <tt>bluetoothctl</tt>.
{{Cmd|bluetoothctl}}

* List the available controllers.
{{Cmd|list|prompt=[bluetooth]#|color=blue}}

* Display information about a controller.
{{Cmd|show ''controller_mac_address''|prompt=[bluetooth]#|color=blue}}

* Set the default controller.
{{Cmd|select ''controller_mac_address''|prompt=[bluetooth]#|color=blue}}

* Power on the controller.
{{Cmd|power on|prompt=[bluetooth]#|color=blue}}

* Enable the agent and set it as default.
{{Cmd
|agent on
|default-agent
|prompt=[bluetooth]#|color=blue}}

* Set the controller as discoverable (temporarily for 3 minutes) and pairable.
{{Cmd
|discoverable on
|pairable on
|prompt=[bluetooth]#|color=blue}}

* Scan for devices.
{{Cmd|scan on|prompt=[bluetooth]#|color=blue}}

* Put the device into pairing mode.

* Discover the device MAC address.
{{Cmd|devices|prompt=[bluetooth]#|color=blue}}

* Pair with the device.
{{Cmd|pair ''device_mac_address''|prompt=[bluetooth]#|color=blue}}

* Enter the <tt>PIN</tt> code if prompted.
{{Cmd|PIN code: ####|prompt=[agent]|color=red}}

* Allow the service authorization request if prompted.
{{Cmd|Authorize service ''service_uuid'' (yes/no): yes|prompt=[agent]|color=red}}

* Trust the device.
{{Cmd|trust ''device_mac_address''|prompt=[bluetooth]#|color=blue}}

* Connect to the device.
{{Cmd|connect ''device_mac_address''|prompt=[bluetooth]#|color=blue}}

* Display information about the device.
{{Cmd|info ''device_mac_address''|prompt=[bluetooth]#|color=blue}}

* The device is now paired.
{{Cmd|quit|prompt=[bluetooth]#|color=blue}}

== See also ==

* [[Bluetooth Headset]]
* [[Bluetooth Input devices]]
* [[Bluetooth Network Aggregation Point]]

== External resources ==

* [http://www.elstel.org/MobilePhone.html Bluetooth for Your Mobile Phone]

[[Category:Interfaces]]
