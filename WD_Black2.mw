The '''WD Black2''' is a dual hybrid drive solution from Western Digital with a 120GB SSD coupled with a 1TB traditional rotating media on a single SATA device. Factory configuration of the drive allows a SATA host to only recognize the 120GB capacity per the SSD.

The 1TB media is "unlocked" via a Windows installer tool available from Western Digital's product website. Although the '''WD Black2''' seems to be a device that only works with Microsoft Windows, the installer simply "unlocks" the upper 1TB and partitions the drive in 2 parts to distinguish between storage on the SSD and storage on the HDD. Once the HDD storage is unlocked, it may be used on any operating system. This article will explain how to use this drive under Gentoo Linux

== Unlocking the 1TB HDD ==
Unfortunately, physical access to a machine running Microsoft Windows is required for this step. If your drive shows capacity of 1120GB in the BIOS, you may skip this portion.

# Connect the '''WD Black2''' to a system with a free SATA port and boot into Microsoft Windows
## Use a system that is already running Microsoft Windows and connect drive as a slave
## OR install Microsoft Windows onto the drive from scratch.
# Run the WD Black2 installer which can be downloaded from the [http://www.wdc.com/en/products/products.aspx?id=1190 product page]
# Confirm that you are able to see 1120GB capacity in the BIOS

== Partitioning the drive ==
Once the drive is unlocked, it may technically be used on any system or configuration as long as read/write commands do not cross over from the SSD to the HDD. This is why the tool available from Western Digital partitions the drive automatically, to protect itself from receiving a read/write command that would cross the boundary.

The partitioning scheme after running the installer may look something like this if setup as an MBR drive
{{RootCmd|parted -a optimal /dev/sda|output=<pre>
GNU Parted 2.3
Using /dev/sdd
Welcome to GNU Parted! Type 'help' to view a list of commands.
(parted) unit mib                                                         
(parted) p                                                                
Model: ATA WDC WD1001X06X-0 (scsi)
Disk /dev/sdd: 1068343MiB
Sector size (logical/physical): 512B/512B
Partition Table: msdos

Number  Start      End         Size       Type     File system  Flags
 1      1.00MiB    351MiB      350MiB     primary  ntfs         boot
 2      351MiB     114472MiB   114121MiB  primary  ntfs
 3      114474MiB  1068343MiB  953869MiB  primary        
</pre>}}

The important piece of information from the table is the boundary between partitions 2 and 3. The installer tool creates a partition at 1144474 MiB which would signal the read/write boundary somewhere inbetween 114472MiB and 114474MiB. However, during the installation process, you may run into problems with an unresponsive drive if this exact partition scheme is followed. It is safer to increase the boundary some more in case there is some calculation error in determining where the real boundary lies.

A recommended partitioning scheme for Gentoo is as follows:

{{RootCmd|parted -a optimal /dev/sda|output=<pre>
GNU Parted 2.3
Using /dev/sdb
Welcome to GNU Parted! Type 'help' to view a list of commands.
(parted) unit mib                                                         
(parted) p                                                                
Model: ATA WDC WD1001X06X-0 (scsi)
Disk /dev/sdb: 1068343MiB
Sector size (logical/physical): 512B/512B
Partition Table: gpt

Number  Start      End         Size       File system     Name          Flags
 1      1.00MiB    512MiB      511MiB     fat32           SP            boot
 2      513MiB     114472MiB   113959MiB  ext4            rootfs
 3      131072MiB  135168MiB   4096MiB    linux-swap(v1)  swap
 4      135169MiB  176129MiB   40960MiB   ext4            /var/tmp
 5      176130MiB  217090MiB   40960MiB   ext4            /usr/portage
 6      217090MiB  1068343MiB  851253MiB  ext4            /home    
</pre>}}

Partitions 1 and 2 are located on the SSD while partitions 3-6 are on the HDD. There is about 8GB of space between partitions 2 and 3 to serve as a boundary. This could be reduced, but is used as an example for simplicity's sake. You may choose to partition however you like, but it recommended to start your HDD partitions at 131072MiB.

The root file system and boot partitions are stored on the SSD for fast data read speeds. /var/tmp is a location that will see many writes on Gentoo due to compiling which can reduce the life of an SSD so it is stored on the HDD. Similarly, /usr/portage sees writes on emerge --sync commands. Naturally /home and swap are stored on the HDD as they consist of data that is accessed slowly.

== Performance ==
A very quick and dirty method to benchmark the drive can be used with [[hdparm]]. Following the partitioning scheme above, the SSD and HDD is accessed as followed:

* /dev/sda1 - SSD
* /dev/sda2 - SSD
* /dev/sda3 - HDD
* /dev/sda4 - HDD
* /dev/sda5 - HDD
* /dev/sda6 - HDD

With that in mind, you can pass partitions to [[hdparm]] to focus the I/O.

{{RootCmd|hdparm -t /dev/sda1 /dev/sda2 /dev/sda3 /dev/sda4 /dev/sda5 /dev/sda6|output=<pre>
/dev/sda1:
 Timing buffered disk reads: 510 MB in  1.39 seconds = 367.67 MB/sec

/dev/sda2:
 Timing buffered disk reads: 1178 MB in  3.00 seconds = 392.38 MB/sec

/dev/sda3:
 Timing buffered disk reads: 346 MB in  3.01 seconds = 115.10 MB/sec

/dev/sda4:
 Timing buffered disk reads: 330 MB in  3.01 seconds = 109.57 MB/sec

/dev/sda5:
 Timing buffered disk reads: 338 MB in  3.01 seconds = 112.46 MB/sec

/dev/sda6:
 Timing buffered disk reads: 322 MB in  3.02 seconds = 106.67 MB/sec
</pre>}}
