<languages />
{{InfoBox stack
|{{InfoBox wikipedia|File system|header=true}}
}}


Ein “Dateisystem” ist ein Mittel zum Organisieren von Daten, von denen man erwartet, dass sie nach dem Beenden eines Programms beibehalten werden, durch die Bereitstellung von Verfahren sowohl zum Speichern, Laden und Aktualisieren von Daten, als auch durch das Verwalten des verfügbaren Speicherplatzes auf dem Gerät, das diese enthält.

Linux unterstützt ein paar dutzend Dateisysteme, jedes mit seinen eigenen Vor- und Nachteilen je nach Anwendungsfall.

== Dateisysteme ==

=== Generelle Information ===

* [[Filesystem/Access Control List Guide|Access Control List-Anleitung]]
* [[Filesystem/Security|Dateisystem-Sicherheit]]

=== Dateisysteme für Festplatten ===

* [[bcachefs]] - Ein robustes, High-Performance-Dateisystem der nächsten Generation, das CoW (Copy-on-Write), Komprimierung und Verschlüsselung unterstützt.
* [[eCryptFS]] - Das kryptographische „Enterprise”-Dateisystem für Linux.
* [[Efibootmgr#EFI_vars|efivarfs]] - Das EFI-Dateisystem
* [[ext4]] - Das Standard-, GPL-lizensierte Journaling-Dateisystem für viele Linuxdistributionen.
* [[FAT]] - Das „Dateizuordnungstabellen“-Dateisystem. Ursprünglich zur Benutzung mit Microsoft Windows entwickelt.
* [[JFS]] - Ein GPL-lizensiertes, 64-Bit Journaled File System entwickelt von IBM. <ref>https://de.wikipedia.org/wiki/Journaled_File_System</ref>
* [[Btrfs]] - Ein Copy-on-Write B⁺-Baum Dateisystem mit erweiterten Eigenschaften (eine komplett Open-Source-lizensierte ZFS-Alternative).
* [[NTFS]] - Microsoft Windows' New Technology File System, Windows' Standard-Dateisystem.
* [[Aufs]] - Erweitertes mehrlagiges Vereinigungs-Dateisystem, ehemals bekannt als Another union file system.
* [[OverlayFS]] - Das einzige in den Linux-Kernel eingebaute vereinigungsähnliche Dateisystem.
* [[wikipedia:ReiserFS|ReiserFS]] - Version 3 des ReiserFS-Dateisystems.
* [[https://reiser4.wiki.kernel.org/index.php/Main_Page Reiser4]] - Version 4 des ReiserFS-Dateisystems. Momentan nicht im Mainline-Linux-Kernel implementiert.
* [[SquashFS]] - Ein komprimiertes, nur lesbares Dateisystem für Linux. <ref>https://de.wikipedia.org/wiki/SquashFS</ref>
* [[UDF]] Universal Disk Format - z.B. zum Mounten von speziellen .iso-Dateien benötigt. <ref>https://de.wikipedia.org/wiki/Universal_Disk_Format</ref>
* [[UFS]] - Das Unix File System-Dateisystem, auch als Berkeley Fast File System bekannt. <ref>https://de.wikipedia.org/wiki/Unix_File_System</ref>
* [[XFS]] - Ein GPL-lizensiertes 64-Bit Journaled File System, entwickelt von Silicon Graphics. <ref>https://de.wikipedia.org/wiki/XFS_(Dateisystem)</ref>
* [[ZFS]] - Ein CDDL- (nicht GPL-kompatibel) lizensiertes Copy-on-Write Dateisystem, entwickelt von Sun Microsystems. <ref>https://de.wikipedia.org/wiki/ZFS_(Dateisystem)</ref>
* [[F2FS]] - Ein Flash-freundliches Dateisystem von Samsung für den Linux-Kernel entwickelt.

=== Virtuelle Dateisysteme ===

* [[wikipedia:Debugfs|debugfs]] - Für Debuggingzwecke benutzt ; primär Linux Kernel-Development. <ref>https://de.wikipedia.org/wiki/Debugfs</ref>
* [[procfs]] - Zur Ausgabe und zum Ändern von System- und Prozess-Informationen.
* [[securityfs]] - Vom TPM BIOS-Treiber und IMA benutzt, einem Integritätsprovider.<ref>https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git/tree/security/Kconfig</ref>
* [[sysfs]] - Zur Ausgabe von Information über und zur Konfiguration von Geräten und Treiber.
* [[tmpfs]] - Zum Speichern von Dateien im Speicher (RAM).
* [[Udev#Kernel|devtmpfs]] - {{c|udev}} benötigt [[Udev#Kernel|devtmpfs]] (Maintain a devtmpfs filesystem to mount at {{Path|[[:/dev]]}}) im Kernel.

=== Netzwerkdateisysteme ===

* [[Ceph]] - A distributed object store and filesystem designed to provide excellent performance, reliability, and scalability.
* [[Nfs-utils|NFS]] - A common Linux network file system protocol.
* [[SSHFS]] - Implements FUSE to mount filesystems in user space. 
* [[Tahoe-LAFS]] - A Least Authority File Store (LAFS).
* [[wikipedia:GlusterFS|GlusterFS]] - A powerful network/cluster filesystem.

=== FUSE-basierte Dateisysteme ===

* [[CurlFtpFS]] - File system for accessing FTP hosts based on FUSE.
* [[exFAT]] - A FUSE filesystem for the extended FAT filesystem.
* [https://packages.gentoo.org/packages/sys-fs/fuseiso FuseISO] - FUSE module to mount ISO filesystem images.
* [[MTP#MTPfs|MTPfs]] - A FUSE filesystem providing access to Media Transfer Protocol (MTP) devices.
* [[smbnetfs]] - A FUSE filesystem for SMB shares.
* [https://packages.gentoo.org/packages/sys-fs/squashfuse squashfuse] - Mount SquashFS archives using FUSE.

== Usage ==

=== Mounting ===

Dateisysteme können auf verschiedene Wege gemountet werden :

* {{c|[[mount]]}} - The command used to manually mount filesystems. Requires administrative privileges or entries in {{Path|/etc/fstab}}. 
* [[fstab|{{Path|/etc/fstab}}]] - Contains descriptive information about the filesystems the system can mount.
* [[Removable media]] - Mount on file demand.
* [[Udevil]] - A small auto-mount utility with little dependencies.
* [[AutoFS]] - Automatic mount on file access.

== See also ==

* [[bcache]] - A Linux kernel block layer cache.
* [[Filesystem_in_Userspace|FUSE]] - File system in User Space (FUSE).

== Externe Ressourcen ==

* [http://swift.siphos.be/linux_sea/linuxfs.html#filesystems Linux Sea, von Sven Vermeulen, Kapitel über Dateisysteme]
* [https://wiki.archlinux.org/index.php/File_systems Dateisysteme im Arch Linux-Wiki]

== Referenzen ==

{{reflist}}


[[Category:Filesystems]]
[[Category:Meta]]
