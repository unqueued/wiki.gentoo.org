<languages />
<translate>
<!--T:62-->
{{InfoBox stack
|{{InfoBox project|Overlays|header=true}}
}}

<!--T:2-->
Within Gentoo Linux, users already have one [https://devmanual.gentoo.org/general-concepts/tree/ "main" package repository]. The [https://gitweb.gentoo.org/repo/gentoo.git/tree/ main repository] contains all the software packages (called ebuilds) maintained by Gentoo developers. Additional package trees are usually hosted by ''repositories''. Users can add such additional repositories (traditionally known as ''overlays'') to their system.

== Repositories == <!--T:4-->

<!--T:78-->
Package repositories are nothing more (or less) than a [[Repository format|set of files]] (ebuilds, metadata files, ChangeLog entries ...). These can be pulled in from public repositories ([[Project:Portage/Sync#Portage_configuration|git, CVS, SVN ...]]) or downloaded as tarballs and extracted manually onto the system. It is advised to use managed repositories by [https://overlays.gentoo.org trusted] third parties; any installed ebuild repository will cause Portage to look through the overlaid files when deciding which software to install. If compromised code is in the ebuild repository, then compromised packages could be installed on the system.

<!--T:63-->
The now default approach for handling repositories is through {{Path|[[:/etc/portage/repos.conf]]}} which, like many other Portage related locations, can be a directory as well.

<!--T:65-->
Repository definitions inside {{Path|/etc/portage/repos.conf/}} also inform Portage if and how the repository can be updated. With it, calling {{c|emerge --sync}} will automatically update the repositories as well.

<!--T:64-->
A deprecated, yet still supported method is to use the <var>PORTDIR_OVERLAY</var> variable inside {{Path|/etc/portage/make.conf}}. This variable can point to one or more additional locations on the file system where repositories are available. The use of the {{Path|[[:/etc/portage/repos.conf]]/}} directory is highly preferred.

<!--T:66-->
For more information, see [[:/etc/portage/repos.conf|/etc/portage/repos.conf]] and the [[Project:Portage/Sync#Operation|Portage/Sync article]].

=== Priorities === <!--T:16-->

<!--T:17-->
Each ebuild repository has its unique priority. This makes sure that in the case of a specific version being found in several ebuild repositories, the resolution is unambiguous. Ebuilds from ebuild repositories with higher priority numbers (for example 60) take precedence over ebuilds from ebuild repositories with lower priorities (such as 50).

<!--T:42-->
The list of ebuild repositories with their priorities can be obtained through the output of the following commands (look for the "Repositories" string):

<!--T:43-->
{{Cmd|emerge --info --verbose}}

<!--T:79-->
{{Cmd|portageq repos_config /}}

<!--T:44-->
The Gentoo repository will have a priority of -1000. That means that all other ebuild repositories generally take precedence as they are assigned a higher priority. That is the default behavior, because ebuild repositories are designed to "lay over/on top" of the Gentoo repository.

== Available software == <!--T:67-->

<!--T:68-->
A number of tools support or integrate with ebuild repositories.

=== Layman === <!--T:69-->

<!--T:70-->
The {{c|layman}} application makes it easier to manage and update multiple additional ebuild repositories. It is a command-line application 
through which publicly available ebuild repositories can be listed, subscribed to and unsubscribed from, as well as update those repositories. 

<!--T:71-->
It supports both the {{Path|[[Layman#make.conf_method_.28force_old_method.29|make.conf]]}} as well as {{Path|[[Layman#repos.conf_method_.28default.29|repos.conf]]}} method.
* When using the {{Path|[[Layman#make.conf_method_.28force_old_method.29|make.conf]]}} method, {{c|layman}} manages a dedicated configuration file which should be sourced in by {{Path|make.conf}}
* When using {{Path|[[Layman#repos.conf_method_.28default.29|repos.conf]]}}, {{c|layman}} manages the {{Path|[[Layman#repos.conf_method_.28default.29|/etc/portage/repos.conf/layman.conf]]}} file directly

<!--T:13-->
For more information, see [[Layman]] and [[Project:Portage/Sync#Layman_configuration]].

=== emaint === <!--T:72-->

<!--T:73-->
See the [[Project:Portage/Sync#Operation|Sync (Portage project)]] article and {{c|man 1 emaint}}.

=== eix === <!--T:30-->

<!--T:74-->
{{c|eix-sync}} is a wrapper starting {{c|emerge --sync}} (which in turn starts {{c|emaint sync --auto}}) followed by {{c|eix-update}}.  For further details see the [[Eix]] article and {{c|man 1 eix}}.

== Usage == <!--T:80-->

=== Emerging a duplicate package === <!--T:81-->

<!--T:82-->
When working with ebuild repositories it is possible to encounter a situation where multiple versions of the same package are available from different ebuild repositories. Instruct [[Portage]] to install a specific package from a specific ebuild repository with the <code>::</code> notation:

<!--T:83-->
{{Emerge|category/atom::repository-name}}

== Best practices == <!--T:75-->

=== Cache generation === <!--T:26-->

<!--T:27-->
When large ebuild repositories are installed, Portage may take a long time to perform operations like dependency resolution. This is because ebuild repositories do not usually contain a metadata cache.

<!--T:28-->
Generate a local metadata cache by running {{c|emerge --regen}} after syncing the ebuild repositories:

<!--T:29-->
{{RootCmd
|layman -S
|( ulimit -n 4096 && emerge --regen )}}

<!--T:58-->
Be careful, because {{c|emerge --regen}} takes a lot of time and it's not recommended for rsync users as rsync updates the cache using server-side caches (most of users of portage are rsync users). Rsync users should simply run {{c|emerge --sync}} (or {{c|eix-sync}}) to regenerate the cache. It's probably only users of very large ebuild repositories should try {{c|emerge --regen}}.

=== Masking when using unsafe ebuild repositories === <!--T:23-->

<!--T:24-->
When using huge ebuild repositories or those with unknown/low quality it is best practice to hardmask the whole ebuild repository.

<!--T:47-->
{{FileBox|filename=/etc/portage/package.mask|title=Mask all packages in an ebuild repository|lang=bash|1=
*/*::repository-name
}}

<!--T:48-->
After that unmask the packages that will be installed.

<!--T:49-->
{{FileBox|filename=/etc/portage/package.unmask|title=Unmask a specific package in an ebuild repository|lang=bash|1=
foo/bar::repository-name
}}

== See also == <!--T:60-->

<!--T:61-->
* [[Project:Overlays|Overlays project]] - The official Gentoo project for ebuild repositories' support.
* [[Project:Overlays/Overlays guide|Overlays guide (Overlay project)]] - A user guide written by the Overlay project.
* [[Project:Overlays/Dev Guide|Developer's guide to Gentoo overlays]] - This document is kept only for historical purposes. The current guide is maintained as [[Project:Overlays/Overlays guide]].
* [[Handbook:Parts/Portage/CustomTree#Defining_a_custom_repository|Defining a custom repository]] - Section in the Gentoo Handbook

== External resources == <!--T:76-->

<!--T:77-->
* https://overlays.gentoo.org
* https://github.com/gentoo/

</translate>

[[Category:Portage]]
