'''An overlay is an additional repository that Portage takes into account when dealing with software.'''

Within Gentoo Linux, users already have one "main" package repository, called the ''Portage tree''. This main repository contains all the software packages (called [[Ebuild|ebuilds]]) maintained by Gentoo developers. But users can add additional repositories to the tree that are "layed over" the main tree - hence the name, ''overlays''.

Since package repositories are nothing more (or less) than a set of files (ebuilds, metadata files, ChangeLog entries ...) these repositories can be pulled in from public repositories (git, cvs, svn ...) or downloaded as tarballs and extracted manually on the system. It is however well advised to use managed repositories by ''trusted'' third parties as any installed overlay will cause Portage to look into those files as well when deciding which software to install.

== Treatment of overlays ==

Portage uses the <code>PORTDIR_OVERLAY</code> variable to link to the installed overlays on the system. This variable uses a space-delimited list of paths on the system where Portage can find the roots of the additional repositories.

=== Manually setting overlay locations ===

When you want to create an overlay yourself, create a location (say <code>/home/user/overlay</code>) in which you will put the packages you want Portage to look into as well. Then add <code>PORTDIR_OVERLAY="/home/user/overlay"</code> to your /etc/make.conf file:
{{File|/etc/make.conf|Adding an overlay manually|<pre>PORTDIR_OVERLAY="/home/user/overlay"</pre>}}

=== Using layman ===

To make management of multiple overlays simple, a tool called [[Layman|layman]] is developed. This tool knows about popular user- and developer managed overlays and is able to install & synchronize them as well as add them to the <code>PORTDIR_OVERLAY</code> location.

=== Overlay priorities ===

Each overlay has its unique priority. This makes sure that in the case of a specific version being found in several overlays, the resolution is unambiguous. Ebuilds from overlays with higher priorities take precedence over ebuilds from overlays with lower priorities.
{{Note|This "natural" way of priority handling was introduced in January 2011 (see [[#References|References]]), before that the priority resolution order was reversed, so negative numbers used to stand for high priorities}}
The list of overlays with their priorities can be obtained through the output of the following command
{{Cmd|emerge --info --verbose}}
Unless the <code>PORTDIR_OVERLAY</code> variable has been modified as described [[#Setting overlay priorities|below]], the default gentoo portage tree will have a priority of -1000 (see [[#References|References]]). That means that all other overlays take precedence. That is the default behavior, because overlays are designed to "lie over/on top" of the portage tree.

==== Setting overlay priorities ====

The overlay priority is calculated from the order of overlay entries in the <code>PORTDIR_OVERLAY</code> variable. Portage "walks" through the variable from left to right and increments the priority on the way. The leftmost entry starts with a priority of 1, the next entry has a priority of 2 and so on.
{{Note|Some time ago the overlay priority could be set in <code>/etc/portage/repos.conf</code>. This does not work anymore}}
 
Unless the <code>PORTDIR_OVERLAY</code> contains the portage tree entry, the portage tree will always be assigned a priority of -1000 (see [[#References|References]]).
This can be easily changed by putting <code>PORTDIR</code> in the <code>PORTDIR_OVERLAY</code> variable, because then the gentoo portage tree won't be treated as a special overlay and as such will be assigned another priority.

{{File|/etc/make.conf|Manual portage tree priority setting|<pre>PORTDIR_OVERLAY="/home/user/overlay ${PORTDIR}"</pre>}}
In the example above the user overlay will be assigned a priority of 1 and the portage tree will be assigned a priority of 2. 

===== Setting overlay priorities with layman =====

If you are using [[Layman|layman]] to manage other overlays, you can set their order in <code>/var/lib/layman/overlays.xml</code>. This file contains some information about the overlays, among which is the priority attribute in the repo tag. The number there determines only the priority relative to the other overlay entries, 50 is the default value. [[Layman|layman]] then analyses this file and sets the order of the overlay entries in the <code>PORTDIR_OVELRAY</code> variable defined in <code>/var/lib/layman/make.conf</code>.

As the file <code>/var/lib/layman/make.conf</code> is autogenerated by [[Layman|layman]] based on the settings in <code>/var/lib/layman/overlays.xml</code>, it is strongly recommended that only <code>/var/lib/layman/overlays.xml</code> is used to set the priorities.

Because layman generates the <code>PORTDIR_OVERLAY</code> variable in <code>/var/lib/layman/make.conf</code> which in such a way that the <code>PORTDIR_OVERLAY</code> variable from <code>/etc/make.conf</code> is put at the end, all overlays defined in <code>/etc/make.conf</code> take precedence over those defined by layman, provided the <code>PORTDIR_OVERLAY</code> variable is defined in <code>/etc/make.conf</code> ''before'' <code>/var/lib/layman/make.conf</code> is sourced.
{{File|/var/lib/layman/make.conf|Example layman overlays setting|<pre>
PORTDIR_OVERLAY="
/var/lib/layman/gamerlay
/var/lib/layman/lisp
/var/lib/layman/Spring
$PORTDIR_OVERLAY" #the variable defined in /etc/make.conf is now expanded
                  #when /var/lib/layman/make.conf is sourced in /etc/make.conf
</pre>}}


However, this can be also "fooled" by defining the <code>PORTDIR_OVERLAY</code> in <code>/etc/make.conf</code> ''after'' you source <code>/var/lib/layman/make.conf</code>

{{File|/etc/make.conf|Custom overlay setting|<pre>
source /var/lib/layman/make.conf #this sources the PORTDIR_OVERLAY variable defined by layman.
                                 #however, the variable expanded by layman was empty
PORTDIR_OVERLAY="/home/user/overlay ${PORTDIR} ${PORTDIR_OVERLAY}" #now the layman defined overlays take precedence,
                                                                   #but the user defined overlay still has the lowest priority </pre>}}
This "trick" is merely an opportunity offered by shell variable expansion.

= References =

* [http://git.overlays.gentoo.org/gitweb/?p=proj/portage.git;a=commit;h=c6b0aed663c775ebbdcd74e6a04b1e27b24a29a5 Portage commit introducing "natural" priority handling]
* <code>/usr/lib/portage/pym/repository/config.py</code> , line 252-253 : the portage tree is always assigned a priority of -1000 unless it is mentioned in <code>PORTDIR_OVERLAY</code>
