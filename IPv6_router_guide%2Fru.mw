<languages />


{{Metadata|abstract=В этом руководстве объясняется как настроить маршрутизацию IPv6 в системе Gentoo Linux.}}
{{Dirty|date=February 3, 2016}}

== Предварительные настройки ==

=== Основные Настройки Ядра ===

Любое из доступных в Gentoo ядер версии 2.6 без проблем поддерживает соединения IPv6. Новый стек IPv6 (USAGI) интегрирован в ядро начиная с версии Linux 2.6.0. 

{{Emerge|sys-kernel/gentoo-sources}}

Теперь мы готовы перейти в каталог с исходным кодом ядра и начать его конфигурацию. 

{{RootCmd
|cd /usr/src/linux
|make menuconfig
}}

{{Note|Предполагается, что символьная ссылка {{Path|/usr/src/linux}} ссылается на исходный код ядра, который будет использоваться как часть этого гайда.}}

{{KernelBox|title=Параметры для 'make menuconfig'|<pre>
Networking support --->
  Networking options --->
    <*> The IPv6 protocol --->
## (Параметы IPv6 ниже этого элемента меню могут пригодиться для многих других приложений,
## но не требуются для базовой установки)
 
## (Этот параметр требуется только когда для преобразования 6to4 используется ptrtd)
Device Drivers --->
  Network device support --->
    <*> Universal TUN/TAP device driver support
</pre>
}}

=== Проверка поддержки IPv6 ===

После включения рекомендуемых параметров, перекомпилируйте ядро с поддержкой IPv6 и перезагрузитесь. 

Если программа {{c|iproute2}} все еще не установлена, сделать это настоятельно рекомендуется. iproute2 — это набор инструментов для конфигурации сети, содержащий {{c|ip}} — замечательную замену для {{c|ifconfig}}, {{c|route}}, {{c|iptunnel}} и других программ… 

{{Emerge|sys-apps/iproute2}}

{{Warning|Использование {{c|ifconfig}} может вызвать серьезные неприятности при наличии нескольких туннельных устройств. Туннели нужно убирать в обратном порядке, что означает, что самый последний из созданных должен быть убран первым.}}

Если IPv6 работает, loopback-устройство должно показывать IPv6-адрес: 

{{RootCmd|ip -6 addr show lo|output=<pre>
1: lo: <LOOPBACK,UP> mtu 16436
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
    ## (Строки выше показывают, что все работает)
</pre>
}}

Перед тем, как продолжить, убедитесь, что <var>ipv6</var> находится в списке переменных USE в файле {{Path|make.conf}}, чтобы пакеты, которые будут установлены позже, включали поддержку IPv6.

== Настройка туннеля ==

=== Основная конфигурация ===

Most ISPs still do not offer any native IPv6 connections. To get around this limitation, there are several "tunnel brokers" around the globe that offer free IPv6 tunnels. This will allow to tunnel all the IPv6 connections through an IPv4 connection. 

{| class="table table-striped table-condensed" style="text-align: left;" 
|- 
! Broker
! Location
|- 
|  [http://tunnelbroker.net/ Hurricane Electric] 
| North America, Europe, Asia
|- 
|  [http://gogonet.gogo6.com/ Freenet6] 
| US
|- 
|  [http://www.sixxs.net/ Sixxs] 
| Europe
|- 
|  [http://tunnel-broker.singnet.com.sg/ Singnet] 
| Singapore
|- 
|  [http://broker.aarnet.net.au/ Aarnet] 
| Australia/South Pacific
|-
|}

Ниже приведены два примера настройки туннеля с двумя популярными североамериканскими туннелями: Hurricane Electric (также применимо к non-heartbeat туннелям sixxs.net) и Freenet6. 

=== Hurricane Electric ===

Hurricane Electric (HE for short) offers free IPv6 tunnels and allocates a /64 block of addresses for each customer. It also allows configuration of reverse DNS. Getting a tunnel from HE is as easy as going to [https://www.tunnelbroker.net/ https://www.tunnelbroker.net/] and filling out a one page form. 

{{Note|Registration includes listing information like home address and phone number.}}

After a tunnel is approved and a /64 block is allocated, start to configure the system. HE provides sample configurations based on {{c|ifconfig}} and the {{c|iproute}} utilities. The following two examples assume that the following configuration is used: 

{| class="table table-striped table-condensed" style="text-align: left;" 
|- 
| Local IPv4 Address (eth0)
| 68.36.91.195
|- 
| HE IPv4 Address
| 64.71.128.82
|- 
| Local IPv6 tunnel Address
| 2001:470:1F00:FFFF::2
|-
| Remote IPv6 tunnel Address
| 2001:470:1F00:FFFF::1
|- 
| IPv6 Block
| 2001:470:1F00:296::/64
|-
|}

Using the {{Package|sys-apps/iproute2}} package and the {{c|ip}} command, do the following.

Создайте туннель между локальным адресом IPv4 (eth0) и удаленным IPv4-адресом Hurricane Electric:

{{RootCmd|ip tunnel add he6 mode sit remote 64.71.128.82 local 68.36.91.195 ttl 64 dev eth0}}

Выведите издержки туннелирования (tunneling overhead) из MTU:

{{RootCmd|ip link set he6 mtu 1280}}

Поднимите туннель:

{{RootCmd|ip link set he6 up}}

Назначьте ему IPv6-адрес:

{{RootCmd|ip addr add 2001:470:1F00:FFFF::2 dev he6}}

Route all global unicast IPv6 addresses through our 'he6' tunnel device:

{{RootCmd|ip route add 2000::/3 dev he6}}

В следующем примере показано, как создать это во время загрузки:

{{CodeBox|title=Пример netifrc|lang=bash|1=
iptunnel_he6="mode sit remote 64.71.128.82 local 68.36.91.195 ttl 64 dev eth0"
depend_he6="net.eth0"
config_he6="2001:470:1F00:FFFF::2/64"
routes_he6="default via 2001:470:1F00:FFFF::1 dev he6"
mtu_he6="1280"
}}

Сделайте это, чтобы устройство загружалось во время загрузки:

{{RootCmd|cd /etc/init.d
|ln -s net.lo net.he6
|rc-update add net.he6 default
}}

{{Note|If there is no default policy of ACCEPT for the IPv4 iptables then add:
{{RootCmd|iptables -A INPUT -i eth0 -p ipv6 -j ACCEPT}}
}}

Если туннель IPv6 поверх IPv4, то пакеты сперва попадают в цепочку IPv4, а затем переходят в цепочку IPv6.

=== Freenet6 ===

[http://gogonet.gogo6.com/ Freenet6] — это еще один свободный сервис туннелей. Необязательная регистрация требует только имени пользователя и действующий email-адреса. Управление туннелем сведено к системе клиент-сервер и созданию клиента <code>gogoCLIENT</code>. Данный клиент доступен в системе Portage. Для его установки выполните: 

{{Emerge|net-misc/gogoc}}

Now when choosing to connect with authentication, configure <code>gogoCLIENT</code> by editing {{Path|/etc/gogoc/gogoc.conf}}. Only the <var>userid</var> and <var>passwd</var> fields need to be changed to match those assigned from Freenet6 and change the gateway server. Below is a sample config file. 

{{CodeBox|title=Пример gogoc.conf|lang=bash|1=
auth_method=any
userid=anonymous
passwd=foobar
template=linux
server=broker.freenet6.net
}}

=== Testing the connection ===

Now that the tunnel is configured, test the connection. The easiest way to do this is to use the <code>ping6</code> utility and try to ping an IPv6 host. 

{{Emerge|iputils}}

{{Cmd|ping6 www.kame.net|output=<pre>
PING www.kame.net(orange.kame.net) 56 data bytes
64 bytes from orange.kame.net: icmp_seq=1 ttl=52 time=290 ms
64 bytes from orange.kame.net: icmp_seq=2 ttl=52 time=277 ms
64 bytes from orange.kame.net: icmp_seq=3 ttl=52 time=280 ms
64 bytes from orange.kame.net: icmp_seq=4 ttl=52 time=279 ms
64 bytes from orange.kame.net: icmp_seq=5 ttl=52 time=277 ms
 
--- www.kame.net ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4038ms
rtt min/avg/max/mdev = 277.040/281.041/290.046/4.699 ms
</pre>
}}

Further work is currently in progress to add better IPv6 support to the network init scripts. To know the status of this and/or help out, please email {{Mail|latexer@gentoo.org}}.

== IPv6 support in applications ==

=== Переустановка пакетов ===

Unless <code>USE="ipv6"</code> was already set in {{Path|/etc/portage/make.conf}} previously, it is probably necessary to re-emerge a bunch of packages to compile in IPv6 support for them. To get a list of all the installed packages which are affected by USE flag changes, use Portage's <code>--newuse</code> (<code>-N</code>) option: 

{{Emerge|@world|params=-uDNav}}

When many USE flags have been changed, the list could be quite long. It's suggested to keep the system up-to-date, so it won't hurt if all affected packages are rebuilt. 

{{Note|Some packages (erroneously) detect IPv6 support automatically and hence have no ipv6 USE flag. Thus not all packages, which should support IPv6, will support it if they have not been compiled with an IPv6 enabled kernel.}}

=== IPv6 specific packages ===

Существует несколько пакетов для работы с IPv6. Большинство из них находятся в каталоге {{Path|/usr/portage/net-misc}}. 

{| class="table table-striped table-condensed" style="text-align: left;" 
|- 
! Package
! Description
|- 
| {{Package|net-misc/ipv6calc}}
| Converts an IPv6 address to a compressed format
|- 
| {{Package|net-misc/netcat6}}
| netcat version that supports IPv6 and IPv4
|- 
| {{Package|dev-perl/Socket6}}
| IPv6 related part of the C socket.h defines and structure manipulators
|-
|}

== Настройка DNS ==

=== IPv6 и DNS ===

Также как DNS использует для IPv4 записи A, аналогично используются AAAA записи для IPv6. (это потому что IPv4 имеет адресное пространство 2^32, в то время как IPv6 имеет адресное пространство 2^128). Для обратных запросов DNS, стандарт INT устарел, но все еще широко поддерживается. ARPA является самым новым стандартом. Поддержка формата ARPA описывается далее в этом руководстве. 

=== Настройка BIND ===

Recent versions of BIND include excellent IPv6 support. This section will assume at least minimal knowledge about the configuration and use of BIND. We will assume that bind is not running in a chroot. If this assumption is wrong, simply append the chroot prefix to most of the paths in the following section. 

First add entries for both forward and reverse DNS zone files in {{Path|/etc/bind/named.conf}}. 

{{FileBox|filename=/etc/bind/named.conf|title=Записи named.conf|1=
## (Мы разрешаем bind слушать IPv6-адреса.
## Использование 'any' является единственным способом это выполнить для версий bind ранее 9.3)
options {
    [...]
    listen-on-v6 { any; }
    [...]
};
## (Этот раздел предусматривает прямой DNS для домена 'ipv6-rules.com':)
zone "ipv6-rules.com" IN {
    type master;
    file "pri/ipv6-rules.com";
};
## (Данный формат обратного DNS является "побитовым." Это выполняется взятием префикса IPv6,
## переставлением чисел в обратном порядке и размещением точки между каждым числом)
zone "6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa" {
        type master;
        file "pri/rev-ipv6-rules.com.arpa";
};
}}

Теперь требуется создать эти файлы зоны и добавить записи для каждого из хостов. 

{{FileBox|filename=/etc/bind/pri/ipv6-rules.com|1=
$TTL    2h
@       IN      SOA     ipv6-rules.com. webmaster.ipv6-rules.com.  (
                                2003052501 ; Serial
                                28800      ; Refresh
                                14400      ; Retry
                                3600000    ; Expire
                                86400 )    ; Minimum
                NS      ns1.ipv6-rules.com
 
IN      AAAA    2001:470:1f00:296::1 ; address for ipv6-rules.com
host1   IN      AAAA    2001:470:1f00:296::2 ; address for host1.ipv6-rules.com
host2   IN      AAAA    2001:470:1f00:296::3:3 ; address for host2.ipv6-rules.com
}}

{{FileBox|filename=/etc/bind/pri/ipv6-rules.com.arpa|1=
$TTL 3d ; Default TTL (bind 8 needs this, bind 9 ignores it)
@       IN SOA ipv6-rules.com. webmaster.ipv6-rules.com. (
                        2003052501      ; Serial number (YYYYMMdd)
                        24h             ; Refresh time
                        30m             ; Retry time
                        2d              ; Expire time
                        3d )            ; Default TTL
        IN      NS     ns1.ipv6-rules.com.
; IPv6 PTR entries
$ORIGIN 6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa.
 
1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     ipv6-rules.com.
2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     host1.ipv6-rules.com.
3.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     host2.ipv6-rules.com.
}}

=== Настройка DJBDNS ===

There are currently some third-party patches to DJBDNS available at [http://www.gentoo.org/ http://www.fefe.de/dns/] that allow it to do IPv6 name serving. DJBDNS can be installed with these patches by emerging it with <code>ipv6</code> in the USE variable. 

{{Warning|Не все типы записей поддерживаются этими патчами. В частности, записи NS и MX не поддерживаются.}}

{{Emerge|djbdns}}

After djbdns is installed, it can be setup by running {{c|tinydns-setup}} and answering a few questions about which IP addresses to bind to, where to install tinydns, etc. 

{{RootCmd|tinydns-setup}}

Assuming we've installed {{c|tinydns}} into {{Path|/var/tinydns}}, we can now edit {{Path|/var/tinydns/root/data}}. This file will contain all the data needed to get tinydns handling DNS for the IPv6 delegation. 

{{CodeBox|title=Образец файла данных|1=
## (*.ipv6-rules.com авторитативно обрабатываются 192.168.0.1)
.ipv6-rules.com:192.168.0.1:a:259200
## (Авторитативный обратный DNS для 2001:470:1f00:296::/64)
.6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa:192.168.0.1:a
## (Укажите IP-адреса для хостов host1 и host2)
6host1.ipv6-rules.com:200104701f0002960000000000000001:86400
6host2.ipv6-rules.com:200104701f0002960000000000000002:86400
## (Направьте www на host1)
3www.ipv6-rules.com:200104701f0002960000000000000002:86400
}}

Lines prefixed with a <code>6</code> will have both an AAAA and a PTR record created. Those prefixed with a <code>3</code> will only have an AAAA record created. Besides manually editing the {{Path|data}} file, it is possible to use the scripts {{c|add-host6}} and {{c|add-alias6}} to add new entries. After changes are made to the {{Path|data}} file, simply run <code>make</code> from {{Path|/var/tinydns/root}}. This will create {{Path|/var/tinydns/root/data.cfb}}, which tinydns will use as its source of information for DNS requests.

== IPv6 router ==

=== Настройка маршрутизации ===

Для использования системы в качестве маршрутизатора для других клиентов, которым требуется соединение через IPv6, необходима дальнейшая настройка. Нам потребуется включить переадресацию пакетов IPv6. Это можно сделать двумя способами. 

* Either we set the value 1 in the forwarding pseudo-file:

: {{RootCmd|echo 1 > /proc/sys/net/ipv6/conf/all/forwarding}}

* Or we use the {{c|sysctl}} command:

: {{RootCmd|sysctl -w net.ipv6.conf.all.forwarding{{=}}1}}

{{Warning|The {{c|radvd}} init script explained in the next chapter enables (and disables) forwarding, making the next step unnecessary.}}

To enable forwarding at boot, edit {{Path|/etc/sysctl.conf}} and add the following line. 

{{CodeBox|title=sysctl.conf addition|lang=bash|1=
## (When using radvd, this setting is not needed)
net.ipv6.conf.default.forwarding=1
}}

Теперь трафик с этого компьютера должен быть переадресован через туннель, который был установлен ранее с выбранным нами сервисом. 

Чтобы назначить клиентам адреса IPv6, в спецификации IPv6 разрешается stateless и stateful назначение IP. Stateless назначение использует процесс с названием Router Advertisement и позволяет клиентам получить IP-адрес и маршрут по умолчанию простым поднятием интерфейса. Этот способ называется "stateless" потому что не имеет записи о назначенных IP-адресах и хосте, которому они назначены. Stateful назначение обрабатывается DHCPv6. Оно называется "stateful" потому что сервер хранит состояние клиентов, запросивших и получивших IP-адреса.

=== Stateless configuration ===

Stateless configuration is easily accomplished using the Router Advertisement Daemon, or {{c|radvd}}: 

{{Emerge|radvd}}

After having emerged {{c|radvd}}, we need to create {{Path|/etc/radvd/radvd.conf}} that contains information about what IP block to assign IPs from. Here is a sample {{Path|radvd.conf}} file using the prefix we've been assigned from our tunnel broker. 

{{CodeBox|title=Пример radvd.conf|1=
interface eth1
{
        ## (Отправка advertisement-сообщений другим хостам)
        AdvSendAdvert on;
        ## (Фрагментация нежелательна (tm))
        AdvLinkMTU 1280;
        MaxRtrAdvInterval 300;
        ## (Префикс подсети IPv6 назначенный нашим PoP)
        prefix 2001:470:1F00:296::/64
        {
                AdvOnLink on;
                AdvAutonomous on;
        };
};
}}

{{Warning|Make sure the interface on the first line is correct so that router advertisements are broadcasted to the intranet and not to the ISP!}}

Further information is available in {{c|man radvd.conf}}. We can now start {{c|radvd}} and set it to start at boot. 

{{RootCmd
|/etc/init.d/radvd start
|rc-update add radvd default
}}

=== Stateful configuration ===

To have a stateful configuration, install and configure {{Package|net-misc/dibbler}}. 

{{Emerge|dibbler}}

Теперь нужно настроить dibbler-клиент, отредактировав {{Path|/etc/dibbler/client.conf}}. 

{{CodeBox|title=Пример конфигурации клиента dibbler|1=
iface ppp0 {
	rapid-commit yes
	pd
	option dns-server
}
</pre>
}}

Теперь можно запустить клиент dibbler и настроить его на запуск при загрузке. 

{{RootCmd
|/etc/init.d/dibbler-client start
|rc-update add dibbler-client default
}}

== IPv6 clients ==

=== Использование radvd ===

Clients behind this router should now be able to connect to the rest of the net via IPv6. If using radvd, configuring hosts should be as easy as bringing the interface up. (This is probably already done by the net.ethX init scripts). 

{{RootCmd|ip link set eth0 up
|ip addr show eth0|output=<pre>
1: eth0: <BROADCAST,MULTICAST,UP> mtu 1400 qdisc pfifo_fast qlen 1000
    link/ether 00:01:03:2f:27:89 brd ff:ff:ff:ff:ff:ff
    inet6 2001:470:1f00:296:209:6bff:fe06:b7b4/128 scope global
       valid_lft forever preferred_lft forever
    inet6 fe80::209:6bff:fe06:b7b4/64 scope link
       valid_lft forever preferred_lft forever
    inet6 ff02::1/128 scope global
       valid_lft forever preferred_lft forever
</pre>
}}

Should this not work ensure that the IPv6 firewall is allowing ICMPv6 packets through:

{{RootCmd|ip6tables -A INPUT -p icmpv6 -j ACCEPT}}

== External resources ==

There are many excellent resources online pertaining to IPv6. 

* [http://www.ipv6.org/ www.ipv6.org] - General IPv6 information
* [http://www.linux-ipv6.org/ www.linux-ipv6.org/] - USAGI project
* [http://www.deepspace6.net/ www.deepspace6.net] - Linux/IPv6 site
* [http://www.kame.net/ www.kame.net] - *BSD implementation

On IRC, try the {{IRC|ipv6}} channel on [http://www.freenode.net/ Freenode]. Connect to the Freenode servers using an IPv6 enabled client by connecting to irc.ipv6.freenode.net. 

{{Migrated|originalauthors=Peter Johanson, Jorge Paulo, Sven Vermeulen, Camille Huot, Pasi Valminen, nightmorph, hwoarang}}

[[Category:Network management]]
