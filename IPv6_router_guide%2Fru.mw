<languages />


{{Metadata|abstract=В этом руководстве объясняется как настроить маршрутизацию IPv6 на системе Gentoo Linux.}}

== Предварительные настройки ==

=== Основные настройки ядра ===

Любое из доступных Gentoo деревьев исходных кодов ядра версии 2.6 с легкостью поддерживает соединения IPv6. Новый стек IPv6 USAGI интегрирован в ядро начиная с версии Linux 2.6.0. 

{{Emerge|gentoo-sources}}

Теперь мы готовы перейти в каталог с исходными кодами ядра и начать его конфигурацию. 

{{RootCmd|cd /usr/src/linux
|make menuconfig}}

{{Note/ru|Предполагается что символьная ссылка {{Path|/usr/src/linux}} указывает на используемые исходные тексты ядра.}}

{{Kernel|Параметры для 'make menuconfig'|<pre>
Networking support --->
  Networking options --->
    <*> The IPv6 protocol --->
## (Параметы IPv6 ниже этого элемента меню могут пригодиться для многих других приложений,
## но не требуются для простой установки)

## (Этот параметр требуется только при использовании ptrtd для перехода 6to4)
Device Drivers --->
  Network device support --->
    <*> Universal TUN/TAP device driver support
</pre>
}}

-

=== Проверка поддержки IPv6 ===

После включения рекомендуемых параметров, скомпилируйте новое ядро с поддержкой IPv6 и перезагрузитесь. 

Если программа '''iproute2''' все еще не установлена, мы настоятельно рекомендуем сделать это сейчас. iproute2 - это набор инструментов для конфигурации сети, содержащий <code>ip</code> - известную замену для <code>ifconfig</code>, <code>route</code>, <code>iptunnel</code> и другие программы... 

{{Emerge|sys-apps/iproute2}}

{{Warning/ru|Использование ifconfig может вызвать серьезные неприятности при наличии нескольких туннельных устройств. Необходимо убрать туннели в обратном порядке, что означает что самый последний из созданных должен быть убран первым. Вы предупреждены!}}

Если IPv6 работает, loopback-устройство должно показывать IPv6-адрес: 

{{RootCmd|ip -6 addr show lo|output=<pre>
1: lo: <LOOPBACK,UP> mtu 16436
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
    ## (Строки выше показывают, что все работает)
</pre>
}}

Перед тем как продолжить, убедитесь что ''ipv6'' добавлен в список USE-флагов в файле {{Path|make.conf}}, чтобы дальнейшие установки пакетов включали поддержку IPv6.

== Настройка туннеля ==

=== Основная конфигурация ===

Большинство провайдеров все еще не предоставляют "нативных" соединений IPv6. Чтобы обойти это ограничение, существуют несколько "сервисов туннелей" по всему миру, которые предлагают свободные туннели IPv6. Это делает возможным туннелирование соединений IPv6 через соединение IPv4. 

{| class="wikitable" style="text-align: left;" 
|- 
! Сервис
! Местоположение
|- 
|  [http://tunnelbroker.net/ Hurricane Electric] 
| Северная Америка, Европа, Азия
|- 
|  [http://gogonet.gogo6.com/ Freenet6] 
| США
|- 
|  [http://www.sixxs.net/ Sixxs] 
| Европа
|- 
|  [http://tunnel-broker.singnet.com.sg/ Singnet] 
| Сингапур
|- 
|  [http://broker.aarnet.net.au/ Aarnet] 
| Австралия/South Pacific
|-
|}

Ниже приведены два примера настройки туннеля с двумя популярными североамериканскими туннелями: Hurricane Electric (также применимо к non-heartbeat туннелям sixxs.net) и Freenet6. 

=== Hurricane Electric ===

Hurricane Electric (сокращенно, HE) предлагает свободные IPv6-туннели и распределяет блок адресов /64 . Также доступна настройка обратного запроса DNS. Получение туннеля от Hurricane Electric так же легко, как и переход по ссылке  [https://www.tunnelbroker.net/ https://www.tunnelbroker.net/] и заполнение одностраничной формы. 

{{Note/ru|Регистрация требует введения адреса и номера телефона.}}

После разрешения туннеля и распределения блока /64, необходимо настроить Gentoo. HE предусматривает образцы настроек, основанные на утилитах ifconfig и iproute. В двух следующих примерах предполагается следующая конфигурация: 

{| class="wikitable" style="text-align: left;" 
|- 
| Local IPv4 Address (eth0)
| 68.36.91.195
|- 
| HE IPv4 Address
| 64.71.128.82
|- 
| Local IPv6 tunnel Address
| 2001:470:1F00:FFFF::189
|- 
| IPv6 Block
| 2001:470:1F00:296::/64
|-
|}

Используя команду <code>ip</code> из пакета iproute2, выполните следующее.

Создайте туннель между локальным адресом IPv4 (eth0) и удаленным IPv4-адресом Hurricane Electric:

{{RootCmd|ip tunnel add sixbone mode sit remote 64.71.128.82 local 68.36.91.195 ttl 64 dev eth0}}

Извлеките overhead туннелирования из MTU (maximum transmission unit):

{{RootCmd|ip link set sixbone mtu 1280}}

Откройте туннель:

{{RootCmd|ip link set sixbone up}}

Назначьте ему IPv6-адрес:

{{RootCmd|ip addr add 2001:470:1F00:FFFF::189 dev sixbone}}

Направьте все глобальные unicast IPv6-адреса через туннельное устройство 'sixbone':

{{RootCmd|ip route add 2000::/3 dev sixbone}}

=== Freenet6 ===

[http://gogonet.gogo6.com/ Freenet6] - это еще один свободный сервис туннелей. Необязательная регистрация требует только имени пользователя и правильного email-адреса. Управление туннелем сведено к системе клиент-сервер и созданию клиента <code>gateway6</code>. Данный клиент доступен в системе Portage. Для его установки выполните: 

{{Emerge|gateway6}}

Теперь при выборе соединения с аутентификацией потребуется настроить <code>gateway6</code>, отредактировав файл {{Path|/etc/gateway6/gw6c.conf}}. Нужно только изменить поля ''userid'' и ''passwd'' для соответствия полям, назначенным Freenet6, и изменить сетевой шлюз. Ниже приведен пример файла конфигурации. 

{{Code|Пример файла gw6c.conf|<pre>
auth_method=any
userid=anonymous
passwd=foobar
template=linux
server=broker.freenet6.net
</pre>
}}

=== Проверка соединения ===

Теперь, когда туннель настроен, необходимо протестировать соединение. Самым легким способом это сделать является использование утилиты <code>ping6</code> для проверки связи с хостом IPv6. 

{{Emerge|iputils}}

{{Cmd|ping6 www.kame.net|output=<pre>
PING www.kame.net(orange.kame.net) 56 data bytes
64 bytes from orange.kame.net: icmp_seq=1 ttl=52 time=290 ms
64 bytes from orange.kame.net: icmp_seq=2 ttl=52 time=277 ms
64 bytes from orange.kame.net: icmp_seq=3 ttl=52 time=280 ms
64 bytes from orange.kame.net: icmp_seq=4 ttl=52 time=279 ms
64 bytes from orange.kame.net: icmp_seq=5 ttl=52 time=277 ms

--- www.kame.net ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4038ms
rtt min/avg/max/mdev = 277.040/281.041/290.046/4.699 ms
</pre>
}}

-

Ведется дальнейшая работа по добавлению лучшей поддержки IPv6 в сценарии инициализации сети. Чтобы узнать статус разработки или помочь, отправьте сообщение на {{Mail|latexer@gentoo.org}}.

== Поддержка IPv6 в приложениях ==

=== Переустановка пакетов ===

При отсутствии USE-флага ''ipv6'' в файле {{Path|/etc/portage/make.conf}}, возможно, потребуется переустановить группу пакетов для их компиляции с поддержкой IPv6. Для получения списка всех установленных пакетов, затронутых изменениями USE-флага, используйте параметр Portage <code>--newuse</code> (<code>-N</code>): 

{{Emerge|@world|params=-uDNav}}

При изменении большого количества USE-флагов, этот список будет довольно большим. Предполагается, что система обновляется регулярно, поэтому повторная компиляция всех задействованных пакетов не принесет вреда. 

{{Note/ru|Некоторые пакеты обнаруживают поддержку IPv6 автоматически и, следовательно, не имеют USE-флага ipv6. Таким образом, если пакеты не были скомпилированы с ядром с поддержкой IPv6, то не все они будут поддерживать этот протокол.}}

=== Пакеты для работы с IPv6 ===

Существует несколько пакетов для работы с IPv6. Большинство из них находятся в каталоге {{Path|/usr/portage/net-misc}}. 

{| class="wikitable" style="text-align: left;" 
|- 
! Пакет
! Описание
|- 
| {{Package|net-misc/ipv6calc}}
| Преобразует IPv6-адрес в сжатый формат
|- 
| {{Package|net-misc/netcat6}}
| Версия netcat с поддержкой IPv6 и IPv4
|- 
| {{Package|dev-perl/Socket6}}
| Связанная с IPv6 часть директив define и манипуляторов из файла socket.h языка C 
|-
|}

== Настройка DNS ==

=== IPv6 и DNS ===

Также как DNS для IPv4 использует записи A, DNS для IPv6 использует записи AAAA. (это потому что IPv4 имеет адресное пространство 2^32, в то время как IPv6 имеет адресное пространство 2^128). Для обратных запросов DNS, стандарт INT устарел, но все еще широко поддерживается. ARPA является самым новым стандартом. Поддержка формата ARPA описывается далее в этом руководстве. 

=== Настройка BIND ===

Последние версии BIND включают поддержку IPv6. Для прочтения этого раздела требуется минимальное знание о конфигурации и использовании BIND. Предполагается, что BIND не запущен в chroot. Если это так, просто добавьте префикс chroot к большинству частей следующего раздела. 

Сначала необходимо добавить записи для файлов "прямой" (forward) и "обратной" (reverse) зоны DNS в {{Path|/etc/bind/named.conf}}. 

{{Code|Записи named.conf|<pre>
## (Мы разрешаем bind слушать IPv6-адреса.
## Использование 'any' является единственным способом это выполнить для версий bind ранее 9.3)
options {
    [...]
    listen-on-v6 { any; }
    [...]
};
## (Этот раздел предусматривает прямой DNS для домена 'ipv6-rules.com':)
zone "ipv6-rules.com" IN {
    type master;
    file "pri/ipv6-rules.com";
};
## (Данный формат обратного DNS является "побитовым." Это выполняется взятием префикса IPv6,
## переставлением чисел в обратном порядке и размещением точки между каждым числом)
zone "6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa" {
        type master;
        file "pri/rev-ipv6-rules.com.arpa";
};
</pre>
}}

Теперь требуется создать эти файлы зоны и добавить записи для каждого из хостов. 

{{Code|pri/ipv6-rules.com|<pre>
$TTL    2h
@       IN      SOA     ipv6-rules.com. webmaster.ipv6-rules.com.  (
                                2003052501 ; Serial
                                28800      ; Refresh
                                14400      ; Retry
                                3600000    ; Expire
                                86400 )    ; Minimum
                NS      ns1.ipv6-rules.com

IN      AAAA    2001:470:1f00:296::1 ; address for ipv6-rules.com
host1   IN      AAAA    2001:470:1f00:296::2 ; address for host1.ipv6-rules.com
host2   IN      AAAA    2001:470:1f00:296::3:3 ; address for host2.ipv6-rules.com
</pre>
}}

        -

{{Code|pri/rev-ipv6-rules.com.arpa|<pre>
$TTL 3d ; Default TTL (bind 8 needs this, bind 9 ignores it)
@       IN SOA ipv6-rules.com. webmaster.ipv6-rules.com. (
                        2003052501      ; Serial number (YYYYMMdd)
                        24h             ; Refresh time
                        30m             ; Retry time
                        2d              ; Expire time
                        3d )            ; Default TTL
        IN      NS     ns1.ipv6-rules.com.
; IPv6 PTR entries
$ORIGIN 6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa.

1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     ipv6-rules.com.
2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     host1.ipv6-rules.com.
3.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     host2.ipv6-rules.com.
</pre>
}}

-

=== Настройка DJBDNS ===

Для DJBDNS существует несколько патчей от сторонних разработчиков, доступных по адресу [http://www.gentoo.org/ http://www.fefe.de/dns/] , которые позволяют выполнение запросов DNS для IPv6. DJBDNS может быть установлен с этими патчами, если в список USE-флагов добавлен ''ipv6''. 

{{Warning/ru|Не все типы записей поддерживаются этими патчами. В частности, записи NS и MX не поддерживаются.}}

{{Emerge|djbdns}}

После установки djbdns, его нужно настроить, запустив команду <code>tinydns-setup</code> и ответив на несколько вопросов о том, к каким адресам нужно осуществлять привязку, куда устанавливать tinydns, и т. д. 

{{RootCmd|tinydns-setup}}

Предположим, мы установили <code>tinydns</code> в {{Path|/var/tinydns}}. Теперь мы можем отредактировать {{Path|/var/tinydns/root/data}}. Этот файл содержит все данные, необходимые tinydns для обработки DNS для делегирования IPv6. 

{{Code|Образец файла данных|<pre>
## (*.ipv6-rules.com авторитативно обрабатываются 192.168.0.1)
.ipv6-rules.com:192.168.0.1:a:259200
## (Авторитативный обратный DNS для 2001:470:1f00:296::/64)
.6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa:192.168.0.1:a
## (Укажите IP-адреса для хостов host1 и host2)
6host1.ipv6-rules.com:200104701f0002960000000000000001:86400
6host2.ipv6-rules.com:200104701f0002960000000000000002:86400
## (Направьте www на host1)
3www.ipv6-rules.com:200104701f0002960000000000000002:86400
</pre>
}}

Для строк с префиксом <code>6</code> будут созданы обе записи: AAAA и PTR. Для строк с префиксом <code>3</code> будет создана только запись AAAA. Помимо редактирования файла {{Path|data}} вручную, можно использовать сценарии <code>add-host6</code> и <code>add-alias6</code> для добавления новых записей. После внесения изменений в файл {{Path|data}}, необходимо запустить <code>make</code> из {{Path|/var/tinydns/root}}. В результате будет создан файл {{Path|/var/tinydns/root/data.cfb}}, который будет использоваться tinydns в качестве источника информации для DNS-запросов.

== IPv6-маршрутизатор ==

=== Настройка маршрутизации ===

Для использования системы в качестве маршрутизатора для других клиентов, которым требуется соединение через IPv6, необходима дальнейшая настройка. Нам потребуется включить переадресацию пакетов IPv6. Это можно сделать двумя способами. 

Нужно или установить значение 1 в псевдо-файле переадресации:
{{RootCmd|echo 1 > /proc/sys/net/ipv6/conf/all/forwarding}}

Или необходимо использовать команду <code>sysctl</code>:

{{RootCmd|sysctl -w net.ipv6.conf.all.forwarding{{=}}1}}

{{Warning/ru|Сценарий инициализации <code>radvd</code> , объясняемый в следующем разделе, включает (и отключает) переадресацию, делая следующий шаг ненужным.}}

Чтобы включить переадресацию при загрузке, нужно отредактировать файл {{Path|/etc/sysctl.conf}} и добавить в него следующую строчку. 

{{Code|Редактирование sysctl.conf|<pre>
## (При использовании radvd, этот шаг не требуется)
net.ipv6.conf.default.forwarding=1
</pre>
}}

Теперь трафик с этого компьютера должен быть переадресован через туннель, который был установлен ранее с выбранным нами сервисом. 

To assign IPv6 addresses to clients, the IPv6 specification allows for both stateless and stateful IP assignment. Stateless assignment uses a process called Router Advertisement and allows clients to obtain an IP and a default route by simply bringing an interface up. It is called "stateless" because there is no record of IPs assigned and the host they are assigned to. Stateful assignment is handled by DHCPv6. It is "stateful" because the server keeps a state of the clients who've requested IPs and received them. 

=== Stateless Configuration ===

Stateless configuration is easily accomplished using the Router Advertisement Daemon, or <code>radvd</code>. 

{{Emerge|radvd}}

After having emerged <code>radvd</code>, we need to create {{Path|/etc/radvd/radvd.conf}} that contains information about what IP block to assign IPs from. Here is a sample {{Path|radvd.conf}} file using the prefix we've been assigned from our tunnel broker. 

{{Code|Sample radvd.conf|<pre>
interface eth1
{
        ## (Send advertisement messages to other hosts)
        AdvSendAdvert on;
        ## (Fragmentation is bad(tm))
        AdvLinkMTU 1280;
        MaxRtrAdvInterval 300;
        ## (IPv6 subnet prefix we've been assigned by our PoP)
        prefix 2001:470:1F00:296::/64
        {
                AdvOnLink on;
                AdvAutonomous on;
        };
};
</pre>
}}

{{Warning|Make sure the interface on the first line is correct so you broadcast router advertisement to your intranet and not to your ISP!}}

Further information is available in <code>man radvd.conf</code>. We can now start <code>radvd</code> and set it to start at boot. 

{{RootCmd|/etc/init.d/radvd start
|rc-update add radvd default}}

=== Stateful Configuration ===

If you'd like to have stateful configuration, you'll need to install and configure {{Package|net-misc/dibbler}}. 

{{Emerge|dibbler}}

Now we must configure the dibbler client by editing {{Path|/etc/dibbler/client.conf}}. 

{{Code|Sample dibbler client configuration|<pre>
iface ppp0 {
	rapid-commit yes
	pd
	option dns-server
}
</pre>
}}

We can now start the dibbler client, and configure it to start at boot. 

{{RootCmd|/etc/init.d/dibbler-client start
|rc-update add dibbler-client default}}

== IPv6 Clients ==

=== Using radvd ===

Clients behind this router should now be able to connect to the rest of the net via IPv6. If using radvd, configuring hosts should be as easy as bringing the interface up. (This is probably already done by your net.ethX init scripts). 

{{RootCmd|ip link set eth0 up
|ip addr show eth0|output=<pre>
1: eth0: <BROADCAST,MULTICAST,UP> mtu 1400 qdisc pfifo_fast qlen 1000
    link/ether 00:01:03:2f:27:89 brd ff:ff:ff:ff:ff:ff
    inet6 2001:470:1f00:296:209:6bff:fe06:b7b4/128 scope global
       valid_lft forever preferred_lft forever
    inet6 fe80::209:6bff:fe06:b7b4/64 scope link
       valid_lft forever preferred_lft forever
    inet6 ff02::1/128 scope global
       valid_lft forever preferred_lft forever
</pre>
}}

== Other Resources ==
There are many excellent resources online pertaining to IPv6. 



{| class="wikitable" style="text-align: left;" 
|- 
! Websites
! Resources
|- 
|  [http://www.ipv6.org/ www.ipv6.org] 
| General IPv6 Information
|- 
|  [http://www.linux-ipv6.org/ www.linux-ipv6.org/] 
| USAGI Project
|- 
|  [http://www.deepspace6.net/ www.deepspace6.net] 
| Linux/IPv6 site
|- 
|  [http://www.kame.net/ www.kame.net] 
| *BSD implementation
|-
|}

On IRC, you can try <code>#ipv6</code> on [http://www.freenode.net/ Freenode]. You can connect to the Freenode servers using an IPv6 enabled client by connecting to '''irc.ipv6.freenode.net'''. 


== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:


* Peter Johanson
* Jorge Paulo
* Sven Vermeulen
* Camille Huot
* Pasi Valminen
* nightmorph
* hwoarang

[[Category:Network management]]
