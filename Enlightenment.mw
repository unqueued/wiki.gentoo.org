{{InfoBox stack
|{{InfoBox homepage|https://www.enlightenment.org/|header=true}}
|{{InfoBox package|x11-wm/enlightenment}}
|{{InfoBox wikipedia|Enlightenment (software)}}
|{{InfoBox gitweb|https://git.enlightenment.org/|Enlightenment's git repository|raw=true}}
}}

'''Enlightenment''' is [[Article description::an eye-candy, compositing and stacking [[window manager]] that is released under the permissive BSD License.]] It was first released in 1997 by Carsten Haitzler (Rasterman) and this original release was dubbed Enlightenment DR16 (or E16 for short). In 2012 a new version of Enlightenment was released, which was called Enlightenment DR17 (or E17). Since then many further major releases of Enlightenment have been made: E18, E19, E20, E21 and E22. E20, E21 and E22  are all presently in the Portage Tree. 

There has been some confusion over Enlightenment versions. E16, despite being an older release of Enlightenment, has its releases numbered 1.x, while the later releases of Enlightenment (E17-E22) all have decimal release numbers. E17 is numbered 0.17.x, E18 is numbered 0.18.x, E19 is numbered 0.19.x while E20 is numbered 0.20.x and so on. Consequently, it is advised that users are careful as to which version of Enlightenment they are installing. While the version numbers reflect actual versions of the upstream tar archives, they can be confusing.

== Installation ==

=== USE flags ===

{{USEflag|package=x11-wm/enlightenment}}

All wayland-related modules should be either disabled or enabled, depending on your <code>wayland</code> USE flag status.

{{Important|Upstream requires <code>systemd</code> to be used when enabling <code>wayland</code>, see [https://git.enlightenment.org/core/enlightenment.git/tree/README.wayland Wayland requirements].}}

For a working Enlightenment installation, USE flags with EFL are important. 

{{USEflag|package=dev-libs/efl}}

=== Latest Enlightenment  ===

For installing the latest Enlightenment WM and the needed libraries, just issue the following command:

{{Emerge|enlightenment}}

For SVG support e.g. for previews or menu entries, you can additionally install dev-libs/efl with the <code>svg</code> USE flag enabled.

Addition to {{Path|/etc/portage/package.use}} (unless you already have the <code>svg</code> USE flag globally enabled) and install the package:

{{RootCmd|euse -p dev-libs/efl -E svg}}

{{Emerge|efl}}

Enabling at least these USE flags for efl is recommended when running Enlightenment: <code>X bmp drm eet fontconfig gif gstreamer harfbuzz ico jpeg2k opengl pulseaudio sound svg system-lz4 systemd</code>

=== Stable Enlightenment ===

Because upstream only provides support for the latest Enlightenment, Gentoo will try to follow upstream's release cycles closely. If you prefer older releases of Enlightenment WM, you might have to set up a [https://wiki.gentoo.org/wiki/Custom_repository#Creating_a_local_repository local overlay] to store ebuilds for x11-wm/enlightenment and dev-libs/efl. You can find all the older ebuilds by utilizing [https://gitweb.gentoo.org/repo/gentoo.git/log/x11-wm/enlightenment?showmsg=1 Git history].

On stable systems, to get the latest stable version, type

{{Emerge|enlightenment}}

You can utilize {{Path|/etc/portage/package.mask}} to block incoming updates.

=== Enlightenment live ebuilds ===

The process is a little different because it's recommended to always rebuild all of the components using their current state in [[Git]]. Make sure you have installed [[Layman]] or [[Eselect/Repository]]. Now you can add the [http://gpo.zugaina.org/Overlays/enlightenment-live enlightenment-live] overlay.

{{RootCmd|layman -a enlightenment-live}}

or

{{RootCmd|eselect repository enable enlightenment-live}}

Make sure to install all core enlightenment packages using live ebuilds. You can update using the exact same command to ensure that all core packages are updated.

{{Emerge|--autounmask-write @enlightenment-core-9999}}

The overlay contains masked package even for latest stable enlightenment releases.

Be aware that they are currently masked for ~amd64, so you need to unmask them.
{{RootCmd|emerge --ask --autounmask-write efl enlightenment}}

{{Note|The ebuilds are currently tested for X and not for Wayland. Further investigation and feedback is needed for Enlightenment with Wayland and Systemd}} 
{{Note|The ebuilds for the latest stable packages may be moved to the official repository once tested and stable.}} 

If anything goes wrong, file a ticket on GitHub or contact [[User:Rafspiny]]. Those are live ebuilds and therefore they can occasionally need updating. I'm also considering starting a separate overlay just for Enlightenment, let me know if that would help you.

=== Enlightenment e16 ===

Old Enlightenment-e16 is still maintained. It was removed from Gentoo's portage tree because it caused a lot of confusion and made later Enlightenment releases harder to handle due to wrongly slotted packages. You can install e16 from [https://github.com/mcclung/e16-overlay e16-overlay]. Please report any issues you find with e16 to the maintainer of that overlay via [https://github.com/mcclung/e16-overlay/issues Github issues].

{{Note|Update this section when the overlay gets added to public layman / eselect-repository list.}}

== Configuration ==

=== Enlightenment ===

Enlightenment's configuration is all handled through the settings editor from within enlightenment. You can access some "under-the-hood" config options with

{{Cmd|elementary_config}} 

And there's also a command line tool called <code>vieet</code> which especially useful in emergency. In many cases, if your Enlightenment's configuration gets broken, moving {{Path|~/.e}} and {{Path|~/.elementary}} to a temporary place, then re-starting Enlightenment usually helps.

=== Launching enlightenment with startx ===

{{FileBox|filename=~/.xinitrc|lang=bash|1=
exec dbus-launch --exit-with-session enlightenment_start
}}

== Tips and tricks ==

=== Adding Gadgets to desktop ===

Open up menu and navigate to "Desktop -> Add Gadgets". 

=== Disabling desktop application icons ===

The option to disable application icons in desktop is a bit hidden. Open Settings Panel then go to "Files" tab, navigate to "File Manager -> Display" and uncheck "Icons On Desktop".

=== Using 'bryce' instead of old-fashioned panel ===

With recent versions, users can opt to use experimental new "bryce" instead of old panel. Open desktop menu menu and navigate to "Desktop -> Add Bryce". Bryces are experimental in Enlightenment's versions below 0.23.

=== Wayland session ===

{{Important|At the time of writing (19 Aug 2018) Enlightenment with Wayland session is '''not''' considered stable for everyday use.}}

Easiest way to start a wayland session is to use a wayland-compliant login manager, like [https://packages.gentoo.org/packages/gnome-base/gdm GDM] or [https://packages.gentoo.org/packages/x11-misc/sddm SDDM]. Wayland session can be started from TTY also, by exporting  
{{Cmd|ECORE_EVAS_ENGINE{{=}}wayland_egl ELM_DISPLAY{{=}}wl ELM_ACCEL{{=}}gl enlightenment_start}}

where '''ECORE_EVAS_ENGINE''' is set to ''wayland_egl'' or ''wayland_shm'' depending on whether you wish to use the SHM based software rendering or EGL.

When using software rendering, also export '''ELM_ACCEL=none'''.

== EFL-based applications ==

[https://packages.gentoo.org/packages/dev-libs/efl EFL] and [https://packages.gentoo.org/packages/dev-python/python-efl python-efl] offer developers everything needed to develop eye-candy applications that integrate into Enlightenment WM. Here are few of them, 

* [https://packages.gentoo.org/packages/media-gfx/ephoto media-gfx/ephoto] Enlightenment image viewer written with EFL 
* [https://packages.gentoo.org/packages/net-misc/econnman net-misc/econnman] ConnMan User Interface for Enlightenment
* [https://packages.gentoo.org/packages/sys-process/evisum sys-process/evisum] System and process monitor written with EFL 
* [https://packages.gentoo.org/packages/x11-misc/enlightenment-extra x11-misc/enlightenment-extra]  An app for downloading themes and add-ons to Enlightenment WM 
* [https://packages.gentoo.org/packages/x11-terms/terminology x11-terms/terminology] Feature rich terminal emulator
* [https://packages.gentoo.org/packages/x11-themes/e-gtk-theme x11-themes/e-gtk-theme] A GTK theme to match Enlightenment WM's default theme

{{Note|Anyone can add software they use via [https://wiki.gentoo.org/wiki/Project:Proxy_Maintainers the proxy-maint project]. Please do so. [https://phab.enlightenment.org/w/ A short list of external applications]. And [https://phab.enlightenment.org/w/projects/python_bindings_for_efl/ some python-efl applications].}}

== Troubleshooting ==

=== Applications requiring system tray not working properly ===

Older applications still using xembed systray instead of appindicator may not work properly (Dropbox for example). Solution is to install a stand-alone system tray program, such as [https://packages.gentoo.org/packages/x11-misc/stalonetray stalonetray].

=== Black window contents ===

If you get windows with completely black contents (most likely with the nvidia proprietary driver and Enlightenment 0.20.5 or 0.20.6), follow these steps:
* log out from Xorg.
* set E_COMP_ENGINE=sw, for example in .xinitrc:
{{FileBox|filename=~/.xinitrc|lang=bash|1=
export E_COMP_ENGINE=sw
exec dbus-launch --exit-with-session enlightenment_start
}}
Alternatively, you can set the variable in /etc/environment.
* start X.
* Go to Settings->Composite->Advanced->Rendering and disable "Texture from pixmap".
* Then you can remove "export E_COMP_ENGINE=sw" from .xinitrc and log out/in to get accelerated rendering again.

For more information see [https://phab.enlightenment.org/T3030 this bug report].

=== "build error: undefined symbol: _EFL_GFX_PATH_CHANGED" ===

An unfortunate build error that's caused by existing libraries. There is usually a more detailed error, like: "/usr/lib64/libector.so.1: undefined symbol: _EFL_GFX_PATH_CHANGED". In this case, remove any existing installation of dev-libs/efl and the offending library. 

{{Important|It's wise to log out from Enlightenment before removing efl. Removing efl while using Enlightenment might cause Enlightenment to act weirdly and in the worst case lock up. If that happens, you won't see if the build fails. Log in to TTY or some other WM/DE while re-installing efl.}}

{{RootCmd|emerge -C --nodeps dev-libs/efl}}
{{RootCmd|rm /usr/lib64/libector.so.1}}
{{Emerge|dev-libs/efl}}

See more in [https://bugs.gentoo.org/651890 #651890].

=== Debugging ===

If you've tried to move your config files away and Enlightenment still doesn't work, you can debug the problem by typing 

{{Cmd|<nowiki>enlightenment_start 2>&1 | tee logthing.txt</nowiki>}}

and reading the log file. It is useful when making a bug report to [https://bugs.gentoo.org/ bugs.gentoo.org] or upstream's [https://phab.enlightenment.org/project/ Phabricator]. If the log file doesn't imply clear errors, you might have to install and run it it with debugging tools like [https://packages.gentoo.org/packages/sys-devel/gdb gdb], [https://packages.gentoo.org/packages/dev-util/strace strace] or [https://packages.gentoo.org/packages/dev-util/valgrind valgrind].

{{Cmd|<nowiki>E_START=1 strace enlightenment_start 2>&1 | tee logthing.txt</nowiki>}}

=== "No opengl engines found" with nvidia-drivers ===

With latest releases of mesa and xorg-1.20, [https://packages.gentoo.org/packages/dev-libs/efl efl] can look for {{Path|libGL.so }} from a wrong place. This results in Enlightenment's gl-engine not using opengl backend. This can be fixed with [https://packages.gentoo.org/packages/dev-util/patchelf patchelf] utility. 

Identify where your {{Path|libGL.so}} is installed, usually {{Path|/usr/lib/opengl/nvidia/lib/libGL.so}}. Then use patchelf to modify [https://packages.gentoo.org/packages/dev-libs/efl efl]'s gl engine, 

{{Cmd|patchelf --set-rpath /usr/lib/opengl/nvidia/lib/ /usr/lib64/evas/modules/engines/gl_x11/v-1.20/module.so}}

And relog. Paths depend on your architechture. This needs to be done once, or everytime [https://packages.gentoo.org/packages/dev-libs/efl efl] is re-installed.

== Screenshots ==

<gallery widths=400px  heights=250px>
E22-1.png
</gallery>

<gallery widths=400px  heights=250px>
E22-2.png
</gallery>

<gallery widths=400px  heights=250px>
E22-3.png
</gallery>

<gallery widths=400px  heights=250px>
E-0.17.0-shot-2013-01-13 03-52-02.png
</gallery>

<gallery widths=400px  heights=250px>
Evisum-1.png
</gallery>

<gallery widths=400px  heights=250px>
Evisum-2.png
</gallery>

<gallery widths=400px  heights=250px>
E-5.png
</gallery>

== See also ==

* [[Recommended applications]]

== External resources ==

* [https://phab.enlightenment.org/w/e_window_manager_faq/ E Window Manager Faq]
* [https://github.com/tokiclover/e-gtk-theme GTK Theme to match the new dark default theme]
* [https://enlightenment.org Homepage]
* [[Wikipedia:Enlightenment (window manager)|Wikipedia article]]
* [https://wiki.archlinux.org/index.php/enlightenment Arch linux Wiki page]
* [https://phab.enlightenment.org/w/arcanist/ Sending patches upstream]

[[Category:Wayland compositor]]
[[Category:Window manager]]
