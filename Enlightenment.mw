'''Enlightenment''' is a light-weight and eye-candy desktop environment.
== Installation  ==
For installing e17 and the needed libraries, just issue the following command:
{{Emerge|enlightenment:0.17}}

For svg support e.g. for previews or menu entries, you can additionally install evas_generic_loaders with the svg USE flag enabled.
Addition to {{Path|/etc/portage/package.use}} (unless you already have the svg USE flag globally enabled):
{{File|/etc/portage/package.use||
media-plugins/evas_generic_loaders svg
}}
and install the package:
{{Emerge|evas_generic_loaders}}

== Tips and Tricks ==
Now one can start E17 desktop environment by launching the default display manager.

Or else, one can use simple ~/.{xinitrc,bash_log{in,out}} or [[zsh]] version `~/.zlog{in,out}' scheme to avoid unnecessary extra packages to just be able to log into your session. And do not forget to install [[NetworkManager]] and {{Package|gnome-extra/nm-applet}} to be able to switch to different networks easily because, last time I've checked, {{Package|net-misc/connman}} did not work at all despite that there's a E17 module for it.

{{File|[https://github.com/tokiclover/dotfiles/blob/master/.xinitrc ~/.xinitrc]||<pre>
# $Id: ~/.xinitrc, 2012/11/22 09:48:07 -tclover Exp $
#dbus-launch --sh-syntax --exit-with-session nm-applet --sm-disable &
#dbus-launch --sh-syntax --exit-with-session gcm-session &
#xcalib -gc 1.0 -b 0.0 -co 100.0 ~/.icc/sRGB_v4_ICC_preference.icc
#/usr/libexec/polkit-gnome-authentication-agent-1 &
ladi-system-tray 1>/dev/null 2>&1 &
unclutter -idle 8 -noevents &
[[ -f ~/.Xmodmap ]] && xmodmap ~/.Xmodmap
xset s off
xset fp+ /usr/share/fonts/TTF-FD/
xset fp+ /usr/share/fonts/artwiz-latin1
xset fp+ /usr/share/fonts/artwiz-aleczapka-en
xset fp+ /usr/share/fonts/terminus
xset fp rehash
xrdb -load ~/.Xresources
setxkbmap fr 
#xrdb -merge ~/.Xdefaults
#[[ -f ~/.xcolors/sj-bright ]] && xrdb -merge ~/.xcolors/sj-bright
urxvtd -q -o -f &
case $(tty | cut -b9-) in
	1) exec ck-launch-session dbus-launch --sh-syntax --exit-with-session enlightenment_start;;
	2) exec ck-launch-session dbus-launch --sh-syntax --exit-with-session lxsession          ;;
	3) exec ck-launch-session dbus-launch --sh-syntax --exit-with-session openbox-session    ;;
esac
# vim:fenc=utf-8:ci:pi:sts=0:sw=4:ts=4:</pre>}}
{{Note|Notice that the E17 session uses ecomp+ecomorph combination, edit `~/.xinitrc' by removing the `.sh' suffix accordingly if not using it.}} 
{{File|[https://github.com/tokiclover/dotfiles/blob/master/.bash_login ~/.bash_login]||<pre>
# $Id: ~/.bash_login, 2012/11/22 10:15:47 -tclover Exp $
# auto startx depending on the tty
[[ -z $DISPLAY ]] && [[ $UID != 0 ]] && [[ $(tty | cut -c9) -le 3 ]] &&
    startx 1>~/.xsession-errors 2>&1 &
# start gnome-keyring
[[ -f /tmp/.private/$USER/keyring ]] && {
    while read line; do
        export $line
    done </tmp/.private/$USER/keyring
    [[ "$(ps aux|grep $GNOME_KEYRING_PID|head -n1|awk '{print $1}')" != $USER ]] &&
        unset GNOME_KEYRING_PID
}
[[ -z $GNOME_KEYRING_PID ]] && {
    eval $(gnome-keyring-daemon --daemonize --components=pkcs11,secrets,ssh,gpg)
    echo GNOME_KEYRING_PID=$GNOME_KEYRING_PID >/tmp/.private/$USER/keyring
    echo GNOME_KEYRING_CONTROL=$GNOME_KEYRING_CONTROL >>/tmp/.private/$USER/keyring
    echo SSH_AUTH_SOCK=$SSH_AUTH_SOCK >>/tmp/.private/$USER/keyring
    echo GPG_AGENT_INFO=$GPG_AGENT_INFO >>/tmp/.private/$USER/keyring
    export GNOME_KEYRING_PID GNOME_KEYRING_CONTROL SSH_AUTH_SOCK GPG_AGENT_INFO
}
# vim:fenc=utf-8:ci:pi:sts=0:sw=4:ts=4:</pre>}}
A zsh version could be used instead.
{{File|[https://github.com/tokiclover/dotfiles/blob/master/.zlogin ~/.zlogin]||<pre>
# $Id: ~/.zlogin, 2012/11/22 08:40:49 -tclover Exp $
# auto startx depending on the tty
if [[ -z $DISPLAY ]] && [[ $EUID != 0 ]] && [[ ${$(tty)#*tty} -le 3 ]] {
    startx 1>~/.xsession-errors 2>&1 &
}
# start gnome-keyring
if [[ -f /tmp/.private/$USER/keyring ]] {
    while read line; do
        export $line
    done </tmp/.private/$USER/keyring
    if [[ "$(ps aux|grep $GNOME_KEYRING_PID|head -n1|awk '{print $1}')" != $USER ]] {
        unset GNOME_KEYRING_PID
    }
}
if [[ -z $GNOME_KEYRING_PID ]] {
    eval $(gnome-keyring-daemon --daemonize --components=pkcs11,secrets,ssh,gpg)
    echo GNOME_KEYRING_PID=$GNOME_KEYRING_PID >/tmp/.private/$USER/keyring
    echo GNOME_KEYRING_CONTROL=$GNOME_KEYRING_CONTROL >>/tmp/.private/$USER/keyring
    echo SSH_AUTH_SOCK=$SSH_AUTH_SOCK >>/tmp/.private/$USER/keyring
    echo GPG_AGENT_INFO=$GPG_AGENT_INFO >>/tmp/.private/$USER/keyring
    export GNOME_KEYRING_PID GNOME_KEYRING_CONTROL SSH_AUTH_SOCK GPG_AGENT_INFO
}
# vim:fenc=utf-8:ci:pi:sts=0:sw=4:ts=4</pre>}}
{{File|[https://github.com/tokiclover/dotfiles/blob/master/.bash_logout ~/.bash_logout]||<pre>
# $Id: ~/.bash_logout, 2012/07/20 13:28:32 -tclover Exp $
[[ -n $GNOME_KEYRING_PID ]] && kill -TERM $GNOME_KEYRING_PID
[[ -n $DISPLAY ]] && [[ $UID != 0 ]] && fhp 1>/dev/null 2>&1
# vim:fenc=utf-8:ci:pi:sts=0:sw=4:ts=4:</pre>}}
{{File|[https://github.com/tokiclover/dotfiles/blob/master/.zlogout ~/.zlogout]||<pre>
# $Id: ~/.zlogout, 2012/07/20 13:28:32 -tclover Exp $
if [[ -n $GNOME_KEYRING_PID ]] { kill -TERM $GNOME_KEYRING_PID }
if [[ -n $DISPLAY ]] && [[ $EUID != 0 ]] { fhp 1>/dev/null 2>&1 }
# vim:fenc=utf-8:ci:pi:sts=0:sw=4:ts=4:</pre>}}

The previous can be used to login into an E17 session easily without needing any ''middle man'' like {{Package|x11-misc/slim}} depending on tty or console used to log in.

== Multi Layout Keyboard ==
for use multi layout keyboard install this package:
* x11-apps/setxkbmap

== Screenshots ==
<gallery widths=400px  heights=250px>
E-0.17.0-shot-2013-01-13 03-52-02.png
</gallery>

== See also ==
* [[Recommended applications]]

== External Resources ==
* [http://enlightenment.org Homepage]
* [http://en.wikipedia.org/wiki/Enlightenment_(window_manager) Wikipedia article]

[[Category:Desktop environment]]
