<languages />

== Préliminaires ==

=== Configuration basique du noyau ===

N'importe quel arbre basé sur un noyau 2.6 disponible dans Gentoo prend facilement en charge les connexions IPv6. La nouvelle pile IPv6  USAGI est intégrée das le noyau depuis Linux 2.6.0. 

{{Emerge|gentoo-sources}}

Vous êtes désormais prêt à entrer dans le répertoire des sources du noyau et à commencer la configuration de votre noyau. 

{{RootCmd|cd /usr/src/linux
|make menuconfig}}

{{Note|Ceci assume que le lien symbolique {{Path|/usr/src/linux}} pointe sur les sources que vous allez utiliser.}}

{{Kernel|'make menuconfig' options|<pre>
Networking support --->
  Networking options --->
    <*> The IPv6 protocol --->
## (Les options IPv6 sous celle-ci peuvent être utiles pour beaucoup d'autres applications,
## mais ne devraient pas être nécessaires pour une installation basique.)

## (Cette option n'est nécessaire que si vous utilisez  ptrtd pour des conversions  6 vers 4 )
Device Drivers --->
  Network device support --->
    <*> Universal TUN/TAP device driver support
</pre>
}}

-

=== Tester la prise en charge de l'IPv6  ===

Après avoir activé les options recommandées, recompilez votre noyau et redémarrez avec votre nouveau noyau pour lequel IPv6 est activé. 

Si vous n'avez pas encore '''iproute2''' installé, nous vous enjoignons de le faire maintenant. iproute2 est une suite de configuration de réseau qui contient <code>ip</code>, le remplaçant célèbre de <code>ifconfig</code>, <code>route</code> , <code>iptunnel</code> et autres... 

{{Emerge|sys-apps/iproute2}}

{{Warning/fr|L'utilisation de  ifconfig peut vous causer de sérieuses prises de tête si vous avez de multiples périphériques tunnel. Vous devez retirer les tunnels dans l'ordre inverse, ce qui signifie que le dernier créé doit être retiré le premier et ainsi de suite. Vous êtes prévenu !}}

Si IPv6 fonctionne, le périphérique de boucle de retour (loopback device) devrait indiquer une adresse IPv6 : 

{{RootCmd|ip -6 addr show lo|output=<pre>
1: lo: <LOOPBACK,UP> mtu 16436
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
    ## (Les lignes ci-dessus montrent que tout fonctionne correctement)
</pre>
}}

Avant d'aller plus loin, assurez-vous que vous avez ajouté « ipv6 » à votre liste des options de la variable USE dans le fichier  {{Path|make.conf}}, de telle façon que les installations futures des paquets incluront la prise en charge de l'IPv6.

== Configuration des tunnels ==

=== Configuration de base ===

La plupart des FAI n'offrent pas de connexions IPv6 nativement. Pour contourner cette limitation, il y a plusieurs plusieurs « courtiers en tunnels » de par le monde qui offrent des tunnels IPv6 libres. Ceci vous permet de créer un tunnel pour toutes vous connexions IPv6 via une connexion IPv4. 

{| class="wikitable" style="text-align: left;" 
|- 
! Courtier
! Localisation
|- 
|  [http://tunnelbroker.net/ Hurricane Electric] 
| North America, Europe, Asia
|- 
|  [http://gogonet.gogo6.com/ Freenet6] 
| US
|- 
|  [http://www.sixxs.net/ Sixxs] 
| Europe
|- 
|  [http://tunnel-broker.singnet.com.sg/ Singnet] 
| Singapore
|- 
|  [http://broker.aarnet.net.au/ Aarnet] 
| Australia/South Pacific
|-
|}

Ci-dessous, nous présentons deux exemples de création de tunnel avec deux courtiers populaires nord américains, Hurricane Electric (s'applique tout aussi bien aux tunnels non heartbeat de sixx) et Freenet6. 

=== Hurricane Electric ===

Hurricane Electric (HE en abrégé) propose des tunnels IPv6 et réserve un bloc d'adresses /64 pour vous. Il autorise aussi la configuration du DNS inverse. Obtenir un tunnel de HE est aussi simple que de se rendre sur [http://www.gentoo.org/ http://www.tunnelbroker.net/]  et de remplir un formulaire. 

{{Note|L'enregistrement comprend des informations telles que votre adresse et votre numéro de téléphone.}}

Après qu'un tunnel vous soit accordé et que vous ayez un bloc d'adresses /64 alloué, vous pouvez configurer votre système Gentoo. HE fournit des exemples de configuration basés sur les utilitaires ifconfig et iproute. Les deux exemples qui suivent supposent que vous avez la configuration suivante : 

{| class="wikitable" style="text-align: left;" 
|- 
| Local IPv4 Address (eth0)
| 68.36.91.195
|- 
| HE IPv4 Address
| 64.71.128.82
|- 
| Local IPv6 tunnel Address
| 2001:470:1F00:FFFF::189
|- 
| IPv6 Block
| 2001:470:1F00:296::/64
|-
|}

Utiliser le paquet iproute2 et exécuter la commande <code>ip</code> aura le résultat suivant :

Créez un tunnel entre l'IPv4 local (eth0) et l'adresse IPv4 distante de HE.

{{RootCmd|ip tunnel add sixbone mode sit remote 64.71.128.82 local 68.36.91.195 ttl 64 dev eth0}}

Extrayez le surcoût du « tunnelling » du MTU :

{{RootCmd|ip link set sixbone mtu 1280}}

Démarrer le tunnel :

{{RootCmd|ip link set sixbone up}}

Assignez lui l'adresse IPv6 :

{{RootCmd|ip addr add 2001:470:1F00:FFFF::189 dev sixbone}}

Routez toutes les adresses IPv6 unicast à travers votre périphérique tunnel 'sixbone' :

{{RootCmd|ip route add 2000::/3 dev sixbone}}

=== Freenet6 ===

[http://gogonet.gogo6.com/ Freenet6] est un autre courtier en tunnel. L'enregistrement facultatif nécessite seulement un nom d'utilisateur et une adresse de courriel valide. Ils ont choisi d'assurer la gestion du tunnel par une installation client/serveur et on créé le client <code>gateway6</code>. Le client est disponible dans Portage. Pour l'installer faites : 

{{Emerge|gateway6}}

Maintenant, si vous choisissez de vous connecter avec une authentification, vous devez configurer <code>gateway6</code>  en éditant le fichier {{Path|/etc/gateway6/gw6c.conf}}. Vous ne devriez avoir à changer que les champs  « userid » et le « passwd »  pour qu'ils correspondent à ceux assignés par Freenet6 et aussi changer le serveur passerelle. Ci-dessous, nous présentons un exemple de fichier de configuration. 

{{Code|gw6c.conf example|<pre>
auth_method=any
userid=anonymous
passwd=foobar
template=linux
server=broker.freenet6.net
</pre>
}}

=== Tester votre  connexion ===

Maintenant que votre tunnel est configuré, vous pouvez tester votre connexion. La manière la plus facile de le faire est d'utiliser l'utilitaire <code>ping6</code>  et d'essayer d'obtenir un écho  d'un hôte IPv6. 

{{Emerge|iputils}}

{{Cmd|ping6 www.kame.net|output=<pre>
PING www.kame.net(orange.kame.net) 56 data bytes
64 bytes from orange.kame.net: icmp_seq=1 ttl=52 time=290 ms
64 bytes from orange.kame.net: icmp_seq=2 ttl=52 time=277 ms
64 bytes from orange.kame.net: icmp_seq=3 ttl=52 time=280 ms
64 bytes from orange.kame.net: icmp_seq=4 ttl=52 time=279 ms
64 bytes from orange.kame.net: icmp_seq=5 ttl=52 time=277 ms

--- www.kame.net ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4038ms
rtt min/avg/max/mdev = 277.040/281.041/290.046/4.699 ms
</pre>
}}

Des travaux sont actuellement en cours pour ajouter une meilleure prise en charge de l'IPv6 au scripts d'initialisation du réseau. Si vous voulez savoir ou cela en est, ou/et contribuer, envoyez un courriel à {{Mail|latexer@gentoo.org}}.

== Prise en charge de l'IPv6 par les applications ==

=== Réinstaller des paquets ===

Sauf si vous avez déclaré l'option ''ipv6'' de la variable USE dans votre fichier  {{Path|/etc/portage/make.conf}} auparavant, vous aurez probablement besoin de réinstaller un ensemble de paquets pour les recompiler avec la prise en charge de l'IPv6. Pour obtenir la liste des paquets installés qui seront affectés par le changement d'options de la variable USE, utilisez l'option  <code>--newuse</code> ( <code>-N</code> ) de la commande emerge. 

{{Emerge|world|params=-uDNav}}

Si vous avez changé beaucoup d'options de la variable USE, cette liste peut s'avérer très longue. Il est recommandé de maintenir votre système à jour, ainsi ça ne causera aucun dommage si vous recompilez tous les paquets affectés. 

{{Note|Quelques paquets détectent la prise en charge de l'IPv6 automatiquement et ne possèdent par conséquent pas d'option IPv6 pour la variable USE. En conséquence, il pourra y avoir certains paquets, qui devraient prendre en charge l'UPv6, qui ne le feront pas si vous ne les avez pas compilés avec un noyau pour lequel l'IPv6 était activé.}}

=== Paquets spécifiques IPv6  ===

Il existe quelques paquets qui concernent spécifiquement des items IPv6. La plupart est localisée dans  {{Path|/usr/portage/net-misc}}. 

{| class="wikitable" style="text-align: left;" 
|- 
! Package
! Description
|- 
| net-misc/ipv6calc
| Converts an IPv6 address to a compressed format
|- 
| net-misc/netcat6
| netcat version that supports IPv6 and IPv4
|- 
| dev-perl/Socket6
| IPv6 related part of the C socket.h defines and structure manipulators
|-
|}

== Mise en place du DNS ==

=== IPv6 et DNS ===

Tout comme DNS utilise des enregistrements A pour l'IPv4, DNS utilise des enregistrements AAAA pour IPv6.(Ceci est dû au fait que IPv4 est un espace d'adressage de 2^32 alors que IPv6 est un espace d'adressage de 2^128). Pour le DNS inverse, la norme INT est déconseillée, car en voie d'obsolescence,   mais encore largement prise en charge. ARPA est la norme actuelle. La prise en charge du format ARPA sera décrite ici. 

=== Configuration de BIND ===

Des versions récentes de BIND incluent une excellente prise en charge de l'IPv6. Cette section suppose que vous avez au moins une connaissance minimale  sur la configuration et l'utilisation de BIND. Elle suppose également que vous n'exécutez pas BIND dans un environnement obtenu après changement de racine. Si c'était le cas, ajoutez le préfixe de cet environnement à la majorité des chemins indiqués dans la section qui suit. 

First you need to add entries for both forward and reverse DNS zone files in {{Path|/etc/bind/named.conf}} . 

{{Code|named.conf entries|<pre>
## (We allow bind to listen to IPv6 addresses.
## Using 'any' is the only way to do it prior to bind-9.3)
options {
    [...]
    listen-on-v6 { any; }
    [...]
};
## (This will provide the forward DNS for the domain 'ipv6-rules.com':)
zone "ipv6-rules.com" IN {
    type master;
    file "pri/ipv6-rules.com";
};
## (This format for reverse DNS is "bitwise." It's done by taking the IPv6 prefix,
## reversing the order of the numbers and putting a period between each number)
zone "6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa" {
        type master;
        file "pri/rev-ipv6-rules.com.arpa";
};
</pre>
}}

Now we must create those zone files and add entries for all of our hosts: 

{{Code|pri/ipv6-rules.com|<pre>
$TTL    2h
@       IN      SOA     ipv6-rules.com. webmaster.ipv6-rules.com.  (
                                2003052501 ; Serial
                                28800      ; Refresh
                                14400      ; Retry
                                3600000    ; Expire
                                86400 )    ; Minimum
                NS      ns1.ipv6-rules.com

        IN      AAAA    2001:470:1f00:296::1 ; address for ipv6-rules.com
host1   IN      AAAA    2001:470:1f00:296::2 ; address for host1.ipv6-rules.com
host2   IN      AAAA    2001:470:1f00:296::3:3 ; address for host2.ipv6-rules.com
</pre>
}}

{{Code|pri/rev-ipv6-rules.com.arpa|<pre>
$TTL 3d ; Default TTL (bind 8 needs this, bind 9 ignores it)
@       IN SOA ipv6-rules.com. webmaster.ipv6-rules.com. (
                        2003052501      ; Serial number (YYYYMMdd)
                        24h             ; Refresh time
                        30m             ; Retry time
                        2d              ; Expire time
                        3d )            ; Default TTL
        IN      NS     ns1.ipv6-rules.com.
; IPv6 PTR entries
$ORIGIN 6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa.

1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     ipv6-rules.com.
2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     host1.ipv6-rules.com.
3.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     host2.ipv6-rules.com.
</pre>
}}

=== DJBDNS configuration ===

There are currently some third-party patches to DJBDNS available at [http://www.gentoo.org/ http://www.fefe.de/dns/] that allow it to do IPv6 nameserving. DJBDNS can be installed with these patches by emerging it with ''ipv6'' in your USE variables. 

{{Warning|Not all record types are support yet with these patches. In particular, NS and MX records are not supported.}}

{{Emerge|djbdns}}

After djbdns is installed, it can be setup by running <code>tinydns-setup</code> and answering a few questions about which IP addresses to bind to, where to install tinydns, etc. 

{{RootCmd|tinydns-setup}}

Assuming we've installed <code>tinydns</code> into {{Path|/var/tinydns}} , we can now edit {{Path|/var/tinydns/root/data}} . This file will contain all the data needed to get tinydns handling DNS for your IPv6 delegation. 

{{Code|sample data file|<pre>
## (*.ipv6-rules.com is authoritatively handled by 192.168.0.1)
.ipv6-rules.com:192.168.0.1:a:259200
## (Authoritative reverse DNS for 2001:470:1f00:296::/64)
.6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa:192.168.0.1:a
## (Specify the IPs for host1 and host2)
6host1.ipv6-rules.com:200104701f0002960000000000000001:86400
6host2.ipv6-rules.com:200104701f0002960000000000000002:86400
## (Point www to host1)
3www.ipv6-rules.com:200104701f0002960000000000000002:86400
</pre>
}}

Lines prefixed with a <code>6</code> will have both an AAAA and a PTR record created. Those prefixed with a <code>3</code> will only have an AAAA record created. Besides manually editing the {{Path|data}} file, you can use the scripts <code>add-host6</code> and <code>add-alias6</code> to add new entries. After changes are made to the {{Path|data}} file, you simply need to run <code>make</code> from {{Path|/var/tinydns/root}} . This will create {{Path|/var/tinydns/root/data.cfb}} , which tinydns will use as its source of information for DNS requests.

== IPv6 Router ==

=== Configure routing ===

Further configuration is required if we want to use our system as a router for other clients wishing to connect to the outside world with IPv6. We need to enable forwarding of IPv6 packets. We can do this in one of two ways. 

Or we set the value 1 in the forwarding pseudo-file:
{{RootCmd|echo 1 > /proc/sys/net/ipv6/conf/all/forwarding}}

Or we use the <code>sysctl</code> command:

{{RootCmd|sysctl -w net.ipv6.conf.all.forwarding{{=}}1}}

{{Warning|The <code>radvd</code> init script explained in the next chapter enables (and disables) forwarding, making the next step unnecessary.}}

To enable forwarding at boot, you'll need to edit {{Path|/etc/sysctl.conf}} and add the following line. 

{{Code|sysctl.conf addition|<pre>
## (If you will be using radvd, this step is unnecessary)
net.ipv6.conf.default.forwarding=1
</pre>
}}

Traffic should now be forwarded from this box through the tunnel we've established with our broker. 

To assign IPv6 addresses to clients, the IPv6 specification allows for both stateless and stateful IP assignment. Stateless assignment uses a process called Router Advertisement and allows clients to obtain an IP and a default route by simply bringing an interface up. It is called "stateless" because there is no record of IPs assigned and the host they are assigned to. Stateful assignment is handled by DHCPv6. It is "stateful" because the server keeps a state of the clients who've requested IPs and received them. 

=== Stateless Configuration ===

Stateless configuration is easily accomplished using the Router Advertisement Daemon, or <code>radvd</code> . 

{{Emerge|radvd}}

After having emerged <code>radvd</code> , we need to create {{Path|/etc/radvd/radvd.conf}} that contains information about what IP block to assign IPs from. Here is a sample {{Path|radvd.conf}} file using the prefix we've been assigned from our tunnel broker. 

{{Code|Sample radvd.conf|<pre>
interface eth1
{
        ## (Send advertisement messages to other hosts)
        AdvSendAdvert on;
        ## (Fragmentation is bad(tm))
        AdvLinkMTU 1280;
        MaxRtrAdvInterval 300;
        ## (IPv6 subnet prefix we've been assigned by our PoP)
        prefix 2001:470:1F00:296::/64
        {
                AdvOnLink on;
                AdvAutonomous on;
        };
};
</pre>
}}

{{Warning|Make sure the interface on the first line is correct so you broadcast router advertisement to your intranet and not to your ISP!}}

Further information is available in <code>man radvd.conf</code> . We can now start <code>radvd</code> and set it to start at boot. 

{{RootCmd|/etc/init.d/radvd start
|rc-update add radvd default}}

=== Stateful Configuration ===

If you'd like to have stateful configuration, you'll need to install and configure <code>net-misc/dibbler</code> . 

{{Emerge|dibbler}}

Now we must configure the dibbler client by editing {{Path|/etc/dibbler/client.conf}} . 

{{Code|Sample dibbler client configuration|<pre>
iface ppp0 {
	rapid-commit yes
	pd
	option dns-server
}
</pre>
}}

We can now start the dibbler client, and configure it to start at boot. 

{{RootCmd|/etc/init.d/dibbler-client start
|rc-update add dibbler-client default}}

== IPv6 Clients ==

=== Using radvd ===

Clients behind this router should now be able to connect to the rest of the net via IPv6. If using radvd, configuring hosts should be as easy as bringing the interface up. (This is probably already done by your net.ethX init scripts). 

{{RootCmd|ip link set eth0 up
|ip addr show eth0|output=<pre>
1: eth0: <BROADCAST,MULTICAST,UP> mtu 1400 qdisc pfifo_fast qlen 1000
    link/ether 00:01:03:2f:27:89 brd ff:ff:ff:ff:ff:ff
    inet6 2001:470:1f00:296:209:6bff:fe06:b7b4/128 scope global
       valid_lft forever preferred_lft forever
    inet6 fe80::209:6bff:fe06:b7b4/64 scope link
       valid_lft forever preferred_lft forever
    inet6 ff02::1/128 scope global
       valid_lft forever preferred_lft forever
</pre>
}}

== Other Resources ==
There are many excellent resources online pertaining to IPv6. 



{| class="wikitable" style="text-align: left;" 
|- 
! Websites
! Resources
|- 
|  [http://www.ipv6.org/ www.ipv6.org] 
| General IPv6 Information
|- 
|  [http://www.linux-ipv6.org/ www.linux-ipv6.org/] 
| USAGI Project
|- 
|  [http://www.deepspace6.net/ www.deepspace6.net] 
| Linux/IPv6 site
|- 
|  [http://www.kame.net/ www.kame.net] 
| *BSD implementation
|-
|}

On IRC, you can try <code>#ipv6</code> on [http://www.freenode.net/ Freenode] . You can connect to the Freenode servers using an IPv6 enabled client by connecting to '''irc.ipv6.freenode.net''' . 


== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:


* Peter Johanson
* Jorge Paulo
* Sven Vermeulen
* Camille Huot
* Pasi Valminen
* nightmorph
* hwoarang

[[Category:Network management]]
