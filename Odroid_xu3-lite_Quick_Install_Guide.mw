Installing Gentoo onto an Odroid XU3-Lite is not a difficult task.
To do it in an easy way, we will need two micro SD memory cards of 8GB. We will use a hard disk of 40GB via USB. We will use the disk to improve speed; actually you can not use it at all.

=== Starting up the main board ===
Download the appropriate Ubuntu image and copy it to the micro SD card.
{{
RootCmd | wget http://odroid.in/ubuntu_14.04lts/ubuntu-14.04.1lts-lubuntu-odroid-xu3-20141105.img.xz
| xz -d -c ubuntu-14.04.1lts-lubuntu-odroid-xu3-20141105.img.xz {{!}} pv {{!}} dd of{{=}}/dev/sdb
}}
Activate boot from micro SD using the corresponding switch
[[File:ODROID-XU3 Lite Boot Switch.jpg|framed|none]]

You can get more information about this procedure [http://www.cnx-software.com/2014/12/14/odroid-xu3-lite-board-ubuntu-review-setup-usability-and-performance/ using this link]

Insert the card into the card reader and switch on the PC

=== Getting more resources ===

Because I will not need the graphical user interface I will get rid of it. You can login using ssh or the UART terminal, ssh is recommended.

user: root
password: odroid.

{{RootCmd
|echo "manual" > /etc/init/cups.override
|echo "manual" > /etc/init/cups-browsed.override
|echo "manual" > /etc/init/lightdm.override
|echo "manual" > /etc/init/bluetooth.override
|/etc/init.d/ntp stop
|ntpdate my.time.server.com
|echo "Europe/Zurich" >  /etc/timezone
|dpkg-reconfigure tzdata
|nano -w /etc/ntp.conf
}}
{{FileBox|filename=/etc/ntp.conf|title=ntp related settings|lang=bash|1=
server my.time.server.com
}}
{{RootCmd|shutdown -r now}}

===  Partitioning the disk ===

Connect the disk and make a partition with ext4 to hold on the Ubuntu File System, 6GB should be enough more will be better ;-).
{{RootCmd|parted /dev/sda}}
{{ContentBox|Example parted commands|<pre>
(parted) mklabel msdos
(parted) mkpart primary 1MiB 20GiB
(parted) quit
</pre>}}
{{RootCmd
|partprobe|mkfs.ext4 /dev/sda1
|mkdir /mnt/repository
|mount /dev/sda1 /mnt/repository
}}

=== Installing gentoo ===

In this part I will go really fast it is just the normal gentoo installation process.

==== Downloading the files ====

We will need some files to do the installation. The stage 3 for arm, the last portage, the kernel binary and the kernel source. Actually we do not need the whole tree of the kernel but I do not know git very well.
I used the kernel 3.10.63 with date 31 de diciembre del 2014. Yes, I was working that day.

{{RootCmd
|cd /mnt/repository
|wget http://mirror.gentoo/releases/arm/autobuilds/current-stage3-armv7a_hardfp/stage3-armv7a_hardfp-YYYYMMDD.tar.bz2
|wget http://mirror.gentoo/snapshots/portage-latest.tar.bz2
|wget http://builder.mdrjr.net/kernel-3.10/00-LATEST/odroidxu3.tar.xz
|git clone --depth 1 https://github.com/hardkernel/linux.git -b odroidxu3-3.10.y linux-odroidxu3-3.10
}}

==== Installing the files ====
{{RootCmd
|mkdir gentoo
|cd gentoo
|tar -xvjpf ../stage3-armv7a_hardfp-YYYYMMDD.tar.bz2
|cd usr
|tar xjvf tar xjvf ../../portage-latest.tar.bz2
|cd /mnt/repository
}}

===== Chroot =====
{{RootCmd
|cd
|mount -t proc none /mnt/repository/gentoo/proc
|mount -o bind /sys /mnt/repository/gentoo/sys
|mount -o bind /dev /mnt/repository/gentoo/dev
|cp -L /etc/resolv.conf /mnt/repository/gentoo/etc/
|chroot /mnt/repository/gentoo /bin/bash
|env-update && source /etc/profile
|export PS1{{=}}"(chroot) $PS1"
}}

===== Preparing make.conf =====

{{RootCmd
|nano -w /etc/portage/make.conf
}}
{{FileBox|filename=/etc/portage/make.conf| related settings|lang=bash|1=
# Please consult /usr/share/portage/config/make.conf.example for a more
# detailed example.
CFLAGS="-O2 -pipe -march=armv7-a -mfpu=vfpv3-d16 -mfloat-abi=hard"
CXXFLAGS="${CFLAGS}"
CHOST="armv7a-hardfloat-linux-gnueabi"

# These are the USE flags that were used in addition to what is provided by the
# profile used for building.
USE="-bindist threads -X"

MAKEOPTS="-j9"

PORTDIR="/usr/portage"   
DISTDIR="${PORTDIR}/distfiles"
PKGDIR="${PORTDIR}/packages"
PORTAGE_TMPDIR=/tmp

GENTOO_MIRRORS="http://mirror1.com/gentoo/ http://mirror2.com/gentoo/"

LINGUAS="en"
}}

===== Installing packages =====

We will emerge some key packages, the rest you can doit later.

{{RootCmd|emerge syslog-ng vixie-cron dhcp ntp}}

===== Configuring NTP =====

This is really important!!!.

This motherbord does not have any real time clock (RTC), so we will need some software to do de job. 

{{RootCmd
|emerge ntp
|echo "Europe/Zurich" >  /etc/timezone
|emerge --config timezone-data
}}

Edit the contents of /etc/ntp.conf and /etc/conf.d/ntp-client with nano if you know what to put in.
{{FileBox|filename=| ntp related settings|lang=bash|1=
server my.time.server.com
}}
{{FileBox|filename=/etc/conf.d/ntp-client| ntp-client related settings|lang=bash|1=
NTPCLIENT_OPTS="-s -b -u my.time.server.com"
}}

In may case, dhclient, set up my ntp.conf. ntp-client is not essential, but for me it helps a lot ;-)

===== The network =====

Nothig new here, but remember, we will set up the mac address in the file "boot.ini"

{{RootCmd
|cd /etc/init.d
|ln -s net.lo net.localnet
}}

Edit the contents of /etc/udev/rules.d/70-persistent-net.rules and /etc/conf.d/net to setup the behavior
of the network interface

{{FileBox|filename=/etc/udev/rules.d/70-persistent-net.rules| udev rule for network interface|lang=bash|1=
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="00:1e:06:61:7a:39", ATTR{dev_id}=="0x0", ATTR{type}=="1", KERNEL=="eth*", NAME="localnet"
}}
{{FileBox|filename=/etc/conf.d/net|lang=bash|1=
config_localnet="dhclient"
dhclient_localnet="-q"
}}

===== Other configuration files =====

We should define the hostname of our workstation
{{RootCmd
|nano -w /etc/conf.d/hostname
}}
{{FileBox|filename=/etc/conf.d/hostname|lang=bash|1=
HOSTNAME="odroid-xu3"
}}

our keymap
{{RootCmd|nano -w /etc/conf.d/keymaps}}
{{FileBox|filename=/etc/conf.d/keymaps|lang=bash|1=
keymap="us-acentos"
}}

I change the syslog-ng configuration to avoid the use of the filesystem. You could not do this, but I did it.
{{RootCmd|nano -w /etc/syslog-ng/syslog-ng.conf}}
{{FileBox|filename=/etc/conf.d/hostname|lang=bash|1=
#log { source(src); destination(messages); };
}}

Because we do not have a RTC, we need to avoid fsck to verify the system time.
With this setting e2fsck will always assume that the system clock can not be trusted.

{{RootCmd|nano -w /etc/e2fsck.conf}}
{{FileBox|filename=/etc/e2fsck.conf|lang=bash|1=
[options]
broken_system_clock = true
}}

===== Activating the services =====

{{RootCmd
|rc-update add syslog-ng default
|rc-update add vixie-cron default
|rc-update add sshd default
|rc-update add net.localnet default
|rc-update add ntp-client default
|rc-update add ntpd default
}}

===== Setting the root password =====

This will be the password for our new enviroment
{{RootCmd | password root }}

We are done here. We will now close the chroot and finish installation.

==== Chroot exit ====
{{RootCmd
|exit
|umount /mnt/repository/gentoo/{dev,sys,proc}
}}
