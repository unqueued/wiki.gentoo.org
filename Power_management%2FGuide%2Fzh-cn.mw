<languages />


{{Metadata|abstract=在最近几年，良好的电源管理成为一个用户寻求完美的笔记本的一个重要条件。同时操作系统也要支持电源管理/节能。在这篇向导中，我们将会介绍如何在 Gentoo Linux 中以一种灵活的，自动化的方式设置好电源管理。}}

在最近几年，良好的电源管理成为一个用户寻求完美的笔记本的一个重要条件。同时操作系统也要支持电源管理/节能。在这篇向导中，我们将会介绍如何在 Gentoo Linux 中以一种灵活的，自动化的方式设置好电源管理。

== 介绍 ==

=== 关于本文档 ===

本文档描述了如何为笔记本型电脑设置电源管理。尽管这当中的一部分设置可被用于其它类型的平台的电源管理，但是这并不是本文的目的。如果你要在非笔记本的系统上执行这些设定，请小心，以免带来不可预期的影响。 

在本文档中，主要是介绍 <code>laptop mode tools</code> 这个工具，它提供了许多相关的功能。不过我们也会介绍一些别的能提供更详细的，更有针对性的设置的工具。在这种情况下，为了避免造成冲突， <code>laptop mode tools</code> 提供的相同的功能必须被禁用。 

=== 关于 laptop_mode ===

laptop_mode 是一种由内核内置的用于管理输入/输出的设置，比如使硬盘在合适的时候进行休眠（并且在队操作之后不会立刻被唤醒）来节能。 

=== 关于 laptop-mode-tools ===

''Laptop Mode Tools'' 由 {{Package|app-laptop/laptop-mode-tools}} 提供，它使用户可以调整电源管理功能，也可以用于管理上文中提到的 Linux 内核中的 laptop_mode 设置，同时还有一些附加的功能用于管理系统中与电源管理有关的设置。

== Linux 内核配置 ==

=== 启用电源管理的最小化内核设置 ===

在 Portage 树中有很多不同的内核源码。 我们建议使用 {{Package|sys-kernel/gentoo-sources}}， 但是当对'''休眠模式'''的支持出现问题时，你可能需要使用 {{Package|sys-kernel/tuxonice-sources}}。 如果要启用 Linux 内核中的电源管理功能，请启用下列设定： 

{{KernelBox|title=启用电源管理的最小化设置|1=<pre>
Power management and ACPI options --->
  [*] Run-time PM core functionality
  [*] ACPI (Advanced Configuration and Power Interface) Support --->
    <*> AC Adapter
    <*> Battery
    -*- Button
    -*- Video
    <*> Fan
    <*> Processor
    <*> Thermal Zone
    [*] Power Management Timer Support
  
  [*] CPU Frequency scaling --->
    [*] CPU Frequency scaling
    <*>   'performance' governor
    <*>   'powersave' governor
    <*>   'userspace' governor
    <*>   'ondemand' governor
    <*>   'conservative' governor
    <*> ACPI Processor P-States driver
</pre>}}

不要忘了为 CPU 启用位于 ''ACPI Processor P-States driver'' 之后的 CPU 频率调整驱动（<code>CPU frequency scaling driver</code>）。 

如果需要更详细的说明，请查看[[Power management/Processor#Kernel|电源管理/处理器#内核]]

如果有必要的话可以[[Kernel/Rebuild|编译并安装]]新内核并重启。

== 使用 Laptop Mode Tools ==

=== 安装 ===

“Laptop Mode Tools”可以通过以下命令被很简单的安装：

{{Emerge|app-laptop/laptop-mode-tools}}。

这个软件包可能需要通过别的附加的，可选的 USE 旗标配置。
以下是这个软件包支持的 USE 旗标和它们的意义： 

{| class="table table-striped table-condensed" style="text-align: left;" 
|- 
! USE 旗标
! 描述
! 适用情况
|- 
| <code>acpi</code>
| 依赖于 {{Package|sys-power/acpid}} 。会自动根据系统的变化调整与节能相关的功能的开关。
| 笔记本不是特别旧(2003年左右及更晚)。
|- 
| <code>apm</code>
| 依赖于 {{Package|sys-apps/apmd}} 会自动根据系统的变化调整与节能相关的功能的开关。
| 非常老的笔记本。
|- 
| <code>bluetooth</code>
| 依赖于 {{Package|net-wireless/bluez}},会启用 laptop-mode-tools 中相关的功能来管理蓝牙设置（根据电池电量来开/关蓝牙功能）
| 笔记本(和内核)支持蓝牙技术。
|- 
| <code>scsi</code>
| 依赖于 {{Package|sys-apps/sdparm}}，会启用 laptop-mode-tools 的与 SCSI (''并不是'' SATA) 磁盘运行参数。
| 笔记本使用 SCSI 磁盘。
|-
|}

注意： <code>acpi</code> 和 <code>apm</code> 这两个 USE 旗标是互相冲突的。 

* <code>apm</code> USE 旗标会启用对 ''Advanced Power Management'' （高级电源管理）的支持,是老式笔记本 (公元 2000 年以前)的标准电源管理功能。
* <code>acpi</code> USE 旗标会启用对 ''Advanced Configuration and Power Interface'' （高级配置和电源管理接口）的支持。 ACPI 是 APM 的'''“继任者”'''。'''所有的'''现代笔记本都支持ACPI。

取决于你的系统，你需要设置 <code>acpi</code> 与 <code>apm</code> 中的一个 USE 旗标。
本指南的剩余部分是以支持 ACPI 的笔记本作为范例的。 

在设置好 USE 旗标后，用以下命令安装 <code>laptop-mode-tools</code> ：

{{Emerge|laptop-mode-tools}}

=== 配置 ===

<code>laptop-mode-tools</code> 在刚刚被安装好时并不会自动启动。 我们可以从 {{Path|/etc/laptop-mode/laptop-mode.conf}} 找到应该要如何配置本软件包（这是 <code>laptop-mode-tools</code> 的主要配置文件，该文件内的注释可以帮助你理解如何设置它）。 

但这并不是 <code>laptop-mode-tools</code> 唯一的配置文件。 <code>laptop-mode-tools</code> 支持有独立配置文件的插件（和/或模块）。这些额外的配置文件会被放在 {{Path|/etc/laptop-mode/conf.d}}。它们是根据插件或模块的名字来命名的(例如 {{Path|intel-sata-powermgmt.conf}}). 

Now, one of the important settings in each configuration file is if the laptop-mode-tools package should govern a particular setting or not. This is important when combining laptop-mode-tools with other power management services such as {{c|cpufreqd}}. In this example case, <code>CONTROL_CPU_FREQUENCY=0</code> must be set: 

{{FileBox|filename=/etc/laptop-mode/conf.d/cpufreq.conf|1=
CONTROL_CPU_FREQUENCY=0
}}

The next few sections will help the user configure laptop-mode-tools to suit specific needs. When finished, start the laptop_mode service and make sure it is started upon system boot. 

{{RootCmd
|rc-service laptop_mode start
|rc-update add laptop_mode default
}}

=== How does laptop-mode-tools work ===

When running the laptop_mode service, the software will check in which state the system is in. The states are defined as: 

*  ''Battery'', which is active when the system is running on battery power; the configuration files use the <code>BATT_</code> prefix for settings related to this state;
*  ''AC'', which is active when the system is running on AC power; the configuration files use the <code>AC_</code> prefix for settings related to this state;
*  ''Laptop Mode'', which is active when ''laptop mode'' is enabled; the configuration files use the <code>LM_</code> prefix for settings related to this state;
*  ''No Laptop Mode'', which is active when ''laptop mode'' is disabled; the configuration files use the <code>NOLM_</code> prefix for settings related to this state.

The <var>AC/BATT_</var> and <var>LM/NOLM_</var> prefixes can be combined to have a <var>AC_LM_</var> prefix. 

When the laptop_mode service is started, it will switch modes based on events that occur (and of course based on the configuration settings). For instance, the setting <code>ENABLE_LAPTOP_MODE_ON_BATTERY=1</code> will make sure that the laptop mode tools switch to ''laptop mode'' when battery power is used. If that is the case, then the settings starting with <code>LM_</code>, <code>LM_BATT_</code>, <code>BATT_LM_</code>, and <code>BATT_</code> will be used. 

To make sure settings to not collide, it is not allowed to have overlapping settings. In the next example, the first set (for <code>CPU_MAXFREQ</code>) is valid, but the second one (for <code>CPU_GOVERNOR</code>) is not. 

{{CodeBox|title=Colliding settings|1=
## Valid set
BATT_CPU_MAXFREQ=fastest
LM_AC_CPU_MAXFREQ=fastest
NOLM_AC_CPU_MAXFREQ=fastest
  
## Invalid set
BATT_CPU_MINFREQ=fastest
LM_AC_CPU_MINFREQ=fastest
# The following includes AC and BATT, but BATT is already defined
NOLM_CPU_MINFREQ=fastest
}}

=== Configuring CPU frequency management ===

The support for CPU frequency management in the laptop mode tools allows switching frequencies. It supports setting the CPU frequency governor, minimum frequency and maximum frequency. The configuration file used here is {{Path|/etc/laptop-mode/conf.d/cpufreq.conf}}

The ''CPU frequency governor'' is a kernel-level policy that defines how the kernel will select the CPU frequency. We already selected the governors we want to use in the kernel configuration earlier. Let's recap: 

*  <code>performance</code> always picks the highest frequency;
*  <code>powersave</code> always picks the lowest frequency;
*  <code>userspace</code> does not pick anything, but lets the user decide (or any process that the user is running that will decide for the user);
*  <code>ondemand</code> will scale the CPU frequency up to the highest frequency when load is available;
*  <code>conservative</code> will scale the CPU frequency up gradually when load is available.

When switching between AC or battery, or (no) laptop mode, the appropriate governor (as well as its minimum and maximum frequency) is selected. 

=== Configuring display brightness ===

With {{Path|/etc/laptop-mode/conf.d/lcd-brightness.conf}}, the laptop mode tools can govern the brightness of the LCD screen. 

The file currently uses the {{Path|/proc/acpi/video/VID/LCD/brightness}} file ([https://bugs.gentoo.org/show_bug.cgi?id=499544 bug 499544]) to set brightness values. Recent kernels do not provide this anymore; it will need to adjust this to {{Path|/sys/class/backlight/acpi_video0/brightness}} instead. 

The possible values that can be used are between 0 and the value in {{Path|/sys/class/backlight/acpi_video0/max_brightness}}, with 0 being the lowest brightness value.

=== Configuring other services ===

An interesting feature of laptop-mode-tools is to support reloading particular services (like the system logger) after switching its configuration file. This is handled through {{Path|/etc/laptop-mode/conf.d/configuration-file-control.conf}} 

If enabled, the laptop_mode application will switch the configuration file(s) of the mentioned services with the same file, but suffixed with {{Path|-nolm-ac}} , {{Path|-lm-ac}} or {{Path|-batt}}. It will then signal or reload the appropriate services so they can use the new configuration file. 

== Using cpufreqd ==

{{Warning|Package {{Package|sys-power/cpufreqd}} is deprecated and has been removed from the Portage tree. {{Package|sys-power/ncpufreqd}} can still be used for [https://bitbucket.org/nelchael/ncpufreqd 2.6.x kernels].
}}

=== Installation ===

The {{c|cpufreqd}} application allows the user to manage CPU frequencies in a more granular approach than what laptop-mode-tools supports. But before we dive into the installation of {{c|cpufreqd}}, let us first look at the USE flags it supports. 

{| class="table table-striped table-condensed" style="text-align: left;" 
|- 
! USE flag
! Description
! Suggested when...
|- 
| <code>acpi</code>
| Enable support for ACPI, allowing {{c|cpufreqd}} to be notified about specific events as well as govern power through the ACPI interface
| the laptop is not very old (around year 2003 and later)
|- 
| <code>apm</code>
| Enable support for APM, allowing {{c|cpufreqd}} to be notified about specific events as well as govern power through the APM interface
| the laptop is very old
|- 
| <code>lm_sensors</code>
| Enable support for the Linux hardware sensors (through {{Package|sys-apps/lm_sensors}}), allowing to switch profiles based on hardware sensor results
| using advanced events through lm_sensors
|- 
| <code>nforce2</code>
| Enable support for NForce, allowing {{c|cpufreqd}} to change the NForce FSB clock and video card frequency
| an NVidia graphics card based on the NForce chipset is present
|- 
| <code>nvidia</code>
| Enable support for NVidia graphical card configuration (through the NVidia ''nvclock'' interface), allowing {{c|cpufreqd}} to change the video card frequency of NVidia graphical cards
| an NVidia graphics card is present
|- 
| <code>pmu</code>
| Enable the Power Management Unit plug-in of {{c|cpufreqd}}. This allows the software to poll the Linux kernel Power Supply interface, getting more detailed information on battery charge
| the laptop does not support ACPI or APM
|-
|}

The <code>acpi</code>, <code>apm</code>, and <code>pmu</code> USE overlap, so only one should be active. If the laptop is sufficiently recent, <code>acpi</code> is the best bet. If not, <code>apm</code> offers all that is needed. When even APM isn't supported, try using <code>pmu</code>. 

With the USE flags configured, it is time to install {{c|cpufreqd}}. 

{{Emerge|cpufreqd}}

=== Configuration ===

The {{c|cpufreqd}} application monitors the status of the system through several plugins. Based on the feedback it receives from those plugins, it will adjust the policy used to govern the CPU frequency. 

{{c|cpufreqd}} can be configured by editing {{Path|/etc/cpufreqd.conf}}. It contains three different sections: 

# The <code>[General]...[/General]</code> section contains general configuration information.
# The <code>[Profile]...[/Profile]</code> section defines the policies that the cpufreqd daemon can switch to. The section is very similar to the information used when manually setting the CPU frequency policy using cpufreq-set.
# The <code>[Rule]...[/Rule]</code> section is the work-horse of the cpufreqd daemon, defining when the daemon decides to switch to a different profile.

Take a quick look at an example rule. 

{{FileBox|filename=/etc/cpufreqd.conf|title=Sample cpufreqd rule|1=
[...]
  
[Profile]
name=On Demand High
minfreq=40%
maxfreq=100%
policy=ondemand
[/Profile]
  
[Rule]
name=AC Off - High Power
ac=off
battery_interval=70-100
profile=On Demand High
[/Rule]
  
[...]
}}

In the above example, {{c|cpufreqd}} will switch the system to the ''On Demand High'' profile (also shown in the above excerpt). This profile by itself uses the ondemand governor with a minimum frequency of 40% (iow, a CPU of 2 GHz will have by this policy a minimum frequency of 800 MHz). 

The {{c|cpufreqd}} application can offer a more granular approach on CPU frequency scaling. But not only that, but the CPU frequency scaling can be tweaked based on various other metrics available. The default configuration offers a sample rule: when a movie is watched, maximum performance is desired (unless the CPU temperature is getting too high). 

When {{c|cpufreqd}} has been configured, it is time to start it (and make sure the service is loaded automatically). Make sure that CPU frequency handling by other tools (like laptop-mode-tools) is disabled! 

{{RootCmd
|rc-update add cpufreqd default
|/etc/init.d/cpufreqd start
}}

== See also ==

* [[USB Power Saving]]

== External resources ==

*  [http://samwel.tk/laptop_mode/ Laptop Mode Tools Homepage], includes [http://samwel.tk/laptop_mode/laptop_mode About laptop mode].
*  [https://01.org/powertop PowerTOP], an interactive application helping users to find out which processes are forcing wakeups on the CPU most often.
* A ThinkWiki article on [http://www.thinkwiki.org/wiki/How_to_reduce_power_consumption How to reduce power consumption] (on Linux). This article offers an exhaustive list of measures one can take. However, it should be noted that the laptop mode tools implements the majority of these (if properly configured).

[[Category:Power management]]
