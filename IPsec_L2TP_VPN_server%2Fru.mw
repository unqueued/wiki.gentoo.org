<languages />

Многие операционные системы поддерживают L2TP/IPsec VPN "из коробки". Объединяя службы конфиденциальности и аутентификации IPsec (безопасность Интернет-протокола), сетевое туннелирование протокола туннелирования второго уровня (L2TP) и идентификацию пользователя через pppd, администраторы могут создавать VPN-сети на множестве разнородных систем. Это позволяет настроить VPN на Android, Windows, Linux, MacOS и других операционных системах без использования какого-либо коммерческого ПО.

== Введение ==

IPsec/L2TP – повсеместно используемый VPN протокол, применяемый в Windows и других операционных системах. Все версии Windows, начиная с Windows 2000, имеют встроенную поддержку этого протокола и не требуют сторонних клиентов (например, OpenVPN), что делает его более удобным. Однако, значительно сложнее настроить серверную сторону на Linux, поскольку задействованы как минимум 3 слоя: IPsec, L2TP и PPP.

# IPsec обеспечивает конфиденциальность сетевого соединения и авторизации клиента (системы)
# С L2TP туннель настроен так, что VPN трафик прозрачно проходит через IPsec
# PPP (протокол точка-точка) контролирует авторизацию пользователей

Это руководство не охватывает установку DHCP, RADIUS, Samba или Инфраструктуры Открытых Ключей (PKI). Оно также совсем не объясняет, как настраивать Linux-клиентов, хотя этот шаг может быть довольно легко получен из руководства. Будет освещена часть конфигурации Windows-клиентов с целью устранения неполадок в настройке сервера.

=== Условные обозначения ===

В этом руководстве будут использованы следующие условные обозначения (пример настроек):

* Домен – example.com 
* Имя сервера – vpn.example.com 
* Имя файла сертификата ЦС – {{Path|ca.crt}} 
* Сертификат сервера – {{Path|vpn.example.com.crt}} 
* Ключ сервера – {{Path|vpn.example.com.key}} 
* Сертификат клиента – {{Path|client.example.com.crt}} 
* Ключ клиента – {{Path|client.example.com.key}}

== IPsec ==

Первый и самый сложный уровень для настройки – IPsec. Заметим, что IPsec – одноранговая сеть, таким образом, в её терминологии ''клиент'' называется '''инициатор''', а ''сервер'' – '''ответчик'''.

Windows использует IKEv1. Существуют 3 реализации IPsec в Portage: ipsec-tools (racoon), LibreSwan и strongswan.

В следующих разделах объясняются различные конфигурации. Для каждого варианта документируется
* как использовать PSK для авторизации и
* как использовать сертификаты для авторизации

Выберете один из вариантов (PSK или сертификаты). При использовании авторизации на основе сертификата предполагается, что нужные сертификаты уже доступны.

=== Вариант 1: ipsec-tools (racoon) ===

{{Note|{{Package|net-firewall/ipsec-tools}} должен быть скомпилирован с флагом <code>nat</code>, если либо сервер находится за NAT, либо необходима поддержка клиентов, находящихся за NAT.}}

ipsec-tools наименее функционален, но для тех, кто пришёл из *BSD, он может быть более близок. Однако, в отличие от *BSD, Linux не использует отдельный интерфейс для IPsec.

После установки ipsec-tools необходимо создать несколько файлов. Для начала создадим каталоги, в которых они будут хранится:

{{RootCmd
|mkdir /etc/racoon/certs
|mkdir /etc/racoon/scripts
}}

==== Настройка PSK в ipsec-tools ====

Сначала создадим PSK файл. Он будет содержать уникальный ключ, который будет использоваться для авторизации между компьютерами.

{{Cmd|dd if{{=}}/dev/random count{{=}}24 bs{{=}}1 2>/dev/null {{!}} hexdump -e '24/1 "%02x" "\n"'}}

Каждая запись в PSK файле состоит из идентификатора и ключа. Windows идентифицирует себя посредством полного имени домена (FQDN). Ключ должен быть обозначен как строка или шестнадцатеричное число, начинающееся с 0x. В любом случае, содержимое (сам ключ) – полностью в выборе администратора:

{{FileBox|filename=/etc/racoon/psk.txt|1=
client.example.com 0x87839cfdab5f74bc211de156d2902d128bec3243
}}

В файле {{Path|racoon.conf}} PSK файл обозначается через опцию <code>path pre_shared_key</code>:

{{FileBox|filename=/etc/racoon/racoon.conf|title=Использование racoon с PSK|1=
path certificate "/etc/racoon/certs";
path pre_shared_key "/etc/racoon/psk.txt";
path script "/etc/racoon/scripts";
 
remote anonymous {
 
        exchange_mode main;
        my_identifier fqdn "vpn.example.com";
 
        passive on;
        generate_policy on;
        nat_traversal on;
 
        proposal {
                encryption_algorithm 3des;
                hash_algorithm sha1;
                authentication_method pre_shared_key;
                dh_group 14;
        }
}
 
sainfo anonymous {
        encryption_algorithm aes, 3des;
        authentication_algorithm hmac_sha1, hmac_md5;
        compression_algorithm deflate;
}
}}

==== Настройка ipsec-tools с использованием сертификата ====

Скопируйте {{Path|ca.crt}}, {{Path|vpn.example.com.crt}} и {{Path|vpn.example.com.key}} в {{Path|/etc/racoon/certs}}. Убедитесь, что {{Path|vpn.example.com.key}} недоступен для всех пользователей.

Далее, обновите конфигурацию в файле {{Path|racoon.conf}}, добавив эти файлы в разделе <code>remote anonymous</code>:

{{FileBox|filename=/etc/racoon/racoon.conf|title=Использование сертификатов с racoon|1=
path certificate "/etc/racoon/certs";
path pre_shared_key "/etc/racoon/psk.txt";
path script "/etc/racoon/scripts";
 
remote anonymous {
        exchange_mode main;
        my_identifier fqdn "vpn.example.com";
 
        certificate_type x509 "vpn.example.com.crt" "vpn.example.com.key";
        ca_type x509 "ca.crt";
 
        passive on;
        generate_policy on;
        nat_traversal on;
 
        proposal {
                encryption_algorithm 3des;
                hash_algorithm sha1;
                authentication_method rsasig;
                dh_group 14;
        }
}
 
sainfo anonymous {
        encryption_algorithm aes, 3des;
        authentication_algorithm hmac_sha1, hmac_md5;
        compression_algorithm deflate;
}
}}

==== Устранение неполадок с ipsec-tools ====

Когда возникают проблемы, этот раздел может дать несколько указаний в их решении.

===== Создание политик безопасности и NAT =====

Опция <code>generate_policy on;</code> должна заставить racoon создавать для нас нужную Политику Безопасности. Однако, в присутствие NAT (хотя бы, если сервер находится за NAT) он сделает это совсем не так, как хотелось бы. Таким образом, если трафик не проходит по туннелю, политика безопасности должна быть определена вручную.

Политика создаётся в файле {{Path|/etc/ipsec-tools.conf}}:

{{FileBox|filename=/etc/ipsec-tools.conf|1=
#!/usr/sbin/setkey -f
 
flush;
spdflush;
spdadd vpn.example.com[l2tp] 0.0.0.0/0 udp -P out ipsec
        esp/transport//require;
spdadd 0.0.0.0/0 vpn.example.com[l2tp] udp -P in ipsec
        esp/transport//require;
}}

Заметим, что хотя эта политика безопасности полагает, что мы хотим защитить "весь" L2TP трафик, проходящий к серверу и от него, если нет Ассоциации Безопасности, трафик не будет защищён и будет проходить через Интернет по обычному (неавторизованному/незашифрованному) пути, он не будет пропущен только потому, что нет Ассоциации Безопасности.

=== Вариант 2: LibreSwan ===

LibreSwan – ответвление от Openswan (который сам является ответвлением от FreeS/WAN). LibreSwan действительно раздвоился с сохранением настоящих разработчиков Openswan, однако после того, как они покинули Xelerance, спор о названии "Openswan" перерос в судебный иск, после которого было принято имя LibreSwan.

Желательно иметь каждую настройку VPN в своём собственном файле, что может быть сделано раскомментированием последней строки в {{Path|/etc/ipsec.conf}}:

{{FileBox|filename=/etc/ipsec.conf|1=
# Файлы конфигурации (.conf) также могут быть помещены в папку "/etc/ipsec.d/"
# раскомментированием этой строки
#include /etc/ipsec.d/*.conf
}}

Обход NAT установлен по умолчанию в файле конфигурации LibreSwan, таким образом никаких особых этапов настройки не требуется.

==== Настройка PSK в LibreSwan ====

Должен быть создан общий ключ. Он может быть задан строкой в кавычках или шестнадцатеричным числом. В следующем примере <code>PUT_VPN_SERVER_IP</code> должен быть заменён на IP-адрес сервера. Можно использовать доменное имя, но оно не рекомендовано разработчиками LibreSwan. Опция <code>%any</code> позволяет любым клиентам использовать этот PSK. 

{{FileBox|filename=/etc/ipsec.d/vpn.example.com.secret|1=
PUT_VPN_SERVER_IP %any : PSK 0x87839cfdab5f74bc211de156d2902d128bec3243
# Или используйте простой текстовый ключ вместо шестнадцатеричного:
# PUT_VPN_SERVER_IP %any : PSK "password_pass"
}}

Затем создайте {{Path|/etc/ipsec.d/vpn.example.com.conf}}:

{{FileBox|filename=/etc/ipsec.d/vpn.example.com.conf|1=
conn vpnserver
        type=transport
        authby=secret
        pfs=no
        rekey=no
        keyingtries=1
        left=%defaultroute
        leftprotoport=udp/l2tp
        leftid=@vpn.example.com
        right=%any
        rightprotoport=udp/%any
        auto=add
}}

==== Настройка LibreSwan с использованием сертификата ====

LibreSwan требует, чтобы Network Security Services (NSS) были правильно сконфигурированы и использованы для управления сертификатами. Чтобы было проще выполнить настройку, необходимо создать пакет PKCS#12, содержащий секретный ключ сервера, его сертификат и сертификат ЦС.

{{Cmd|openssl pkcs12 -export -certfile ca.crt -inkey vpn.example.com.key -in vpn.example.com.crt -out /etc/ipsec.d/vpn.example.com.p12}}

Затем пакет может быть импортирован в базу данных NSS:

{{RootCmd
|cd /etc/ipsec.d
|pk12util -i ''путь к пакету''/vpn.example.com.p12 -d .}}

Конфигурационные файлы LibreSwan будут ссылаться на псевдоним импортированных объектов. Используйте {{c|certutil -L -d .}} и {{c|certutil -K -d .}}, чтобы его узнать.

{{FileBox|filename=/etc/ipsec.d/vpn.example.com.secrets|1=
 : RSA "vpn.example.com"
}}

В приведённом примере <code>vpn.example.com</code> использован как псевдоним, полученный с помощью команды {{c|certutil -K -d .}}.

{{FileBox|filename=/etc/ipsec.d/vpn.example.com.conf|1=
conn vpnserver
        type=transport
        authby=rsasig
        pfs=no
        rekey=no
        keyingtries=1
        left=%defaultroute
        leftprotoport=udp/l2tp
        leftcert=vpn.example.com
        leftid=@vpn.example.com
        right=%any
        rightprotoport=udp/%any
        rightrsasigkey=%cert
        auto=add
}}

Здесь <code>vpn.example.com</code> – псевдоним, полученный с помощью команды {{c|certutil -L -d .}}.

=== Вариант 3: strongSwan ===

strongSwan – это ответвление от FreeS/WAN (хотя большая часть кода была заменена).

Что касается strongSwan 5.0, обход NAT является автоматическим, ничего настраивать не требуется.

strongSwan не создаёт файл {{Path|ipsec.secrets}}, поэтому его нужно создать:

{{RootCmd|touch /etc/ipsec.secrets && chmod 664 /etc/ipsec.secrets}}

==== Настройка PSK в strongSwan ====

Должен быть создан общий ключ. Он может быть задан строкой в кавычках или шестнадцатеричным числом. В следующем примере <code>PUT_VPN_SERVER_IP</code> должен быть заменён на IP-адрес сервера. Опция <code>%any</code> означает, что любой клиент может авторизоваться, используя этот PSK.

{{FileBox|filename=/etc/ipsec.secrets|1=
PUT_VPN_SERVER_IP %any : PSK 0x87839cfdab5f74bc211de156d2902d128bec3243
# Или используйте простой текстовый PSK вместо шестнадцатеричного:
# PUT_VPN_SERVER_IP %any : PSK "password_pass"
}}

Далее отредактируйте {{Path|/etc/ipsec.conf}} как показано ниже:

{{FileBox|filename=/etc/ipsec.conf|1=
conn vpnserver
        type=transport
        authby=secret
        pfs=no
        rekey=no
        keyingtries=1
        left=%any
        leftprotoport=udp/l2tp
        leftid=@vpn.example.com
        right=%any
        rightprotoport=udp/%any
        auto=add
}}

Когда и <var>left</var>, и <var>right</var> заданы как <code>%any</code>, strongSwan подразумевает, что '''л'''окальный компьютер – '''l'''eft.

==== Настройка strongSwan с использованием сертификата ====

Сертификаты и ключи должны быть скопированы в нужную папку:

{{RootCmd
|cp ca.crt /etc/ipsec.d/cacerts
|cp vpn.example.com.crt /etc/ipsec.d/certs
|cp vpn.example.com.key /etc/ipsec.d/private
|chown -R ipsec: /etc/ipsec.d}}

Далее, укажите strongSwan использовать открытые ключи для авторизации:

{{FileBox|filename=/etc/ipsec.secrets|1=
 : RSA vpn.example.com.key
}}

Наконец, обновите файл {{Path|/etc/ipsec.conf}} как показано ниже:

{{FileBox|filename=/etc/ipsec.conf|1=
conn vpnserver
        type=transport
        authby=rsasig
        pfs=no
        rekey=no
        keyingtries=1
        left=%defaultroute
        leftprotoport=udp/l2tp
        leftcert=server.crt
        leftid=@vpn.example.com
        right=%any
        rightprotoport=udp/%any
        rightrsasigkey=%cert
        auto=add
}}

Как и раньше, когда и <var>left</var>, и <var>right</var> равны <code>%any</code>, strongSwan подразумевает, что '''л'''окальный компьютер – '''l'''eft.

==== Устранение неполадок со strongSwan ====

===== Сквозной проход IPsec / повреждённый NAT =====

В предыдущих версиях strongSwan сквозной проход IPsec не казался рабочим. Он возвращал "cannot respond to IPsec SA request because no connection is known" или (со сложным редактирование конфигурационного файла) ошибку INVALID_HASH_INFORMATION. Такого не может быть со strongSwan версии 5.0 и выше.

=== Устранение неполадок со стандартным IPsec ===

С IPsec нелегко иметь дело. Этот раздел даёт несколько указаний на общие проблемы и ошибки.

==== Сервер за NAT ====

Когда сервер находится за NAT (преобразование сетевых адресов), что обычно бывает в случае, если сервер размещается за домашним роутером, некоторые специальные указания могут помочь обеспечить стабильное и рабочее соединение IPsec.

===== Открытие портов =====

Необходимо открыть 2 порта:
* UDP port 500 (for ISAKMP)
* UDP port 4500 (for NAT Traversal)

Убедитесь, что отправили это VPN серверу.

Также следующие Протоколы Интернета (не порты) нуждаются в разрешении:
* 50 (ESP)
* 51 (AH)

Может потребоваться настроить их на стороне роутера, если у него есть особые параметры для протоколов (впрочем, у большинства их нет).

===== Сквозной проход IPsec / повреждённый NAT =====

Многие роутеры имеют опцию "IPsec pass-through", которая может обозначать одно из двух:

# Искажать пакеты IPsec способом, не совместимым с обходом NAT IPsec
# Позволять всем IPsec пакетам без изменений проходить через роутер.

Если IPsec pass-through значит (1), отключите эту опцию. Если он значит (2), то включите её.

К несчастью, существуют роутеры, отбрасывающие IPsec трафик, даже если порты разрешены, и поддерживающие только опцию (1). Для тех, у кого такой роутер, есть 3 варианта:

# Обновить прошивку, если доступна более новая, правильно работающая версия.
# Открыть отчёт об ошибке/неисправности с моделью роутера, если он не устарел
# Найти другой роутер. По описаниям, роутеры Linksys и D-link работают правильно.

Это руководство изначально было написано с таким роутером (Zyxel P-330W), и единственным доступным вариантом был (3).

===== Клиенты Windows Vista/Server 2008 =====

Эти операционные системы автоматически не поддерживают IPsec/L2TP сервера за NAT. См. [http://support.microsoft.com/kb/926179/en-us KB926179] для изменений в реестре, заставляющих их поддерживать его. 

==== Ограничения Pre-Shared keys (PSK) ====

В протоколе IPsec нет поддержки согласования PSK. Единственная информация, доступная для выбора, какой ключ использовать, зависит от начального и конечного IP-адреса. Так как в обычной ситуации ответчик не будет заранее знать IP-адрес инициатора, ''каждый'' должен использовать тот же PSK. Поэтому, сертификаты (PKI) рекомендуются больше, чем PSK, даже только для единственного соединения. Однако, производство сертификатов и создание PKI – довольно сложный процесс и выходит за рамки этого руководства.

== L2TP ==

Второй уровень, протокол туннелирования второго уровня (L2TP), настраивается намного проще. Как и IPsec, L2TP – одноранговый протокол. Клиентская сторона называется ''L2TP Access Concentrator'' или LAC, а серверная – ''L2TP Network Server'' или LNS.

{{Warning|L2TP абсолютно небезопасен и '''не''' должен быть доступен вне соединения IPsec}}

При использовании iptables, примените следующие правила, чтобы заблокировать все соединения L2TP вне ipsec:

{{RootCmd
|iptables -t filter -A INPUT -p udp -m policy --dir in --pol ipsec -m udp --dport l2tp -j ACCEPT
|iptables -t filter -A INPUT -p udp -m udp --dport l2tp -j REJECT --reject-with icmp-port-unreachable 
|iptables -t filter -A OUTPUT -p udp -m policy --dir out --pol ipsec -m udp --sport l2tp -j ACCEPT
|iptables -t filter -A OUTPUT -p udp -m udp --sport l2tp -j REJECT --reject-with icmp-port-unreachable
}}

Если брандмауэром является {{c|ufw}}, тогда заставьте его принимать входящие и исходящие соединения, использующие протокол ESP, чтобы разрешить авторизацию IPsec, и заблокируйте все соединения L2TP вне IPsec. Это может быть сделано с помощью следующего файла:

{{FileBox|filename=/etc/ufw/before.rules|1=
# Разрешить L2TP только через IPsec
-A ufw-before-input -m policy --dir in --pol ipsec -p udp --dport l2tp -j ACCEPT
-A ufw-before-input -p udp -m udp --dport l2tp -j REJECT --reject-with icmp-port-unreachable
-A ufw-before-output -m policy --dir out --pol ipsec -p udp --sport l2tp -j ACCEPT
-A ufw-before-output -p udp -m udp --sport l2tp -j REJECT --reject-with icmp-port-unreachable
 
# Разрешить авторизацию IPsec с использованием протокола ESP
-A ufw-before-input -p esp -j ACCEPT
-A ufw-before-output -p esp -j ACCEPT
}}

=== Использование xl2tpd ===

В отличие от других серверов L2TP, {{c|xl2tpd}} может поддерживать пул IP-адресов без серверов DHCP или RADIUS. Это является нарушением расслоения, но для небольшой установки очень удобно:

{{FileBox|filename=/etc/xl2tpd/xl2tpd.conf|1=
[global]
port = 1701
access control = no
 
[lns default]
ip range = 172.21.118.2-172.21.118.254
local ip = 172.21.118.1
require authentication = yes
name = LinuxVPN
pppoptfile = /etc/ppp/options.xl2tpd
}}

Для использования сервера RADIUS или DHCP, оставьте отключенными опции <code>ip range</code> и <code>local ip</code>. Если соединение нестабильно, попробуйте добавить <code>length bit = yes</code> в раздел <code>lns default</code>. Чтобы не использовать PPP аутентификацию, замените <code>require authentication = yes</code> на <code>refuse authentication = yes</code>.

Создайте файл опций:

{{FileBox|filename=/etc/ppp/options.xl2tpd|1=
noccp
auth
crtscts
mtu 1410
mru 1410
nodefaultroute
lock
proxyarp
silent
}}

=== Использование rp-l2tp ===

Настраивать rp-l2tp просто:

{{FileBox|filename=/etc/rp-l2tp/rp-l2tpd.conf|1=
# Глобальный раздел (по умолчанию, мы начнём в глобальном режиме)
global
 
# Загрузка модулей
load-handler "sync-pppd.so"
load-handler "cmd.so"
 
# Адрес привязки
listen-port 1701
 
section peer
peer 0.0.0.0
mask 0
lns-handler sync-pppd
 
lns-pppd-opts "noccp auth crtscts mtu 1410 mru 1410 nodefaultroute lock proxyarp silent"
}}

Укажите IP сервера в <var>lns-pppd-opts</var>. Также не забудьте настроить pppd для использования пула IP-адресов или при помощи DHCP, или через RADIUS.

== PPP ==

Заключительный уровень для настройки – Протокол точка-точка (PPP). Пакет для установки – {{Package|net-dialup/pptpd}}.

{{Emerge|net-dialup/pptpd}}

=== Авторизация ===

PPP используется для выполнения авторизации. В отличие от аутентификации на основе сертификата или PSK, PPP более предназначен для аутентификации (и авторизации) доступа к VPN конечного пользователя.

==== Без авторизации ====

Самый простой путь настройки pppd – вообще не использовать авторизацию. В этом случае, убедитесь что указан "noauth". Это может оказаться полезным с целью тестирования, но в противном случае не рекомендуется, особенно с использованием PSK. Для некоторых установок PKI, такая конфигурация может быть благоразумной, например,
* все клиентские компьютеры полностью доверены и находятся под контролем, или
* все пользователи доверены и ключи есть только на компьютерах рядом с самими пользователями, имеющими доступ, и нигде более, или
* все соединения являются автоматическими (этот метод используется для подключения нескольких мест)

==== Авторизация через chap.secrets ====

Для небольших пользователей (обычно тех, кто хочет подключаться к своей домашней сети в другом месте), авторизация может быть произведена через файл {{Path|chap.secrets}}:

{{FileBox|filename=/etc/ppp/chap-secrets|1=
# Пароли для авторизации с использованием CHAP
# клиент        сервер  пароль                  IP-адрес
avatar          *       unontanium              *
}}

{{Note|При авторизации с доменами, имя клиента должно быть правильно изменено, в этом примере, <code>EXAMPLE\\avatar</code>.}}

{{Warning|{{Path|/etc/ppp/chap-secrets}} содержит незашифрованные пароли, поэтому убедитесь, что только root может выполнять чтение или запись в этот файл}}

==== Авторизация через Samba ====

Если компьютер является частью домена Microsoft или леса Active Directory, а клиенты используют winbind, то авторизацию может выполнять Samba. Добавьте <code>plugin winbind.so</code> к опциям ppp. Настройка Samba и pppd находится за пределами этого руководства.

==== Авторизация через RADIUS ====

Если на компьютере запущен сервер RADIUS, то pppd может использовать его. Убедитесь, что {{Package|net-dialup/ppp}} собран с USE флагом <code>radius</code>. Затем добавьте <code>plugin radius.so</code> к опциям PPP. Настройка RADIUS и pppd находится за пределами этого руководства. 

==== Авторизация через EAP-TLS ====

Если у пользователя есть сертификаты (не такие, как сертификаты компьютера, о которых говорилось раньше), тогда настройте pppd для авторизации через EAP-TLS. Рекомендуется, чтобы пользователи авторизовались с помощью смарт-карт или RSA secureID. Убедитесь, что {{package|net-dialup/ppp}} собран с USE-флагом <code>eap-tls</code>. Требуется, чтобы был настроен RADIUS (см. выше). Может потребоваться включить <code>require-eap</code> в файл опций PPP. Настройка pppd выходит за пределы этого руководства.

== Устранение неполадок клиента ==

=== Windows: Correctly installing the certificate (for PKI users) ===

The certificate should be packaged in a PKCS12 package. This can be done through openssl or gnutls:

{{Cmd|openssl pkcs12 -export -certfile ca.crt -inkey client.example.com.key -in client.example.com.crt -out client.example.p12}}

{{Cmd|certtool --load-ca-certificate ca.crt --load-certificate client.example.com.crt --load-privkey client.example.com.key --to-p12 --outfile client.example.com.p12}}

Once a {{Path|.p12}} file is created, import it into Windows. However, the method is not obvious. ''Do not'' double-click the key and follow the instructions, that won't work. That imports the key into a personal certificate store, but in Windows, it is the local computer that needs to do the authentication, so the certificate needs to be added to the local computer's key store. To do that, use the Microsoft Management Console (mmc). Administrator privileges are needed for this to work.

{{CodeBox|title=Importing the key into Windows|1=
Start -> Run -> mmc File -> Add/Remove Snap-in -> Certificates -> Add Computer Account -> Local Computer -> Finish -> OK.
}}

Expand the Certificates. Choose any folder (doesn't matter which), right-click, choose "All Tasks", then "Import". Only now follow the wizard, but on the last step, make sure to choose "Automatically select the certificate store based on the type of certificate".

=== Windows: RAS networking errors ===

==== Error 766: A certificate could not be found ====

If this error occurs, then this means the certificate was not imported correctly. Make sure to import it though MMC, and not by double-clicking the file.
 
==== Error 810: VPN connection not complete ====

When using ipsec-tools (racoon) the following message might occur in the system log:

{{CodeBox|title=Error message in system log when using ipsec-tools/racoon|1=
ERROR: ignore information because ISAKMP-SAhas not been established yet.
}}

This means the certificate was not imported correctly, or the p12 bundle is missing in the CA certificate. Make sure to import the key through MMC, and make sure to select "Automatically select the certificate store based on the type of certificate" at the end of the import process.

==== XP SP2 and above: Error 809: Server not responding (Server behind NAT) ====

Windows XP SP2 and Vista [http://support.microsoft.com/kb/885348|will not, by default, connect to server behind a NAT]. A registry hack is required. Separate fixes are required for Windows XP and Windows Vista.

==== Vista: Error 835 Could not authenticate ====

This one occurs only when using PKI. It means the <var>subjectAltName</var> does not match the server that the client is connecting to. This often occurs when using dynamic DNS - the certificate has the internal name rather than the external name. Either add the external name to the certificate, or disable "Verify the Name and Usage attributes of the server's certificate" in the connection definition, under Security -> Networking -> IPsec.

==== Error 741: The local computer does not support required encryption type ====

Windows will try to negotiate MPPE, a (weak) encryption. When 
* the system is not using PPP authentication, or
* the system does not have a pppd with MPPE support, or 
* MPPE is supported but not compiled into the kernel (or a module)
then this error occurs.

If PPP authentication is used, it is recommended to fix the pppd or kernel (which are minimal configuration changes) even though there's no point to have double encryption. If the system does not use PPP authentication, or the double encryption is definitely not wanted, then disable it by unchecking "Require data encryption" on the Security tab.

{{Note|The connection is still protected by IPsec encryption either way, this just disable the requirement for MPPE.}}

=== Mac OS X ===

Mac OS X clients appear to be picky on the proposals they will negotiate with. In particular:
* <var>dh_group</var> must be <code>modp1024</code>. 
* <var>my_identifier</var> must be an address, not a fully qualified domain name (address is the default, so just leave that line out from {{Path|racoon.conf}}).

Mac OS X won't connect if <var>subjectAltName</var> does not match the server the client is connecting to. Unlike Vista this check cannot be disabled.

Also, Mac OS X won't connect if the server certificate contains any "Extended Key Usage" (EKU) fields (except for the deprecated ikeIntermediate one). In particular, when using certificates from the OpenVPN {{c|easy-rsa}} utility, it adds the "TLS WWW Server" or "TLS WWW Client" EKU, so such certificates will not work. However, such certificates can still be used on the Mac OS X client, as it doesn't care what is on the client certificate - only the server.

== Ссылки ==

* [http://www.jacco2.dds.nl/networking/freeswan-l2tp.html|Using a Linux L2TP/IPsec VPN server] from Jacco de Leeuw

[[Category:Server and Security]]
