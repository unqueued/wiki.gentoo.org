<languages />

Dieser Artikel beschreibt die manuelle Konfiguration und Einrichtung des [[Special:MyLanguage/Kernel|Linux Kernels]]. Für eine automatische Methode siehe den [[Special:MyLanguage/genkernel|genkernel]] Artikel.

== Symlink setzen ==

Der Symlink <tt>/usr/src/linux</tt> sollte immer auf die Kernelquellen zeigen, die derzeit verwendet werden. Dies kann mit einem der folgenden drei Methoden erfolgen:

; 1. Die Kernelquellen mit aktivem ''symlink'' [[Special:MyLanguage/USE flag|USE Flag]] installieren
: Damit zeigt <tt>/usr/src/linux</tt> auf die neu installierten Kernelquellen. Falls notwendig, kann der Symlink später mit den folgenden beiden Methoden geändert werden:
; 2. Den Symlink mit '''eselect''' setzen:
: {{RootCmd|eselect kernel list|output=Available kernel symlink targets:<br /> &nbsp; [1] linux-2.6.39-gentoo-r2 *<br /> &nbsp; [2] linux-2.6.39-gentoo-r3}}
: Hier werden die verfügbaren Kernelquellen angezeigt. Das Sternchen zeigt die momentan gewählten Kernelquellen an. Um zu anderen  Kernelquellen zu wechseln, z.B. zum zweiten Eintrag, schreibe:
: {{RootCmd|eselect kernel set 2}}

; 3. Den Symlink manuell setzen:
: {{RootCmd|ln -sf /usr/src/linux-2.6.39-gentoo-r3 /usr/src/linux
  |ls -l /usr/src/linux |
  |output=lrwxrwxrwx 1 root root 11 Aug 29 22:10 /usr/src/linux -> linux-2.6.39-gentoo-r3}}

== Konfigurationsprogramme ==

Der Kernel selber bietet mehrere Programme, um ihn zu konfigurieren:

; '''make config'''
: Textbasierte Konfiguration. Die Optionen werden nacheinander abgefragt. Es müssen grundsätzlich alle Optionen beantwortet werden und ein Zugriff außerhalb der Reihe auf frühere Optionen ist nicht möglich.

; '''make menuconfig'''
: Graphisches Menü (nur Tastatureingabe). Das Menü ist frei navigierbar und Optionen lassen sich einzeln ändern.

; '''make nconfig'''
: Graphisches Menü mittels ncurses. Erfordert, dass {{Package|sys-libs/ncurses}} installiert ist.

; '''make xconfig'''
: Graphisches Menü mittels Qt4. Erfordert, dass {{Package|x11-libs/qt-gui}} installiert ist.

; '''make gconfig'''
: Graphisches Menü mittels GTK+. Erfordert, dass {{Package|x11-libs/gtk+}}, {{Package|dev-libs/glib}} und {{Package|gnome-base/libglade}} installiert sind.

Es gibt diverse Skript, um verschiedene Standardkonfigurationen zu erstellen. Siehe dazu:
{{RootCmd|make help}}

== Konfiguration ==

Dieser Artikel erklärt die Konfiguration mittels '''make menuconfig''', aber das Vorgehen ist für die anderen Menüs ähnlich.
{{RootCmd|cd /usr/src/linux
|make menuconfig}}

=== Bedienung ===

Im nun erscheinenden Menü zeigt der blaue Balken die aktuelle Position an. Mit den Pfeiltasten {{Key|Hoch}} und {{Key|Runter}} kann die Position geändert werden. Die Pfeiltasten {{Key|Links}} und {{Key|Rechts}} durchlaufen die Menüleiste unten und bestimmen, was passiert, wenn die {{Key|Enter}} Taste bestätigt werden. '''Select''' wechselt in ein Untermenü - die Menüeinträge enden mit ''--->'' - während '''Exit''' das Untermenü wieder verlässt. Alternativ kann auch zweimal die {{Key|Esc}} Taste gedrückt werden.

Menüeinträge, die mit den folgenden Klammern beginnen, sind Treiber oder Funktionen, die man aktivieren kann:

; [ ], [*]
: Option in eckigen Klammern könne aktiviert oder deaktiviert werden. Das Sternchen markiert den Menüeintrag als aktiviert. Man kann den Wert mit der {{Key|Leertaste}} ändern oder durch Drücken von {{Key|Y}} ('''Y'''es) aktivieren oder durch {{Key|N}} ('''N'''o) deaktivieren.
: Ist die Option aktiviert, so wird der Treiber oder die Funktion fest in den Kernel und steht damit ab dem Systemstart zur Verfügung.

; < >, <M>, <*>
: Optionen in spitzen Klammern können aktiviert oder deaktiviert,  aber auch als Modul aktiviert (dargestellt durch ein ''M'') werden. Der Wert kann wie bei den eckigen Klammern geändert werden und durch Drücken von {{Key|M}} als Modul aktiviert werden.
: Der Unterschied zwischen einem Treiber als Modul und einem fest in den Kernel eingebauten Treiber ist, dass das Modul nicht beim Systemstart geladen werden und so den Start geringfügig beschleunigt. Bei Bedarf muss man das Modul dann selber laden oder man lässt einem Hilfsprogramm wie [[Special:MyLanguage:udev|udev]] dies machen (bei Bedarf auch schon beim Systemstart). Einfacher in der Handhabung ist ein fest in den Kernel eingebauter Treiber.

; {M}, {*}
: Optionen in geschweiften Klammern können aktiviert oder als Modul aktiviert werden, aber nicht deaktivert werden, weil ein anderer Treiber diesen Treiber in einer der beiden Arten benötigt.

; -M-, -*-
: Optionen zwischen Bindestrichen sind aktiviert in der gezeigten Art aktiviert wurde durch einen anderen Treiber. Solche Optionen können nicht geändert werden.


Des weiteren enthalten manche Menüeinträge eine Klassifizierung am Ende:

; (NEW)
: Dieser Treiber ist erst seit Kurzem im Kernel enthalten und ist eventuell noch nicht ausreichend getestet.

; (EXPERIMENTAL)
: Dieser Treiber ist noch im Versuchsstadium und gewiss noch nicht ausreichend getestet.

; (DEPRECATED)
: Dieser Treiber ist veraltet und für die meisten Systeme nicht mehr notwendig.

; (OBSOLETE)
: Dieser Treiber ist veraltet und sollte nicht mehr aktiviert werden.


Die meisten Optionen enthalten eine Beschreibung (in Englisch), die durch Drücken von {{Key|H}}  oder durch Auswahl von '''Help''' in der unteren Menüleiste angezeigt wird.

=== Treiberauswahl ===

Siehe den [[Special:MyLanguage/hardware detection|Hardwareerkennung]] Artikle oder die Artikel in der [[:Category:Hardware|Hardware]] Kategorie.

=== Suchfunktion ===
Durch Drücken von {{Key|/}} können die Treiber und Funktionen anhand ihrer Modulnamen gefunden werden.

== Kompilieren ==

Nachdem der Kernel konfiguriert wurde, muss er nun kompiliert werden:
{{RootCmd|make}}

Wer einen Prozessor mit mehreren Kernel hat, kann die Arbeit auf alle Kerne verteilen. Dazu gibt man den Parameter '''-j(NUMBER_CORES +1)''' mit an. Für einen Zweikern-Prozessor also:
{{RootCmd|make -j3}}

== Einrichtung ==

If activated drivers as modules, you have to install them:
{{RootCmd|make modules_install}}
The modules will be copied to a sub folder of <tt>/lib/modules</tt>.

To install the actual kernel:
{{RootCmd|make install}}

This command executes <tt>/sbin/installkernel</tt>, which is part of the {{Package|sys-apps/debianutils}} package. It copies the kernel and the additional files in Debian's naming syntax to <tt>/boot</tt> and creates there the symlinks <tt>vmlinuz</tt>, <tt>System.map</tt> and <tt>config</tt>, which point to the new kernel etc. The symlinks pointing to the older kernel sources will be renamed to <tt>.old</tt> suffix, as well as the old kernel if it has the same version as newly-installed one. These symlinks are handy, because they point always to the newest kernel without changing the file path (e.g. you can use them in the bootloader configuration).

== Bootloader ==

Change your bootloader configuration to pick up at boot the new kernel.

Finally restart your system with the new kernel.

== Links ==

* [http://kernelnewbies.org/Linux26Changes kernel changelog with some explanations]

[[Category:Kernel]]
