<languages />


{{Metadata|abstract=This FAQ is intended to answer some of the most frequently asked questions relating to Gentoo/Alpha and Linux/Alpha in general.}}

This FAQ is intended to answer some of the most frequently asked questions relating to Gentoo/Alpha and Linux/Alpha in general.

=== Introduction ===

This document contains answers to the most commonly asked questions about Gentoo/Alpha and Alpha/Linux. It's aimed at both new users and experienced users alike. 

== About the Gentoo/Alpha Project ==

=== What is Gentoo/Alpha? ===

The Gentoo/Alpha project is responsible for keeping the Gentoo distribution updated and current for the Alpha platform. This primarily includes keywording packages, porting software, and making new releases. The Gentoo/Alpha project aims to provide a usable environment for both desktops and servers. 

== The Alpha Architecture ==


=== Isn't the Alpha architecture dead? ===

Kind of, yes. HP stopped taking orders for new Alpha systems on April 27, 2007. and for Alpha options and upgrades on April 25, 2008. See their [http://h18002.www1.hp.com/alphaserver/evolution.html planning page] for more details. 

=== Can I run 32-bit applications? ===

No, all Alpha systems use a pure 64 bit kernel and a pure 64 bit userland. You cannot even force gcc to output 32 bit code using the <code>-m32</code> compiler flag. 

=== Is Alpha big endian or little endian? ===

Alpha systems are little endian. A large Cray system using Alphas was big endian, but Linux will never support it. 

=== Can I run Linux/x86 applications on Alpha? ===

No, not without a x86 emulator like [http://wiki.qemu.org/Main_Page qemu] . In the past DEC/Compaq/HP maintained a program called <code>em86</code> which allowed Linux/x86 applications to be run on Linux/Alpha systems. However, the program is closed source and no longer maintained upstream. There are no <code>em86</code> binaries available that are compatible with gcc-3's ABI. 

=== Why install Gentoo on Alpha? ===

Admittedly, you can find faster 64-bit systems out there, like amd64. However, that doesn't mean that Alpha systems are useless. The following are a few good reasons why you'd want to install Linux on this sort of hardware: 

* You can turn an old computer into something useful. Older Alphas make great routers and servers. Their desktop performance isn't that bad either.
* You will learn about unusual computer hardware.
* It's cool. How many people can say they've got Linux running on an Alpha?

=== Where can I buy Alpha hardware? ===

Alpha hardware generally isn't available at your local computer store. [http://ebay.com eBay] is usually a good option, assuming that the shipping doesn't cost you too much. There are several used equipment dealers that can be found via Google, however most of them charge too much. 

== Hardware ==

=== I opened up the case on an AlphaServer and now it won't power on, what do I do? ===

Make sure the top panel of the case is on and properly in place. The middle of the top panel of the case has a small piece of metal oriented downwards. When the top panel is put back in place properly, the small piece of metal will press down on a switch. When the switch isn't pressed down, the system will refuse to power on. 

== Alpha Specific Compiler Flags ==

=== Is the use of Alpha specific compiler flags recommended? ===

As with all compiler optimizations, don't over do it. Use these flags with care and they will give you a stable, speedy system; use them too aggressively and you could seriously break your system. When in doubt, leave it out. If you need further clarification, check the <code>gcc</code> man page. 

===  How do I optimize for a specific instruction set and scheduling model? ===

You can optimize for a specific instruction set and scheduling model with <code>-mcpu=XXX</code> , where XXX is your cpu type. Valid cpu types are <code>ev4</code> , <code>ev45</code> , <code>ev5</code> , <code>ev56</code> , <code>pca56</code> , <code>ev6</code> and <code>ev67</code> . If you do not use the <code>-mcpu=XXX</code> flag, then <code>gcc</code> will default to the cpu type of the machine it was compiled on. <code>-mcpu=</code> is equivalent to the <code>-march=</code> flag on x86. 

{{Note|AlphaServer 800 users should set <code>ev5</code> . There are known issues setting <code>ev56</code> particularly with Xorg causing a full system lock up.}}

=== How do I specify the scheduling model without changing the instruction set? ===

You can specify the scheduling model without changing the instruction set with <code>-mtune=XXX</code> , where XXX is your cpu type. Valid cpu types are <code>ev4</code> , <code>ev45</code> , <code>ev5</code> , <code>ev56</code> , <code>pca56</code> , <code>ev6</code> and <code>ev67</code> . <code>-mtune=</code> is implied by <code>-mcpu=</code> , so you don't need to specify this with if you set <code>-mcpu=</code> . <code>-mtune=</code> is equivalent to the <code>-mcpu=</code> flag on x86. 

=== How do I enable software assisted floating point numbers? ===

You can enable software assisted floating point numbers with <code>-mieee</code> . This will enable software assistance to correctly support denormalized numbers and exceptional IEEE values such as not-a-number and plus/minus infinity. 

This should be in your global <code>CFLAGS</code> unless you really know what you are doing. 

=== How do I specify the memory latency of my system? ===

You can specify the memory latency of your system with <code>-mmemory-latency=XXX</code> , where XXX is the number of clock cycles. This sets the latency time that the scheduler should assume for memory references. <code>gcc</code> has some predefined "typical" values that are also accepted by <code>-mmemory-latency=XXX</code> . Those values are <code>L1</code> for Dcache, <code>L2</code> for Scache, <code>L3</code> for Bcache, and <code>main</code> for main memory. 

This flag should probably not be use in your global <code>CFLAGS</code> as the value you choose is highly dependent on the memory access pattern of the application you are compiling. 

=== How do I specify that static data should be placed in the small data area? ===

You can specify that static data should be placed in the small data area with <code>-msmall-data</code> . This will cause <code>gcc</code> to take advantage of some features of the Alpha architecture by storing heavily used pieces of data in specific sections called the small memory sections. The sections are limited to 64KiB which means accessing anything stored in them will only take one instruction. 

<code>-fPIC</code> will override<code>-msmall-data</code> , so you should use the<code>-fpic</code> flag instead if you do not want<code>-msmall-data</code> to be overridden. 

This flag should probably not be used in your global <code>CFLAGS</code> as some objects require more than 64KiB to be stored, and this will cause a gp_overflow ld error. 

=== How do I specify that object code should be placed in the small text area? ===

You can specify that object code should be placed in the small text area with <code>-msmall-text</code> . This will cause <code>gcc</code> to assume that the entire program (or library) fits in 4MB, and is thus reachable with a branch instruction. This reduces the number of instructions required for a function call from 4 to 1. 

This flag should probably not be used in your global <code>CFLAGS</code> as some programs (or libraries) are larger than 4MB, and this will cause an ld error. 

=== What do I do if any of these compiler flags cause a compile, linker, or runtime error? ===

As [[#CFLAGS]] , please use these <code>CFLAGS</code> cautiously. They may break your system. If you experience problems, try using less aggressive <code>CFLAGS</code> before [[#bugs]] . 

== Alpha Booting and Bootloaders ==

=== What is SRM? ===

SRM is based on the Alpha Console Subsystem specification, which provides an operating environment for OpenVMS, Tru64 UNIX, and Linux operating systems. See the [http://www.alphalinux.org/faq/SRM-HOWTO/ SRM Howto] for more information about SRM. 

=== What is ARC? ===

ARC is based on the Advanced RISC Computing (ARC) specification, which provides an operating environment for Windows NT. 

=== How can I tell if which firmware my Alpha has, ARC or SRM? ===

When you power your system on you will see a screen with a blue background and white text if it is using SRM. You will see a graphical boot system if it is using ARC. 

=== Which bootloader do I use? ===

If your Alpha system supports SRM, then you should use aboot. If your system supports both SRM and ARCs (ARC, AlphaBIOS, ARCSBIOS), then you should follow [http://www.alphalinux.org/faq/x31.html the SRM Firmware Howto] for switching to SRM and use aboot. If your system can only use ARCs (Ruffian, xl, etc.) then you will need to choose milo. 

=== Can aboot boot kernels from EXT4, XFS, ReiserFS, or JFS partitions? ===

No, <code>aboot</code> only supports booting kernels from <code>ext2</code> and <code>ext3</code> partitions. You may still use other files systems for your root partition, you just need to create a {{Path|/boot}} partition with either <code>ext2</code> or <code>ext3</code> on it. 

Support for ext4 is planned. In fact, there are patches floating around that add support for [https://bugs.gentoo.org/show_bug.cgi?id=106855 ReiserFS] , [https://bugs.gentoo.org/show_bug.cgi?id=107103 XFS] , and [http://alphalinux.org/wiki/index.php/Aboot_EXT4_support ext4] . 

== Software ==

=== How is Java support in Gentoo/Alpha? ===

Compaq/HP offered binary packages, called <code>compaq-jre</code> and <code>compaq-jdk</code> . They stopped all support, and the packages were removed from Gentoo on October 11, 2006. Since then, we haven't supported Java. 

=== Will there ever be working Java support? ===

It's possible to use <code>icedtea</code> on Alpha, but we have no plans to support it, due to the high maintenance costs involved with testing hundreds of additional packages. 

=== How is .NET support in Gentoo/Alpha? ===

Neither of the two main open source efforts, [http://www.mono-project.com/Main_Page mono] nor [http://www.dotgnu.org/ DotGNU] , support the alpha architecture. 

=== What is needed for .NET support? ===

Bringing .NET to Alpha isn't a simple task. It requires coding all of the assembly language code generation macros for the JIT (just in time) compiler and coding architecture specific functions (register allocators, etc). 

== Alpha Linux Kernel ==

=== Which kernel sources should I use? ===

We recommend using <code>gentoo-sources</code> but <code>vanilla-sources</code> is also supported by Gentoo/Alpha. You should read the [http://www.gentoo.org//doc/en/gentoo-kernel.xml Gentoo Kernel Guide] to determine which one is right for your needs. 

=== My system is broken with kernel-2.6, Can I build a 2.4 bassed system? ===

Gentoo/Alpha stopped supporting 2.4 kernel and profile in January 2008. Technically you can build a 2.4 Gentoo System (the kernel is in the tree) but you will have to mask all the 2.6 only packages by yourself and you won't have support from developers. 

Gentoo/Alpha will review all bug reports about non-working 2.6 systems and will try to help as much as we can. 

=== Are hardened-sources supported? ===

Short answer is no. They were supported some time ago, but we lost the hardware and the maintainer so now they are not supported. If you are interested and want to continue the initial work, please let us know. 

=== Does the 2.6 kernel support Alpha SMP? ===

There were some times in the past when it was broken. However, modern kernel versions are known to work well. 

== Helping out the Gentoo/Alpha Project ==

=== How do I report bugs? ===

If you find a bug or you want to send us patches, then you need to file a bug report. It only takes you a little bit of your time, and your help is really appreciated. Please follow the [https://wiki.gentoo.org/wiki/Bugzilla_HOWTO Gentoo Bug Reporting Guide] . 

=== How can I help the Gentoo/Alpha Project? ===

Users can help us by: 

* Filing clear and concise [[#bugs]].
* Testing software that does not yet have the <code>~alpha</code> keyword.
* Answering questions on the [http://www.gentoo.org//main/en/lists.xml mailing lists] , [http://forums.gentoo.org/viewforum-f-32.html forum] and IRC channel.
* Sending patches
* Becoming an [http://www.gentoo.org/proj/en/base/alpha/AT/index.xml AT] 

=== 알파 아키텍처 테스터 프로젝트가 있나요? ===

예. 자세한 내용은 [http://www.gentoo.org/proj/en/base/alpha/AT/index.xml 젠투 리눅스 알파 아키텍처 테스터 프로젝트]를 보십시오. 

== 문제 해결 ==

=== 왜이리 Xorg가 알파 머신을 뒤지는거죠? ===

잘못된 -mcpu 설정으로 인해 일어납니다. 예를 들어 AlphaServer 800에서는 xorg '''와''' glibc를 컴파일할 때 <code>ev5</code> 플래그로 컴파일 해야 합니다. 알파 머신을 뒤지다 실패하면 기대치 못한 결과가 야기됩니다. 

== 기타 자원 ==

=== 젠투 알파 포럼이 왜 없죠? ===

On the [http://forums.gentoo.org Gentoo Forums] there are several arch specific categories like [http://forums.gentoo.org/viewforum-f-24.html Gentoo on PPC] and [http://forums.gentoo.org/viewforum-f-24.html Gentoo on Sparc] . There is no Gentoo on Alpha category because there simply isn't enough Gentoo/Alpha activity on the forums to warrant one. All Alpha related posts should go in the [http://forums.gentoo.org/viewforum-f-32.html Gentoo on Alternative Architectures] category. 

=== 젠투/알파에 대해 더 많은 도움이나 정보는 어디서 얻나요? ===

If any of your questions weren't answered here, you can try other resources like the [http://www.gentoo.org//doc/en/handbook/handbook-alpha.xml Alpha Handbook] or [http://www.gentoo.org//proj/en/base/alpha/ our project homepage]. You can also ask us at <code>#gentoo-alpha</code> on <code>irc.freenode.net</code> , [http://forums.gentoo.org/viewforum-f-32.html Gentoo on Alternative Architectures Forum] , or on the {{Mail|gentoo-alpha@lists.gentoo.org}}mailing list. 

=== 알파/리눅스에 대해 더 많은 도움이나 정보는 어디서 얻나요? ===

[http://alphalinux.org/wiki/index.php/Main_Page AlphaLinux.org] is a central repository for all things Alpha/Linux. 

== 감사문 ==

이 안내서에 제공한 노고에 대해 다음 작성자와 편집자분들께 감사의 말을 전하고자 합니다:


* Thomas Cort
* Brian Evans
* nightmorph
* Matt Turner

[[Category:Core system]]
