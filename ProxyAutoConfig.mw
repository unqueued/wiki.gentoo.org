= How it works =

Many web clients have the possibility to detect proxy settings for their current network automatically. This can be done via DHCP, via a method called WPAD, or a manually configured URL.

Once the proxy autoconfiguration file is obtained, clients evaluate it to see how to connect to the proxy.

== The Proxy Auto Configuration (PAC) file ==
A PAC file is a simple javascript file clients can evaluate to get their configuration. For each request, the client executes the javascript, passing along the URL and host name it would like to make the request to. The script will return a proxy name to use for this server/URL, or DIRECT if there is no proxy for this host or protocol.

== Getting the PAC file to the client ==

In order to get to the PAC file, a client can use several options.

{| class="wikitable"
|-
| '''local file:''' || The .pac file can be stored locally and applications can be pointed to that file
|-
| '''remote file:''' || It can have a URL configured which serves out the pac file.
|-
| '''DHCP:''' || DHCP servers can provide information where a .pac file is available
|-
| '''WPAD:''' || following a set of conventions, clients can automatically obtain the correct .pac file for the netork they're in
|}

The last two options are what we are going for because once a client is set up it can work the same way regardless which network it is in. 

=== Web Proxy Auto-Discovery (WPAD) ===
WPAD works like this:

A client tries to figure out is domain name by stripping its own host name from the FQDN it got from DHCP (or wherever). It will then try to contact a HTTP server by the name of wpad.<domain>. If it can't find one, and the domain name has one ore more subdomains, it will strip the first subdomain and try again to find a server named wpad.<domain> up until the top-level domain is reached.

From those HTTP servers it will request a file called /wpad.dat which should be a PAC file like we created above. 

For example:
{| class="wikitable"
|-
| Client Name:  || laptop.office.corporate.example.org
|-
| First Server tried: || http://wpad.office.corporate.example.org/wpad.dat
|-
| Second Server tried: || http://wpad.corporate.example.org/wpad.dat
|-
| Last Server tried || http://wpad.example.org/wpad.dat
|}

= Step 1: Creating the PAC file =

For details on which commands are supported in this file, see http://www.proxypacfiles.com/proxypac/

A simple PAC file looks like this:

{{File|proxy.pac||<pre>
function FindProxyForURL(url, host) {
    var proxy = "PROXY proxy.example.org:8080; DIRECT";
    var direct = "DIRECT";

    // no proxy for local hosts without domain:
    if(isPlainHostName(host)) return direct;

    //We only cache http
     if (
         url.substring(0, 4) == "ftp:"   ||
         url.substring(0, 6) == "rsync:" ||
    return direct;

    // proxy everything else:
    return proxy;
}
</pre>}}

To test that your PAC file is functioning correctly you can use the [https://code.google.com/p/pacparser/ pacparser] tool.

Example:
<pre>
/usr/bin/pactester -p proxy.pac -u http://www.gentoo.org -h gentoo.org
PROXY proxy.example.org:8118; DIRECT

/usr/bin/pactester -p proxy.pac -u rsync://rsync.gentoo.org -h gentoo.org
DIRECT
</pre>
If the return value of the script is DIRECT, the client won't use a proxy. The line "PROXY proxy.example.org:8080; DIRECT" will tell clients to first try to use the host proxy.example.org at port 8080 as a proxy, and if that fails, go direct. You can provide multiple PROXY strings for redundancy or load balancing. (Note that clients will try to use the servers in order so for load balancing you will have to have the javascript to shuffle the servers.)

= DHCP Server configuration =

Some Operating systems can use information provided via DHCP to obtain the proxy autoconfiguration file. Here we show how to make the ISC dhcpd server ({{Package|net-misc/dhcp}}) serve this information:

In dhcpd.conf in the general section define a new option with code 252 and in the section for our network we provide the value of the config server valid for that network.

{{File|/etc/dhcp/dhcpd.conf||<pre>
# do windows-style proxy autoconfig:
option local-proxy-config code 252 = text;
...
subnet 192.168.0.0 netmask 255.255.255.0 {
  range 192.168.0.20 192.168.0.30;
  ...
  option local-proxy-config "http://www.example.org/proxy.pac";
}
</pre>}}

{{Note|You can call the option anything you want, but you have to give it code 252 and type text}}


= DNS Server configuration =

The responsible DNS Server must have records for the wpad.<domain> servers. We will not discuss how to set up an DNS server here, but a simple modification to the records of bind would look like this:

{{File|/etc/bind/pri/example.org.zone||<pre>
server1    IN A     192.168.0.1
server2    IN A     192.168.0.2
www        IN CNAME server1.example.org.
proxy      IN CNAME server2.example.org.
; proxy autoconfig server:
wpad       IN CNAME server1.example.org.
</pre>}}
{{Note|while we're here we might also add an alias for the proxy server itself if we don't have one yet.}}

= Serving the WPAD file =

Now that we have created a PAC file and DNS points to the correct server, all that is left is actually serving the file to clients:

We need a HTTP Server (we use {{Package|www-servers/apache}} here), a virtual host which will respond to the wpad server name, and the PAC file.

== Apache setup ==

{{File|/etc/apache2/vhosts.d/00_server1.example.org.conf||<pre>

NameVirtualHost 192.168.0.1:80
Listen 192.168.0.1:80
NameVirtualHost 192.168.0.1:80

<VirtualHost 192.168.0.1:80>
        ServerName server1.example.org
        ServerAlias wpad.example.org

        DocumentRoot "/var/www/example.org/htdocs"
        <Directory "/var/www/example.org/htdocs">
                AllowOverride All
                Options MultiViews FollowSymlinks SymLinksIfOwnerMatch IncludesNoExec
                Options -Indexes
                Order allow,deny
                Allow from all
        </Directory>

        # serve proxy autoconfig correctly:
        <Files "wpad.dat)">
                AddType application/x-ns-proxy-autoconfig dat
        </Files>
        <Files "proxy.pac">
                AddType application/x-ns-proxy-autoconfig pac
        </Files>
</VirtualHost>
</pre>}}



Now all that is left is to copy our PAC file to /var/www/example.org/htdocs/. The Author likes to call the file 'proxy.pac' because that name is used in lots of documentation, and add a symlink called wpad.dat to satisfy the WPAD naming convention.

{{Important|The file MUST be accessible under the URI http://wpad.example.org/wpad.dat, you can not name it anything else or place it deeper in the web server hierarchy. You probably also shouldn't use fancy stuff like redirects or HTTPS.}}

= Configuring clients =
{| class="wikitable"
|-
! Application !! Steps !! Screenshot !! Documentation
|-
| Firefox || In the Preferences Window, chose Advanced, go to the Network Tab, click the Settings... button. || [[File:FFProxyAutoConfig.png|240px|left|thumb]] || [http://support.mozilla.org/en-US/kb/settings-network-updates-and-encryption?s=proxy&r=4&e=es&as=s#w_network-tab Firefox Documentation]
|-
| Opera || Press Alt+P to bring up the Preferences, go to the Advanced Tab, chose Networking and click the Proxy Servers... button. || [[File:OpProxyAutoConfig.png|240px|left|thumb]] || [http://www.opera.com/support/kb/view/332/ Opera Documentation]
|-
| KDE || In System Settings, search for proxy, the first section is the proxy settings. {{Note|This setup will be used for all KDE applications including those using protocols other than http:// so make sure you handle those in the PAC file.}} 
 || [[File:KDEProxyAutoConfig.png|240px|left|thumb]]
 || [http://docs.kde.org/cgi-bin/desktopdig/search.cgi?show=stable/en/kde-runtime/kcontrol/proxy/index.html&collection=en&include=stable&q=proxy KDE Documentation]

|-
| GNOME || see link || -- no pic -- || [http://library.gnome.org/users/gnome-help/stable/net-proxy.html.en GNOME Documentation]
|}

= next Steps =

Well you need a proxy if you don't already have one ;)

Some popular choices are {{Package|net-proxy/squid}}, {{Package|net-proxy/polipo}}, {{Package|net-proxy/privoxy}}, {{Package|net-misc/tor}}

--------

[[Category:Server]]
[[Category:Software]]
