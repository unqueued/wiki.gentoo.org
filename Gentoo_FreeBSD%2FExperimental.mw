The various sections in this article are a bit experimental. Maintain an expectation they might not work as intended on Gentoo/FreeBSD systems. Handle with care!

__TOC__

== How to use X Window System with vesa video card ==

{{Note|Please update this page if you know a better method. Also welcome to fix the problem. Please file a bug.}}

{{Emerge|portage libtool app-admin/eselect}}

{{RootCmd
|mv /etc/make.conf /etc/portage/make.conf # (be careful !)
|emerge -u flaggie
|flaggie +python +X
}}

{{RootCmd|echo 'INPUT_DEVICES{{=}}"keyboard mouse"' >> /etc/portage/make.conf
|echo 'VIDEO_CARDS{{=}}"vesa"' >> /etc/portage/make.conf}}

{{RootCmd
|emerge -p xorg-x11
|emerge xorg-x11
|emerge xterm twm xclock
}}

If you are using a USB mouse, please load kernel module first:

{{RootCmd
|kldload ums
|echo 'ums_load{{=}}"YES"' >> /boot/loader.conf
}}

Configure:

{{RootCmd
|Xorg -configure
|mv /root/xorg.conf.new /etc/X11/xorg.conf
}}

Check the device for mouse:

{{RootCmd|grep /dev /etc/X11/xorg.conf|output=
<pre>        Option      "Device" "/dev/sysmouse"</pre>
}}

OK, In this case {{Path|/dev/sysmouse}} has been detected:

{{RootCmd
|/etc/init.d/moused start
|rc-update add moused default
|startx
}}

=== Other video cards ===

xf86-video-vmware) emerge {{Package|x11-drivers/xf86-video-vmware}}.

xf86-video-intel) Please see {{Bug|493436}}.

=== Q&A ===

'''Question:''' Why does the mouse not work?

'''Answer:''' Please specify the correct value in {{Path|xorg.conf}}. <tt>moused</tt> must use {{Path|/dev/sysmouse}}. Run <tt>/etc/init.d/moused start</tt>.

* PS/2 mouse is {{Path|/dev/psm0}}.
* USB mouse is {{Path|/dev/ums0}}.
* Another one is {{Path|/dev/sysmouse}}.

== How to use a Portage overlay ==

;[http://git.overlays.gentoo.org/gitweb/?p=proj/gentoo-bsd.git Gentoo/BSD Project Overlay]
:It is the official overlay. Good quality, it contains bugfixes for e.g. system packages. You can add using <code>layman -a gentoo-bsd</code>.
;[https://github.com/nigoro/amd64-fbsd nigoro's Gentoo/FreeBSD experimental overlay]
:It is a highly experimental overlay. Bad quality, but most packages work. [https://github.com/nigoro/amd64-fbsd/wiki/TestedPackages List of tested packages]. You can add using <code>layman -a nigoro-fbsd</code>

== How to use clang stages ==

{{Important|clang stages is using clang as the system compiler. It's very experimental.}}

Clang stages are available from the following URL:

http://distfiles.gentoo.org/experimental/bsd/freebsd/stages/amd64-fbsd-9.1/clang/stage3-amd64-clangfbsd-9.1.tar.bz2

Please see bug list and page [[Clang]]. In addition, please report to Gentoo Bugzilla if you found a bug.

=== Bug list ===

*{{Bug|417789}}: [TRACKER] Packages that fail to build with LLVM/Clang on Gentoo FreeBSD

== How to migrate from amd64/9.1 profile to amd64/9.1/clang ==

{{RootCmd
|emerge -a sys-devel/clang sys-libs/libcxx
|CC{{=}}clang CXX{{=}}"clang++ -stdlib{{=}}libc++" emerge -B sys-devel/llvm sys-devel/clang
|emerge -K sys-devel/llvm sys-devel/clang
|eselect profile set default/bsd/fbsd/amd64/9.1/clang
}}

=== Why make the package once ? ===

When compiled with CXX="clang++ -stdlib=libc++" to llvm or clang, clang command does not work at all (Segmentation fault occurs always).

When set CXX="clang++ -stdlib=libc++", in order to successfully compile them, should both be linked to libc++.so.1.

== How to use sys-boot/grub2 ==

=== Install grub2 ===

{{RootCmd
|mkdir -p /etc/portage/package.keywords /etc/portage/patches/sys-boot/grub
|echo "{{=}}sys-boot/grub-2.00_p5107* amd64" >> /etc/portage/package.keywords/grub
|wget -P /etc/portage/patches/sys-boot/grub https://raw.github.com/nigoro/amd64-fbsd/master/etc/portage/patches/sys-boot/grub/grub-2.00_p5107-fbsd.patch
|emerge sys-boot/grub
}}

=== Configure grub2 ===

If you select UFS2 (GPT):

{{RootCmd
|grub2-install --modules{{=}}"part_gpt fat ufs2" --no-floppy /dev/ada0
|grub2-mkconfig -o /boot/grub/grub.cfg
}}

If you select UFS2 (MBR):

{{RootCmd
|grub2-install --modules{{=}}"biosdisk part_msdos bsd search_fs_uuid ufs2 msdospart" --no-floppy /dev/ada0
|grub2-mkconfig -o /boot/grub/grub.cfg
}}

If you select ZFS (GPT):

{{RootCmd
|grub2-install --modules{{=}}"part_gpt fat zfs" --no-floppy /dev/ada0
|grub2-mkconfig -o /boot/grub/grub.cfg
}}
