<languages />


{{Metadata|abstract=Данное руководство знакомит пользователя с основами LDAP и описывает, как можно настроить OpenLDAP для осуществления аутентификации в рамках группы компьютеров.}}


Данное руководство знакомит пользователя с основами LDAP и описывает, как можно настроить OpenLDAP для осуществления аутентификации в рамках группы компьютеров.


== Введение в OpenLDAP ==

=== Что такое LDAP? ===

LDAP означает ''Легковесный протокол доступа к справочнику'' (Lightweight Directory Access Protocol). Основанный на X.500, он включает в себя большую часть его основных функций, за исключением более редких. Что же такое X.500 и зачем нужен LDAP? 

X.500 является моделью для служб справочника (Directory Services) в модели OSI. Он содержит определения пространства имен (namespace) и протоколы для запрашивания и обновления справочника. Однако существует немало случаев, когда полноценная функциональность X.500 не требуется. Встречайте LDAP. Как и X.500, он обеспечивает модель данные/пространство имен для справочника и протокола. Однако LDAP разработан для прямой работы со стеком TCP/IP. Можно считать LDAP сокращенной версией X.500. 

=== Что такое справочник (directory)? ===

Справочник — это специализированная база данных, созданная для частых запросов но нечастых обновлений. В отличие от обычных баз данных, справочники не содержат поддержку транзакций (transaction) или функциональности отката (roll-back). Справочники легко дублируются для улучшения доступности и надежности. При дублировании справочников допускаются временные противоречия при условии, что позже они будут синхронизированы. 

=== Как осуществляется структурирование информации? ===

Вся информация в справочнике структурируется иерархически. Более того, для того, чтобы ввести данные в справочник, справочник должен знать, как хранить эти данные в дереве. Рассмотрим вымышленную компанию и дерево, подобное Интернет: 

{{CodeBox|title=Организационная структура для GenFic, вымышленной компании Gentoo (Fictional Gentoo company)|1=
dc:         com
             {{!}}
dc:        genfic         ## (Организация)
          /      \
ou:    Люди    серверы    ## (Организационные единицы)
      /    \     ..
uid: ..   John            ## (Специфические данные OU)
}}

Поскольку данные не записываются в базу в подобной манере ascii-art, каждый элемент этого дерева должен быть определен. Для названий элементов LDAP использует схему наименований. Большая часть дистрибутивов LDAP (включая OpenLDAP) включает в себя определенное количество предопределенных (и одобренных) схем, таких как ''inetOrgPerson'', или часто используемая схема для определения пользователей, которую могут использовать Unix/Linux-системы, которая называется ''posixAccount''. Существуют утилиты графического интерфейса, основанные на веб, для упрощения управления LDAP: раздел [[#Работа с OpenLDAP|Работа с OpenLDAP]] содержит неполный список таких утилит.

Заинтересованным пользователям рекомендуется прочитать [http://www.openldap.org/doc/admin24/ OpenLDAP Admin Guide].

=== Итак, для чего же его можно использовать? ===

LDAP можно использовать для разнообразных нужд. В этой статье описывается централизованное управление пользователями, хранение всех учетных записей пользователей в одном местонахождении LDAP (что не означает, что оно находится на одном сервере — LDAP поддерживает высокую доступность (high availability) и резервирование (redundancy)), однако LDAP может использоваться и в других целях. 

* инфраструктура открытых ключей

* общий календарь

* общая адресная книга

* хранилище для DHCP, DNS, ...

* System Class Configuration Directives (отслеживание нескольких конфигураций сервера)

* централизованная аутентификация (PosixAccount)

* ...

== Настройка сервера OpenLDAP  ==

Это руководство использует домен genfic.com в качестве примера. Естественно, вам нужно будет изменить это название. Однако убедитесь, что верхний элемент является официальным доменом верхнего уровня (net, com, cc, be, ...).


Сначала установим OpenLDAP. Убедитесь в том, что USE-флаги ''berkdb, crypt, gnutls, ipv6, sasl, ssl, syslog, -minimal'' и ''tcpd'' установлены.

{{Emerge|openldap}}


У OpenLDAP есть основной пользователь, "rootdn" (Root Distinguished Name), встроенный в приложение. В отличие от традиционного пользователя root Unix, пользователю rootdn необходимо предоставить соответствующие права доступа. Пользователя rootdn можно использовать только в контексте конфигурации, однако его также можно использовать в определении справочника. В этом случае пользователь может аутентифицироваться как rootdn либо с помощью пароля конфигурации, либо с помощью пароля дерева (основанного на справочнике).

В целях верификации, пароли пользователей (как пользователей rootdn, так и других) можно хранить в виде простого текста, либо в хешированном (hashed) виде. Доступно несколько хеш-алгоритмов, но не рекомендуется использовать слабые алгоритмы (вплоть до MD5). На данный момент, SHA считается достаточно безопасным с точки зрения криптографии.

В нижеприведенной команде хешированное значение создается для данного пароля; результат этой команды можно использовать в файле конфигурации {{Path|slapd.conf}} либо во внутреннем определении пользователя в справочнике:

{{RootCmd|slappasswd|output=<pre>
New password: my-password
Re-enter new password: my-password
{SSHA}EzP6I82DZRnW+ou6lyiXHGxSpSOw2XO4
</pre>
}}


Теперь отредактируйте конфигурацию сервера LDAP в файле {{Path|/etc/openldap/slapd.conf}}. Установленный файл {{Path|slapd.conf}} является частью оригинального дистрибутива openLDAP. Ниже приведен пример файла конфигурации, которым его можно заменить. 

{{FileBox|filename=/etc/openldap/slapd.conf|1=
include	/etc/openldap/schema/core.schema
include /etc/openldap/schema/cosine.schema
include /etc/openldap/schema/inetorgperson.schema
include /etc/openldap/schema/nis.schema
include	/etc/openldap/schema/misc.schema
 
pidfile  /var/run/openldap/slapd.pid
argsfile /var/run/openldap/slapd.args
 
## ## ServerID, используемый в случае дублирования
serverID 0 
loglevel 0
 
## ## Раздел Certificate/SSL
TLSCipherSuite normal
TLSCACertificateFile /etc/openldap/ssl/ldap.crt
TLSCertificateFile /etc/openldap/ssl/ldap.pem
TLSCertificateKeyFile /etc/openldap/ssl/ldap.key
TLSVerifyClient never
 
## ## Управление доступом
access to dn.base="" by * read
access to dn.base="cn=Subschema" by * read
access to *
  by self write
  by users read
  by anonymous read
 
## ## Определение базы данных
database hdb
suffix "dc=genfic,dc=com"
checkpoint 32 30
rootdn "cn=Manager,dc=genfic,dc=com"
## ## rootpwd, сгенерированный ранее с помощью команды slappasswd
rootpw "{SSHA}EzP6I82DZRnW+ou6lyiXHGxSpSOw2XO4" 
directory "/var/lib/openldap-data"
index objectClass eq
 
## ## Синхронизация (с другим сервером LDAP)
syncrepl rid=000
  provider=ldap://ldap2.genfic.com
  type=refreshAndPersist
  retry="5 5 300 +"
  searchbase="dc=genfic,dc=com"
  attrs="*,+"
  bindmethod="simple"
  binddn="cn=ldapreader,dc=genfic,dc=com"
  credentials="ldapsyncpass"
 
index entryCSN eq
index entryUUID eq
 
mirrormode TRUE
 
overlay syncprov
syncprov-checkpoint 100 10
}}

Для более подробного анализа файла конфигурации рекомендуем изучить Руководство администратора OpenLDAP. 

=== Проверка конфигурации ===

После изменения файла {{Path|slapd.conf}}, его можно проверить с помощью следующей команды.

{{Cmd|slaptest -v -d 1 -f /etc/openldap/slapd.conf}}

Или используя OLC:

{{Cmd|slaptest -v -d 1 -F /etc/openldap/slapd.d}}

Измените уровень отладки ("-d 1" выше), чтобы получить больше информации. Если все в порядке, будет отображено сообщение ''config file testing succeeded''. В случае ошибки, <code>slaptest</code> выведет номер строки в файле {{Path|slapd.conf}}, содержащей ошибку.

Обратите внимание, что, начиная с версии 2.4.23, OpenLDAP перешел с традиционных файлов конфигурации ({{Path|slapd.conf}}) на OLC (OnLineConfiguration, также известный по структуре <code>cn=config</code>), в качестве метода конфигурации, используемого по умолчанию. Одно из преимуществ использования OLC в том, что динамический back-end (cn=config) не требует перезапуска сервера после обновления конфигурации. Существующие пользователи могут перейти на новый метод конфигурации, запустив команду <code>slaptest</code> одновременно с параметрами -f и -F. По традиции, OLC хранится в ldif back-end (что сохраняет преимущества удобочитаемости для человека) в каталоге {{Path|/etc/openldap/slapd.d}}. В Gentoo преобразование конфигурации пока не требуется, однако поддержка на данный момент документированного подхода в будущем будет убрана.

Чтобы иметь возможность изменения конфигурации сервера OpenLDAP, необходимо определить как минимум доступ для записи (или, как правило, для управления) в <code>cn=config</code>.

В нижеследующем примере показано, как можно предоставить доступ для управления к OLC (база данных ''cn=config'') для системного администратора (пользователя root), добавив соответствующие строки в конец файла {{Path|slapd.conf}}:

{{FileBox|filename=/etc/openldap/slapd.conf|title=Предоставление прав управления пользователю Linux root в cn{{=}}config|1=
database config
access to *
        by dn.exact="gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth" manage
        by * none
}}

{{RootCmd|mkdir /etc/openldap/slapd.d}}
{{RootCmd|slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d}}
{{RootCmd|chown -R ldap /etc/openldap/slapd.d}}

Запуск этой команды переместит и преобразует конфигурацию. После этого предполагается обновление конфигурации с помощью специально подготовленных файлов ldif. Лишь в том случае, если вы с ними не знакомы, следует редактировать {{Path|slapd.conf}} и повторно преобразовать его в {{Path|slapd.d/}}. Не забудьте проверить права доступа каталога.

Для дополнительных инструкций прочитайте in-line комментарии сгенерированных файлов.

Нижеприведенная строка включает метод конфигурации {{Path|slapd.d/}}. 

{{FileBox|filename=/etc/conf.d/slapd|lang=bash|1=
OPTS="-F /etc/openldap/slapd.d -h 'ldaps:// ldap:// ldapi://%2fvar%2frun%2fopenldap%2fslapd.sock'"
}}

Наконец, создайте структуру {{Path|/var/lib/openldap-data}}: 

{{RootCmd|mkdir -p /var/lib/openldap-data
|chown ldap:ldap /var/lib/openldap-data
|chmod 700 /var/lib/openldap-data}}


Запустите slapd: 

{{RootCmd|/etc/init.d/slapd start}}

Если он не запускается, установите переменную ''loglevel'' в файле {{Path|slapd.conf}} в значение 4 или больше и обратитесь за информацией к файлу {{Path|/var/log/messages}}.

==== Пример обновления LDIF в стиле OLC ====

Ниже приводится несколько примеров обновления конфигурации в стиле OLC.

Например, чтобы изменить местонахождение каталога конфигурации OLC:

{{FileBox|filename=fix-configs.ldif|1=
dn: cn=config
changetype: modify
delete: olcConfigFile
dn: cn=config
changetype: modify
replace: olcConfigDir
olcConfigDir: /etc/openldap/slapd.d
}}

Чтобы изменить уровень журнала, используемого процессом OpenLDAP:

{{FileBox|filename=loglevel.ldif|1=
dn: cn=config
changetype: modify
replace: olcLogLevel
olcLogLevel: stats sync
}}

Чтобы применить изменения, запустите следующую команду:

{{RootCmd|ldapmodify -Y EXTERNAL -H ldapi:/// -f loglevel.ldif}}

== Настройка клиентских утилит OpenLDAP == 

Edit the LDAP Client configuration file. This file is read by ldapsearch and other ldap command line tools.

{{FileBox|filename=/etc/openldap/ldap.conf|title=Добавьте следующее|1=
BASE         dc=genfic, dc=com
URI          ldap://ldap.genfic.com:389/ ldap://ldap1.genfic.com:389/ ldap://ldap2.genfic.com:389/
TLS_REQCERT  allow
TIMELIMIT    2
}}

You can test the running server with the following command: 

{{Cmd|ldapsearch -x -D "cn{{=}}Manager,dc{{=}}genfic,dc{{=}}com" -W}}

If you receive an error, try adding <code>-d 255</code> to increase the verbosity and solve the issue you have.

== Client Configuration for Centralised Authentication  ==

There are numerous methods/tools that can be used for remote authentication. Some distributions also have their own easy to use configuration tool. Below there are some in no particular order. It is possible to combine local users and centrally authorized accounts at the same time. This is important because, for instance, if the LDAP server cannot be accessed one can still login as root.

* SSSD  (Single Sign-on Services Daemon). Its primary function is to provide access to identity and authentication remote resource through a common framework that can provide caching and offline support to the system. It provides PAM and NSS modules, and in the future will support D-Bus interfaces for extended user information. It also provides a better database to store local users as well as extended user data.

* Use <code>pam_ldap</code> to login to the LDAP server and authenticate. Passwords are ''not'' sent over the network in clear text.  

* NSLCD (Name Service Look up Daemon). Similar to SSSD, but older.

* NSS (Name Service Switch) using the traditional <code>pam_unix</code> module to fetch password hashes over the network. To permit users to update their password this has to be combined with the <code>pam_ldap</code> method.

The first two are demonstrated below with the minimum necessary configuration options to get working.

=== Client PAM configuration SSSD Method ===

Here is the more direct method. The three files that are required to be edited are mentioned below. 

{{FileBox|filename=/etc/sssd/sssd.conf|lang=ini|1=
[sssd]
config_file_version = 2
services = nss, pam
domains = genfic
debug_level = 5
  
[nss]
filter_users = root,ldap,named,avahi,haldaemon,dbus,radiusd,news,nscd
  
[domain/genfic]
id_provider = ldap
auth_provider = ldap
ldap_search_base = dc=genfic,dc=com
ldap_tls_reqcert = never
# primary and backup ldap servers below [first server and],[second server]
ldap_uri = ldap://X.X.X.X,ldap://X.X.X.X
}}


Add sss to the end as shown below to enable the lookup to be handed to the sssd system service. Once you have finished editing start the sssd daemon.

{{FileBox|filename=/etc/nsswitch.conf|title=Example nsswitch.conf with SSSD support|1=
passwd:     files sss
shadow:     files sss
group:      files sss
  
netgroup:   files sss
automount:  files sss
sudoers:    files sss
}}

The last file is the most critical. Open an extra root terminal as a fallback before editing this. The lines that end with <code>#</code> have been added to enable remote authentication. Note the use of {{Path|pam_mkhomedir.so}} to support creating the user home directories.

{{FileBox|filename=/etc/pam.d/system-auth|title=Enable pam_sss support|1=
#%PAM-1.0
# This file is auto-generated.
# User changes will be destroyed the next time authconfig is run.
auth        required      pam_env.so
auth        sufficient    pam_unix.so nullok try_first_pass
auth        requisite     pam_succeed_if.so uid >= 500 quiet
auth        sufficient    pam_sss.so use_first_pass                                         #
auth        required      pam_deny.so
  
account     required      pam_unix.so
account     sufficient    pam_localuser.so
account     sufficient    pam_succeed_if.so uid < 500 quiet
account     [default=bad success=ok user_unknown=ignore] pam_sss.so                         #
account     required      pam_permit.so
  
password    requisite     pam_cracklib.so try_first_pass retry=3
password    sufficient    pam_unix.so md5 shadow nullok try_first_pass use_authtok
password    sufficient    pam_sss.so use_authtok                                            #
password    required      pam_deny.so
  
session     required      pam_mkhomedir.so skel=/etc/skel/ umask=0077
session     optional      pam_keyinit.so revoke
session     required      pam_limits.so
session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
session     required      pam_unix.so
session     optional      pam_sss.so                                                        #
}}

Now try logging in from another box.

=== Client PAM configuration the pam_ldap Module Method ===

First, we will configure PAM to allow LDAP authorization. Install {{Package|sys-auth/pam_ldap}} so that PAM supports LDAP authorization, and {{Package|sys-auth/nss_ldap}} so that your system can cope with LDAP servers for additional information (used by {{Path|nsswitch.conf}}). 

{{Emerge|pam_ldap nss_ldap}}

The last file is the most critical. Open a few extra root terminals as a backup before editing this. The lines that end with <code>#</code> have been added to enable remote authentication.

{{FileBox|filename=/etc/pam.d/system-auth|1=
#%PAM-1.0
 
auth       required     pam_env.so
auth       sufficient   pam_unix.so try_first_pass likeauth nullok
auth       sufficient   pam_ldap.so use_first_pass                                                    #
auth       required     pam_deny.so
 
account    sufficient   pam_ldap.so                                                                   #
account    required     pam_unix.so
 
password   required     pam_cracklib.so difok=2 minlen=8 dcredit=2 ocredit=2 try_first_pass retry=3
password   sufficient   pam_unix.so try_first_pass use_authtok nullok md5 shadow
password   sufficient   pam_ldap.so use_authtok use_first_pass                                        #
password   required     pam_deny.so
 
session    required     pam_limits.so
session    required     pam_unix.so
session    optional     pam_ldap.so                                                                   #
}}

Now change {{Path|/etc/ldap.conf}} to read: 

{{FileBox|filename=/etc/ldap.conf|1=
## #host 127.0.0.1
## #base dc=padl,dc=com
 
base dc=genfic,dc=com
## #rootbinddn uid=root,ou=People,dc=genfic,dc=com
bind_policy soft
bind_timelimit 2
ldap_version 3
nss_base_group ou=Group,dc=genfic,dc=com
nss_base_hosts ou=Hosts,dc=genfic,dc=com
nss_base_passwd ou=People,dc=genfic,dc=com
nss_base_shadow ou=People,dc=genfic,dc=com
pam_filter objectclass=posixAccount
pam_login_attribute uid
pam_member_attribute memberuid
pam_password exop
scope one
timelimit 2
uri ldap://ldap.genfic.com/ ldap://ldap1.genfic.com ldap://ldap2.genfic.com
}}

Next, copy over the (OpenLDAP) {{Path|ldap.conf}} file from the server to the client so the clients are aware of the LDAP environment: 

{{RootCmd|scp ldap-server:/etc/openldap/ldap.conf /etc/openldap}}

Finally, configure your clients so that they check the LDAP for system accounts: 

{{FileBox|filename=/etc/nsswitch.conf|1=
passwd:         files ldap
group:          files ldap
shadow:         files ldap
}}

If you noticed one of the lines you pasted into your {{Path|/etc/ldap.conf}} was commented out (the <code>rootbinddn</code> line): you don't need it unless you want to change a user's password as superuser. In this case you need to echo the root password to {{Path|/etc/ldap.secret}} in plaintext. This is '''DANGEROUS''' and should be chmoded to 600. What you might want to do is keep that file blank and when you need to change someone's password that's both in the LDAP and {{Path|/etc/passwd}}, put the pass in there for 10 seconds while changing the users password and remove it when done.

== Migrate existing data to LDAP ==

Configuring OpenLDAP for centralized administration and management of common Linux/Unix items isn't easy, but thanks to some tools and scripts available on the Internet, migrating a system from a single-system administrative point-of-view towards an OpenLDAP-based, centralized managed system isn't hard either. 

Go to [http://www.padl.com/OSS/MigrationTools.html http://www.padl.com/OSS/MigrationTools.html] and fetch the scripts there. You'll need the migration tools and the {{Path|make_master.sh}} script. 

Next, extract the tools and copy the {{Path|make_master.sh}} script inside the extracted location: 

{{RootCmd|mktemp -d|output=<pre>
/tmp/tmp.zchomocO3Q
</pre>}}

{{RootCmd|cd /tmp/tmp.zchomocO3Q
|tar xvzf /path/to/MigrationTools.tgz
|mv /path/to/make_master.sh MigrationTools-47
|cd MigrationTools-47</pre>}}

The next step now is to migrate the information of your system to OpenLDAP. The {{Path|make_master.sh}} script will do this for you, after you have provided it with the information regarding your LDAP structure and environment. 

At the time of writing, the tools require the following input: 

{| class="wikitable" style="text-align: left;" 
|- 
! Input
! Description
! Example
|- 
| LDAP BaseDN
| The base location (root) of your tree
| dc=genfic,dc=com
|- 
| Mail domain
| Domain used in e-mail addresses
| genfic.com
|- 
| Mail host
| FQDN of your mail server infrastructure
| smtp.genfic.com
|- 
| LDAP Root DN
| Administrative account information for your LDAP structure
| cn=Manager,dc=genfic,dc=com
|- 
| LDAP Root Password
| Password for the administrative account, cfr earlier <code>slappasswd</code> command
| 
|-
|}

The tool will also ask you which accounts and settings you want to migrate. 

{{Warning| You don't need to make changes to pam.d/system-auth}}

== Replication ==

=== High availability ===

To setup replication of changes across multiple LDAP systems. Replication within OpenLDAP is, in this guide, set up using a specific replication account ( <code>ldapreader</code> ) which has read rights on the primary LDAP server and which pulls in changes from the primary LDAP server to the secondary. 

This setup is then mirrored, allowing the secondary LDAP server to act as a primary. Thanks to OpenLDAP's internal structure, changes are not re-applied if they are already in the LDAP structure.

=== Setting Up Replication ===

To setup replication, first setup a second OpenLDAP server, similarly as above. However take care that, in the configuration file:

* The ''sync replication provider'' is pointing to the ''other'' system

* The ''serverID'' of each OpenLDAP system is different

Next, create the synchronisation account. We will create an LDIF file (the format used as data input for LDAP servers) and add it to each LDAP server: 

{{Cmd|slappasswd -s myreaderpassword|output=<pre>
 {SSHA}XvbdAv6rdskp9HgFaFL9YhGkJH3HSkiM
</pre>}}

{{Cmd|cat ldapreader.ldif|output=<pre>
dn: cn=ldapreader,dc=genfic,dc=com
userPassword: {SSHA}XvbdAv6rdskp9HgFaFL9YhGkJH3HSkiM
objectClass: organizationalRole
objectClass: simpleSecurityObject
cn: ldapreader
description: LDAP reader used for synchronization
</pre>}}

{{Cmd|ldapadd -x -W -D "cn{{=}}Manager,dc{{=}}genfic,dc{{=}}com" -f ldapreader.ldif|output=<pre>
Password: ## enter the administrative password
</pre>}}

== LDAP Server Security Settings ==

=== OpenLDAP permissions ===

If we take a look at {{Path|/etc/openldap/slapd.conf}} you'll see that you can specify the ACLs (permissions if you like) of what data users can read and/or write: 

{{FileBox|filename=/etc/openldap/slapd.conf|1=
access to attrs=userPassword,gecos,description,loginShell
  by self write
  
access to *
  by dn="uid=root,ou=People,dc=genfic,dc=com" write
  by users read
  by anonymous auth
}}

This gives you access to everything a user should be able to change. If it's your information, then you got write access to it; if it's another user their information then you can read it; anonymous people can send a login/pass to get logged in. There are four levels, ranking them from lowest to greatest: <code>auth search read write</code>. 

The next ACL is a bit more secure as it blocks normal users to read other people their shadowed password: 

{{FileBox|filename=/etc/openldap/slapd.conf|1=
access to attrs="userPassword"
  by dn="uid=root,ou=People,dc=genfic,dc=com" write
  by dn="uid=John,ou=People,dc=genfic,dc=com" write
  by anonymous auth
  by self write
  by * none
 
access to *
  by dn="uid=root,ou=People,dc=genfic,dc=com" write
  by dn="uid=John,ou=People,dc=genfic,dc=com" write
  by * search
}}

This example gives root and John access to read/write/search for everything in the the tree below {{Path|dc{{=}}genfic,dc{{=}}com}}. This also lets users change their own <code>userPassword</code>'s. As for the ending statement everyone else just has a search ability meaning they can fill in a search filter, but can't read the search results. Now you can have multiple ACLs but the rule of the thumb is it processes from bottom up, so your toplevel should be the most restrictive one.

== Работа с OpenLDAP ==

=== Maintaining the directory ===

You can start using the directory to authenticate users in apache/proftpd/qmail/samba. You can manage it with [https://www.ldap-account-manager.org/lamcms/ LAM (Ldap Account Manager)], phpldapadmin, diradm, jxplorer, or lat, which provide easy management interfaces.

== Благодарности ==

We would like to thank Matt Heler for lending us his box for the purpose of this guide. Thanks also go to the cool guys in #ldap @ irc.freenode.net 

[[Category:Server and Security]] {{Migrated|originalauthors=Benjamin Coles, swift, Brandon Hale, Benny Chuang, jokey, nightmorph}}
