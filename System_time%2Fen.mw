<languages />
{{InfoBox stack
|{{InfoBox wikipedia|text=System time|header=true}}
|{{InfoBox wikipedia|Real-time clock|text=Real-time clock}}
|{{InfoBox wikipedia|Time zone|text=Time zone}}
}}


The '''system time''', backed by the system clock, [[Article description::is used in Unix systems to keep track of time.]] It can be set by an onboard hardware clock or by an external time server.

== Preface ==

=== Software clock vs Hardware clock ===

The [[#System clock|system clock]], provided by the kernel, is implemented as a simple count of the number of ticks that have transpired since the 1 January 1970 00:00:00 UTC. This is called [[Wikipedia:Unix time|Unix time]].

The [[#Hardware clock|hardware clock]] (also known as real-time clock or RTC) is typically a component on the mainboard. It runs independent of the state of the operating system all the time, also when the computer is shutdown.

=== UTC time vs localtime ===

The time for hardware clock can be modified to represent two standards: localtime or [[Wikipedia:Coordinated Universal Time|UTC time]]. The localtime is the real time of the time zone including [[Wikipedia:Daylight saving time|DST]]. Preferred is UTC time because the system time gets computed by adding the time zone difference and DST. So daylight saving changes get automatically applied and changing the time zone are possible without changing the hardware clock. Exceptions can be made when using a dual-boot system; this is when the other operating system does not support or is not configured for an UTC hardware clock (by default, Windows uses localtime).

== Configuration ==

== Time zone ==

In order to keep time properly, select the proper time zone so the system knows where it is located.

==== OpenRC ====

See [[Handbook:AMD64/Installation/Base#Timezone|Timezone (AMD64 Handbook)]].

=== systemd ===

[[systemd]] comes with the {{c|timedatectl}} command to manage the time zone:

To check the current zone:

{{Cmd|timedatectl}}

To list available zones:

{{Cmd|timedatectl list-timezones}}

To change the time zone, e.g. for Germany:

{{RootCmd|timedatectl set-timezone Europe/Berlin}}

== LC_TIME ==

This [[Localization/Guide#Environment_variables_for_locales|environment variable]] defines formatting of dates and times. For more details see [https://www.gnu.org/software/libc/manual/html_node/Locale-Categories.html#index-LC_005fTIME The GNU C Library]

=== System clock ===

Typically the system clock time is set up by the hardware clock on boot. Alternatively it is possible to manually set the system clock or use a network time server.

The {{c|date}} command can be used to manage the system clock time:

To check the current software clock time:

{{Cmd|date}}

To set the system clock, e.g. 12:34, May. 6, 2016:

{{RootCmd|date 050612342016}}

==== Time server ====

See the [[Ntp|NTP]] article for information concerning the use of time servers.

==== systemd ====

systemd comes with the {{c|timedatectl}} command to manage the system clock time:

To check the current software clock time:

{{Cmd|timedatectl}}

To set the system clock:

{{RootCmd|timedatectl set-time "2012-12-17 12:30:59"}}

=== Hardware clock ===

To have a hardware clock, the following kernel options must be activated:

{{KernelBox|title=Necessary kernel options for a hardware clock|1=
Device Drivers  --->
    [*] Real Time Clock  --->
        [ ]   Set system time from RTC on startup and resume
        [ ]   Set the RTC time based on NTP synchronization
        [*]   /sys/class/rtc/rtcN (sysfs)
        [*]   /proc/driver/rtc (procfs for rtc0)
        [*]   /dev/rtcN (character devices)
        <*>   PC-style 'CMOS'
}}

At runtime, to check the current hardware clock time:

{{RootCmd|hwclock --show}}

To set the hardware clock to the current system clock:

{{RootCmd|hwclock --systohc}}

=== Syncing Hardware clock and System time ===

Typically the hardware clock is used to setup the system clock on boot. This can be done by the kernel itself or by a boot service (init script). Also on shutdown the kernel or a service can write the software clock to the hardware clock. This aids the system in having the correct time on boot.

==== In-kernel method ====

On a sufficiently modern kernel (3.9 or newer), Linux can be configured to handle setting the system time automatically. To do so, enable the '''Set system time from RTC on startup and resume''' (<var>CONFIG_RTC_HCTOSYS</var>) and '''Set the RTC time based on NTP synchronization''' (<var>CONFIG_RTC_SYSTOHC</var>) kernel options:

{{KernelBox|title=Letting the kernel sync the system clock|1=<nowiki />
    Device Drivers --->
      [*] Real Time Clock --->
            [*]   Set system time from RTC on startup and resume
            (rtc0)  RTC used to set the system time
            [*]   Set the RTC time based on NTP synchronization
            (rtc0)  RTC used to synchronize NTP adjustment
            [*]   /sys/class/rtc/rtcN (sysfs)
            [*]   /proc/driver/rtc (procfs for rtc0)
            [*]   /dev/rtcN (character devices)
            <*>   PC-style 'CMOS'
}}

The '''Set the RTC time based on NTP synchronization''' kernel option is currently supported by [[chrony]]<ref>chrony. [https://chrony.tuxfamily.org/comparison.html Comparison of NTP implementations], [https://chrony.tuxfamily.org/ chrony], March 1st, 2017. Retrieved on July 11th, 2017.</ref>, [[NTP]] and [[OpenNTPD]] since version 5.9p1<ref>OpenNTPD. [http://www.openntpd.org/txt/release-5.9p1.txt OpenNTPD 5.9p1], [http://www.openntpd.org/ OpenNTPD], March 29th, 2016. Retrieved on July 11th, 2017.</ref>.

To check if the hardware time is updated, install {{Package|net-misc/adjtimex}} and run:

{{RootCmd|adjtimex --print {{!}} grep status}}

The 64 bit of the reported number should be unset (0). More information in {{c|hwclock}} man pages (search '11 minute mode').

==== OpenRC ====

When using OpenRC the {{Path|hwclock}} init script can set the system clock on boot and sync system time to the hardware clock on shutdown. The service is enabled by default and should be ''disabled'' in favor of the above mentioned in-kernel method. The {{Path|hwclock}} script should ''not'' be run when using the kernel's real time clock. 

{{RootCmd|rc-update delete hwclock boot}}

{{Note|It could however happen hwclock being started as dependency of another rc-service, e.g. [https://forums.gentoo.org/viewtopic-t-1069418.html sysklogd].  In this case the rc-service '''osclock''' should be added to the same runlevel as the dependent rc-service.}}

If however there is a need for using the OpenRC, set both <var>clock_hctosys</var> and <var>clock_systohc</var> to <code>YES</code> in {{Path|/etc/conf.d/hwclock}}. By default the service is configured for UTC time standard. To change to localtime add <code>clock="local"</code>.

{{FileBox|filename=/etc/conf.d/hwclock|title=Adding hardware clock sync|lang=bash|1=
clock_hctosys="YES" 
clock_systohc="YES"
# clock="local"
}}

Restart the {{Path|hwclock}} service and have the hardware clock init script run on system boot:

{{RootCmd
|rc-service hwclock restart
|rc-update add hwclock boot
}}

==== systemd ====

[[systemd]] can be used to set the system clock on boot. Use {{c|timedatectl}} to manage the hardware clock:

To check the current hardware clock time:

{{Cmd|timedatectl {{!}} grep "RTC time"}}

To set the hardware clock to the current system clock (UTC time standard):

{{RootCmd|timedatectl set-local-rtc 0}}

To set the hardware clock to the current system clock (localtime time standard):

{{RootCmd|timedatectl set-local-rtc 1}}

== Troubleshooting ==

=== Dual booting with Windows ===

Systems that dual boot with another operating system, such as Windows, generally have a struggle over the hardware clock. To make Windows not adjust the hardware clock back to local time, add the following registry entry.

For 64-bit Windows, open {{c|regedit}} then browse to {{Path|HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInformation}}. Create a new QWORD entry called <var>RealTimeIsUniversal</var>, then set its value to <code>1</code>. Reboot the system. The clock should now be in UTC time.

== See also ==

* [[Network Time Protocol]]
* [[Ntp|NTP]] - An implementation of the Network Time Protocol.
* [[chrony]] - A versatile implementation of the Network Time Protocol.
* [[OpenNTPD|OpenNTPD]] - Lightweight NTP server ported from OpenBSD.

== External resources ==

* https://lifehacker.com/5742148/fix-windows-clock-issues-when-dual-booting-with-os-x - Dual booting with MS Windows, set RealTimeIsUniversal. Also tested with [[UEFI_Dual_boot_with_Windows_7/8|Windows 10]].
* http://tldp.org/HOWTO/Clock-2.html - The Clock Mini-HOWTO.

== References ==

{{reflist}}


[[Category:Localization]]
