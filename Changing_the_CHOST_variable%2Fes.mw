<languages />

{{Metadata|abstract=Este documento describe como cambiar la variable CHOST en un sistema ya existente.}}

Este documento describe como cambiar la variable <var>[[CHOST]]</var> en un sistema ya existente.

== Introducción ==

Cambiar el <var>CHOST</var> es una cuestión importante ya que puede desestabilizar seriamente un sistema. Así pues, ¿Por qué hay una guía para algo que puede crear tantos quebraderos de cabeza? 

Hay ciertas situaciones en las que el cambio de la variable <var>CHOST</var> es inevitable, por ejemplo, cuando se actualiza a glibc 2.4 y el usuario comprueba que el <var>CHOST</var> actual es i386, lo que hace imposible el uso de nptl. En este caso no hay muchas opciones y cambiar <var>CHOST</var> es una de ellas. 

Incluso después de seguir estas instrucciones pueden surgir problemas así que, por favor, asegúrese de leer y ejecutarlas con mucho cuidado. En este ejemplo se cambiará la variable <var>CHOST</var> desde i386 a i686. Por favor, modifique las órdenes apropiadamente dependiendo de la situación del usuario. 

== Cambiar la variable CHOST ==

=== Construir los paquetes ===

Para comenzar con el cambio de la variable <var>CHOST</var>, edite el archivo  {{Path|/etc/portage/make.conf}} y cambie el valor de <var>CHOST</var> para adaptarlo a los requisitos. A continuación reconstruya los siguientes paquetes en este orden: 

{{Emerge|binutils gcc glibc|params+=--oneshot}}

{{Important|Por favor, observe que realizar las actualizaciones principales de gcc que se ejecutan al mismo tiempo que se cambia la variable <var>CHOST</var> (por ejemplo, comenzar con gcc 3.3, CHOST i386 y cambiar a gcc 4.1, CHOST i686) puede conducir a graves efectos laterales. Aunque sea posible realizarlo, es difícil predecir problemas potenciales que pueden surgir y prácticamente imposible documentarlos en esta guía. Como consecuencia de ello, por favor, haga una cosa cada vez, por ejemplo, actualice gcc en primer lugar conforme la guía para [[Upgrading_GCC/es|Actualizar GCC]] y luego cambie el <var>CHOST</var>. En un sistema con <var>CHOST</var> definido a un valor i386, deberá enmascarar glibc 2.4 (o más reciente) durante la actualización de gcc ya que no puede se puede utilizar con i386. Desenmascárelo una vez haya realizado el cambio completamente.}}

{{Note|Puede que se necesite lanzar {{c|binutils-config}} antes de compilar gcc.}}

=== Comprobar que la cosa funciona ===

Ahora es el momento de asegurarse de que los ajustes {{c|gcc-config}} y {{c|binutils-config}} son correctos y que no nada que sobre en {{Path|/etc/env.d/}}. 

The output of {{c|gcc-config}} and {{c|binutils-config}} should look like the following:

{{Note|Probablemente la salida será distinta dependiendo de la versión de gcc y de los ajustes <var>CHOST</var>. En el ejemplo de abajo se utiliza gcc 4.1.1 en un arquitectura i686.}} 

{{RootCmd|gcc-config -l|output=<pre>
 [1] i686-pc-linux-gnu-4.1.1 *</pre>}}

{{RootCmd|gcc-config -c|output=<pre>
i686-pc-linux-gnu-4.1.1</pre>}}

{{RootCmd|binutils-config -l|output=<pre>
 [1] i686-pc-linux-gnu-2.16.1 *
# binutils-config -c
i686-pc-linux-gnu-2.16.1
</pre>
}}

A continuación compruebe si hay referencias a la variable <var>CHOST</var> anterior en {{Path|/etc/env.d/}}: 

{{RootCmd|cd /etc/env.d/
|grep 386 *|output=<pre>
05gcc-i386-pc-linux-gnu:PATH="/usr/i386-pc-linux-gnu/gcc-bin/4.1.1"
05gcc-i386-pc-linux-gnu:ROOTPATH="/usr/i386-pc-linux-gnu/gcc-bin/4.1.1"
</pre>
}}

{{Note|Puede que esto ocurra en todos los casos, pero en este, {{Path|05gcc-i386-pc-linux-gnu}} contiene referencias al valor anterior de <var>CHOST</var>. Las cosas pueden ser de otra forma en otros sistemas dependiendo de el valor de <var>CHOST</var> hacia o desde el que se está cambiando. En algunos casos no se deja ninguna referencia. El nombre también puede ser {{Path|05gcc-''nuevo_CHOST''-pc-linux-gnu}}.}}

Antes de eliminar el archivo, compruebe que haya ficheros con el valor de <var>CHOST</var> actualizado: 

{{RootCmd|grep 686 *|output=<pre>
05binutils:MANPATH=/usr/share/binutils-data/i686-pc-linux-gnu/2.16.1/man
05binutils:INFOPATH=/usr/share/binutils-data/i686-pc-linux-gnu/2.16.1/info
05binutils:LDPATH=/usr/i686-pc-linux-gnu/lib
05gcc:PATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
05gcc:ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
05gcc:MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/man"
05gcc:INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/info"
05gcc:LDPATH="/usr/lib/gcc/i686-pc-linux-gnu/4.1.1"
</pre>
}}

Este tiene buena pinta, ya que siempre debe haber un solo archivo para <code>gcc</code> en {{Path|/etc/env.d/}} ({{Path|05gcc}} en este ejemplo), por lo que se debe eliminar el que tiene las referencias incorrectas: 

{{RootCmd|rm 05gcc-i386-pc-linux-gnu}}

Lo mismo se aplica a {{Path|binutils}}, si hay uno extra, compruebe el que está desactualizado y elimínelo. A continuación compruebe el contenido de {{Path|/etc/env.d/binutils/}}.

{{RootCmd|cd /etc/env.d/binutils/
|ls -la|output=<pre>
total 8
-rw-r--r-- 1 root root  15 Sep  3 13:48 config-i686-pc-linux-gnu
-rw-r--r-- 1 root root 126 Sep  3 13:48 i686-pc-linux-gnu-2.16.1
</pre>}}

{{RootCmd|cat config-i686-pc-linux-gnu|output=<pre>
CURRENT=2.16.1</pre>}}

{{RootCmd|cat i686-pc-linux-gnu-2.16.1|output=<pre>
TARGET="i686-pc-linux-gnu"
VER="2.16.1"
LIBPATH="/usr/lib/binutils/i686-pc-linux-gnu/2.16.1"
FAKE_TARGETS="i686-pc-linux-gnu"
</pre>
}}

Este parece correcto, los dos ficheros deberían estar ahí. Es el momento de moverlos al directorio {{Path|gcc}}. 

{{RootCmd|cd /etc/env.d/gcc|output=<pre>
# ls -la
total 12
-rw-r--r-- 1 root root  32 Sep  3 16:43 config
-rw-r--r-- 1 root root  32 Aug  3 14:25 config-i386-pc-linux-gnu
-rw-r--r-- 1 root root 292 Sep  3 16:43 i686-pc-linux-gnu-4.1.1
</pre>}}

{{RootCmd|cat config|output=<pre>
CURRENT=i686-pc-linux-gnu-4.1.1</pre>}}

{{RootCmd|cat config-i386-pc-linux-gnu|output=<pre>
CURRENT=i386-pc-linux-gnu-4.1.1</pre>}}

{{RootCmd|cat i686-pc-linux-gnu-4.1.1|output=<pre>
PATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
LDPATH="/usr/lib/gcc/i686-pc-linux-gnu/4.1.1"
GCCBITS="32"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/info"
STDCXX_INCDIR="g++-v4"
</pre>
}}

{{Path|config}} y {{Path|i686-pc-linux-gnu-4.1.1}} son correctos, sin embargo {{Path|config-i386-pc-linux-gnu}} un sobrante que se debe eliminar. 

{{Note|De nuevo, el nombre del archivo que contiene referencias a una versión anticuada de gcc puede tener un nombre diferente, por ejemplo, {{Path|config-i686-pc-linux-gnu}} incluso si el sistema se está cambiando a (en este caso) i686. Es importante identificar el archivo leyendo su contenido, no sólo su nombre.}}

{{RootCmd|rm config-i386-pc-linux-gnu}}

Ahora lance las siguientes órdenes para actualizar el entorno: 

{{RootCmd|env-update && source /etc/profile}}

A continuación compruebe que todo está en su sitio: 

{{RootCmd|grep -r 386 /etc/env.d/}}

Si todavía aparece algún fichero, inténte echarle un vistazo antes de continuar.

=== Terminar con el cambio ===

Ahora es necesario hacer de nuevo emerge de {{Package|sys-devel/libtool}} y lanzar {{c|fix_libtool_files.sh}} que se puede encontrar en {{Path|/usr/share/gcc-data/''$CHOST''/''<versión-de-gcc>''/}}. Asegúrese de utilizar la versión adecuada de gcc (La actual aquí es la 4.1.1) y pase la arquitectura anterior (aquí es la i386) como argumento. Reemplace <code>$CHOST</code> por el nuevo valor <var>CHOST</var>, y <code><versión-de-gcc></code> por la versión de gcc. En este ejemplo se asume un valor para <var>CHOST</var> aplicable a i686. 

{{Emerge|libtool|params+=--oneshot}}

{{RootCmd|/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/fix_libtool_files.sh 4.1.1 --oldarch i386-pc-linux-gnu}}

Ahora será posible reconstruir todos los paquetes: 

{{RootCmd|emerge -e world}}

En teoría, no debería ser necesario hacerlo, pero no se puede garantizar al 100% que este es realmente el caso.

Se necesita reconstruir el siguiente conjunto de paquetes 

{{Emerge|python|params+=--oneshot}}

Todos los paquetes que utilizan la instalación de perl al directorio <var>CHOST</var> necesitan por tanto reconstruirlos. En este caso {{c|qfile}} no está disponible aún en el sistema, por tanto, se debe instalar en primer lugar {{Package|app-portage/portage-utils}}.

{{Emerge|portage-utils}}

Ahora se deben reconstruir todos los paquetes que tiene fichero instalados en la localización {{Path|/usr/lib/perl*}}:

{{RootCmd|emerge -av1 `qfile /usr/lib/perl* -Cq {{!}} sort -u`}}

When encountering other packages that need recompiling, please let us know through the [[Talk:Changing_the_CHOST_variable|discussion page]] of this guide.

=== Problemas comunes ===

Cuando se actualiza desde gcc 3.3 a 4.1 al mismo tiempo que se cambia la variable <var>CHOST</var> (por favor, no lo haga de cualquier modo), un par de usuarios informaron de paquetes rotos que necestan reconstrucción, como por ejemplo {{Package|sys-apps/groff}} y {{Package|mail-mta/courier}}: 

{{CodeBox|title=Mensaje de error|1=
error while loading shared libraries: libstdc++.so.5: cannot open shared object file: No such file or directory
}}

Esto ocurre porque durante la actualización, la variable <var>CHOST</var> no coincide exactamente con el valor de la variable <var>CTARGET</var>, causando que el compilador asuma que el sistema está utilizando compilación cruzada. Como consecuencia de todo esto, <var>LDPATH</var> no se inserta en {{Path|ld.so.conf}} y se produce este error. 

Por favor, consulte la guía de [[Upgrading GCC/es|Actualización de GCC]] para saber lo que se necesita reconstruir después de una actualización de GCC. 

En algunos casos poco comunes, esto también puede romper anteriores versiones de python. Esto se puede corregir añadiendo {{Path|/usr/lib/gcc-lib/i386-pc-linux-gnu/3.3.6}} (cambie esto de forma apropiada dependiendo de valor anterior de la variable  <var>CHOST</var> y de la versión de gcc) a {{Path|/etc/ld.so.conf}}, lanzando {{c|ldconfig}} y luego haciendo {{c|emerge libstdc++-v3}}. Sin embargo, como se puede comprobar, se debe evitar esta situación. No cambie <var>CHOST</var> y gcc al mismo tiempo.

=== Comentarios ===

That should be all, feedback (both if it worked, failed or other problems were encountered) is welcome, please use the [[Talk:Changing_the_CHOST_variable|discussion page]] or post to [https://forums.gentoo.org/viewtopic-t-494147.html this forum thread]. Much in this guide comes from vapier, thanks for your help!


{{Migrated|originalauthors=Wernfried Haas, Mike Frysinger, Chris White}}
