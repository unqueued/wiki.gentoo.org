<languages />

{{Metadata|abstract=Este documento describe como cambiar la variable CHOST en un sistema ya existente.}}

Este documento describe como cambiar la variable [[CHOST]] en un sistema ya existente.

== Introducción ==

Cambiar el CHOST es una cuestión importante ya que puede desestabilizar seriamente un sistema. Así pues, ¿Por qué hay una guía para algo que puede crear tantos quebraderos de cabeza? 

Hay ciertas situaciones en las que el cambio de la variable <code>CHOST</code> es inevitable, por ejemplo, cuando se actualiza a glibc 2.4 y el usuario comprueba que el <code>CHOST</code> actual es i386, lo que hace imposible el uso de nptl. En este caso no hay muchas opciones y cambiar <code>CHOST</code> es una de ellas. 

Incluso después de seguir estas instrucciones pueden surgir problemas así que, por favor, asegúrese de leer y ejecutarlas con mucho cuidado. En este ejemplo se cambiará la variable <code>CHOST</code> desde i386 a i686. Por favor, modifique las órdenes apropiadamente dependiendo de la situación del usuario. 

== Cambiar la variable CHOST ==

=== Construir los paquetes ===

Para comenzar con el cambio de la variable <code>CHOST</code>, edite el archivo  {{Path|/etc/portage/make.conf}} y cambie el valor de <code>CHOST</code> para adaptarlo a los requisitos. A continuación reconstruya los siguientes paquetes en este orden: 

{{Emerge|binutils gcc glibc}}

{{Important|Por favor, observe que realizar las actualizaciones principales de gcc que se ejecutan al mismo tiempo que se cambia la variable <code>CHOST</code> (por ejemplo, comenzar con gcc 3.3, CHOST i386 y cambiar a gcc 4.1, CHOST i686) puede conducir a graves efectos laterales. Aunque sea posible realizarlo, es difícil predecir problemas potenciales que pueden surgir y prácticamente imposible documentarlos en esta guía. Como consecuencia de ello, por favor, haga una cosa cada vez, por ejemplo, actualice gcc en primer lugar conforme la guía para [[Upgrading_GCC/es|Actualizar GCC]] y luego cambie el <code>CHOST</code>. En un sistema con <code>CHOST</code> definido a un valor i386, deberá enmascarar glibc 2.4 (o más reciente) durante la actualización de gcc ya que no puede se puede utilizar con i386. Desenmascárelo una vez haya realizado el cambio completamente.}}

{{Note|Puede que se necesite lanzar <kbd>binutils-config</kbd> antes de compilar gcc.}}

=== Comprobar que la cosa funciona ===

Ahora es el momento de asegurarse de que los ajustes <tt>gcc-config</tt> y <tt>binutils-config</tt> son correctos y que no nada que sobre en {{Path|/etc/env.d/}}. 

La salida de <tt>gcc-config</tt> y <tt>binutils-config</tt> debería tener el siguiente aspecto:

{{Note|Probablemente la salida será distinta dependiendo de la versión de gcc y de los ajustes <code>CHOST</code>. En el ejemplo de abajo se utiliza gcc 4.1.1 en un arquitectura i686.}} 

{{RootCmd|gcc-config -l|output=<pre>
 [1] i686-pc-linux-gnu-4.1.1 *</pre>}}

{{RootCmd|gcc-config -c|output=<pre>
i686-pc-linux-gnu-4.1.1</pre>}}

{{RootCmd|binutils-config -l|output=<pre>
 [1] i686-pc-linux-gnu-2.16.1 *
# binutils-config -c
i686-pc-linux-gnu-2.16.1
</pre>
}}

A continuación compruebe si hay referencias a la variable <code>CHOST</code> anterior en {{Path|/etc/env.d/}}: 

{{RootCmd|cd /etc/env.d/
|grep 386 *|output=<pre>
05gcc-i386-pc-linux-gnu:PATH="/usr/i386-pc-linux-gnu/gcc-bin/4.1.1"
05gcc-i386-pc-linux-gnu:ROOTPATH="/usr/i386-pc-linux-gnu/gcc-bin/4.1.1"
</pre>
}}

{{Note|Puede que esto ocurra en todos los casos, pero en este, {{Path|05gcc-i386-pc-linux-gnu}} contiene referencias al valor anterior de <code>CHOST</code>. Las cosas pueden ser de otra forma en otros sistemas dependiendo de el valor de <code>CHOST</code> hacia o desde el que se está cambiando. En algunos casos no se deja ninguna referencia. El nombre también puede ser {{Path|05gcc-''nuevo_CHOST''-pc-linux-gnu}}.}}

Antes de eliminar el archivo, compruebe que haya ficheros con el valor de <code>CHOST</code> actualizado: 

{{RootCmd|grep 686 *|output=<pre>
05binutils:MANPATH=/usr/share/binutils-data/i686-pc-linux-gnu/2.16.1/man
05binutils:INFOPATH=/usr/share/binutils-data/i686-pc-linux-gnu/2.16.1/info
05binutils:LDPATH=/usr/i686-pc-linux-gnu/lib
05gcc:PATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
05gcc:ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
05gcc:MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/man"
05gcc:INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/info"
05gcc:LDPATH="/usr/lib/gcc/i686-pc-linux-gnu/4.1.1"
</pre>
}}

Este tiene buena pinta, ya que siempre debe haber un solo archivo para <code>gcc</code> en {{Path|/etc/env.d/}} ({{Path|05gcc}} en este ejemplo), por lo que se debe eliminar el que tiene las referencias incorrectas: 

{{RootCmd|rm 05gcc-i386-pc-linux-gnu}}

Lo mismo se aplica a <tt>binutils</tt>, si hay uno extra, compruebe el que está desactualizado y elimínelo. A continuación compruebe el contenido de {{Path|/etc/env.d/binutils/}}.

{{RootCmd|cd /etc/env.d/binutils/
|ls -la|output=<pre>
total 8
-rw-r--r-- 1 root root  15 Sep  3 13:48 config-i686-pc-linux-gnu
-rw-r--r-- 1 root root 126 Sep  3 13:48 i686-pc-linux-gnu-2.16.1
</pre>}}

{{RootCmd|cat config-i686-pc-linux-gnu|output=<pre>
CURRENT=2.16.1</pre>}}

{{RootCmd|cat i686-pc-linux-gnu-2.16.1|output=<pre>
TARGET="i686-pc-linux-gnu"
VER="2.16.1"
LIBPATH="/usr/lib/binutils/i686-pc-linux-gnu/2.16.1"
FAKE_TARGETS="i686-pc-linux-gnu"
</pre>
}}

Este parece correcto, los dos ficheros deberían estar ahí. Es el momento de moverlos al directorio {{Path|gcc}}. 

{{RootCmd|cd /etc/env.d/gcc|output=<pre>
# ls -la
total 12
-rw-r--r-- 1 root root  32 Sep  3 16:43 config
-rw-r--r-- 1 root root  32 Aug  3 14:25 config-i386-pc-linux-gnu
-rw-r--r-- 1 root root 292 Sep  3 16:43 i686-pc-linux-gnu-4.1.1
</pre>}}

{{RootCmd|cat config|output=<pre>
CURRENT=i686-pc-linux-gnu-4.1.1</pre>}}

{{RootCmd|cat config-i386-pc-linux-gnu|output=<pre>
CURRENT=i386-pc-linux-gnu-4.1.1</pre>}}

{{RootCmd|cat i686-pc-linux-gnu-4.1.1|output=<pre>
PATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
LDPATH="/usr/lib/gcc/i686-pc-linux-gnu/4.1.1"
GCCBITS="32"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/info"
STDCXX_INCDIR="g++-v4"
</pre>
}}

{{Path|config}} y {{Path|i686-pc-linux-gnu-4.1.1}} son correctos, sin embargo {{Path|config-i386-pc-linux-gnu}} un sobrante que se debe eliminar. 

{{Note|De nuevo, el nombre del archivo que contiene referencias a una versión anticuada de gcc puede tener un nombre diferente, por ejemplo, {{Path|config-i686-pc-linux-gnu}} incluso si el sistema se está cambiando a (en este caso) i686. Es importante identificar el archivo leyendo su contenido, no sólo su nombre.}}

{{RootCmd|rm config-i386-pc-linux-gnu}}

Ahora lance las siguientes órdenes para actualizar el entorno: 

{{RootCmd|env-update && source /etc/profile}}

A continuación compruebe que todo está en su sitio: 

{{RootCmd|grep -r 386 /etc/env.d/}}

Si todavía aparece algún fichero, inténte echarle un vistazo antes de continuar.

=== Terminar con el cambio ===

Now it is necessary to re-emerge <tt>libtool</tt> and run <tt>fix_libtool_files.sh</tt> which can be found in {{Path|/usr/share/gcc-data/''$CHOST''/''<gcc-version>''/}}. Make sure to use the correct gcc version (the current one, 4.1.1 here) and pass the old architecture (i386 here) as argument. Replace <code>$CHOST</code> with the new <code>CHOST</code> value, and <code><gcc-version></code> with the gcc version. This example assumes a <code>CHOST</code> value applicable to i686. 

{{Emerge|libtool}}

{{RootCmd|/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/fix_libtool_files.sh 4.1.1 --oldarch i386-pc-linux-gnu}}

It is now possible to rebuild all the packages: 

{{RootCmd|emerge -e world}}

In theory, it should not be necessary to do so, but it can not be 100% guaranteed that this is actually the case.

Se necesita reconstruir el siguiente conjunto de paquetes 

{{Emerge|python}}

All packages using perl install to the <code>CHOST</code> directory and hence need rebuilding. In case <tt>qfile</tt> is not available on the system yet, install {{Package|app-portage/portage-utils}} first.

{{Emerge|portage-utils}}

Now rebuild all packages that have files installed in any {{Path|/usr/lib/perl*}} location:

{{RootCmd|emerge -av1 `qfile /usr/lib/perl* -Cq {{!}} sort -u`}}

When encountering other packages that need recompiling, please let us know through the [[{{TALKPAGENAME}}|discussion page]] of this guide.

=== Problemas comunes ===

When upgrading from gcc 3.3 to 4.1 at the same time as changing the <code>CHOST</code> variable (please don't do that anyway), a couple of users reported broken packages that need recompiling, such as <tt>groff</tt> and <tt>courier</tt>: 

{{CodeBox|title=Mensaje de error|1=
error while loading shared libraries: libstdc++.so.5: cannot open shared object file: No such file or directory
}}

This happens because during the upgrade, the <code>CHOST</code> variable doesn't exactly match the <code>CTARGET</code> variable value, making the compiler assume that the system is using cross-compiling. As a consequence, <code>LDPATH</code> isn't inserted into {{Path|ld.so.conf}}, resulting in this error. 

Please see the [[Upgrading GCC|GCC upgrade guide]] for what needs to be rebuilt after a GCC upgrade. 

In some rare cases, this can break old versions of python, too. This may be fixed by adding {{Path|/usr/lib/gcc-lib/i386-pc-linux-gnu/3.3.6}} (change accordingly to the old <code>CHOST</code> and gcc version) to {{Path|/etc/ld.so.conf}}, running <kbd>ldconfig</kbd> and then <kbd>emerge libstdc++-v3</kbd>. However, as can be seen, this situation needs to be avoided - don't change <code>CHOST</code> and gcc at the same time.

=== Comentarios ===

Eso sería todo, los comentarios (tanto si funcionó, falló o se encontraron otros problemas) son bienvenidos, por favor, utilice la [[{{TALKPAGENAME}}|página de discusión]] o publique un hilo de discusión en [https://forums.gentoo.org/viewtopic-t-494147.html este hilo del foro]. La mayor parte de esta guía la ha escrito vapier, ¡Gracias por tu ayuda!


{{Migrated|originalauthors=Wernfried Haas, Mike Frysinger, Chris White}}
