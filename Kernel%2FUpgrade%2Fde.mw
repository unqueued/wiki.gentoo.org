<languages />

Dieser Artikel beschreibt die Schritte, auf einen neuen [[Special:MyLanguage/Kernel|Kernel]] zu aktualisieren.

== Installation ==

Ein Kernel Upgrade wird notwendig, wenn aktuelle Kernelquellen bei der Aktualisierung des Systems installiert werden oder wenn man selber neue Kernelquellen installiert.

== Konfiguration ==

Die Konfiguration entspricht weitestgehend der [[Special:MyLanguage/Kernel/Configuration|manuellen Konfiguration]] , da nur die Kernel-Konfigurationsdatei weiterverwendet wird. Alle Schritte sind hier der Vollständigkeit halber nochmal aufgeführt, für ausführlichere  Erklärungen siehe den genannten Artikel.

=== Symlink setzen ===

Zuerst setzt man den {{Path|/usr/src/linux}} Symlink, so dass er auf die neuen Kernelquellen zeigt. Dies kann mit einem der folgenden drei Methoden erfolgen:

; 1. 1. Die Kernelquellen mit aktivem symlink [[Special:MyLanguage/USE flag|USE Flag]] installieren
: Damit zeigt {{Path|/usr/src/linux}} auf die neu installierten Kernelquellen. Falls notwendig, kann der Symlink später mit den folgenden beiden Methoden geändert werden:

2. Den Symlink mit '''eselect''' setzen:

: {{RootCmd| eselect kernel list |
  |output=Available kernel symlink targets:<br /> &nbsp; [1] linux-3.3.8-gentoo *<br /> &nbsp; [2]   linux-3.4.9-gentoo}}

: Hier werden die verfügbaren Kernelquellen angezeigt. Das Sternchen zeigt die momentan gewählten Kernelquellen an. Um zu anderen  Kernelquellen zu wechseln, z.B. zum zweiten Eintrag, schreibe:

: {{RootCmd|eselect kernel set 2}}

3. Den Symlink manuell setzen:

: {{RootCmd|ln -sf /usr/src/linux-3.4.9 /usr/src/linux |
  |ls -l /usr/src/linux |
  |output=lrwxrwxrwx 1 root root 11 Aug 29 22:10 /usr/src/linux -> /usr/src/linux-3.4.9-gentoo}}

=== Bisherige Kernelkonfiguration kopieren ===
Die Konfiguration vom aktuell laufenden Kernel muss für die neue kopiert werden. Man findet sie an mehreren Orten:

<span class="mw-translate-fuzzy">
* Im [[Special:MyLanguage/procfs|procfs]] [[Special:MyLanguage/filesystem|Dateisystem]], falls die Kernel Option ''Kernel .config support'' im bisherigen Kernel aktiviert worden ist:
</span>

: {{RootCmd|zcat /proc/config.gz > /usr/src/linux/.config}}

<span class="mw-translate-fuzzy">
* Im <tt>/boot</tt> Verzeichnis, falls die Konfiguration dort installiert worden ist:
</span>

: {{RootCmd|cp /boot/config-$(uname -r) /usr/src/linux/.config}}

<span class="mw-translate-fuzzy">
* Im Kernelverzeichnis des bisherigen Kernels:
</span>

: {{RootCmd|cp /usr/src/linux-$(uname -r)/.config /usr/src/linux/}}

=== make oldconfig ===
Jetzt aktualisiert man die alte Konfigurationsdatei für den neuen Kernel:

{{RootCmd|cd /usr/src/linux
|make oldconfig}}

<span class="mw-translate-fuzzy">
Die folgende Konfiguration entspricht der textbasierten Konfiguration von '''make config'''. Bei Änderungen zwischen den Kernelversionen wird man aufgefordert, ob man den Treiber oder die Funktion aktivieren möchte. Ein Beispiel:
</span>

{{RootCmd|make oldconfig
|output=Anticipatory I/O scheduler (IOSCHED_AS) [Y/n/m/?] (NEW)
}}

<span class="mw-translate-fuzzy">
Das ''(NEW)'' am Ende der Zeile weist diese Option als neu aus. Direkt davor in eckigen Klammern stehen die möglichen Einstellungen: ''Y''es, ''n''o, ''m''odul oder ''?'', um die Hilfe anzuzeigen. Die empfohlene Einstellung ist groß geschrieben (hier ''Y''). Die Hilfe beschreibt den Treiber oder die Funktion.
</span>

Leider zeigt '''make oldconfig''' für die einzelne Option neben der Hilfe nur wenig zusätzliche Informationen, z.B. den Kontext, so dass es manchmal schwierig ist, die richtige Auswahl zu treffen. In diesem Fall ist es das Beste, sich den Namen der Option zu merken und die Auswahl später mit Hilfe der [[Special:MyLanguage/Kernel/Configuration#Configuration tools|grafischen Kernel Konfigurationsprogramme]] zu treffen.

== Externe Kernelmodule erneut installieren ==

<span class="mw-translate-fuzzy">
Externe Kernelmodule wie die proprietären Grafiktreiber [[Special:MyLanguage/nvidia|nvidia]] und [[Special:MyLanguage/fglrx|fglrx]] müssen für jeden neuen Kernel erneut installiert werden. Falls der neue Kernel bisher noch nicht kompiliert wurde, so muss der Kernel für die Installation von externen Kernelmodule vorbereitet werden:
</span>

{{RootCmd|make modules_prepare}}

=== Verwendung von Portage 2.1 (stabiler und Test-Zweig) ===

<span class="mw-translate-fuzzy">
Die Pakete können selber erneut installiert werden oder man [[Special:MyLanguage/emerge|installiert]] dafür das Hilfsprogramm {{Package|sys-kernel/module-rebuild}}:
</span>

{{Emerge|module-rebuild}}

<span class="mw-translate-fuzzy">
Nach der Installation lässt man '''module-rebuild''' nach externen Kernelmodulen suchen und in eine Liste eintragen:
</span>

{{RootCmd|module-rebuild populate}}

<span class="mw-translate-fuzzy">
'''module-rebuild''' merkt sich die Liste, so dass dieser Schritt nur beim Hinzufügen weiterer oder Wegfallen bestehenden externer Kernelmodule notwendig ist.
</span>

Der folgende Befehl installiert die externen Kernelmodule schließlich erneut:

{{RootCmd|module-rebuild rebuild}}

=== Verwendung von Pportage 2.2 ===

<span class="mw-translate-fuzzy">
Man installiert die Pakete erneut, indem man den ''@module-rebuild'' Satz nutzt:
</span>

{{Emerge|params+=--oneshot|@module-rebuild}}

== Kompilieren ==

<span class="mw-translate-fuzzy">
Ab hier kann man den Schritten im [[Special:MyLanguage/Kernel/Konfiguration#Kompilieren|manuelle Konfiguration]] Artikel folgen.
</span>

== Alte Kernel entfernen ==

<span class="mw-translate-fuzzy">
Siehe den [[Special:MyLanguage/Kernel/Removal|Kernel Deinstallation]] Artikel.
</span> 

== Links ==

<span class="mw-translate-fuzzy">
* [http://kernelnewbies.org/LinuxChanges Kernel Changelog mit einigen Beschreibungen (in Englisch)]
</span>

[[Category:Kernel]]
