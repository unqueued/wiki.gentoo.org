<languages />

Dieser Artikel beschreibt die Schritte, auf einen neuen [[Special:MyLanguage/Kernel|Kernel]] zu aktualisieren.

== Installation ==

Ein Kernel Upgrade wird notwendig, wenn bei der [[Special:MyLanguage/emerge|Aktualisierung des Systems]] aktuelle Kernelquellen installiert werden oder wenn man andere Kernelquellen als bisher selber installiert.

== Konfiguration ==

Die Konfiguration entspricht weitestgehend der [[Special:MyLanguage/Kernel/Configuration|manuellen Konfiguration]] , da nur die Kernel-Konfigurationsdatei weiterverwendet wird. Alle Schritte sind hier der Vollständigkeit halber nochmal aufgeführt, für ausführlichere  Erklärungen siehe den genannten Artikel.

=== Symlink setzen ===

Zuerst setzt man den <tt>/usr/src/linux</tt> Symlink, so dass er auf die neuen Kernelquellen zeigt. Dies kann mit einem der folgenden drei Methoden erfolgen:

; 1. 1. Die Kernelquellen mit aktivem symlink [[Special:MyLanguage/USE flag|USE Flag]] installieren
: Damit zeigt <tt>/usr/src/linux</tt> auf die neu installierten Kernelquellen. Falls notwendig, kann der Symlink später mit den folgenden beiden Methoden geändert werden:

; 2. Den Symlink mit '''eselect''' setzen:
: {{RootCmd|eselect kernel list|output=Available kernel symlink targets:<br /> &nbsp; [1] linux-2.6.39-gentoo-r2 *<br /> &nbsp; [2] linux-2.6.39-gentoo-r3}}
: Hier werden die verfügbaren Kernelquellen angezeigt. Das Sternchen zeigt die momentan gewählten Kernelquellen an. Um zu anderen  Kernelquellen zu wechseln, z.B. zum zweiten Eintrag, schreibe:
: {{RootCmd|eselect kernel set 2}}

; 3. Den Symlink manuell setzen:
: {{RootCmd|ln -sf /usr/src/linux-2.6.39-gentoo-r3 /usr/src/linux |
  |ls -l /usr/src/linux |
  |output=lrwxrwxrwx 1 root root 11 Aug 29 22:10 /usr/src/linux -> linux-2.6.39-gentoo-r3}}

=== Bisherige Kernelkonfiguration kopieren ===
Man kann die bisherige Konfiguration für den neuen Kernel wiederverwenden. Man kann sie an mehreren Orten finden:

* Im [[Special:MyLanguage/procfs|procfs]] [[Special:MyLanguage/filesystem|Dateisystem]], falls die Kernel Option ''Kernel .config support'' im bisherigen Kernel aktiviert worden ist:
: {{RootCmd|zcat /proc/config.gz > /usr/src/linux/.config}}

* Im <tt>/boot</tt> Ordner, falls die Konfiguration dort installiert worden ist:
: {{RootCmd|cp /boot/config-$(uname -r) /usr/src/linux/.config}}

* Im Kernelverzeichnis des bisherigen Kernels:
: {{RootCmd|cp /usr/src/linux-$(uname -r)/.config /usr/src/linux/}}

=== make oldconfig ===
Jetzt aktualisiert man die alte Konfigurationsdatei für den neuen Kernel:
{{RootCmd|cd /usr/src/linux
|make oldconfig}}

The following configuration parallels that of the text based configuration with '''make config'''. For every difference between the kernel versions you ask, if you want to activate the driver or feature. An example:
{{RootCmd|make oldconfig
|output=Anticipatory I/O scheduler (IOSCHED_AS) [Y/n/m/?] (NEW)
}}

The string ''(NEW)'' at the end of the line marks this option as new. Left to the string in square brackets are the possible answers: ''Y''es, ''n''o, ''m''odul or ''?'' to show the help. The recommend answer is capitalized (here ''Y''). The help explains the option or driver.

Unfortunately '''make oldconfig''' doesn't show - next to the help - a lot more information for each option, like the context, so that it is sometimes difficult to give the right answer. In this case you should remember the option, answer with ''n''o and have a look at the option afterwards in '''make menuconfig''':
{{RootCmd|make oldconfig
|output=...}}
{{RootCmd|make menuconfig}}

== Reinstall external kernel modules ==

You have to rebuild external kernel modules like the proprietary graphics drivers [[nvidia]] and [[fglrx]] for each new kernel. If the kernel hasn't been built yet, you have to first prepare it for the building of the external kernel modules:
{{RootCmd|make modules_prepare}}

=== Using stable portage ===

You can reinstall the packages yourself or you [[emerge|install]] the tool {{Package|sys-kernel/module-rebuild}}:
{{RootCmd|emerge module-rebuild}}

After the installation you let '''module-rebuild''' search for external kernel modules and add it to its list:
{{RootCmd|module-rebuild populate}}

'''module-rebuild''' keeps this list, so this step is only necessary after installing of new external kernel modules or removing them.

The following command reinstalls the external kernel modules then:
{{RootCmd|module-rebuild rebuild}}

=== Using portage-2.2 ===

You can rebuild the packages using the ''@module-rebuild'' set of portage-2.2:

{{RootCmd|emerge -1 @module-rebuild}}

== Build ==

Since here you can following the steps in the [[Kernel/Configuration#Build|manual configuration]] article.

== Removing old kernels ==

See the [[Kernel/Removal|kernel removing]] article. 

== Links ==

* [http://kernelnewbies.org/LinuxChanges kernel changelog with some explanations]

[[Category:Kernel]]
