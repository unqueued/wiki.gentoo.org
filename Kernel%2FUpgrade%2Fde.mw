<languages />

Dieser Artikel beschreibt die Schritte, auf einen neuen [[Special:MyLanguage/Kernel|Kernel]] zu aktualisieren.

== Installation ==

Ein Kernel Upgrade wird notwendig, wenn bei der [[Special:MyLanguage/emerge|Aktualisierung des Systems]] aktuelle Kernelquellen installiert werden oder wenn man andere Kernelquellen als bisher selber installiert.

== Konfiguration ==

Die Konfiguration entspricht weitestgehend der [[Special:MyLanguage/Kernel/Configuration|manuellen Konfiguration]] , da nur die Kernel-Konfigurationsdatei weiterverwendet wird. Alle Schritte sind hier der Vollständigkeit halber nochmal aufgeführt, für ausführlichere  Erklärungen siehe den genannten Artikel.

=== Symlink setzen ===

Zuerst setzt man den <tt>/usr/src/linux</tt> Symlink, so dass er auf die neuen Kernelquellen zeigt. Dies kann mit einem der folgenden drei Methoden erfolgen:

; 1. 1. Die Kernelquellen mit aktivem symlink [[Special:MyLanguage/USE flag|USE Flag]] installieren
: Damit zeigt <tt>/usr/src/linux</tt> auf die neu installierten Kernelquellen. Falls notwendig, kann der Symlink später mit den folgenden beiden Methoden geändert werden:

2. Den Symlink mit '''eselect''' setzen:
: {{RootCmd|eselect kernel list|output=Available kernel symlink targets:<br /> &nbsp; [1] linux-2.6.39-gentoo-r2 *<br /> &nbsp; [2] linux-2.6.39-gentoo-r3}}
: Hier werden die verfügbaren Kernelquellen angezeigt. Das Sternchen zeigt die momentan gewählten Kernelquellen an. Um zu anderen  Kernelquellen zu wechseln, z.B. zum zweiten Eintrag, schreibe:
: {{RootCmd|eselect kernel set 2}}

; 3. Den Symlink manuell setzen:
: {{RootCmd|ln -sf /usr/src/linux-2.6.39-gentoo-r3 /usr/src/linux |
  |ls -l /usr/src/linux |
  |output=lrwxrwxrwx 1 root root 11 Aug 29 22:10 /usr/src/linux -> linux-2.6.39-gentoo-r3}}

=== Bisherige Kernelkonfiguration kopieren ===
Man kann die bisherige Konfiguration für den neuen Kernel wiederverwenden. Man kann sie an mehreren Orten finden:

* Im [[Special:MyLanguage/procfs|procfs]] [[Special:MyLanguage/filesystem|Dateisystem]], falls die Kernel Option ''Kernel .config support'' im bisherigen Kernel aktiviert worden ist:
: {{RootCmd|zcat /proc/config.gz > /usr/src/linux/.config}}

* Im <tt>/boot</tt> Ordner, falls die Konfiguration dort installiert worden ist:
: {{RootCmd|cp /boot/config-$(uname -r) /usr/src/linux/.config}}

* Im Kernelverzeichnis des bisherigen Kernels:
: {{RootCmd|cp /usr/src/linux-$(uname -r)/.config /usr/src/linux/}}

=== make oldconfig ===
Jetzt aktualisiert man die alte Konfigurationsdatei für den neuen Kernel:
{{RootCmd|cd /usr/src/linux
|make oldconfig}}

Die folgende Konfiguration entspricht der textbasierten Konfiguration von '''make config'''. Bei Änderungen zwischen den Kernelversionen wird man aufgefordert, ob man den Treiber oder die Funktion aktivieren möchte. Ein Beispiel:
{{RootCmd|make oldconfig
|output=Anticipatory I/O scheduler (IOSCHED_AS) [Y/n/m/?] (NEW)
}}

Das ''(NEW)'' am Ende der Zeile weist diese Option als neu aus. Direkt davor in eckigen Klammern stehen die möglichen Einstellungen: ''Y''es, ''n''o, ''m''odul oder ''?'', um die Hilfe anzuzeigen. Die empfohlene Einstellung ist groß geschrieben (hier ''Y''). Die Hilfe beschreibt den Treiber oder die Funktion.

Leider zeigt '''make oldconfig''' für die einzelne Option neben der Hilfe nur wenig zusätzliche Informationen, z.B. den Kontext, so dass es manchmal schwierig ist, die richtige Auswahl zu treffen. In diesem Fall ist es das Beste, sich den Namen der Option zu merken und die Auswahl später mit Hilfe der [[Special:MyLanguage/Kernel/Configuration#Configuration tools|grafischen Kernel Konfigurationsprogramme]] zu treffen.

== Externe Kernelmodule erneut installieren ==

Externe Kernelmodule wie die proprietären Grafiktreiber [[Special:MyLanguage/nvidia]] und [[Special:MyLanguage/fglrx]] müssen für jeden neuen Kernel erneut installiert werden. Falls der neue Kernel bisher noch nicht kompiliert wurde, so muss der Kernel für die Installation von externen Kernelmodule vorbereitet werden:
{{RootCmd|make modules_prepare}}

=== Verwendung von Portage 2.1 (stabiler und Test-Zweig) ===

You can reinstall the packages yourself or you [[emerge|install]] the tool {{Package|sys-kernel/module-rebuild}}:
{{RootCmd|emerge module-rebuild}}
Die Pakete können selber erneut installiert werden oder man [[Special:MyLanguage/emerge|installiert]] dafür das Hilfsprogramm {{Package|sys-kernel/module-rebuild}}:
{{RootCmd|emerge module-rebuild}}

Nach der Installation lässt man '''module-rebuild''' nach externen Kernelmodulen suchen und in eine Liste eintragen:
{{RootCmd|module-rebuild populate}}

'''module-rebuild''' merkt sich die Liste, so dass dieser Schritt nur beim Hinzufügen weiterer oder Wegfallen bestehenden externer Kernelmodule notwendig ist.

The following command reinstalls the external kernel modules then:
{{RootCmd|module-rebuild rebuild}}

=== Using portage-2.2 ===

You can rebuild the packages using the ''@module-rebuild'' set of portage-2.2:

{{RootCmd|emerge -1 @module-rebuild}}

== Build ==

Since here you can following the steps in the [[Kernel/Configuration#Build|manual configuration]] article.

== Removing old kernels ==

See the [[Kernel/Removal|kernel removing]] article. 

== Links ==

* [http://kernelnewbies.org/LinuxChanges kernel changelog with some explanations]

[[Category:Kernel]]
