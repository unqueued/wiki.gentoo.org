<languages />

{{Metadata|abstract=Dieser Artikel beschreibt die Schritte, auf einen neuen Kernel zu aktualisieren.}}

Dieser Artikel beschreibt die Schritte, auf einen neuen [[Special:MyLanguage/Kernel|Kernel]] zu aktualisieren.

== Installation und Nutzung eines neuen Kernel ==

Ein Kernel Upgrade ist vermutlich eine gute Idee, wenn Kernelquellen installiert werden. Neue Kernelquellen werden manchmal bei der Aktualisierung des Systems durch die Ausführung von <tt>emerge -a --update --deep --with-bdeps=y --newuse @world</tt> installiert, oder selbstverständlich wenn man sie direkt installiert.

Die bloße Installation neuer Kernel Sourcen liefert dem Nutzer keinen neuen Kernel. Es ist darüber hinaus erforderlich einen neuen Kernel auf Grundlage der neuen Sourcen zu bauen (make), zu installieren (install) und anschließend das System neu zu starten, um wirklich den neuen Kernel zu verwenden.

Einen neuen Kernel aus den neuen Sourcen zu bauen ist im Grunde der gleiche Vorgang wie der Bau eines Kernel bei der Installation des Systems. Der Unterschied besteht darin, dass man die Konfiguration des alten Kernel zur Erstellung der Konfiguration des neuen Kernel nutzen kann. Die Verwendung der alten Konfiguration erspart es dem Nutzer sich erneut mit allen Kernel-Optionen befassen zu müssen. (Wie es bei der bloßen Verwendung von <tt>make menuconfig</tt> notwendig wäre.)

Die Konfiguration des Kernel wird in einer Datei mit dem Namen {{Path|.config}} im Verzeichnis zusammen mit den Kernel Sourcen gespeichert. Ein neuer Kernel kann Optionen oder Eigenschaften besitzen die der alte Kernel noch nicht hat, oder er kann eine Eigenschaft oder Option nicht mehr haben die der alte Kernel immer noch hat. Die Kernel-Konfiguration gibt an, ob die Eigenschaften und Optionen eines Kernel zu aktiviert sind oder nicht. Vielleicht integriert im Kernel oder als Module gebaut, die auf Verlangen in den laufenden Kernel geladen werden können. Daher kann die Konfigurationsdatei des neuen Kernel neue Einträge besitzen, die die alte nicht hatte und sie könnte andere Einträge nicht mehr haben, die in der Konfiguration des alten Kernel vorhanden sind.

Um mit solchen Änderungen der Konfigurationsdatei umzugehen, muss die Konfigurationsdatei des alten Kernel in eine Konfiguration umgewandelt werden, die mit dem neuen Kernel verwendet werden kann. Dieser Artikel zeigt, wie man mit der Umwandlung der Konfigurationsdatei des alten Kernel aus neuen Kernel Sourcen einen neuen Kernel erzeugt.

== Backup der aktuellen Kernel-Konfiguration ==

Es ist klug eine Sicherung der Kernel-Konfiguration zu erstellen, so dass die vorigen Konfiguration nicht verloren sind. Immerhin verwenden viele Nutzer beträchtlich Zeit um die beste Konfiguration für ein System herauszufinden. Diese Information zu verlieren ist sicherlich nicht erwünscht.

Es ist leicht eine Sicherung der aktuellen Kernel-Konfiguration zu erstellen:

{{RootCmd|cd /usr/src/linux
|cp .config ~/kernel-config-`uname -r`|}}

Vorausgesetzt dass der Symlink zu den Kernelquellen korrekt gesetzt ist, kopiert dies die Konfiguration des aktuell verwendeten Kernel in das Heimatverzeichnis von Root. Außerdem benennt es die Konfiguration in {{Path|kernel-config-}} gefolgt von der Version des aktuell laufenden Linux Kernel um.

== Einen Symlink auf die neuen Kernelquellen setzen ==

The symlink {{Path|/usr/src/linux}} should always point to the directory that holds the sources of the kernel which currently runs. This can be done in one of three ways:

# Installing the kernel sources with <code>USE="symlink"</code>
# Setting the link with eselect
# Manually updating the symbolic link

=== Installing the kernel sources with the symlink USE flag ===

This will make the {{Path|/usr/src/linux}} point to the newly installed kernel sources.

If necessary, it can still be modified later with one of the other two methods.

=== Setting the link with eselect ===

To set the symlink with <tt>eselect</tt>:

{{RootCmd|eselect kernel list|output=<pre>
Available kernel symlink targets:
 [1] linux-3.14.14-gentoo *
 [2] linux-3.16.3-gentoo
</pre>}}

This outputs the available kernel sources. The asterisk indicates the chosen sources.

To change the kernel sources, e.g. to the second entry, do:

{{RootCmd|eselect kernel set 2}}

=== Manually updating the symbolic link ===

To set the symbolic link manually:

{{RootCmd|ln -sf /usr/src/linux-3.16.3 /usr/src/linux
|ls -l /usr/src/linux|output=<pre>
lrwxrwxrwx 1 root root 19 Oct  4 10:21 /usr/src/linux -> linux-3.16.3-gentoo
</pre>}}

== Copy previous kernel configuration ==

The configuration of the old kernel needs to be copied to the new one. It can be found in several places:

* In the [[procfs]] filesystem, if the kernel option ''Enable access to .config through /proc/config.gz'' was activated in the present kernel:
: {{RootCmd|zcat /proc/config.gz > /usr/src/linux/.config}}

* In the {{Path|/boot}} directory, if the configuration was installed installed there:
: {{RootCmd|cp /boot/config-3.14.14-gentoo /usr/src/linux/.config}}

* In the kernel directory of the currently-running kernel:
: {{RootCmd|cp /usr/src/linux-3.14.14-gentoo/.config /usr/src/linux/}}

== Configure the new kernel ==

To use the configuration of the old kernel with the new kernel, it needs to be converted.  The conversion can be done by running either <tt>make silentoldconfig</tt> or <tt>make olddefconfig</tt>.

<tt>make silentoldconfig</tt> gives choices for new options, <tt>make olddefconfig</tt> does not.  Use either, not both.

=== make silentoldconfig ===

The following configuration is like the text based configuration with <tt>make config</tt>.  For new configuration options, it gives a choice. For example:

{{RootCmd|make silentoldconfig|output=<pre>
Anticipatory I/O scheduler (IOSCHED_AS) [Y/n/m/?] (NEW)
</pre>}}

The string ''(NEW)'' at the end of the line marks this option as new. Left to the string in square brackets are the possible answers: ''Y''es, ''n''o, ''m''odule or ''?'' to show the help. The recommend answer is capitalized (here ''Y''). The help explains the option or driver.

Unfortunately <tt>make silentoldconfig</tt> doesn't show - next to the help - a lot more information for each option, like the context, so that it is sometimes difficult to give the right answer. In this case the best way to go is to remember the option name and revise it afterwards through one of the [[Kernel/Configuration#Configuration tools|graphical kernel configuration tools]].

=== make olddefconfig ===

If interactivity is not wanted (no questions should be asked), then use <tt>make olddefconfig</tt>:

{{RootCmd|cd /usr/src/linux
|make olddefconfig}}

== Kompilieren ==

{{Important|When external kernel modules are installed (like nvidia or zfs), it may be necessary to run <tt>make modules_prepare</tt> as described [[Kernel/Upgrade#Reinstall external kernel modules|below]] before building the kernel. Some modules cannot be installed or prepared before the kernel has been built.}}

{{Important|Do not forget to reconfigure the [[Bootloader|bootloader]] to account for the new kernel filenames, and rebuild the initramfs if one is used as well.}}

Für diesen Schritt folge wieder den den Schritten im [[Special:MyLanguage/Kernel/Configuration#Kompilieren|manuelle Konfiguration]] Artikel.

== Externe Kernelmodule erneut installieren ==

Alle externen Kernelmodule, wie die [[:Category:Binary kernel modules|binäre Kernel Module]],  müssen für jeden neuen Kernel erneut installiert werden. Falls der neue Kernel bisher noch nicht kompiliert wurde, so muss der Kernel für die Installation von externen Kernelmodule vorbereitet werden:

{{RootCmd|make modules_prepare}}

Man installiert die Pakete mittels des ''@module-rebuild'' Satz erneut:

{{Emerge|@module-rebuild}}

== Solving build problems ==

When experiencing build problems while rebuilding the current kernel, it might help to sanitize the kernel sources. Make sure to backup the {{Path|.config}} file first, as the operation will remove it. Make sure not to use a {{Path|.bak}} or {{Path|~}} suffix as backup as <tt>make distclean</tt> will clean those up as well.

{{RootCmd|cp .config /usr/src/kernel_config_bk
|make distclean
|mv /usr/src/kernel_config_bk .config}}

== Alte Kernel entfernen ==

Siehe den [[Special:MyLanguage/Kernel/Removal|Kernel Deinstallation]] Artikel. 

== Externe Ressourcen ==

* [http://kernelnewbies.org/LinuxChanges Kernel Changelog mit einigen Beschreibungen neuer Funktionen (in Englisch)]

[[Category:Kernel]]
