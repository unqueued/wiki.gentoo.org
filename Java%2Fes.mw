<languages />


{{Metadata|abstract=Esta guia tiene como objetivo explicar el funcionamiento de Java con Gentoo Linux.}}

Esta guia tiene como objetivo explicar el funcionamiento de Java con Gentoo Linux.

== ¿Que es Java? ==

=== Visión general ===

Java es un lenguaje de programación desarrollado por ingenieros de Sun Microsystems. El lenguaje es totalmente orientado a objetos y diseñado para ser ejecutado en multiples plataformas sin la necesidad de recompilar el codigo para cada una de ellas. Aunque Java puede ser compilado como un lenguaje nativo, mucha de la popularidad de Java se atribuye a su portabilidad, junto con otras caracteristicas como recolección de basura. Para hacer posible esta independencia de plataforma, el compilador de Java compila el codigo Java hacia una representación intermedia denominada "Java bytecode" que es ejecutado en un JRE (Java Runtime Environment) y no directamente sobre el sistema operativo. 

Para ejecutar Java bytecode, es necesario tener un entorno JRE (Java Runtime Environment) instalado. Un JRE proporciona bibliotecas centrales, una maquina virtual de Java dependiente de plataforma, y extensiones para navegadores web entre otras cosas. Por otro lado un JDK (Java Development Kit) agrega herramientas de programación, tales como compilador de bytecode y un depurador de codigo. 

== Instalando una Máquina Virtual ==

=== Opciones ===

Gentoo proporciona una variedad de entornos de ejecución (JREs) y kits de desarrollo (JDKs). Entre las opciones actuales, existen: 

{| class="wikitable" style="text-align: left;" 
|- 
! Vendor
! JDK
! JRE
|- 
| Open Java SE de IcedTea (anteriormente icedtea6-bin)
| {{Package|dev-java/icedtea-bin}}
| 
|- 
| Java 7 SE de Oracle
| {{Package|dev-java/oracle-jdk-bin}}
| {{Package|dev-java/oracle-jre-bin}}
|- 
| Java 6 SE de Sun (enmascarado, inactivo después de la adquisición de Sun por parte de Oracle)
| {{Package|dev-java/sun-jdk}}
| {{Package|dev-java/sun-jre-bin}}
|- 
| Java SE de IBM
| {{Package|dev-java/ibm-jdk-bin}}
| {{Package|dev-java/ibm-jre-bin}}
|-
|}

=== Instalando un JRE/JDK ===

Para instalar el JDK por defecto en el perfil instalado, basta con ejecutar <code>emerge virtual/jdk</code>. O para instalar el JRE por defecto se puede ejecutar <code>emerge virtual/jre</code>. 

Algunos JDKs y JREs, incluyendo los paquetes de Sun, requieren que el usuario acepte un Acuerdo de Licencia de Usuario o Eula. En el caso que esta licencia (por ejemplo dlj-1.1) no este incluida en ACCEPT_LICENSE dentro de {{Path|/etc/portage/make.conf}} no sera posible instalar el JDK/JRE. Para mayor información de como agregar licencias aceptadas en {{Path|make.conf}} pude consultarse el [http://www.gentoo.org//doc/es/handbook/handbook-x86.xml?part=2&chap=1#doc_chap4 Manual de Portage]. 

Para evitar cualquier restriccion de licencias, considerese instalar <code>icedtea-bin</code>, el cual es una implementación abierta de Java del proyecto OpenJDK. 

{{Note/es|JDK incluye tambien un JRE, por lo tanto si un JDK es instalado no es necesario instalar tambien un JRE.}}

=== Instalando maquinas virtuales con descarga restringida ===

Algunos JDKs y JREs requieren que el usuario siga algunos links antes de ser instalados. En este caso el emerge debe ser ejecutado de forma normal. Asi, los ebuils proveeran las instrucciones necesarias acerca de donde ir y realizar las descargas. 

Los archivos indicados deben ser colocados en {{Path|/usr/portage/distfiles}}. Luego, el comando emerge puede ser ejecutado nuevamente y es en este punto que la instalación de JRE/JDK iniciara. 

== Configurando la máquina virtual ==

=== Visión general ===

Gentoo posee la habilidad de instalar multiples JDKs y JREs sin causar conflictos. 

Utilizando la herramienta <code>java-config</code> es posible establecer una configuración para todo el sistema (requiere acceso como root). Los usuarios normales tambien pueden utilizar <code>java-config</code> para establecer su propia preferencia. 

{{Note/es|Es posible tambien utilizar ''eselect'' para cambiar la máquina virtual del sistema y del usuario. Mayor información con <code>eselect java-vm help</code>.}}

=== Estableciendo una maquina virtual por defecto ===

Al ejecutar el comando <code>java-config --list-available-vms</code> es posible obtener un listado de todas las JREs y JDKs instaladas en el sistema. La salida es similar a la siguiente: 

{{RootCmd|java-config --list-available-vms|output=<pre>
The following VMs are available for generation-2:
1&#41;      IcedTea-bin 1.10.4 [icedtea-bin]
2&#41;      Sun JDK 1.5.0.20 [sun-jdk-1.5] (Build Only)
*&#41;      Sun JDK 1.6.0.16 [sun-jdk-1.6]
</pre>
}}


{{Note/es| Las maquinas virtuales marcadas como Build Only pueden contener vulnerabilidades y/o estar en el final de su ciclo de vida. Gentoo recomienda no utilizar ninguna de estas, tanto para usuario como para sistema. Puede verificarse [http://www.gentoo.org/java.xml#build-only Build Only VM] para más información.}}

El "*" indica cual es la maquina virtual activa (system-vm o user-vm cuando ha sido configurada). El nombre dentro de las llaves  (''[]'') es el identificador de la maquina virtual en particular. Puede ser utilizado el ID o el numero en <code>java-config --set-system-vm</code>. Por ejemplo, para establecer la maquina virtual del sistema. 

Estableciendo la maquina virtual manualmente (modo preferido):

{{RootCmd|java-config --set-system-vm sun-jdk-1.6|output=<pre> Now using sun-jdk-1.6 as your generation-2 system JVM </pre>}}

La misma puede ser seleccionada también por numero:

{{RootCmd|java-config --set-system-vm 3|output=<pre> Now using sun-jdk-1.6 as your generation-2 system JVM </pre> }}

Así también, como usuario regular puede utilizarse <code>java-config --set-user-vm</code>. 

{{Note/es|Actualmente ya no es necesario ejecutar <code>source</code> sobre el perfil para que la actualización de maquina virtual sea realizada.}}

=== Maquina virtual marcada como Build Only ===

Algunas maquinas virtuales están marcadas como build-only ya sea por estar en el fin de su ciclo de vida de soporte y/o por contener vulnerabilidades de seguridad. Estas máquinas virtuales no serán utilizadas automáticamente por Gentoo para aquellas aplicaciones en ejecución utilizando los lanzadores de Gentoo  (El guión run-java-tool se diseñó para cambiar entre MVs), sin embargo seguirán disponibles para los entornos de compilación de Gentoo ya que algunos paquetes pueden necesitarlas para ser compiladas. Configurar estas maquinas virtuales tanto para usuario como para el sistema es no recomendada ya que en este caso serán utilizadas al ejecutar los ejecutables {{Path|/usr/bin/{java,javac,..}}} y también serán utilizadas por cualquier otro paquete que no utilice los lanzadores de Gentoo. 

=== Maquina virtual preferida para compilación ===

Al instalar paquetes Java, la máquina virtual utilizada puede ser diferente de la configurada actualmente como máquina virtual del sistema. 

Esta máquina virtual puede ser necesaria en diversas situaciones, por ejemplo si la máquina virtual del sistema esta configurada en nivel de código 1.6 y el paquete que esta siendo instalado requiere la versión 1.5. Al compilar, esta máquina sera seleccionada dejando la selección de system-vm intacta. 

Para definir qué máquina virtual está seleccionada cuando un cambio es requerido, se ha creado un listado de maquinas virtuales predefinidas por arquitectura. Este listado puede ser encontrado en {{Path|/usr/share/java-config-2/config/jdk-defaults.conf}}. 

Estas opciones pueden ser redefinidas (incluyento tambien la máquina virtual seleccionada) en {{Path|/etc/java-config-2/build/jdk.conf}}, teniendo así un completo control de cual máquina virtual sera utilizada durante las instalaciones.

Por ejemplo, para utilizar por defecto <code>sun-jdk</code>:

{{File|/etc/java-config-2/build/jdk.conf|Requiring sun-jdk|<pre>
*=sun-jdk
</pre>
}}

O por ejemplo, utilizar siempre <code>sun-jdk-1.5</code> donde sea posible, excepto cuando 1.4 o 1.3 sean requeridos explícitamente:

{{File|/etc/java-config-2/build/jdk.conf|Requiring sun-jdk-1.5 for 1.5 VMs|<pre>
*=sun-jdk-1.5
</pre>
}}

O por ejemplo, para utilizar diferentes proveedores para diferentes versiones, como <code>sun-jdk-1.4</code> si una versión 1.3 es requerida, y utilizar <code>ibm-jdk-bin</code> para otros casos:

{{File|/etc/java-config-2/build/jdk.conf|Using multiple expressions|<pre>
1.3=sun-jdk-1.4 ibm-jdk-bin
1.5=sun-jdk
</pre>
}}


{{Warning/es|Este cambio no es explícitamente ''requerido''. Si las opciones son cambiadas para utilizar una máquina virtual no soportada, es probable que algunas cosas dejen de funcionar. A causa de la amplia disponibilidad de máquinas virtuales, el proyecto Gentoo no tiene todos los recursos para verificar cada paquete en todas las máquinas virtuales. Así, reportes de errores en máquinas virtuales no soportadas no tendrán prioridad sobre errores presentes en máquinas virtuales soportadas.}}

== Compiladores ==

El compilador predeterminado utilizado para la compilación es <code>javac</code>, el cual se encuentra incluido en cada JDK. Adicionalmente a configurar la máquina virtual utilizada en tiempo de compilación, también existe la posibilidad de seleccionar cual compilador sera utilizado. Así, es posible definir un listado de preferencias mediante el archivo {{Path|/etc/java-config-2/build/compilers.conf}}. 

{{File|/etc/java-config-2/build/compilers.conf|Setting compiler preferences|<pre>
COMPILERS="ecj-X.Y jikes javac"
</pre>
}}

Es posible que algunos compiladores no soporten las opciones -target y -source. Por lo tanto, cada compilador dentro de la lista es probado para ver si soporta las opciones -source/-target deseadas, javac funcionara en todos los casos. Así pues si ninguno otro compilador es encontrado, sera el compilador por defecto. 

Más detalles acerca de los compiladores son descritos a seguir: 

{| class="wikitable" style="text-align: left;" 
|- 
! Nombre
! Ejecutable
! Paquete
! Descripción
|- 
| javac
| javac
| N/A
| Este es el compilador por defecto a ser utilizado y es parte de cada JDK.
|- 
| jikes
| jikes
| dev-java/jikes
| Jikes fue desarrollado originalmete por IBM. Como anecdota, este compilador es generalmente más rapido que javac, sin embargo es posible que falle en circunstancias donde javac no, además aun no presenta soporte para sintaxis Java 1.5 o superior.
|- 
| Compilador Java de Eclipse
| ecj
| dev-java/eclipse-ecj
| ECJ es el compilador utilizado por el kit de desarrollo de eclipse. Soporta muchas características y es considerablemente rápido. Además tiene soporte para sintaxis Java 1.5.
|-
|}

== Estableciendo un CLASSPATH por defecto ==

{{Warning/es|Las opciones explicadas en esta sección debe ser consideradas como obsoletas y es probable que sean removidas en el futuro. Se recomienda evitarlas ya que cada proyecto o aplicación Java debe administrar su propio classpath. Así, si se elige especificar un CLASSPATH por defecto, algunas aplicaciones podrían comportarse de forma inesperada a causa de código no esperado en el classpath.}}

<code>java-config</code> también puede ser utilizado para establecer un CLASSPATH por defecto para todo el sistema, así como para especificar un CLASSPATH especifico para un usuario. 

Primero, deben listarse todas las bibliotecas Java disponibles en el sistema que pueden ser incluidas en el CLASSPATH. Acá un ejemplo de la salida: 

{{RootCmd|java-config --list-available-packages|output=<pre>
[xerces-2] The next generation of high performance, fully compliant XML parsers in the Apache Xerces family (/usr/share/xerces-2/package.env)
[junit] Simple framework to write repeatable tests (/usr/share/junit/package.env)
[bsh] BeanShell: A small embeddable Java source interpreter (/usr/share/bsh/package.env)
[bcel] The Byte Code Engineering Library: analyze, create, manipulate Java class files (/usr/share/bcel/package.env)
[log4j] A low-overhead robust logging package for Java (/usr/share/log4j/package.env)
...
</pre>
}}

Los nombres dentro de las llaves (''[]'') son los identificadores que deben ser pasados como parámetro para <code>java-config --set-system-classpath</code>. Acá un ejemplo: 


{{RootCmd|java-config --set-system-classpath log4j,xerces-2}}

{{Note/es|El directorio actual ({{Path|.}}) no sera parte del classpath del sistema, ya que el mismo debe ser agregado en el perfil de inicio de sesión del sistema.}}

Es necesario actualizar el entorno reiniciando sesion o ejecutando <code>source /etc/profile</code>. 

Para usuarios, la instrucción <code>java-config --set-user-classpath</code> creara el archivo {{Path|~/.gentoo/java-env-classpath}} sobre el cual debe ejecutarse <code>source</code>, preferencialmente desde el perfil del shell. 

{{Code|Ejecutando source en el classpath especifico del usuario|<pre>
if [[ -f "${HOME}/.gentoo/java-env-classpath" ]]; then
       source ${HOME}/.gentoo/java-env-classpath
fi
</pre>
}}

Si realmente se requiere un classpath para usuario o para el sistema, se puede agregar alguna instrucción similar a la siguiente a el perfil de la shell. Sin embargo se advierte que esto no es recomendable. 

{{RootCmd|export CLASSPATH{{=}}"${CLASSPATH}:$(java-config --classpath log4j,xerces-2)"}}

== Complementos de Navegador Web de Java ==

=== Instalando un complemento ===

Para instalar el complemento de navegador web de Java, basta con instalar una máquina virtual de Java con la USE flag <code>nsplugin</code> activa.

{{Note/es|<code>nsplugin</code> no esta disponible para todas las arquitecturas. Debe verificarse la disponibilidad para la arquitectura deseada antes de intentar instalar una máquina virtual ejecutando <code>emerge -pv <java-vm></code>.}}

Portage permite la instalación de múltiples versiones del complemento de Java, sin embargo solo uno puede ser utilizado por el navegador web. Puede verificarse la lista de complementos disponibles ejecutando: 

{{RootCmd|eselect java-nsplugin list|output=<pre>
   [1]   sun-jre-bin-1.6
   [2]   icedtea-bin
</pre>
}}

En este ejemplo, <code>sun-jre-bin</code> es seleccionado como complemento para el navegador web. 

{{RootCmd|eselect java-nsplugin set sun-jre-bin-1.6}}

Luego, se verifica si el complemento correcto fue seleccionado: 

{{RootCmd|eselect java-nsplugin list|output=<pre>
   [1]   sun-jre-bin-1.6  current
   [2]   icedtea-bin
</pre>
}}

Java.com proporciona un enlace para [http://java.com/en/download/installed.jsp verificar el complemento instalado]. Adicionalmente, si se esta utilizando un navegador basado en Mozilla, puede verificarse el complemento instalado escribiendo <code>about:plugins</code> en la barra de direcciones. 

=== Complementos en sistemas multilib ===

Si se esta ejecutando un sistema que mezcla bibliotecas de 32 y 64 bits, se pueden utilizar complementos Java de 32 y 64 bits. No entanto, a menos que sea necesario ejecutar aplicaciones de 32 bits, es recomendable utilizar unicamente el complemento de 64 bits en navegadores web de 64 bits. 

Existe una amplia variedad de complementos de 64 bits. La dupla JDK/JDE por defecto <code>sun-jdk</code> y <code>sun-jre-bin</code> incluyen complementos de navegador. Basta con instalarlos habilitando la USE flag <code>nsplugin</code> USE. 

{{RootCmd|echo "dev-java/sun-jre-bin nsplugin" >> /etc/portage/package.use
|emerge sun-jre-bin}}

Para utilizar un complemento de 32 bits con un navegador de 32 bits, es necesario instalar <code>emul-linux-x86-java</code> con la USE flag <code>nsplugin</code> habilitada. 

{{RootCmd|echo "app-emulation/emul-linux-x86-java nsplugin" >> /etc/portage/package.use
|emerge emul-linux-x86-java}}

Luego, deben verificarse cuales complementos están disponibles: 

{{RootCmd|eselect java-nsplugin list|output=<pre>
Available 32-bit Java browser plugins
  [1]   emul-linux-x86-java-1.5
  [2]   emul-linux-x86-java-1.6
Available 64-bit Java browser plugins
  [1]   icedtea-bin
  [2]   sun-jre-bin-1.6
</pre>
}}

Ahora, debe seleccionarse el complemento correcto para los navegadores web. 

{{RootCmd|eselect java-nsplugin set 32bit emul-linux-x86-java-1.6
|eselect java-nsplugin set 64bit sun-jre-bin-1.6}}

Por ultimo, debe verificarse que el complemento correcto haya sido seleccionado: 

{{RootCmd|eselect java-nsplugin list|output=<pre>
Available 32-bit Java browser plugins
  [1]   emul-linux-x86-java-1.5
  [2]   emul-linux-x86-java-1.6  current
Available 64-bit Java browser plugins
  [1]   icedtea-bin
  [2]   sun-jre-bin-1.6  current
</pre>
}}

== USE flags para ser utilizadas con Java ==

=== Estableciendo USE flags ===

Para más información acerca de las USE flags, puede consultarse el capitulo de [http://www.gentoo.org//doc/es/handbook/handbook-x86.xml?part=2&chap=2 USE flags]  en el manual de Gentoo. 

=== Las USE flags ===

* La USE flag '''java''' agrega soporte Java a diversos programas
* La USE flag '''nsplugin''' agrega soporte a navegadores basados en Mozilla (incluyendo Firefox). Esta flag debe habilitarse para ver applets Java en navegadores basados en Mozilla.
* La USE flag '''source''' instala un archivo zip con el codigo fuente del paquete. Este código es tradicionalmente usado por los entornos de desarrollo para 'adjuntar' el código de las bibliotecas que estan siendo utilizadas.
* La USE flag '''jce''' agrega soporte para el motor de criptografía de Java.
* Para paquetes Java, la USE flag '''doc''' compila la documentación utilizando para ello javadoc.

== Recursos adicionales ==

=== Recursos sin conexión a Internet ===

* man page de java-config
* <code>java-config --help</code>

=== Recursos en linea ===

* La [http://www.gentoo.org/proj/en/java/ página del proyecto Java]
* Los archivos de las listas de correo: [http://news.gmane.org/gmane.linux.gentoo.java gentoo-java], [http://news.gmane.org/gmane.linux.gentoo.user gentoo-user], and [http://news.gmane.org/gmane.linux.gentoo.devel gentoo-dev]
* Los canales [irc://chat.freenode.net/gentoo #gentoo] y [irc://chat.freenode.net/gentoo-java #gentoo-java] en IRC
* [http://es.wikipedia.org/wiki/Java_(lenguaje_de_programación) La página de Java en Wikipedia]
* Si tiene sugerencias o preguntas acerca de este documento, por favor, envía un mensaje de correo electrónico al equipo Java de Gentoo: {{Mail|java@gentoo.org}}

== Agradecimientos ==

Nos gustaría dar las gracias a los siguientes autores y editores por sus contribuciones a esta guía:


* Joshua Nichols
* Karl Trygve Kalleberg
* Joshua Saddler
