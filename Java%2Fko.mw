<languages />
{{InfoBox stack
|{{InfoBox wikipedia|Java_(programming_language)|header=true}}
|{{InfoBox project|Java}}
}}
<div class="mw-translate-fuzzy">
이 안내서는 독자 여러분께 자바 언어를 소개하고 젠투 리눅스에서 자바를 활용하는 방법을 설명합니다.
</div>

== 자바란 무엇인가요? ==

=== 간단히 살펴보기 ===

<div class="mw-translate-fuzzy">
자바는 썬 마이크로시스템즈의 엔지니어가 개발한 프로그래밍 언어입니다. 언어는 객체지향이며 각각의 플랫폼에서 코드를 다시 컴파일하지 않아도 여러 플랫폼에서 동작하도록 설계했습니다. 비록 자바를 네이티브 프로그램처럼 컴파일 할 수 있지만 대부분의 자바 배포 프로그램은, 가비지 콜렉션과 같은 기능을 붙여가며 이식성을 부여할 수 있습니다. 플랫폼은 독립적으로 자바 컴파일러가 운영체제가 아닌 JRE(자바 런타임 환경)에서 실행할 "자바 바이트 코드"라고 하는 중간 형태의 자바 코드로 컴파일 할 수 있습니다.
</div> 

<div class="mw-translate-fuzzy">
자바 바이트 코드를 실행하려면 JRE(자바 런타임 환경)을 설치해야합니다. JRE는 핵심 라이브러리, 플랫폼과 별개로 동작하는 자바 가상 머신, 브라우저 플러그인, 등을 제공합니다. JDK(자바 개발 키트)는 바이트 코드 컴파일러 및 디버거와 같은 프로그래밍 도구를 추가합니다.
</div>

=== JVM languages ===

The Java virtual machine is not used exclusively by Java programming language. Multiple programming languages use the Java platform and run on the JVM. Examples of such include: [[Wikipedia:Clojure|Clojure]], [[Wikipedia:Apache Groovy|Apache Groovy]], [[Wikipedia:Kotlin (programming language)|Kotlin]] or [[Wikipedia:Scala (programming language)|Scala]].

<div class="mw-translate-fuzzy">
== 가상 머신 설치 ==
</div>

=== 선택 ===

<div class="mw-translate-fuzzy">
젠투는 다양한 런타임 환경(JRE)과 개발 키트(JDK)를 제공합니다. 현재 선택할 수 있는 방안은 다음과 같습니다:
</div> 

<div class="mw-translate-fuzzy">
{| class="table" style="text-align: left;" 
|- 
! 제작 주체
! JDK
! JRE
|- 
| The IcedTea Open Java SE (formerly icedtea6-bin)
| {{Package|dev-java/icedtea-bin}}
| 
|- 
| Oracle's Java 7 SE
| {{Package|dev-java/oracle-jdk-bin}}
| {{Package|dev-java/oracle-jre-bin}}
|- 
| Sun's Java 6 SE (오라클이 썬을 인수한 후 가려서 비활성화)
| {{Package|dev-java/sun-jdk}}
| {{Package|dev-java/sun-jre-bin}}
|- 
| The IBM Java SE
| {{Package|dev-java/ibm-jdk-bin}}
| {{Package|dev-java/ibm-jre-bin}}
|-
|}
</div>

<div class="mw-translate-fuzzy">
=== JRE/JDK 설치 ===
</div>

<div class="mw-translate-fuzzy">
기본 '''JDK'''를 설치하려면 {{c|emerge virtual/jdk}}를 실행하십시오. 또는 프로파일의 기본 '''JRE'''를 설치하려면 {{c|emerge virtual/jre}}를 실행하십시오.
</div>

{{Emerge|virtual/jdk}}

To install the profile's default '''JRE''' run:

{{Emerge|virtual/jre}}

<div class="mw-translate-fuzzy">
어떤 썬 꾸러미를 담고 있는 JDK 와 JRE는 최종 사용자 사용 동의서 또는 EULA에 동의해야합니다. 어쩌다 (dlj-1.1 같은)라이선스가 ({{Path|/etc/portage/make.conf}}에 있는)<code>ACCEPT_LICENSE</code> 변수에 안나타나면 JDK/JRE를 설치할 수 없습니다. {{Path|make.conf}}로의 승인 라이선스 추가 방법은 포티지 핸드북의 [[Handbook:X86/Working/Portage/ko#.EB.9D.BC.EC.9D.B4.EC.84.A0.EC.8A.A4|라이선스]]편을 참고하십시오.
</div>

<div class="mw-translate-fuzzy">
제한 라이선스의 번거로움을 피하려면 OpenJDK 프로젝트의 공개 Java 구현체인 icedtea-bin 설치를 고려하십시오.
</div> 

{{Note|''JDK''에는 "JRE''가 들어있음을 인지하십시오. JDK를 이머지하면 JRE 설치는 필요 없습니다.}}

=== Installing IcedTea GCJ Virtual Machine ===

{{Important|{{c|gcj}} is deprecated and is removed in GCC versions 7.0 and greater. It is unavailable from GCC 6.0 on Gentoo. Consider this section deprecated.}}

The IcedTea virtual machine is provided in source code and requires compilation by a Java bytecode compiler. This bootstrapping can be executed by the GNU Compiler for Java (GCJ). This compiler is available when GCC is built with the <code>gcj</code> USE flag.

When GCC is rebuilt with this USE flag set, the {{Package|dev-java/icedtea}} package can be installed. Because of a Portage bug, users need to install {{Package|dev-java/gcj-jdk}} and {{Package|dev-java/ant-core}} explicitly first if they are not already present.

{{Emerge|dev-java/gcj-jdk dev-java/ant-core|params+=--oneshot}}
{{Emerge|dev-java/icedtea:7}}

=== 가져오기에 제한이 있는 가상 머신 설치 ===

일부 JDK와 JRE를 설정하려면 추가 설정 몇단계를 거쳐야합니다. 꾸러미를 이머지하는건 보통입니다. 추가 과정이 필요하다면 이빌드는 사용자에게 어디서 무얼 다운로드해야 할 지 지침을 제공합니다.

<div class="mw-translate-fuzzy">
언급한 파일을 {{Path|/usr/portage/distfiles}}에 다운로드하고, 파일을 올바른 디렉터리에 넣었으면 다시 {{c|emerge}} 명령을 실행하여 JRE/JDK 설치를 시작할 수 있게 하십시오.
</div>

=== 헤드리스 JRE 설정 === 

<div class="mw-translate-fuzzy">
때로는 Java의 모든 기능을 활용하는 목적으로 완전한 JRE 가 필요하지 않을 때도 있습니다. 서버에서 Java를 활용할 때는 GUI, 그래픽, 음성, 프린터 관련 기능을 사용하지 않습니다. 단순화한(때로는 헤드리스로 참조하는) JRE를 설치하려면 USE 플래그 3개의 선택을 해제하십시오.
</div>

<div class="mw-translate-fuzzy">
{{FileBox|filename=/etc/portage/package.use|title=요구 USE 플래그 변경|1=
virtual/jre -X -alsa -cups
}}
</div>

<div class="mw-translate-fuzzy">
현재 젠투 프로파일에 따라 이미 해당되는 설정이 되어 있을지도 모릅니다. 보통 개별 꾸러미에 적용하는 USE 플래그 설정은 {{c|emerge}} 를 시연 모드로 실행할 때 확인할 수 있습니다:
</div>

<div class="mw-translate-fuzzy">
{{Cmd|emerge -pv virtual/jre}}
</div>

<div class="mw-translate-fuzzy">
== 자바 가상 머신 설정 ==
</div>

=== 간단히 살펴보기 ===

젠투는 여러 JDK와 JRE를 어떤 기능상 중복 없이 설치할 수 있습니다. 

<div class="mw-translate-fuzzy">
{{c|java-config}} 도구를 루트 권한으로 실행하면, 시스템 영역 Java 가상 머신을 설정할 수 있습니다. 사용자는 사용자별 가상머신을 개별 설정할 목적으로 {{c|java-config}}를 사용할 수 있습니다.
</div> 

<div class="mw-translate-fuzzy">
{{Note|{{c|eselect}}는 시스템 가상 머신과 사용자 가상 머신 설정을 바꿀 수 있습니다. {{c|eselect java-vm help}}를 참고하십시오.}}
</div>

=== 기본 가상 머신 설정 ===

<div class="mw-translate-fuzzy">
{{c|java-config --list-available-vms}} 명령을 실행하면 시스템에 설치한 JRE와 JDK 목록이 나옵니다. 다음은 출력 예제입니다.
</div> 

<div class="mw-translate-fuzzy">
{{RootCmd|java-config --list-available-vms|output=<pre>
The following VMs are available for generation-2:
1&#41;      IcedTea-bin 1.10.4 [icedtea-bin]
2&#41;      Sun JDK 1.5.0.20 [sun-jdk-1.5] (Build Only)
*&#41;      Sun JDK 1.6.0.16 [sun-jdk-1.6]
</pre>
}}
</div>

{{Note|'빌드 전용'으로 표기한 가상머신은 보안 취약점을 안고 있거나 끝물에 다다른(End Of Life)상태일 수도 있습니다. 젠투에서는 이 가상머신을 시스템 ''또는'' 사용자의 가상 머신으로 설정하지 않길 권합니다. 자세한 내용은 [[#.EB.B9.8C.EB.93.9C_.EC.A0.84.EC.9A.A9_.EA.B0.80.EC.83.81.EB.A8.B8.EC.8B.A0|빌드 전용 가상머신]]편을 참고하십시오.}}

<div class="mw-translate-fuzzy">
''*''은 현재 (시스템 가상머신 또는 사용자 가상머신을 선택했을 경우) 활성화한 JVM을 나타냅니다. 각괄호("[]")에 있는 이름은 각 가상머신의 처리 번호입니다. 처리 번호는 가상머신을 설정할 때 {{c|java-config --set-system-vm}} 명령에 쓸 수 있습니다. 다음 텍스트에서는 시스템 가상머신을 설정하는 예제를 보여드립니다.
</div>

(원하는대로)직접 system VM을 설정하려면:

<div class="mw-translate-fuzzy">
{{RootCmd|java-config --set-system-vm sun-jdk-1.6|output=<pre>
Now using sun-jdk-1.6 as your generation-2 system JVM
</pre>}}
</div>

대안책: 관리 번호로 가상 머신 선택:

<div class="mw-translate-fuzzy">
{{RootCmd|java-config --set-system-vm 3|output=<pre>
Now using sun-jdk-1.6 as your generation-2 system JVM
</pre>
}}
</div>

일반 사용자는 {{c|java-config --set-user-vm}} 명령을 활용하십시오. 

<div class="mw-translate-fuzzy">
{{Note | 사용자 또는 시스템 가상머신을 업데이트할 때 프로파일 <tt>source</tt> 지정은 더 이상 필요하지 않습니다.}}
</div>

<div class="mw-translate-fuzzy">
=== 빌드 전용 가상머신 ===
</div>

일부 가상머신은 끝물에 다다른 상태이거나 보안 취약성이 있어 빌드 전용으로 플래그 표시했습니다. 이 가상머신은 젠투 실행 관리자를 통해 프로그램 실행을 목적으로 자동으로 활용하지 않지만(run-java-tool 스크립트는 가상머신을 전환하는 도구로 설계했습니다), 젠투 빌드 환경에서 어떤 꾸러미 빌드에 필요할 때 여전히 사용할 수 있게 했습니다. 이들 가상 머신 설정은 시스템 가상머신으로든 사용자 가상머신으로든 젠투 실행 관리 스크립트에서 사용하지 않는 것처럼 {{Path|/usr/bin/{java,javac,..}}} 실행 파일을 구동할 때 실행할 가상머신으로 사용하지 말길 바랍니다.

== 기본 CLASSPATH 값 설정 ==

<div class="mw-translate-fuzzy">
{{Warning| 여기서 설명한 옵션은 오래된 옵션으로 간주하고 앞으로는 제거해야 할겁니다. 이 옵션의 사용 회피를 권장하는데 Java 프로젝트 또는 프로그램이 자체 클래스 경로를 이상적으로 관리할 수 있어야하기 때문입니다. 기본 CLASSPATH를 설정할 때 일부 프로그램은 예상치 못한 동작을 하기도 하는데, 원하는 클래스 경로에 클래스가 없었기 때문입니다.}}
</div>

<div class="mw-translate-fuzzy">
<tt>java-config</tt>는 사용자별 기본 CLASSPATH 뿐만 아니라 시스템 기본 CLASSPATH도 설정할 수 있습니다.
</div> 

<div class="mw-translate-fuzzy">
우선 <var>CLASSPATH</var> 변수에 넣을 수 있는 시스템의 Java 라이브러리를 조회하십시오. 아래는 출력 예제입니다:
</div> 

{{RootCmd|java-config --list-available-packages|output=<pre>
[xerces-2] The next generation of high performance, fully compliant XML parsers in the Apache Xerces family (/usr/share/xerces-2/package.env)
[junit] Simple framework to write repeatable tests (/usr/share/junit/package.env)
[bsh] BeanShell: A small embeddable Java source interpreter (/usr/share/bsh/package.env)
[bcel] The Byte Code Engineering Library: analyze, create, manipulate Java class files (/usr/share/bcel/package.env)
[log4j] A low-overhead robust logging package for Java (/usr/share/log4j/package.env)
...
</pre>
}}

<div class="mw-translate-fuzzy">
다시 말씀드리지만 각괄호([])에 있는 이름은 {{c|java-config --set -system -classpath}}에 전달할 ID 입니다. 예제는 아래에 있습니다:
</div> 

{{RootCmd|java-config --set-system-classpath log4j,xerces-2}}

{{Note | 현재 디렉터리 ({{Path|.}})는 시스템 로그인 프로파일로 추가할 수 없으므로 시스템 클래스 경로의 일부가 아닙니다.}}

<div class="mw-translate-fuzzy">
로그아웃하고 다시 로그인하거나 {{c|source {{Path|/etc/profile}}}}를 입력하여 환경을 업데이트하십시오.
</div>

<div class="mw-translate-fuzzy">
사용자별 설정시 {{c|java-config --set-user -classpath}} 명령으로 {{Path|~/.gentoo/java-env-classpath}}를 만들고 쉘 프로파일로 source 명령을 처리합니다.
</div> 

<div class="mw-translate-fuzzy">
{{CodeBox|title=지정 클래스경로 가져오기|1=
if [[ -f "${HOME}/.gentoo/java-env-classpath" ]]; then
       source ${HOME}/.gentoo/java-env-classpath
fi
}}
</div>

시스템 전체 또는 사용자별 기본 클래스 경로에서 다음과 같이 쉘 프로파일에 추가하려 할 때를 가정해보겠습니다. 다음 처럼 해보십시오: 

{{RootCmd|export CLASSPATH{{=}}"${CLASSPATH}:$(java-config --classpath log4j,xerces-2)"}}

<div class="mw-translate-fuzzy">
== Java 브라우저 플러그인 ==
</div>

{{Important|The Java plugin support had been deprecated in JDK 9<ref>[https://www.java.com/en/download/faq/jdk9_plugin.xml JDK 9 and the Java Plugin], java.com. Retrieved on November 30, 2018</ref>.}}

The Java [[:Category:Web_browser|browser]] plugin used to be managed via {{c|eselect java-nsplugin}}. This has now been removed in favor of a simpler out-of-the-box experience. For basic usage, simply emerge the chosen JVM with the <code>nsplugin</code> USE flag enabled. Note that Oracle's plugin is only available for {{Keyword|amd64}} and {{Keyword|x86}}.

{{Note|Note that [[Chromium]]-based browsers since version 42 and [[Firefox]] since version 52 no longer support [[Wikipedia:NPAPI|NPAPI]]-based plugins<ref>[https://java.com/en/download/help/enable_browser.xml How do I enable Java in my web browser?], java.com. Retrieved on November 30, 2018</ref>. This effectively disables the Java plugin on modern browsers.}}

For more information, including JVM selection, Web Start, and multilib, see [https://gitweb.gentoo.org/repo/gentoo.git/plain/dev-java/icedtea-web/files/README.gentoo-r1 the README installed with icedtea-web].

== Java에서 사용할 USE 플래그 ==

=== USE 플래그 설정 ===

<div class="mw-translate-fuzzy">
USe 플래그에 대한 더 많은 정보는 젠투 핸드북의 [[Handbook:X86/Working/USE/ko|USE 플래그]] 장을 참고하십시오.
</div>

<div class="mw-translate-fuzzy">
=== USE 플래그 ===
</div>

<div class="mw-translate-fuzzy">
* <code>java</code> 플래그는 여러가지 프로그램에 Java 언어 지원을 추가합니다
* <code>nsplugin</code> 플래그는 모질라 유사 브라우저(파이어폭스) 지원을 추가합니다. 모질라 유사 브라우저에서 Java 애플릿을 가동할 때 필요합니다.
* <code>source</code> 플래그는 꾸러미 소스코드 zip 파일을 설치합니다. 예전에는 사용중인 라이브러리의 소스 코드를 IDE에 '붙일' 때 사용했습니다(하지만 최근에는 maven이나 gradle로 끌어다 씁니다. 역자 주.).
* <code>jce</code> 플래그는 Java 암호화 엔진 지원 기능을 추가합니다
* Java 꾸러미에서, <code>doc</code> 플래그는 javadoc을 이용하 API  문서를 빌드합니다.
</div>

Following USE flags go in [[Gentoo_Java_USE_flags|JAVA_PKG_IUSE]].
* The [https://packages.gentoo.org/useflags/source <code>source</code>] flag installs a zip of the source code of a package. This is traditionally used for IDEs to 'attach' source to the libraries that are being use;
* For Java packages, the [https://packages.gentoo.org/useflags/doc <code>doc</code>] flag will build API documentation using javadoc.

== 추가 참조 ==

* [[Java Developer Guide]]
* [[Project:Java/Why_build_from_source]]
* [[Project:Java/Getting_Involved]]

== 외부 자료 ==

<div class="mw-translate-fuzzy">
* [http://news.gmane.org/gmane.linux.gentoo.java gentoo-java], [http://news.gmane.org/gmane.linux.gentoo.user gentoo-user], [http://news.gmane.org/gmane.linux.gentoo.devel gentoo-dev] 메일링 리스트 아카이브
* {{IRC|gentoo}}, {{IRC|gentoo-java}}
* [[Wikipedia:Java_programming_language|Wikipedia의 Java 항목]]
* 젠투 포럼의 [https://forums.gentoo.org/viewtopic-t-901036.html Java 7 과 icedtea 준비]<sup style="color:#ff0077">en</sup>
</div>

<div class="mw-translate-fuzzy">
더 많은 자료는 오프라인에서 찾아볼 수 있습니다:
* <kbd>man java-config</kbd>
* <kbd>java-config --help</kbd>
</div>

* {{c|man java-config}}
* {{c|java-config --help}}

이 문서와 관련한 제안이나 질문이 있으면 젠투 Java 팀의 {{Mail|java@gentoo.org}} 전자메일 주소로 문의바랍니다.

== References ==

{{Reflist}}

[[Category:Programming_language]]

{{Migrated|originalauthors=Joshua Nichols, Karl Trygve Kalleberg, {{Dev|nightmorph}}}}
