{{Note|The Raspberry Pi closed source VC4 driver is '''''not''''' available on 64-bit (ARM64/AARCH64) systems. The Raspberry Pi foundation has stated "[https://github.com/raspberrypi/linux/issues/2315#issuecomment-383132350 we are not working on this, and are unlikely to do so in the near future]". Using the open source '''vc4-fkms-v3d''' driver listed below instead is recommended}}

Using the "VC4" driver on the raspberry pi to enable hardware acceleration (in X, Wayland, opengl applications) presents many challenges. There's plenty of instructions floating around for Raspbian, but for Gentoo, not so much. This page contains a couple of nuggets of wisdom that may help you get there.

== Kernel ==

To have proper GPU acceleration with VideoCore, you need its kernel module loaded. That module has been integrated in v4.5, but it's also present in rpi's kernel v4.4.

To get VC4 core working you need to use latest firmware from {{Package|sys-boot/raspberrypi-firmware}} 9999 ebild. To have installed only firmware files and not kernel - follow [[Raspberry_Pi#Boot_partition|this]] guide modifying ebuild file.

== Mesa and friends ==

Before enabling kernel module and switching RPi to GPU you need to rebuild {{Package|media-libs/mesa}} with support of VideoCore4. To do so add following to your {{Path|/etc/portage/make.conf}}:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
VIDEO_CARDS="vc4"
}}

And rebuild {{Package|media-libs/mesa}}.

It is also a good idea to add <code>egl gles1 gles2</code> as global use flags.

=== Enabling the VC4 kernel module ===

Once you have mesa VC4 support you can enable kernel module and try to switch to VC4 GPU.

To enable the kernel module, you have to enable the optional overlay in your {{Path|config.txt}} with <code>dtoverlay=vc4-kms-v3d</code>. It's also recommended to bump your <var>gpu_mem</var> to <code>128</code> (it's what {{c|raspi-config}} does when you enable the driver through it).

Make sure that you've installed latest version of {{Package|sys-boot/raspberrypi-firmware}} or you'll have a blank screen!

Also, you should know that because that driver is a kernel module, you won't have any HDMI output until it's loaded, which is somewhere in the middle of your init procedure.

=== Is my module loaded? ===

Once you're booted up, you can verify that your module is properly loaded with {{c|lsmod}}. You're supposed to have a <code>vc4</code> module in there. Also, it's important to verify that {{Path|/dev/dri/card0}} exists. If you don't have that device, nothing's going to work.

=== Is it working? ===

To test your setup, you need to install {{Package|x11-apps/mesa-progs}}. This provides {{c|glxgears}}, which you can run with {{c|glxgears -info}}. If you have something like <code>GL_RENDERER   = Gallium 0.4 on VC4</code> in the output, then it's a success! If it's using <code>llvmpipe</code>, you're almost there. If it's using the software rasterizer, you're not there.

If it is using <code>llvmpipe</code> and there is <code>/usr/share/X11/xorg.conf.d/99-fbturbo.conf</code>, try to remove <code>Driver "fbturbo"</code> in that file.
