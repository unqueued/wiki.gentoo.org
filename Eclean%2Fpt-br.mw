<languages />

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox project|Portage-Tools|header=true}}
|{{InfoBox wikipedia|Gentoolkit}}
|{{InfoBox gitweb|gentoolkit.git}}
}}

{{c|eclean}} é uma ferramenta para limpeza de arquivos de origem e pacotes binários que ficam no repositório. Faz parte do pacote {{Package|app-portage/gentoolkit}} e é gerenciado pelo [[Project:Portage-Tools|Portage-Tools project]].

== Instalação ==

=== Emerge ===

Instalar {{c|eclean}}:

{{Emerge|app-portage/gentoolkit}}

{{Note|Veja o [[Gentoolkit|Gentoolkit article]] para obter informações sobre outras utilidades incluídas no pacote {{Package|app-portage/gentoolkit}}.}}

== Uso ==

Por padrão, arquivos de origem estão localizados no diretório {{Path|/usr/portage/distfiles}}, enquanto pacotes binários estão localizados no diretório {{Path|/usr/portage/packages}}. As localizações para cada um podem ser alteradas mudando as variáveis <var>[[DISTDIR]]</var> e <var>PKGDIR</var> respectivamente no {{Path|/etc/portage/make.conf}}. Ambas as localizações podem ocupar muito espaço se não for feita uma limpeza periódica; Por essa razão que o {{c|eclean}}  foi criado.

=== Invocação ===

Use {{c|eclean --help}} para ver um sumário completo das ações, lista de opções e usos:

{{Invocation|eclean --help|output=<pre>
Usage:
 eclean [global-option] ... <action> [action-option] ...
 eclean-dist [global-option, distfiles-option] ...
 eclean-pkg [global-option, packages-option] ...
 eclean(-dist,-pkg) [--help, --version]
 
Available global options:
 -C, --nocolor             - turn off colors on output
 -d, --deep                - only keep the minimum for a reinstallation
 -e, --exclude-file=<path> - path to the exclusion file
 -i, --interactive         - ask confirmation before deletions
 -n, --package-names       - protect all versions (when --deep
 -p, --pretend             - only display what would be cleaned
 -q, --quiet               - be as quiet as possible
 -t, --time-limit=<time>   - don't delete files modified since <time>
   <time> is a duration: "1y" is "one year", "2w" is "two weeks", etc.
   Units are: y (years), m (months), w (weeks), d (days) and h (hours).
 -h, --help                - display the help screen
 -V, --version             - display version info
 
Available actions:
 packages     - clean outdated binary packages from PKGDIR
 distfiles    - clean outdated packages sources files from DISTDIR
 
Available options for the packages action:
 NONE  :)
 
Available options for the distfiles action:
 -f, --fetch-restricted   - protect fetch-restricted files (when --deep)
 -s, --size-limit=<size>  - don't delete distfiles bigger than <size>
   <size> is a size specification: "10M" is "ten megabytes", "200K" is
   "two hundreds kilobytes", etc.  Units are: G, M, K and B.
 
More detailed instruction can be found in `man eclean`
</pre>}}

=== Limpeza de distfiles ===

Limpe o diretório dos arquivos de origem passando o argumento <code>distfiles</code>:

{{RootCmd|eclean distfiles}}

Ou executando o comando:

{{RootCmd|eclean-dist}}

=== Cleaning packages ===

For the directory with the binary packages use the following command instead:

{{RootCmd|eclean packages}}

Or by running the short option:

{{RootCmd|eclean-pkg}}

== Options ==

By default, source files and binary packages corresponding to any ebuild in the current repository will '''not''' be deleted. This way, system administrators can easily downgrade a package or install a previously removed package, provided the package is still in the current repository tree.

As an example, suppose packages foo-1.0 and foo-1.1 are both in the repository. After updating from foo-1.0 to foo-1.1, run {{c|eclean distfiles}}: source files for both versions will be kept, so if a problem occurs with foo-1.1 then the user can easily re-install foo-1.0 without re-downloading anything.

The other possible case is installing a previously removed package. Suppose that a package foo (any version) is installed on the system. After (inadvertently) removing it and running {{c|eclean distfiles}}, the source files for foo will be kept, so it can be re-installed without re-downloading anything.

The same examples also apply for binary packages.

To save more disk space, add the <code>--deep</code> option: every source file or binary package that does not correspond to some ''currently installed'' package (version does matter) will be deleted. Please notice that this way users will not be protected in case they need to downgrade a package or re-install a previously removed package.

As an alternative, use both the <code>--deep</code> and the <code>--package-names</code> options: every source file or binary package that does not correspond to some currently installed package (version does not matter) will be deleted. This still will not protect in case a re-install of a previously removed package is needed, but it will protect the sources if the package needs to be downgraded later.

For more details read the eclean(1) man page:

{{Cmd|man 1 eclean}}

== See also ==

* [[Gentoolkit]]
* [[Knowledge Base:Remove obsoleted distfiles|Knowledge Base: Remove obsoleted distfiles]]
* [[DISTDIR]]


[[Category:Portage tools]]
