<languages />


{{Metadata|abstract=AIDE ('''''A'''dvanced '''I'''ntrusion '''D'''etection '''E'''nvironment'') is a host-based intrusion detection system. AIDE scans files and other resources and stores information about these files in a database. Stored information includes key file attributes such as file hash output, file size, ownership, modification time, creation time, and more. After the initial database has been created, AIDE then rescans the system and compares new scan results with previously stored values. If values differ then the file has been changed and the change will be reported. The idea behind using AIDE is to create a snapshot of a system then compare the snapshot to another created snapshot to find compromised files.}}

AIDE ('''''A'''dvanced '''I'''ntrusion '''D'''etection '''E'''nvironment'') is a host-based intrusion detection system. AIDE scans files and other resources and stores information about these files in a database. Stored information includes key file attributes such as file hash output, file size, ownership, modification time, creation time, and more. After the initial database has been created, AIDE then rescans the system and compares new scan results with previously stored values. If values differ then the file has been changed and the change will be reported. The idea behind using AIDE is to create a snapshot of a system then compare the snapshot to another created snapshot to find compromised files.

__TOC__

== 설치 ==

=== USE 플래그 ===

다음 항목과 같이 USE 플래그를 설정하고 나면 <tt>aide</tt>를 설치하는 일은 참 쉽습니다.
{{USEflag|package=app-forensics/aide|desc={{Package|app-forensics/aide}}용 추가 USE 플래그:
|acl+yes
|audit++yes
|curl
|mhash++yes
|nls+yes
|postgres
|prelink
|static
|xattr++yes
|zlib+yes
}}

USE flag changes specific to a certain package should be defined in the {{Path|/etc/portage/package.use}} file, or a text file inside a directory called {{Path|/etc/portage/package.use}}. For example, when using a {{Path|/etc/portage/package.use}} ''file'':

{{FileBox|filename=/etc/portage/package.use|title=Enable zlib support for AIDE|1=<pre>
app-forensics/aide zlib
</pre>}}

=== Emerge ===

After the USE flags have been set, install the software:

{{Emerge|app-forensics/aide}}

== 설정 ==

The configuration file for <tt>aide</tt> is not as daunting as it might seem at first sight. The default file is stored at {{Path|/etc/aide/aide.conf}} but administrators can easily create multiple configuration files if necessary. Besides a few variables, the configuration file contains short-hand notations for what aspects of files to scan for (only hashes, or also inode information, etc.) and which files to scan.

Take look at the database variables:

{{FileBox|filename=aide.conf|title=AIDE 데이터베이스 설정 변수|1=
database=file:/var/lib/aide/aide.db
database_out=file:/var/lib/aide/aide.db.new
}}

상단 예제의 첫번째 줄(<code>database</code>)에서는 알려진 값을 보관하는 데이터베이스의 위치를 설정합니다. 두번째 줄(<code>database_out</code>) 다른 데이터베이스를 이미 만들었을 경우 새 데이터베이스를 저장할 위치를 설정합니다. 보통 동일한 데이터베이스를 가리키도록 두 변수의 값을 설정(두 변수에 동일한 경로를 설정)하는 것이 좋습니다. 어떤 데이터베이스가 다른 데이터베이스에 덮어쓰기를 한다면, 가장 좋은 방법이 있다면, 한 위치에서 다른 위치로 이미 만든 데이터베이스에 "직접 복사"하는 방법이 있습니다. 예를 들어 앞의 데이터베이스를 그 다음 데이터베이스로 덮어쓰려면, 다음 명령을 사용할 수 있습니다:

{{RootCmd|cp /var/lib/aide/aide.db.new /var/lib/aide/aide.db}}

For now, leave the database variables as they are; they will be covered in more detail later in the article.

The next file to consider is the {{Path|aide.conf}} file. The values of the variable are short-hand notations for what information to record in the database.

{{FileBox|filename=aide.conf|title=AIDE configuration using shorthand notation|lang=ini|1=
Binlib = p+i+n+u+g+s+b+m+c+md5+sha1
Logs = p+i+n+u+g+S
...
}}

{{Note|It should be obvious that <code>md5</code> and <code>sha1</code> mean that MD5 and SHA-1 checksums are taken (respectively).}}

The letters are described in the default {{Path|aide.conf}} file, but for convenience the following table provides an overview of the most common options:

{| class="table"
! Short
! Description
|-
| <code>p</code>
| Permissions
|-
| <code>i</code>
| inode number
|-
| <code>n</code>
| Number of (hard)links
|-
| <code>u</code>
| User information
|-
| <code>g</code>
| Group information
|-
| <code>s</code>
| Size
|-
| <code>S</code>
| Size (only report when the size is suddenly smaller - growing is allowed)
|-
| <code>b</code>
| Block count
|-
| <code>m</code>
| Modification time
|}

Next is an overview of which directories to scan, and what to scan for. In three line example to follow, AIDE is instructed to scan the {{Path|/bin}} and {{Path|/sbin}} directories via the measures identified in the <code>Binlib</code> short-hand notation variable. The {{Path|/var/log}} file will display the scan measures defined in the <code>Logs</code> variable defined above.

{{FileBox|filename=aide.conf|title=Scan target options|1=
/bin Binlib
/sbin Binlib
/var/log Logs
...
}}

AIDE supports regular expressions and users are allowed to "remove" matches. For instance, to scan {{Path|/var/log}} but not {{Path|/var/log/portage}} then make an exclusion set by using the <code>!</code> (exclamation point) before the excluded path(s):

{{FileBox|filename=aide.conf|title=Other scan targets|1=
/var/log Logs
!/var/log/portage
}}

=== 초기화 및 잦은 검사 ===

For a basic AIDE setup, a database must be initialized. This is performed using the <code>--init</code> option. To make sure AIDE uses the configuration settings defined in the sections before, be sure to pass the <code>--config</code> option pointed to the correct configuration file:

{{RootCmd|aide --init --config{{=}}/etc/aide/aide.conf|output=<pre>
AIDE, version 0.14.2
  
### AIDE database at /var/lib/aide/aide.db.new initialized.
</pre>}}

Once initialized, any pre-existing database files can be copied over:

{{RootCmd|cd /var/lib/aide; cp aide.db.new aide.db}}

With a new database available, the entries can be scanned again (now or at a later date) using the <code>--check</code> option. This will create another database containing any modifications that have made to the file system since the first database has been created. Be sure to use the <code>--config</code> option pointed to the same configuration file that the first database was created with:

{{RootCmd|aide --check --config{{=}}/etc/aide/aide.conf|output=<pre>
AIDE, version 0.14.2
  
### All files match AIDE database. Looks okay!
</pre>}}

If file modification(s) occurred, a notification will be sent out:

{{RootCmd|aide --check --config{{=}}/etc/aide/aide.conf|output=<pre>
AIDE found differences between database and filesystem!!
Start timestamp: 2013-04-11 15:31:02
  
Summary:
  Total number of files:        318
  Added files:                  0
  Removed files:                0
  Changed files:                2
  
  
---------------------------------------------------
Changed files:
---------------------------------------------------
  
changed: /etc/pam.d
changed: /etc/pam.d/run_init
  
---------------------------------------------------
Detailed information about changes:
---------------------------------------------------
  
  
Directory: /etc/pam.d
  Mtime    : 2013-04-09 22:11:18              , 2013-04-11 15:31:01
  Ctime    : 2013-04-09 22:11:18              , 2013-04-11 15:31:01
  
File: /etc/pam.d/run_init
  Size     : 205                              , 208
  Mtime    : 2013-04-09 22:11:18              , 2013-04-11 15:31:00
  Ctime    : 2013-04-09 22:11:18              , 2013-04-11 15:31:01
  Inode    : 394203                           , 394053
  MD5      : Mm0KPzpPt63eqGClTJ/KaQ==         , eLUrP2BsIq25f3AZX+dlBA==
  SHA1     : NrQtsUeOsXS4RHUq+ejYBne5V6E=     , 5A6ef6VJCcMiqEjKQ7e9xkBNZB8=
</pre>}}

== Best practices ==

=== Be clear on what to scan ===

기본 AIDE 설정은 유용하지만, 사용자의 요구에 맞추려면 세밀하게 조절해야 합니다. 어떤 파일을 왜 검사해야 하는지 아는 것이 중요합니다.

예를 들어, 인증 관련 파일만을 모두 검사하지만, 다른 파일에 대해서는 검사하지 않는다면, 다음처럼 설정을 사용할 수 있습니다:

{{FileBox|filename=aide.conf|title=인증 관련 검사 대상|1=
# SELinux policy and settings
/etc/selinux ConfFiles
# Authentication databases
/etc/passwd ConfFiles
/etc/shadow ConfFiles
/etc/nsswitch.conf ConfFiles
# Authentication configuration
/etc/pam.d ConfFiles
/etc/securetty ConfFiles
/etc/security ConfFiles
# PAM libraries
/lib(64)?/security Binlib
}}

=== 데이터베이스를 오프라인 상태 및 읽기 전용으로 유지하십시오 ===

A second important aspect is that the result database should be stored offline when ''not'' needed and should be used in read-only mode when the database ''is'' needed. This gives some protection against a malicious user that might have compromised the machine to modify the results database. For instance, provide the result database on a read-only NFS mount (for servers) or read-only medium (when physical access to the machine is possible) such as a CD/DVD or a read-only USB drive.

After storing the database on a read-only location, update the {{Path|aide.conf}} file to have <code>database=</code> point to this new location.

=== 오프라인 상태에서 검사하십시오 ===

가능하다면, 시스템에 대해 오프라인 검사 방법을 사용해보십시오. 가상 플랫폼의 경우 시스템의 스냅샷을 취할 수 있고 이 스냅샷을 마운트(읽기 전용) 할 수 있으며 마운트한 파일 시스템에 대해 AIDE 검사를 수행할 수 있습니다.

{{RootCmd|losetup /dev/loop0 /srv/virt/gentoo.img
|vgscan
|vgchange -ay
|mount -o ro /dev/volgrpX/volumeY /mnt/image
|chroot /mnt/image
|aide --check --config{{=}}/path/to/aide.conf
|exit
|umount /mnt/image
|vgchange -an /dev/volgrpX
|losetup -d /dev/loop0}}

The above approach uses <tt>chroot</tt>. This is only needed when the initial file system has been scanned from the live system and the administrator wants to perform an offline validation. If the initial scan was done offline, then the {{Path|aide.conf}} file will point to the mount point already and the database will use these paths immediately, so then there is no need for chrooting.

== 추가 참조 ==

* [[Integrity/Concepts]]  에서는 시스템 무결성과 관련한 개념을 다룹니다

== External resources ==

* [http://archive09.linux.com/articles/113919 Tutorial on how to use AIDE (Linux.com)]
* [http://www.symantec.com/connect/articles/securing-linux-aide Securing Linux with AIDE article (Symantec.com)]


[[Category:Server and Security]]
