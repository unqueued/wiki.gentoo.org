<languages />
<translate>
<!--T:1-->
This article provides information on how to get up and running with '''GRUB2''' in the simplest configurations. For more comprehensive information, see [[GRUB2]]. For a migration from [[GRUB|GRUB Legacy]] to GRUB2, see [[GRUB2 Migration]].

== Installing GRUB2 software == <!--T:2-->

<!--T:3-->
The {{Package|sys-boot/grub}} package is slotted which means both grub-0.97 and grub-2.xx may be installed at the same time. However, while both versions of GRUB can be installed simultaneously, only one version of GRUB may be active as the system's bootloader at a time.

<!--T:4-->
To install GRUB2, first set the <var>GRUB_PLATFORMS</var> variable with one or more appropriate values in the system's {{Path|make.conf}}. If unset, GRUB2 will guess which platform to use on the system. It guesses <code>pc</code> (which is the MBR style of installation) for {{Keyword|x86}}/{{Keyword|amd64}} architectures.

<!--T:5-->
{{FileBox|filename=/etc/portage/make.conf|title=<var>GRUB_PLATFORMS</var> example|lang=bash|1=
# Standard PC (BIOS)
GRUB_PLATFORMS="pc"
 
# UEFI on amd64
GRUB_PLATFORMS="efi-64"
 
# Both UEFI and PC
GRUB_PLATFORMS="efi-64 pc"
}}

<!--T:6-->
After the variable is set, emerge the software:

<!--T:7-->
{{emerge|sys-boot/grub:2}}

== Activating the GRUB2 boot loader == <!--T:8-->

<!--T:9-->
Mount {{Path|/boot}} if applicable:

<!--T:10-->
{{RootCmd|mount /boot}}

<!--T:11-->
When using an EFI platform, make sure that the [[EFI System Partition]] is available (mounted) at {{Path|/boot/efi}}. This can either be through a specific mount point (at {{Path|/boot/efi}}) or by having an entire {{Path|/boot}} partition formatted with the FAT filesystem. This will effectually render {{Path|/boot}} into a large EFI System Partition.

Presuming only {{Path|/boot/efi}} is FAT:

<!--T:12-->
{{RootCmd|mount /boot/efi}}

<!--T:13-->
Run the {{c|grub2-install}} utility to copy the relevant files to {{Path|/boot/grub}}. On the PC platform, this also installs a boot image to the Master Boot Record (MBR) or a partition's boot sector.

<!--T:14-->
To install GRUB2 to the MBR:

<!--T:15-->
{{RootCmd|grub2-install /dev/sda||output=<pre>
Installation finished. No error reported.
</pre>}}

<!--T:18-->
To install GRUB2 on an EFI capable system:

<!--T:19-->
{{RootCmd|grub2-install --target{{=}}x86_64-efi|output=<pre>
Installation finished. No error reported.
</pre>}}

<!--T:20-->
{{Important|When installing GRUB2 to an EFI capable system (like the example above) is giving troubles, make sure the <var>GRUB_PLATFORMS</var> variable is properly set in {{Path|/etc/portage/make.conf}}}}

<!--T:21-->
The {{c|grub2-install}} command accepts a <code>--target</code> option to specify which CPU/Platform to install. If unspecified, {{c|grub2-install}} will make a guess: on {{Keyword|x86}}/{{Keyword|amd64}} it will use the <code>i386-pc</code> value by default.

== Automatic configuration == <!--T:22-->

<!--T:23-->
GRUB2 is traditionally configured by using the {{c|grub2-mkconfig}} program to generate a configuration file.

<!--T:24-->
{{c|grub2-mkconfig}} generates the configuration file based on template sections located in {{Path|/etc/grub.d}}. The default templates should cover most common boot setups.

<!--T:25-->
{{Cmd|ls /etc/grub.d|output=<pre>
00_header  10_linux  20_linux_xen  30_os-prober  40_custom  41_custom  README
</pre>}}

<!--T:26-->
The behavior of these templates can be controlled by setting variables in {{Path|/etc/default/grub}}. See the [http://www.gnu.org/software/grub/manual/html_node/Simple-configuration.html GRUB manual] for more information.

=== Kernel naming scheme === <!--T:27-->

<!--T:28-->
In order for {{c|grub2-mkconfig}} to detect the available Linux kernel(s), their names must start with {{Path|vmlinuz-}} or {{Path|kernel-}}.

<!--T:29-->
For example:

<!--T:30-->
{{CodeBox|title=Example kernel names that GRUB2 can detect|<pre>
 /boot/vmlinuz-3.4.3
 /boot/kernel-2.6.39-gentoo
 /boot/kernel-genkernel-x86_64-3.17.1-gentoo-r1
</pre>}}

<!--T:31-->
When using an [[initramfs]], its name should start with {{Path|initramfs-}} or {{Path|initrd-}} and end with {{Path|.img}}. The version must match one of a kernel image. File names generated by {{c|[[genkernel]]}} will also work.

<!--T:32-->
For example:

<!--T:33-->
{{CodeBox|title=Example initramfs names that GRUB2 can detect|<pre>
 /boot/initrd.img-3.4.3
 /boot/initrd-3.4.3.img
 /boot/initrd-3.4.3.gz
 /boot/initrd-3.4.3
 /boot/initramfs-3.4.3.img
 /boot/initramfs-genkernel-3.4.3-gentoo
 /boot/initramfs-genkernel-x86_64-2.6.39-gentoo
</pre>}}

<!--T:34-->
To generate the {{Path|grub.cfg}} file, execute the {{c|grub2-mkconfig}} command like so:

<!--T:35-->
{{RootCmd|grub2-mkconfig -o /boot/grub/grub.cfg|output=<pre>
Generating grub.cfg ...
Found linux image: /boot/vmlinuz-3.2.9
done
</pre>}}

=== Silent kernel decompression === <!--T:36-->

<!--T:37-->
To silence kernel decompression at boot time, edit {{Path|/etc/default/grub}} and add <code>quiet</code> to the <var>GRUB_CMDLINE_LINUX_DEFAULT</var> variable.

<!--T:38-->
{{FileBox|filename=/etc/default/grub|title=Silent decompression example|lang=bash|1=
GRUB_CMDLINE_LINUX_DEFAULT="quiet"
}}

=== Systemd === <!--T:39-->

<!--T:40-->
To boot systemd while using GRUB2 make the <var>GRUB_CMDLINE_LINUX</var> variable look like this:

<!--T:41-->
{{FileBox|filename=/etc/default/grub|title=Systemd example|lang=bash|1=
GRUB_CMDLINE_LINUX="init=/usr/lib/systemd/systemd"
}}

=== Loading another operating system === <!--T:42-->

<!--T:43-->
{{c|grub2-mkconfig}} can also generate configurations to load ''other'' operating systems. This requires the {{Package|sys-boot/os-prober}} package.

<!--T:44-->
To boot Windows, the {{Package|sys-fs/ntfs3g}} also needs to be installed. It allows for the {{c|grub2-mkconfig}} utility to probe NTFS filesystems.

== Manual configuration == <!--T:45-->

<!--T:46-->
Users do not need to use {{c|grub2-mkconfig}}. The {{Path|grub.cfg}} file can be edited manually as well.

<!--T:47-->
As most users have experience with GRUB Legacy format, the next example shows how to write a GRUB2 configuration file based on information from the GRUB Legacy configuration.

<!--T:48-->
{|
! style="text-align: left;" | {{Path|grub.conf}} (GRUB Legacy)
|
! style="text-align: left;" | {{Path|grub.cfg}} (GRUB 2)
|-
| style="background: rgb(250,250,250); vertical-align: top; border: 1px solid black; padding: 5px 7px;" | <code style="color: gray; margin: 0; padding: 0; border: 0; background: transparent; line-height: normal;">timeout 5<br />
<br />
<span style="font-weight: bold; color: maroon;">title</span> Gentoo Linux 3.2.12<br />
root <span style="font-weight: bold; color: maroon;">(</span>hd0,<span style="font-weight: bold; color: maroon;">0)</span><br />
<span style="font-weight: bold; color: maroon;">kernel</span> /boot/kernel-3.2.12-gentoo root=/dev/sda3</code>
| style="vertical-align: middle; font-size: 50px; color: gray;" | â‡¨
| style="background: rgb(250,250,250); vertical-align: top; border: 1px solid black; padding: 5px 7px;" | <code style="color: gray; margin: 0; padding: 0; border: 0; background: transparent; line-height: normal;">timeout<span style="font-weight: bold; color: green;">=</span>5<br />
<br />
<span style="font-weight: bold; color: green;">menuentry</span> <span style="font-weight: bold; color: green;">'</span>Gentoo Linux 3.2.12<span style="font-weight: bold; color: green;">'</span> <span style="font-weight: bold; color: green;">{</span><br />
<span style="display: inline-block; width: 4ex; overflow: hidden;">	</span>root<span style="font-weight: bold; color: green;">=</span>hd0,<span style="font-weight: bold; color: green;">1</span><br />
<span style="display: inline-block; width: 4ex; overflow: hidden;">	</span><span style="font-weight: bold; color: green;">linux</span> /boot/kernel-3.2.12-gentoo root=/dev/sda3<br />
<span style="font-weight: bold; color: green;">}</span>
|}

== See also == <!--T:49-->

<!--T:50-->
*[[GRUB2]] - The 'full' GRUB2 article contains more information and an extensive list of resources.

</translate>

[[Category:Bootloaders]]
