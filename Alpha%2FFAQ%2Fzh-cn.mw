<languages />


{{Metadata|abstract=本文试图回答与 Gentoo/Alpha 和 Linux/Alpha 相关的一般性常见问题。}}

本文试图回答与 Gentoo/Alpha 和 Linux/Alpha 相关的一般性常见问题。

=== 简介 ===

本文涵盖了关于 Gentoo/Alpha 和 Alpha/Linux 相关的最经常遇到的相关问题。本文的目标受众包括新手和具有经验的用户。 

== 关于 Gentoo/Alpha 项目 ==

=== Gentoo/Alpha 是什么? ===

Gentoo/Alpha 项目负责保持 Alpha 平台上 Gentoo 发行版的更新。该项目主要包括系统关键包、可移植软件，并制作全新的发行版。Gentoo/Alpha 项目同时为桌面系统和服务器提供可用环境。 

== Alpha 体系架构 ==


=== Alpha 架构已死? ===

从某种意义上而言，答案是肯定的。 HP公司自从2007年4月27日起停止采购新的Alpha系统，并于2008年4月25日起停止了Alpha机型的销售和升级服务。可以参考如下链接获得更多细节：[http://h18002.www1.hp.com/alphaserver/evolution.html planning page] 

=== Can I run 32-bit applications? ===

不行。所有的 Alpha 系统使用纯64位内核以及纯64位的用户区。即使你使用<code>-m32</code> 编译器标识强制 gcc 输出32位代码，也做不到这一点。 

=== Alpha 系统使用高位优先编码还是低位优先编码体系? ===

Alpha系统使用低位优先编码体系。在一些巨型机克雷系统上的Alpha系统使用高位优先编码，但是 Linux 从未支持过它。 

=== 能在 Alpha 系统上运行Linux/x86 应用程序吗? ===

不行。除非你使用某种 x86 模拟器，比如 [http://wiki.qemu.org/Main_Page qemu]。过去某个时期 DEC/Compaq/HP 曾经提供过一个称作 <code>em86</code> 的程序，允许 Linux/x86 应用程序运行在 Linux/Alpha 系统上。 但是，该程序是封闭源代码的，并且不再提供更新。因此现在已经没有可用的<code>em86</code> 二进制文件与 gcc-3 的二进制接口兼容。 

===那我们在 Alpha 上安装 Gentoo 有何意义? ===

不可否认，您可以找到更快的64位系统，比如说 amd64。但是这并不意味着 Alpha 系统就毫无用处了。下面列出了你可能希望在某些 Alpha 硬件上安装 Linux 系统的一些理由： 

* 你可能想发掘某些旧计算机的用处。旧的 Alpha 系统可以充当很棒的路由器和服务器。他们的桌面系统的性能也不见得非常差。
* 你可能想学习那些不常见的计算机硬件。
* 这件事情非常酷。有多少人敢说他们曾经在 Alpha 机器上运行过 Linux?

=== 哪儿能买到 Alpha 硬件? ===

一般情况下在市面上已经找不到 Alpha 架构的硬件。如果运费不太高的话，[http://ebay.com eBay] 是个不错的选择。通过 Google 也可以找到不少二手设备经销商，当然一般情况下大多数都相对比较昂贵。 

== 硬件 ==

=== 打开 AlphaServer 机箱之后，它不能启动，该怎么办? ===

请确保机箱的顶部面板打开并在正确的位置上。机箱顶部面板的中间有个朝下的小金属片。当顶部面板放在了合适位置时，该金属片会把一个开关压住。如果这个开关没有压住，系统就不会启动。 

== Alpha Specific Compiler Flags ==

=== Is the use of Alpha specific compiler flags recommended? ===

就像使用其他编译器优化一样，应该遵循适度把握的原则。小心而正确的使用这些编译器标记，可以实现稳定的系统、提高系统速度；但是鲁莽而不加辨别地使用这些编译器标记，则很有可能造成系统崩溃。如果对某个标记心存疑虑，就不要使用。如果想获得这些标记更多的说明，请参考 <code>gcc</code> 的man page。 

===  How do I optimize for a specific instruction set and scheduling model? ===

You can optimize for a specific instruction set and scheduling model with <code>-mcpu=XXX</code>, where XXX is your cpu type. Valid cpu types are <code>ev4</code>, <code>ev45</code>, <code>ev5</code>, <code>ev56</code>, <code>pca56</code>, <code>ev6</code> and <code>ev67</code>. If you do not use the <code>-mcpu=XXX</code> flag, then <code>gcc</code> will default to the cpu type of the machine it was compiled on. <code>-mcpu=</code> is equivalent to the <code>-march=</code> flag on x86. 

{{Note|AlphaServer 800 users should set <code>ev5</code>. There are known issues setting <code>ev56</code> particularly with Xorg causing a full system lock up.}}

=== How do I specify the scheduling model without changing the instruction set? ===

You can specify the scheduling model without changing the instruction set with <code>-mtune=XXX</code>, where XXX is your cpu type. Valid cpu types are <code>ev4</code>, <code>ev45</code>, <code>ev5</code>, <code>ev56</code>, <code>pca56</code>, <code>ev6</code> and <code>ev67</code>. <code>-mtune=</code> is implied by <code>-mcpu=</code>, so you don't need to specify this with if you set <code>-mcpu=</code>. <code>-mtune=</code> is equivalent to the <code>-mcpu=</code> flag on x86.

=== How do I enable software assisted floating point numbers? ===

You can enable software assisted floating point numbers with <code>-mieee</code>. This will enable software assistance to correctly support denormalized numbers and exceptional IEEE values such as not-a-number and plus/minus infinity. 

This should be in your global <code>CFLAGS</code> unless you really know what you are doing. 

=== How do I specify the memory latency of my system? ===

You can specify the memory latency of your system with <code>-mmemory-latency=XXX</code>, where XXX is the number of clock cycles. This sets the latency time that the scheduler should assume for memory references. <code>gcc</code> has some predefined "typical" values that are also accepted by <code>-mmemory-latency=XXX</code>. Those values are <code>L1</code> for Dcache, <code>L2</code> for Scache, <code>L3</code> for Bcache, and <code>main</code> for main memory. 

This flag should probably not be use in your global <code>CFLAGS</code> as the value you choose is highly dependent on the memory access pattern of the application you are compiling. 

=== How do I specify that static data should be placed in the small data area? ===

You can specify that static data should be placed in the small data area with <code>-msmall-data</code>. This will cause <code>gcc</code> to take advantage of some features of the Alpha architecture by storing heavily used pieces of data in specific sections called the small memory sections. The sections are limited to 64KiB which means accessing anything stored in them will only take one instruction. 

<code>-fPIC</code> will override<code>-msmall-data</code>, so you should use the<code>-fpic</code> flag instead if you do not want<code>-msmall-data</code> to be overridden. 

This flag should probably not be used in your global <code>CFLAGS</code> as some objects require more than 64KiB to be stored, and this will cause a gp_overflow ld error. 

=== How do I specify that object code should be placed in the small text area? ===

You can specify that object code should be placed in the small text area with <code>-msmall-text</code>. This will cause <code>gcc</code> to assume that the entire program (or library) fits in 4MB, and is thus reachable with a branch instruction. This reduces the number of instructions required for a function call from 4 to 1. 

This flag should probably not be used in your global <code>CFLAGS</code> as some programs (or libraries) are larger than 4MB, and this will cause an ld error. 

=== What do I do if any of these compiler flags cause a compile, linker, or runtime error? ===

As [[#CFLAGS]], please use these <code>CFLAGS</code> cautiously. They may break your system. If you experience problems, try using less aggressive <code>CFLAGS</code> before [[#bugs]]. 

== Alpha Booting and Bootloaders ==

=== What is SRM? ===

SRM is based on the Alpha Console Subsystem specification, which provides an operating environment for OpenVMS, Tru64 UNIX, and Linux operating systems. See the [http://www.alphalinux.org/faq/SRM-HOWTO/ SRM Howto] for more information about SRM. 

=== What is ARC? ===

ARC is based on the Advanced RISC Computing (ARC) specification, which provides an operating environment for Windows NT. 

=== How can I tell if which firmware my Alpha has, ARC or SRM? ===

When you power your system on you will see a screen with a blue background and white text if it is using SRM. You will see a graphical boot system if it is using ARC. 

=== Which bootloader do I use? ===

If your Alpha system supports SRM, then you should use aboot. If your system supports both SRM and ARCs (ARC, AlphaBIOS, ARCSBIOS), then you should follow [http://www.alphalinux.org/faq/x31.html the SRM Firmware Howto] for switching to SRM and use aboot. If your system can only use ARCs (Ruffian, xl, etc.) then you will need to choose milo. 

=== Can aboot boot kernels from EXT4, XFS, ReiserFS, or JFS partitions? ===

No, <code>aboot</code> only supports booting kernels from <code>ext2</code> and <code>ext3</code> partitions. You may still use other files systems for your root partition, you just need to create a {{Path|/boot}} partition with either <code>ext2</code> or <code>ext3</code> on it. 

Support for ext4 is planned. In fact, there are patches floating around that add support for [https://bugs.gentoo.org/show_bug.cgi?id=106855 ReiserFS], [https://bugs.gentoo.org/show_bug.cgi?id=107103 XFS], and [http://alphalinux.org/wiki/index.php/Aboot_EXT4_support ext4]. 

== Software ==

=== How is Java support in Gentoo/Alpha? ===

Compaq/HP offered binary packages, called <code>compaq-jre</code> and <code>compaq-jdk</code>. They stopped all support, and the packages were removed from Gentoo on October 11, 2006. Since then, we haven't supported Java. 

=== Will there ever be working Java support? ===

It's possible to use <code>icedtea</code> on Alpha, but we have no plans to support it, due to the high maintenance costs involved with testing hundreds of additional packages. 

=== How is .NET support in Gentoo/Alpha? ===

Neither of the two main open source efforts, [http://www.mono-project.com/Main_Page mono] nor [http://www.dotgnu.org/ DotGNU], support the alpha architecture. 

=== What is needed for .NET support? ===

Bringing .NET to Alpha isn't a simple task. It requires coding all of the assembly language code generation macros for the JIT (just in time) compiler and coding architecture specific functions (register allocators, etc). 

== Alpha Linux Kernel ==

=== Which kernel sources should I use? ===

We recommend using <code>gentoo-sources</code> but <code>vanilla-sources</code> is also supported by Gentoo/Alpha. You should read the [[Kernel/Overview|Gentoo Kernel Guide]] to determine which one is right for your needs.

=== My system is broken with kernel-2.6, Can I build a 2.4 bassed system? ===

Gentoo/Alpha stopped supporting 2.4 kernel and profile in January 2008. Technically you can build a 2.4 Gentoo System (the kernel is in the tree) but you will have to mask all the 2.6 only packages by yourself and you won't have support from developers. 

Gentoo/Alpha will review all bug reports about non-working 2.6 systems and will try to help as much as we can. 

=== Are hardened-sources supported? ===

Short answer is no. They were supported some time ago, but we lost the hardware and the maintainer so now they are not supported. If you are interested and want to continue the initial work, please let us know. 

=== Does the 2.6 kernel support Alpha SMP? ===

There were some times in the past when it was broken. However, modern kernel versions are known to work well. 

== Helping out the Gentoo/Alpha Project ==

=== How do I report bugs? ===

If you find a bug or you want to send us patches, then you need to file a bug report. It only takes you a little bit of your time, and your help is really appreciated. Please follow the [https://wiki.gentoo.org/wiki/Bugzilla/Guide Gentoo Bug Reporting Guide]. 

=== How can I help the Gentoo/Alpha Project? ===

Users can help us by: 

* Filing clear and concise [[#bugs]].
* Testing software that does not yet have the <code>~alpha</code> keyword.
* Answering questions on the [http://www.gentoo.org/main/en/lists.xml mailing lists], [https://forums.gentoo.org/viewforum-f-32.html forum] and IRC channel.
* Sending patches
* Becoming an [http://www.gentoo.org/proj/en/base/alpha/AT/index.xml AT]

=== Is there an Alpha Arch Testers Project? ===

Yes, see the [http://www.gentoo.org/proj/en/base/alpha/AT/index.xml Gentoo Linux Alpha Arch Testers Project] page for details. 

== Troubleshooting ==

=== Why is Xorg locking up my Alpha? ===

This is usually caused by a bad -mcpu setting. For example, the AlphaServer 800 needs to be compiled with the <code>ev5</code> flag for xorg '''and''' glibc. Failing to do so will cause undesired results. 

== Other Resources ==

=== Why is there no Gentoo on Alpha forum? ===

On the [https://forums.gentoo.org Gentoo Forums] there are several arch specific categories like [https://forums.gentoo.org/viewforum-f-24.html Gentoo on PPC] and [https://forums.gentoo.org/viewforum-f-24.html Gentoo on Sparc]. There is no Gentoo on Alpha category because there simply isn't enough Gentoo/Alpha activity on the forums to warrant one. All Alpha related posts should go in the [https://forums.gentoo.org/viewforum-f-32.html Gentoo on Alternative Architectures] category.

=== Where can I get more help or information about Gentoo/Alpha? ===

If any of your questions weren't answered here, you can try other resources like the [http://www.gentoo.org/doc/en/handbook/handbook-alpha.xml Alpha Handbook] or [http://www.gentoo.org/proj/en/base/alpha/ our project homepage]. You can also ask us at <code>#gentoo-alpha</code> on <code>irc.freenode.net</code>, [https://forums.gentoo.org/viewforum-f-32.html Gentoo on Alternative Architectures Forum], or on the {{Mail|gentoo-alpha@lists.gentoo.org}} mailing list.

=== Where can I get more help or information about Alpha/Linux? ===

[http://alphalinux.org/wiki/index.php/Main_Page AlphaLinux.org] is a central repository for all things Alpha/Linux. 


[[Category:Core system]] {{Migrated|originalauthors=Thomas Cort, Brian Evans, nightmorph, Matt Turner}}
