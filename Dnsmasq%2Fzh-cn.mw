<languages />

{{Metadata|abstract=Dnsmasq是一个适合的中小型网络的轻量的DHCP/DNS服务器。}}

{{InfoBox stack
|{{InfoBox homepage|http://www.thekelleys.org.uk/dnsmasq/doc.html|header=true}}
|{{InfoBox wikipedia|Dnsmasq}}
}}

[http://thekelleys.org.uk/dnsmasq/doc.html Dnsmasq]是一个简单的DHCP/DNS服务器，它可以被一个小于1000个客户端的局域网来使用，关键特性是容易配置的而且占用空间很少，它还支持IPv6。

== Installation ==

Dnsmasq的安装可以被包管理器和Portage树完全支持。不过首先请先选择好适当的USE标记。

{{USEflag|package=net-dns/dnsmasq}}

下一步，安装 {{Package|net-dns/dnsmasq}}，然后把它加入default runlevel，如果您打算让它开机自动运行的话。

{{Emerge|net-dns/dnsmasq}}

{{RootCmd|/etc/init.d/dnsmasq start
|rc-update add dnsmasq default}}

== Configuration ==

有很多资源都可以被用来改变dnsmasq的行为，它们包括：
*通过 {{Path|/etc/conf.d/dnsmasq}}来提供的命令行选项
*主配置文件 ({{Path|/etc/dnsmasq.conf}})

=== 服务配置 ===

在 {{Path|/etc/conf.d/dnsmasq}}中，需要在启动时传递给dnsmasq后台驻留程序的命令行选项可以被配置。

{{FileBox|filename=/etc/conf.d/dnsmasq|title=dnsmasq服务配置范例 |1=
DNSMASQ_OPTS="--user=dnsmasq --group=dnsmasq -H /srv/virt/gentoo/hosts --max-cache-ttl=10"
}}

=== 主配置文件 ===

dnsmasq的主配置文件为{{Path|/etc/dnsmasq.conf}}。这个文件使用 <code>key[=value]</code> 语法而且是随安装包一起被提供出来的，它的文档非常全面，因此建议被阅读。在文件里或者通过命令行选项的设置，外部的资源是可以被引用的（例如一个DHCP主机文件）。

下面就是一个范例配置文件：

{{FileBox|filename=/etc/dnsmasq.conf|1=
# 只监听这个接口
interface=eth1
  
# 基本MAC地址来指定主机名
dhcp-host=00:1e:68:c2:ff:ee,endor,192.168.0.54,24h
  
# 任意其它的DHCP请求将从如下地址范围中获取IP地址
dhcp-range=eth1,192.168.0.100,192.168.0.120,12h
  
# 使能TFTP服务器并且为通过TFTP可以获取的文件设置根目录
enable-tftp
tftp-root=/var/lib/tftpboot
dhcp-boot=/pxelinux.0
}}

配置完配置文件后，服务需要被重启——重载虽然是被支持的但它是为其它资源准备的。

{{RootCmd|/etc/init.d/dnsmasq restart}}

=== Hosts文件 ===

dnsmasq使用 {{Path|/etc/hosts}} 文件作为它提供DNS服务所需的资源之一，除非 <code>-h</code> (<code>--no-hosts</code>) 命令行参数被传递给服务进程。

如果{{Path|/etc/hosts}}是最新的，dnsmasq服务需要接收一个SIGHUP信号来重新载入这些设置，这也可以通过初始化脚本“reload”命令来支持。

{{RootCmd|/etc/init.d/dnsmasq reload}}

这个行为也可以通过在配置文件中设置 <code>no-hosts</code>参数来禁止。

=== 额外的hosts文件 ===

It is possible to refer to an (additional) hosts file to use as source for DNS queries. To do so, add the <code>-H /path/to/hostsfile</code> (<code>--addn-hosts=/path/to/hostsfile</code>) command line option. It is also possible to pass a directory; in that case, all files inside that directory will be treated as additional hosts files.

Similar to the standard hosts file, a SIGHUP signal reloads the file.

This behavior can also be set through the <code>addn-hosts</code> parameter in the configuration file.

=== Upstream nameservers ===

By default, dnsmasq uses the name servers specified in {{Path|/etc/resolv.conf}} as its upstream nameservers.

A different file can be used through the <code>-r</code> (<code>--resolv-file</code>) command line option.

This behavior can also be set through the <code>resolv-file</code> parameter in the configuration file.

== Features ==

Dnsmasq supports DNS, TFTP, PXE, router advertisements and DHCP services. As such, it is a versatile network management tool for small and medium-sized networks.

=== DNS services ===

In order to (only) provide DNS services, first identify the ''upstream nameserver'' to use. If this is the same nameserver as specified in {{Path|/etc/resolv.conf}} then no additional steps need to be taken. Otherwise, point dnsmasq to the proper {{Path|resolv.conf}} file through the <code>-r</code> (<code>--resolv-file</code>) command line. Its syntax is the one used by the {{Path|/etc/resolv.conf}} file, although dnsmasq only looks at the ''nameserver'' definitions.

For instance:

{{RootCmd|echo "nameserver 8.8.8.8" >> /etc/dnsmasq.conf.resolv}}

Next point dnsmasq to this file through the configuration file:

{{FileBox|filename=/etc/dnsmasq.conf|title=Configuring a custom resolv file|1=
resolv-file=/etc/dnsmasq.conf.resolv
}}

To verify that the service is running (after restarting as the configuration file has just been changed), use the <code>dig</code> command (provided through {{Package|net-dns/bind-tools}}), asking the DNS server (running on localhost in the following example) to resolve a local or remote address:

{{Cmd|dig @localhost +short www.gentoo.org|output=<pre>
www-bytemark-v4v6.gentoo.org.
89.16.167.134
</pre>}}

=== DNSSEC ===

Dnsmasq can validate DNSSEC data while passing through data. This can be accomplished by adding these lines to the config file:

{{FileBox|filename=/etc/dnsmasq.conf|title=Enabling DNSSEC|1=
# DNSSEC setup
dnssec
trust-anchor=.,19036,8,2,49AAC11D7B6F6446702E54A1607371607A1A41855200FD2CE1CDDE32F24E8FB5
dnssec-check-unsigned
}}

The trusted anchor can be found [https://data.iana.org/root-anchors/root-anchors.xml on the iana.org site]. After this change dnsmasq will return SERVFAIL and no DNS data if the validation fails. If the validation succeeds it sets the ''ad'' flag. In case the domain does not support DNSSEC dnsmasq behaves as before.

=== DHCP services ===

In order to enable the DHCP services of dnsmasq, use the <code>dhcp-range</code> configuration setting.

For instance, to enable IPv6 address configuration through RA with infinite lease time, and IPv4 address configuration also with infinite lease time:

{{FileBox|filename=/etc/dnsmasq.conf|title=Enabling IPv6 and IPv4 leases|1=
dhcp-range=2001:db8:81:e2::,ra-only,infinite
dhcp-range=192.168.100.100,192.168.100.149,infinite
}}

It is possible to use static definitions for known hosts, either through the main configuration file (<code>dhcp-host=</code> settings) or through a separate file. If a separate file is used, point dnsmasq to it through the <code>--dhcp-hostsfile</code> command line option. The advantage of the latter approach is that it is sufficient to send a SIGHUP signal (or reload the service) in order to reread the entries, whereas definitions in the configuration file require a full service restart.

For more information about the syntax of the <code>dhcp-host</code> parameter please refer to the manual page or configuration file as its syntax is very extensive.

== Usage ==

This section covers various usage scenarios (maintenance and operational tasks) for the dnsmasq service.

=== Resetting leases ===

Clients that had a network interface update which results in a different MAC address might not get the intended IP address immediately. This is because the dnsmasq service has provided this IP address to the old MAC address, and will wait until the lease of this address has expired before re-assigning it.

The dnsmasq service stores its leases in {{Path|/var/lib/misc/dnsmasq.leases}}. If the lease needs to be removed faster, shut down the dnsmasq service, remove the lease from the {{Path|dnsmasq.leases}} file and start the service again.

{{RootCmd|/etc/init.d/dnsmasq stop
|nano -w /var/lib/misc/dnsmasq.leases
|/etc/init.d/dnsmasq start}}

=== Reloading non-main configuration settings ===

Next to the {{Path|dnsmasq.conf}} file, the dnsmasq service can use external definitions for the following services:
* DHCP host configuration entries (through <code>--dhcp-hostsfile</code> command line option)
* DHCP options (through <code>--dhcp-optsfile</code> command line option)

When these files are modified, a SIGHUP signal has dnsmasq reload these configuration files.

{{Note|The {{Path|resolv.conf}} files are by default polled by dnsmasq; changes on these files are automatically picked up unless the <code>-n</code> (<code>--no-poll</code>) command line option is set or the <code>no-poll</code> configuration parameter is used.}}


[[Category:Software]]
