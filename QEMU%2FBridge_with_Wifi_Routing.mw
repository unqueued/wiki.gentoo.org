=Introduction=
When there are several VMs running and the developer wants them to interact with each other, you create a bridge. As discussed here you can easily bridge an Ethernet with the virtual machine(s). However, there are times when the developer is using a wireless network and still want to interact with the VMs. Also, another possibility is that the network on the ethernet is desired to have an independent state from the VMs and is not included in the bridge. This guide deals with such conditions.

=Prerequisites=
*{{Package|app-emulation/qemu}}  
*{{Package|net-dns/dnsmasq}}
*{{Package|sys-apps/usermode-utilities}}
*{{Package|net-misc/bridge-utils}}

Emerge the packages. Dnsmasq is not necessary but it can become very handy in case one does not want to setup the networking section of the guest and the host manually or the VMs depend on having a dhcp server running.

=Creating the Bridge=
As an example, we would like to bridge two virtual machines. If there is one, then only configure it so. If more are running, they can easily be added here. Edit the main network configuration file:
{{FileBox|filename=/etc/conf.d/net|lang=bash|1=
#Configure TUN/TAP interface for the first VM
tuntap_tap0="tap"
config_tap0=null

#Configure TUN/TAP interface for the second VM
tuntap_tap1="tap"
config_tap1=null

#Configure the bridge interface
config_br0="172.16.100.1/12"           # We do need to set the bridge manually.
bridge_br0="tap0 tap1"                 # If you have more VMs, add them.
rc_net_br0_need="net.tap0 net.tap1"    # If you have more VMs, add them.
}}

The interfaces must exist so:
{{RootCmd
|ln -s /etc/init.d/net.lo /etc/init.d/net.br0
|ln -s /etc/init.d/net.lo /etc/init.d/net.tap0
|ln -s /etc/init.d/net.lo /etc/init.d/net.tap1
}}

=Setting up Dnsmasq=
Configure dnsmasq:
{{FileBox|filename=/etc/dnsmasq.conf|lang=bash|1=
# We want dnsmasq to listen on br0 interface.
interface=br0
# We provide a dhcp range for dnsmasq
dhcp-range=172.16.100.50,172.16.100.150,12h
}}
{{Warning| The subnet for the dhcp-range must be the same as what specified for config_br0 earlier or the VMs will not be able to get IPs.}}

Start the service
{{RootCmd
|/etc/init.d/dnsmasq start
}}

=Network options for Qemu VMs=
Set the network options for the first VM like this:
*<code>-netdev tap,ifname=tap0,script=no,downscript=no,id=mynet0 -device virtio-net-device,netdev=mynet0,mac=00:12:35:56:78:9a</code>
As you can see, the interface has been specified <code>tap0</code> and also a mac address has been set. '''Setting a mac address is important''' as it helps the VMs be distinguishable.

For the second VM it can be done in the same way but with its own interface and mac address:

*<code>-netdev tap,ifname=tap1,script=no,downscript=no,id=mynet1 -device virtio-net-device,netdev=mynet1,mac=00:12:34:56:78:9a</code>


{{Note| Qemu is allergic to some mac addresses. So every one will not work.}}

Here the network adapter <code>virtio-net-device</code> has been utilized for better performance. Make sure that you have followed the necessary steps to build the driver inside the VM and provide the support in the host. For more information refer to {{QEMU}}.
