{{InfoBox stack
|{{InfoBox homepage|https://www.parallella.org/|header=true}}
|{{InfoBox wikipedia|Adapteva#Parallella_project}}
}}

The Adapteva Parallella is a family of credit card sized single board computers. Based on the dual-core Zynq-7000 series of ARMv7-A processors, they also contain a built-in FPGA and Epiphany-III 16-core co-processor. The board is intended to democratise access to parallel programming<ref>[https://www.parallella.org/about/ Parallella Project History]</ref>, due to the price, number of cores and low power draw (5W).

The Parallella was crowdfunded via Kickstarter<ref>[https://www.kickstarter.com/projects/adapteva/parallella-a-supercomputer-for-everyone Parallella: A Supercomputer For Everyone by Adapteva] on Kickstarter</ref>, and the schematics and design files were released as open source.

== Hardware ==

Generally available Parallella hardware comes in three forms:
* Parallella-16 Micro Server
* Parallella-16 Desktop Computer
* Parallella-16 Embedded Platform

Kickstarter backers would have been able to receive a limited number of Parallella-64s with a 64-core co-processor, but these were not mass-produced and are not covered here.

Parallella-16s can be powered by 2A 5V DC barrel jack (5.5mm OD/2.1mm ID centre-positive<ref>[https://www.parallella.org/quick-start/ Parallella Quick Start]</ref>), microUSB (with jumper) or by the metal pads in the corners via the J15 header<ref>[https://github.com/abopen/parallella-cluster-case/blob/master/README.md#powering-boards Parallella Cluster Case]</ref>. 

=== Parallella-16 Micro Server ===

{| class="table table-condensed table-striped" style="width: auto;"
! scope="col" width="20%" | Device
! scope="col" width="20%" | Make/model
! scope="col" width="10%" | Status
! scope="col" width="10%" | Kernel driver(s)
! scope="col" width="10%" | Kernel version
! scope="col" width="20%" | Notes
|-
| CPU
| Dual-core Zynq-7010
| {{Yes|Works}}
| ARCH_ZYNQ
|
|
|-
| Memory
| 1GB DDR3L
| {{Yes|Works}}
|
|
|
|-
| Co-processor
| 16-core Epiphany-III
| {{Yes|Works}}
| EPIPHANY
| parallella-4.4.0
|
|-
| Ethernet
| 10/100/1000
| {{Yes|Works}}
| ARM_AMBA
|
| Max. 1500 MTU
|-
| Storage
| microSDXC
| {{Yes|Works}}
| ARM_AMBA
|
|
|-
| Serial
| UART<ref>[http://elinux.org/Parallella_UART_Connection elinux Parallella UART Connection]</ref>
| {{Yes|Works}}
|
|
|
|}

=== Parallella-16 Desktop Computer ===

Includes all hardware of the Parallella-16 Micro Server, additionally with:
{| class="table table-condensed table-striped" style="width: auto;"
! scope="col" width="20%" | Device
! scope="col" width="20%" | Make/model
! scope="col" width="10%" | Status
! scope="col" width="10%" | Kernel driver(s)
! scope="col" width="10%" | Kernel version
! scope="col" width="20%" | Notes
|-
| USB
| microUSB OTG
| {{Yes|Works}}
|
|
|
|-
| Video
| microHDMI
| {{No|Not working}}
|
|
| Older firmware supported HDMI output, however this has not been updated to the elink2 firmware
|-
| GPIO
| 
| {{Partial|Untested}}
|
|
|
|}

=== Parallella-16 Embedded Platform ===

Includes the hardware of the Parallella-16 Desktop Computers, except the CPU is upgraded to the Zynq-7020. EP devices must use FPGA firmware built for Zynq-7020 devices.

{| class="table table-condensed table-striped" style="width: auto;"
! scope="col" width="20%" | Device
! scope="col" width="20%" | Make/model
! scope="col" width="10%" | Status
! scope="col" width="10%" | Kernel driver(s)
! scope="col" width="10%" | Kernel version
! scope="col" width="20%" | Notes
|-
| CPU
| Dual-core Zynq-7020
| {{Partial|Untested}}
| ARCH_ZYNQ
|
|
|
|}

== Installation ==

=== SD Card ===

The Parallella finds its firmware, bootloader, kernel and device tree necessary to boot on the SD card.
In order for the board to find these files, the SD Card must be MBR/DOS partitioned, with the first partition FAT32 formatted. 

=== Firmware ===

Parallella boards load the FPGA firmware (including u-boot bootloader), kernel (uImage) and device tree (dtb) from the microSD card slot whenever power is applied to the board.

The firmware file must be named <code>parallella.bit.bin</code> on the FAT32 filesystem on the SD card.

This firmware is open sourced on [https://github.com/parallella/oh Github parallella/oh] but requires the free (as in beer) Xilinx Vivado tools to produce.

==== Versions ====

Parallella has provided 2 versions of the firmware ({{c|parallella.bit.bin}}) that boots Linux:
{| class="table table-condensed table-striped" style="width: auto;"
! scope="col" width="10%" | Date
! scope="col" width="10%" | Elink
! scope="col" width="10%" | Status
! scope="col" width="20%" | Notes
! scope="col" width="10%" | Source
|-
| 2016.3
| {{Yes|elink2}}
| latest
| Headless only
| [https://github.com/parallella/pubuntu/tree/master/fpga_bitfiles Github parallella/pubuntu fpga_bitfiles]
|-
| 2014.11
| {{No|elink1}}
|
| HDMI
| [https://github.com/parallella/parallella-hw/tree/master/archive/fpga/old/bitstreams Github parallella/parallella-hw old bitstreams]
|}

=== Kernel ===

Parallella provide kernel sources with working Epiphany drivers in the [https://github.com/parallella/parallella-linux parallella-linux] repository.
{{c|parallella-linux}} provides the {{c|parallella_defconfig}} target to generate a kernel config suitable for all Parallella boards.

{{Cmd
|make parallella_defconfig
|make uImage LOADADDR{{=}}0x8000
}}

Upstream kernels can also work, however the Epiphany driver has not been upstreamed.
Upstream kernels have the {{c|multi_v7_defconfig}} which is suitable for the Parallella.

{{Cmd|make multi_v7_defconfig}}

Building a kernel requires the {{c|sys-devel/bc}} package, and building a uImage requires the {{c|dev-embedded/u-boot-tools}} package:

{{Emerge|sys-devel/bc}}
{{Emerge|dev-embedded/u-boot-tools}}

The resulting uImage can be found at <code>arch/arm/boot/uImage</code>.
The kernel {{c|uImage}} must be named <code>uImage</code> on the FAT32 filesystem on the SD card.

==== Device Tree ====

The device tree is available in the {{c|parallella-linux}} sources at {{c|arch/arm/boot/dts/zynq-parallella-headless.dts}}.
It can be compiled into a dtb file with <kbd>make dtbs</kbd>:

{{Emerge|sys-apps/dtc}}
{{Cmd|make dtbs}}

The device tree must be named <code>devicetree.dtb</code> on the FAT32 filesystem on the SD card.

=== Root Filesystem ===

The upstream device tree ([https://github.com/parallella/parallella-linux/blob/parallella-linux-2016.3/arch/arm/boot/dts/zynq-parallella1.dtsi#L48 {{c|zynq-parallella1.dtsi}}]) configures the root partition as the second partition with an ext4 filesystem.

An armv7a stage3 can be unpacked and customised. Gentoo autobuilds can be found on [http://distfiles.gentoo.org/releases/arm/autobuilds/current-stage3-armv7a_hardfp/ distfiles.gentoo.org].

== Epiphany SDK (esdk) ==

Adapteva provides the SDK to interact with the Epiphany device on [https://github.com/adapteva/epiphany-sdk Github adapteva/epiphany-sdk].

Version 2016.3 of the esdk utilises the elink2 interface with the Epiphany chip and requires an elink2 firmware.

The esdk sources build for the armv7l architecture which is not the same as the Gentoo architecture (armv7a).

== Cross-compiling ==

A compatible cross-compiler can be generated with [[Embedded_Handbook/General/Creating_a_cross-compiler|crossdev]]:
{{RootCmd|crossdev -S -t armv7a-hardfloat-linux-gnueabi}}

When cross-compiling the kernel, call {{c|make}} with the {{c|ARCH}} and {{c|CROSS_COMPILE}} environment variables:
{{Cmd|make ARCH{{=}}arm CROSS_COMPILE{{=}}armv7a-hardfloat-linux-gnueabi-}}

When cross-compiling the Epiphany SDK, use the {{c|-c armv7a-hardfloat-linux-gnueabi}} flag:
{{Cmd
| git clone https://github.com/adapteva/epiphany-sdk sdk
|./sdk/build-epiphany-sdk.sh -d -R -c armv7a-hardfloat-linux-gnueabi
}}

== External Resources ==

* Parallella hardware design files are available on [https://github.com/parallella/parallella-hw Github parallella/parallella-hw].
* [https://www.xilinx.com/products/design-tools/vivado.html Xilinx Vivado Design Suite] to create the FPGA firmware files

== References ==

{{reflist}}

[[Category:Embedded_systems]]
