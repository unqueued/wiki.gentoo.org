<languages />

{{Metadata|abstract=Команда sudo предлагает простой и безопасный способ настройки повышения привилегий, то есть, разрешения обычным пользователям выполнять определенные (или все) команды от учетной записи root или какого-либо другого пользователя, возможно без указания пароля.}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://www.sudo.ws/|header=true}}
|{{InfoBox wikipedia|sudo}}
|{{InfoBox gitweb|http://www.sudo.ws/repos/sudo|raw=true}}
}}

Команда <tt>sudo</tt> предлагает простой и безопасный способ настройки повышения привилегий, то есть разрешения обычным пользователям выполнять определенные (или все) команды от учетной записи root или какого-либо другого пользователя, возможно без указания пароля.

sudo является наилучшим выбором в случае, когда необходимо предоставить какой-либо группе людей возможность выполнять определенный круг задач по администрированию системы без передачи им учетной записи суперпользователя root. С помощью sudo вы можете задать правила, кто и что может делать в системе. В данном руководстве вы ознакомитесь с основными возможностями этого чудесного инструмента.

__TOC__

Это руководство предназначается в качестве быстрого ознакомления. Пакет {{Package|app-admin/sudo}} обладает гораздо более широкими возможностями, чем описано в данном руководстве. Он обладает специальной возможностью редактирования файлов от имени другого пользователя (<tt>sudoedit</tt>), запуска из сценария (так, чтобы он мог выполняться в фоновом режиме, считывать пароль со стандартного потока ввода вместо клавиатуры) и так далее. 

Чтобы получить больше информации, прочтите man-страницы <tt>sudo</tt> и <tt>sudoers</tt>.

== Установка ==

=== USE флаги ===

{{USEflag|package=app-admin/sudo}}

=== Emerge === 

{{Emerge|app-admin/sudo}}

== Конфигурация == 

=== Журналирование событий === 

Одним из дополнительных преимуществ <tt>sudo</tt> является то, что она может записывать в лог любую попытку (успешную или нет) запустить приложение. Это очень полезно, если вы хотите отследить, кто сделал ту фатальную ошибку исправление которой заняла 10 часов :&#41;. 

=== Предоставление разрешений === 

Пакет {{Package|app-admin/sudo}} позволяет системному администратору предоставить другим пользователям разрешение на выполнение одного или более приложений для выполнения которых у них обычно нет прав. В отличие от использования для этих приложений <code>setuid</code> бита, <tt>sudo</tt> дает более тонкий контроль над тем, ''кто'' может выполнить определенную команду и ''когда''. 

С <tt>sudo</tt> вы можете создать определённый список тех, ''кто'' может выполнять определенное приложение. Если же вы установите бит setuid, то запустить такое приложение сможет любой пользователь (или пользователь, принадлежащий к определенной группе, в зависимости от используемых разрешений). Вы можете (и, может, даже должны) потребовать от пользователя вводить пароль, в тех случаях, когда он захочет запустить приложение. 

Настройка <tt>sudo</tt> осуществляется с помощью файла {{Path|/etc/sudoers}}. Этот файл нельзя редактировать <tt>nano /etc/sudoers</tt> или <tt>vim /etc/sudoers</tt> или любым другим редактором. Когда требуется изменить этот файл, необходимо использовать <tt>visudo</tt>. 

Этот инструмент проверяет, что файл не редактируется одновременно сразу двумя администраторами, сохраняет разрешения доступа к файлу и выполняет некоторую проверку синтаксиса, чтобы убедиться, что в файле не допущено  фатальных ошибок. 

=== Основной синтаксис ===

Наиболее трудной частью <tt>sudo</tt> является синтаксис {{Path|/etc/sudoers}}. Основной синтаксис выглядит так: 

{{CodeBox|title=Основной синтаксис /etc/sudoers|1=
user  host = commands
}}

Этот синтаксис сообщает <tt>sudo</tt>, что пользователь, идентифицированный как <code>user</code> и вошедший в систему <code>host</code>, может выполнить от root любую из команд, перечисленных в <code>commands</code>. Вот более приближённый к действительности пример, который может прояснить ситуацию: разрешить пользователю ''larry'' запускать <tt>emerge</tt>, если он вошел в систему localhost: 

{{CodeBox|title=Реальные примеры /etc/sudoers|1=
larry localhost = /usr/bin/emerge
}}

{{Note|Имя хоста должно соответствовать тому, что возвращает команда <tt>hostname</tt>.}}

{{Warning|Не разрешайте пользователю запускать приложение, которое может повысить его текущие привилегии. Например, разрешение пользователям выполнения <tt>emerge</tt> с правами root на самом деле может предоставить им полный доступ к системе с этими правами, так как <tt>emerge</tt> можно заставить изменить реальную файловую систему на выгоду пользователю. Если вы не доверяете своим пользователям <code>sudo</code>, не предоставляйте им вообще никаких прав.}}

Имя пользователя также может быть заменено на имя группы - в этом случае оно должно начаться со знака <code>%</code>. Вот пример разрешения кому-либо в группе <tt>wheel</tt> запускать <tt>emerge</tt>: 

{{CodeBox|title=Разрешение членам группы wheel запускать emerge|1=
%wheel  localhost = /usr/bin/emerge
}}

Эту строку можно расширить на несколько команд (чтобы не создавать записи для каждой команды). Например, чтобы разрешить тому же пользователю не только запускать <tt>emerge</tt>, но также и <tt>ebuild</tt> и <tt>emerge-webrsync</tt> с правами root: 

{{CodeBox|title=Составные команды|1=
larry localhost = /usr/bin/emerge, /usr/bin/ebuild, /usr/sbin/emerge-webrsync
}}

Также можно указать точное имя команды, а не инструмент сам по себе. Это полезно для ограничения использования определенного инструмента к указанному набору параметров командной строки. Инструмент <tt>sudo</tt> разрешает использование шаблонов поиска в стиле оболочки (также известных как метасимволы или glob characters) в именах путей так же, как и в аргументах командной строки в файле sudoers. Заметьте, что они ''не'' являются регулярными выражениями. 

Давайте это протестируем: 

{{Cmd|sudo emerge -uDN world|output=<pre>
We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:
  
    #1&#41; Respect the privacy of others.
    #2&#41; Think before you type.
    #3&#41; With great power comes great responsibility.
  
Password: ## (Введите пароль пользователя, не root!)
</pre>
}}

Пароль, который требует <tt>sudo</tt> — это личный пароль пользователя. Это нужно для того, чтобы убедиться, что ни один из терминалов, который был случайно оставлен открытым, не мог быть использован в злонамеренных целях. 

Также следует помнить, что <tt>sudo</tt> не изменяет переменную <code>${Path}</code>: любая команда, размещенная после <tt>sudo</tt>, обрабатывается из ''вашей'' среды. Если необходимо, чтобы пользователь запускал утилиты, к примеру, из {{Path|/sbin}}, он должен предоставить <code>sudo</code> полный путь, как показано ниже: 

{{Cmd|sudo /usr/sbin/emerge-webrsync}}

=== Базовый синтаксис при работе с LDAP === 

USE флаги {{c|ldap}} и {{c|pam}} нужны для поддержки LDAP.

При использовании sudo с LDAP, sudo будет также читать конфигурацию из LDAP-сервера.
Поэтому вам нужно будет отредактировать два файла.

{{FileBox|filename=/etc/ldap.conf.sudo|title=Пожалуйста, измените права на 400 когда закончите|1=
# See ldap.conf(5) and README.LDAP for details
# This file should only be readable by root
  
# supported directives: host, port, ssl, ldap_version
# uri, binddn, bindpw, sudoers_base, sudoers_debug
# tls_{checkpeer,cacertfile,cacertdir,randfile,ciphers,cert,key}
  
host ldap.example.com
port 389
  
base dc=example,dc=com
  
uri ldap://ldap.example.com/
#uri ldapi://%2fvar%2frun%2fopenldap%2fslapd.sock
  
ldap_version 3
#ssl start_tls
  
sudoers_base ou=SUDOers,dc=example,dc=com
#sudoers_debug 2
  
bind_policy soft
}}

{{FileBox|filename=/etc/nsswitch.conf|title=Добавьте строчку с sudoers|1=
sudoers:     ldap files
}}

Также нужно будет добавить следующую запись LDAP для sudo.

{{Note|По соображениям безопасности ветка Sudoers находится в вершине дерева. Поэтому вы можете иметь отличные права от ldap на чтение/запись данной ветки.}}

{{CodeBox|title=Запись LDAP для Sudo|lang=ldif|1=
version: 1
DN: ou=SUDOers,dc=example,dc=com
objectClass: organizationalUnit
objectClass: top
objectClass: domainRelatedObject
associatedDomain: example.com
ou: SUDOers
  
DN: cn=defaults,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: defaults
description: Default sudoOption's go here
sudoOption: env_reset
  
DN: cn=root,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: root
sudoCommand: ALL
sudoHost: ALL
sudoUser: root
  
DN: cn=%wheel,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: %wheel
sudoCommand: ALL
sudoHost: ALL
sudoOption: !authenticate
sudoUser: %wheel
}}

{{CodeBox|title=Запись LDAP для группы wheel|lang=ldif|1=
version: 1
DN: cn=wheel,ou=Group,dc=example,dc=com
objectClass: top
objectClass: posixGroup
cn: wheel
description: Wheel Group
gidNumber: 10
memberUid: useradmin1
memberUid: root
}}

Конфигурация sudoer на LDAP похожа на такую же конфигурацию в случае файлов, с некоторыми отличиями. Прочитайте больше о LDAP по ссылке ниже.<ref name="test">[http://www.sudo.ws/sudo/sudoers.ldap.man.html]man-страница Sudoers LDAP</ref>

<references />

=== Использование псевдонимов ===

В большой и сложной системе необходимость ввода всех пользователей снова и снова (или хостов, или команд), может стать довольно занудной задачей. Чтобы облегчить администрирование {{Path|/etc/sudoers}}, можно определить псевдонимы (''aliases''). Формат их объявления достаточно прост. 

{{CodeBox|title=Объявление псевдонимов в /etc/sudoers|1=
Host_Alias hostalias = hostname1, hostname2, ...
User_Alias useralias = user1, user2, ...
Cmnd_Alias cmndalias = command1, command2, ...
}}

Одним из псевдонимов, который работает всегда и в любом месте, является псевдоним <code>ALL</code> (чтобы провести хорошее различие между псевдонимами и не псевдонимами, рекомендуется использовать заглавные буквы для псевдонимов). Как вы, несомненно, уже догадались, псевдоним <code>ALL</code> - это псевдоним для всех возможных настроек. 

Пример использования псевдонима <code>ALL</code> для разрешения ''любому'' пользователю выполнения команды <tt>shutdown</tt>, если он вошел в систему локально: 

{{CodeBox|title=Разрешение выполнения команды shutdown любому пользователю|lang=bash|1=
ALL  localhost = /sbin/shutdown
}}

Другим примером является разрешение пользователю <tt>larry</tt> выполнения команды <tt>emerge</tt> с правами root, независимо от того, откуда он вошел в систему: 

{{CodeBox|title=Разрешение пользователю выполнения приложения, независимо от его нахождения|1=
larry  ALL = /usr/bin/emerge
}}

Более интересно определить набор пользователей, которые могут запускать приложения, администрирующие программное обеспечение (такие как <tt>emerge</tt> и <tt>ebuild</tt>), в системе, и группу администраторов, которые могут изменять пароль любого пользователя, за исключением учетной записи root! 

{{CodeBox|title=Использование псевдонимов для пользователей и команд|1=
User_Alias  SOFTWAREMAINTAINERS = larry, john, danny
User_Alias  PASSWORDMAINTAINERS = larry, sysop
Cmnd_Alias  SOFTWARECOMMANDS    = /usr/bin/emerge, /usr/bin/ebuild
Cmnd_Alias  PASSWORDCOMMANDS    = /usr/bin/passwd [a-zA-Z0-9_-]*, !/usr/bin/passwd root
  
SOFTWAREMAINTAINERS  localhost = SOFTWARECOMMANDS
PASSWORDMAINTAINERS  localhost = PASSWORDCOMMANDS
}}

=== Выполнение от не root пользователя ===

Также возможен запуск пользователем приложения от имени другого пользователя, не root. Очень интересное применение может быть, если вы запустите приложения от имени другого пользователя (например, <tt>apache</tt> для веб-сервера) и хотите разрешить определенным пользователям выполнять административные задачи в качестве того пользователя (например, завершение зомби процессов). 

В файле {{Path|/etc/sudoers}} перечислите пользователя(лей) внутри <code>(</code> и <code>)</code> перед списком команд: 

{{CodeBox|title=Синтаксис выполнения от не root|1=
users  hosts = (run-as) commands
}}

Например, чтобы разрешить пользователю <tt>larry</tt> запуск утилиты <code>kill</code> от пользователя <tt>apache</tt> или <tt>gorg</tt>: 

{{CodeBox|title=Пример выполнения от не root пользователя|1=
Cmnd_Alias KILL = /bin/kill, /usr/bin/pkill
  
larry   ALL = (apache, gorg) KILL
}}

С такой настройкой пользователь может запускать <tt>sudo -u</tt> для выбора пользователя, от имени которого он хочет запустить приложение: 

{{Cmd|sudo -u apache pkill apache}}

Вы можете установить alias для пользователя, от имени которого нужно запустить приложение, используя директиву <code>Runas_Alias</code> . Ее использование идентично другим директивам <code>_Alias</code>, которые мы видели ранее. 

=== Пароли и настройки по умолчанию ===

По умолчанию <tt>sudo</tt> просит пользователя идентифицировать себя, используя его собственный пароль. Как только пароль введен, <tt>sudo</tt> запоминает его на 5 минут, позволяя пользователю сосредоточиться на своих задачах и не вводить свой пароль повторно. 

Конечно же, это поведение можно изменить: вы можете установить директиву <code>Defaults:</code> в {{Path|/etc/sudoers}}, чтобы изменить поведение по умолчанию для пользователя. 

Например, чтобы изменить 5 минут по умолчанию на 0 (не запоминать пароль никогда): 

{{CodeBox|title=Изменение значения истечения времени|1=
Defaults:larry  timestamp_timeout=0
}}

Настройка <code>-1</code> запомнит пароль навсегда (до тех пор, пока система не будет перезагружена). 

Другой настройкой может быть требование пароля пользователя от имени, которого нужно запустить команду, а не личного пароля. Это достигается использованием <code>runaspw</code>. В следующем примере мы также установим число повторных попыток (как много раз пользователь может ввести пароль заново, перед тем как <code>sudo</code> выдаст ошибку) на <code>2</code> вместо значения по умолчанию 3: 

{{CodeBox|title=Требование пароля администратора вместо пароля пользователя|1=
Defaults:john   runaspw, passwd_tries=2
}}

Другим интересным свойством является сохранение переменной <code>DISPLAY</code>, чтобы вы могли запускать графические утилиты: 

{{CodeBox|title=Сохранение переменной DISPLAY без изменений|1=
Defaults:john env_keep=DISPLAY
}}

Вы можете изменять десятки настроек по умолчанию, используя директиву <code>Defaults:</code>. Откройте man-страницу <tt>sudoers</tt> и найдите <code>Defaults</code>. 

Если вы, все же, хотите разрешить пользователю запускать определенный набор команд без ввода какого-либо пароля, вам нужно начать команды с <code>NOPASSWD:</code>, например: 

{{CodeBox|title=Разрешение запуска emerge от учетной записи root без запроса пароля|1=
larry     localhost = NOPASSWD: /usr/bin/emerge
}}

=== Автодополнение Bash ===

Пользователям, которым требуется автодополнение bash с использованием sudo, нужно один раз запустить следующую команду.

{{Cmd|sudo echo "complete -cf sudo" >> $HOME/.bashrc}}

=== Автодополнение Zshell ===

Пользователи, которым требуется автодополнение zsh для sudo, могут указать следующее в {{Path|.zprofile}} и {{Path|.zshrc}} соответсвенно

{{FileBox|filename=.zprofile|title=Добавление автодополнения zshell|lang=bash|1=
if [[ $EUID != 0 ]]; then
    typeset -xT SUDO_PATH sudo_path
    typeset -U sudo_path 
    sudo_path=({,/usr/local,/usr}/sbin(N-/))
    alias sudo="sudo env PATH=\"SUDO_PATH:$PATH\""
fi
}}

{{FileBox|filename=.zshrc|title=Adding zshell completion|lang=bash|1=
zstyle ':completion:*:sudo:*' environ PATH="$SUDO_PATH:$PATH"
}}

With the above change, all commands in the {{Path|/sbin}}, {{Path|/usr/sbin}} and {{Path|/usr/local/sbin}} locations will be available to the shell for completion when the command is prefaced with 'sudo'.

== Использование ==

=== Перечисление привилегий ===

Чтобы узнать, какими возможностями Вы обладаете, запустите <tt>sudo -l</tt> : 

{{Cmd|sudo -l|output=<pre>
Пользователь larry может запускать на данном хосте следующие команды:
    (root)   /usr/libexec/xfsm-shutdown-helper
    (root)   /usr/bin/emerge
    (root)   /usr/bin/passwd [a-zA-Z0-9_-]*
    (root)   !/usr/bin/passwd root
    (apache) /usr/bin/pkill
    (apache) /bin/kill
</pre>
}}

Если у вас есть какая-либо команда в {{Path|/etc/sudoers}}, которая не требует ввода пароля, пароль для перечисления этих записей также не потребуется. Иначе будет запрошен запрошен пароль (если он не запомнен). 

=== Продление срока действия пароля ===

By default, if a user has entered their password to authenticate their self to <tt>sudo</tt>, it is remembered for 5 minutes. If the user wants to prolong this period, he can run <tt>sudo -v</tt> to reset the time stamp so that it will take another 5 minutes before <tt>sudo</tt> asks for the password again. 

{{Cmd|sudo -v}}

Чтобы удалить временную отметку, используйте <tt>sudo -k</tt>. 


[[Category:Software]]
