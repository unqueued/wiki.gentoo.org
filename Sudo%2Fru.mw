<languages />

{{Metadata|abstract=Команда sudo предлагает простой и безопасный способ настройки повышения привилегий, то есть, разрешения обычным пользователям выполнять определенные (или все) команды от учетной записи root или какого-либо другого пользователя, возможно без указания пароля.}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://www.sudo.ws/|header=true}}
|{{InfoBox wikipedia|sudo}}
}}

Команда <tt>sudo</tt> предлагает простой и безопасный способ настройки повышения привилегий, то есть разрешения обычным пользователям выполнять определенные (или все) команды от учетной записи root или какого-либо другого пользователя, возможно без указания пароля.

sudo является наилучшим выбором в случае, когда необходимо предоставить какой-либо группе людей возможность выполнять определенный круг задач по администрированию системы без передачи им учетной записи суперпользователя root. С помощью sudo вы можете задать правила, кто и что может делать в системе. В данном руководстве вы ознакомитесь с основными возможностями этого чудесного инструмента.

== О sudo ==

=== Предоставление разрешений ===

The {{Package|app-admin/sudo}} package allows the system administrator to grant permission to other users to execute one or more applications they would normally have no right to. Unlike using the <code>setuid</code> bit on these applications <tt>sudo</tt> gives a more fine-grained control on ''who'' can execute a certain command and ''when'' . 

С <tt>sudo</tt> вы можете создать определённый список тех, ''кто'' может выполнять определенное приложение. Если же вы установите бит setuid, то запустить такое приложение сможет любой пользователь (или пользователь, принадлежащий к определенной группе, в зависимости от используемых разрешений). Вы можете (и, может, даже должны) потребовать от пользователя указания пароля, в тех случаях, когда он захочет запустить приложение. 

=== Установка sudo ===

{{USEflag|package=app-admin/sudo
|ldap
|nls
|pam++Yes
|offensive
|skey
|selinux
|sendmail
}}

{{Emerge|sudo}}


=== Журналирование событий ===

One additional advantage of <tt>sudo</tt> is that it can log any attempt (successful or not) to run an application. This is very useful if you want to track who made that one fatal mistake that took you 10 hours to fix :) 

=== Настройка Sudo ===

Настройка <tt>sudo</tt> управляется файлом {{Path|/etc/sudoers}}. Этот файл нельзя редактировать <tt>nano /etc/sudoers</tt>, <tt>vim /etc/sudoers</tt> или любым другим редактором. Когда требуется изменить этот файл, необходимо использовать <tt>visudo</tt>. 

Этот инструмент проверяет, что этот файл не редактируется сразу двумя системными администраторами в один и тот же момент, сохраняет разрешения доступа к файлу и выполняет некоторую проверку синтаксиса, чтобы убедиться, что Вы не допустили фатальных ошибок в этом файле. 

=== Об этом Руководстве ===

This guide is meant as a quick introduction. The {{Package|app-admin/sudo}} package is a lot more powerful than what is described in this guide. It has special features for editing files as a different user (<tt>sudoedit</tt>), running from within a script (so it can background, read the password from standard in instead of the keyboard, ...), etc. 

Please read the <tt>sudo</tt> and <tt>sudoers</tt> manual pages for more information.

== Синтаксис Sudoers ==

=== Основной Синтаксис ===

The most difficult part of <tt>sudo</tt> is the {{Path|/etc/sudoers}} syntax. The basic syntax is like so: 

{{CodeBox|title=Основной синтаксис /etc/sudoers|1=
user  host = commands
}}

This syntax tells <tt>sudo</tt> that the user, identified by <code>user</code> and logged in on the system <code>host</code> can execute any of the commands listed in <code>commands</code> as the root user. A more real-life example might make this more clear: allow the user ''swift'' to execute <tt>emerge</tt> if he is logged in on localhost: 

{{CodeBox|title=Реальные примеры /etc/sudoers|1=
swift  localhost = /usr/bin/emerge
}}

{{Note|The hostname must match what the <tt>hostname</tt> command returns.}}

{{Warning|Do not allow a user to run an application that can allow people to elevate privileges. For instance, allowing users to execute <tt>emerge</tt> as root can indeed grant them full root access to the system because <tt>emerge</tt> can be manipulated to change the live file system to the user's advantage. If you do not trust your <tt>sudo</tt> users, don't grant them any rights.}}

The user name can also be substituted with a group name - in this case you should start the group name with a <code>%</code> sign. For instance, to allow any one in the <tt>wheel</tt> group to execute <tt>emerge</tt>: 

{{CodeBox|title=Разрешение членам группы wheel запускать emerge|1=
%wheel  localhost = /usr/bin/emerge
}}

You can extend the line to allow for several commands (instead of making a single entry for each command). For instance, to allow the same user to not only run <tt>emerge</tt> but also <tt>ebuild</tt> and <tt>emerge-webrsync</tt> as root: 

{{CodeBox|title=Составные команды|1=
swift  localhost = /usr/bin/emerge, /usr/bin/ebuild, /usr/sbin/emerge-webrsync
}}

You can also specify a precise command and not only the tool itself. This is useful to restrict the use of a certain tool to a specified set of command options. The <tt>sudo</tt> tool allows shell-style wildcards (AKA meta or glob characters) to be used in pathnames as well as command line arguments in the sudoers file. Note that these are ''not'' regular expressions. 

Давайте это протестируем: 

{{Cmd|sudo emerge -uDN world|output=<pre>
We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:
  
    #1&#41; Respect the privacy of others.
    #2&#41; Think before you type.
    #3&#41; With great power comes great responsibility.
  
Password: ## (Enter the user password, not root!)
</pre>
}}

The password that <tt>sudo</tt> requires is the user's own password. This is to make sure that no terminal that you accidentally left open to others is abused for malicious purposes. 

You should know that <tt>sudo</tt> does not alter the <code>${PATH}</code> variable: any command you place after <tt>sudo</tt> is treated from ''your'' environment. If you want the user to run a tool in for instance {{Path|/sbin}} he should provide the full path to <tt>sudo</tt>, like so: 

{{Cmd|sudo /usr/sbin/emerge-webrsync}}

=== Базовый синтаксис при использовании с LDAP === 

Следующие use-флаги нужны для поддержки LDAP.
{{USEflag|package=app-admin/sudo
|ldap++yes
|pam++Yes
}}

При использовании sudo с LDAP, sudo будет также читать конфигурацию с LDAP-сервера. Поэтому вам нужно будет отредактировать два файла.

{{FileBox|filename=/etc/ldap.conf.sudo|title=Пожалуйста, измените права на 400 когда закончите|1=
# See ldap.conf(5) and README.LDAP for details
# This file should only be readable by root
  
# supported directives: host, port, ssl, ldap_version
# uri, binddn, bindpw, sudoers_base, sudoers_debug
# tls_{checkpeer,cacertfile,cacertdir,randfile,ciphers,cert,key}
  
host ldap.example.com
port 389
  
base dc=example,dc=com
  
uri ldap://ldap.example.com/
#uri ldapi://%2fvar%2frun%2fopenldap%2fslapd.sock
  
ldap_version 3
#ssl start_tls
  
sudoers_base ou=SUDOers,dc=example,dc=com
#sudoers_debug 2
  
bind_policy soft
}}

{{FileBox|filename=/etc/nsswitch.conf|title=Пожалуйста, добавьте строчку с sudoers|1=
sudoers:     ldap files
}}

Также нужно будет добавить следующую запись LDAP для Sudo.

{{Note/ru|По соображениям безопасности ветка Sudoers находится на вершине дерева. Поэтому вы можете иметь другие права от ldap на чтение/запись данной ветки.}}

{{CodeBox|title=Запись Ldap для Sudo|lang=ldif|1=
version: 1
DN: ou=SUDOers,dc=example,dc=com
objectClass: organizationalUnit
objectClass: top
objectClass: domainRelatedObject
associatedDomain: example.com
ou: SUDOers
  
DN: cn=defaults,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: defaults
description: Default sudoOption's go here
sudoOption: env_reset
  
DN: cn=root,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: root
sudoCommand: ALL
sudoHost: ALL
sudoUser: root
  
DN: cn=%wheel,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: %wheel
sudoCommand: ALL
sudoHost: ALL
sudoOption: !authenticate
sudoUser: %wheel
}}


{{CodeBox|title=Запись Ldap для группы wheel|lang=ldif|1=
version: 1
DN: cn=wheel,ou=Group,dc=example,dc=com
objectClass: top
objectClass: posixGroup
cn: wheel
description: Wheel Group
gidNumber: 10
memberUid: useradmin1
memberUid: root
}}

Конфигурация sudoer на LDAP похожа на такую же конфигурацию в случае файлов, с некоторыми отличиями. Прочитайте больше о LDAP по ссылке ниже.<ref name="test">[http://www.sudo.ws/sudo/sudoers.ldap.man.html]man-страница Sudoers LDAP</ref>

<references />

=== Использование Псевдонимов ===

В более широком окружении, необходимость ввода всех пользователей снова и снова (или хостов, или команд), может стать обескураживающей задачей. Чтобы облегчить администрирование {{Path|/etc/sudoers}}, Вы можете определить псевдонимы (''aliases''). Формат их объявления достаточно прост. 

{{CodeBox|title=Объявление псевдонимов в /etc/sudoers|1=
Host_Alias hostalias = hostname1, hostname2, ...
User_Alias useralias = user1, user2, ...
Cmnd_Alias cmndalias = command1, command2, ...
}}

Одним из псевдонимов, который работает всегда и в любом месте, является псевдоним <code>ALL</code> (чтобы провести хорошее различие между псевдонимами и не псевдонимами, рекомендуется использовать заглавные буквы для псевдонимов). Как Вы, несомненно, уже догадались, псевдоним <code>ALL</code> - это псевдоним для всех возможных настроек. 

A sample use of the <code>ALL</code> alias to allow ''any'' user to execute the <tt>shutdown</tt> command if he is logged on locally is: 

{{CodeBox|title=Разрешение выполнения команды shutdown любому пользователю|lang=bash|1=
ALL  localhost = /sbin/shutdown
}}

Another example is to allow the user <tt>swift</tt> to execute the <tt>emerge</tt> command as root, regardless of where he is logged in from: 

{{CodeBox|title=Разрешение пользователю выполнения приложения, независимо от его нахождения|1=
swift   ALL = /usr/bin/emerge
}}

More interesting is to define a set of users who can run software administrative applications (such as <tt>emerge</tt> and <tt>ebuild</tt>) on the system and a group of administrators who can change the password of any user, except root! 

{{CodeBox|title=Использование псевдонимов для пользователей и команд|1=
User_Alias  SOFTWAREMAINTAINERS = swift, john, danny
User_Alias  PASSWORDMAINTAINERS = swift, sysop
Cmnd_Alias  SOFTWARECOMMANDS    = /usr/bin/emerge, /usr/bin/ebuild
Cmnd_Alias  PASSWORDCOMMANDS    = /usr/bin/passwd [a-zA-Z0-9_-]*, !/usr/bin/passwd root
  
SOFTWAREMAINTAINERS  localhost = SOFTWARECOMMANDS
PASSWORDMAINTAINERS  localhost = PASSWORDCOMMANDS
}}

=== Выполнение под другим пользователем ===

It is also possible to have a user run an application as a different, non-root user. This can be very interesting if you run applications as a different user (for instance <tt>apache</tt> for the web server) and want to allow certain users to perform administrative steps as that user (like killing zombie processes). 

В файле {{Path|/etc/sudoers}} перечислите пользователя/-лей внутри <code>(</code> и <code>)</code> перед списком команд: 

{{CodeBox|title=Синтаксис выполнения от другой учетной записи|1=
users  hosts = (run-as) commands
}}

For instance, to allow <tt>swift</tt> to run the <tt>kill</tt> tool as the <tt>apache</tt> or <tt>gorg</tt> user: 

{{CodeBox|title=Пример выполнения от другой учетной записи|1=
Cmnd_Alias KILL = /bin/kill, /usr/bin/pkill
  
swift   ALL = (apache, gorg) KILL
}}

With this set, the user can run <tt>sudo -u</tt> to select the user he wants to run the application as: 

{{Cmd|sudo -u apache pkill apache}}

Вы можете установить псевдоним для пользователя, от имени которого нужно запустить приложение, используя директиву <code>Runas_Alias</code> . Ее использование идентично другим директивам <code>_Alias</code>, которые мы видели ранее. 

=== Пароли и Настройки по Умолчанию ===

By default, <tt>sudo</tt> asks the user to identify himself using his own password. Once a password is entered, <tt>sudo</tt> remembers it for 5 minutes, allowing the user to focus on his tasks and not repeatedly re-entering his password. 

Конечно же, это поведение можно изменить: Вы можете установить директиву <code>Defaults:</code> в {{Path|/etc/sudoers}}, чтобы изменить поведение по умолчанию для пользователя. 

Например, чтобы изменить 5 минут по умолчанию на 0 (не запоминать пароль никогда): 

{{CodeBox|title=Изменение значения истечения времени|1=
Defaults:swift  timestamp_timeout=0
}}

Настройка <code>-1</code> запомнит пароль навсегда (до тех пор, пока система не будет перезагружена). 

A different setting would be to require the password of the user that the command should be run as and not the users' personal password. This is accomplished using <code>runaspw</code> . In the following example we also set the number of retries (how many times the user can re-enter a password before <tt>sudo</tt> fails) to <code>2</code> instead of the default 3: 

{{CodeBox|title=Требование пароля администратора вместо пароля пользователя|1=
Defaults:john   runaspw, passwd_tries=2
}}

Другим интересным свойством является настройка переменной <code>DISPLAY</code>, чтобы Вы могли запускать графические инструменты: 

{{CodeBox|title=Сохранение переменной DISPLAY|1=
Defaults:john env_keep=DISPLAY
}}

You can change dozens of default settings using the <code>Defaults:</code> directive. Fire up the <tt>sudoers</tt> manual page and search for <code>Defaults</code> . 

Если Вы, все же, хотите разрешить пользователю запускать определенный набор команд без ввода какого-либо пароля, Вам нужно начать команды с <code>NOPASSWD:</code> : 

{{CodeBox|title=Разрешение emerge запуска от учетной записи root без запроса пароля|1=
swift     localhost = NOPASSWD: /usr/bin/emerge
}}

== Использование Sudo ==

=== Перечисление Привилегий ===

To inform yourself what your capabilities are, run <tt>sudo -l</tt> : 

{{Cmd|sudo -l|output=<pre>
User swift may run the following commands on this host:
    (root)   /usr/libexec/xfsm-shutdown-helper
    (root)   /usr/bin/emerge
    (root)   /usr/bin/passwd [a-zA-Z0-9_-]*
    (root)   !/usr/bin/passwd root
    (apache) /usr/bin/pkill
    (apache) /bin/kill
</pre>
}}

Если у Вас имеется какая-либо команда в {{Path|/etc/sudoers}}, которая не требует ввода пароля, пароль для перечисления этих записей также не потребуется. Иначе, у Вас может быть запрошен пароль, если он не запомнен. 

=== Продление Времени Истечения Пароля ===

By default, if a user has entered his password to authenticate himself to <tt>sudo</tt> , it is remembered for 5 minutes. If the user wants to prolong this period, he can run <tt>sudo -v</tt> to reset the time stamp so that it will take another 5 minutes before <tt>sudo</tt> asks for the password again. 

{{Cmd|sudo -v}}

The inverse is to kill the time stamp using <tt>sudo -k</tt> . 

== Расширения Sudo ==

=== Автодополнение Bash ===

Пользователям, которым требуется автодополнение bash с использованием sudo, нужно запустить эту команду однократно.

{{Cmd|sudo echo "complete -cf sudo" >> $HOME/.bashrc}}

=== Автодополнение Zshell ===

Пользователи, которым требуется автодополнение zsh для sudo, могут установить следующее в {{Path|.zprofile}} и {{Path|.zshrc}}

{{FileBox|filename=.zprofile|title=Добавление автодополнения zshell|lang=bash|1=
if [[ $EUID != 0 ]]; then
    typeset -xT SUDO_PATH sudo_path
    typeset -U sudo_path 
    sudo_path=({,/usr/local,/usr}/sbin(N-/))
    alias sudo="sudo env PATH=\"SUDO_PATH:$PATH\""
fi
}}

{{FileBox|filename=.zshrc|title=Добавление автодополнения zshell|lang=bash|1=
zstyle ':completion:*:sudo:*' environ PATH="$SUDO_PATH:$PATH"
}}

С изменениями выше, все команды в расположениях {{Path|/sbin}}, {{Path|/usr/sbin}} и {{Path|/usr/local/sbin}} будут доступны оболочке для автодополнения, когда команда начинается с 'sudo'.


[[Category:Software]]
