<languages />

{{Metadata|abstract=Команда sudo предлагает простой и безопасный способ, позволяющий обычным пользователям выполнять определенные или все команды от учетной записи root или какого-либо другого пользователя, возможно без указания пароля.}}

{{InfoBox stack
|{{InfoBox homepage|http://www.sudo.ws/|header=true}}
|{{InfoBox wikipedia|sudo}}
|{{InfoBox gitweb|http://www.sudo.ws/repos/sudo|raw=true}}
}}

Команда {{c|sudo}} предлагает простой и безопасный способ настройки повышения привилегий, то есть разрешения обычным пользователям выполнять определенные (или даже все) команды от учетной записи {{c|root}} или другого пользователя c вводом пароля или без.

{{c|sudo}} — это наилучший выбор в случае, когда необходимо предоставить какой-либо группе людей возможность выполнять определенный круг задач по администрированию системы без передачи им полного [[Wikipedia:Superuser|доступа root]]. С помощью {{c|sudo}} вы можете контролировать, кто и что может делать в системе. Данное руководство ознакомит вас с основными возможностями этого мощного инструмента.

Это руководство предназначается в качестве быстрого ознакомления. Пакет {{Package|app-admin/sudo}} обладает гораздо более широкими возможностями, чем описано в данном руководстве. Он обладает специальной возможностью редактирования файлов от имени другого пользователя ({{c|sudoedit}}), запускаться из скрипта (так, чтобы он мог выполняться в фоновом режиме, считывать пароль со стандартного потока ввода вместо клавиатуры, ...) и так далее.

Чтобы получить больше информации, прочтите man-страницы {{c|sudo}} и {{c|sudoers}}.

== Установка ==

=== USE-флаги ===

{{USEflag|package=app-admin/sudo}}

=== Emerge ===

{{Emerge|app-admin/sudo}}

== Конфигурация ==

=== Журналирование событий ===

Одним из дополнительных преимуществ {{c|sudo}} является то, что он может журналировать любую попытку (успешную или нет) запустить приложение. Это очень полезно, если вы хотите отследить, кто сделал ту фатальную ошибку исправление которой заняла 10 часов :&#41;.

=== Предоставление разрешений ===

Пакет {{Package|app-admin/sudo}} позволяет системному администратору предоставить другим пользователям разрешение на выполнение одного или более приложений для выполнения которых у них обычно нет прав. В отличие от использования для этих приложений <code>setuid</code> бита, {{c|sudo}} дает более тонкий контроль над тем, ''кто'' может выполнить определенную команду и ''когда''.

С {{c|sudo}} вы можете создать определенный список тех, ''кто'' может выполнять определенное приложение. Если же вы установите бит [[wikipedia:setuid|setuid]] на исполняемом файле, то запустить такое приложение сможет любой пользователь (или пользователь, принадлежащий к определенной группе, в зависимости от используемых разрешений). Используя {{c|sudo}} вы можете (и, может, даже должны) потребовать от пользователя вводить пароль для запуска приложения.

Настройка {{c|sudo}} осуществляется с помощью файла {{Path|/etc/sudoers}}. Этот файл нельзя редактировать {{c|nano /etc/sudoers}}, или {{c|vim /etc/sudoers}}, или любым другим редактором, которым вы обычно пользуетесь. Когда требуется изменить {{Path|/etc/sudoers}} файл, необходимо всегда использовать {{c|visudo}}. Эта утилита делает так, чтобы только один системный администратор мог редактировать этот файл одновременно; сохраняет разрешения на файл и выполняет некоторою проверку синтаксиса, чтобы вы не сделали фатальных ошибок в файле.

=== Основной синтаксис ===

Наиболее трудной частью {{c|sudo}} является синтаксис {{Path|/etc/sudoers}}. Основной синтаксис выглядит так:

{{CodeBox|title=Основной синтаксис /etc/sudoers|1=
user  host = command
}}

Этот строка сообщает {{c|sudo}}, что пользователь, идентифицированный как <code>user</code> и вошедший в систему <code>host</code>, может выполнять команды <code>command</code> (можно разделить запятыми и получить список разрешенных команд).

Более реальный пример поможет разобраться в этом: чтобы разрешить пользователю {{c|larry}} выполнять команду {{c|emerge}}, когда он вошел в систему с {{c|localhost}}:

{{CodeBox|title=Реальный пример /etc/sudoers|1=
larry localhost = /usr/bin/emerge
}}

{{Note|Имя хоста должно соответствовать имени, которое возвращает команда {{c|hostname}}.}}

{{Note|Обычно, должен быть полный путь до исполняемых файлов: отсюда <code>/usr/bin/emerge</code>, не просто <code>emerge</code>. Также, пути могут содержать шаблоны поиска (wildcard) и могут относиться к целым каталогам. За дополнительной информацией обращайтесь к man-странице.}}

{{Warning|Не разрешайте обычному пользователю запускать приложение, которое может позволить ему повысить текущие привилегии. Например, разрешение пользователям выполнения {{c|[[emerge]]}} с правами root на самом деле может предоставить им полный доступ к системе с этими правами, так как {{c|emerge}} можно заставить изменить реальную файловую систему на выгоду пользователю. Если вы не доверяете своим пользователям {{c|sudo}}, не предоставляйте им никаких дополнительных прав.}}

Имя пользователя также может быть заменено на имя группы. В этом случае оно должно начинаться со знака <code>%</code>. Вот пример разрешения кому-либо в группе {{c|wheel}} запускать {{c|emerge}}:

{{CodeBox|title=Разрешение любому из группы {{c|wheel}} запускать {{c|emerge}}|1=
%wheel localhost = /usr/bin/emerge
}}

Чтобы разрешить выполнять более одной команды для этого  пользователя на этой машине, можно перечислить несколько команд в одной строке. Например, чтобы разрешить {{c|larry}} не только запускать {{c|emerge}}, но также и {{c|ebuild}} и {{c|emerge-webrsync}} с правами root:

{{CodeBox|title=Составные команды|1=
larry localhost = /usr/bin/emerge, /usr/bin/ebuild, /usr/sbin/emerge-webrsync
}}

Также можно указать точную команду (включая параметры и аргументы), а не просто имя выполняемого файла. Полезно, когда нужно ограничить использование некоторых утилит с некоторым набором параметров. Утилита {{c|sudo}} разрешает использование [[Wikipedia:Wildcard character|шаблонов поиска]] в стиле [[shell|оболочки]] (также известных как метасимволы или glob characters) в именах путей так же, как и в аргументах командной строки в файле sudoers. Заметьте, что они ''не'' являются регулярными выражениями.

Here is an example of {{c|sudo}} from the perspective of a first-time user of the tool who has been granted access to the full power of {{c|emerge}}:

{{Cmd|sudo emerge -uDN world|output=<pre>
We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:
 
    #1&#41; Respect the privacy of others.
    #2&#41; Think before you type.
    #3&#41; With great power comes great responsibility.
 
Password: ## (Введите пароль пользователя, не root!)
</pre>
}}

Пароль, который требует {{c|sudo}} — это личный пароль пользователя. Это нужно для того, чтобы убедиться, что ни один из терминалов, который был случайно оставлен открытым, не мог быть использован в злонамеренных целях.

{{Important|{{c|sudo}} does not alter the <code>${PATH}</code> variable: any command placed after {{c|sudo}} is executed within ''the user's own environment''. Thus if a user wants to run a tool in {{Path|/sbin}}, for instance, the user must provide {{c|sudo}} with the full path of the command, like so:
{{Cmd|sudo /usr/sbin/emerge-webrsync}}
}}

=== Базовый синтаксис при работе с LDAP ===

USE-флаги <code>ldap</code> и <code>pam</code> нужны для поддержки LDAP.

При использовании sudo с LDAP, sudo будет также читать конфигурацию из LDAP-сервера.
Поэтому вам нужно будет отредактировать два файла.

{{FileBox|filename=/etc/ldap.conf.sudo|title=Please chmod 400 when done|1=
# See ldap.conf(5) and README.LDAP for details
# This file should only be readable by root
 
# supported directives: host, port, ssl, ldap_version
# uri, binddn, bindpw, sudoers_base, sudoers_debug
# tls_{checkpeer,cacertfile,cacertdir,randfile,ciphers,cert,key
 
host ldap.example.com
port 389
 
base dc=example,dc=com
 
uri ldap://ldap.example.com/
#uri ldapi://%2fvar%2frun%2fopenldap%2fslapd.sock
 
ldap_version 3
#ssl start_tls
 
sudoers_base ou=SUDOers,dc=example,dc=com
#sudoers_debug 2
 
bind_policy soft
}}

{{FileBox|filename=/etc/nsswitch.conf|title=Добавьте строчку с sudoers|1=
sudoers:     ldap files
}}

Также нужно будет добавить следующую запись LDAP для sudo.

{{Note|По соображениям безопасности ветка Sudoers находится в вершине дерева. Поэтому вы можете иметь отличные права от ldap на чтение/запись данной ветки.}}

{{CodeBox|title=Запись LDAP для Sudo|1=
version: 1
DN: ou=SUDOers,dc=example,dc=com
objectClass: organizationalUnit
objectClass: top
objectClass: domainRelatedObject
associatedDomain: example.com
ou: SUDOers
 
DN: cn=defaults,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: defaults
description: Default sudoOption's go here
sudoOption: env_reset
 
DN: cn=root,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: root
sudoCommand: ALL
sudoHost: ALL
sudoUser: root
 
DN: cn=%wheel,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: %wheel
sudoCommand: ALL
sudoHost: ALL
sudoOption: !authenticate
sudoUser: %wheel
}}

{{CodeBox|title=Запись LDAP для группы wheel|1=
version: 1
DN: cn=wheel,ou=Group,dc=example,dc=com
objectClass: top
objectClass: posixGroup
cn: wheel
description: Wheel Group
gidNumber: 10
memberUid: useradmin1
memberUid: root
}}

Конфигурация sudoer на LDAP похожа на такую же конфигурацию в случае файлов, с некоторыми отличиями. Прочитайте больше о LDAP по ссылке ниже.<ref name="test">[http://www.sudo.ws/sudo/sudoers.ldap.man.html]man-страница Sudoers LDAP</ref>

<references />

=== Использование псевдонимов ===

В большой и сложной системе необходимость ввода всех пользователей снова и снова (или хостов, или команд), может стать довольно занудной задачей. Чтобы облегчить администрирование {{Path|/etc/sudoers}}, можно определить псевдонимы (''aliases''). Формат их объявления достаточно прост.

{{CodeBox|title=Объявление псевдонимов в /etc/sudoers|1=
Host_Alias hostalias = hostname1, hostname2, ...
User_Alias useralias = user1, user2, ...
Cmnd_Alias cmndalias = command1, command2, ...
}}

Одним из псевдонимов, который работает всегда и в любом месте, является псевдоним <code>ALL</code> (чтобы провести хорошее различие между псевдонимами и не псевдонимами, рекомендуется использовать заглавные буквы для псевдонимов). Как вы, несомненно, уже догадались, псевдоним <code>ALL</code> - это псевдоним для всех возможных настроек.

Пример использования псевдонима <code>ALL</code> для разрешения ''любому'' пользователю выполнения команды {{c|shutdown}}, если он вошел в систему локально:

{{CodeBox|title=Разрешение выполнения команды shutdown любому пользователю|lang=bash|1=
ALL  localhost = /sbin/shutdown
}}

Другим примером является разрешение пользователю {{c|larry}} выполнения команды {{c|emerge}} с правами root, независимо от того, откуда он вошел в систему:

{{CodeBox|title=Разрешение пользователю выполнения приложения, независимо от его нахождения|1=
larry  ALL = /usr/bin/emerge
}}

Более интересно определить набор пользователей, которые могут запускать приложения, администрирующие программное обеспечение (такие как {{c|emerge}} и {{c|ebuild}}), в системе, и группу администраторов, которые могут изменять пароль любого пользователя, за исключением учетной записи root!

{{CodeBox|title=Использование псевдонимов для пользователей и команд|1=
User_Alias  SOFTWAREMAINTAINERS = larry, john, danny
User_Alias  PASSWORDMAINTAINERS = larry, sysop
Cmnd_Alias  SOFTWARECOMMANDS    = /usr/bin/emerge, /usr/bin/ebuild
Cmnd_Alias  PASSWORDCOMMANDS    = /usr/bin/passwd [a-zA-Z0-9_-]*, !/usr/bin/passwd root
 
SOFTWAREMAINTAINERS  localhost = SOFTWARECOMMANDS
PASSWORDMAINTAINERS  localhost = PASSWORDCOMMANDS
}}

=== Выполнение от не root пользователя ===

Также возможен запуск пользователем приложения от имени другого пользователя, не root. Очень интересное применение может быть, если вы запустите приложения от имени другого пользователя (например, {{c|apache}} для веб-сервера) и хотите разрешить определенным пользователям выполнять административные задачи в качестве того пользователя (например, завершение зомби процессов).

В файле {{Path|/etc/sudoers}} перечислите пользователя(лей) внутри <code>(</code> и <code>)</code> перед списком команд:

{{CodeBox|title=Синтаксис выполнения от не root|1=
users  hosts = (run-as) commands
}}

Например, чтобы разрешить пользователю {{c|larry}} запуск утилиты {{c|kill}} от пользователя {{c|apache}} или {{c|gorg}}:

{{CodeBox|title=Пример выполнения от не root пользователя|1=
Cmnd_Alias KILL = /bin/kill, /usr/bin/pkill
 
larry   ALL = (apache, gorg) KILL
}}

С такой настройкой пользователь может запускать {{c|sudo -u}} для выбора пользователя, от имени которого он хочет запустить приложение:

{{Cmd|sudo -u apache pkill apache}}

Вы можете установить alias для пользователя, от имени которого нужно запустить приложение, используя директиву <code>Runas_Alias</code> . Ее использование идентично другим директивам <code>_Alias</code>, которые мы видели ранее.

=== Пароли и настройки по умолчанию ===

По умолчанию {{c|sudo}} просит пользователя идентифицировать себя, используя его собственный пароль. Как только пароль введен, {{c|sudo}} запоминает его на 5 минут, позволяя пользователю сосредоточиться на своих задачах и не вводить свой пароль повторно.

Конечно же, это поведение можно изменить: вы можете установить директиву <code>Defaults:</code> в {{Path|/etc/sudoers}}, чтобы изменить поведение по умолчанию для пользователя.

Например, чтобы изменить 5 минут по умолчанию на 0 (не запоминать пароль никогда):

{{CodeBox|title=Изменение значения истечения времени|1=
Defaults:larry  timestamp_timeout=0
}}

Настройка <code>-1</code> запомнит пароль навсегда (до тех пор, пока система не будет перезагружена).

Другой настройкой может быть требование пароля пользователя от имени, которого нужно запустить команду, а не личного пароля. Это достигается использованием <code>runaspw</code>. В следующем примере мы также установим число повторных попыток (как много раз пользователь может ввести пароль заново, перед тем как {{c|sudo}} выдаст ошибку) на <code>2</code> вместо значения по умолчанию 3:

{{CodeBox|title=Требование пароля администратора вместо пароля пользователя|1=
Defaults:john   runaspw, passwd_tries=2
}}

Другим интересным свойством является сохранение переменной <code>DISPLAY</code>, чтобы вы могли запускать графические утилиты:

{{CodeBox|title=Сохранение переменной DISPLAY без изменений|1=
Defaults:john env_keep=DISPLAY
}}

Вы можете изменять десятки настроек по умолчанию, используя директиву <code>Defaults:</code>. Откройте man-страницу {{c|sudoers}} и найдите <code>Defaults</code>.

Если вы, все же, хотите разрешить пользователю запускать определенный набор команд без ввода какого-либо пароля, вам нужно начать команды с <code>NOPASSWD:</code>, например:

{{CodeBox|title=Разрешение запуска emerge от учетной записи root без запроса пароля|1=
larry     localhost = NOPASSWD: /usr/bin/emerge
}}

=== Автодополнение Bash ===

Пользователям, которым требуется автодополнение bash с использованием sudo, нужно один раз запустить следующую команду.

{{Cmd|sudo echo "complete -cf sudo" >> $HOME/.bashrc}}

=== Автодополнение Zshell ===

Пользователи, которым требуется автодополнение zsh для sudo, могут указать следующее в {{Path|.zprofile}} и {{Path|.zshrc}} соответсвенно

{{FileBox|filename=.zprofile|title=Добавление автодополнения zshell|lang=bash|1=
if [[ $EUID != 0 ]]; then
    typeset -xT SUDO_PATH sudo_path
    typeset -U sudo_path
    sudo_path=({,/usr/local,/usr}/sbin(N-/))
    alias sudo="sudo env PATH=\"SUDO_PATH:$PATH\""
fi
}}

{{FileBox|filename=.zshrc|title=Добавление автодополнения zshell|lang=bash|1=
zstyle ':completion:*:sudo:*' environ PATH="$SUDO_PATH:$PATH"
}}

С данными изменениями все команды из {{Path|/sbin}}, {{Path|/usr/sbin}} и {{Path|/usr/local/sbin}} каталогов будут доступны оболочке для автодополнения, если команда начинается с 'sudo'.

== Использование ==

=== Список привилегий ===

Чтобы узнать, какими возможностями Вы обладаете, запустите {{c|sudo -l}}:

{{Cmd|sudo -l|output=<pre>
Пользователь larry может запускать на данном хосте следующие команды:
    (root)   /usr/libexec/xfsm-shutdown-helper
    (root)   /usr/bin/emerge
    (root)   /usr/bin/passwd [a-zA-Z0-9_-]*
    (root)   !/usr/bin/passwd root
    (apache) /usr/bin/pkill
    (apache) /bin/kill
</pre>
}}

Если у вас есть какая-либо команда в {{Path|/etc/sudoers}}, которая не требует ввода пароля, пароль для перечисления этих записей также не потребуется. Иначе будет запрошен запрошен пароль (если он не запомнен).

=== Продление срока действия пароля ===

По умолчанию, если пользователь ввел свой пароль для аутентификации в {{c|sudo}}, он запоминается на 5 минут. Если пользователь хочет продлить этот период, он может запустить {{c|sudo -v}} для сброса временной отметки и получить тем самым еще 5 минут перед тем, как {{c|sudo}} снова запросит пароль.

{{Cmd|sudo -v}}

Чтобы удалить временную отметку, используйте {{c|sudo -k}}.


[[Category:Software]]
