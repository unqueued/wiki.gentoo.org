<languages />

{{Metadata|abstract=Este artículo describe los pasos para actualizar a un nuevo núcleo.}}

Este artículo describe los pasos para actualizar a un nuevo [[Kernel/es|núcleo]].

== Instalación ==

Puede que se necesite la actualización del núcleo cuando se instales nuevos fuentes del mismo después de la actualización del sistema o cuando desee instalar nuevas fuentes del núcleo.

Installing new kernel sources doesn't provide the user with a new kernel. It is necessary to make and install a new kernel from the new sources and then reboot the system to actually run the new kernel.

Making a new kernel from the new sources is basically the same process as making a kernel when installing the system. The difference is that one can use the configuration of the old kernel to create a configuration for the new kernel. Using the old configuration saves the user from going through all the kernel options (like <tt>make menuconfig</tt>) again.

The configuration of the kernel is saved in a file named {{Path|.config}} in the directory that holds the kernel sources. A new kernel may have options or features the old kernel does not have, or it might not have a feature or option anymore which the old kernel still has.  The kernel configuration specifies whether the features and options of a kernel are to be enabled or not, perhaps built into the kernel, or perhaps built as modules which can be loaded into the running kernel on demand. Hence the configuration file of the new kernel may have new entries the configuration file of the old kernel doesn't have, and it might not have entries anymore which are present in the configuration file of the old kernel.

To deal with such changes of the configuration file, the configuration file of the old kernel needs to be converted to a configuration that can be used with the new kernel. This article shows how to make a new kernel from new kernel sources with converting the configuration file of the old kernel.

== Make a backup of the current kernel configuration ==

It is wise to make a backup of the kernel configuration so that the previous configurations are not lost. After all, many users devote considerable time to figure out the best configuration for the system, and losing that information is definitely not wanted.

It is easy to make a backup of the current kernel configuration:

{{RootCmd|cd /usr/src/linux
|cp .config ~/kernel-config-`uname -r`|}}

Provided that the symlink to the kernel sources has been set correctly, this copies the configuration of the currently used kernel to the home directory of root, renaming the configuration to {{Path|kernel-config-}} followed by the version of the current running Linux kernel.

== Set symlink to new kernel sources ==

El enlace simbólico {{Path|/usr/src/linux}} debe apuntar siempre a los ficheros fuente del núcleo que se esté utilizando. Esto se puede realizar de tres formas:

# Installing the kernel sources with <code>USE="symlink"</code>
# Setting the link with eselect
# Manually updating the symbolic link

=== Installing the kernel sources with the symlink USE flag ===

This will make the {{Path|/usr/src/linux}} point to the newly installed kernel sources.

If necessary, it can still be modified later with one of the other two methods.

=== Setting the link with eselect ===

To set the symlink with <tt>eselect</tt>:

{{RootCmd|eselect kernel list|output=<pre>
Available kernel symlink targets:
 [1] linux-3.14.14-gentoo *
 [2] linux-3.16.3-gentoo
</pre>}}

This outputs the available kernel sources. The asterisk indicates the chosen sources.

To change the kernel sources, e.g. to the second entry, do:

{{RootCmd|eselect kernel set 2}}

=== Manually updating the symbolic link ===

To set the symbolic link manually:

{{RootCmd|ln -sf /usr/src/linux-3.16.3 /usr/src/linux
|ls -l /usr/src/linux|output=<pre>
lrwxrwxrwx 1 root root 19 Oct  4 10:21 /usr/src/linux -> linux-3.16.3-gentoo
</pre>}}

== Copy previous kernel configuration ==

The configuration of the old kernel needs to be copied to the new one. It can be found in several places:

* En el sistema de ficheros [[procfs]] si la opción del núcleo ''Enable access to .config through /proc/config.gz'' se activó en su núcleo actual:

* En el directorio {{Path|/boot}} si instaló allí su fichero de configuración:

* En el directorio del núcleo que actualmente está corriendo:

== Configure the new kernel ==

To use the configuration of the old kernel with the new kernel, it needs to be converted.  The conversion can be done by running either <tt>make oldconfig</tt> or <tt>make silentoldconfig</tt>.

<tt>make oldconfig</tt> gives many choices, <tt>make silentoldconfig</tt> does not.  Use either, not both.

=== make oldconfig ===

The following configuration is like the text based configuration with <tt>make config</tt>.  For new configuration options, it gives a choice. For example:

{{RootCmd|make oldconfig
|output=Anticipatory I/O scheduler (IOSCHED_AS) [Y/n/m/?] (NEW)
}}

The string ''(NEW)'' at the end of the line marks this option as new. Left to the string in square brackets are the possible answers: ''Y''es, ''n''o, ''m''odule or ''?'' to show the help. The recommend answer is capitalized (here ''Y''). The help explains the option or driver.

Unfortunately <tt>make oldconfig</tt> doesn't show - next to the help - a lot more information for each option, like the context, so that it is sometimes difficult to give the right answer. In this case the best way to go is to remember the option name and revise it afterwards through one of the [[Kernel/Configuration#Configuration tools|graphical kernel configuration tools]].

=== make silentoldconfig ===

If interactivity is not wanted (no questions should be asked), then use <tt>make silentoldconfig</tt>:

{{RootCmd|cd /usr/src/linux
|make silentoldconfig}}

== Construcción ==

{{Important|When external kernel modules are installed (like nvidia or zfs), it may be necessary to run <tt>make modules_prepare</tt> as described [[Kernel/Upgrade#Reinstall external kernel modules|below]] before bulding the kernel. Some modules cannot be installed or prepared before the kernel has been built.}}

{{Important|Do not forget to reconfigure the [[Bootloader|bootloader]] to account for the new kernel filenames, and rebuild the initramfs if one is used as well.}}

Para realizar este paso, siga lo indicado en el artículo de [[Kernel/Configuration/es#Construcción|configuración manual]].

== Reinstalar módulos externos del núcleo ==

Cualquier módulo externo del núcleo como los [[:Category:Binary kernel modules|módulos binarios del núcleo]], necesitan reconstruirse cada vez que se actualiza el núcleo. Si todavía no ha construido su núcleo deberá prepararse en primer lugar para la construcción de los módulos externos del núcleo:

{{RootCmd|make modules_prepare}}

Puede reconstruir los paquetes usando el conjunto ''@module-rebuild'':

{{Emerge|@module-rebuild}}

== Solving build problems ==

Si tiene problemas cuando está reconstruyendo el núcleo actual, podría ser de utilidad sanear los ficheros fuente del núcleo. Asegúrese en primer lugar de hacer una copia de seguridad del fichero {{Path|.config}} ya que esta operación lo eliminará. Asegúrese de no utilizar los sufijos <code>.bak</code> o <code>~</code> como indicador de copia de respaldo ya que <code>make distclean</code> también los eliminará.

{{RootCmd|cp .config /usr/src/kernel_config_bk
|make distclean
|mv /usr/src/kernel_config_bk .config}}

== Eliminar núcleos antiguos ==

Lea el artículo sobre la [[Kernel/Removal/es|eliminación del núcleo]]. 

== Recursos externos ==

* [http://kernelnewbies.org/LinuxChanges Registro de cambios del núcleo con algunas explicaciones de nuevas características]

[[Category:Kernel]]
