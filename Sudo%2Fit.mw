<languages />

{{Metadata|abstract=Il comando sudo fornisce una via semplice e sicura per permettere agli utenti normali di eseguire alcuni (o tutti) comandi come root o altro utente, eventualmente senza fornire alcuna password.}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://www.sudo.ws/|header=true}}
|{{InfoBox wikipedia|sudo}}
|{{InfoBox gitweb|http://www.sudo.ws/repos/sudo|raw=true}}
}}

Il comando {{c|sudo}} fornisce una via semplice e sicura per permettere agli utenti normali di eseguire alcuni (o tutti) comandi come root o altro utente, eventualmente senza fornire alcuna password.

When you want some people to perform certain administrative steps on your system without granting them total [[Wikipedia:Superuser|root access]], using {{c|sudo}} is your best option. With {{c|sudo}} you can control who can do what. This guide offers you a small introduction to this powerful tool.

Questo articolo intende essere una veloce introduzione a {{c|sudo}}. Il pacchetto {{Package|app-admin/sudo}} è molto più potente di quanto si descritto in questo documento. Infatti, ha funzionalità speciali per modificare file come differente utente ({{c|sudoedit}}), eseguire dall'interno di uno script (lanciato in background, leggere la password dallo standard-in in alternativa alla tastiera, ...), ecc.

Per favore leggi le pagine del manuale di {{c|sudo}} e di {{c|sudoers}} per avere maggiori informazioni.

== Installazione ==

=== Flags USE ===

{{USEflag|package=app-admin/sudo}}

=== Emerge ===

{{Emerge|app-admin/sudo}}

== Configurazione ==

=== Attività di log ===

Un vantaggio addizionale di {{c|sudo}} è che può scrivere sul log ogni tentativo (con successo o senza successo) di eseguire una applicazione. Questo è molto utile se si vuole tenere traccia di chi fa un errore fatale che potrebbe richiedere 10 ore per la risoluzione.

=== Ottenimento dei permessi ===

Il pacchetto {{Package|app-admin/sudo}} permette all'amministratore del sistema di ottenere i permessi di altri utenti per eseguire una o più applicazioni di cui solitamente non si hanno i diritti. Diversamente dall'uso del bit <code>setuid</code> su queste applicazioni, {{c|sudo}} dà un grana di controllo molto fine su ''chi'' può eseguire certi comandi e ''quando'' questo può essere fatto.

Con {{c|sudo}} è possibile fare una chiara lista di ''chi'' può eseguire una certa applicazione. Mentre se si usasse il bit [[wikipedia:setuid|setuid]], ogni utente potrebbe essere autorizzato ad eseguire questa applicazione (oppure ogni utente di un certo gruppo, in base ai permessi usati). Con {{c|sudo}} è possibile (, probabilmente, meglio) richiedere all'utente di immettere una password per poter eseguire l'applicazione

La configurazione di {{c|sudo}} è gestita dal file {{Path|/etc/sudoers}}. Questo file non dovrebbe essere mai modificato tramite {{c|nano /etc/sudoers}} o {{c|vim /etc/sudoers}} o ogni altro editor che utilizzereste normalmente. Quando si vuole alterare questo file, andrebbe usato sempre il comando {{c|visudo}}. Questo tool assicura che il file non venga editato da due amministratori allo stesso tempo, preserva i permessi ed esegue un controllo della sintassi per assicurare che non ci siano errori critici all'interno.

=== Sintassi di base ===

The most difficult part of {{c|sudo}} is the {{Path|/etc/sudoers}} syntax. The basic syntax is as follows:

{{CodeBox|title=Basic /etc/sudoers syntax|1=
user  host = command
}}

This line tells {{c|sudo}} that the user, identified by <code>user</code> and logged in on the system <code>host</code>, can execute the command <code>command</code> (which can also be a comma-separated list of allowed commands).

A more real-life example might make this more clear: To allow the user {{c|larry}} to execute {{c|emerge}} when he is logged in on {{c|localhost}}:

{{CodeBox|title=Real /etc/sudoers example|1=
larry  localhost = /usr/bin/emerge
}}

{{Note|The hostname must match the name that the {{c|hostname}} command returns.}}

{{Note|In the simplest case, commands must be fully qualified paths to executables: hence <code>/usr/bin/emerge</code> not just <code>emerge</code>. Paths can also contain wildcards and may refer to entire directories. See the manpage for details.}}

{{Warning|Do not allow a normal user to run an application that can enable them to elevate privileges. For instance, allowing users to execute {{c|[[emerge]]}} as root can grant them full root access to the system because {{c|emerge}} can be manipulated to change the live file system to the user's advantage. If you do not trust your {{c|sudo}} users, don't grant them any additional rights.}}

The user name can also be substituted with a group name, in which case the name is prefaced by a <code>%</code> sign. For instance, to allow any one in the {{c|wheel}} group to execute {{c|emerge}}:

{{CodeBox|title=Allowing any {{c|wheel}} group member to execute {{c|emerge}}|1=
%wheel  localhost = /usr/bin/emerge
}}

To enable more than one command for a given user on a given machine, multiple commands can be listed on the same line. For instance, to allow {{c|larry}} to not only run {{c|emerge}} but also {{c|ebuild}} and {{c|emerge-webrsync}} as root:

{{CodeBox|title=Comandi multipli|1=
larry  localhost = /usr/bin/emerge, /usr/bin/ebuild, /usr/sbin/emerge-webrsync
}}

You can also specify a precise command line (including parameters and arguments) not just the name of the executable. This is useful to restrict the use of a certain tool to a specified set of command options. The {{c|sudo}} tool allows [[shell]]-style [[Wikipedia:Wildcard character|wildcards]] (AKA meta or glob characters) to be used in path names as well as command-line arguments in the sudoers file. Note that these are ''not'' regular expressions.

Here is an example of {{c|sudo}} from the perspective of a first-time user of the tool who has been granted access to the full power of {{c|emerge}}:

{{Cmd|sudo emerge -uDN world|output=<pre>
We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:
 
    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.
 
Password: ## (Enter the user password, not root!)
</pre>
}}

La password che {{c|sudo}} richiede è la password dell'utente stesso. Questo è per rendere sicuro che altri utenti non possano abusare con intenti maliziosi di alcun terminale lasciato accidentalmente aperto.

{{Important|{{c|sudo}} does not alter the <code>${PATH}</code> variable: any command placed after {{c|sudo}} is executed within ''the user's own environment''. Thus if a user wants to run a tool in {{Path|/sbin}}, for instance, the user must provide {{c|sudo}} with the full path of the command, like so:
{{Cmd|sudo /usr/sbin/emerge-webrsync}}
}}

=== Sintassi di base con LDAP ===

Le USE flag <code>ldap</code> e <code>pam</code> sono entrambe necessarie per il supporto a LDAP.

Quando si usa LDAP, sudo leggerà la configurazione dea un Server LDAP.
E' necessario quindi modificare due files.

{{FileBox|filename=/etc/ldap.conf.sudo|title=Please chmod 400 when done|1=
# See ldap.conf(5) and README.LDAP for details
# This file should only be readable by root
 
# supported directives: host, port, ssl, ldap_version
# uri, binddn, bindpw, sudoers_base, sudoers_debug
# tls_{checkpeer,cacertfile,cacertdir,randfile,ciphers,cert,key
 
host ldap.example.com
port 389
 
base dc=example,dc=com
 
uri ldap://ldap.example.com/
#uri ldapi://%2fvar%2frun%2fopenldap%2fslapd.sock
 
ldap_version 3
#ssl start_tls
 
sudoers_base ou=SUDOers,dc=example,dc=com
#sudoers_debug 2
 
bind_policy soft
}}

{{FileBox|filename=/etc/nsswitch.conf|title=Aggiungere la linea sudoers|1=
sudoers:     ldap files
}}

E' necessario aggiungere la seguente voce a LDAP per Sudo.

{{Note|E' stato progettato che i branch Sudoers non siano in cima al tree per ragioni di sicurezza. Quindi è possibile avere differenti diritti di accesso da LDAP per leggere/scrivere su questo branch}}

{{CodeBox|title=Ldap Entry for Sudo|1=
version: 1
DN: ou=SUDOers,dc=example,dc=com
objectClass: organizationalUnit
objectClass: top
objectClass: domainRelatedObject
associatedDomain: example.com
ou: SUDOers
 
DN: cn=defaults,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: defaults
description: Default sudoOption's go here
sudoOption: env_reset
 
DN: cn=root,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: root
sudoCommand: ALL
sudoHost: ALL
sudoUser: root
 
DN: cn=%wheel,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: %wheel
sudoCommand: ALL
sudoHost: ALL
sudoOption: !authenticate
sudoUser: %wheel
}}

{{CodeBox|title=Ldap Entry for wheel Group|1=
version: 1
DN: cn=wheel,ou=Group,dc=example,dc=com
objectClass: top
objectClass: posixGroup
cn: wheel
description: Wheel Group
gidNumber: 10
memberUid: useradmin1
memberUid: root
}}

Le configurazioni su un sudoers su LDAP sono simili a file con qualche differenza. Si legga in aggiunta Sudo con LDAP nel link seguente.<ref name="test">[http://www.sudo.ws/sudo/sudoers.ldap.man.html]Pagina di manuale di Sudoers LDAP</ref>

<references />

=== Uso degli alias ===

In grandi ambienti l'inserimento di tutti gli utenti (o sistemi o comandi) più volte può essere una attività costosa. Per facilitare l'amministrazione possono essere definiti gli ''alias' Il formato per dichiarare gli alias è semplice:

{{CodeBox|title=Dichiarazioni di alias in /etc/sudoers|1=
Host_Alias hostalias = hostname1, hostname2, ...
User_Alias useralias = user1, user2, ...
Cmnd_Alias cmndalias = command1, command2, ...
}}

Un alias che funziona sempre, in ogni posizione, è l'alias <code>ALL>/code> (per fare maggior distinzione fra alias e non-alisa è raccomandato usare le lettere maiuscole per i primi). Come è possibile immaginare, l'alias <code>ALL</code> è un alias di tutte le possibili configurazioni.

Un esempio di uso dell'alias <code>ALL</code> per permettere ad ogni (''any'') utente di eseguire il comando {{c|shutdown}} se è loggato localmente è:

{{CodeBox|title=Permettere ad ogni utente di eseguire il comando shutdown|lang=bash|1=
ALL  localhost = /sbin/shutdown
}}

Un altro esempio è permettere all'utente {{c|larry}} di eseguire il comando {{c|emerge}} come root, senza considerare da dove si è loggato:

{{CodeBox|title=Permettere all'utente di eseguire una applicazione senza considerare la sua locazione|1=
larry   ALL = /usr/bin/emerge
}}

Più interessante è definire un insieme di utenti che possono eseguire software amministrativo (come {{c|emerge}} e {{c|ebuild}}) su un sistema e un gruppo di amministratori che possono cambiare la password di ogni utente ad eccezione di root:

{{CodeBox|title=Using aliases for users and commands|1=
User_Alias  SOFTWAREMAINTAINERS = larry, john, danny
User_Alias  PASSWORDMAINTAINERS = larry, sysop
Cmnd_Alias  SOFTWARECOMMANDS    = /usr/bin/emerge, /usr/bin/ebuild
Cmnd_Alias  PASSWORDCOMMANDS    = /usr/bin/passwd [a-zA-Z0-9_-]*, !/usr/bin/passwd root
 
SOFTWAREMAINTAINERS  localhost = SOFTWARECOMMANDS
PASSWORDMAINTAINERS  localhost = PASSWORDCOMMANDS
}}

=== Esecuzione non-root ===

E' anche possibile avere un utente che esegue una applicazione com e un differente utente non-root. Questo può essere molto interessante per eseguire applicazioni come differente utente (per esempio {{c|apache}} per il server web) e permettere a certi utenti di eseguire operazioni di amministrazione come tali utenti (tipo uccidere processi Zombie).

All'interno di {{Path|/etc/sudoers}} sono elencati gli utenti tra <code>(</code> e <code>)</code> prima dell'elenco dei comandi:

{{CodeBox|title=Sintassi per l'esecuzione non-root|1=
users  hosts = (run-as) commands
}}

Per esempio, per permettere all'utente {{c|larry}} di eseguire il tool {{c|kill}} come utente {{c|apache}} o {{c|gorg}}:

{{CodeBox|title=Non-root execution example|1=
Cmnd_Alias KILL = /bin/kill, /usr/bin/pkill
 
larry   ALL = (apache, gorg) KILL
}}

Con questo insieme, l'utente può eseguire {{c|sudo -u}} per selezionare l'utente con cui vuole eseguire l'applicazione:

{{Cmd|sudo -u apache pkill apache}}

E' possibile configurare un alias per permettere all'utente di eseguire una applicazione tramite la direttiva <code>Runas_Alias</code>. Il suo uso è identico alle altre direttive <code>_Alias</code> viste precedentemente.

=== Password e configurazioni di default ===

Di default, {{c|sudo}} chiede all'utente di identificarsi tramite la propria password. Una volta inserita la password, {{c|sudo}} la ricorda per 5 minuti, permettendo all'utente di concentrarsi sulle  sue attività e di non inserire ripetitivamente la sua password.

Ovviamente, questo comportamento può essere cambiato: è possibile impostare la direttiva <code>Defaults:</code> nel file {{Path|/etc/sudoers}} per cambiare il comportamento di default per un utente.

Per esempio, per cambiare il valore di default da 5 minuti a 0 (non ricordare mai):

{{CodeBox|title=Cambio del valore di timeout|1=
Defaults:larry  timestamp_timeout=0
}}

Un valore di <code>-</code> permetterà di ricordare la password per tempo indefinito (sino al riavvio del sistema).

Un configurazione differente potrebbe richiedere la password dell'utente con cui il comando dovrebbe essere richiesto in alternativa alla password personale dell'utente. E' possibile ottenere questo usando <code>runaspw</code>. Nell'esempio seguente è stato configurato il numero dei tentativi (quante volte l'utente può reinserire la password prima che {{c|sudo}} fallisca) a <code>2</code> invece del default <code>3</code>:

{{CodeBox|title=Richiesta della password di root invece di quella utente|1=
Defaults:john   runaspw, passwd_tries=2
}}

Un'altra interessante funzionalità quella di mantenere la variabile <code>DISPLAY</code> impostata in modo da poter eseguire strumenti grafici.

{{CodeBox|title=Mantenere la variabile DISPLAY viva|1=
Defaults:john env_keep=DISPLAY
}}

E' possibile cambiare dozzine di valori di default usando la direttiva <code>Defaults:</code>. Si faccia riferimento alle pagine di manuale di {{c|sudoers}} per la direttiva <code>Defaults</code>.

Comunque, se si vuole permettere ad un utente di eseguire un certo  insieme di comandi senza fornire alcuna password, è necessario iniziare i comandi con <code>NOPASSWD:</code>, ad esempio:

{{CodeBox|title=Permettere l'esecuzione di emerge come root senza richiedere la password|1=
larry     localhost = NOPASSWD: /usr/bin/emerge
}}

=== Completamento Bash ===

Gli utenti che vogliono avere il completamento bash con sudo devono eseguire il seguente comando almeno una volta.

{{Cmd|sudo echo "complete -cf sudo" >> $HOME/.bashrc}}

=== Completamento ZShell ===

Gli utenti che vogliono il completamento zsh per sudo possono configurare i file {{Path|.zprofile}} e {{Path|.zshrc}}, rispettivamente, con gli script seguenti:

{{FileBox|filename=.zprofile|title=Adding zshell completion|lang=bash|1=
if [[ $EUID != 0 ]]; then
    typeset -xT SUDO_PATH sudo_path
    typeset -U sudo_path
    sudo_path=({,/usr/local,/usr}/sbin(N-/))
    alias sudo="sudo env PATH=\"SUDO_PATH:$PATH\""
fi
}}

{{FileBox|filename=.zshrc|title=Aggiunta del completamento zshell|lang=bash|1=
zstyle ':completion:*:sudo:*' environ PATH="$SUDO_PATH:$PATH"
}}

Con le modifiche di spora, tutti i comandi nelle locazioni {{Path|/sbin}}, {{Path|/usr/sbin}} e {{Path|/usr/local/sbin}} saranno disponibile alla shell per il completamento quando il comando è prefissato con 'sudo'.

== Utilizzo ==

=== Elencare i privilegi ===

Per ottenere la lista dei privilegi dell'utente corrente, si esegua il comando {{c|sudo -l}}:

{{Cmd|sudo -l|output=<pre>
User larry may run the following commands on this host:
    (root)   /usr/libexec/xfsm-shutdown-helper
    (root)   /usr/bin/emerge
    (root)   /usr/bin/passwd [a-zA-Z0-9_-]*
    (root)   !/usr/bin/passwd root
    (apache) /usr/bin/pkill
    (apache) /bin/kill
</pre>
}}

Se si ha un qualsiasi comando in {{Path|/etc/sudoers}} che non richiede una password, questa non richiederò la password per elencare le voci di completamento. Altrimenti, verrà richiesta la password se questa non è stata precedentemente inserita.

=== Prolungare il timeout della password ===

Di default, se un utente ha inserito una password per autenticarsi su {{c|sudo}}, questa è ricordata per 5 minuti. Se l'utente vuole prolungare questo periodo, può eseguire {{c|sudo -v}} per resettare il time stamp guadagnando ulteriori 5 minuti prima che {{c|sudo}} richieda nuovamente la password.

{{Cmd|sudo -v}}

L'inverso è uccidere la stampa temporale usando {{c|sudo -k}}.


[[Category:Software]]
