<languages />

{{Metadata|abstract=Il comando sudo fornisce una via semplice e sicura per permettere agli utenti normali di eseguire alcuni (o tutti) comandi come root o altro utente, eventualmente senza fornire alcuna password.}}

<div class="mw-translate-fuzzy">
{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://www.sudo.ws/|header=true}}
|{{InfoBox wikipedia|sudo}}
|{{InfoBox gitweb|http://www.sudo.ws/repos/sudo|raw=true}}
}}
</div>

Il comando {{c|sudo}} fornisce una via semplice e sicura per permettere agli utenti normali di eseguire alcuni (o tutti) comandi come root o altro utente, eventualmente senza fornire alcuna password.

<div class="mw-translate-fuzzy">
Quando si vuole che altri utenti possano eseguire certe azioni amministrative sul proprio sistema senza concedere il totale accesso [[Wikipedia:Superuser|root access]] , l'uso di {{c|sudo}} è la migliore opzione. Con {{c|sudo}}è possibile controllare chi può fare cosa. Questa guida offre una piccola introduzione a questo potente strumento.
</div>

Questo articolo intende essere una veloce introduzione a {{c|sudo}}. Il pacchetto {{Package|app-admin/sudo}} è molto più potente di quanto si descritto in questo documento. Infatti, ha funzionalità speciali per modificare file come differente utente ({{c|sudoedit}}), eseguire dall'interno di uno script (lanciato in background, leggere la password dallo standard-in in alternativa alla tastiera, ...), ecc.

Per favore leggi le pagine del manuale di {{c|sudo}} e di {{c|sudoers}} per avere maggiori informazioni.

== Installazione ==

=== Flags USE ===

{{USEflag|package=app-admin/sudo}}

=== Emerge ===

{{Emerge|app-admin/sudo}}

== Configurazione ==

=== Attività di log ===

<div class="mw-translate-fuzzy">
Un vantaggio addizionale di {{c|sudo}} è che può scrivere sul log ogni tentativo (con successo o senza successo) di eseguire una applicazione. Questo è molto utile se si vuole tenere traccia di chi fa un errore fatale che potrebbe richiedere 10 ore per la risoluzione.
</div>

=== Ottenimento dei permessi ===

Il pacchetto {{Package|app-admin/sudo}} permette all'amministratore del sistema di ottenere i permessi di altri utenti per eseguire una o più applicazioni di cui solitamente non si hanno i diritti. Diversamente dall'uso del bit <code>setuid</code> su queste applicazioni, {{c|sudo}} dà un grana di controllo molto fine su ''chi'' può eseguire certi comandi e ''quando'' questo può essere fatto.

<div class="mw-translate-fuzzy">
Con {{c|sudo}} è possibile fare una chiara lista di ''chi'' può eseguire una certa applicazione. Mentre se si usasse il bit [[wikipedia:setuid|setuid]], ogni utente potrebbe essere autorizzato ad eseguire questa applicazione (oppure ogni utente di un certo gruppo, in base ai permessi usati). Con {{c|sudo}} è possibile (, probabilmente, meglio) richiedere all'utente di immettere una password per poter eseguire l'applicazione
</div>

<div class="mw-translate-fuzzy">
La configurazione di {{c|sudo}} è gestita dal file {{Path|/etc/sudoers}}. Questo file non dovrebbe essere mai modificato tramite {{c|nano /etc/sudoers}} o {{c|vim /etc/sudoers}} o ogni altro editor che utilizzereste normalmente. Quando si vuole alterare questo file, andrebbe usato sempre il comando {{c|visudo}}. Questo tool assicura che il file non venga editato da due amministratori allo stesso tempo, preserva i permessi ed esegue un controllo della sintassi per assicurare che non ci siano errori critici all'interno.
</div>

=== Sintassi di base ===

La parte più difficile di {{c|sudo}} è la sintassi del file {{Path|/etc/sudoers}}. La sintassi di base è la seguente:

{{CodeBox|title=Sintassi di base di /etc/sudoers|1=
user  host = command
}}

Questa linea dice a {{c|sudo}} che l'utente, identificato da <code>user</code> e loggato nel sistema <code>host</code>, può eseguire il comando  <code>command</code> (che può anche essere un elenco separato da virgole di comandi consentiti).

Un esempio realistico potrebbe rendere più chiara l'idea: 
Per permettere all'utente {{c|larry}} di eseguire {{c|emerge}} quando è loggato in {{c|localhost}}:

{{CodeBox|title=Esempio di /etc/sudoers|1=
larry  localhost = /usr/bin/emerge
}}

{{Note|L'hostname deve corrispondere al nome che il comando {{c|hostname}} restituisce.}}

{{Note|In the simplest case, commands must be fully qualified paths to executables: hence <code>/usr/bin/emerge</code> not just <code>emerge</code>. Paths can also contain wildcards and may refer to entire directories. See the manpage for details.}}

<div class="mw-translate-fuzzy">
{{Warning|Non permettere ad un utente normale di eseguire applicazioni che possano elevarne i privilegi. In concreto, permettendo agli utenti di eseguire {{c|[[emerge]]}} come root può permettere di ottenere i pieni diritti di accesso root al sistema perché {{c|emerge}} può essere manipolato per apportare modifiche ad un filesystem live per dare vantaggio all'utente stesso. Se non vi è fiducia negli utenti {{c|sudo}} è opportuno non dare loro alcun diritto aggiuntivo.}}
</div>

Il nome utente può essere anche sostituito con il nome del gruppo, in tal caso il nome del gruppo andrebbe  prefissato con il segno <code>%</code>. Per esempio, per permettere ad ogni utente nel gruppo {{c|wheel}} di eseguire {{c|emerge}}:

{{CodeBox|title=Permettere a tutti i membri del gruppo wheel di eseguire {{|emerge}}|1=
%wheel  localhost = /usr/bin/emerge
}}

<div class="mw-translate-fuzzy">
La linea può essere estesa per permettere molti comandi (invece di inserire una singola voce per ogni comando). Per esempio, per permettere allo stesso utente di non eseguire solo {{c|emerge}} ma anche {{c|ebuild}} e {{c|emerge-webrsync}} come root:
</div>

{{CodeBox|title=Comandi multipli|1=
larry  localhost = /usr/bin/emerge, /usr/bin/ebuild, /usr/sbin/emerge-webrsync
}}

<div class="mw-translate-fuzzy">
E' possibile anche specificare una precisa riga di comando e non solo il tool stesso. Questo è utile per restringere l'uso di un certo tool ad uno specifico set di opzioni della riga di comando {{c|sudo}} permette di usare wildcard stile shell (AKA meta o caratteri jolly) nei path name come negli argomenti dell righe di comando specificate all'interno del file sudoers. E' da notare come queste ''non'' siano espressioni regolari.
</div>

<div class="mw-translate-fuzzy">
Mettiamo questo alla prova:
</div>

<div class="mw-translate-fuzzy">
{{Cmd|sudo emerge -uDN world|output=<!-- ( --><!-- ( --><!-- ( --><pre>
We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:
  
    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.
  
Password: ## (Enter the user password, not root!)
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
La password che {{c|sudo}} richiede è la password dell'utente stesso. Questo è per rendere sicuro che altri utenti non possano abusare con intenti maliziosi di alcun terminale lasciato accidentalmente aperto.
</div>

<div class="mw-translate-fuzzy">
Si dovrebbe sapere che {{c|sudo}} non altera la variabile <code>${PATH}</code>: ogni comando indicato dopo {{c|sudo}} è trattato in aderenza al proprio ambiente. Se si vuole permettere all'utente di eseguire un tool in {{Path|/sbin}}, questo deve fornire il path completo a {{c|sudo}}:
</div>

=== Sintassi di base con LDAP ===

Le USE flag <code>ldap</code> e <code>pam</code> sono entrambe necessarie per il supporto a LDAP.

<div class="mw-translate-fuzzy">
Quando si usa LDAP, sudo leggerà la configurazione dea un Server LDAP.
E' necessario quindi modificare due files.
</div>

<div class="mw-translate-fuzzy">
{{FileBox|filename=/etc/ldap.conf.sudo|title=Esegui chmod 400 quando fatto|1=
# See ldap.conf(5) and README.LDAP for details
# This file should only be readable by root
  
# supported directives: host, port, ssl, ldap_version
# uri, binddn, bindpw, sudoers_base, sudoers_debug
# tls_{checkpeer,cacertfile,cacertdir,randfile,ciphers,cert,key}
  
host ldap.example.com
port 389
  
base dc=example,dc=com
  
uri ldap://ldap.example.com/
#uri ldapi://%2fvar%2frun%2fopenldap%2fslapd.sock
  
ldap_version 3
#ssl start_tls
  
sudoers_base ou=SUDOers,dc=example,dc=com
#sudoers_debug 2
  
bind_policy soft
}}
</div>

{{FileBox|filename=/etc/nsswitch.conf|title=Aggiungere la linea sudoers|1=
sudoers:     ldap files
}}

<div class="mw-translate-fuzzy">
E' necessario aggiungere la seguente voce a LDAP per Sudo.
</div>

<div class="mw-translate-fuzzy">
{{Note|E' stato progettato che i branch Sudoers non siano in cima al tree per ragioni di sicurezza. Quindi è possibile avere differenti diritti di accesso da LDAP per leggere/scrivere su questo branch}}
</div>

{{CodeBox|title=Voci Ldap per Sudo|1=
version: 1
DN: ou=SUDOers,dc=example,dc=com
objectClass: organizationalUnit
objectClass: top
objectClass: domainRelatedObject
associatedDomain: example.com
ou: SUDOers
  
DN: cn=defaults,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: defaults
description: Default sudoOption's go here
sudoOption: env_reset
  
DN: cn=root,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: root
sudoCommand: ALL
sudoHost: ALL
sudoUser: root
  
DN: cn=%wheel,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: %wheel
sudoCommand: ALL
sudoHost: ALL
sudoOption: !authenticate
sudoUser: %wheel
}}

<div class="mw-translate-fuzzy">
{{CodeBox|title=Voci Ldap per il gruppo wheel|lang=ldif|1=
version: 1
DN: cn=wheel,ou=Group,dc=example,dc=com
objectClass: top
objectClass: posixGroup
cn: wheel
description: Wheel Group
gidNumber: 10
memberUid: useradmin1
memberUid: root
}}
</div>

<div class="mw-translate-fuzzy">
Le configurazioni su un sudoers su LDAP sono simili a file con qualche differenza. Si legga in aggiunta Sudo con LDAP nel link seguente.<ref name="test">[http://www.sudo.ws/sudo/sudoers.ldap.man.html]Pagina di manuale di Sudoers LDAP</ref>
</div>

=== Uso degli alias ===

<div class="mw-translate-fuzzy">
In grandi ambienti l'inserimento di tutti gli utenti (o sistemi o comandi) più volte può essere una attività costosa. Per facilitare l'amministrazione possono essere definiti gli ''alias' Il formato per dichiarare gli alias è semplice:
</div>

{{CodeBox|title=Dichiarazioni di alias in /etc/sudoers|1=
Host_Alias hostalias = hostname1, hostname2, ...
User_Alias useralias = user1, user2, ...
Cmnd_Alias cmndalias = command1, command2, ...
}}

<div class="mw-translate-fuzzy">
Un alias che funziona sempre, in ogni posizione, è l'alias <code>ALL>/code> (per fare maggior distinzione fra alias e non-alisa è raccomandato usare le lettere maiuscole per i primi). Come è possibile immaginare, l'alias <code>ALL</code> è un alias di tutte le possibili configurazioni.
</div>

Un esempio di uso dell'alias <code>ALL</code> per permettere ad ogni (''any'') utente di eseguire il comando {{c|shutdown}} se è loggato localmente è:

{{CodeBox|title=Permettere ad ogni utente di eseguire il comando shutdown|lang=bash|1=
ALL  localhost = /sbin/shutdown
}}

Un altro esempio è permettere all'utente {{c|larry}} di eseguire il comando {{c|emerge}} come root, senza considerare da dove si è loggato:

{{CodeBox|title=Permettere all'utente di eseguire una applicazione senza considerare la sua locazione|1=
larry   ALL = /usr/bin/emerge
}}

Più interessante è definire un insieme di utenti che possono eseguire software amministrativo (come {{c|emerge}} e {{c|ebuild}}) su un sistema e un gruppo di amministratori che possono cambiare la password di ogni utente ad eccezione di root:

<div class="mw-translate-fuzzy">
{{CodeBox|title=Uso di alias per utenti e comandi|1=
User_Alias  SOFTWAREMAINTAINERS = larry, john, danny
User_Alias  PASSWORDMAINTAINERS = larry, sysop
Cmnd_Alias  SOFTWARECOMMANDS    = /usr/bin/emerge, /usr/bin/ebuild
Cmnd_Alias  PASSWORDCOMMANDS    = /usr/bin/passwd [a-zA-Z0-9_-]*, !/usr/bin/passwd root
  
SOFTWAREMAINTAINERS  localhost = SOFTWARECOMMANDS
PASSWORDMAINTAINERS  localhost = PASSWORDCOMMANDS
}}
</div>

=== Esecuzione non-root ===

<div class="mw-translate-fuzzy">
E' anche possibile avere un utente che esegue una applicazione com e un differente utente non-root. Questo può essere molto interessante per eseguire applicazioni come differente utente (per esempio {{c|apache}} per il server web) e permettere a certi utenti di eseguire operazioni di amministrazione come tali utenti (tipo uccidere processi Zombie).
</div>

<div class="mw-translate-fuzzy">
All'interno di {{Path|/etc/sudoers}} sono elencati gli utenti tra <code>(</code> e <code>)</code> prima dell'elenco dei comandi:
</div>

{{CodeBox|title=Sintassi per l'esecuzione non-root|1=
users  hosts = (run-as) commands
}}

Per esempio, per permettere all'utente {{c|larry}} di eseguire il tool {{c|kill}} come utente {{c|apache}} o {{c|gorg}}:

<div class="mw-translate-fuzzy">
{{CodeBox|title=Esempio di esecuzione come utente non-root|1=
Cmnd_Alias KILL = /bin/kill, /usr/bin/pkill
  
larry   ALL = (apache, gorg) KILL
}}
</div>

Con questo insieme, l'utente può eseguire {{c|sudo -u}} per selezionare l'utente con cui vuole eseguire l'applicazione:

{{Cmd|sudo -u apache pkill apache}}

<div class="mw-translate-fuzzy">
E' possibile configurare un alias per permettere all'utente di eseguire una applicazione tramite la direttiva <code>Runas_Alias</code>. Il suo uso è identico alle altre direttive <code>_Alias</code> viste precedentemente.
</div>

=== Password e configurazioni di default ===

Di default, {{c|sudo}} chiede all'utente di identificarsi tramite la propria password. Una volta inserita la password, {{c|sudo}} la ricorda per 5 minuti, permettendo all'utente di concentrarsi sulle  sue attività e di non inserire ripetitivamente la sua password.

<div class="mw-translate-fuzzy">
Ovviamente, questo comportamento può essere cambiato: è possibile impostare la direttiva <code>Defaults:</code> nel file {{Path|/etc/sudoers}} per cambiare il comportamento di default per un utente.
</div>

Per esempio, per cambiare il valore di default da 5 minuti a 0 (non ricordare mai):

{{CodeBox|title=Cambio del valore di timeout|1=
Defaults:larry  timestamp_timeout=0
}}

Un valore di <code>-</code> permetterà di ricordare la password per tempo indefinito (sino al riavvio del sistema).

Un configurazione differente potrebbe richiedere la password dell'utente con cui il comando dovrebbe essere richiesto in alternativa alla password personale dell'utente. E' possibile ottenere questo usando <code>runaspw</code>. Nell'esempio seguente è stato configurato il numero dei tentativi (quante volte l'utente può reinserire la password prima che {{c|sudo}} fallisca) a <code>2</code> invece del default <code>3</code>:

{{CodeBox|title=Richiesta della password di root invece di quella utente|1=
Defaults:john   runaspw, passwd_tries=2
}}

<div class="mw-translate-fuzzy">
Un'altra interessante funzionalità quella di mantenere la variabile <code>DISPLAY</code> impostata in modo da poter eseguire strumenti grafici.
</div>

{{CodeBox|title=Mantenere la variabile DISPLAY viva|1=
Defaults:john env_keep=DISPLAY
}}

<div class="mw-translate-fuzzy">
E' possibile cambiare dozzine di valori di default usando la direttiva <code>Defaults:</code>. Si faccia riferimento alle pagine di manuale di {{c|sudoers}} per la direttiva <code>Defaults</code>.
</div>

<div class="mw-translate-fuzzy">
Comunque, se si vuole permettere ad un utente di eseguire un certo  insieme di comandi senza fornire alcuna password, è necessario iniziare i comandi con <code>NOPASSWD:</code>, ad esempio:
</div>

{{CodeBox|title=Permettere l'esecuzione di emerge come root senza richiedere la password|1=
larry     localhost = NOPASSWD: /usr/bin/emerge
}}

=== Completamento Bash ===

Gli utenti che vogliono avere il completamento bash con sudo devono eseguire il seguente comando almeno una volta.

{{Cmd|sudo echo "complete -cf sudo" >> $HOME/.bashrc}}

=== Completamento ZShell ===

Gli utenti che vogliono il completamento zsh per sudo possono configurare i file {{Path|.zprofile}} e {{Path|.zshrc}}, rispettivamente, con gli script seguenti:

<div class="mw-translate-fuzzy">
{{FileBox|filename=.zprofile|title=Aggiunta del completamento zshell|lang=bash|1=
if [[ $EUID != 0 ]]; then
    typeset -xT SUDO_PATH sudo_path
    typeset -U sudo_path 
    sudo_path=({,/usr/local,/usr}/sbin(N-/))
    alias sudo="sudo env PATH=\"SUDO_PATH:$PATH\""
fi
}}
</div>

{{FileBox|filename=.zshrc|title=Aggiunta del completamento zshell|lang=bash|1=
zstyle ':completion:*:sudo:*' environ PATH="$SUDO_PATH:$PATH"
}}

Con le modifiche di spora, tutti i comandi nelle locazioni {{Path|/sbin}}, {{Path|/usr/sbin}} e {{Path|/usr/local/sbin}} saranno disponibile alla shell per il completamento quando il comando è prefissato con 'sudo'.

== Utilizzo ==

=== Elencare i privilegi ===

<div class="mw-translate-fuzzy">
Per ottenere la lista dei privilegi dell'utente corrente, si esegua il comando {{c|sudo -l}}:
</div>

{{Cmd|sudo -l|output=<pre>
User larry may run the following commands on this host:
    (root)   /usr/libexec/xfsm-shutdown-helper
    (root)   /usr/bin/emerge
    (root)   /usr/bin/passwd [a-zA-Z0-9_-]*
    (root)   !/usr/bin/passwd root
    (apache) /usr/bin/pkill
    (apache) /bin/kill
</pre>
}}

<div class="mw-translate-fuzzy">
Se si ha un qualsiasi comando in {{Path|/etc/sudoers}} che non richiede una password, questa non richiederò la password per elencare le voci di completamento. Altrimenti, verrà richiesta la password se questa non è stata precedentemente inserita.
</div>

=== Prolungare il timeout della password ===

Di default, se un utente ha inserito una password per autenticarsi su {{c|sudo}}, questa è ricordata per 5 minuti. Se l'utente vuole prolungare questo periodo, può eseguire {{c|sudo -v}} per resettare il time stamp guadagnando ulteriori 5 minuti prima che {{c|sudo}} richieda nuovamente la password.

{{Cmd|sudo -v}}

L'inverso è uccidere la stampa temporale usando {{c|sudo -k}}.

== References ==
{{reflist}}

[[Category:Software]]
