{{InfoBox stack
|{{InfoBox homepage|http://wiki.qemu.org|text=Homepage (QEMU)|header=true}}
|{{InfoBox homepage|http://www.linux-kvm.org|text=Homepage (KVM)}}
|{{InfoBox wikipedia|text=Wikipedia (QEMU)}}
|{{InfoBox wikipedia|Kernel-based Virtual Machine|text=Wikipedia (KVM)}}
}}
'''QEMU''' ('''Q'''uick '''EMU'''lator) is a generic and open source machine emulator and virtualizer.  Often it is used in conjunction with acceleration in the form of a Type-I hypervisor such as '''KVM''' ('''K'''ernel-based '''V'''irtual '''M'''achine) or Xen.  If no accelerator is used, Qemu will run entirely in user-space using its built in binary translator TCG (Tiny Code Generator). Using Qemu without an accelerator is relatively inefficient and slow.

{{Note|This article typically uses KVM as the accelerator of choice due to its GPL licensing and availability.  Without KVM nearly all commands described here will still work (unless KVM specific)}}

== Installation ==

=== BIOS ===
In order to utilize KVM either Vt-x or AMD-V must be supported by the processor. Vt-x or AMD-V are Intel and AMD's respective technologies for permitting multiple operating systems to concurrently execute operations on the processors.   

To inspect hardware for visualization support issue the following command:
{{Cmd|grep --color -E "vmx{{!}}svm" /proc/cpuinfo}}  

For a period manufacturers were shipping with virtualization turned off by default in the system [[BIOS]]. Note that changing this feature in the BIOS may actually require full removal of power from the system to take effect. If restarting the system does not work try shutting down, unplugging the system and pressing the power button in an unplugged state to discharge any residual energy from the power supply unit (PSU). Reapply power to the system to verify success.

If KVM support is available there should be a "kvm" device listed at {{Path|/dev/kvm}}

=== Kernel ===
Activate the following kernel options:
{{KernelBox|1=
[*] Virtualization  --->
    <*>   Kernel-based Virtual Machine (KVM) support
}}

For Intel processors:
{{KernelBox|1=
[*] Virtualization  --->
    <*>   KVM for Intel processors support
}}

For AMD processors:
{{KernelBox|1=
[*] Virtualization  --->
    <*>   KVM for AMD processors support
}}
 
Needed for <code>vhost-net</code> '''USE''' flag (recommend):
{{KernelBox|1=
[*] Virtualization  --->
    <*>   Host kernel accelerator for virtio net
}}

{{KernelBox|title=Optional advanced networking support|1=
Device Drivers  --->
    [*] Network device support  --->
        [*]   Network core driver support
        <*>   Universal TUN/TAP device driver support
}}

Needed for 802.1d Ethernet Bridging:

{{KernelBox|title=Enabling 802.1d Ethernet Bridging support|1=
[*] Networking support  --->
        Networking options  --->
            <*> The IPv6 protocol
            <*> 802.1d Ethernet Bridging
}}

<code>python</code> USE flag is needed for file capabilities support:
{{KernelBox|title=Enabling Linux file capabilities support|1=
Kernel hacking  --->
        Compile-time checks and compiler options  --->
            [*] Debug Filesystem
}}

When using the ext4 filesystem, enable the <code>filecaps</code> '''USE''' flag if stats support is needed:
{{KernelBox|title=Enabling ext4 kvm_stat support|1=
File systems  --->
    <*> The Extended 4 (ext4) filesystem
    [*]   Ext4 Security Labels
}}

=== Software ===
Review the possible USE flags for QEMU.
==== Hardware flags ====
{{USEflag|package=app-emulation/qemu|desc=Hardware flags
|aio+yes
|alsa+yes
|bluetooth+yes
|fdt
|iscsi
|opengl+yes
|pulseaudio
|rbd
|smartcard
|usbredir
|vhost-net+yes+yes
}}
==== Output flags ====
{{USEflag|package=app-emulation/qemu|desc=Output flags
|gtk+yes
|ncurses+yes
|sdl+yes
|spice
}}
==== Misc flags ====
{{USEflag|package=app-emulation/qemu|desc=Misc flags
|accessibility
|caps+yes
|curl+yes
|debug
|glusterfs+++Enable glusterfs storage backend
|filecaps+yes
|python
|sasl
|seccomp+yes
|selinux++no
|static++no
|static-softmmu++no
|static-user++no
|tci
|test
|tls
|vde
|virtfs
|xattr
|xen
|xfs
|PYTHON_TARGETS+++Enable python implementations. Enable in your {{Path|make.conf}}.
|QEMU_SOFTMMU_TARGETS+++Enable architectures for full system emulation. Enable in your {{Path|make.conf}}.
|QEMU_USER_TARGETS+++Enable architectures for user space programs emulation. Enable in your {{Path|make.conf}}.
}}

After reviewing and adding desired USE flags, emerge {{Package|app-emulation/qemu}}:

{{Emerge|qemu}}

=== Frontends ===
To make life easier, there are multiple user-friendly front-ends to QEMU:
{| class="wikitable"
|-
! Name !! Package !! Homepage !! Description
|-
| aqemu || {{Package|app-emulation/aqemu}} ||  http://sourceforge.net/projects/aqemu || Graphical interface for QEMU and KVM emulators, using Qt4
|-
| libvirt || {{Package|app-emulation/libvirt}} || http://www.libvirt.org/ || C toolkit to manipulate virtual machines
|-
| virt-manager || {{Package|app-emulation/virt-manager}} || http://virt-manager.org || A graphical tool for administering virtual machines
|}

== Configuration ==

=== Permissions ===
In order to run a KVM accelerated virtual machine without logging as root, add normal users to the ''kvm'' group. Replace <username> in the example command below with the appropriate user(s).
{{RootCmd|gpasswd -a <username> kvm}}

== Usage ==
* See [[QEMU/Options|QEMU options]] page for common options
* [[QEMU/Linux guest|Setup a Linux guest]]
* [[QEMU/Windows guest|Setup a Windows guest]]
* [[QEMU/OS2WarpV3 guest|Setup a OS2WarpV3 guest]]

== See also ==
* [[Comparison of virtual machines]]
* [http://www.linux-kvm.org/page/KvmOnGentoo Gentoo page] on the KVM wiki

== External resources ==

* [http://wiki.qemu.org/Main_Page The Official QEMU wiki]

[[Category:Virtualization]]
