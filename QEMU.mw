{{InfoBox stack
|{{InfoBox wikipedia|text=Wikipedia (QEMU)|header=true}}
|{{InfoBox homepage|http://wiki.qemu.org|text=QEMU homepage}}
}}

'''QEMU''' ('''Q'''uick '''EMU'''lator) is [[Article description::a generic, open source machine emulator and virtualizer.]] Often it is used in conjunction with acceleration in the form of a Type-I hypervisor such as '''KVM''' ('''K'''ernel-based '''V'''irtual '''M'''achine) or Xen. If no accelerator is used, QEMU will run entirely in user-space using its built in binary translator TCG (Tiny Code Generator). Using QEMU without an accelerator is relatively inefficient and slow.

{{Note|This article typically uses KVM as the accelerator of choice due to its GPL licensing and availability. Without KVM nearly all commands described here will still work (unless KVM specific).}}

== Installation ==

=== BIOS and UEFI firmware ===

In order to utilize KVM either Vt-x or AMD-V must be supported by the processor. Vt-x or AMD-V are Intel and AMD's respective technologies for permitting multiple operating systems to concurrently execute operations on the processors.   

To inspect hardware for visualization support issue the following command:

{{Cmd|grep --color -E "vmx{{!}}svm" /proc/cpuinfo}}  

For a period manufacturers were shipping with virtualization turned off by default in the system [[BIOS]]. Note that changing this feature in the BIOS may actually require full removal of power from the system to take effect. If restarting the system does not work try shutting down, unplugging the system and pressing the power button in an unplugged state to discharge any residual energy from the power supply unit (PSU). Reapply power to the system to verify success.

If KVM support is available there should be a "kvm" device listed at {{Path|/dev/kvm}}. This will take affect after the system has booted to a KVM enabled kernel.

=== Kernel ===

Activate the following kernel options:

{{KernelBox|1=
[*] Virtualization  --->
    <*>   Kernel-based Virtual Machine (KVM) support
}}

{{KernelBox|title=Enable KVM support for Intel processors (<var>CONFIG_KVM_INTEL</var>)|1=
[*] Virtualization  --->
    <*>   KVM for Intel processors support
}}

{{KernelBox|title=Enable KVM support for AMD processors (<var>CONFIG_KVM_AMD</var>)|1=
[*] Virtualization  --->
    <*>   KVM for AMD processors support
}}

{{Warning|If ''both'' "KVM for Intel processors support" ''and'' "KVM for AMD processors support" are set as built into the kernel (<code>*</code>) an error message will appear during early boot splash. Since the system has only one type processor (Intel ''or'' AMD) enabling one or both options as modules (<code>M</code>) will make the error message disappear.}}

Needed for <code>vhost-net</code> USE flag (recommend):

{{KernelBox|1=
[*] Virtualization  --->
    <*>   Host kernel accelerator for virtio net
}}

{{KernelBox|title=Optional advanced networking support|1=
Device Drivers  --->
    [*] Network device support  --->
        [*]   Network core driver support
        <*>   Universal TUN/TAP device driver support
}}

Needed for 802.1d ethernet bridging:

{{KernelBox|title=Enabling 802.1d Ethernet Bridging support|1=
[*] Networking support  --->
        Networking options  --->
            <*> The IPv6 protocol
            <*> 802.1d Ethernet Bridging
}}

<code>python</code> USE flag is needed for file capabilities support:

{{KernelBox|title=Enabling Linux file capabilities support|1=
Kernel hacking  --->
        Compile-time checks and compiler options  --->
            [*] Debug Filesystem
}}

When using the ext4 filesystem, enable the <code>filecaps</code> USE flag if stats support is needed:

{{KernelBox|title=Enabling ext4 kvm_stat support|1=
File systems  --->
    <*> The Extended 4 (ext4) filesystem
    [*]   Ext4 Security Labels
}}

=== USE flags ===

Review the possible USE flags for QEMU.

{{USEflag|package=app-emulation/qemu}}

{{Note|More than one USE flag (<code>gtk</code>, <code>ncurses</code>, <code>sdl</code> or <code>spice</code>) can be enabled for graphical output. If graphics are desired it is generally recommended to enable more than one graphical USE flag.}}

==== USE_EXPAND ====
See [https://packages.gentoo.org/packages/app-emulation/qemu app-emulation/qemu] for a list of possible values for <code>QEMU_USER_TARGETS</code> and <code>QEMU_SOFTMMU_TARGETS</code>.

For each target specified, a qemu executable will be built. Normally, you want a <code>softmmu</code> target; <code>user</code> targets execute user-mode code only - i.e. you wish to execute a ''single'' ELF binary from a different architecture, rather than an entire OS.

=== Emerge ===

After reviewing and adding any desired USE flags, emerge {{Package|app-emulation/qemu}}:

{{Emerge|app-emulation/qemu}}

== Configuration ==

=== Networking ===
Basic networking support can be configured "out of the box" by creating a vlan with the following options.

{{CodeBox
|-net nic,vlan{{=}}0 -net user,vlan{{=}}0
}}

{{Note|As of QEMU 0.12 the `-net` method is considered obsolete, although it continues to work.[http://wiki.qemu.org/Documentation/Networking#The_legacy_-net_option]}}

A more advanced networking concept is outlined below, which enables guest access to an external network and also works with both wired and wireless adapters on the host.  If desired, a DHCP server can also be setup on the host to allow for dynamic guest IP configurations.  There are many different tutorials available online to further understand these concepts.[https://blog.san-ss.com.ar/2016/04/setup-nat-network-for-qemu-macosx][https://shanetomlinson.com/2009/bridging-a-wireless-card-in-kvmqemu/][http://blog.bodhizazen.net/linux/bridge-wireless-cards/][https://forums.gentoo.org/viewtopic-t-987790-start-0.html][http://nairobi-embedded.org/05_wlan_snat_qemu_tap_setup.html][http://nairobi-embedded.org/a_qemu_tap_networking_setup.html][https://superuser.com/questions/694929/wireless-bridge-on-kvm-virtual-machine][http://www.dedoimedo.com/computers/kvm-bridged.html]
[[File:Qemu_network_diag.png|center]]

==== Required packages ====
This example networking configuration needs some extra software installed:

{{Emerge|net-firewall/iptables}}

==== Host configuration ====
===== Creating TUN/TAP device =====
This allows the guest to communicate with the bridge.  QEMU's default group is <code>kvm</code>, ensure that the correct group is given permissions to control the TAP.  Enabling promiscuous mode (<code>promisc</code>) for the adapter might be unnecessary.
{{RootCmd
|ip tuntap add dev tap0 mode tap group kvm
|ip link set dev tap0 up promisc on
|ip addr add 0.0.0.0 dev tap0
}}

===== Create network bridge =====
Creating a network bridge seems necessary, even if only 1 guest is configured.  Create the bridge and add each TAP to it.  Spanning tree protocol (<code>stp</code>) is disabled because there is only 1 bridge.[//https://en.wikibooks.org/wiki/QEMU/Networking#TAP_interfaces]
{{RootCmd
|ip link add br0 type bridge
|ip link set br0 up
|ip link set tap0 master br0
|echo 0 > /sys/class/net/br0/bridge/stp_state
|ip addr add 10.0.1.1/24 dev br0
}}

===== Packet Forwarding and NAT =====
Allows for proper packet routing.
{{RootCmd
|sysctl net.ipv4.conf.tap0.proxy_arp{{=}}1
|sysctl net.ipv4.conf.eth1.proxy_arp{{=}}1
|sysctl net.ipv4.ip_forward{{=}}1
}}

{{RootCmd
|iptables -t nat -A POSTROUTING -o br0 -j MASQUERADE
|iptables -A FORWARD -i br0 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT
|iptables -A FORWARD -i eth1 -o br0 -j ACCEPT
}}


==== Guest configuration ====
The following should be added to the configuration.
{{CodeBox
|-net nic,vlan{{=}}0 -net tap,ifname{{=}}tap0,script{{=}}no,downscript{{=}}no
}}

After starting the guest, the IP should be configured to be on the vlan and the gateway should be the IP given to the bridge.  The exact process will vary based on OS.

=== Ipv6 ===

For IPv6 networking see the [[QEMU/KVM_IPv6_Support|IPv6 subarticle]].

=== Permissions ===

In order to run a KVM accelerated virtual machine without logging as root, add normal users to the <code>kvm</code> group. Replace <code><username></code> in the example command below with the appropriate user(s):

{{RootCmd|gpasswd -a <username> kvm}}

=== Front ends ===

To make life easier, there are multiple user-friendly front ends to QEMU:
{| class="table table-striped table-condensed"
|-
! Name !! Package !! Homepage !! Description
|-
| [[AQEMU]] || {{Package|app-emulation/aqemu}} ||  http://sourceforge.net/projects/aqemu || Graphical interface for QEMU and KVM emulators, using Qt4
|-
| libvirt || {{Package|app-emulation/libvirt}} || http://www.libvirt.org/ || C toolkit to manipulate virtual machines
|-
| [[QtEmu]] || {{Package|app-emulation/qtemu}} || http://qtemu.sourceforge.net/ ||  A graphical user interface for QEMU written in Qt4
|-
| qt-virt-manager || {{Package|app-emulation/qt-virt-manager}} || http://f1ash.github.io/qt-virt-manager/ || A graphical user interface for libvirt written in Qt4/5
|-
| virt-manager || {{Package|app-emulation/virt-manager}} || http://virt-manager.org || A graphical tool for administering virtual machines
|}

== Usage ==

The following sub-articles provide instructions on QEMU usage:

* [[QEMU/Options|Usage options]] - Contains common options used with QEMU.
* [[QEMU/Linux guest|Linux guest]] - Describes the configuration steps needed to setup Linux to run on QEMU.
* [[QEMU/Windows guest|Windows guest]] - Describes the configuration steps needed to setup Windows to run on QEMU.
* [[QEMU/OS2WarpV3 guest|OS2WarpV3 guest]] - Describes the configuration steps needed to setup OS2WarpVs=3 to run on QEMU.

== Troubleshooting ==

=== "kvm: already loaded the other module" ===

Sometimes during the early boot splash the error message "kvm: already loaded the other module" can be seen. This message indicates both the Intel and the AMD kernel virtual machine settings have been enabled in the kernel. To fix this, enable as a module or disable either the Intel ''or'' AMD KVM option specific to the system's processor in the kernel configuration. For example, if the system has an Intel processor enable the Intel KVM, then make sure the AMD KVM is set as a module (M) or is disabled (N). The relevant options to enable or disable can be found in the kernel's {{Path|.config}} file via the <var>CONFIG_KVM_INTEL</var> and <var>CONFIG_KVM_AMD</var> variables or in the configuration section above.

== See also ==

* [[QEMU/KVM_IPv6_Support|KVM IPv6]] - An article focusing on IPv6 support in QEMU/KVM.
* [[comparison of virtual machines|A comparison of virtual machines]]

== External resources ==

* http://www.linux-kvm.org/page/KvmOnGentoo - The Gentoo article on the KVM wiki
* http://wiki.qemu.org/Main_Page - The Official QEMU wiki
* http://www.tuxradar.com/content/howto-linux-and-windows-virtualization-kvm-and-qemu - A TuxRadar howto.
[[Category:Virtualization]]
