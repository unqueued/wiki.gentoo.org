<languages/>
<translate>

== Introduction == <!--T:1-->

<!--T:2-->
Even though postfix provides logs, having them graphically displayed and analyzed can give much more insight. {{Package|www-misc/awstats}} is a popular log analyzer that can parse logs and setup proper results.

== Installation == <!--T:3-->

<!--T:4-->
AWStats is a web-application but no longer relies on webapp-config. If it hasn't emerged already, it needs to be emerged.

<!--T:5-->
{{Emerge|www-misc/awstats}}

<!--T:6-->
Once installed, a config file needs to be created, either per domain, or one that handles all domains.

<!--T:7-->
{{RootCmd|cp /etc/awstats/awstats.model.conf /etc/awstats/awstats.example.com.conf}}

<!--T:8-->
AWStats isn't installed via webapp-config, but rather a simple symlink is used.

<!--T:9-->
{{RootCmd|ln -s /usr/share/awstats/wwwroot /var/www/mail.example.com/htdocs/awstats}}

== Configuration == <!--T:10-->

=== AWStats === <!--T:11-->

<!--T:12-->
AWStats comes with reasonable defaults, but some need to be changed nevertheless.

<!--T:13-->
For one, awstats assumes that vhosts aren't used. When using apache's default combined vhost logs for example, awstats will fail to run.

<!--T:14-->
Assume apache's combined LogFormat is setup as follows:

<!--T:15-->
{{CodeBox|title=Apache's LogFormat|1=
LogFormat "%v %h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" VLOG=%{VLOG}e" vhost
}}

<!--T:16-->
The following changes then need to be made:

<!--T:17-->
{{FileBox|filename=/etc/awstats/awstats.example.com.conf|title=Match Logformat to apache's.|1=
LogFormat = "%virtualname %host %other %logname %time1 %methodurl %code %bytesd %refererquot %uaquot"
}}

<!--T:18-->
Next awstats needs to know about the domains and aliases to filter from the log file:

<!--T:19-->
{{FileBox|filename=/etc/awstats/awstats.example.com.conf|title=Make awstats listen to the domains|<nowiki>
SiteDomain="example.com"
 
HostAliases="localhost 127.0.0.1 REGEX[example\.com$] REGEX[example\.(org|net)$]
</nowiki>}}

<!--T:20-->
Also, awstats needs to store its database somewhere. Gentoo has created {{Path|/var/lib/awstats}} for this use, but it can be stored anywhere. Make sure the permissions are set so that the apache user can write to it:

<!--T:21-->
{{FileBox|filename=/etc/awstats/awstats.example.com.conf|title=AWStats database storage|1=
DirData="/var/lib/awstats"
}}

<!--T:22-->
Any other changes to the configuration file are optional, but interesting to look into:

<!--T:23-->
{{Note|When using the graphapplet plugin, the java applet may not display, see {{Bug|400589}} for more information.}}

=== Logging === <!--T:24-->

<!--T:25-->
awstats needs to process the apache log file to build its database. Once confirmed that it is working manually it can be automated.

==== Manually ==== <!--T:26-->

<!--T:27-->
First, awstats should be run from the console, to spot any initial errors:

<!--T:28-->
{{Cmd|<nowiki>awstats.pl -config=stats.example.com -update -showdropped</nowiki>}}

<!--T:29-->
This should list any issues and missing domain names from the config.

==== Cron ==== <!--T:30-->

<!--T:31-->
If everything is working perfectly, it can then be added to {{Path|cron.hourly}}:

<!--T:32-->
{{FileBox|filename=/etc/cron.hourly/awstats|title=AWstats cronjob|lang=bash|1=
#!/bin/sh
awstats.pl -config=stats.example.com -update > /dev/null 2>&1
}}

<!--T:33-->
Remember to make the script executable if needed.

==== Logrotate ==== <!--T:34-->

<!--T:35-->
Awstats will process the log file every hour, but when logrotate rotates apache's log, some entries may be missing. This is easily solved however.

<!--T:36-->
{{FileBox|filename=/etc/logrotate.d/apache2|title=Diff of pre-init script|lang=diff|1=
# Apache2 logrotate snipet for Gentoo Linux
# Contributes by Chuck Short
#
/var/log/apache2/*log {
  missingok
  notifempty
  sharedscripts
+  prerotate
+  /etc/cron.hourly/awstats > /dev/null 2>&1
+  endscript
  postrotate
  /etc/init.d/apache2 reload > /dev/null 2>&1 {{!}}{{!}} true
  endscript
}
}}

=== Apache === <!--T:37-->

<!--T:38-->
For awstats to be used from apache, the webhost needs to properly setup. In the alias section, the following needs to be added:

<!--T:39-->
{{FileBox|filename=/etc/apache2/vhosts.d/stats.example.com|title=Aliases for awstats|1=
Alias /awstats/classes "/usr/share/awstats/wwwroot/classes"
Alias /awstats/css "/usr/share/awstats/wwwroot/css"
Alias /awstats/icon "/usr/share/awstats/wwwroot/icon"
Alias /awstats/js "/usr/share/awstats/wwwroot/js"
ScriptAlias /awstats/ "/usr/share/awstats/wwwroot/cgi-bin/"
}}

<!--T:40-->
Finally, awstats needs the correct permissions to be accessible:

<!--T:41-->
{{FileBox|filename=/etc/apache2/vhosts.d/stats.example.com|title=Aliases for awstats|lang=apache|1=
<Directory "/usr/share/awstats/wwwroot">
        AllowOverride None
        Options None
        Order allow,deny
        Allow from all
</Directory>
}}

<!--T:42-->
After a restart of apache, awstats should be available via http://stats.example.com/awstats/awstats.pl?config=stats.example.com. If no config option is passed to awstats, it uses the current hostname, which means in this case could have been omitted.

== Awstats for mail log == <!--T:43-->

<!--T:44-->
AWStats is known for being an apache log parser. However it can also be used to parse mail logs.

=== Configuration === <!--T:45-->

<!--T:46-->
After copying {{Path|awstats.stats.example.com.conf}} to {{Path|awstats.mail.example.com.conf}} quite a few changes are required to turn awstats into a mail log parser.

<!--T:47-->
{{FileBox|filename=/etc/awstats.mail.example.com.conf|title=Log mail.log instead of access.log (diff -u, only additions and deletions)|lang=diff|1=
-LogFile="/var/log/apache2/access_log"
+LogFile="perl /usr/bin/awstats_maillogconvert.pl standard < /var/log/mail.log {{!}}"
 
-LogType=W
+LogType=M
 
-LogFormat=1
+LogFormat="%time2 %email %email_r %host %host_r %method %url %code %bytesd"
 
-SiteDomain="localhost"
+SiteDomain="example.com"
 
 
-HostAliases="localhost 127.0.0.1 REGEX[myserver\.com$]"
+HostAliases="localhost 127.0.0.1 REGEX[example\.(net{{!}}org)$]"
 
-DirData="."
+DirData="/var/lib/awstats"
 
-LevelForBrowsersDetection=2         # 0 disables Browsers detection.
+LevelForBrowsersDetection=0         # 0 disables Browsers detection.
                                     # 2 reduces AWStats speed by 2%
                                     # allphones reduces AWStats speed by 5%
-LevelForOSDetection=2               # 0 disables OS detection.
+LevelForOSDetection=0               # 0 disables OS detection.
                                     # 2 reduces AWStats speed by 3%
-LevelForRefererAnalyze=2            # 0 disables Origin detection.
+LevelForRefererAnalyze=0            # 0 disables Origin detection.
                                     # 2 reduces AWStats speed by 14%
-LevelForRobotsDetection=2           # 0 disables Robots detection.
+LevelForRobotsDetection=0           # 0 disables Robots detection.
                                     # 2 reduces AWStats speed by 2.5%
-LevelForSearchEnginesDetection=2    # 0 disables Search engines detection.
+LevelForSearchEnginesDetection=0    # 0 disables Search engines detection.
                                     # 2 reduces AWStats speed by 9%
-LevelForKeywordsDetection=2         # 0 disables Keyphrases/Keywords detection.
+LevelForKeywordsDetection=0         # 0 disables Keyphrases/Keywords detection.
                                     # 2 reduces AWStats speed by 1%
-LevelForFileTypesDetection=2        # 0 disables File types detection.
+LevelForFileTypesDetection=0        # 0 disables File types detection.
                                     # 2 reduces AWStats speed by 1%
 LevelForWormsDetection=0            # 0 disables Worms detection.
                                     # 2 reduces AWStats speed by 15%
 
-ShowRobotsStats=HBL
+ShowRobotsStats=0
 
-ShowEMailSenders=0
+ShowEMailSenders=HBML
 
-ShowEMailReceivers=0
+ShowEMailReceivers=HBML
 
-ShowSessionsStats=1
+ShowSessionsStats=0
 
-ShowPagesStats=PBEX
+ShowPagesStats=0
 
-ShowFileTypesStats=HB
+ShowFileTypesStats=0
 
-ShowFileSizesStats=0
+ShowFileSizesStats=1
 
-ShowDownloadsStats=HB
+ShowDownloadsStats=0
 
-ShowOSStats=1
+ShowOSStats=0
 
-ShowBrowsersStats=1
+ShowBrowsersStats=0
 
-ShowOriginStats=PH
+ShowOriginStats=0
 
-ShowKeyphrasesStats=1
+ShowKeyphrasesStats=0
 
-ShowKeywordsStats=1
+ShowKeywordsStats=0
 
-ShowMiscStats=a
+ShowMiscStats=0
 
-ShowHTTPErrorsStats=1
+ShowHTTPErrorsStats=0
 
-ShowSMTPErrorsStats=0
+ShowSMTPErrorsStats=1
}}

<!--T:48-->
With those changes in place, a manual run should work without any issues:

<!--T:49-->
{{Cmd|awstats.pl -config{{=}}mail.example.com -showcorrupted -showdropped}}

=== Logging === <!--T:50-->

<!--T:51-->
To scan the mail log every hour, the existing awstats script in {{Path|cron.hourly}} can be appended with the following:

<!--T:52-->
{{FileBox|filename=/etc/cron.hourly/awstats|title=Add parsing of the mail log|lang=bash|1=
awstats.pl -config=mail.example.com -update > /dev/null 2>&1
}}

<!--T:53-->
Also syslog is getting rotated and thus awstats needs to parse the mail log file before the mail log is being rotated:

<!--T:54-->
{{FileBox|filename=/etc/logrotate.d/syslog-ng|title=Modify mail log entry in syslog|<nowiki>
# Mail system
/var/log/mail.log /var/log/mail.info /var/log/mail.err /var/log/mail.warn {
    sharedscripts
    missingok
    prerotate
        /etc/cron.hourly/awstats
    endscript
    postrotate
        /etc/init.d/syslog-ng reload > /dev/null 2>&1 || true
    endscript
}
</nowiki>}}

<!--T:55-->
{{Note|The {{Path|/var/log/mail.log}} file does not have to be on the same server. AWStats will have to have access to it. This could be via NFS, or having syslog do remote logging.}}

<!--T:56-->
If logging of apache files is not desired, or webmail resides on a different server, the webserver log parsing can be removed from cron jobs.

</translate>
[[Category:Mail Servers]]
