{{Metadata|abstract=rEFInd is a boot manager for EFI and UEFI platforms forked from and successor to rEFIt. It provides a graphical interface for launching EFI-based operating systems and accessing EFI-based utilities.}}{{InfoBox stack
|{{InfoBox homepage|http://www.rodsbooks.com/refind/|header=true}}
|{{InfoBox wikipedia|REFInd}}
}}

'''rEFInd''' is a boot manager for EFI and UEFI platforms forked from and successor to rEFIt. It provides a graphical interface for launching EFI-based operating systems and accessing EFI-based utilities, and has the functionality to scan multiple filesystems for executable EFI binaries.

{{Note|Parts of this page have been copied from [[Syslinux]] as they are both capable (u)EFI boot managers and have similar steps with regards to management of the ESP.}}

== Installation ==

Installing rEFInd builds the EFI binaries for your system but does not install them into your [[EFI System Partition]] (ESP) - additional steps are needed to finish installing rEFInd after the package has been emerged.

=== USE flags ===

rEFInd has optional support for reading several filesystems before loading the operating system. This can allow you to keep your kernels on your root partition or {{c|/boot}} partition instead of on the ESP. It should be noted, however, that filesystem drivers are not needed if you intend to copy your kernels to the ESP - they are only needed if you want rEFInd to scan the relevant filesystem for EFI executables.

{{USEflag|package=sys-boot/refind}}

=== Emerge ===

{{Emerge|sys-boot/refind}}

{{Note|An update to the rEFInd package will not affect any EFI binaries that have been installed to the EFI System Partition. After each update to the rEFInd package you will need to install the binaries to your ESP as per the below instructions.}}

== ESP Installation ==

Once the rEFInd package has been emerged, you will need to perform a second step to install the binaries to your EFI System Partition. There are two methods to installing the EFI binaries into your EFI System Partition.

{{Note|For the following instructions it will be assumed that your EFI System Partition is located on {{Path|/dev/sda1}} and is typically mounted to {{Path|/boot/efi}}.}}

=== EFI System Partition ===

Create a partition of type <code>EF</code> (MBR) or <code>EF00</code> (GPT) with a FAT32 file system. It is also possible to use an existing [[EFI system partition]] if one is present. It is advisable to mount this partition at {{Path|/boot/efi/}}

It is important to note that you do not necessarily need a separate partition for {{Path|/boot}} unless:

* You want rEFInd to scan for kernels from your {{Path|/boot}} directory instead of loading from your ESP, '''and'''
** You use full-disk encryption such as [[DM-Crypt_LUKS]] on your root partition, '''or'''
** Your kernels are located on a filesystem for which there is no EFI filesystem driver

=== Manual installation ===

Assuming your ESP is mounted as per the above note, create the top-level directory for your EFI binaries in your ESP.

{{RootCmd|mkdir -p /boot/efi/EFI}}

Copy the EFI binaries, fonts, icons, images and drivers installed by the rEFInd package into your ESP. They will go into their own directory separate from any operating system kernels or loaders.

{{RootCmd|cp -r /usr/share/refind-*/refind /boot/efi/EFI/}}

The EFI filesystem drivers are loaded dynamically - just because they were built when rEFInd was emerged, it doesn't mean that the drivers need to be copied to the ESP. You may selectively reject one or all drivers as necessary. On {{Keyword|x86}} platforms the drivers are located in {{Path|/boot/efi/EFI/refind/drivers_x86.efi}} and on {{Keyword|amd64}} platforms it is {{Path|/boot/efi/EFI/refind/drivers_x64}}.

==== Configuration file ====

rEFInd can operate without a configuration file, however a well documented sample file is available which can be installed by copying into the refind directory on your ESP. You can then edit it once it is there.

{{RootCmd|cp /usr/share/doc/refind-*/refind.conf-sample /boot/efi/EFI/refind/refind.conf}}

rEFInd is now installed to your EFI System Partition with all the resources it will need.

=== Automated install script ===

The rEFInd package comes with a shell script for installing the binaries and supporting files to the EFI System Partition called {{c|install.sh}}. Typically this should be a case of simply running the script, however it also has a number of options available - see {{c|--help}}. This also installs the refind configuration file as {{Path|/boot/efi/EFI/refind/refind.conf}}.

{{RootCmd|/usr/share/refind-*/install.sh}}

== Listing rEFInd as a boot option ==

{{Note|This requires that the system is booted in EFI mode and that {{Package|sys-boot/efibootmgr}} is installed. If {{c|efibootmgr}} is not installed it can be with:

{{Emerge|sys-boot/efibootmgr}}
}}

{{Note|As rEFInd will not be the default bootloader, a one-off method of booting into EFI mode will be required. This can often be achieved by using the {{Key|F2}}, {{Key|F8}} or {{Key|F11}} keys (depending on the firmware) to manually select an EFI binary from which to boot. Failing this, an alternative boot medium that can boot into EFI mode and has {{Package|sys-boot/efibootmgr}} installed such as [http://www.sysresccd.org SystemRescue CD] can be used.}}

Ensure that <var>CONFIG_EFI_VARS</var> is enabled in the kernel. If it was built as a module, ensure that it is loaded into memory. This action can be done using the {{c|modprobe}} utility. After the modules have been loaded create a new boot entry using {{c|efibootmgr}}:

{{RootCmd|efibootmgr -c -l '\EFI\refind\refind_x64.efi' -L rEFInd -p 1}}

{{Note|If installing on an {{Keyword|x86}} platform, the binary name will be {{c|refind_x86.efi}}.}}

{{c|efibootmgr}} will automatically adjust the EFI boot order to put the most recently created entry at the top of the list. If that is undesired, change the boot order with the <code>-o</code> option.

=== EFI Fallback Boot Image ===

Most EFI and UEFI firmware support a fallback EFI image to boot from if the configured EFI file cannot be found, and some will also override the configured boot selection if the fallback boot image is found. This can be used to boot into EFI mode when doing so otherwise is difficult.

Simply copy the {{Path|refind}} directory on the ESP to {{Path|BOOT}} and rename the refind EFI file according to your platform.

{{RootCmd
|cp -r /boot/efi/EFI/refind /boot/efi/EFI/BOOT
|mv /boot/efi/EFI/BOOT/refind_x64.efi /boot/efi/EFI/BOOT/bootx64.efi
}}

This can be used as either a permanent setup or as a temporary bootstrap to get your system to boot in EFI mode. '''Note''' that on {{Keyword|x86}} platforms, the {{Keyword|x64}} component is replaced with {{Keyword|x86}}.

== Kernel management ==

As previously stated, when used with the appropriate filesystem driver, rEFInd can scan your root partition for suitable Linux kernels to boot. Alternatively, you can copy your kernel (and initramfs if you use one) to your ESP. If this method is used and filesystem drivers are not installed, this can potentially speed up your boot by a couple of seconds.

rEFInd detects and displays an icon appropriate for the operating system kernel based on the directory it is in. To display a nice Gentoo logo, copy your kernel (and initramfs if required) to {{Path|/boot/efi/EFI/gentoo}}.

{{RootCmd|cp /boot/vmlinuz-4.2.0-gentoo /boot/efi/EFI/gentoo/vmlinuz-4.2.0-gentoo.efi
|cp /boot/initramfs-4.2.0-gentoo /boot/efi/EFI/gentoo/initramfs-4.2.0-gentoo.img}}

{{Note|File names are important to rEFInd, especially for matching kernels with their initramfs. Follow the above naming convention for best results, though more detail can be found in the config file.}}

=== Kernel cmdline ===

When booting a kernel using the Linux EFI stub, the kernel cmdline typically has to be built in to the kernel itself with <var>CONFIG_CMDLINE</var>. This can still be done with rEFInd, however you can also specify different boot configurations to appear as different menu options within the rEFInd menu. This is done by creating the file {{Path|/boot/efi/EFI/gentoo/refind_linux.conf}} with a menu title and the matching cmdline options on each line.

{{FileBox|filename=/boot/efi/EFI/gentoo/refind_linux.conf|1="Default"	"root=/dev/sda2 rootfstype=ext4 ro quiet"
"Console"	"root=/dev/sda2 rootfstype=ext4 ro quiet nox"
"Emergency"	"root=/dev/sda2 rootfstype=ext4 ro 1"}}

The main selection screen for rEFInd will use the first option as the default option, however alternate boot entries can be accessed by highlighting your kernel and pressing {{Key|F2}}. You can also modify cmdline on-the-fly by pressing {{Key|F2}} on a menu item to open it in an editor. When ready, press {{Key|Enter}} to boot the kernel.

{{Note|The kernel cmdline options above are for example only - you will need to have your own options that allow your kernel to boot for your system.}}

== See also ==

* [[GRUB|GRUB Legacy]]
* [[GRUB2]]
* [[Syslinux]]

== External resources ==

* [http://sourceforge.net/p/refind/code/ci/master/tree/ rEFInd SourceForge repository]
* [http://www.rodsbooks.com/refind/installing.html Upstream installation instructions]
* [http://www.sysresccd.org SystemRescue CD]

[[Category:Bootloaders]]
