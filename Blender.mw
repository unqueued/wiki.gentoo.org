{{Stub}}

{{InfoBox stack
|{{InfoBox homepage|http://www.blender.org/|header=true}}
|{{InfoBox wikipedia|Blender_(software)}}
}}

Blender is a professional free and open-source 3D computer graphics software.

== Installation ==

{{Note|Installation of recent releases of Blender on Gentoo is rather complicated. This page explains how to solve the most
common issues for installation of version 2.72b. Blender quickly changes, so these steps may soon become obsolete. Wiki editors will attempt to stay current on build instructions. If something is broken do not hesitate to make changes to the article.}}

=== USE flags ===

<code>python_targets_python3_4</code> and <code>python_single_target_python3_4</code> USE flags  are required for Python. The rest of the flags listed here are useful when working with Blender, but not necessary. Enable flags as desired. Following the recommendations below will install Blender 2.72b.

{{USEflag|package=media-gfx/blender|desc=Optional USE flags for {{Package|media-gfx/blender}}:
|boost
|bullet
|collada
|colorio
|cpu_flags_x86_sse+++Use the SSE instruction set
|cpu_flags_x86_sse2+++Use the SSE2 instruction set
|cycles
|dds
|debug
|doc
|elbeem
|ffmpeg
|fftw++Yes+
|game-engine
|jack
|jpeg2k
|libav+++Prefer libav over ffmpeg whenever both are supported
|ndof
|nls
|openal++Yes+
|openexr
|openimageio+++Enable OpenImageIO Support
|openmp
|opennl+++Enable use of Open Numerical Library
|player++Yes+
|python_targets_python3_4+Yes+Yes+Build with Python 3.4
|redcode
|sdl
|sndfile
|tiff
}}

Unmask Python 3.4 USE flags by adding lines to {{Path|/etc/portage/profile/use.stable.mask}}:

{{FileBox|filename=/etc/portage/profile/use.stable.mask|title=Unmaking Python 3.4 for Blender|1=
-python_targets_python3_4
-python_single_target_python3_4
}}

Use EAPI 5:

{{RootCmd|echo "5" > /etc/portage/profile/eapi}}

Setup USE flags for Blender in {{Path|/etc/portage/package.use}}:

{{FileBox|filename=/etc/portage/package.use|title=Appropriate USE flags for Blender|1=
# blender
media-gfx/blender python_targets_python3_4 python_single_target_python3_4 cycles openimageio player fftw openal
dev-python/numpy python_targets_python3_4
dev-python/chardet python_targets_python3_4
dev-python/requests python_targets_python3_4
dev-python/setuptools python_targets_python3_4
sci-libs/hdf5 -threads # with threads we would have to disable cxx and fortran
}}

Unmask related packages by adding to {{Path|/etc/portage/package.keywords}}:

{{FileBox|filename=/etc/portage/package.keywords|title=Accept unstable Blender related packages|1=
media-gfx/blender ~amd64
sci-libs/ldl ~amd64
=media-libs/openimageio-1.1* ~amd64   # 1.1.1 fails to compile, related to openexr
}}

Due to {{Bug|523928}} cycles may fail to compile. To work around it, create {{Path|/etc/portage/patches/media-gfx/blender/blender.redefinition.patch}} patch file:

<pre>diff -Nur old/intern/cycles/util/util_simd.h new/intern/cycles/util/util_simd.h 
--- old/intern/cycles/util/util_simd.h  2014-10-20 03:58:22.000000000 -0400 
+++ new/intern/cycles/util/util_simd.h  2015-02-03 13:29:26.156893414 -0500 
@@ -19,6 +19,7 @@ 
 #define __UTIL_SIMD_TYPES_H__
 
 #include <limits>
+#include <x86intrin.h> 
 
 #include "util_debug.h"
 #include "util_types.h"
</pre>

(This patch can also be obtained from http://pastebin.com/k20VbHjG if copying and pasting from formatting adds extra spaces that break the patch.)

=== Emerge ===

Emerge Blender:

{{Emerge|params+=--verbose|media-gfx/blender}}

== Cuda ==

Cycles renderer can work on GPUs, for example Nvidia GTX 970 is about twice as fast as an i5 4690k on
traditional BMW benchmark. As of February 2015, support for AMD GPUs and opencl is very limited.

To enable graphics card rendering, install Cuda:

{{Emerge|params+=--verbose|dev-util/nvidia-cuda-toolkit}}

Follow Blender's manuals to switch from CPU rendering to GPU. There may be complications. See the sections below.

=== Nvidia GTX 900 series ===

At the moment of writing this (February 2015), newer Nvidia cards are not supported in Blender 2.72, and Blender 2.73 is not in the Portage tree.

Fix is trivial, however:

* Unmask and emerge dev-util/nvidia-cuda-toolkit of version 6.5.19 or higher
* Create a file /etc/portage/patches/media-gfx/blender/blender.sm_52.patch with contents

<pre>
diff --git a/intern/cycles/kernel/kernel.cu b/intern/cycles/kernel/kernel.cu
index d5b5293..9ed4592 100644
--- a/intern/cycles/kernel/kernel.cu
+++ b/intern/cycles/kernel/kernel.cu
@@ -52,8 +52,8 @@
 #define CUDA_KERNEL_MAX_REGISTERS 63
 #define CUDA_KERNEL_BRANCHED_MAX_REGISTERS 63
 
-/* 5.0 */
-#elif __CUDA_ARCH__ == 500
+/* 5.0 and 5.2 */
+#elif __CUDA_ARCH__ == 500 || __CUDA_ARCH__ == 520
 #define CUDA_MULTIPRESSOR_MAX_REGISTERS 65536
 #define CUDA_MULTIPROCESSOR_MAX_BLOCKS 32
 #define CUDA_BLOCK_MAX_THREADS 1024
</pre>

Re-emerge Blender:

{{Emerge|params+=--one-shot|media-gfx/blender}}

=== gcc 4.9 === 

If you use gcc 4.9, cuda may not work, complaining that it does not support 
gcc-4.9 and higher. However, gcc 4.9 happily works
after a simple dirty hack: in a file /opt/cuda/include/host_config.h
<pre>...
#if defined(__GNUC__)

#if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ > 8)

#error -- unsupported GNU version! gcc 4.9 and up are not supported!

#endif /* __GNUC__> 4 || (__GNUC__ == 4 && __GNUC_MINOR__ > 8) */
...</pre>
replace "8" with "9" twice.

== See also ==

* [[SpaceNavigator]]   
* [[OpenCL]]
* [[Project:Artwork/Artwork]]: Gentoo artwork, including a .blend file used to create some of it.

== External resources ==

* {{package|media-gfx/blender}}

[[Category:Software]]
