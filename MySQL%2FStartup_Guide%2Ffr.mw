<languages />

Ce document vous assiste dans la configuration et l'utilisation de MySQL.

== Démarrer avec MySQL ==

=== Fondamentaux ===

MySQL est un serveur de bases de données utilisé dans des applications variées. SQL signifie (S)tructured (Q)uery (L)anguage (Langage de requêtes structuré), langage que MySQL utilise pour communiquer avec d'autres programmes. Par dessus tout cela, MySQL possède ses propres fonctions SQL étendues pour offrir à l'utilisateur des fonctionnalités additionnelles. Dans ce document, nous allons voir comment procéder à l'installation initiale de MySQL, configurer des bases de données et des tables puis créer de nouveaux utilisateurs. Commençons par l'installation. 

=== Installation de MySQL ===

Assurez-vous d'abord que MySQL est installé sur votre système. Dans le cas où vous auriez besoin de fonctionnalités spécifiques de MySQL, vérifiez que vous avez activé les options requises de la variable USE qui vous permettent de peaufiner votre installation. 

{{Emerge|mysql}}

À la fin de l'installation vous recevrez la notification suivante : 

{{Code|MySQL einfo message|<pre>
You might want to run:
"emerge --config =dev-db/mysql-[version]"
if this is a new install.
</pre>
}}

Comme il s'agit d'une nouvelle installation, exécutez la commande. Vous devez presser la touche <code>ENTREE</code> lorsque vous y êtes invité durant la configuration de la base de données MySQL. La configuration met en place la base de données MySQL principale qui contient les informations administratives telles que les bases de données, les tables, les utilisateurs, les droits et plus encore. La configuration vous recommande de changer le mot de passe root dès que possible. Vous devez absolument le faire, sinon quelqu'un pourrait arriver par hasard et hacker la configuration de votre serveur MySQL. 

{{RootCmd|emerge --config {{=}}dev-db/mysql-[version]|output=<pre>
 * MySQL DATADIR is /var/lib/mysql
 * Pressez ENTREE pour créer la base de données mysql et définir les 
 * permissions adéquates sur elles, ou Control-C pour abandonner maintenant...
 
   Preparing db table
   Preparing host table
   Preparing user table
   Preparing func table
   Preparing tables_priv table
   Preparing columns_priv table
   Installing all prepared tables
 
   Pour lancer  mysqld au démarrage vous devez  copier support-files/mysql.server
   au bon emplacement pour votre système.
 
  PENSEZ À DÉFINIR UN MOT DE PASSE MySQL POUR L'UTILISATEUR root  !
   Pour cela, exécutez les commandes suivantes pour démarrer le serveur et changer le mot de passe :
 
   /etc/init.d/mysql start
   /usr/bin/mysqladmin -u root -h pegasos password 'new-password'
   /usr/bin/mysqladmin -u root password 'new-password'
   Selon votre configuration, une option -p peut être nécessaire
   dans la dernière commande. Reportez-vous au manuel pour les détails.
</pre>}}

Quelques  informations MySQL, non spécifiques à l'ebuild, ont été retirées de manière à conserver autant de cohérence que possible dans ce document.

{{Important|Depuis mysql-4.0.24-r2, les mots de passe sont entrés pendant la phase de configuration rendant la saisie du mot de passe root plus sûre.}}

Le script de configuration a déjà imprimé les commandes dont vous avez besoin pour définir  votre mot de passe. Exécutez les. 

{{RootCmd|/etc/init.d/mysql start|output=<pre>
 * Re-caching dependency info (mtimes differ)...
 * Starting mysqld (/etc/mysql/my.cnf) ...        [ ok ]
</pre>}}

{{RootCmd|/usr/bin/mysqladmin -u root -h localhost password 'new-password'}}

Vous pouvez désormais tester votre mot de passe root en essayant de vous connecter au serveur MySQL : 

{{Cmd|mysql -u root -h localhost -p|output=<pre>
Entrez le mot de passe:
Bienvenue dans le surveillant MySQL. Les commandes se terminent par ; ou \g.
Votre identifiant de connexion MySQL est 4 pour la version du serveur : 4.0.25
 
Tapez 'help;' ou '\h' pour de l'aide. Tapez '\c' pour effacer le tampon
 
mysql>
</pre>
}}

L'option <code>-u</code> définit le nom de l'utilisateur qui désire se connecter.   L'option <code>-h</code> définit l'hôte. C'est en général <code>localhost</code> sauf si vous êtes en train de configurer un serveur distant. Pour finir, l'option <code>-p</code> informe le client  mysql que vous aller saisir le mot de passe d'accès à la base de données. Notez l'apparition de l'invite de commande  <code>mysql></code>. C'est dans ce contexte que vous saisissez toutes les commandes mysql. Maintenant que vous avez l'invite de commande mysql en tant que root, vous pouvez commencer à  configurer votre base de données. 

== Configurer la base de données ==

=== Créer une base de données ===

Vous vous êtes connecté et vous disposez d'une invite de commande mysql. Commençons par regarder les bases de données dont vous disposez. Pour cela, utilisez la commande <code>SHOW DATABASES</code>. 

{{Cmd|SHOW DATABASES|prompt=mysql&gt; |output=<pre>
+----------+
| Database |
+----------+
| mysql    |
| test     |
+----------+
2 rows in set (0.09 sec)
</pre>
}}

{{Important|Rappelez-vous que les commandes  MySQL doivent se terminer par un point-virgule -- <code>;</code>}}

Bien qu'une base de données de test soit déjà créée, nous allons créer la notre. Les bases de données sont créées en utilisant la commande  <code>CREATE DATABASE</code>. Nous allons en créer une appelée ''gentoo''. 

{{Cmd|CREATE DATABASE gentoo;|prompt=mysql&gt; |output=<pre>
Query OK, 1 row affected (0.08 sec)
</pre>
}}

La réponse nous fait savoir que la commande a été exécutée sans erreur. Dans ce cas, une ligne a été modifiée. Ceci se réfère à la base de données principale, qui contient la liste de toutes les bases de données. Vous n'avez pas à trop vous préoccuper des détails d'arrière-plan. Le dernier nombre indique combien de temps l'exécution de le requête a nécessité. Vous pouvez vérifier que la base de données a été créée en exécutant la commande <code>SHOW DATABASES</code> à nouveau. 

{{Cmd|SHOW DATABASES;|prompt=mysql&gt; |output=<pre>
+----------+
| Database |
+----------+
| gentoo   |
| mysql    |
| test     |
+----------+
3 rows in set (0.00 sec)
</pre>
}}

Votre base de données a bien été créée. Afin de commencer à créer des tables dans votre nouvelle base gentoo, vous devez la sélectionner comme base de données courante en utilisant la commande <code>USE</code>. La commande <code>USE</code> prend comme argument le nom de la base de données que vous voulez utiliser comme base de données courante. Une autre possibilité est de la définir dans les commandes avec l'option  <code>-D</code>. Définissez maintenant votre base de données courante. 

{{Cmd|USE gentoo;|prompt=mysql&gt; |output=<pre>
Database changed
</pre>
}}

La base de données courante est maintenant votre base de données ''gentoo'' fraîchement créée. Maintenant que vous l'utilisez, vous pouvez commencer à créer des tables et y placer des informations.

== Travailler avec des tables dans MySQL ==

=== Créer une table ===

Dans la structure de MySQL, il y a les bases de données, les tables, les enregistrements et les champs. Les bases de données contiennent les tables, les tables contiennent les enregistrements et les enregistrements contiennent les champs qui contiennent, pour leur part, les informations réelles. Cette structure permet aux utilisateurs de préciser comment ils veulent accéder à leurs données.  Jusqu'à maintenant vous avez manipulé des bases de données, passez maintenant aux tables. Tout d'abord, les tables peuvent être listées comme les bases de données avec la commande <code>SHOW TABLES</code>. Actuellement, il n'y a pas de table dans la base ''gentoo'', et la sortie de la commande indique : 

{{Cmd|SHOW TABLES;|prompt=mysql&gt; |output=<pre>
Empty set (0.00 sec) (Jeu vide)
</pre>
}}

Ceci signifie qu'il faut créer quelques tables. Pour cela utilisez la commande  <code>CREATE TABLE</code>. Cette commande est très différente de la commande <code>CREATE DATABASE</code> en ce sens qu'elle demande une liste d'arguments. Elle a la forme suivante : 

{{Code|CREATE TABLE Syntax|<pre>
CREATE TABLE [nom_de_table] ([nom_de_champ] [type_de_données_de_champ]([taille]));
</pre>
}}

'''nom_de_table''' est le nom de la table que vous voulez créer. Dans notre cas créez une table nommée <code>développeurs</code> . Cette table contiendra le nom des développeurs, leur adresse de courriel et leur travail.'''nom_de_champ''' est le nom des champ. Dans notre exemple, il nous faut trois noms :  nom, courriel et travail. L'argument '''type_de_données_du_champ''' représente le type d'information qui sera stocké. Les différents formats valides peuvent être trouvés sur les pages [http://dev.mysql.com/doc/mysql/fr/column-types.html  Types de colonnes] de MySQL. Pour nos besoins, nous utiliserons le type de données <code>VARCHAR</code> pour tous les champs.<code>VARCHAR</code> est l'un des types de données les plus simples pour travailler avec des chaînes de caractères.'''taille ''' représente le quantité de données un simple champ contiendra. Dans notre cas nous utiliserons   128. Ceci signifie que le champ peut contenir jusqu'à  128 octets. Vous pouvez vous les figurer sans crainte  128 caractères pour le moment, bien qu'il existe une information plus technique que le site cité ci-dessus puisse vous fournir. Maintenant créez la table. 

{{Cmd|CREATE TABLE développeurs ( nom VARCHAR(128), courriel VARCHAR(128), travail VARCHAR(128));|prompt=mysql&gt; |output=<pre>
Query OK, 0 rows affected (0.11 sec)
</pre>
}}

Il semble que votre table ait bien été créée.  Vérifions cela avec la commande <code>SHOW TABLES</code> : 

{{Cmd|SHOW TABLES;|prompt=mysql&gt; |output=<pre>
+------------------+
| Tables_in_gentoo |
+------------------+
| développeurs     |
+------------------+
1 row in set (0.00 sec)
</pre>
}}

Bien ! Notre table est là ! Néanmoins, elle ne semble pas contenir la moindre information sur les types de champs que nous avons définis. Pour cela, utilisez la commande <code>DESCRIBE</code> (ou <code>DESC</code> en forme raccourcie), qui prend le nom de la table en argument. Regardons à quoi cela ressemble avec notre table développeurs. 

{{Cmd|DESCRIBE développeurs;|prompt=mysql&gt; |output=<pre>
+----------+--------------+------+-----+----------+---------+
| Champ    | Type         | Null | Key | Defaut     | Extra   |
+----------+--------------+------+-----+------------+---------+
| nom      | varchar(128) | YES  |     | NULL       |         |
| courriel | varchar(128) | YES  |     | NULL       |         |
| travail  | varchar(128) | YES  |     | NULL       |         |
+----------+--------------+------+-----+------------+---------+
3 rows in set (0.00 sec)
</pre>
}}

Ceci montre les différents champs et leur type ainsi que quelques attributs supplémentaires qui sont au delà du champ de ce document. Reportez-vous au [http://dev.mysql.com/doc/mysql/fr/ Manuel de référence de MySQL ] pour une information plus complète. Vous disposez maintenant d'une table avec laquelle travailler. Nous allons la remplir. 

=== Remplir la base de données  MySQL  ===

Nous remplissons une table (ou y ajoutons des données) avec la commande <code>INSERT</code>. Comme la commande <code>CREATE TABLE</code>, elle utilise un format spécifique : 

{{Code|INSERT Syntax|<pre>
INSERT INTO table (col1, col2, ...) VALUES('valeur1', 'valeur2', ...);
</pre>
}}

Cette commande est utilisée pour insérer un enregistrement dans une table. ''table'' contient le nom de la table dans laquelle nous désirons entrer des informations. Le nom de la table peut être suivi par une liste des colonnes dans lesquelles nous voulons insérer des données et <code>VALEURS()</code> contiennent les valeurs à insérer dans la table. Vous pouvez ne pas fournir la liste des colonnes si vous écrivez dans toutes les colonnes et que si vous fournissez les valeurs dans l'ordre dans lequel vous avez défini les colonnes. Dans ce cas, nous voulons insérer des données dans la table ''développeurs''. Insérons un enregistrement : 

{{Cmd|INSERT INTO développeurs VALUES('Joe Smith', 'joesmith@gentoo.org', 'toolchain');|prompt=mysql&gt; |output=<pre>
Query OK, 1 row affected (0.06 sec)
## (Si vous ne connaissez pas l'ordre des colonnes dans la table ou voulez insérer 
un enregistrement incomplet.)
mysql> INSERT INTO développeurs (travail, nom) VALUES('outsourced', 'Jane Doe');
Query OK, 1 row affected (0.01 sec)
</pre>
}}

Si on se réfère au résultat retourné, il apparaît que l'enregistrement a été correctement inséré. Mais comment faire pour insérer plus qu'un seul enregistrement ? C'est là que la commande <code>LOAD DATA</code> entre en scène. Elle charge les enregistrements depuis un fichier. Essayons en éditant un tel fichier dans notre répertoire home. Nous appellerons ce fichier {{Path|records.txt}}. En voici un échantillon : 

{{Code|~/records.txt|<pre>
John Doe	johndoe@gentoo.org	portage
Chris White	chriswhite@gentoo.org	documentation
Sam Smith	samsmith@gentoo.org	amd64
</pre>
}}

{{Important|Vous devez absolument connaître les données que vous manipulez. Il est très dangereux d'utiliser <code>LOAD DATA</code> sans une parfaite maîtrise des données du fichier !}}

La commande <code>LOAD DATA</code> a une définition beaucoup plus longue, mais nous utiliserons ici une forme simplifiée. 

{{Code|LOAD DATA Syntax|<pre>
LOAD DATA LOCAL INFILE '/chemin/vers/fichier' INTO TABLE table;
</pre>
}}

{{Path|/chemin/vers/fichier}} représente le chemin et le nom du fichier à charger. table est le nom de la  table concernée. Dans ce cas, le fichier est {{Path|~/records.txt}} et la table est  développeurs. 

{{Cmd|LOAD DATA LOCAL INFILE '~/records.txt' INTO TABLE développeurs;|prompt=mysql&gt; |output=<pre>
Query OK, 3 rows affected (0.00 sec)
Records: 3  Deleted: 0  Skipped: 0  Warnings: 0
</pre>
}}

{{Important| Si vous obtenez un comportement étrange, assurez-vous que vous champs sont séparés par des tabulations. Si vous copiez-collez vous données dans le fichier à partir d'une autre source, cela pourrait changer vous tabulations en espaces.}}

Ça a marché ! Cependant, ceci insère seulement des enregistrements et ne vous donne aucun contrôle sur MySQL. Beaucoup d'application du Web utilisent des scripts sql afin de configurer MySQL rapidement et facilement. Si vous voulez utiliser un script sql, vous devez lancer mysql en mode batch, ou « sourcer » le fichier. Voici un exemple où mysql est utilisé en mode batch : 

{{Cmd|mysql -u root -h localhost -p < sqlfile}}

Comme avec <code>LOAD DATA</code> , vous devez savoir précisément ce que  {{Path|sqlfile}} contient. ''Dans le cas contraire votre base peut être compromise !'' Une  autre façon de faire la même chose consiste à utiliser la commande <code>source</code>. Cette commande exécutera les commandes mysql trouvée dans un fichier sql tout en étant en mode mysql interactif. Voici comment « sourcer » un fichier sql : 

{{Cmd|source sqlfile;|prompt=mysql&gt; }}

Si vous rencontrez une application Web vous demandant d'exécuter un fichier sql, les deux commandes vues ci-dessus peuvent être utilisées pour le faire. Nous avons configuré notre table, mais comment vérifier nos champs ? Nous pouvons le faire en exécutant des requêtes de recherche sur la table. 

=== Parcourir une table  MySQL avec des requêtes ===

Les requêtes sont l'une des fonctionnalités principales de toute base SQL. Elles permettent de transformer les données dans les tables en quelque chose d'utile. La plupart des requêtes sont faites avec la commande <code>SELECT</code>. La commande  <code>SELECT</code> est très complexe, et nous allons nous limiter à trois formes principales de cette commande dans ce document. 

{{Code|SELECT forms|<pre>
## (Sélectionne toutes les entrées dans une table )
SELECT * FROM table;
## (Sélectionne des entrées spécifiques dans une table )
SELECT * FROM table WHERE champ=valeur;
## (Sélectionne des champs spécifiques)
SELECT champ1,champ2,champ3 FROM table [WHERE champ=valeur];
</pre>
}}

Jetons un coup d'œil rapide à la première forme. Elle est relativement simple et retourne une vue d'ensemble de la table. Nous allons avancer et la lancer pour voir de quelles données nous disposons jusqu'à maintenant. 

{{Cmd|SELECT * FROM développeurs;|prompt=mysql&gt; |output=<pre>
+-------------+-----------------------+----------------+
| nom         | courriel              | travail        |
+-------------+-----------------------+----------------+
| Joe Smith   | joesmith@gentoo.org   | toolchain      |
| John Doe    | johndoe@gentoo.org    | portage        |
| Chris White | chriswhite@gentoo.org | documentation  |
| Sam Smith   | samsmith@gentoo.org   | amd64          |
| Jane Doe    | NULL                  | Outsourced job |
+-------------+-----------------------+----------------+
5 rows in set (0.00 sec)
</pre>
}}

Nous pouvons voir à la fois les données que nous avons insérées via <code>INSERT</code>  et celles que nous avons insérées via <code>LOAD DATA</code>. Maintenant, supposons que nous ne voulions voir que l'enregistrement par Chris White. Nous pouvons le faire en utilisant la deuxième forme de <code>SELECT</code>. Comme ceci : 

{{Cmd|SELECT * FROM développeurs WHERE nom {{=}} 'Chris White';|prompt=mysql&gt; |output=<pre>
+-------------+-----------------------+---------------+
| nom         | courriel              | travail       |
+-------------+-----------------------+---------------+
| Chris White | chriswhite@gentoo.org | documentation |
+-------------+-----------------------+---------------+
1 row in set (0.08 sec)
</pre>
}}

Comme attendu, l'entrée spécifique que nous cherchons a été sélectionnée et est affichée. Maintenant, supposons que nous ne voulions voir que le travail et le courriel des personnes et pas leur nom. Nous pouvons pour cela utiliser la troisième forme de <code>SELECT</code> comme ceci : 

{{Cmd|SELECT courriel,travail FROM développeurs WHERE nom {{=}} 'Chris White';|prompt=mysql&gt; |output=<pre>
+-----------------------+---------------+
| courrie               | travail       |
+-----------------------+---------------+
| chriswhite@gentoo.org | documentation |
+-----------------------+---------------+
1 row in set (0.04 sec)
</pre>
}}

Cette méthode de sélection est beaucoup plus facile à gérer, en particulier avec une grande quantité d'informations, comme nous allons le voir. Tout de suite, étant utilisateur root de mysql, nous avons des droits illimités pour faire tout ce que nous voulons dans la base MySQL. Dans un environnement de serveur, un utilisateur avec de tels privilèges peut être source de gros problèmes. Afin de définir qui fait quoi dans la base, nous devons définir les privilèges. 

== Privilèges MySQL ==

=== Accorder des privilèges avec la commande GRANT ===

Les privilèges définissent le type d'accès que les utilisateurs ont sur les bases de données, les tables,etc., en fait sur presque tout. Tout de suite, le compte root de MySQL est le seul à pouvoir accéder  à notre base de données ''gentoo''. Créons maintenant deux utilisateurs génériques, ''invité'' et ''administrateur'', qui  recevront des droits d'accès à la base ''gentoo'' pour travailler avec ses données. Le compte ''invité'' sera un compte restreint. Tout ce qu'il pourra faire sera d'obtenir des informations de la base, rien d'autre. Le compte ''administrateur'' aura les mêmes privilèges que root, mais uniquement pour la base ''gentoo'' (pas pour les bases MySQL principales). Avant de nous lancer, regardons de plus près au format de la commande <code>GRANT</code>. 

{{Code|GRANT Syntax|<pre>
GRANT [privileges] ON database.* TO '[user]'@'[host]' IDENTIFIED BY '[password]';
</pre>
}}

{{Note|<code>GRANT</code> est considéré comme la façon de créer un utilisateur. Des versions récentes de MySQL, contiennent cependant une commande <code>CREATE_USER</code>, même si <code>GRANT</code> lui est encore préférée.}}

Tout d'abord, il y a les privilèges que nous voulons donner. Avec ce que nous avons appris jusqu'à maintenant, voici quelques privilèges que nous pouvons accorder : 

* <code>ALL</code> -Donne tous les privilèges sur la base de données
* <code>CREATE</code> - Autorise l'utilisateur à créer des tables
* <code>SELECT</code> - Autorise l'utilisateur à interroger les tables
* <code>INSERT</code> - Autorise l'utilisateur à insérer des données dans la table
* <code>SHOW DATABASES</code> - Autorise l'utilisateur à  voir la liste des tables
* <code>USAGE</code> - L'utilisateur n'a aucun privilège
* <code>GRANT OPTION</code> - Autorise l'utilisateur à octroyer des privilèges

{{Note|Si vous exécutez MySQL pour transmettre de données à une application Web,  <code>CREATE</code> , <code>SELECT</code> , <code>INSERT</code> (discuté ici ), <code>DELETE</code> et <code>UPDATE</code> (pou une plus ample information, consultez la  [http://dev.mysql.com/doc/mysql/fr/grant.html syntaxe de GRANT et REVOKE du Manuel de référence de MySQL] ) sont les seules autorisations dont vous aurez probablement besoin. Beaucoup de gens commettent l'erreur d'octroyer toutes les autorisations alors que ce n'est pas réellement nécessaire. Vérifiez auprès des développeurs des applications si de telles autorisations peuvent compromettre le fonctionnement général.}}

Pour notre utilisateur ''administrateur'', ALL fera l'affaire. Pour l'utilisateur ''invité'',<code>SELECT</code> conviendra pour un accès en lecture seule. ''database'' est la base de données sur laquelle nous voulons octroyer des privilèges à l'utilisateur.  Dans cet exemple, la base de donnée est ''gentoo''. Le ''.*'' signifie ''toutes les tables''. Si vous le désirez vous pouvez octroyer des droits par table. ''user''est le nom de l'utilisateur et ''host'' est le nom de l'hôte à partir duquel l'utilisateur accède à la base. Dans la plupart des cas, il s'agit de ''localhost''. Pour finir, ''password'' est le mot de passe de l'utilisateur. Tenant compte de tout cela, avançons et créons nos utilisateurs.  . 

{{Cmd|GRANT ALL ON gentoo.* TO 'administrateur'@'localhost' IDENTIFIED BY 'password';|prompt=mysql&gt; }}

{{Cmd|GRANT SELECT ON gentoo.* TO 'invité'@'localhost' IDENTIFIED BY 'password';|prompt=mysql&gt; }}

Maintenant que nos utilisateurs sont définis, testons les. Tout d'abord il nous faut quitter MySQL en tapant <code>quit</code>  à l'invite de commande : 

{{Cmd|quit|prompt=mysql&gt; }}

Nous sommes de retour sur la console. Maintenant que nos utilisateurs sont définis, avançons et regardons ce qu'ils peuvent faire. 

=== Vérifier les autorisations de l'utilisateur ===

Nous allons essayer de nous connecter en tant qu'utilisateur ''invité''. À cet instant, l'utilisateur ''invité'' a seulement les privilèges <code>SELECT</code>. Ce qui l'autorise seulement à interroger la base, rien d'autre. Allons-y, connectons-nous ! 

{{Cmd|mysql -u invité -h localhost -p|output=<pre>
Entrez le mot de passe :
Bienvenue dans le surveillant de MySQL. Les commandes se terminent par ; ou \g.
Votre identifiant de connexion MySQL est 6 pour le serveur version 4.0.25.
Tapez 'help;' ou '\h' pour de l'aide. Tapez '\c' pour vider le tampon.
 
mysql>
</pre>
}}

Maintenant nous devrions tester les restrictions de l'utilisateur. Commutons sur la base ''gentoo'' : 

{{Cmd|USE gentoo;|prompt=mysql&gt; |output=<pre>
Lecture des informations sur les tables pour constructions de noms de tables et de colonnes.
Vous pouvez désactiver cette fonctionnalité pour avoir un démarrage plus rapide avec -A

 
Base de données changée
</pre>
}}

Maintenant essayons de faire quelque chose que nous ne sommes pas supposé faire. Essayons de créer une table. 

{{Cmd|CREATE TABLE test (test VARCHAR(20), foobar VARCHAR(2));|prompt=mysql&gt; |output=<pre>
ERROR 1044: Accès refusé pour utilisateur: 'invité@localhost' sur la base de données 'gentoo'
</pre>
}}

Comme vous pouvez le constater, cette fonction échoue, car notre utilisateur n'a pas les droits appropriés. Cependant, un accès permis est la commande <code>SELECT</code>. Essayons-la : 

{{Cmd|SELECT * FROM développeurs;|prompt=mysql&gt; |output=<pre>
+-------------+-----------------------+----------------+
| nom         | courril               | travail        |
+-------------+-----------------------+----------------+
| Joe Smith   | joesmith@gentoo.org   | toolchain      |
| John Doe    | johndoe@gentoo.org    | portage        |
| Chris White | chriswhite@gentoo.org | documentation  |
| Sam Smith   | samsmith@gentoo.org   | amd64          |
| Jane Doe    | NULL                  | Outsourced job |
+-------------+-----------------------+----------------+
5 lignes dans le jeu (0.00 sec)
</pre>
}}

La commande réussit, et nous avons un aperçu de ce que les autorisations utilisateur peuvent faire. Nous avons cependant créé un compte administrateur également. Ceci cherche à montrer que même les utilisateurs recevant les autorisations 'All' sont limités. Avançons, quittons MySQL et reconnectons-nous en tant qu'utilisateur ''administrateur''. 

{{Cmd|quit|prompt=mysql&gt; |output=<pre>
Bye</pre>}}

{{Cmd|mysql -u administateur -h localhost -p|output=<pre>
Entrez le mot de passe :
Bienvenue dans le surveillant de MySQL. Les commandes se terminent par ; ou \g.
Votre identifiant de connexion MySQL est 6 pour le serveur version 4.0.25.
Tapez 'help;' ou '\h' pour de l'aide. Tapez '\c' pour vider le tampon.
mysql>
</pre>
}}

Pour commencer nous allons créer une nouvelle base de données en tant qu'utilisateur ''administrateur''. Cet utilisateur ''administrateur'' aura un accès similaire à celui du compte root de MySQL, et sera capable de faire toute sorte de modification de son choix sur la base de données ''gentoo''. Ceci permettra de tester l'accès de l'utilisateur à la base principale MySQL. Rappelez-vous que nous avons seulement défini les autorisations pour une base de données spécifique. 

{{Cmd|CREATE DATABASE gentoo2;|prompt=mysql&gt; |output=<pre>
ERROR 1044: Accès refusé pour l'utilisateur : 'administrateur@localhost' to database 'gentoo2'
</pre>
}}

En effet l'utilisateur ''administrateur'' ne peut pas créer de base de données sur la base MySQL principale., malgré les autorisations ''ALL'' sur la base ''gentoo''. Néanmoins, nous pouvons utiliser le compte ''administrateur'' pour modifier la base de données ''gentoo'', comme l'illustre l'exemple qui suit d'insertion de données. 

{{Cmd|USE gentoo;|prompt=mysql&gt; |output=<pre> 
Lecture des  informations de la table pour création des noms de table et de colonnes. 
Vous pouvez désactiver cette fonctionnalité pour obtenir un démarrage plus rapide avec  -A
 
Base de données changée
mysql> INSERT INTO developers VALUES('Bob Simmons', 'bobsimmons@gentoo.org', 'python');
Query OK, 1 row affected (0.08 sec)
</pre>
}}

L'utilisateur ''administrateur'' peut accéder à la base de données comme il l'entend. Maintenant, quelques fois, nous avons besoin de retirer des autorisations à un utilisateur. La raison peut être qu'il s'agit d'un utilisateur à problèmes ou d'un employé retraité. Regardons comment désactiver les autorisations d'un utilisateur avec la commande <code>REVOKE</code>. 

=== Retirer des droits à un utilisateur avec la commande  REVOKE ===

La commande <code>REVOKE</code> nous permet de retirer des droits d'accès à un utilisateur. Nous pouvons, soit lui retirer tout droit d'accès, soit lui retirer  un droit d'accès spécifique. En fait, le format est très semblable à celui de la commande <code>GRANT</code>. 

{{Code|REVOKE Syntax|<pre>
REVOKE [privileges] ON database.* FROM '[user]'@'[host]';
</pre>
}}

Les options sont les mêmes que pour la commande a<code>GRANT</code>. Ici cependant, nous allons retirer tous les droits d'accès à un utilisateur. Supposons que le compte ''invité'' crée des problèmes de sécurité. Nous décidons de lui retirer tous ses privilèges. Nous nous connectons en tant que root pour faire : 

{{Cmd|REVOKE ALL ON gentoo.* FROM 'invité'@'localhost';|prompt=mysql&gt; |output=<pre>
Query OK, 0 rows affected (0.00 sec)
</pre>
}}

{{Note| Dans ce cas, les droits d'accès de l'utilisateur sont simples, et retirer tout droit sur une base est facile. Néanmoins, dans des cas plus complexes, vous devrez probablement utiliser *.* au lieu de ''gentoo.*'' pour retirer les droits d'accès à toutes les bases de données. }}

Maintenant quittons et essayons de nous reconnecter en tant qu'utilisateur ''invité''. 

{{Cmd|mysql -u invité -h localhost -p|output=<pre>
Entrez le mot de passe:
Bienvenue dans le surveillant de MySQL. les commandes se terminent par ; ou \g.
Votre identifiant de connexion MySQL est  9 pour le serveur  version: 4.0.25
 
Tapez 'help;' ou '\h' pour de l'aide. Tapez '\c' pour efface le tampon.
 
mysql>
</pre>
}}

Bien que nous parvenions à nous connecter, notre accès à ''gentoo'' est désormais révoqué. 

{{Cmd|USE gentoo;|prompt=mysql&gt; |output=<pre>
ERROR 1044: Accès refusé à l'utilisateur : 'invité@localhost' à la base de données 'gentoo'
</pre>
}}

Ainsi, notre utilisateur à problèmes ne peut plus accéder à la base ''gentoo''. Notez que l'utilisateur peut encore se connecter. C'est parce qu'il est resté dans la base de données principale de MySQL. Regardons maintenant comment supprimer définitivement un compte dans la base principale. Pour cela nous utilisons la commande  <code>DELETE</code> et la table ''user''de MySQL. 

=== Supprimer un compte avec DELETE ===

La table ''user'' de MySQL est une liste de tous les utilisateurs avec des informations les concernant. Assurez-vous d'être connecté en tant que root. Ensuite utilisez la base principale de MySQL. 

{{Cmd|USE mysql;|prompt=mysql&gt; |output=<pre>
Lecture des informations sur les tables pour constructions de noms de tables et de colonnes.
Vous pouvez désactiver cette fonctionnalité pour avoir un démarrage plus rapide avec -A

Base de données changée
mysql>
</pre>
}}

Maintenant regardons quelles bases de données sont listées dans la base mysql : 

{{Cmd|SHOW TABLES;|prompt=mysql&gt; |output=<pre>
+-----------------+
| Tables_in_mysql |
+-----------------+
| columns_priv    |
| db              |
| func            |
| host            |
| tables_priv     |
| user            |
+-----------------+
6 rows in set (0.00 sec)
</pre>
}}

La table ''user'' est la table qui nous intéresse. Cependant, la table ''user'' contient 30 champs différents, la rendant difficile à lire. Afin de faciliter la lecture, nous allons utiliser la version 3 de la commande <code>SELECT</code>. Les champs qui nous intéressent sont ''Host'' et ''User''. 

{{Cmd|SELECT Host,User FROM user WHERE User {{=}} 'invité';|prompt=mysql&gt; |output=<pre>
+-----------+-------+
| Host      | User  |
+-----------+-------+
| localhost | guest |
+-----------+-------+
1 row in set (0.00 sec)
</pre>
}}

Maintenant que nous disposon de l'information, nous pouvons supprimer l'utilisateur ''invité''. Nous utilisons pour cela la commande  <code>DELETE</code> dont la syntaxe est donnée ci-dessous : 

{{Code|Syntaxe de la commande DELETE |<pre>
DELETE FROM table WHERE champ='valeur';
</pre>
}}

Vous noterez que le format de la commande  <code>DELETE</code> ressemble à celui de la commande <code>SELECT</code>. Dans ce cas, le champ sera User et sa valeur ''invité''. Cela effacera l'enregistrement dans la table ''user'' pour lequel le nom d'utilisateur est ''invité''. 

{{Cmd|DELETE FROM user WHERE User{{=}}'invité';|prompt=mysql&gt; |output=<pre>
Query OK, 1 row affected (0.07 sec)
</pre>}}

{{Cmd|FLUSH PRIVILEGES;|prompt=mysql&gt; |output=<pre>
Query OK, 0 rows affected (0.00 sec)
</pre>
}}

Tout semble avoir fonctionné. Testons en nous déconnectant et tentant de nous reconnecter en tant qu'utilisateur ''invité''. 

{{Cmd|quit|prompt=mysql&gt; |output=<pre>
Bye</pre>}}

{{Cmd|mysql -u invité -h localhost -p|output=<pre>
Entrez le mot de passe:
ERROR 1045: Accès refusé à l'utilisateur : 'invité@localhost' (Utilisant le mot de passe: YES)
</pre>
}}

Notre utilisateur a bien été effacé ! 

=== Conclusion ===

Bien que ce guide se focalise essentiellement sur la configuration de MySQL en ligne de commande, il existe quelques alternatives graphiques : 

* [http://www.phpmyadmin.net/home_page/ phpMyAdmin] - Outil en php pour l'administration de  MySQL .
* [http://sourceforge.net/projects/mysqlnavigator/ mysqlnavigator] - frontal QT pour MySQL.
* [http://gmyclient.sourceforge.net/ gmyclient] - Un client MySQL basé sur  GNOME .
* [http://www.knoda.org/ knoda] - Un client MySQL dans KDE.

Ceci achève le tutoriel d'introduction à MySQL. J'espère qu'il vous aura permis une meilleure compréhension des fondamentaux de MySQL et appris comment configurer une base de données.

==Remerciements ==

Nous tenons à remercier les auteurs et éditeurs suivants pour leur contribution à ce guide :

* Chris White
* Shyam Mani
* Xavier Neys
* José Fournier (traduction)
