Checkpoint Solutions' proprietary VPN Firewall solution is called SSL Network Extender.  This article documents the manual setup required to properly tunnel into this firewall from a Gentoo Linux host.

To access the VPN from a Linux host, a user logs into a web site using Firefox, then launches a Java applet, which runs a pre-installed local binary (snx) which initiates and configures the tunnel.  The setup is elaborate and runs a setuid-root binary, so only attempt this if you trust the administrator and firewall server.

<h3>Download the client install script</h3>

The client software is only available for download from the firewall appliance itself.  The VPN administrator must provide a URL (something like https://vpn.example.com/Login/Login) and credentials.

Log in and click the Settings link.

[[File:Settingslink.png]]

There is a link to download the software.  Click to save the file locally.

[[File:Download.png]]

<h3>Install the client software</h3>

There is currently not an ebuild for snx.  Run the install script as root.

{{RootCmd|sh snx_install.sh|output=<pre>Installation successfull</pre>}}

The script installs {{Path|/usr/bin/snx}} and also {{Path|/usr/bin/snx_uninstall}}.  The main binary is setuid-root, which means that when a non-privileged user runs it, it will run as the root user.  Generally this is ill-advised for a system's security, but it is done here so that a normal user can trigger setting up the tunnel.

{{RootCmd|ls -l /usr/bin/snx|output=<pre>r-s--x--x 1 root root 3286232 Aug 24 02:46 /usr/bin/snx</pre>}}

This binary is also 32-bit and will have linkage errors until the required libraries are installed.

{{RootCmd|ldd /usr/bin/snx|output=<pre>
        linux-gate.so.1 (0xf773f000)
        libX11.so.6 => not found
        libpthread.so.0 => /lib32/libpthread.so.0 (0xf770e000)
        libresolv.so.2 => /lib32/libresolv.so.2 (0xf76f6000)
        libdl.so.2 => /lib32/libdl.so.2 (0xf76f1000)
        libpam.so.0 => not found
        libnsl.so.1 => /lib32/libnsl.so.1 (0xf76d6000)
        libstdc++.so.5 => not found
        libc.so.6 => /lib32/libc.so.6 (0xf752b000)
        /lib/ld-linux.so.2 (0xf7740000)
</pre>}}

{{RootCmd|cat /etc/portage/package.use/snx|output=<pre>
# for libX11
x11-proto/xproto abi_x86_32
x11-proto/inputproto abi_x86_32
x11-proto/kbproto abi_x86_32
x11-proto/xf86bigfontproto abi_x86_32
x11-proto/xextproto abi_x86_32
dev-libs/libpthread-stubs abi_x86_32
x11-proto/xcb-proto abi_x86_32
x11-libs/libXdmcp abi_x86_32
x11-libs/libXau abi_x86_32
x11-libs/libxcb abi_x86_32
x11-libs/libX11 abi_x86_32

# for libpam
sys-libs/pam abi_x86_32
virtual/libintl abi_x86_32
sys-libs/zlib abi_x86_32
sys-libs/db abi_x86_32
sys-libs/cracklib abi_x86_32
sys-devel/flex abi_x86_32

# for libstdc++-v3
sys-libs/libstdc++-v3 multilib
</pre>}}

Now the missing libs can be installed.
{{RootCmd|emerge libX11 pam libstdc++-v3}}


External Resources
https://www.checkpoint.com/products-solutions/next-generation-firewalls/enterprise-firewall/
http://kenfallon.com/checkpoint-snx-install-instructions-for-major-linux-distributions/
