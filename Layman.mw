{{InfoBox stack
|{{InfoBox gdoc|Layman|header=true}}
|{{InfoBox github|gentoo/layman}}
}}

Layman is Gentoo's primary [[overlay]] management tool, offering centralized repository management for end users.

__TOC__

== Features ==

With {{Package|app-portage/layman}} users can manage their overlays in a simple, centralized manner. The Layman application provides an overview of available remote overlay repositories and allows the user to select one or more for the system. Once selected, the user can update the repositories (similar to {{c|emerge --sync}}), add local overlays, and more. '''Versions greater than 2.0.0''' are improved with the new '''plug-in sync system'''. Although this is a cool feature all this versions of layman are '''masked at the moment''' for all targets.

== Installation of version (<=2.0.0) ==
=== USE flags ===
First check the USE flags that the Layman package supports...

{{RootCmd|<nowiki>emerge -pv layman</nowiki>}}

...and add the necessary USE flags.
{{FileBox|filename=/etc/portage/package.use/layman|title=add the USE flags you need|1=app-portage/layman git subversion}}

Following table show all the USE flags of layman (including not supported flags in your special version).
{{USEflag|package=app-portage/layman}}

=== Emerge ===

Next install the Layman package:

{{Emerge|app-portage/layman}}

=== Configuration (make.conf method) ===

{{Note|Very old portage versions (<sys-apps/portage-2.2.16) support only this method. Versions of layman greater than 2.0.0 also support this method ([[Layman#make.conf_method_.28older_method.29|see next section]]).}}

Insert a reference to Layman in {{Path|/etc/portage/make.conf}}

{{RootCmd|<nowiki>echo "source /var/lib/layman/make.conf" >> /etc/portage/make.conf</nowiki>}}

Adding the <code>source</code> command to the {{Path|/etc/portage/make.conf}} (performed in the command above) will ensure that Portage, when asked, will check the content of the various overlays managed by Layman in the {{Path|/var/lib/layman/make.conf}} file. In effect, it will update the <var>PORTDIR_OVERLAY</var> variable with directories Layman uses. If a special directory has been previously defined for <var>PORTDIR_OVERLAY</var> in {{Path|/etc/portage/make.conf}}, make sure its value is not overwritten with the value Layman provides.

{{FileBox|filename=/etc/portage/make.conf|title=Ensuring that layman's PORTDIR_OVERLAY is not overwritten|lang=bash|1=
source /var/lib/layman/make.conf
#for some local ebuilds to test, have to be after line for layman above!
PORTDIR_OVERLAY="/usr/local/portage/ ${PORTDIR_OVERLAY}"
}}

== Installation of newer versions (>2.0.0, masked) ==

=== USE flags, Emerge ===
{{Note|This version needs to be unmasked before installation. Please refer [[Knowledge_Base:Accepting_a_keyword_for_a_single_package|keyword for a single package]]}}

Especially for the newer versions the USE flag ''sync-plugin-portage'' is important. Please refer to [[Project:Portage/Sync#Layman_configuration|portage projects page]].

=== Configuration ===

There are two methods how to integrate layman into portage. Newer versions support both methods at the same time, so there is no need to configure portage (except configurations mentioned in this section).

==== make.conf method (older method) ====

This is the older method (see previous section). But newer versions of layman already support this.

Configure layman to use {{Path|make.conf}} method in {{Path|/etc/layman/layman.cfg}} (depending on layman version this is already done):

{{FileBox|filename=/etc/layman/layman.cfg|1=
# Repository config types used by layman
# (repos.conf, make.conf)
conf_type : make.conf
}}

Now configure layman like [[Layman#Configuration_.28make.conf_method.29|in older versions <=V2.0.0]].

==== repos.conf method (default method) ====

This method uses the new portage plugins system. Layman will create its configuration file in {{Path|[[:/etc/portage/repos.conf]]/}} directory. There is no need for <var>PORTDIR_OVERLAY</var> changes in {{Path|/etc/portage/make.conf}}.

Configure layman to use {{Path|repos.conf}} method in {{Path|/etc/layman/layman.cfg}}. New installations of layman will probably have this already set correctly:

{{FileBox|filename=/etc/layman/layman.cfg|1=
# Repository config types used by layman
# (repos.conf, make.conf)
conf_type : repos.conf
}}

Create {{Path|[[:/etc/portage/repos.conf]]/}} directory, if it does not exist yet:

{{RootCmd|mkdir [[:/etc/portage/repos.conf]]}}

If you have >=layman-2.3.0 installed, you can force a rebuild of layman's {{Path|repos.conf}} files:

{{RootCmd|layman-updater -R}}

== Usage ==

=== Basic invocations ===

The Layman [[man page]] (see [[#External resources|External resources]]) provides a full overview of the available functions within Layman. However, for most users, the following commands suffice for overlay management activities.

To fetch and display a list of all the overlays available through official references:

{{RootCmd|layman -L}}

To add an overlay in the list generated by the local list:

{{RootCmd|layman -a <name>}}

To add an unofficial overlay:

{{RootCmd|layman -o <url of repository xml file> -f -a <name>}}

To remove an overlay from the local list:

{{RootCmd|layman -d <name>}}

To update a specific overlay:

{{RootCmd|layman -s <name>}}

To update all overlays:

{{RootCmd|layman -S}}

=== Mountable overlays with layman-mounter ===

Since the release of ''layman-2.2.0'', support for squashfs overlay types has been included. {{c|layman}} will interact with squashfs overlays by mounting them as read-only on the filesystem. On the initial install of the squashfs overlay, it will be mounted as read-only. However, after a reboot the overlay will no longer be mounted and the ebuilds in that overlay will not be accessible by the system.

In order to assist users in handling these mountable overlays, a utility was added that goes by the name of {{c|layman-mounter}}.

To find all overlays that are currently mounted, type:

{{RootCmd|layman-mounter -l}}

To find all overlays that are installed by ''layman'' that can be mounted, type:

{{RootCmd|layman-mounter -L}}

To mount the mountable overlays, type:

{{RootCmd|layman-mounter -m <name>}}

To unmount the overlays, type:

{{RootCmd|layman-mounter -u <name>}}

=== Setting overlay priorities with Layman ===

As each [[Overlay|overlay]] is assigned a unique priority, layman provides a simple way of defining priorities for overlays it manages. For more information about overlay priorities see [[Overlay#Overlay priorities|the overlay article]].

The file {{Path|/var/lib/layman/installed.xml}} contains some information about the overlays, among which is the priority attribute in the repo tag. The number there determines only the priority relative to the other overlay entries, 50 is the default value. [[Layman|layman]] then analyses this file and sets the order of the overlay entries in the <var>PORTDIR_OVERLAY</var> variable defined in {{Path|/var/lib/layman/make.conf}}.

As the file {{Path|/var/lib/layman/make.conf}} is automatically generated by layman based on the settings in {{Path|/var/lib/layman/installed.xml}}, it is strongly recommended that only {{Path|/var/lib/layman/installed.xml}} is used to set the priorities.

To add a personal overlay, and to ensure that the overlay has a higher priority, add the overlay ''before'' {{Path|/var/lib/layman/make.conf}} is sourced.

{{FileBox|filename=/var/lib/layman/make.conf|title=Example layman overlays setting|lang=bash|1=
PORTDIR_OVERLAY="
/home/jdoe/gamerlay
/var/lib/layman/lisp
/var/lib/layman/Spring
${PORTDIR_OVERLAY}" #the variable defined in /etc/portage/make.conf is now expanded
                    #when /var/lib/layman/make.conf is sourced in /etc/portage/make.conf
}}

However, this can be also "fooled" by defining the <var>PORTDIR_OVERLAY</var> in {{Path|/etc/portage/make.conf}} ''after'' {{Path|/var/lib/layman/make.conf}} has been sourced.

{{FileBox|filename=/etc/portage/make.conf|title=Custom overlay setting|lang=bash|1=
source /var/lib/layman/make.conf #this sources the PORTDIR_OVERLAY variable defined by layman.
                                 #however, the variable expanded by layman was empty
PORTDIR_OVERLAY="/home/user/overlay ${PORTDIR} ${PORTDIR_OVERLAY}" #now the layman defined overlays take precedence,
                                                                   #but the user defined overlay still has the lowest priority
}}

This "trick" is merely an opportunity offered by shell variable expansion.

=== Adding custom overlays ===

To add overlays which are not listed when {{c|layman -L}} is ran, find their repository XML files and add them using the <code>-o</code> option.

Example: {{Path|repositories.xml}} in [https://github.com/stefan-langenmaier/brother-overlay brother-overlay]

{{RootCmd|layman -o https://raw.github.com/stefan-langenmaier/brother-overlay/master/repositories.xml -f -a brother-overlay}}

In case the overlay does not provide a repository XML file, create it manually in the {{Path|/etc/layman/overlays}} folder. 

For example, if [[Larry_the_cow|Larry the cow]] were to create an overlay:

{{FileBox|filename=/etc/layman/overlays/larry.xml|title=Larry the cow's ngix overlay|lang=xml|1=
<?xml version="1.0" ?>

<repositories version="1.0">
	<repo priority="50" quality="experimental" status="unofficial">
		<name>larry</name>
		<description>nginx server for the barn computer from Larry the cow.</description>
		<homepage>https://github.com/gentoo/nginx-overlay</homepage>
		<owner>
			<email>larry@gentoo.org</email>
		</owner>
		<source<nowiki> </nowiki>type="git">https://github.com/gentoo/nginx-overlay.git</source>
	</repo>
</repositories>
}}

'''NEW:''' With the addition of ''layman-2.2.0'' a new utility was added to assist users in this process that goes by the name of {{c|layman-overlay-maker}}. As long as the overlay information has been properly added via the prompts, {{c|layman-overlay-maker}} will create a XML defined overlay and save into {{Path|/etc/layman/overlays}} or the specified in the layman configuration file for ''overlay_defs''.

{{c|layman-overlay-maker}} can become a useful tool in assisting users who would like to submit a patch to have their overlays added to the official {{Path|repositories.xml}} file.

To use the utility simply invoke it by name:

{{RootCmd|layman-overlay-maker}}

and go through its prompts until completion.

When finished run:
{{RootCmd|layman-updater -R}}

Followed by

{{RootCmd|layman -a <name>}}

where <name> is the name of the overlay you just created.

== See also ==

* [[Project:Overlays/User_Guide|Overlay user guide]]
* [[Overlay]]

== External resources ==

* The Layman man page locally ({{c|man layman}}) or online [http://layman.sourceforge.net/ at Sourceforge.net]

[[Category:Portage tools]]
