<languages /><translate>
{{InfoBox stack
|{{InfoBox project|Layman|header=true}}
|{{InfoBox github|gentoo/layman}}
}}

Layman is [[Article description::Gentoo's primary [[ebuild repository]] management tool.]] It offers a single command-line interface to repository management for end users.

== Features ==

With {{Package|app-portage/layman}} users can manage their ebuild repositories (overlays) in a simple, centralized manner. The Layman application provides an overview of available remote repositories and allows the user to select one or more for the system. Once selected, the user can update (similar to {{c|emerge --sync}}), add, remove, display and information about the overlays. '''Versions greater than 2.1.0''' are improved with a '''[https://gentoo.org/support/news-items/2015-02-04-portage-sync-changes.html plug-in sync system]'''.

{{Note|Although not all features of '''plug-in sync system''' of Portage are supported yet from layman the [[Project:Portage/Sync#Migration|migration of portage]] is a good step to be prepared for that.}}

== Installation ==

=== USE flags ===

{{USEflag|package=app-portage/layman}}

The <code>sync-plugin-portage</code> and <code>git</code> USE flags are especially important in newer versions of {{c|layman}}.

{{FileBox|filename=/etc/portage/package.use/layman|title=Add important USE flags|1=
app-portage/layman sync-plugin-portage git
}}

Please refer to [[Project:Portage/Sync#Layman_configuration|portage projects page]].

=== Emerge ===

Next install the Layman package:

To follow this guide, you may need to install a later version than that which is in the portage tree.  Check the version available to you  in portage:

{{Cmd|emerge --search layman}}

If >=layman-2.3.0 then emerge as normal:

{{Emerge|app-portage/layman}}

Otherwise, emerge the latest version found at {{Package|app-portage/layman}}:

{{Emerge|{{=}}app-portage/layman-2.4.2}}

=== Configuration ===

There are two methods of integrating layman into portage. Newer versions support both methods at the same time, so there is no need to configure portage (except configurations mentioned in this section).

==== repos.conf method (default) ====

{{Note|This method was added in version 2.1.0 of layman.}}

This method uses the new portage plugins system. Layman will create its configuration file in {{Path|[[:/etc/portage/repos.conf]]/}}. 

Configure layman to use the {{Path|repos.conf}} method in {{Path|/etc/layman/layman.cfg}}. New installations of layman will probably have this already set correctly:

{{FileBox|filename=/etc/layman/layman.cfg|1=
# Repository config types used by layman
# (repos.conf, make.conf)
conf_type : repos.conf
}}

Create the {{Path|[[:/etc/portage/repos.conf]]/}} directory if it does not exist yet:

{{RootCmd|mkdir [[:/etc/portage/repos.conf]]}}

If you have >=layman-2.3.0 installed, you can force a rebuild of layman's {{Path|repos.conf}} files:

{{RootCmd|layman-updater -R}}

==== make.conf method (force old method) ====

This is the older method, but newer versions of layman still support this.

Configure layman to use the {{Path|make.conf}} method in {{Path|/etc/layman/layman.cfg}}:

{{FileBox|filename=/etc/layman/layman.cfg|1=
# Repository config types used by layman
# (repos.conf, make.conf)
conf_type : make.conf
}}

Insert a reference to Layman in {{Path|/etc/portage/make.conf}}

{{RootCmd|echo "source /var/lib/layman/make.conf" >> /etc/portage/make.conf}}

Adding the {{c|source}} command to the {{Path|/etc/portage/make.conf}} (performed in the command above) will ensure that Portage, when asked, will check the content of the various repositories managed by Layman in the {{Path|/var/lib/layman/make.conf}} file. In effect, it will update the <var>PORTDIR_OVERLAY</var> variable with directories Layman uses. If a special directory has been previously defined for <var>PORTDIR_OVERLAY</var> in {{Path|/etc/portage/make.conf}}, make sure its value is not overwritten with the value Layman provides.

{{FileBox|filename=/etc/portage/make.conf|title=Ensuring that layman's PORTDIR_OVERLAY is not overwritten|lang=bash|1=
source /var/lib/layman/make.conf
#for some local ebuilds to test, have to be after line for layman above!
PORTDIR_OVERLAY="/usr/local/portage/ ${PORTDIR_OVERLAY}"
}}

== Usage ==

=== Basic invocations ===

The Layman [[man page]] (see [[#External resources|External resources]]) provides a full overview of the available functions within Layman. However, for most users, the following commands suffice for repository management activities.

To fetch and display a list of all the repositories available through official references:

{{RootCmd|layman -L}}

To add a repository in the list generated by the local list:

{{RootCmd|layman -a <name>}}

To add an unofficial repository:

{{RootCmd|layman -o <url of repository xml file> -f -a <name>}}

To remove a repository from the local list:

{{RootCmd|layman -d <name>}}

To update a specific repository:

{{RootCmd|layman -s <name>}}

To update all repositories:

{{RootCmd|layman -S}}

=== Mountable repositories with layman-mounter ===

Since the release of ''layman-2.2.0'', support for [[SquashFS|squashfs]] repository types has been included. {{c|layman}} will interact with squashfs repository by mounting them as read-only on the filesystem. On the initial install of the squashfs repository, it will be mounted as read-only. However, after a reboot the repository will no longer be mounted and the ebuilds in that repository will not be accessible by the system.

In order to assist users in handling these mountable repositories, a utility was added that goes by the name of {{c|layman-mounter}}.

To find all repositories that are currently mounted, type:

{{RootCmd|layman-mounter -l}}

To find all repositories that are installed by {{c|layman}} that can be mounted, type:

{{RootCmd|layman-mounter -L}}

To mount the mountable repositories, type:

{{RootCmd|layman-mounter -m <name>}}

To unmount the repositories, type:

{{RootCmd|layman-mounter -u <name>}}

=== Setting repository priorities with Layman ===

{{Deprecated|section}} 

As each [[ebuild repository]] is assigned a unique priority, layman provides a simple way of defining priorities for repositories it manages. For more information about repository priorities see the [[Ebuild repository#Priorities|ebuild repository priorities]].

The file {{Path|/var/lib/layman/installed.xml}} contains some information about the repositories, among which is the priority attribute in the repo tag. The number there determines only the priority relative to the other repository entries, 50 is the default value. Larger numbers take priority over smaller numbers. [[Layman|layman]] then analyses this file and sets the order of the repository entries in the <var>PORTDIR_OVERLAY</var> variable defined in {{Path|/var/lib/layman/make.conf}}.

As the file {{Path|/var/lib/layman/make.conf}} is automatically generated by layman based on the settings in {{Path|/var/lib/layman/installed.xml}}, it is strongly recommended that only {{Path|/var/lib/layman/installed.xml}} is used to set the priorities.

To add a personal repository, and to ensure that the repository has a higher priority, add the repository ''before'' {{Path|/var/lib/layman/make.conf}} is sourced.

{{FileBox|filename=/var/lib/layman/make.conf|title=Example layman overlays setting|lang=bash|1=
PORTDIR_OVERLAY="
/home/jdoe/gamerlay
/var/lib/layman/lisp
/var/lib/layman/Spring
${PORTDIR_OVERLAY}" #the variable defined in /etc/portage/make.conf is now expanded
                    #when /var/lib/layman/make.conf is sourced in /etc/portage/make.conf
}}

However, this can be also "fooled" by defining the <var>PORTDIR_OVERLAY</var> in {{Path|/etc/portage/make.conf}} ''after'' {{Path|/var/lib/layman/make.conf}} has been sourced.

{{FileBox|filename=/etc/portage/make.conf|title=Custom repository setting|lang=bash|1=
source /var/lib/layman/make.conf #this sources the PORTDIR_OVERLAY variable defined by layman.
                                 #however, the variable expanded by layman was empty
PORTDIR_OVERLAY="/home/user/overlay ${PORTDIR} ${PORTDIR_OVERLAY}" #now the layman defined repositories take precedence,
                                                                   #but the user defined repository still has the lowest priority
}}

This "trick" is merely an opportunity offered by shell variable expansion.

=== Adding custom repositories ===

To add repositories which are not listed when {{c|layman -L}} is ran, find their repository XML files and add them using the <code>-o</code> option.

Example: {{Path|repositories.xml}} in [https://github.com/stefan-langenmaier/brother-overlay brother-overlay]

{{RootCmd|layman -o https://raw.github.com/stefan-langenmaier/brother-overlay/master/repositories.xml -f -a brother-overlay}}

In case the repository does not provide a repository XML file, create it manually in the {{Path|/etc/layman/overlays}} folder. 

For example, if [[Larry_the_cow|Larry the cow]] were to create an repository:

{{FileBox|filename=/etc/layman/overlays/larry.xml|title=Larry the cow's nginx overlay|lang=xml|1=
<?xml version="1.0" ?>

<repositories version="1.0">
	<repo priority="50" quality="experimental" status="unofficial">
		<name>larry</name>
		<description>nginx server for the barn computer from Larry the cow.</description>
		<homepage>https://github.com/gentoo/nginx-overlay</homepage>
		<owner>
			<email>larry@gentoo.org</email>
		</owner>
		<source<nowiki> </nowiki>type="git">https://github.com/gentoo/nginx-overlay.git</source>
	</repo>
</repositories>
}}

'''NEW:''' With the addition of >=layman-2.2.0 a new utility was added to assist users in this process that goes by the name of {{c|layman-overlay-maker}}. As long as the overlay information has been properly added via the prompts, {{c|layman-overlay-maker}} will create a XML defined overlay and save into {{Path|/etc/layman/overlays}} or the specified in the layman configuration file for ''overlay_defs''.

{{c|layman-overlay-maker}} can become a useful tool in assisting users who would like to submit a patch to have their overlays added to the official {{Path|repositories.xml}} file.

To use the utility simply invoke it by name:

{{RootCmd|layman-overlay-maker}}

and go through its prompts until completion.

When finished run:

{{RootCmd|layman-updater -R}}

Followed by:

{{RootCmd|layman -a <name>}}

where <name> is the name of the repository that was created.

== See also ==

* {{See also|Eselect/Repository}}
* [[Project:Overlays/Overlays_guide|Overlay user guide]]
* {{See also|Ebuild repository}}

== External resources ==

* The Layman man page locally ({{c|man layman}}) or online [http://layman.sourceforge.net/ at Sourceforge.net]
</translate>

[[Category:Portage tools]]
