<languages />

<div class="mw-translate-fuzzy">
{{Metadata|abstract=Le serveur HTTP Apache HTTP est un serveur  weeb efficient et extensible  parmi les plus populaires utilisés sur  Internet.}}
</div>

<div class="mw-translate-fuzzy">
{{InfoBox stack
|{{InfoBox homepage|http://httpd.apache.org|header=true}}
|{{InfoBox wikipedia|Apache HTTP Server}}
|
}}
</div>

<div class="mw-translate-fuzzy">
Le '''serveur HTTP Apache''' est un [[:Category:Web Servers|serveur web]] efficient et extensible. C'est l'un des plus populaires utilisés sur l'Internet.
</div>

== Installation ==

<div class="mw-translate-fuzzy">
{{Note|Si vous êtes en train de faire une mise à jour,  consultez le  [http://www.gentoo.org/proj/fr/apache/doc/upgrading.xml guide de mise à jour].}}
</div>

=== Options de la variable USE  ===

<div class="mw-translate-fuzzy">
{{USEflag|package=www-servers/apache
|debug
|doc
|ldap
|ssl+yes
|static
|suexec
|threads
|APACHE2_MODULES+++Voir {{Path|[http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/profiles/desc/apache2_modules.desc /usr/portage/profiles/desc/apache2_modules.desc]}}. Activez dans votre {{Path|make.conf}}.
|APACHE2_MPMS+++Voir {{Path|[http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/profiles/desc/apache2_mpms.desc /usr/portage/profiles/desc/apache2_mpms.desc]}}. Activez dans votre  {{Path|make.conf}}.
}}
</div>

=== Emerge ===

If you want to use the Apache event MPM, then add the following to make.conf:
{{FileBox|filename=/etc/portage/make.conf|title=Apache event MPM|lang=bash|1=
APACHE2_MPMS="event"
}}

If you want to use the Apache worker MPM, then add the following to make.conf:
{{FileBox|filename=/etc/portage/make.conf|title=Apache worker MPM|lang=bash|1=
APACHE2_MPMS="worker"
}}

And, enable the Apache threads USE flag:
{{FileBox|filename=/etc/portage/package.use|title=Apache threads support|lang=bash|1=
www-servers/apache threads
}}

Then ''emerge'' Apache:
{{Emerge|{{Package|www-servers/apache}}}}

<div class="mw-translate-fuzzy">
=== Prise en charge dans d'autres paquets ===
</div>

Enabling the <code>apache2</code> global USE flag provides support for Apache in other packages. This may cause {{Package|www-servers/apache}} to be installed automatically if a package depending on Apache has been emerged.
 		 
{{FileBox|filename=/etc/portage/make.conf|title=Adding Apache to system USE flags|lang=bash|1=
USE="apache2"
}}

<div class="mw-translate-fuzzy">
Après avoir défini cette option, vous devez mettre votre système à jour pour que les changements soient pris en compte.
</div>

{{Emerge|params+=--changed-use --deep|@world}}

== Configuration ==

<div class="mw-translate-fuzzy">
=== Fichiers de configuration ===
</div>

<div class="mw-translate-fuzzy">
Il y a deux fichiers principaux qui définissent le comportement d'Apache sur le système :
</div> 

<div class="mw-translate-fuzzy">
* Le fichier de configuration apache2 de du script d'initialisation  de Gentoo {{path|/etc/conf.d/apache2 }}
</div>

<div class="mw-translate-fuzzy">
* Le fichier de configuration conventionnel du serveur Apache {{path|/etc/apache2/httpd.conf}}
</div>

<div class="mw-translate-fuzzy">
==== Fichier de configuration du script d'initialisation de Gentoo ====
</div>

The {{Path|apache2}} file located in {{Path|/etc/conf.d}} is Gentoo's init script configuration file. The only active line in this file is the <var>APACHE2_OPTS</var> variable line:

{{FileBox|filename=/etc/conf.d/apache2|lang=bash|1=
APACHE2_OPTS="-D DEFAULT_VHOST -D INFO -D SSL -D SSL_DEFAULT_VHOST -D LANGUAGE"
}}

<div class="mw-translate-fuzzy">
Cette ligne définit les options qui seront interprétées par les divers fichiers de configuration utilisant l'instruction  <code><IfDefine option-name></code>  pour activer ou désactiver  certaines parties de la configuration globale. Nous reviendrons sur ceci, dans les cas concernés, dans le reste de ce guide.
</div>

<div class="mw-translate-fuzzy">
==== Le fichier de configuration conventionnel du serveur Apache -  httpd.conf ====
</div>

The {{Path|httpd.conf}} file is Apache server's conventional configuration file. In fact this file is only an '''entry point''' for configuration. The whole configuration is split in many files in the {{Path|/etc/apache2/}} directory, that are assembled together using the <code>Include</code> directive. For example, the statement <code>Include /etc/apache2/modules.d/*.conf</code>, in {{Path|httpd.conf}}, aims at including all the files in {{Path|/etc/apache2/modules.d/}} which name ends with {{Path|.conf}}. 

<div class="mw-translate-fuzzy">
Considérant ce qui a été dit précédemment, et comme les fichiers de configuration des modules  (les fichiers dans /etc/apache2/modules.d) commencent presque toujours par <code><IfDefine module-name></code>, le contenu d'un fichier dans {{Path|/ect/apache2/modules.d}}, ne sera SEULEMENT ajouté au reste de la configuration, que si l'option correspondante de la variable APACHE2_OPTS  (<code>-D module-name</code>) est définie dans le fichier {{Path|/etc/conf.d/apache2 }}. Le fichier de configuration {{Path|00_default_settings.conf}} fait exception à cette règle car il ne commence pas par une instruction <code>IfDefine</code>, et est donc toujours inclus dans la configuration globale résultante.
</div>

<div class="mw-translate-fuzzy">
=== Configuration par défaut ===
</div>

<div class="mw-translate-fuzzy">
Après une nouvelle installation du serveur Apache, la configuration résultant de l'assemblage des différents fichiers de configuration ressemble à ce qui suit. Nous démarrons avec le point d'entrée {{Path|/etc/apache2/httpd.conf}}.
</div>

<div class="mw-translate-fuzzy">
{{Warning/fr| Ceci est ''seulement'' fourni pour une référence rapide et pour vous donner une vue d'ensemble. Vous êtes fortement encouragés à lire les commentaires inclus dans les différents fichiers pour comprendre les tenants et aboutissants de la configuration. Reportez-vous également au manuel d'Apache pour une compréhension approfondie. }}
</div>

{{FileBox|filename=/etc/apache2/httpd.conf|lang=apache|1=
ServerRoot "/usr/lib64/apache2"
  
#Module loaded unconditionally, assuming the USE flag is no unset in
# /etc/portage/make.conf or in /etc/portage/package.use
LoadModule actions_modulemodules/mod_actions.so
...
#other modules loaded that way : alias_module, auth_basic_module, authn_alias_module,
# authn_anon_module, authn_dbm_module, authn_default_module, authn_file_module, 
# authz_dbm_module, authz_default_module, authz_groupfile_module, authz_host_module, 
# authz_owner_module, authz_user_module, autoindex_module,  cgi_module,  cgid_module, 
# deflate_module, dir_module, env_module, expires_module, ext_filter_module, filter_module,
#  headers_module, include_module,  log_config_module, logio_module, mime_module,  
# mime_magic_module, negotiation_module, rewrite_module, setenvif_module, 
# speling_module,ssl_module, status_module, unique_id_module, usertrack_module, host_alias_module
  
  
#Modules loaded conditionally, assuming matching USE flag is not unset in
# /etc/portage/make.conf or in /etc/portage/package.use (flag to be set in )
<IfDefine AUTHNZ_LDAP>
LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
</IfDefine>
#other modules loaded that way : cache_module, dav_module, dav_fs_module,
# dav_lock_module,disk_cache_module,  file_cache_module, info_module, ldap_module,
# mem_cache_module, userdir_module
  
  
User apache
Group apache
  
# Supplemental configuration
#**************************************************************************************vvv
#this part is included via Include /etc/apache2/modules.d/*.conf 
  
#included from /etc/apache2/modules.d/00_default_settings.conf-------------v
#this is always included as there is not option to deactivate it.
Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 15
UseCanonicalName Off
AccessFileName .htaccess
ServerTokens Prod
TraceEnable off
ServerSignature On 
HostnameLookups Off
EnableMMAP On
EnableSendfile On
FileEtag INode MTime Size
ContentDigest Off
ErrorLog /var/log/apache2/error_log
LogLevel warn
  
<Directory />
	Options FollowSymLinks
	AllowOverride None
	Require all denied
</Directory>
  
<IfModule dir_module>
	DirectoryIndex index.html index.html.var
</IfModule>
<FilesMatch "^\.ht">
	Require all denied
</FilesMatch>
#--------------------------------------------------------------------------^
  
#included from 00_mod_info.conf--------------------------------------------v
<IfDefine INFO>
<Location /server-info>
	SetHandler server-info
	Require host 127.0.0.1
</Location>
</IfDefine>
#--------------------------------------------------------------------------^
  
#--------------------------------------------------------------------------v
#included from 00_languages.conf
# Settings for hosting different languages.
<IfDefine LANGUAGE>
  
	AddLanguage ca .ca
	...
	AddLanguage zh-TW .zh-tw
  
	LanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn no pl pt pt-BR ru sv zh-CN zh-TW
  
	ForceLanguagePriority Prefer Fallback
  
	AddCharset us-ascii.ascii	.us-ascii
	AddCharset <nowiki>ISO-8859-1		.iso8859-1 .latin1</nowiki>
	...
	AddCharset shift_jis		.shift_jis .sjis
</IfDefine>
#---------------------------------------------------------------------------^
#**************************************************************************************^^^
  
  
#***************************************************************************************vvv
#this part is included via Include /etc/apache2/vhosts.d/*.conf 
#from 00_default_ssl_vhost.conf-----------------------------------------------------vv
<IfDefine SSL>
	<IfDefine SSL_DEFAULT_VHOST>
		<IfModule ssl_module>
			Listen 443
  
			<VirtualHost _default_:443>
				ServerName localhost
                                #------------------------------------------v
				# this part is included via Include /etc/apache2/vhosts.d/default_vhost.include
				ServerAdmin root@localhost
				DocumentRoot "/var/www/localhost/htdocs"
  
  	
				<Directory "/var/www/localhost/htdocs">
	   				Options Indexes FollowSymLinks
	   				AllowOverride All
	   				Require all granted
				</Directory>
  
				<IfModule alias_module>
	   				ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
				</IfModule>
  
				<Directory "/var/www/localhost/cgi-bin">
	   				AllowOverride None
	   				Options None
	   				Require all granted
				</Directory>
        			#end of Include ---------------------------^
  	
				ErrorLog /var/log/apache2/ssl_error_log
  
				<IfModule log_config_module>
					TransferLog /var/log/apache2/ssl_access_log
				</IfModule>
				SSLEngine on
				SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
				SSLCertificateFile /etc/ssl/apache2/server.crt
				SSLCertificateKeyFile /etc/ssl/apache2/server.key
  
				<FilesMatch "\.(cgi{{!}}shtml{{!}}phtml{{!}}php)$">
					SSLOptions +StdEnvVars
				</FilesMatch>
  
				<Directory "/var/www/localhost/cgi-bin">
					SSLOptions +StdEnvVars
				</Directory>
  
				<IfModule setenvif_module>
					BrowserMatch ".*MSIE.*" \
					nokeepalive ssl-unclean-shutdown \
					downgrade-1.0 force-response-1.0
				</IfModule>
  
  
				<IfModule log_config_module>
					CustomLog /var/log/apache2/ssl_request_log \
					"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
					</IfModule>
			</VirtualHost>
		</IfModule>
	</IfDefine>
</IfDefine>
#---------------------------------------------------------------------------------^^
#from 00_default_vhost.conf-------------------------------------------------------vv
<IfDefine DEFAULT_VHOST>
	Listen 80
	NameVirtualHost *:80
  
	<VirtualHost *:80>
		ServerName localhost
  
		#---------------------------------------------------------------v
		# this part is included via Include /etc/apache2/vhosts.d/default_vhost.include
		ServerAdmin root@localhost
		DocumentRoot "/var/www/localhost/htdocs"
  
  	
		<Directory "/var/www/localhost/htdocs">
	   		Options Indexes FollowSymLinks
	   		AllowOverride All
	   		Require all granted
		</Directory>
  
		<IfModule alias_module>
	   		ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
		</IfModule>
  
		<Directory "/var/www/localhost/cgi-bin">
	   		AllowOverride None
	   		Options None
	   		Require all granted
		</Directory>
        	#end of Include -----------------------------------------------^
  
		<IfModule mpm_peruser_module>
			ServerEnvironment apache apache
		</IfModule>
	</VirtualHost>
</IfDefine>
#-----------------------------------------------------------------------------------^^
# end of include ****************************************************************************************^^^
}}

=== Premiers signes de vie ===

<div class="mw-translate-fuzzy">
Comme vous pouvez le constater dans la configuration initiale ci-dessus, le répertoire <code>DocumentRoot</code>  de l'hôte virtuel pré-installé est {{Path|/var/www/localhost/htdocs}}, son nom de serveur est ''localhost''. De plus, un fichier index.html est fourni dans le répertoire <code>DocumentRoot</code>, en conséquence, pour vérifier si tout est correctement installé ou pas, pointez votre navigateur sur [http://www.localhost http://www.localhost].
</div>

<div class="mw-translate-fuzzy">
Vous devriez obtenir l'affichage d'une page contenant le message ''It works !''.
</div>

<div class="mw-translate-fuzzy">
{{Warning/fr|À l'installation, Firefox dispose d'une fonctionnalité conçue pour aider les gens qui font une faute de frappe en saisissant une URL dans la barre d'adresse. Si une URL n'est pas résolue, Firefox essaye quelques variantes de l'URL pour tenter de déterminer ce que vous aviez vraiment l'intention de saisir, ajoutant à la portion ''nom l'hôte'', un '''.com''' et/ou la préfixant avec '''www.''' pour voir si ces URLs sont résolues. 
Cette fonctionnalité, introduite depuis les premières versions de Firefox, est quelque peu ennuyeuse pour les développeurs. Cela signifie que si un serveur tournant sur un hôte local ne répond pas, Firefox décide d'essayer localhost.com et/ou www.localhost.com et vous pourriez aboutir à une page non trouvée.

Pour désactiver cette fonctionnalité, procédez comme suit :
# Entrez <tt>about:config</tt> dans la barre d'adresse
# Entrez <tt>browser.fixup.alternate.enabled</tt> dans la boîte de recherche qui apparaît ou recherchez cette ligne directement.
# Faites un clic du bouton droit sur la ligne <tt>browser.fixup.alternate.enabled</tt> qui apparaît dans la liste filtrée au dessous et choisissez "Inverser" pour mettre la valeur à ''false''.
}}
</div>

<div class="mw-translate-fuzzy">
=== Activer le module  Security ===
</div>

Install {{Package|www-apache/mod_security}}:

{{Emerge|www-apache/mod_security}}

Enable the <code>SECURITY</code> module in the {{Path|apache2}} file's <var>APACHE2_OPTS</var> variable:

<div class="mw-translate-fuzzy">
{{File|/etc/conf.d/apache2||<pre>
APACHE2_OPTS="... -D SECURITY"
</pre>}}
</div>

<div class="mw-translate-fuzzy">
Configurez ce module en éditant {{Path|/etc/apache2/modules.d/79_modsecurity.conf}} et {{Path|/etc/apache2/modules.d/80_modsecurity-crs.conf}} and restarting apache.
</div>

=== Activer la prise en charge de PHP  ===

<div class="mw-translate-fuzzy">
Installez[[PHP]] avec l'option  ''apache2'' de la variable USE et activez le module:
</div>

{{Important|1=With >=[https://packages.gentoo.org/packages/app-eselect/eselect-php app-eselect/eselect-php-0.8.1], the <var>APACHE2_OPTS</var> variable changed to <code>-D PHP</code> instead of <code>-D PHP5</code>. This allows for future major versions to flow smoothly.  As of eselect-php-0.9.4-r5, the compatibility shim was dropped after allowing 2 years to convert.}}

<div class="mw-translate-fuzzy">
{{File|/etc/conf.d/apache2||<pre>
APACHE2_OPTS="... -D PHP5"
</pre>}}
</div>

<div class="mw-translate-fuzzy">
Avant de vérifier que le module PHP fonctionne, vérifiez que le fichier {{Path|/etc/apache2/modules.d/70_mod_php5.conf}} existe et contient ce qui suit :
</div>

<div class="mw-translate-fuzzy">
{{File|/etc/apache2/modules.d/70_mod_php5.conf||<pre>
<IfDefine PHP5> 
        # Load the module first 
        <IfModule !mod_php5.c> 
                LoadModule php5_module    modules/libphp5.so 
        </IfModule> 
  
        # Set it to handle the files 
        <IfModule mod_mime.c> 
                AddHandler application/x-httpd-php .php .php5 .phtml 
                AddHandler application/x-httpd-php-source .phps 
        </IfModule> 
  
        DirectoryIndex index.php index.phtml 
</IfDefine>
</pre>}}
</div>

<div class="mw-translate-fuzzy">
Si ce fichier n'existe pas, créez le.
</div>

<div class="mw-translate-fuzzy">
Pour vérifier si le module PHP fonctionne, créez une page de test.
</div>

<div class="mw-translate-fuzzy">
{{File|/var/www/localhost/htdocs/index.php||<pre>
<html>
 <body>
  <?php phpinfo(); ?>
 </body>
</html>
</pre>}}
</div>

<div class="mw-translate-fuzzy">
Supprimez ou renommez le fichier {{Path|/var/www/localhost/htdocs/index.html}}. Maintenant pointez le navigateur sur http://localhost/. Vous devriez voir un tableau décrivant les réglages de PHP.
</div>

A table describing the PHP settings should be visible.

==== Modify PHP versions ==== 

To change the version of PHP handled by Apache, first list the available versions for the <code>apache2</code> Server Application Programming Interface (SAPI):

{{RootCmd|eselect php list apache2|output=<pre>
 [1]   php5.3
 [2]   php5.4 *
 [3]   php5.5
</pre>}}

Change it to the version of choice:

{{RootCmd|eselect php set apache2 N}}

Substitute <code>N</code> in the example above to the requested number in the output of {{c|eselect php list apache2}} as displayed earlier on.

<div class="mw-translate-fuzzy">
=== Ajouter vos propres hôtes virtuels ===
</div>

<div class="mw-translate-fuzzy">
Pour chacun des hôtes virtuels, fournissez un répertoire <code>DocumentRoot</code> qui soit accessible au démon apache. Ajoutez un fichier de configuration ({{Path|myVirtualHost.conf}}) dans le répertoire {{Path|/etc/apache2/vhosts.d}} qui utilise ce répertoire comme   <code>DocumentRoot</code> et qui définisse le nom de serveur virtuel de l'hôte. N'oubliez-pas d'ajouter une entrée pour ce nom de domaine dans  {{Path|/etc/hosts}}.
</div>

<div class="mw-translate-fuzzy">
Pour donner à l'utilisateur  apache user et à son groupe  la possession des fichiers de l'hôte virtuel, utilisez la commande  <code>chown</code> comme dans l'exemple qui suit :
</div>

{{RootCmd|chown apache:apache /var/www/sitename}}

Ci-dessous, figurent deux exemples de définition d'hôtes virtuels, un pour le nom de domaine ''domainename1.com'' et l'autre pour le nom de ''domaine domainename2.com''. Remarquez l'utilisation de deux directives  <code>DocumentRoot</code> et de deux directives <code>ServerName</code> différentes même si l'hôte lui-même  (<code>*:80</code>) demeure le même.

<div class="mw-translate-fuzzy">
{{Code|Exemple de définition d'hôtes virtuels|<pre>
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website1
    ServerName domainname1.com
</VirtualHost>
  
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website2
    ServerName domainname2.com
</VirtualHost>
</pre>}}
</div>

Il est recommandé de fournir une définition d'hôte virtuel basée sur l'adresse IP également. Ceci permet à l'administrateur de mettre en place un message aux utilisateurs qui essayent d'accéder au site via son adresse IP.

<div class="mw-translate-fuzzy">
{{Code|Hôte virtuel basé sur l'adresse IP|<pre>
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/html
    ServerName xxx.xxx.xxx.xxx
</VirtualHost>
</pre>}}
</div>

Après avoir déclarés les hôtes virtuels , le serveur doit être redémarré (en douceur) pour que les nouveaux sites soient activés.

=== Activer PHP via fcgid ===

<div class="mw-translate-fuzzy">
Installez les paquets {{Package|www-apache/mod_fcgid}} et  {{Package|dev-lang/php}}. Le paquet nécessite l'option  ''cgi'' de la variable USE :
</div>

<div class="mw-translate-fuzzy">
{{emerge|mod_fcgid php}}
</div>

Éditez le fichier  {{Path|mod_fcgid.conf}} :

<div class="mw-translate-fuzzy">
{{File|/etc/apache2/modules.d/20_mod_fcgid.conf||<pre>
<IfDefine FCGID>
LoadModule fcgid_module modules/mod_fcgid.so
SocketPath /var/run/fcgidsock
SharememPath /var/run/fcgid_shm
  
AddHandler php-fcgid .php
AddType application/x-httpd-php .php
Action php-fcgid /fcgid-bin/php-fcgid-wrapper
# max request 128mb
FcgidMaxRequestLen 134217728
<Location /fcgid-bin/>
        SetHandler fcgid-script
        Options +ExecCGI
</Location>
</IfDefine>
</pre>}}
</div>

Créez le répertoire nécessaire : 

{{RootCmd|mkdir /var/www/localhost/htdocs/fcgid-bin}}

Créez un lien symbolique qui pointe dessus pour le « wrapper_» PHP.

{{RootCmd|ln -s /usr/bin/php-cgi /var/www/localhost/htdocs/fcgid-bin/php-fcgid-wrapper}}

<div class="mw-translate-fuzzy">
Activez le module fcgid :
</div>

<div class="mw-translate-fuzzy">
{{File|/etc/conf.d/apache2||<pre>
APACHE2_OPTS="... -D FCGID"
</pre>}}
</div>

Pour terminer, redémarrez apache et vérifiez le fichier créé par l'instruction <code>phpinfo()</code> du site telle que présentée plus haut. La valeur indiquée pour <code>Server API</code> devrait être ''CGI/FastCGI''

=== Enabling PHP-FPM through mod_proxy_fcgi in Apache 2.4 ===

The following pre-requisites must be satisfied to enable PHP-FPM through mod_proxy_fcgi:
* >= PHP 5.3
* >= Apache 2.4

Furthermore, there are a few restrictions on the availability of functionality within Apache 2.4:
* >= Apache 2.4.9, if you want to [https://wiki.apache.org/httpd/PHP-FPM#Performance_and_Pitfalls communicate with PHP-FPM over UNIX sockets]
* >= Apache 2.4.10, if you want to use [https://github.com/php/php-src/pull/694 SetHandler] instead of [https://wiki.apache.org/httpd/PHP-FPM#Example ProxyPassMatch].

The following configuration will only work with Apache 2.4.10 and newer. It relies on the <code>FilesMatch</code> directive and be placed within the main server config or <code>VirtualHosts</code>.  The location of the UNIX socket is determined by the <code>listen</code> directive in the {{Path|php-fpm.conf}} configuration file, allowing for specifying separate pools per site or function.

In the following example, <code>FilesMatch</code> is placed within the PHP module config file of Apache:

{{FileBox|filename=/etc/apache2/modules.d/70_mod_php.conf|title=Using PHP-FPM (recommended for Apache 2.4.10 and newer)|lang=apache|1=
 <IfDefine PHP>
        <FilesMatch "\.php$">
                SetHandler "proxy:unix:/var/run/php-fpm/www.sock{{!}}fcgi://localhost"
        </FilesMatch>
  
	# Set it to handle the files
	<IfModule mod_mime.c>
		AddHandler application/x-httpd-php .php .php5 .phtml
		AddHandler application/x-httpd-php-source .phps
	</IfModule>
  
	DirectoryIndex index.php index.phtml
 </IfDefine>
}}

Or, you can use ProxPassMatch -- the only option if the Apache version is between 2.4.0 and 2.4.8, inclusive.

{{FileBox|filename=/etc/apache2/modules.d/70_mod_php.conf|title=Using PHP-FPM (recommended for Apache 2.4.8 and older)|lang=apache|1=
 <IfDefine PHP>
        # Send all requested PHP files to PHP-FPM via fcgi://PHP_FPM_LISTEN_ADDRESS:PHP_FPM_LISTEN_PORT/DOCUMENT_ROOT/$1
        ProxyPassMatch ^/(.*\.php)$ fcgi://127.0.0.1:9000/var/www/localhost/htdocs/$1
  
	# Set it to handle the files
	<IfModule mod_mime.c>
		AddHandler application/x-httpd-php .php .php5 .phtml
		AddHandler application/x-httpd-php-source .phps
	</IfModule>
  
	DirectoryIndex index.php index.phtml
 </IfDefine>
}}

By default the <code>listen</code> directive is not set to a socket. First create the directory for the socket file:

{{RootCmd|mkdir /var/run/php-fpm}}

Next, update the {{Path|php-fpm.conf}} file as follows:

{{FileBox|filename=php-fpm.conf|title=Updating listen directive|lang=apache|1=
; Set permissions for unix socket, if one is used. In Linux, read/write
; permissions must be set in order to allow connections from a web server. Many
; BSD-derived systems allow connections regardless of permissions.
; Default Values: user and group are set as the running user
;                 mode is set to 0666
listen.owner = nobody
listen.group = nobody
;listen.mode = 0666
 
 ; The address on which to accept FastCGI requests.
 ; Valid syntaxes are:
 ;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific address on
 ;                            a specific port;
 ;   'port'                 - to listen on a TCP socket to all addresses on a
 ;                            specific port;
 ;   '/path/to/unix/socket' - to listen on a unix socket.
 ; Note: This value is mandatory.
 ;listen = 127.0.0.1:9000
listen = /var/run/php-fpm/www.sock
}}

Then enable both the <code>PHP</code> and <code>PROXY</code> modules:

{{FileBox|filename=/etc/conf.d/apache2|title=Enabling PHP and proxy modules|lang=bash|1=
APACHE2_OPTS="... -D PHP -D PROXY"
}}

== Usage ==

=== Services ===

==== OpenRC ====

Start the Apache server:

{{RootCmd|/etc/init.d/apache2 start}}

Add Apache to the default runlevel:

{{RootCmd|rc-update add apache2 default}}

Restart the Apache service:

{{RootCmd|/etc/init.d/apache2 restart}}

Reload Apache configuration files:

{{RootCmd|/etc/init.d/apache2 reload}}

==== systemd ====

Start the Apache server:

{{RootCmd|systemctl start apache2}}

Add Apache to the default runlevel: 

{{RootCmd|systemctl enable apache2}}

Restart the Apache service: 

{{RootCmd|systemctl restart apache2}}

== Dépannage ==

=== Resources ===

The Apache server can be difficult to configure properly. Below are some resources that may be helpful when issues occur:

<div class="mw-translate-fuzzy">
* [http://www.gentoo.org/proj/en/apache/doc/troubleshooting.xml Troubleshooting guide]
* {{Bug|www-servers/apache|search=package}}
</div>

=== Testing ===

Verifying IP interfaces and ports on which Apache2 is running on and listening to:

{{RootCmd|netstat -tulpen {{!}} grep apache|output=<pre>
tcp     0     0 0.0.0.0:80      0.0.0.0:*     LISTEN     0     10932720     4544/apache2        
tcp     0     0 0.0.0.0:443     0.0.0.0:*     LISTEN     0     10932716     4544/apache2        
</pre>}}

Testing if a connection to a Apache server is working on localhost:

{{Cmd|telnet localhost 80|output=<pre>
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
</pre>}}

Interrupt the connection test with {{Key|Ctrl}}+{{Key|c}} and {{Key|Enter}}.

=== apr_sockaddr_info_get() failed for <System_Hostname> ===

'''Error:'''

<pre>apache2: apr_sockaddr_info_get() failed for System_Hostname</pre>

'''Resolution:'''

When this occurs, add the host name to the {{Path|/etc/hosts}} file:

{{FileBox|filename=/etc/hosts|title=Adding a Hostname for Apache|1=
127.0.0.1 localhost System_Hostname
}}

== Voir aussi ==

<div class="mw-translate-fuzzy">
* [[Lighttpd]] - un serveur web léger et rapide.
* [[Nginx]] - un serveur HTTP petit et robuste de haute perforance.
</div>

== Ressources externes ==

<div class="mw-translate-fuzzy">
* [http://articles.slicehost.com/2010/12/2/installing-apache-on-gentoo Slicehost article: Installing Apache on Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-files-on-gentoo Slicehost article: Apache configuration files on Gentoo]
* [http://articles.slicehost.com/2010/12/3/configuring-the-apache-mpm-on-gentoo Slicehost article: Configuring the Apache MPM on Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-on-gentoo-part-1 Slicehost article: Apache configuration on Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-virtual-hosts-on-gentoo-part-1 Slicehost article: Apache Virtual Hosts on Gentoo]
* [http://articles.slicehost.com/2010/12/3/enabling-and-using-apache-s-mod_status-on-gentoo Slicehost article: Enabling and using apache's mod_status on Gentoo]
* [http://httpd.apache.org/docs/ apache.org documentation]
* [http://gentoo-en.vfose.ru/wiki/Apache2_mod_pagespeed Apache2 mod_pagespeed]
</div>


[[Category:Web Servers]]
