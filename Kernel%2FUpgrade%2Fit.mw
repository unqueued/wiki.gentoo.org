<languages />

<div class="mw-translate-fuzzy">
{{Metadata|abstract=Questo articolo descrive i passi necessari per aggiornare ad un nuovo kernel.}}
</div>

<div class="mw-translate-fuzzy">
Questo articolo descrive la procedura per l'aggiornamento ad un nuovo [[kernel]].
</div>

<div class="mw-translate-fuzzy">
== Installazione ed uso di un nuovo kernel ==
</div>

L'aggiornamento del kernel potrebbe essere una buona idea quando dei nuovi sorgenti sono stati rilasciati. I nuovi sorgenti del kernel sono a volte installati durante l'aggiornamento del sistema tramite il seguente comando

{{RootCmd|emerge --ask --update --deep --with-bdeps{{=}}y --newuse @world}}

<div class="mw-translate-fuzzy">
Ovviamente i sorgenti del kernel possono essere installati direttamente usando il seguente comando (si sostituisca "gentoo-sources" con "hardened-sources" quando si sta usando un profilo hardened):
</div>

{{RootCmd|emerge --ask --update --deep --with-bdeps{{=}}y --newuse sys-kernel/gentoo-sources}}

L'installazione di nuovi sorgenti del kernel non fornisce all'utente un nuovo kernel. E' necessario produrre ed installare un nuovo kernel dai nuovi sorgenti e quindi riavviare il sistema per eseguire effettivamente il nuovo kernel.

La generazione di un nuovo kernel dai nuovi sorgenti è lo stesso processo di creazione di un kernel durante l'installazione del sistema. La differenza è che si potrebbe usare la configurazione del vecchio kernel per creare la configurazione del nuovo kernel. L'uso della vecchia configurazione permette l'utente di evitare di  esplorare tutte le opzioni del kernel nuovamente (come {{c|make menuconfig}})

<div class="mw-translate-fuzzy">
La configurazione del kernel è salvata in un file nominato {{Path|.config}} nella directory che contiene il kernel stesso. Un nuovo kernel potrebbe avere opzioni e funzionalità che un vecchio kernel non possedeva, o potrebbe non avere funzionalità o opzioni possedute da un vecchio kernel. La configurazione del kernel specifica quali funzionalità e opzioni di un kernel debbano essere abilitate o meno, quali includere nel kernel, o quali dovranno essere incluse come moduli che potranno essere caricate in un kernel in esecuzione on demand. Quindi il file di configurazione di un nuovo kernel potrebbe avere nuove voci di configurazioni non presenti nel vecchio kernel, e potrebbe non avere alcune voci presenti invece nel file di configurazione del vecchio kernel.
</div>

Per far fronte a tali cambiamenti del file di configurazione, il file di configurazione del vecchio kernel deve essere convertito in una configurazione utilizzabile con il nuovo. Questo articolo mostra come creare un nuovo kernel da nuovi sorgenti del kernel con la conversione del file di configurazione provenienti dal vecchio kernel.

<div class="mw-translate-fuzzy">
== Creare un backup della configurazione del kernel corrente ==
</div>

E' importante fare un backup della configurazione del kernel in modo che le configurazioni precedenti non siano perse. Dopo tutto, molti utenti dedicano molto tempo a definire la migliore configurazione per il sistema, e perdere queste informazioni non è sicuramente desiderato.

Generare un backup della configurazione corrente del kernel è facile:

<div class="mw-translate-fuzzy">
{{RootCmd|cd /usr/src/linux
|cp .config ~/kernel-config-`uname -r`|}}
</div>

A condizione che il collegamento simbolico ai sorgenti del kernel sia stato creato correttamente, questo comando copia lla configurazione del kernel correntemente usato nella home directory dell'utente root, rinominando il file di configurazione in {{Path| kernel-config-}} seguito dalla versione del kernel Linux attualmente in esecuzione.

== Configuration ==

<div class="mw-translate-fuzzy">
== Impostare il link simbolico ai sorgenti del nuovo kernel ==
</div>

Il link simbolico{{Path|/usr/src/linux}} dovrebbe sempre puntare alla directory contenente i sorgenti del kernel attualmente in esecuzione. Questo può essere fatto in uno dei tre dei seguenti modi:

# Installare i sorgenti del kernel con la clausola <code>USE="symlink"</code>
# Impostare il link con <code>eselect</code>
# Aggiornare manualmente il link simbolico

<div class="mw-translate-fuzzy">
=== Installare i sorgenti del kernel con la USE flag "symlink" ===
</div>

Questo implicherà che {{Path|/usr/src/linux}} punti alla directory dei sorgenti del nuovo kernel.

Se necessario, il link può essere comunque modificato successivamente con uno degli altri due metodi.

<div class="mw-translate-fuzzy">
=== Configurazione del link con eselect ===
</div>

Per impostare il link simbolico con {{c|eselect}}:

{{RootCmd|eselect kernel list|output=<pre>
Available kernel symlink targets:
 [1] linux-3.14.14-gentoo *
 [2] linux-3.16.3-gentoo
</pre>}}

Questo comando genera la lista dei kernel disponibili. L'asterisco indica quale sia la directory dei sorgenti selezionata.

Per cambiare i sorgenti del kernel, per esempio alla seconda voce:

{{RootCmd|eselect kernel set 2}}

<div class="mw-translate-fuzzy">
=== Aggiornamento manuale del link simbolico ===
</div>

Per impostare il link simbolico manualmente:

<div class="mw-translate-fuzzy">
{{RootCmd|ln -sf /usr/src/linux-3.16.3 /usr/src/linux
|ls -l /usr/src/linux|output=<pre>
lrwxrwxrwx 1 root root 19 Oct  4 10:21 /usr/src/linux -> linux-3.16.3-gentoo
</pre>}}
</div>

==== Moving to the new folder ====

Now that the symbolic link has been modified, change the working directory to the new kernel folder.

{{RootCmd|cd /usr/src/linux}}

{{Note|This command is still necessary even if the working directory was already {{Path|/usr/src/linux}} when the symlink was modified. Until the new symlink is actually followed, the console will still be in the ''old'' kernel's directory.}}

<div class="mw-translate-fuzzy">
== Copia della configurazione del precedente kernel ==
</div>

<div class="mw-translate-fuzzy">
La configurazione un precedente kernel necessita di essere copiata nella directory dei sorgenti del nuovo kernel. Questa può essere disponibile in più punti:
</div>

<div class="mw-translate-fuzzy">
* Nel filesystem [[procfs]], se l'opzione ''Enable access to .config through /proc/config.gz'' è stata attivata nel kernel attualmente in esecuzione:
: {{RootCmd|zcat /proc/config.gz > /usr/src/linux/.config}}
</div>

*Dal vecchio kernel. Questo funziona solo quando il vecchio kernel è stato compilato con CONFIG_IKCONFIG:
:{{RootCmd|/usr/src/linux/scripts/extract-ikconfig /path/to/old/kernel >/usr/src/linux/.config}}

* Nella directory {{Path|/boot}}, se la configurazione è stata precedentemente installata in questa posizione:
: {{RootCmd|cp /boot/config-3.14.14-gentoo /usr/src/linux/.config}}

* Nella directory del kernel attualmente in esecuzione:
: {{RootCmd|cp /usr/src/linux-3.14.14-gentoo/.config /usr/src/linux/}}

* Nella directory {{Path|/etc/kernels/}}, se l'opzione <code>SAVE_CONFIG="yes"</code> è impostata nel file {{Path|/etc/genkernel.conf}} e {{c|[[genkernel]]}} è stato usato per produrre il kernel attualmente in esecuzione:
: {{RootCmd|cp /etc/kernels/kernel-config-x86_64-3.14.14-gentoo /usr/src/linux/.config}}

<div class="mw-translate-fuzzy">
== Configurazione del nuovo kernel ==
</div>

Per usare la configurazione di un vecchio kernel con uno nuovo, è necessario che questa sia prima convertita. La conversione può essere effettuata eseguendo {{c|make silentoldconfig}} oppure, in alternativa, {{c|make olddefconfig}}.

<div class="mw-translate-fuzzy">
=== make silentoldconfig ===
</div>

{{Important|{{c|make silentoldconfig}} is being removed as of linux version 4.19, it will be replaced by {{c|make syncconfig}}.}}

La seguente configurazione è tipo la configurazione testuale effettuata con {{c|make config}}. Per le nuove opzioni di configurazione, verrà richiesto all'utente di prendere una decisione. Per esempio:

{{RootCmd|cd /usr/src/linux
|make silentoldconfig|output=<pre>
Anticipatory I/O scheduler (IOSCHED_AS) [Y/n/m/?] (NEW)
</pre>}}

La stringa "(NEW)"" alla fine della linea sottolinea che questa opzione è nuova. Nelle parentesi quadre a sinistra della stringa ci sono le possibili risposte ''Y''es (Sì), ''n''o (o), ''m''odule (modulo) oppure ''?'' per visualizzare l'aiuto. La risposta raccomandata (default) è in maiuscolo (in questo caso ''Y''). L'aiuto riporta spiegazioni sull'opzione o sul driver.

Sfortunatamente {{c|make silentoldconfig}} non mostra molte informazioni per ogni opzione, come il contesto, e qualche volta è difficoltoso dare la giusta risposta. In questo caso, la migliore strada è ricordare il nome dell'opzione e ricontrollarla successivamente tramite uno dei [[Kernel/Configuration#Configuration tools|strumenti grafici di configurazione del kernel]].

<div class="mw-translate-fuzzy">
=== make olddefconfig ===
</div>

Se tutte le nuovi opzioni di configurazioni possono essere impostate con il loro valore raccomandato (default) allora è possibile usare {{c|make olddefconfig}}:

{{RootCmd|cd /usr/src/linux
|make olddefconfig}}

<div class="mw-translate-fuzzy">
=== make help ===
</div>

E' possibile usare {{c|make help}} per vedere gli altri metodi di conversione:

{{RootCmd|make help}}

== Compilazione ==

<div class="mw-translate-fuzzy">
{{Important|Quando moduli esterni sono installati (come nvidia o zfs), è necessario eseguire {{c|make modules_prepare}} come descritto in [[Kernel/Upgrade#Reinstall external kernel modules|sotto]] prima di generare il kernel. Alcuni moduli non possono essere installati o preparati prima che il kernel sia stato generato.}}
</div>

{{Important|Non dimenticare di configurare [[Bootloader|bootloader]] per considerare i file del nuovo kernel, e rigenerare il file initramfs se utilizzato.}}

Primo passo, seguire i passi nell'articolo [[Kernel/Configuration#Build|manual configuration]].

=== Automated build and installation ===

It is possible to automatically build and install the newly emerged kernel using Portage hooks. While other approaches are also possible, the following is based on genkernel and gentoo-sources package. It requires the following prerequisites:

# {{c|genkernel all}} is able to build and install the kernel to which the {{Path|/usr/src/linux}} symlink points into <code>$BOOTDIR</code> and the bootloader.
# The <code>symlink</code> use flag is set for the kernel ebuild.

If those are fulfilled, simply install a <code>post_pkg_postinst</code> Portage hook as shown below.

{{FileBox|title=Automated kernel build and installation portage hook|filename=/etc/portage/env/sys-kernel/gentoo-sources|lang=bash|1=post_pkg_postinst() {
	CURRENT_KV=$(uname -r)
	# Check to see if genkernel has been run previously for the running kernel and use that config
	if [[ -f "${EROOT}/etc/kernels/kernel-config-${CURRENT_KV}" ]] ; then
		genkernel --kernel-config="${EROOT}/etc/kernels/kernel-config-${CURRENT_KV}" all
	elif [[ -f "${EROOT}/usr/src/linux-${CURRENT_KV}/.config" ]] ; then # Use latest kernel config from current kernel
		genkernel --kernel-config="${EROOT}/usr/src/linux-${CURRENT_KV}/.config" all
	elif [[ -f /proc/config.gz ]] ; then # Use known running good kernel
		zcat /proc/config.gz >> "${EROOT}/tmp/genkernel.config"
		genkernel --kernel-config="${EROOT}/tmp/genkernel.config" all
		rm "${EROOT}/tmp/genkernel.config"
	else # No valid configs known
		genkernel all
	fi
}
}}

<div class="mw-translate-fuzzy">
== Reinstallare moduli kernel esterni ==
</div>

{{Note|The modules_prepare step is not required if building an entire kernel as this function is done as part of the standard process.}}

Ogni modulo esterno, come [[:Category:Binary kernel modules|moduli kernel binari binary]], necessitano di essere rigenerati per ogni nuovo kernel. Se il kernel non stato ancora generato, è necessario  prima prepararlo per la generazione dei moduli esterni:

{{RootCmd|make modules_prepare}}

I pacchetti che contengono moduli kernel possono essere ricompilati usando il set <code>@module-rebuild</code>:

{{Emerge|@module-rebuild}}

<div class="mw-translate-fuzzy">
== Risoluzione dei problemi di generazione ==
</div>

Quando si stanno sperimentando problemi durante la ricompilazione del kernel corrente, è potrebbe essere d'aiuto sanificare i sorgenti del kernel. Ci si assicuri prima di creare un backup del file {{Path|.config}} dato che l'operazione lo elminerà. Ci si assicuri inoltre di non usare suffissi come {{Path|.bak}} o {{Path|~}} dato che {{c|make distclean}} eliminerà anche questi.

{{RootCmd|cp .config /usr/src/kernel_config_bk
|make distclean
|mv /usr/src/kernel_config_bk .config}}

<div class="mw-translate-fuzzy">
== Rimozione dei vecchi kernel ==
</div>

Si veda l'articolo [[Kernel/Removal|Rimozione del kernel]]. 

== See also ==

* {{See also|Genkernel}}

== Risorse esterne ==

<div class="mw-translate-fuzzy">
* [http://kernelnewbies.org/LinuxChanges kernel changelog con alcune spiegazioni in merito alle nuove funzionalità]
</div>

[[Category:Kernel]]
