{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://awesome.naquadah.org|header=true}}
|{{InfoBox wikipedia|awesome (window manager)}}
}}
'''awesome''' is a highly configurable, next generation framework window manager for X. It is primarly targeted at power users, developers and any people dealing with every day computing tasks and who want to have fine-grained control on theirs graphical environment.

== Installation ==
Install {{Package|x11-wm/awesome}}:
{{Emerge|awesome}}

== Keyboard shortcuts ==
These are the most useful default shortcuts:
* {{Key|mod4}}+{{Key|mouse1}} = move client with mouse
* {{Key|mod4}}+{{Key|mouse2}} = resize client with mouse

* {{Key|mod4}}+{{Key|enter}} = open terminal
* {{Key|mod4}}+{{Key|r}} = run command
* {{Key|mod4}}+{{Key|shift}}+{{Key|c}} = kill
* {{Key|mod4}}+{{Key|m}} = maximize
* {{Key|mod4}}+{{Key|n}} = minimize
* {{Key|mod4}}+{{Key|ctrl}}+{{Key|n}} = restore minimized clients
* {{Key|mod4}}+{{Key|f}} = fullscreen
* {{Key|mod4}}+{{Key|tab}} = switch to previous client
* {{Key|mod4}}+{{Key|ctrl}}+{{Key|space}} = float

* {{Key|mod4}}+{{Key|j}} = hilight left client
* {{Key|mod4}}+{{Key|k}} = hilight right client
* {{Key|mod4}}+{{Key|shift}}+{{Key|j}} = move client right
* {{Key|mod4}}+{{Key|shift}}+{{Key|k}} = move client left

* {{Key|mod4}}+{{Key|l}} = resize tiled client
* {{Key|mod4}}+{{Key|h}} = resize tiled client

* {{Key|mod4}}+{{Key|left / right}} = change tag
* {{Key|mod4}}+{{Key|1-9}} = change tag
* {{Key|mod4}}+{{Key|shift}}+{{Key|1-9}} = send client to tag

== Creating the configuration file ==
The default configuration file of awesome is located in {{Path|~/.config/awesome/rc.lua}}. If such a directory or file does not exist youe will need to create them. A default, out of the box, configuration is distributed with awesome and can be found at {{Path|/etc/xdg/awesome/rc.lua}}. We would need to copy that configuration file to the users home directory.

First create the {{Path|awesome}} directory:
{{Cmd|mkdir -p ~/.config/awesome/}}

Then we copy the ''lua'' configuration file:
{{Cmd|cp /etc/xdg/awesome/rc.lua ~/.config/awesome/rc.lua}}

After making changes its useful to check the configuration file for errors:
{{Cmd|awesome -k|output=<pre>
✔ Configuration file syntax OK
</pre>}}

=== Debugging config with Xephyr ===
Xephyr is useful tool for debugging new config files as it creates an instance of an X server within a client window.
{{Cmd|Xephyr -ac -br -noreset -screen 800x600 :1}}

This will open an 800x600 window. To run awesome within it open a new terminal and run the following
{{Cmd|DISPLAY{{=}}:1.0 awesome}}

This will run awesome within a window.

== Launch ==
If awesome is going to be launched from terminal through '''startx''' a configuration similar to the following is needed:
{{File|~/.xinitrc||<pre>
exec ck-launch-session dbus-launch awesome
</pre>}}

If a touchpad hardware is present and scrolling does not work {{Path|.xinitrc}} should look similar to the following:
{{File|~/.xinitrc||<pre>
synclient HorizEdgeScroll=1
synclient TapButton1=1
exec ck-launch-session dbus-launch awesome
</pre>}}
{{Note| '''synclient''' belongs to {{Package|x11-drivers/xf86-input-synaptics}}.}}

== Tags ==
Example of four tags with custom number symbols.
{{File|rc.conf||<pre>
-- {{{ Tags
tags = {}
for s = 1, screen.count() do
    tags[s] = awful.tag({ "➊", "➋", "➌", "➍" }, s, layouts[1])
end
-- }}}
</pre>}}

== Menu ==
Example of custom awesome menu.
{{File|rc.conf||<pre>
-- {{{ Menu
myawesomemenu = {
   { "manual", terminal .. " -e man awesome" },
   { "edit config", editor_cmd .. " " .. awesome.conffile },
   { "reload", awesome.restart },
   { "quit", awesome.quit },
   { "reboot", "reboot" },
   { "shutdown", "shutdown" }
}

appsmenu = {
   { "urxvt", "urxvt" },
   { "sakura", "sakura" },
   { "ncmpcpp", terminal .. " -e ncmpcpp" },
   { "luakit", "luakit" },
   { "uzbl", "uzbl-browser" },
   { "firefox", "firefox" },
   { "chromium", "chromium" },
   { "thunar", "thunar" },
   { "ranger", terminal .. " -e ranger" },
   { "gvim", "gvim" },
   { "leafpad", "leafpad" },
   { "htop", terminal .. " -e htop" },
   { "sysmonitor", "gnome-system-monitor" }
}

gamesmenu = {
   { "warsow", "warsow" },
   { "nexuiz", "nexuiz" },
   { "xonotic", "xonotic" },
   { "openarena", "openarena" },
   { "alienarena", "alienarena" },
   { "teeworlds", "teeworlds" },
   { "frozen-bubble", "frozen-bubble" },
   { "warzone2100", "warzone2100" },
   { "wesnoth", "wesnoth" },
   { "supertuxkart", "supertuxkart" },
   { "xmoto" , "xmoto" },
   { "flightgear", "flightgear" },
   { "snes9x" , "snes9x" },

}

mymainmenu = awful.menu({ items = { { "awesome", myawesomemenu },
                                    { "apps", appsmenu },
				    { "games", gamesmenu },
                                    { "terminal", terminal },
				    { "web browser", browser },
				    { "text editor", geditor }
                                  }
                        })

mylauncher = awful.widget.launcher({ image = image(beautiful.awesome_icon),
                                     menu = mymainmenu })
-- }}}
</pre>}}

== Date ==
Example of custom date format. %d.%m %H:%M = the format, 60 is the update interval in seconds. You can get the format options with '''date --help'''.
{{File|rc.conf||<pre>
-- {{{ Wibox
-- Create a textclock widget
mytextclock = awful.widget.textclock({ align = "right" }," %d.%m %H:%M ", 60)
</pre>}}

== Volume control ==
{{Package|media-sound/volumeicon}} handles volume keys automaticly and shows volume level in tray icon.
{{Emerge|volumeicon}}

Autostart volumeicon from {{Path|.xinitrc}}:
{{File|~/.xinitrc||<pre>
volumeicon &
exec ck-launch-session dbus-launch awesome
</pre>}}

Alternativly, a lightweight method is to add volume keys straight to awesome config:
{{File|rc.conf|Volume keys|<pre>
awful.key({ }, "XF86AudioLowerVolume", function () awful.util.spawn("amixer -q sset Master 2dB-") end),
awful.key({ }, "XF86AudioRaiseVolume", function () awful.util.spawn("amixer -q sset Master 2dB+") end),
</pre>}}

== MPD multimedia keys ==
Install {{Package|media-sound/mpc}} to add multimedia keybindings for [[MPD]]:
{{Emerge|mpc}}

{{File|rc.conf|Volume keybindings|<pre>
awful.key({ }, "XF86AudioNext",function () awful.util.spawn( "mpc next" ) end),
awful.key({ }, "XF86AudioPrev",function () awful.util.spawn( "mpc prev" ) end),
awful.key({ }, "XF86AudioPlay",function () awful.util.spawn( "mpc play" ) end),
awful.key({ }, "XF86AudioStop",function () awful.util.spawn( "mpc pause" ) end),
</pre>}}

Add a custom keybinding, like {{Key|Alt}}+{{Key|Tab}}, to switch to previous window:
{{File|rc.conf|Volume keybindings|<pre>
-- {{{ Key bindings
globalkeys = awful.util.table.join(
...
    -- alt + tab
    awful.key({ "Mod1", }, "Tab",
        function ()
            awful.client.focus.history.previous()
            if client.focus then
                client.focus:raise()
            end
        end),
</pre>}}

[[Category:Window manager]]
