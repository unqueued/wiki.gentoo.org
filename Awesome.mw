<languages />
<translate>
<!--T:1-->
{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|https://awesomewm.org|header=true}}
|{{InfoBox github|https://github.com/awesomeWM/awesome}}
|{{InfoBox irc|awesome}}
|{{InfoBox ohloh}}
|{{InfoBox wikipedia|awesome (window manager)}}
}}

<!--T:2-->
'''awesome''' is [[Article description::a highly configurable, next generation, dynamic [[window manager]] for [[X]].]] It is primarily targeted at power users, developers and any people dealing with every day computing tasks and who want to have fine-grained control on their graphical environment. It is extended using the Lua programming language.

== Installation == <!--T:3-->

=== USE flags === <!--T:64-->

<!--T:65-->
{{USEflag|package=x11-wm/awesome}}

=== Emerge === <!--T:66-->

<!--T:4-->
Install {{Package|x11-wm/awesome}}:

<!--T:5-->
{{Emerge|x11-wm/awesome}}

== Configuration == <!--T:6-->

=== Starting === <!--T:7-->

<!--T:8-->
To start awesome use a [[display manager]] or {{c|startx}}.

<!--T:9-->
To use {{c|startx}} with [[ConsoleKit]] support, setup [[ConsoleKit]] and create the following file:

<!--T:10-->
{{FileBox|filename=~/.xinitrc|lang=bash|1=
exec ck-launch-session dbus-launch --sh-syntax --exit-with-session awesome
}}

=== Configuration file === <!--T:11-->

<!--T:12-->
The default configuration file of awesome is located in {{Path|~/.config/awesome/rc.lua}}. If such a directory or file does not exist then it needs to be created. A default, out of the box, configuration is distributed with {{c|awesome}} and can be found at {{Path|/etc/xdg/awesome/rc.lua}}. Copy that configuration file to the user's home directory.

<!--T:13-->
First create the {{Path|awesome/}} directory:

<!--T:14-->
{{Cmd|mkdir -p ~/.config/awesome/}}

<!--T:15-->
Next copy the {{Path|rc.lua}} configuration file:

<!--T:16-->
{{Cmd|cp /etc/xdg/awesome/rc.lua ~/.config/awesome/rc.lua}}

<!--T:17-->
If {{Package|x11-terms/xterm}} is not installed, either install it or change the default terminal emulator to the terminal emulator available on the system. Below, the default terminal emulator is set to {{c|konsole}}, part of {{Package|kde-apps/konsole}}.

<!--T:18-->
{{FileBox|filename=~/.config/awesome/rc.lua|lang=lua|1=
-- This is used later as the default terminal and editor to run.
terminal = "konsole"
}}

<!--T:19-->
After making changes it is useful to check the configuration file for errors:

<!--T:20-->
{{Cmd|awesome -k|output=<pre>
✔ Configuration file syntax OK
</pre>}}

<!--T:21-->
Add wallpaper support through the {{Package|media-gfx/feh}} package:

<!--T:22-->
{{Emerge|media-gfx/feh}}

<!--T:23-->
For instance, to use {{c|awsetbg}} to set the wallpaper, edit {{Path|~/.config/awesome/theme/theme.lua}}:

<!--T:24-->
{{FileBox|filename=~/.config/awesome/theme/theme.lua|title=Setting a specific background using awsetbg|lang=lua|1=
theme.wallpaper_cmd = { "awsetbg -f .config/awesome/themes/awesome-wallpaper.png" }
}}

Or simply set the wallpaper property of the theme:
{{FileBox|filename=~/.config/awesome/theme/theme.lua|title=Setting a specific background using the wallpaper property|lang=lua|1=
theme.wallpaper = ".config/awesome/themes/awesome-wallpaper.png"
}}

=== Tags === <!--T:25-->

<!--T:26-->
In {{c|awesome}}, tags are the name given to virtual desktops under which one or more applications are running. It is possible to assign custom symbols to these tags:

<!--T:27-->
{{FileBox|filename=~/.config/awesome/rc.lua|1=
-- {{{ Tags
tags = {}
for s = 1, screen.count() do
    tags[s] = awful.tag({ "➊", "➋", "➌", "➍" }, s, layouts[1])
end
-- }}}
}}

=== Menu === <!--T:28-->

<!--T:29-->
Below is an example of a custom {{c|awesome}} menu:

<!--T:30-->
{{FileBox|filename=~/.config/awesome/rc.lua|1=
-- {{{ Menu
myawesomemenu = {
   { "manual", terminal .. " -e man awesome" },
   { "edit config", editor_cmd .. " " .. awesome.conffile },
   { "reload", awesome.restart },
   { "quit", awesome.quit },
   { "reboot", "reboot" },
   { "shutdown", "shutdown" }
}
 
appsmenu = {
   { "urxvt", "urxvt" },
   { "sakura", "sakura" },
   { "ncmpcpp", terminal .. " -e ncmpcpp" },
   { "luakit", "luakit" },
   { "uzbl", "uzbl-browser" },
   { "firefox", "firefox" },
   { "chromium", "chromium" },
   { "thunar", "thunar" },
   { "ranger", terminal .. " -e ranger" },
   { "gvim", "gvim" },
   { "leafpad", "leafpad" },
   { "htop", terminal .. " -e htop" },
   { "sysmonitor", "gnome-system-monitor" }
}
 
gamesmenu = {
   { "warsow", "warsow" },
   { "nexuiz", "nexuiz" },
   { "xonotic", "xonotic" },
   { "openarena", "openarena" },
   { "alienarena", "alienarena" },
   { "teeworlds", "teeworlds" },
   { "frozen-bubble", "frozen-bubble" },
   { "warzone2100", "warzone2100" },
   { "wesnoth", "wesnoth" },
   { "supertuxkart", "supertuxkart" },
   { "xmoto" , "xmoto" },
   { "flightgear", "flightgear" },
   { "snes9x" , "snes9x" }
}
 
mymainmenu = awful.menu({ items = { { "awesome", myawesomemenu },
                                    { "apps", appsmenu },
				    { "games", gamesmenu },
                                    { "terminal", terminal },
				    { "web browser", browser },
				    { "text editor", geditor }
                                  }
                        })
 
mylauncher = awful.widget.launcher({ image = image(beautiful.awesome_icon),
                                     menu = mymainmenu })
-- }}}
}}

=== Date === <!--T:31-->

<!--T:32-->
Below is an example use of a custom date format. The format syntax used is <code>%d.%m %H:%M</code>. The second option, <code>60</code>, is the update interval in seconds.

<!--T:33-->
{{FileBox|filename=~/.config/awesome/rc.lua|title=Creating a text-clock widget|1=
-- {{{ Wibox
-- Create a text-clock widget
mytextclock = wibox.widget.textclock(" %d.%m %H:%M ", 60)
-- }}}
}}

<!--T:34-->
{{Note|For more information about the format options run {{c|date --help}}}}

=== Volume control === <!--T:35-->

<!--T:36-->
{{Package|media-sound/volumeicon}} can be used to handle volume keys automatically, and to show the volume level through a tray icon.

<!--T:37-->
{{Emerge|media-sound/volumeicon}}

<!--T:38-->
Autostart {{c|volumeicon}} from within {{Path|~/.xinitrc}}:

<!--T:39-->
{{FileBox|filename=~/.xinitrc|title=Launching volumeicon in the background when starting X|lang=bash|1=
volumeicon &
exec ck-launch-session dbus-launch awesome
}}

<!--T:40-->
Alternatively, a lightweight method is to add volume keys straight into the {{c|awesome}} configuration:

<!--T:41-->
{{FileBox|filename=~/.config/awesome/rc.lua|title=Volume keys|1=
awful.key({ }, "XF86AudioLowerVolume", function () awful.util.spawn("amixer -q sset Master 2dB-") end)
awful.key({ }, "XF86AudioRaiseVolume", function () awful.util.spawn("amixer -q sset Master 2dB+") end)
}}

=== MPD multimedia keys === <!--T:42-->

<!--T:43-->
Install {{Package|media-sound/mpc}} to add multimedia key bindings for [[MPD]]:

<!--T:44-->
{{Emerge|media-sound/mpc}}

<!--T:45-->
Next update the {{c|awesome}} configuration to assign the multimedia keys to the proper command:

<!--T:46-->
{{FileBox|filename=~/.config/awesome/rc.lua|title=Volume key bindings|1=
awful.key({ }, "XF86AudioNext",function () awful.util.spawn( "mpc next" ) end),
awful.key({ }, "XF86AudioPrev",function () awful.util.spawn( "mpc prev" ) end),
awful.key({ }, "XF86AudioPlay",function () awful.util.spawn( "mpc play" ) end),
awful.key({ }, "XF86AudioStop",function () awful.util.spawn( "mpc pause" ) end),
}}

=== Removing window gaps === <!--T:67-->

<!--T:68-->
Gaps between windows can be visible, most noticeably between terminal windows. These can be removed by inserting the <code>size_hints_honor = false</code> property in the <code>awful.rules.rules</code> table like this:

<!--T:69-->
{{FileBox|filename=~/.config/awesome/rc.lua|title=Setting size_hints_honor property|1=
awful.rules.rules = {
    { rule = { },
      properties = { size_hints_honor = false, -- Remove gaps
                     border_width = beautiful.border_width,
                     border_color = beautiful.border_normal,
      ...
}}

=== Debugging the configuration with Xephyr === <!--T:47-->

<!--T:48-->
Xephyr is a useful tool for debugging new configuration files as it creates an instance of an X server within a client window.

<!--T:49-->
{{Cmd|Xephyr -ac -nolisten tcp -br -noreset -screen 800x600 :1}}

<!--T:50-->
This will open an 800x600 window. To run awesome within it open a new terminal and run the following:

<!--T:51-->
{{Cmd|DISPLAY{{=}}:1.0 awesome}}

<!--T:52-->
This will run awesome within a window.

== Keyboard shortcuts == <!--T:53-->

<!--T:54-->
These are the most useful default shortcuts:

<!--T:55-->
* {{Key|mod4}}+{{Key|mouse1}} = move client with mouse
* {{Key|mod4}}+{{Key|mouse2}} = resize client with mouse

<!--T:56-->
* {{Key|mod4}}+{{Key|enter}} = open terminal
* {{Key|mod4}}+{{Key|r}} = run command
* {{Key|mod4}}+{{Key|shift}}+{{Key|c}} = kill
* {{Key|mod4}}+{{Key|m}} = maximize
* {{Key|mod4}}+{{Key|n}} = minimize
* {{Key|mod4}}+{{Key|ctrl}}+{{Key|n}} = restore minimized clients
* {{Key|mod4}}+{{Key|f}} = full screen
* {{Key|mod4}}+{{Key|tab}} = switch to previous client
* {{Key|mod4}}+{{Key|ctrl}}+{{Key|space}} = float

<!--T:57-->
* {{Key|mod4}}+{{Key|j}} = highlight left client
* {{Key|mod4}}+{{Key|k}} = highlight right client
* {{Key|mod4}}+{{Key|shift}}+{{Key|j}} = move client right
* {{Key|mod4}}+{{Key|shift}}+{{Key|k}} = move client left

<!--T:58-->
* {{Key|mod4}}+{{Key|l}} = resize tiled client
* {{Key|mod4}}+{{Key|h}} = resize tiled client

<!--T:59-->
* {{Key|mod4}}+{{Key|left / right}} = change tag
* {{Key|mod4}}+{{Key|1-9}} = change tag
* {{Key|mod4}}+{{Key|shift}}+{{Key|1-9}} = send client to tag

<!--T:60-->
Custom key bindings, like {{Key|Alt}}+{{Key|Tab}}, can be mapped to make the {{c|awesome}} experience even better. For instance, to use {{Key|Alt}}+{{Key|Tab}} to switch to the previous window:

<!--T:61-->
{{FileBox|filename=~/.config/awesome/rc.lua|title=Alt-TAB key binding|1=
-- {{{ Key bindings
globalkeys = awful.util.table.join(
...
    -- alt + tab
    awful.key({ "Mod1", }, "Tab",
        function ()
            awful.client.focus.history.previous()
            if client.focus then
                client.focus:raise()
            end
        end),
-- }}}
}}

== External resources == <!--T:62-->

<!--T:63-->
* [http://awesome.naquadah.org/wiki/User_Configuration_Files User Configuration Files] at awesome wiki

</translate>

[[Category:Window manager]]
