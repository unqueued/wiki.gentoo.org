<languages />

{{Metadata|abstract=Este documento describe cómo utilizar las claves compartidas SSH así como el programa keychain. Asume un conocimiento básico de criptografía de clave pública por parte del lector.}}

Este documento describe cómo usar claves compartidas de SSH
junto con el programa keychain. Asume un conocimiento básico de
criptografía con clave pública.

== Conceptos previos ==

=== Descripción del problema ===

So you have all of these lovely Gentoo machines running <tt>sshd</tt>, but it's a little inconvenient for you to keep typing in all of those login passwords, right? Or maybe you have a script or cron-job that needs a convenient way to use an ssh connection. Either way, there is a solution to this problem, and it begins with public key authentication. 

=== ¿Cómo funciona la autenticación con clave pública? ===

Asumamos que tenemos un cliente que quiere conectarse a un servidor
que corre sshd. El cliente, en primer lugar, genera un par de claves y le
entrega la clave pública al servidor. Después de esto, cada vez que el cliente intente
conectarse, el servidor envía un reto cifrado con la clave
pública. Solamente el titular de la correspondiente clave privada (el
cliente) puede descifrar el reto, así pues, como habrá adivinado,
la respuesta correcta conduce a una autenticación exitosa. 

== Cómo utilizar la autenticación de clave pública ==

=== Genere su par de claves ===

The first step is to create your key pair. To do this, we will use the <tt>ssh-keygen</tt> command as follows: 

{{Cmd|ssh-keygen}}

Simplemente acepte los valores por defecto y asegúrese de introducir una
contraseña (passphrase) robusta.

{{Warning/es|Asegúrese de usar una contraseña robusta, ¡Especialmente si esta clave se usará para autenticar al usuario root!}}

Ahora debería tener una clave privada en {{Path|~/.ssh/id_rsa}} y una clave pública en {{Path|~/.ssh/id_rsa.pub}}. Estamos listos para copiar la clave pública al servidor remoto.

=== Preparar el servidor ===

We will be copying the {{Path|~/.ssh/id_rsa.pub}} file over to the server that runs <tt>sshd</tt>. We will also be adding it to the {{Path|~/.ssh/authorized_keys}} file that belongs the connecting user on that server. Here's an example of how to do that if you already have ssh access to the server. 

{{Cmd|scp ~/.ssh/id_rsa.pub usuario_del_servidor@servidor:~/miequipo.pub |ssh usuario_del_servidor@servidor "cat ~/miequipo.pub &gt;&gt; ~/.ssh/authorized_keys" |ssh usuario_del_servidor@servidor "cat ~/.ssh/authorized_keys"}}

La salida de la última línea le debería mostrar el contenido del fichero {{Path|~/.ssh/authorized_keys}}. Asegúrese de que es correcto. 

=== Probar la configuración ===

Teóricamente, si todo ha ido bien y el demonio ssh del servidor lo
permite, debería obtener acceso ssh sin contraseña en este
momento. Todavía hará falta descifrar la clave privada en el cliente
con la contraseña que establecimos anteriormente, pero no confunda esto
con la contraseña de la cuenta del usuario en el servidor. 

{{Cmd|ssh usuario_del_servidor@servidor}}

Esperemos que se le haya solicitado la contraseña para id_rsa y que haya podido obtener acceso ssh al servidor como usuario_del_servidor. Si no, acceda al servidor como usuario_del_servidor y verifique
el contenido del archivo {{Path|~/.ssh/authorized_keys}} para asegurarse de que cada entrada está en su propia línea. Quizás también quiera revisar la configuración de sshd para determinar que prefiere utilizar la autenticación mediante clave pública cuando ésta esté disponible. 

En este momento, seguro que está pensando "¿Cuál será la gracia?
¡Solo he cambiado una contraseña por otra!" Relájese, en la siguiente
sección le mostraré exactamente lo que tiene que hacer para ahorrar su precioso tiempo. 

== Hacer que la autenticación por clave pública merezca la pena ==

=== Gestión típica de claves con ssh-agent ===

If you've been following along, you're probably thinking that it would be great if we could somehow decrypt our private key(s) once, and gain the ability to ssh freely, without any passwords. You are in luck, that is exactly what the program <tt>ssh-agent</tt> is for. 

<tt>ssh-agent</tt> is usually started at the beginning of the X session, or from a shell startup script like {{Path|~/.bash_profile}}. It works by creating a unix-socket, and registering the appropriate environment variables so that all subsequent applications can take advantage of it's services by connecting to that socket. Clearly, it only makes sense to start it in the parent process of an X session to use the set of decrypted private keys in all subsequent X applications. 

{{Cmd|eval `ssh-agent`}}

{{Note|This <tt>ssh-agent</tt> will keep keys decrypted until it is killed. To set a lifetime for the keys, use the <code>-t</code> argument as described in <tt>man ssh-agent</tt>.}}

When you run <tt>ssh-agent</tt>, it should output the PID of the running ssh-agent, and also set a few environment variables, namely <code>SSH_AUTH_SOCK</code> and <code>SSH_AGENT_PID</code>. It should also automatically add {{Path|~/.ssh/id_rsa}} to it's collection and ask you for the corresponding passphrase. If you have other private keys you want to add to the running ssh-agent, you can use the <tt>ssh-add</tt> command as follows: 

{{Cmd|ssh-add algun_fichero_de_claves}}

Ahora viene la magia. Ya que debe tener lista su clave privada descifrada, podrá acceder al servidor mediante ssh sin teclear contraseña alguna. 

{{Cmd|ssh server}}

¿No sería bueno saber cómo parar ssh-agent cuando se necesite? 

{{Cmd|ssh-agent -k}}

{{Note|If you had problems getting ssh-agent to work, it might still be running. You can kill it like any other process by running <tt>killall ssh-agent</tt>.}}

Si desea aún más comodidad para utilizar ssh-agent, proceda a la siguiente sección sobre el uso de keychain. Asegúrese de acabar con el ssh-agent
que esté corriendo tal y como se muestra en el ejemplo anterior, si así lo desea.

=== Sacar hasta la última gota de comodidad de ssh-agent ===

Keychain le permitirá reutilizar un ssh-agent entre un acceso y otro y opcionalmente, le pedirá la contraseña cada vez que el usuario acceda. Pero, antes de avanzar demasiado, vamos a correr emerge. 

{{Emerge|keychain}}

Asumiendo que no hubo problemas, ahora podemos utilizar keychain libremente. Agregue lo siguiente a su {{Path|~/.bash_profile}} para activarlo: 

{{CodeBox|title=Habilitar keychain en .bash_profile|<pre> 
keychain ~/.ssh/ir_dsa
. ~/.keychain/$HOSTNAME-sh
. ~/.keychain/$HOSTNAME-sh-gpg
</pre>
}}

{{Note|You can add more private keys to the command line as you desire. Also, if you want it to ask for passphrases each time you spawn a shell, add the <code>--clear</code> option.}}

{{Note|If you are not using bash, check the '''EXAMPLES''' section of <tt>man keychain</tt> for examples of use in other shells. The idea is to get those commands to run each time you use a shell.}}

Ahora vamos a probarlo. En primer lugar asegúrese de que ha acabado con el ssh-agent iniciado en la sección anterior. A continuación iniciamos un nuevo intérprete de órdenes, normalmente accediendo a nuestro sistema o abriendo un nuevo terminal. Debería pedirle la contraseña para cada clave especificada en la línea de la orden. Todos los intérpretes de órdenes que se abran a partir de este momento debería reutilizar a ssh-agent, permitiéndole realizar conexiones ssh sin utilizar contraseña una y otra vez. 

=== Usar keychain con KDE ===

If you are a KDE user, instead of using {{Path|~/.bash_profile}}, you can let KDE manage ssh-agent for you. In order to do so, you will have to edit {{Path|/etc/kde/startup/agent-startup.sh}}, which is read during KDE's startup, and {{Path|/etc/kde/shutdown/agent-shutdown.sh}}, which is executed during KDE's shutdown. Here is how you could edit those files: 

{{CodeBox|title=Editar /etc/kde/startup/agent-startup.sh|1=
if [ -x /usr/bin/ssh-agent ]; then
  eval "$(/usr/bin/ssh-agent -s)"
fi
}}

{{CodeBox|title=Editar /etc/kde/shutdown/agent-shutdown.sh|1=
if [ -n "${SSH_AGENT_PID}" ]; then
  eval "$(ssh-agent -k)"
fi
}}

Ahora, todo lo que tiene que hacer es iniciar el terminal que desee, por ejemplo, Konsole, y cargar las claves que le gustaría usar. Por ejemplo: 

{{Cmd|keychain ~/.ssh/id_rsa}}

Se recordarán sus claves hasta que finalice su sesión de KDE o acabe manualmente con el proceso ssh-agent.

== Comentarios finales ==

=== Consideraciones sobre la seguridad ===

Por supuesto, el uso de ssh-agent puede añadir un poco de inseguridad a su sistema. Si alguien utiliza el intérprete de órdenes mientras hemos ido al baño, podría acceder a todos nuestros servidores sin utilizar contraseña alguna. Por tanto, esto es una amenaza para los servidores a los cuales se conecta, por lo que debiera consultar la directriz de seguridad local. Si utilizar ssh-agent, asegúrese de tomar las medidas apropiadas para garantizar la seguridad de sus sesiones. 

=== Solución de problemas ===

La mayoría de lo que hemos visto debería funcionar correctamente, pero si encuentra algún problema, valdrá la pena recordar algunas cosas útiles. 

* If you are unable to connect without ssh-agent, consider using ssh with the arguments <code>-vvv</code> to find out what's happening. Sometimes the server is not configured to use public key authentication, sometimes it is configured to ask for local passwords anyway! If that is the case, you may want to also use the <code>-o</code> option with <tt>ssh</tt>, or change the server {{Path|sshd_config}}.
* If you are having problems with ssh-agent or keychain, it may be that you are not using a shell that understands the commands they use. Consult the man pages for ssh-agent and keychain for details on working with other shells.

== Recursos externos ==

* [http://www.funtoo.org/Keychain Página oficial del proyecto]
* [http://www.funtoo.org/OpenSSH_Key_Management,_Part_1 Series de artículos de IBM developerWorks] que presentan los conceptos detrás de Keychain


{{Migrated|originalauthors=Eric Brown, Marcelo Goes, nightmorph}}

[[Category:Server and Security]] 
[[Category:SSH]]
