{{InfoBox stack
|{{InfoBox homepage|https://linuxcontainers.org/lxd/introduction/|header=true}}
}}
LXD is the Linux Containers Daemon, and the successor to LXC.  Though both are developed concurrently by StÃ©phane Graber (and Canonical), LXD is still under active development and is currently suitable for evaluation use only.

If you are new to container technology, it would be good to first read the "Virtualization Concepts" section of the [[LXC]] page.

Key features of LXD include:
* prefers to launch unprivileged containers (secure by default)
* A command-line client (lxc) interacts with a daemon (lxd).
* Configuration is made easier through cascading profiles.
* Configuration changes are performed with the lxc command (no more config files).
* Multiple hosts can be federated together (with a certificate-based trust system).
* A federated setup means that containers can be launched on remote machines and live-migrated between hosts (using CRIU technology).

== Quick Start (single host) ==

=== Prepare Your System ===

==== Kernel configuration ====
It's a good idea to have most kernel flags required by {{Package|app-emulation/lxc}} and {{Package|sys-process/criu}}.
{{RootCmd|ebuild /usr/portage/app-emulation/lxc/lxc-1.1.2.ebuild setup
...
 * Checking for suitable kernel configuration options...
 *   CONFIG_NETLINK_DIAG:  needed for lxc-checkpoint
 *   CONFIG_PACKET_DIAG:  needed for lxc-checkpoint
 *   CONFIG_INET_UDP_DIAG:  needed for lxc-checkpoint
 *   CONFIG_INET_TCP_DIAG:  needed for lxc-checkpoint
 *   CONFIG_UNIX_DIAG:  needed for lxc-checkpoint
 *   CONFIG_CHECKPOINT_RESTORE:  needed for lxc-checkpoint
 * Please check to make sure these options are set correctly.
 * Failure to do so may cause unexpected problems.
|ebuild /usr/portage/sys-process/criu/criu-1.6.1.ebuild setup
...
}}

==== Emerge ====
{{Emerge|lxd}}
Since LXD is not yet stable, you may be prompted to unmask the ~amd64 keyword for the package.

==== Authorize Your Non-Privileged User ====
{{RootCmd|usermod --append --groups lxd erik}}
This will allow your non-root user to interact with the control socket which is owned by the lxd unix group.  For the group change to take effect, you may need to log out and log back in again.

==== Start the daemon ====
For SysV users:
{{RootCmd|/etc/init.d/lxd start}}

A systemd unit file has also been installed.

/etc/conf.d/lxd has a few available options related to debug output, but the defaults are adequate for this quick start.

==== Configure a bridge ====
LXD's default profile looks for a linux bridge named lxcbr0.  The ebuild has created lxcbr0 for you but no real interface has been added to the bridge.
{{RootCmd|brctl addif lxcbr0 eth0|brctl show}}
Also, note that lxcbr0 wasn't configured to be persistent across a reboot.  You'll have to edit /etc/conf.d/net if you want the bridge to be automatically configured by netifrc.
{{RootCmd|cat /etc/conf.d/net
bridge_lxcbr0{{=}}"eth0"
config_lxcbr0{{=}}"dhcp"}}

==== Configure subuid/subgid ====
{{RootCmd|echo root:1000000:65536 >>/etc/subuid
|echo root:1000000:65536 >>/etc/subgid}}
In this setup, the user 0-65535 on the container will actually be seen on the host system as user 1000000+uid and 1000000+gid.  This protects the host system, since if any container managed to break out of its sandboxed filesystem, it could interact with the host system only through the very high uid/gid.

=== Run an LXD container ===
TODO

== Configuration ==

TODO

== Multi-host Setup ==

TODO

== Live Migration ==

TODO
