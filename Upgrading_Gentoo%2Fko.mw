<languages />

{{Metadata|abstract=이 문서에서는 새 젠투 릴리즈가 기존의 설치에 어떤 영향을 주는지 설명합니다.}}

이 문서에서는 새 젠투 릴리즈가 기존의 설치에 어떤 영향을 주는지 설명합니다.

== 업그레이드 ==

=== 철학 ===

젠투 바닥에서는 리눅스 세계의 일부와 비교했을때 업그레이드 과정의 개념이 약간 다릅니다. 젠투에서 프로그램 업그레이드를 할 때, "기존"의 방법으로 할 수 없다는 사실은 이미 잘 알려져 있습니다: 새 릴리즈를 기다렸다 다운로드 하고, 광학 매체에 구운 후 CD-ROM 에 넣고 다음 업그레이드 절차를 따릅니다. 

그러나 젠투 사용자는 이 과정이 최선봉에서 살아남으려는 파워 유저에게 굉장한 좌절감을 심어준다는 사실을 압니다.  다른 배포판의 파워 유저라도 아마 빠르고 빈번한 업데이트를 돕는 apt또는 apt-rpm같은 다양한 인기있는 도구가 주어져 있는 상황에서 느낌은 마찬가지일겁니다. 그러나 그 어떤 배포판이라 할지라도 젠투만큼 사용자의 요구를 만족하는건 없습니다. 일단 시작할 때부터 젠투 자체가 빠른 성장성 업데이트 개념을 기반으로 설계했기 때문입니다. 

이상적으로 시스템을 어떻게 최신으로 유지하는지 설명하는 [[Handbook:X86 Gentoo Hand/ko|젠투 핸드북]]의 [[Handbook:X86/Working/Portage/ko|포티지 소개]]편의 절차를 따라 프로그램 설치를 해봤고 릴리즈에 시달리진 않았습니다. 이게 보통 하던 방식대로긴 하지만 가끔은 직접 핵심 시스템을 업데이트해야 할 때가 있습니다.

=== 릴리즈와 프로파일 ===

젠투 릴리즈 과정에 대해 자꾸 반복되는 질문중 하나가 "사용자로 하여금 프로그램을 업데이트 하도록 하는 것도 아닌데 왜 자꾸 새 릴리즈를 내놓는거죠?" 입니다. 여기에 대해 몇가지 이유가 있습니다: 

* 새 릴리즈라 함은 문제를 수정하고 기능을 더 추가한 설치 CD임을 의미합니다.
* 새 릴리즈에는 GRP 꾸러미 최신 모음을 제공하여 사용자로 하여금 설치하는데 "가장 빠른 방법" (stage3 + 미리 컴파일한 꾸러미)을 따라가도록 하여 오래되지 않은 시스템으로 마무리 할 수 있도록 합니다.

새로운 비호환 기능을 포함한 릴리즈가 나오거나 시스템 전반적인 동작을 완전히 수정하는 핵심 꾸러미 모음 및 설정을 제공하는 경우 새 ''프로파일''을 제공한다고 합니다. 

''프로파일''이란 설정 파일의 모음이며, ''시스템''꾸러미를 고려한 이빌드, 기본 USE 플래그, 가상 꾸러미 기본 대입, 동작중인 시스템의 아키텍처에 대한 내용을 담고 있는{{Path|/usr/portage/profiles}}의 하위 디렉터리에 저장되어 있습니다. 

사용중인 프로파일은 {{Path|/etc/portage/make.profile}} 심볼릭 링크가 결정하며, 프로파일 파일과 연결된 {{Path|/usr/portage/profiles}}의 하위 디렉터리를 가리킵니다. 예를 들어 기본 {{Keyword|x86}} 13.0 프로파일은 {{Path|/usr/portage/profiles/default/linux/x86/13.0}}에 있습니다. 상위 디렉터리의 파일은 있는 그대로의 프로파일 일부입니다(그렇기 때문에 다른 하위 프로파일과 공유합니다). 이것이 우리가 ''중첩 프로파일'' 이라 부르는 이유입니다. 

프로파일은 {{Path|/usr/portage/profiles}} 디렉터리에 기본으로 남아있으며, 나중에 새 프로파일로 인해 오래된 내용으로 방치됩니다. 이런 상황이 벌어지면 {{Path|deprecated}} 이름이 붙은 파일이 프로파일 디렉터리에 들어갑니다. 이 파일의 내용은 "업그레이드 해야 할" 프로파일의 이름입니다. 포티지는 새 프로파일로 업데이트 해야 할 때 관리자에게 자동으로 경고할 경우 이 정보를 사용합니다. 

새 프로파일을 만드는덴 몇가지 이유가 있습니다. 이전 버전과 호환되지 않는 핵심 꾸러미({{Package|sys-apps/baselayout}}, {{Package|sys-devel/gcc}}, {{Package|sys-libs/glibc}})의 새 버전 릴리즈일 경우, 기본 USE 플래그나 가상 대입을 바꾸는 경우, 시스템 전반적인 설정을 바꿔야 하는 경우가 있습니다.

== 새 릴리즈 상태 유지 ==

=== 프로파일을 바꾸지 않는 릴리즈===

새 젠투 릴리즈에 새 프로파일이 없으면 아무 일도 일어나지 않음을 안전하게 미리 확인해볼 수 있습니다. :&#41; 

젠투 핸드북에서 [[Handbook:X86/Working/Portage/ko|설명]]한 바와 같이 설치한 꾸러미를 업그레이드 하면 새 릴리즈를 사용해도 이미 설치한 완전히 동일한 프로파일대로 시스템이 갖춰집니다.

=== 프로파일을 바꾸는 릴리즈 ===

({{Keyword | x86}}용 13.0 같은)릴리즈에 새 프로파일이 들어오면, 새 프로파일로 옮기는 선택을 할 수 있습니다. 

보통 이런 옮기는 과정은 강요하지 않으며, 젠투 핸드북에서 [[Handbook:X86/Working/Portage/ko|설명]]한대로 계속해서 시스템에서 오래된 프로파일을 사용하며 꾸러미 업데이트를 할 수 있습니다. 

However, Gentoo strongly recommends updating the profile if it becomes deprecated. When this happens, it means that Gentoo developers no longer plan on supporting it. 

When a profile migration is apparent, then the upgrade has to be executed manually. The way to update may vary significantly from release to release; it depends on how deep the modifications introduced in the new profile are. 

In the simplest case users only have to change the {{Path|/etc/portage/make.profile}} symlink, in the worst case they may have to recompile the entire system from scratch while doing a neat voodoo dance. Migration is usually covered in the release notes. The necessary [[#Profile_updating_instructions|instructions]] are explained further in this guide.

=== 지원 프로파일 ===

To view the list of supported profiles, call {{c|eselect}} (which can be installed using {{c|emerge eselect}}) as follows: 

{{RootCmd|eselect profile list}}

=== 오래된 시스템 업그레이드 ===

어떤 시스템은 프로파일을 전환하기엔 너무 오래되어 있는 경우가 있습니다. 새 프로파일은 좀 더 최신의 포티지 버전을 필요로 하나, 더이상 설치할 수 없는 프로그램을 필요로 하는 경우가 있는데, 오래된 프로그램 버전에 대한 꾸러미 정의(이빌드)가 더이상 없기 때문입니다.

이 경우, 오래된 포티지 트리 스냅샷을 먼저 받아야 하며 최소한 포티지(그러나 시스템 꾸러미 모음 모두에 맞게)를 업그레이드 해야 하는데, 포티지 트리 스냅샷 날짜는 프로파일 전환 절차를 반복적으로 따라 충분히 최신 내용이 되도록 점차적으로 받아와야 합니다.

{{RootCmd
|mv /usr/portage /usr/portage.latest
|tar xjpf /path/to/portage-20090720.tar.bz2 -C /usr
|emerge -u portage
}}

오래된 스냅샷일수록 종종 이런 목적으로 제공하기 위해 지정 [https://dev.gentoo.org/~swift/snapshots/ 지정 위치]나 인터넷 미러에서 제공합니다. 받아온 파일이 문제가 있는지 파일의 무결성을 확인해보십시오.

{{RootCmd|gpg --verify portage-20090720.tar.bz2.gpgsig portage-20090720.tar.bz2}}

Although the [[Project:RelEng#Keys|release signing keys]] might be expired, the signature should still be OK.

=== (굉장히) 오래된 시스템 업그레이드 ===

Sometimes, systems are too old to easily upgrade. The upgrade path might need intermediate versions of software (such as portage) that does not exist any more, requiring to update the portage tree in steps (for instance incremental tree updates with steps of 3 to 4 months). 

To upgrade such systems, a recent stage3 can be used to update the system. Instructions for that are given in the [[#Updating_old_systems|Updating old systems]] section.

== 프로파일 업데이트 절차 ==

=== 일반 절차 ===

{{Important|Make sure the main Gentoo repository (the Portage tree) has been synced before performing any profile changes.}}

First, run {{c|emerge eselect}}. The {{c|eselect}} utility makes viewing and selecting profiles easy, without needing to create or remove symlinks by hand. 

{{RootCmd|eselect profile list
|eselect profile set <number>}}

직접 프로파일을 바꾸는 방식도 지원합니다: 

{{RootCmd
|rm /etc/portage/make.profile
|cd /etc/portage
|ln -s ../../usr/portage/profiles/<selected profile> make.profile
}}

{{Note/ko|대부분 아키텍처에 ''Desktop''과 ''Server'' 하위 프로파일이 있습니다. 엄청나게 작은 기본 프로파일보다 여러분이 원하는 만큼 꾸러미를 제공하는지 프로파일을 조심스레 살펴보십시오.}}

{{Note/ko|developer 하위 프로파일은 젠투 리눅스 개발 작업에 특화되어 있습니다. 보통 개발 환경을 설정하는데 도움이 됨을 의미하는 것은 ''아닙니다''.}}

=== 2008.0, 2007.0, 2006.1로 업데이트 ===

선택한 프로파일을 업그레이드할 경우, 해당 시스템의 유니코드 로캘 기본 설정을 기대하는지, 특히 {{Path|/etc/rc.conf}}에 <code>UNICODE="yes"</code> 설정을 넣었는지 확인하십시오. 이 설정이 동작하려면 시스템의 유니코드 로캘을 만들어야합니다. 적당한 로캘을 만드는 방법은 [[UTF-8/ko|UTF-8 게시물]]을 살펴보십시오. 

대신, 설정한 로캘이 적당하지 않으면 {{Path|/etc/rc.conf}}에 <code>UNICODE="no"</code>를 설정하고, <code>-unicode</code> USE 플래그를 설정한 상태에서 {{Package|sys-apps/baselayout}} 꾸러미를 다시 이머지하(거나 다음 baselayout 업데이트를 기다리)십시오. 다음 명령으로 처리할 수 있습니다.


* 다음과 같이 {{Package|sys-apps/baselayout}}에 <code>-unicode</code> USE 플래그 설정:
: {{RootCmd|echo "sys-apps/baselayout -unicode" >> /etc/portage/package.use}}
: {{Emerge|sys-apps/baselayout}}

* or setting it globally for all packages by adding it to the USE variable in {{Path|/etc/portage/make.conf}}:
: {{FileBox|filename=/etc/portage/make.conf|title=Disable unicode support globally|lang=bash|1=USE="-unicode"}}
: {{Emerge|sys-apps/baselayout}}

{{Note|Users updating to a 2007.0 profile on the Sparc architecture will need to follow the [[Upgrading_GCC|GCC Upgrading Guide]], as <code>gcc-4</code> is the default compiler.}}

Finally, follow the general upgrade instructions for updating the profile.

===  2006.0으로 업데이트 ===

To switch to the 2006.0 profile, point the {{Path|/etc/portage/make.profile}} symlink to the new location. Make sure Portage is updated before changing the profile. 

{{RootCmd
|rm /etc/portage/make.profile
|ln -s ../usr/portage/profiles/<selected profile> /etc/portage/make.profile
}}

{{Keyword|alpha}} - 2.4 커널 사용자 또는 NPTL을 사용하기 싫은 사용자라면 default-linux/alpha/no-nptl 프로파일을 사용하십시오. 더 많은 내용은 [http://www.gentoo.org//proj/en/releng/release/2006.0/alpha-release-notes.xml 알파 릴리즈 노트]에 있습니다. 

{{Keyword|ppc}} - The merge of the ppc32 and ppc64 profiles went forward. The ppc32 profile has been changed in a way that offers a minimalistic generic profile for all purposes, located in default-linux/ppc/ppc32. The release-dependent profile is optimized for desktop-usage and located in default-linux/ppc/ppc32/2006.0. There are some subprofiles available for G3 and G4 processors, and G3/Pegasos and G4/Pegasos for the Pegasos Open Desktop Workstation. Make sure to choose the correct subprofile for the system when migrating to a 2006.0 profile. 

{{Keyword|sparc}} - '''2.4'''-커널 기반에서의 2006.0/2.4 프로파일 업그레이드시 [[Upgrading_GCC/ko|GCC 업그레이드]] 때문에 사용자가 직접 건드려야 하는 부분(java 관련 꾸러미 머지해제)과 {{c|emerge -e world}} 명령 실행이 필요합니다.  '''2.6'''-커널 기반에서 안정화 되지 않은 것으로 간주된 2006.0 프로파일 업그레이드시 {{Path|/etc/portage/package.unmask}}에서 {{Package|sys-kernel/gentoo-sources}} 2.6 버전 가림 항목을 지우고 전체적으로 다시 빌드해야 합니다. 

'''모든 다른 아키텍처''' - 이전 프로파일에 대해 근본적으로 바뀐 내용이 없어 처리할 일이 없습니다.

===  2005.1로 업데이트 ===

To switch to the 2005.1 profile, point the {{Path|/etc/portage/make.profile}} symlink to the new location. Make sure Portage is updated before changing the profile. 

{{RootCmd|rm /etc/portage/make.profile
|ln -s ../usr/portage/profiles/<selected profile> /etc/portage/make.profile}}

'''모든 아키텍처''' - 이전 프로파일에 대해 근본적으로 바뀐 내용이 없어 처리할 일이 없습니다. 

{{Keyword|ppc}} - With the 2005.1 release, the ppc and ppc64 profiles were merged and a number of subprofiles for specific subarchitectures were created. Make sure to choose the correct subprofile for the system when migrating to a 2005.1 profile. 

===  2005.0으로 업데이트 ===

With the introduction of 2005.0, several architectures have decided to define additional profiles. Make sure to read the description of said profiles before deciding to migrate to one of them. Most architectures now also default to the 2.6 kernel tree where 2.4 was chosen previously. 

일부 아키텍처에서는 어떤 프로파일에서 다른 프로파일로 변환하기 위해 해야 할 몇가지 절차가 필요합니다. 이 경우에 대한 절차 안내를 표에 연결했습니다. 

{| class="table table-stripped table-condensed" style="text-align: left;" 
|- 
! 프로파일
! 설명
! 지정 업그레이드 안내서
|- 
| default-linux/alpha/2005.0
| 2.6 커널용 기본 Alpha 2005.0 프로파일
| 
|- 
| default-linux/alpha/2005.0/2.4
| 2.4 커널용 2005.0 프로파일
| 
|- 
| default-linux/amd64/2005.0
| 2.6 커널용 기본 AMD64 2005.0 프로파일
| 
|- 
| default-linux/amd64/2005.0/no-multilib
| multilib 비활성화 시스템 설치용 AMD64 2005.0 프로파일
| 
|- 
| default-linux/arm/2005.0
| 2.6 커널용 기본 ARM 2005.0 프로파일
| 
|- 
| default-linux/hppa/2005.0
| 2.6 커널용 기본 HPPA 2005.0 프로파일
| 
|- 
| default-linux/hppa/2005.0/2.4
| 2.4 커널용 HPPA 2005.0 프로파일
| 
|- 
| default-linux/mips/2005.0
| 기본 MIPS 2005.0 프로파일
| 
|- 
| default-linux/mips/cobalt/2005.0
| 코발트 전용 MIPS 2005.0 프로파일
| 
|- 
| default-linux/mips/mips64/n32/2005.0
| n32-지원 MIPS 플랫폼용 2005.0 프로파일
| 
|- 
| default-linux/mips/mips64/ip28/2005.0
| Indigo2 Impact 전용 64-bit 2005.0 프로파일
| 
|- 
| default-linux/mips/mips64/2005.0
| 64비트 MIPS 2005.0 프로파일
| 
|- 
| default-linux/ppc/2005.0
| 2.6 커널용 기본 PPC 2005.0 프로파일
| 
|- 
| default-linux/ppc64/2005.0
| 2.6 커널용 기본 PPC64 2005.0 프로파일
| 
|- 
| default-linux/s390/2005.0
| 기본 S390 2005.0 프로파일
| 
|- 
| default-linux/sparc/sparc32/2005.0
| 기본 Sparc 32-bit 2005.0 프로파일
| 
|- 
| default-linux/sparc/sparc64/2005.0
| 기본 Sparc 64-bit 2005.0 프로파일
| 
|- 
| default-linux/x86/2005.0
| 2.6 커널용 x86 2005.0 프로파일
| 
|- 
| default-linux/x86/2005.0/2.4
| 2.4 커널용 x86 2005.0 프로파일
| 
|-
|}

To switch to the selected profile, point the {{Path|/etc/portage/make.profile}} symlink to the new location. Make sure Portage is updated before changing the profile! 

{{RootCmd|rm /etc/portage/make.profile
|ln -s ../usr/portage/profiles/<selected profile> /etc/portage/make.profile}}

When an upgrade is planned from a Linux 2.4-based system to a 2.6 kernel, make sure to read our [[Kernel/Migrate_2.4_to_2.6|Gentoo Linux 2.6 Migration Guide]].

===  2004.3으로 업데이트 ===

2004.3 프로파일을 도입하면 사용자는 시스템에 대한 전반적인 수정을 보지 않아도 됩니다(아래에 자세한 내용이 있습니다). 다만, 젠투 개발자들은 ''쌓인 프로파일''의 적용을 빨리 하기 위해 새 프로파일을 밀어넣고 몇가지 프로파일을 오래된 것으로 간주하기로 결정했습니다. 이는 {{Path|/usr/portage/profiles}} 디렉터리의 새 배치를 따르는데 예를 들자면 (포티지 2.0.51 이상에서 지원하는) {{Path|/usr/portage/profiles/default-linux/x86/2004.3}}이 있습니다. 

2004.3 프로파일로 바꾸려면, {{Path|/etc/portage/make.profile}} 심볼릭 링크가 새 위치를 가리키도록 하십시오: 

{{Warning|프로파일을 바꾸기 ''전에'' 포티지가 최신인지 확인하십시오!!!}}

{{RootCmd|rm /etc/portage/make.profile
|ln -s ../usr/portage/profiles/default-linux/<arch>/2004.3 /etc/portage/make.profile}}

'''모든 아키텍처''' - 위에서 언급한대로, 이 프로파일에는 큰 변화 내용이 없습니다. 그러나 {{Package|sys-apps/slocate}}와 {{Package|net-misc/dhcpcd}} 꾸러미를 더 이상 시스템 꾸러미로 고려하지 않음을 참고해야 합니다. {{c|emerge --depclean}} 명령을 실행하는 동안 포티지에서 이 꾸러미를 시스템에서 제거 시도합니다. 이 꾸러미가 필요하다면, 프로파일을  바꾼 후 {{Path|/var/lib/portage/world}}에 꾸러미를 추가하거나 직접 이머지 하십시오. 

{{Keyword|ppc}} - {{Package|sys-fs/udev}}는 {{Package|sys-fs/devfs}} 대신 머신에 새로 설치할 기본 꾸러미가 됩니다. 이미 설치했다면 해당하지 않습니다.

=== 중첩 프로파일을 지원하는 포티지 업데이트 ===

이 섹션은 업그레이드 안내서에서 제대로 정리되진 않았지만, 약간 중요합니다. 이 섹션 이전에 보여드린 프로파일에서는 단계별 프로파일을 진원하는 포티지 버전을 필요로 합니다. 그러나, 몇가지 오래된 프로파일은 포티지 업그레이드와 더이상 있지도 않은 프로파일의 사용을 배격합니다. 어떻게 업그레이드 시도를 하려 해도 포티지에서는 실패 결과를 보여줍니다. 

To work around this problem, users can set a temporary symbolic link to the ''obsolete'' profile, allowing them to upgrade their Portage after which they can continue with the upgrade procedure set forth in this guide. Please substitute <code><nowiki><arch></nowiki></code> with the respective system architecture: 

{{RootCmd
|rm /etc/portage/make.profile
|cd /etc/portage
|ln -sf ../usr/portage/profiles/obsolete/<arch> make.profile
|emerge -n '>{{=}}sys-apps/portage-2.0.51'
}}

===  2004.2로 업데이트 ===

2004.2 프로파일로 바꾸려면, {{Path|/etc/portage/make.profile}} 심볼릭 링크가 새 위치를 가리키도록 하십시오: 

{{Warning|프로파일을 바꾸기 ''전에'' 포티지가 최신인지 확인하십시오!!!}}

{{RootCmd|rm /etc/portage/make.profile
|ln -s ../usr/portage/profiles/default-linux/<arch>/2004.2 /etc/portage/make.profile}}

{{Keyword|x86}} - This profile changes the default X11 implementation from <s>{{Package|x11-base/xfree}}</s> (deprecated) to {{Package|x11-base/xorg-x11}}. This change only touches the ''default'' value, and is only relevant for those who have not installed an X server yet. If one is already installed, then it will not affect the system at all; users are free to switch from one X server to the other exactly as before. 

{{Keyword|amd64}} - 이전 프로파일에 대해 근본적으로 바뀐 내용이 없어 처리할 일이 없습니다.

===  2004.0으로 업데이트 ===

2004.0 프로파일로 바꾸려면, {{Path|/etc/portage/make.profile}} 심볼릭 링크가 새 위치를 가리키도록 하십시오: 

{{RootCmd
|rm /etc/portage/make.profile
|ln -s ../usr/portage/profiles/default-<arch>-2004.0 /etc/portage/make.profile
}}

'''모든 아키텍처''' - 이전 프로파일에 대해 근본적으로 바뀐 내용이 없어 처리할 일이 없습니다. 

=== 1.4보다 오래된 프로파일을 1.4로 업데이트 ===

이번의 경우 업그레이드는 조금 복잡한데, [https://gentoo-handbook.lugons.org/doc/en/new-upgrade-to-gentoo-1.4.xml 여기]에서 찾아보실 수 있습니다. 

== 오래된 시스템 업데이트 ==

=== 업데이트 개념 ===

이 업그레이드 접근 개념은 최근 스테이지 3을 풀어놓은 빌드 과정 chroot를 만드는 것입니다. 그 후에 스테이지 3 chroot 환경에 있는 도구를 사용하여 실제 동작중인 시스템의 꾸러미를 업그레이드 합니다. 

{{Warning/ko|아래 언급한 명령은 작업 절차보단 안내서로서 제공하는 내용이며 완성되지 않았습니다. 접근 방식이 확실하지 않으면 중요한 파일을 백업하고 젠투를 다시 설치하는게 더 빠릅니다.}}

=== 빌드 과정 chroot 준비 ===

{{Path|/mnt/build}}라고 하는 빌드 과정 chroot를 먼저 만들고, 최신 스테이지 3를 여기에 풀으십시오. 

{{RootCmd
|mkdir -p /mnt/build
|tar -xf /path/to/stage3-somearch-somedate.tar.bz2 -C /mnt/build
|mount --rbind /dev /mnt/build/dev
|mount --rbind /proc /mnt/build/proc
|mount --rbind /sys /mnt/build/sys
}}

다음에는, 여기 chroot 환경에 마운트 지점을 만들고, 여기에다가 동작중인 이전 환경의 마운트를 바인딩하십시오. 

{{RootCmd
|mkdir -p /mnt/build/mnt/host
|mount --rbind / /mnt/build/mnt/host
}}

이제 {{Path|/mnt/build/mnt/host}}에서 (이전의) 동작중인 시스템에 접근할 수 있습니다. 또한 빌드 과정 chroot 내부로 chroot 하면 꾸러미를 업데이트 할 수 있습니다.

=== 네트워크 연결, chroot, 업데이트 ===

새로 설치할 때는 네트워크에 접근해서 관련 정보를 네트워크에서 복사해와야 합니다:

{{RootCmd|cp -L /etc/resolv.conf /mnt/build/etc/}}

Now chroot into the intermediate build location, and start updating vital packages on the live system, until the live system can be updated from within the live system (rather than through the intermediate build chroot):

{{RootCmd
|chroot /mnt/build
|source /etc/profile
|export PS1{{=}}"(chroot) ${PS1}"}}

{{GenericCmd|prompt=(chroot) root #|color=red|emerge --sync}}

<!-- The following section is being tested... do not uncomment (author: Maffblaster -->
<!--Make sure the profile in the chroot matches the one inside the (old) live system. Run the following command in both environments to make sure profiles match:

{{RootCmd|eselect profile list}}
{{GenericCmd|prompt=(chroot) root #|color=red|eselect profile list}}

Verify Portage's configuration files in the new chroot are the same as the ones set in the old system. The following command will recursively copy the profile from the (old) live system into the chroot 

{{GenericCmd|prompt=(chroot) root #|color=red
|cp -rv /mnt/host/etc/portage /etc
|cp -rv /mnt/host/var/lib/portage /var/lib
}}

{{Note|Look at the output of the above commands to verify everything has copied correctly. There may be errors if some path names in the (old) live system were directories. For example, if {{Path|/etc/portage/package.use}} is a directory in the host, then it will probably not get copied correctly to the chroot system.}}
-->

Now start building packages into the (old) live system. If Portage is old or missing, it is a good idea to start with that:

{{GenericCmd|prompt=(chroot) root #|color=red|emerge --root{{=}}/mnt/host --config-root{{=}}/mnt/host --verbose --oneshot sys-apps/portage}}

Keep this chrooted session open and try to update the (old) live system. When failures occur, use this chrooted session to update packages using the build tools available in the intermediate build chroot (which includes recent {{Package|sys-libs/glibc}}, {{Package|sys-devel/gcc}}, etc.). Tools can be added as needed to the build chroot.

{{Important|chroot 환경에서 {{c|emerge}} 명령을 실행할 때마다 잊지 말고 <code>--root{{=}}/mnt/host --config-root{{=}}/mnt/host</code> 옵션을 추가하십시오. 그렇지 않으면, (이전)라이브 시스템이 아닌 chroot 자체를 업데이트합니다}}

일부 설치 과정에서 새 프로그램을 설치할 때 설정 파일을 업데이트해야 할 수도 있습니다. chroot 환경에서 설정을 바꾸십시오.

루트 계정에서 빠져나가기 전에 시스템을 완전한 최신의 상태로 두려면 (이전) 라이브 시스템에 <code>@world</code> 세트(모든 꾸러미)를 빌드하십시오:

{{GenericCmd|prompt=(chroot) root #|color=red|emerge --root{{=}}/mnt/host --config-root{{=}}/mnt/host --update --newuse --deep --ask @world}}

과정이 끝나면 최신 시스템이 됩니다!

[[Category:Server and Security]] {{Migrated|originalauthors=Gregorio Guidi, Chris Gianelloni, Joshua Saddler}}
