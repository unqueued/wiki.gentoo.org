{{InfoBox stack
|{{InfoBox homepage|https://perl.org|header=true}}
|{{InfoBox project|Perl}}
|{{InfoBox wikipedia|Perl}}
}}

The Perl language itself is {{c|dev-lang/perl}}. There're three Perl-related categories:

* {{c|[https://packages.gentoo.org/categories/dev-perl dev-perl]}}: Libraries in/for Perl, corresponding to {{c|dev-java}}, {{c|dev-python}}, etc.
* {{c|[https://packages.gentoo.org/categories/perl-core perl-core]}}: Packages in this category are, depending on their versions, modules included in {{c|dev-lang/perl}}, but also distributed as separete packages. When modules are installed via {{c|perl-core}}, they override the counterpart in the core {{c|dev-lang/perl}}. For the details, see below.
* {{c|[https://packages.gentoo.org/packages/search?q{{=}}virtual%2Fperl virtual/perl-*]}}: Virtual packages that allow choosing a module between {{c|perl-core/}} packages and the one contained in the core {{c|dev-lang/perl}}.

More on perl-core<ref>https://bugs.gentoo.org/show_bug.cgi?id=608168#c1</ref>:

* It allows users to have more update versions of some modules that the core ones.
* It allows package-based installation, without bumping or patching the core perl.
* Sometimes these modules get deprecated in newer Perl. Such cases are handled by virtual/perl-*. Search [https://bugs.gentoo.org/show_bug.cgi?id=608168#c1] for "Module::Build" for more in-depth stories.

__TOC__

== Installation ==

=== USE flags ===

==== Global ====

Since many packages depend on the perl, Portage is aware of the global <code>perl</code> USE flag. It can be enabled (or disabled) globally:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
USE="perl"
}}

==== Package ====

{{USEflag|package=dev-lang/perl}}

As always, after adjusting USE flags, be sure to tell Portage to apply the changes to installed packages on the system:

{{Emerge|params+=--update --changed-use --deep|@world}}

== Upgrading Perl ==

When the official way {{c|emerge --oneshot --ask dev-lang/perl}} works, it's fine. See the [[#The official way|official way]] below for additional details. Unfortunately, it often does not always work, mainly due to unresolved slot conflicts. Theres no "official" way to handle these types of conflicts (yet).

It may work by updating the [[World set (Portage)|@world package set]], i.e. {{c|$ emerge --ask -uN --deep @world}}, but it will pull in more than necessary. Specifying the depth to 2 or 3 may make the dependency smaller, like this: {{c|emerge -auN --deep 2 @world}}.

Below we give two recommendable ways to cope with that situation.

The support thread in the forum is [https://forums.gentoo.org/viewtopic-p-8028098.html found here].

=== The official way ===

{{RootCmd
| emerge --oneshot --ask dev-lang/perl
| emerge --depclean --ask
| perl-cleaner --all
}}

=== Some knowledge ===

* Perl-related modules are installed under e.g. {{Path|/usr/lib/perl/vendor_perl/5.22.3/}}, except those from the core Perl. Notice that the core Perl version number is present. When upgrading Perl, they have to be re-emerged, too.
* During Perl upgrading, packages that depend on Perl may become unavailable.

In order to upgrade to unstable (~arch) version, you may have to unmask *all*, by running:
<pre><nowiki>{
  echo "### perl keywords"
  eix '-#C' dev-perl
  eix '-#C' perl-core
  eix '-#' virtual/perl-
  echo dev-lang/perl
} >> /etc/portage/package.keywords
</nowiki></pre>

=== app-admin/gentoo-perl-helpers ===

This recent package (appeared in Jan 2017) {{package|app-admin/gentoo-perl-helpers}} ([https://github.com/gentoo-perl/gentoo-perl-helpers git repository]) still needs to be tested, but must be far better than {{c|$ emerge -auDN @world}}. It is written by [[User:Kentnl|K. Fredric]] (kentnl), a Gentoo [[Project:Perl|Perl Project]] member.

==== Basic usage ====

Assume you have 5.20.*, and want to upgrade to 5.22.*.

{{RootCmd|gentoo-perl gen-upgrade-sets 5.20 5.22}}

Now you will have two sets {{c|perl-upgrade}} and {{c|perl-cleanup}}, (stored in {{path|/etc/portage/sets}}). Then simply do
{{RootCmd| emerge --oneshot --ask @perl-upgrade}}

Once this is done, do {{c|$ emerge -ac; perl-cleaner --all}}.

Help can be read by:

{{Cmd | gentoo-perl help gen-upgrade-sets }}

==== Details ====

In {{c|gentoo-perl gen-upgrade-sets}}, packages' keyword and mask are irrelevant. Simply the specified versions matter. The examples of the version are {{c|5.20}}, {{c|5.22}}, etc, '''not''' {{c|5.22.3_rc4}} or {{c|5.24.1_rc4}}. More precisely, they should be the sub-slot number, not atoms' versions.

If Portage complains about unsatisfied conflicts, you can try deleting blockers before upgrading:

{{RootCmd
|emerge --unmerge @perl-cleanup
|emerge --oneshot --ask @perl-upgrade
}}

In the event that portage fails while upgrading Perl, so that some but not all packages are emerged, then update (= trim down) the set {{c|@perl-upgrade}} (the same command as the first time generation):

{{RootCmd|gentoo-perl gen-upgrade-sets 5.20 5.22}}

The emerge can be resumed by:

{{RootCmd|emerge --oneshot --ask @perl-upgrade}}

If you want to store the sets elsewhere, do :

{{Cmd|ETC_PORTAGE_SETS{{=}}"/tmp/sets/" gentoo-perl gen-upgrade-sets 5.20 5.22}}

To use it later, don't forget to do this:

{{RootCmd|cp /tmp/sets/* /etc/portage/sets/*}}

=== A wild way ===

Caution: There's no guarantee that it works. This prescription is given here becuse of its extreme simplicity.

{{RootCmd
| emerge --ask --oneshot --nodeps dev-lang/perl # Break the dependency temporarily.
| perl-cleaner --all
| emerge --ask dev-lang/perl
}}

Taken from [https://forums.gentoo.org/viewtopic-t-1047450-highlight-perl+conflict.html], written by [https://forums.gentoo.org/profile.php?mode=viewprofile&u=147452 hnop].

== References ==

{{reflist}}

[[Category:Programming language]]
