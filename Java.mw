<languages />
{{InfoBox stack
|{{InfoBox wikipedia|Java_(programming_language)|header=true}}
|{{InfoBox project|Java}}
}}
<translate>
<!--T:1-->
'''Java''' is [[Article description::a programming language, originally developed by [[Wikipedia:Sun_Microsystems|Sun Microsystems]]]], which uses a runtime to allow running Java-developed applications on various platforms. It is a popular choice for developers who want to create cross-platform applications.

== What is Java? == <!--T:2-->

=== Overview === <!--T:3-->

<!--T:4-->
Java is a programming language developed by Sun Microsystems. The language is object-oriented and designed to run on multiple platforms without the need of recompiling code for each platform. Although Java can be compiled as a native program, much of Java's popularity can be attributed to its portability, along with other features such as automatic memory management. To make platform independence possible the Java compiler compiles the Java code to an intermediate representation called [[Wikipedia:Java_bytecode|Java bytecode]] that runs on a ''JVM'' ([[Wikipedia:Java_virtual_machine|Java Virtual Machine]]) and not directly on the operating system. 

<!--T:5-->
In order to run Java bytecode, one needs to have a ''JRE'' (Java Runtime Environment) installed. A ''JRE'' provides core libraries, a platform dependent ''JVM'', plugins for browsers, among other things. A ''JDK'' (Java Development Kit) adds programming tools, such as a bytecode compiler and a debugger.

=== JVM languages === <!--T:127-->

<!--T:128-->
The Java virtual machine is not used exclusively by Java programming language. Multiple programming languages use the Java platform and run on the JVM. Examples of such include: [[Wikipedia:Clojure|Clojure]], [[Wikipedia:Apache Groovy|Apache Groovy]], [[Wikipedia:Kotlin (programming language)|Kotlin]] or [[Wikipedia:Scala (programming language)|Scala]].

== Installing a virtual machine == <!--T:6-->

=== The choices === <!--T:7-->

<!--T:8-->
Gentoo provides numerous Java Runtime Environments (JREs) and Java Development Kits (JDKs). The current choices include: 

<!--T:9-->
{| class="table table-condensed table-striped" style="text-align: left;" 
|- 
! Vendor
! JDK
! JRE
|- 
| The [[Wikipedia:IcedTea|IcedTea]] Open Java SE (formerly icedtea6-bin)
| {{Package|dev-java/icedtea}} and {{Package|dev-java/icedtea-bin}}
| 
|- 
| [[Wikipedia:OpenJDK|OpenJDK]]
| {{package|dev-java/openjdk}} and {{package|dev-java/openjdk-bin}}
|
|- 
| Oracle's Java
| {{Package|dev-java/oracle-jdk-bin}}
| {{Package|dev-java/oracle-jre-bin}}
|-
| The GCJ IcedTea GNU GCC Java (currently IcedTea-7)
| {{Package|dev-java/icedtea}} {{Package|sys-devel/gcc}}  USE="gcj"
|
|}

=== Installing a JRE/JDK === <!--T:10-->

<!--T:11-->
To install the profile's default '''JDK''' run:

<!--T:112-->
{{Emerge|virtual/jdk}}

<!--T:113-->
To install the profile's default '''JRE''' run:

<!--T:114-->
{{Emerge|virtual/jre}}

<!--T:12-->
{{Warning|Some JDKs and JREs, including the Oracle packages, require accepting an EULA ([[Wikipedia:End-user_license_agreement|End-User License Agreement]]). If its license (such as '''dlj-1.1''') is not listed in the <var>ACCEPT_LICENSE</var> variable (found in {{Path|/etc/portage/make.conf}}), then the JDK/JRE will be unable to be installed. For more information on how to add acceptable licenses to {{Path|make.conf}} read the [[Handbook:X86/Working/Portage#Licenses|Licenses chapter]] of the Portage Handbook.}}

<!--T:13-->
To avoid any restrictive license hassle, consider installing {{Package|dev-java/icedtea-bin}}, which is an open Java implementation from the OpenJDK project. 

<!--T:14-->
{{Note|Be aware each ''JDK'' will include a ''JRE''; installing a JRE is not necessary if a JDK has been emerged.}}

=== Installing IcedTea GCJ Virtual Machine === <!--T:121-->

<!--T:126-->
{{Important|{{c|gcj}} is deprecated and is removed in GCC versions 7.0 and greater. It is unavailable from GCC 6.0 on Gentoo. Consider this section deprecated.}}

<!--T:122-->
The IcedTea virtual machine is provided in source code and requires compilation by a Java bytecode compiler. This bootstrapping can be executed by the GNU Compiler for Java (GCJ). This compiler is available when GCC is built with the <code>gcj</code> USE flag.

<!--T:123-->
When GCC is rebuilt with this USE flag set, the {{Package|dev-java/icedtea}} package can be installed. Because of a Portage bug, users need to install {{Package|dev-java/gcj-jdk}} and {{Package|dev-java/ant-core}} explicitly first if they are not already present.

<!--T:124-->
{{Emerge|dev-java/gcj-jdk dev-java/ant-core|params+=--oneshot}}
{{Emerge|dev-java/icedtea:7}}

=== Installing fetch-restricted virtual machines === <!--T:15-->

<!--T:16-->
Some of the JDKs and JREs require a few extra steps in their configurations. Emerge the packages as normal. If additional steps are required the ebuilds will provide instruction for the user on where to go and what to download.

<!--T:17-->
Download the indicated file(s) into {{Path|/var/cache/distfiles}} (or the value of <var>[[DISTDIR]]</var>). Once the files are in the right directories, rerun the {{c|emerge}} command, at which point the JRE/JDK will be begin to install.

=== Setting up a headless JRE === <!--T:103--> 

<!--T:104-->
Sometimes there is no need for a full JRE with all the capabilities of java. Using java on a server often does not require any GUI, graphical, sound or even printer related features. To install a simplified (sometimes also referred to as headless) JRE, a few USE flags need to be changed for the selected JRE flavor.

<!--T:105-->
{{FileBox|filename=/etc/portage/package.use|title=Required USE flag changes|1=
dev-java/icedtea headless-awt -alsa -cups
dev-java/icedtea-bin headless-awt -alsa -cups
dev-java/oracle-jre-bin headless-awt -alsa -cups
}}

<!--T:106-->
Depending on the current Gentoo profile, this might already be the case. As usual, the USE flag settings that are applicable to a particular package can be checked by running {{c|emerge}} in pretend mode:

<!--T:107-->
{{Cmd|emerge --pretend --verbose virtual/jre}}

== Configuring the Java virtual machine == <!--T:18-->

=== Overview === <!--T:19-->

<!--T:20-->
Gentoo has the ability to have multiple JDKs and JREs installed without causing conflicts. 

<!--T:21-->
Using the {{c|java-config}} tool with root privileges, a system-wide default java virtual machine (VM) can be set. Users can also use {{c|java-config}} to custom set their personal VM on a user-by-user basis. 

<!--T:22-->
{{Note|{{c|eselect}} can also be used to change the system and user VM. See {{c|eselect java-vm help}}.}}

=== Setting a default virtual machine === <!--T:23-->

<!--T:24-->
Running the {{c|java-config}} command with the <code>--list-available-vms</code> option will output a list of all JREs and JDKs installed on the system. Here is an example of the output: 

<!--T:25-->
{{RootCmd|java-config --list-available-vms|output=<pre>
The following VMs are available for generation-2:
1)      IcedTea JDK 7.2.6.3 [icedtea-7]
*)      IcedTea JDK 3.0.1 [icedtea-8]
</pre>
}}

<!--T:26-->
{{Note|VMs marked as 'Build Only' may contain security vulnerabilities and/or be end of life (EOL). Gentoo recommends not setting these VMs as the system's ''or'' the user's VM. Please see [[Java#Build_Only_VM|Build Only VM]] for more information.}}

<!--T:27-->
The ''*'' indicates this is the current active JVM (system-vm or user-vm when set). The name in the brackets ([]) is the handle or ID for that particular VM. The handle or the number to {{c|java-config --set-system-vm}} can be used to set the VM. The following text provides an example of how to set the system VM.

<!--T:28-->
Setting the system VM by handle (preferred):

<!--T:29-->
{{RootCmd|java-config --set-system-vm icedtea-7|output=<pre>
Now using icedtea-7 as your generation-2 system JVM
</pre>}}

<!--T:30-->
Alternate method: select VM by number handle number:

<!--T:31-->
{{RootCmd|java-config --set-system-vm 3|output=<pre>
Now using icedtea-7 as your generation-2 system JVM
</pre>
}}

<!--T:32-->
As a regular user, use java-config <code>--set-user-vm</code>. 

<!--T:33-->
{{Note|{{c|source}}-ing the profile for existing shell sessions is not usually needed when changing the user or system VM. The only exception is that variables such as <var>JAVA_HOME</var> will still point to the old location after setting a user VM for the first time or revert back to the system VM.}}

=== Build only VM === <!--T:34-->

<!--T:35-->
Some virtual machines are flagged as build-only due to being EOL and/or containing security vulnerabilities. These virtual machines will not automatically be used by Gentoo for the running of applications using Gentoo launchers (run-java-tool script designed for switching VMs), but will still be available for use by Gentoo's build environment as some packages may require them for building. The setting of these virtual machines as either the system or user VM is strongly discouraged as these VMs will then be used when running the {{Path|/usr/bin/{java,javac,..}}} executables, as well as used by any packages not using Gentoo's launcher scripts.

== Setting a default CLASSPATH == <!--T:54-->

<!--T:55-->
{{Warning|The options explained in this section should be considered deprecated and will most likely be removed in the future. It is strongly recommended against using these, because Java projects or applications should ideally manage their own classpaths. When choosing to specify a default <var>CLASSPATH</var>, some applications may behave unexpectedly, because classes they were not expecting to be on the classpath.}}

<!--T:56-->
{{c|java-config}} can also be used to set a system-wide default <var>CLASSPATH</var>, as well a user-specific default <var>CLASSPATH</var>. 

<!--T:57-->
First, list available Java libraries installed on the system to possibly put in the <var>CLASSPATH</var> variable. Here is an example of output: 

<!--T:58-->
{{RootCmd|java-config --list-available-packages|output=<pre>
[xerces-2] The next generation of high performance, fully compliant XML parsers in the Apache Xerces family (/usr/share/xerces-2/package.env)
[junit] Simple framework to write repeatable tests (/usr/share/junit/package.env)
[bsh] BeanShell: A small embeddable Java source interpreter (/usr/share/bsh/package.env)
[bcel] The Byte Code Engineering Library: analyze, create, manipulate Java class files (/usr/share/bcel/package.env)
[log4j] A low-overhead robust logging package for Java (/usr/share/log4j/package.env)
...
</pre>
}}

<!--T:59-->
Again, the names in brackets ([]) are the IDs to pass to {{c|java-config --set-system-classpath}}. Here is an example: 

<!--T:60-->
{{RootCmd|java-config --set-system-classpath log4j,xerces-2}}

<!--T:61-->
{{Note|The current directory ({{Path|.}}) will not be part of the system classpath, as that should be added to the system's login profile.}}

<!--T:62-->
Update the environment by logging out, then in again or by typing {{c|source {{Path|/etc/profile}}}}.

<!--T:63-->
For users, {{c|java-config --set-user-classpath}} will create {{Path|~/.gentoo/java-env-classpath}} file, which should be sourced from the [[Shell|shell]]'s profile. 

<!--T:64-->
{{CodeBox|lang=bash|title=Sourcing user specific classpath|1=
if [[ -f "${HOME}/.gentoo/java-env-classpath" ]]; then
       source ${HOME}/.gentoo/java-env-classpath
fi
}}

<!--T:65-->
If desiring a system wide or user default classpath add something like the following to the shell's profile. This is advised against: 

<!--T:66-->
{{RootCmd|export CLASSPATH{{=}}"${CLASSPATH}:$(java-config --classpath log4j,xerces-2)"}}

== Java browser plugins == <!--T:67-->

<!--T:129-->
{{Important|The Java plugin support had been deprecated in JDK 9<ref>[https://www.java.com/en/download/faq/jdk9_plugin.xml JDK 9 and the Java Plugin], java.com. Retrieved on November 30, 2018</ref>.}}

<!--T:118-->
The Java [[:Category:Web_browser|browser]] plugin used to be managed via {{c|eselect java-nsplugin}}. This has now been removed in favor of a simpler out-of-the-box experience. For basic usage, simply emerge the chosen JVM with the <code>nsplugin</code> USE flag enabled. Note that Oracle's plugin is only available for {{Keyword|amd64}} and {{Keyword|x86}}.

<!--T:119-->
{{Note|Note that [[Chromium]]-based browsers since version 42 and [[Firefox]] since version 52 no longer support [[Wikipedia:NPAPI|NPAPI]]-based plugins<ref>[https://java.com/en/download/help/enable_browser.xml How do I enable Java in my web browser?], java.com. Retrieved on November 30, 2018</ref>. This effectively disables the Java plugin on modern browsers.}}

<!--T:120-->
For more information, including JVM selection, Web Start, and multilib, see [https://gitweb.gentoo.org/repo/gentoo.git/plain/dev-java/icedtea-web/files/README.gentoo-r1 the README installed with icedtea-web].

== USE flags for use with Java == <!--T:90-->

=== Setting USE flags === <!--T:91-->

<!--T:92-->
For more information regarding [[USE flag]]s, refer to the USE flags chapter from the [[Handbook:X86/Working/USE|Gentoo Handbook]].

=== USE flags === <!--T:93-->

<!--T:94-->
* The [https://packages.gentoo.org/useflags/java <code>java</code>] flag adds support for Java in a variety of programs;
* The [https://packages.gentoo.org/useflags/nsplugin <code>nsplugin</code>] flag adds support for Mozilla-like browsers (including Firefox). This is needed for viewing Java applets in a Mozilla-like browser;
* The [https://packages.gentoo.org/useflags/jce <code>jce</code>] flag adds support for the Java Cryptography Engine;

<!--T:115-->
Following USE flags go in [[Gentoo_Java_USE_flags|JAVA_PKG_IUSE]].
* The [https://packages.gentoo.org/useflags/source <code>source</code>] flag installs a zip of the source code of a package. This is traditionally used for IDEs to 'attach' source to the libraries that are being use;
* For Java packages, the [https://packages.gentoo.org/useflags/doc <code>doc</code>] flag will build API documentation using javadoc.

== See also == <!--T:108-->

<!--T:125-->
* [[Java Developer Guide]]
* [[Project:Java/Why_build_from_source]]
* [[Project:Java/Getting_Involved]]

== External resources == <!--T:110-->

<!--T:99-->
* The [http://news.gmane.org/gmane.linux.gentoo.java gentoo-java], [http://news.gmane.org/gmane.linux.gentoo.user gentoo-user], and [http://news.gmane.org/gmane.linux.gentoo.devel gentoo-dev] mailing list archives
* {{IRC|gentoo}} and {{IRC|gentoo-java}} on IRC
* [https://forums.gentoo.org/viewtopic-t-901036.html Java 7 and bootstrapping icedtea] on the Gentoo forums

<!--T:97-->
More information can be found offline:

<!--T:117-->
* {{c|man java-config}}
* {{c|java-config --help}}

<!--T:111-->
For suggestions or questions regarding this document, please email the Gentoo Java team: {{Mail|java@gentoo.org}}

== References == <!--T:130-->

<!--T:131-->
{{Reflist}}
</translate>

[[Category:Programming_language]]

{{Migrated|originalauthors=Joshua Nichols, Karl Trygve Kalleberg, {{Dev|nightmorph}}}}
