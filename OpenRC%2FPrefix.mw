This work is a reponse to {{Bug|196294}}

The following guideline applies to a Gentoo Prefix on RHEL-5.6 amd64, for other setups it should be similar. Feel free to documents corners cases here.
= USING heroxbd's openrc-prefix overlay =
This is a temperary overlay only for OpenRC/Prefix testing. The changes will be reviewed and included in the official tree gradually. As of May 12, 2012. The overlay includes portage (for keeping /etc/{init,conf}.d dirs), openrc (for adding back Prefix support) and baselayout (for prefix dir).

Get to a dir where you intend to put the overlay, say, ${HOME}/openrc.

{{GenericCmd|<pre>git clone git://github.com/heroxbd/prefix-openrc-overlay.git
Cloning into 'prefix-openrc-overlay'...
remote: Counting objects: 49, done.
remote: Compressing objects: 100% (34/34), done.
remote: Total 49 (delta 13), reused 49 (delta 13)
Receiving objects: 100% (49/49), 96.96 KiB | 60 KiB/s, done.
Resolving deltas: 100% (13/13), done.
</pre>
}}

Populate this directory to portage,

{{File|${EPREFIX}/etc/make.conf|populate overlay in make.conf|<pre>
...
PORTDIR_OVERLAY="/home/benda/openrc/prefix-openrc-overlay"
...
</pre>}}

Replace the directory to yours. Details for playing with overlay can be found at [[Overlay#Manually_setting_overlay_locations]].

= GETTING baselayout-2 emerged on prefix =
OpenRC is designed with baselayout-2, while baselayout-prefix corresponds to =baselayout-1.12.* when it was first initiated. Emerging baselayout-2.1 is not out of box:

{{GenericCmd|<pre>emerge -avt baselayout

These are the packages that would be merged, in reverse order:

Calculating dependencies... done!
[nomerge       ] sys-apps/baselayout-2.1  USE="-build"  [1]
[ebuild  N    *]  sys-apps/openrc-9999  USE="ncurses unicode -debug (-pam) (-selinux) -static-libs" 0 kB [1]
[ebuild  N    *]   sys-libs/glibc-9999  USE="-debug -gd -glibc-omitfp (-hardened) (-multilib) -profile (-selinux) -vanilla" 0 kB [2]
[ebuild  N    *]   sys-apps/baselayout-2.1  USE="-build" 40 kB [1]
[ebuild  N     ]   virtual/init-0  0 kB [0]
[ebuild  N    *]    sys-apps/sysvinit-2.88-r3  USE="(-ibm) (-selinux) -static" 104 kB [0]
[nomerge       ] sys-libs/glibc-9999  USE="-debug -gd -glibc-omitfp (-hardened) (-multilib) -profile (-selinux) -vanilla"  [2]
[ebuild  N     ]  sys-libs/timezone-data-2012c  USE="nls" 334 kB [0]
[blocks B      ] <sys-apps/util-linux-2.20 ("<sys-apps/util-linux-2.20" is blocking sys-apps/sysvinit-2.88-r3)
</pre>}}

Let's eliminate the blocks.

== glibc and sysvinit ==
In Gentoo Prefix, glibc and sysvinit are supposed to be provided outside Prefix by host OS. Let's tell portage that we have any version of glibc and sysvinit she wants:

{{File|${EPREFIX}/etc/portage/profile/package.provided|Example for providing glibc and sysvinit from outside|<pre>
sys-libs/glibc-9999
sys-apps/sysvinit-9999
</pre>}}

now it becomes,

{{GenericCmd|<pre>emerge --autounmask-write -avt baselayout

These are the packages that would be merged, in reverse order:

Calculating dependencies... done!
[nomerge       ] sys-apps/baselayout-2.1  USE="-build"  [1]
[ebuild  N    *]  sys-apps/openrc-9999  USE="ncurses unicode -debug (-pam) (-selinux) -static-libs" 0 kB [1]
[ebuild  N     ]   sys-apps/baselayout-2.1  USE="-build" 0 kB [1]
[ebuild  N     ]   virtual/init-0  0 kB [0]

Total: 3 packages (3 new), Size of downloads: 0 kB
Portage tree and overlays:
 [0] /home/benda/gentoo/usr/portage
 [1] /home/benda/art/openrc/overlay

The following keyword changes are necessary to proceed:
#required by sys-apps/baselayout-2.1, required by baselayout (argument)
=sys-apps/openrc-9999 **
</pre>}}

== replace baselayout-prefix with baselayout-2 ==
{{GenericCmd|<pre>$ emerge -C baselayout-prefix

 * This action can remove important packages! In order to be safer, use
 * `emerge -pv --depclean <atom>` to check for reverse dependencies before
 * removing packages.

!!! 'sys-apps/baselayout-prefix' is part of your system profile.
!!! Unmerging it may be damaging to your system.
...
</pre>}}
Ignore the warnings.

Finally emerge baselayout-2 and openrc-9999,
{{GenericCmd|emerge --autounmask-write -avt baselayout}}
Unmask openrc-9999 as guided. (This is just a temperary solution, will be integraded into openrc soon.)

== OpenRC config ==

Use the prefix feature set in openrc,

{{File|${EPREFIX}/etc/rc.conf|select prefix|<pre>
...
# LINUX SPECIFIC OPTIONS

# This is the subsystem type. Valid options on Linux:
# ""        - nothing special
# "lxc"     - Linux Containers
# "openvz"  - Linux OpenVZ
# "prefix"  - Prefix
# "uml"     - Usermode Linux
# "vserver" - Linux vserver
# "xen0"    - Xen0 Domain
# "xenU"    - XenU Domain
# If this is commented out, automatic detection will be attempted.
# Note that autodetection will not work in a prefix environment or in a
# linux container.
#
# This should be set to the value representing the environment this file is
# PRESENTLY in, not the virtualization the environment is capable of.
rc_sys="prefix"
...
</pre>}}

remove dmesg from sysinit, because we don't manange dmesg from Preifx
{{GenericCmd | rc-update del dmesg sysinit}}

= USING a patched portage not to remove initd and confd from ebulds =
Default portage in prefix removes /etc/{init,conf}.d directories with prompts like
{{GenericCmd |<pre> * removed /etc/init.d and /etc/conf.d directories until bug #196294 has been resolved </pre> }}

Let's emerge portage from heroxbd's overlay to disable this behavior,
{{GenericCmd |emerge -av portage}}

= EXAMPLE: tinc =
tinc is a decentralized VPN. A tinc started from Gentoo Prefix can serve as a relay node in the VPN, if tun/tap is not available for normal user.

emerge tinc, or re-emerge to get its initd and confd files back with our new portage,
{{GenericCmd |emerge -av tinc}}

== prefixify init script ==
{{GenericCmd|for d in usr var etc; do sed -i "s,/${d},${EPREFIX}/${d},g" ${EPREFIX}/etc/init.d/tincd; done}}

fix shebang in the init script,
{{GenericCmd|sed -i "s,\!/sbin,\!${EPREFIX}/sbin," ${EPREFIX}/etc/init.d/tincd}}

== fire up tincd from OpenRC ==
Make necessary changes in ${EPREFIX}/etc/conf.d/tinc.networks and ${EPREFIX}/etc/tinc according to your specific setup.

Add tincd into default runlevel
{{GenericCmd|<pre>rc-update add tincd default
 * service tincd added to runlevel default
</pre>}}

Finally we are done with
{{GenericCmd|<pre>rc default
 * Starting tinc VPN networks ...
 * Starting tinc network manifold ... [ ok ]
 * Starting local                     [ ok ]
</pre>}}

= Example: nginx =
== prefixify init script ==
{{RootCmd|for d in usr var etc; do sed -i "s,/${d},${EPREFIX}/${d}," ${EPREFIX}/etc/init.d/nginx; done}}
{{RootCmd|sed -i "s,\!/sbin,\!${EPREFIX}/sbin," ${EPREFIX}/etc/init.d/nginx}}
== prefixify nginx.conf ==
{{RootCmd|for d in usr var etc; do sed -i "s,/${d},${EPREFIX}/${d}," ${EPREFIX}/etc/nginx/nginx.conf; done}}
