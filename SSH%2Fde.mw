<languages />

{{Metadata|abstract=SSH (Secure Shell) ist ein verschlüsseltes Terminal-Programm, das das klassische telnet-Tool auf unixoiden Betriebssystemen ersetzt.}}

{{InfoBox stack
|{{InfoBox homepage|http://www.openssh.org|header=true}}
|{{InfoBox wikipedia|Secure Shell}}
}}
'''SSH''' ('''S'''ecure '''SH'''ell) ist ein verschlüsseltes Terminal-Programm, dass das klassische [[Wikipedia:de:telnet|telnet]]-Tool auf unixoiden Betriebssystemen ersetzt.

Zusätzlich zum Terminal-Fernzugriff, welcher durch das Hauptprogramm {{c|ssh}} bereitgestellt wird, enthält die SSH-Programmsammlung inzwischen auch andere Werkzeuge wie {{c|scp}} ('''s'''ecure '''c'''o'''p'''y) oder {{c|sftp}} ('''s'''ecure '''f'''ile '''t'''ransfer '''p'''rotocol).

Ursprünglich war SSH nicht frei. Heute ist die populärste und de-facto Standard-Implementation [https://www.openbsd.org/ OpenBSD]'s OpenSSH, welche bei Gentoo vorinstalliert ist.

== Installation ==

=== Installation überprüfen ===

Die meisten Bereitstellungen von Gentoo Linux haben OpenSSH bereits auf dem System installiert. Dies kann durch Ausführen des {{c|ssh}}-Befehls überprüft werden. Sofern es installiert ist sollte eine Gebrauchsanweisung ausgegeben werden:

{{Cmd|ssh|output=<pre>
usage: ssh [-1246AaCfgKkMNnqsTtVvXxYy] [-b bind_address] [-c cipher_spec]
           [-D [bind_address:]port] [-E log_file] [-e escape_char]
           [-F configfile] [-I pkcs11] [-i identity_file]
           [-L [bind_address:]port:host:hostport] [-l login_name] [-m mac_spec]
           [-O ctl_cmd] [-o option] [-p port]
           [-Q cipher | cipher-auth | mac | kex | key]
           [-R [bind_address:]port:host:hostport] [-S ctl_path] [-W host:port]
           [-w local_tun[:remote_tun]] [user@]hostname [command]
</pre>}}

Wenn keine Gebrauchsanweisung ausgegeben wird ist {{c|ssh}} entweder beschädigt oder nicht installiert. Es ist auch möglich dass ein Nutzer OpenSSH neu baut um eine neue USE-Konfiguration zu inkludieren. Wie auch immer, zum Betrachten von möglichen USE-Konfigurationen weitermachen.

=== USE-Flags ===

{{USEflag|package=net-misc/openssh}}

=== Emerge ===

Nach dem Ändern der notwendigen USE-Flags das Installieren oder Neubauen von OpenSSH nicht vergessen:

{{emerge|net-misc/openssh|params+=--changed-use}}

== Konfiguration ==

=== Schlüssel erstellen ===

Um eine sichere Shell bereitzustellen, werden kryptographische Schlüssel für die Ver- und Entschlüsselung sowie Hashing-Funktionen von SSH benutzt.

Beim ersten Start des SSH-Services werden die System-Schlüssel erzeugt. Diese können mittels des {{c|ssh-keygen}}-Befehls (neu-)erstellt werden .

Um Schlüssel für das SSH-Protokoll 1 (welches normalerweise nicht mehr aktiviert ist; es wurde durch die Protokollversion 2 ersetzt) zu erzeugen, den folgenden Befehl ausführen:

{{RootCmd|/usr/bin/ssh-keygen -t rsa1 -b 1024 -f /etc/ssh/ssh_host_key -N ""}}

Um die Schlüssel für das SSH-Protokoll Version 2 zu erzeugen (DSA und RSA Algorithmen):

{{RootCmd|/usr/bin/ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key -N ""
|/usr/bin/ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N ""}}

=== Server-Konfiguration ===

Der SSH Server wird normalerweise in der Datei {{Path|/etc/ssh/sshd_config}} konfiguriert, weitere Einstellungen, einschließlich des Ortes, an dem sich die obige Konfiguration befindet, können in {{Path|/etc/conf.d/sshd}} getätigt werden, inklusive das Ändern des Ortes der Konfigurationsdatei. Für Details über die Konfiguration sollte die [[man page]] "sshd_config" konsultiert werden.

Benutzer sollten für eine sicherheitsfokussierte Konfiguration [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html Sven's OpenSSH guide] studieren.

=== Klient-Konfiguration ===

Der {{c|ssh}}-Klient und zugehörige Programme ({{c|scp}}, {{c|sftp}}, etc.) können in den folgenden Dateien konfiguriert werden:

* {{Path|~/.ssh/config}}
* {{Path|/etc/ssh/ssh_config}}

Für weitere Information das {{Path|ssh_config}}-Handbuch lesen:

{{Cmd|man ssh_config}}

=== Passwortlose Authentifizierung ===

Praktisch für das Verwalten von [[git]]-Servern.

==== Klient ====

Auf dem Klienten folgenden Befehl ausführen:

{{Cmd|ssh-keygen -t rsa|output=<pre>
Generating public/private rsa key pair.
Enter file in which to save the key (/home/larry/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/larry/.ssh/id_rsa.
Your public key has been saved in /home/larry/.ssh/id_rsa.pub.
The key fingerprint is:
de:ad:be:ef:15:g0:0d:13:37:15:ad:cc:dd:ee:ff:61 larry@client
The key's randomart image is:
+--[ RSA 2048]----+
|                 |
|     .           |
| . .. n   .      |
|   . (: . .      |
|  o   . . : .    |
| . ..: >.> .     |
|  * ?. .         |
| o.. .. ..       |
| :. .  ! .       |
+-----------------+
</pre>}}

==== Server ====

Sicherstellen dass ein Konto für den Nutzer auf dem Server existiert und dann die Klienten-{{Path|id_rsa.pub}}-Datei in der {{Path|~/.ssh/authorized_keys}}-Datei des Servers im Heimverzeichnis des Nutzers platzieren.

==== Einzel-Maschinen-Test ====

Die oben beschriebene Prozedur kann lokal getestet werden:

{{Cmd|ssh-keygen -t rsa|output=<pre>
Generating public/private rsa key pair.
Enter file in which to save the key (/home/larry/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
...
</pre>}}

{{Cmd|mv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys}}

{{Cmd|ssh localhost}}

=== Eindringensvermeidung ===

SSH ist ein oft angegriffener Dienst. Werkzeuge wie [[sshguard]] und [[fail2ban]] überwachen Logs und blacklisten entfernte Nutzer die wiederholt versuchten und scheiterten, sich anzumelden. Wie benötigt verwenden um ein häufig attackiertes System abzusichern.

== Bedienung ==

=== Dienste ===

==== OpenRC ====

Den OpenSSH-Daemon zum Default-Runlevel hinzufügen:

{{RootCmd|rc-update add sshd default}}

Den sshd-Daemon starten mit:

{{RootCmd|rc-service sshd start}}

Der OpenSSH-Server kann wie jeder andere OpenRC-Dienst gesteuert werden:

{{RootCmd
|rc-service sshd start
|rc-service sshd stop
|rc-service sshd restart
}}

{{Note|Aktive Verbindungen zum Server bleiben beim Ausführen von {{c|rc-service sshd restart}} intakt.}}

==== Systemd ====

Um den OpenSSH-Daemon mit dem System zu starten:

{{RootCmd|systemctl enable sshd.service|output=<pre>
Created symlink from /etc/systemd/system/multi-user.target.wants/sshd.service to /usr/lib64/systemd/system/sshd.service.
</pre>}}

Um den OpenSSH-Daemon jetzt zu starten:

{{RootCmd|systemctl start sshd.service}}

Um zu überprüfen ob der Dienst gestartet wurde:

{{RootCmd|systemctl status sshd.service}}

== Fehlersuche ==

Es gibt drei verschiedene Level von Debug-Modi, die bei der Problemlösung helfen können. Mit der <code>-v</code>-Option gibt SSH Debugging-Nachrichten über seinen Fortschritt aus. Dies ist hilfreich bei dem Debugging von Verbindungs-, Authentifikations- und Konfigurationsproblemen. Mehrfache <code>-v</code>-Optionen erhöhen die Verbosität. Das Maximum ist drei.

{{Cmd
|ssh example.org -v
|ssh example.org -vv
|ssh example.org -vvv
}}

=== Death of long-lived connections ===

Many internet access devices perform Network Address Translation ([[NAT]]), a process that enables devices on a private network such as that typically found in a home or business place to access foreign networks, such as the internet, despite only having a single IP address on that network. Unfortunately, not all NAT devices are created equal, and some of them incorrectly close long-lived, occasional-use TCP connections such as those used by SSH.  This is generally observable as a sudden inability to interact with the remote server, even though the {{c|ssh}} client program has not exited.

In order to resolve the issue, OpenSSH clients and servers can be configured to send a 'keep alive', or invisible message aimed at maintaining and confirming the live status of the link:

* To enable keep alive ''for all clients connecting to your local server'', set <code>ClientAliveInterval 30</code> (or some other value, in seconds) within the {{Path|/etc/ssh/sshd_config}} file.
* To enable keep alive ''for all servers connected to by your local client'', set <code>ServerAliveInterval 30</code> (or some other value, in seconds) within the {{Path|/etc/ssh/ssh_config}} file.

=== X11 forwarding, not forwarding, or tunneling ===

'''Problem''': After having made the necessary changes to the configuration files for permitting X11 forwarding, it is discovered X applications are executing on the server and are not being forwarded to the client.

'''Solution''': What is likely occurring during SSH login into the remote server or host, the <var>DISPLAY</var> variable is either being unset or is being set ''after'' the SSH session sets it.

Test for this scenario perform the following after logging in remotely:

{{Cmd|echo $DISPLAY|output=<pre>
localhost:10.0
</pre>}}

The output should be something similar to <code>localhost:10.0</code> or <code>localhost2.local:10.0</code> using server side <code>X11UseLocalhost no</code> setting. If the usual <code>:0.0</code> is not displayed, check to make sure the <var>DISPLAY</var> variable within {{Path|~/.bash_profile}} is not being unset or re-initializing. If it is, remove or comment out any custom initialization of the <var>DISPLAY</var>variable to prevent the code in {{Path|~/.bash_profile}} from executing during a SSH login:

{{Cmd|ssh -t larry@localhost2 bash --noprofile}}

Be sure to substitute <code>larry</code> in the command above with the proper username.

A trick that works to complete this task would be to define an alias within the users' {{Path|~/.bashrc}} file.

== See also ==

* [[Security_Handbook/Securing_services#ssh|Securing the SSH service]] in the Gentoo Security Handbook
* [[Keychain|Gentoo Linux Keychain Guide]]
* [[autossh]] - Detects when SSH connections drop and auto-reconnects.
* [[SCP]] - A Secure Copy Program that comes with the SSH suite.
* [[SFTP]] - Secure File Transfer Protocol client that comes with the SSH suite.
* [[SSHFS]] - A FUSE based SSH powered mount client.

== External resources ==

* [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html Securing OpenSSH] - Gentoo developer documentation.


[[Category:SSH]]
[[Category:Server]]
[[Category:Daemons]]
