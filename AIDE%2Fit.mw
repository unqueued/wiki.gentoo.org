<languages />


{{Metadata|abstract=AIDE ('''''A'''dvanced '''I'''ntrusion '''D'''etection '''E'''nvironment'') è un HIDS (Host-based Intrusion Detection System). AIDE scansiona file ed altre risorse, immagazzinando informazioni riguardo a questi in un database. Le informazioni immagazzinate includono alcuni attributi chiave dei file come l'hash, la dimensione, ownership, modification time, creation time, ed altri. Dopo la creazione iniziale del database, AIDE riscansiona il sistema e compara i nuovi risultati con quelli precedentemente immagazzinati. Se i valori differiscono, il file è stato modificato ed il cambiamento viene riportato. L'idea dietro all'utilizzo di AIDE è di creare un'immagine del sistema e poi compararla con una già creata in modo da identificare file compromessi.}}

AIDE ('''''A'''dvanced '''I'''ntrusion '''D'''etection '''E'''nvironment'') è un HIDS (Host-based Intrusion Detection System). AIDE scansiona file ed altre risorse, immagazzinando informazioni riguardo a questi in un database. Le informazioni immagazzinate includono alcuni attributi chiave dei file come l'hash, la dimensione, ownership, modification time, creation time, ed altri. Dopo la creazione iniziale del database, AIDE riscansiona il sistema e compara i nuovi risultati con quelli precedentemente immagazzinati. Se i valori differiscono, il file è stato modificato ed il cambiamento viene riportato. L'idea dietro all'utilizzo di AIDE è di creare un'immagine del sistema e poi compararla con una già creata in modo da identificare file compromessi.

__TOC__

== Installazione ==

=== Opzioni USE ===

L'installazione di {{Package|app-forensics/aide}} è semplice una volta settate le flags USE.
{{USEflag|package=app-forensics/aide}}

Le flag USE specifiche ad un certo pacchetto dovrebbero essere definite in {{Path|/etc/portage/package.use}}, oppure in un file di testo dentro una directory chiamata {{Path|/etc/portage/package.use}}. Per esempio, utilizzando {{Path|/etc/portage/package.use}} come ''file'':

{{FileBox|filename=/etc/portage/package.use|title=Abilitazione supporto zlib per AIDE|1=<pre>
app-forensics/aide zlib
</pre>}}

=== Emerge ===

Dopo aver settato le flag USE, installate il software:

{{Emerge|app-forensics/aide}}

== Configurazione ==

=== Panoramica ===

Il file di configurazione per {{Package|app-forensics/aide}} non è così spaventoso come può sembrare a prima vista. Il file di default si trova in {{Path|/etc/aide/aide.conf}}, ma gli amministratori possono facilmente creare molteplici file se necessario. Oltre ad alcune variabili, il file di configurazione utilizza una notazione breve per i vari aspetti dei file da scansionare (solo hash o anche informazioni sugli inode, ecc.) e quali file scansionare.

Di seguito le variabili relative al database:

{{FileBox|filename=aide.conf|title=Variabili di configurazione del database di AIDE|1=
database=file:/var/lib/aide/aide.db
database_out=file:/var/lib/aide/aide.db.new
}}

La prima riga dell'esempio sopra (<code>database</code>) definisce la collocasione del database che contiene i valori conosciuti. La seconda riga (<code>database_out</code>) definisce dove scrivere il nuovo database quando viene generato. Si raccomanda di non puntare queste variabili allo stesso database (con lo stesso percorso per ogni variabile). Se un database deve sovrascrivere l'altro, il miglior metodo è di "copiare manualmente" il nuovo db da un posto all'altro. Per esempio, per sovrascrivere il primo database con il secondo, è possibile usare questo comando:

{{RootCmd|cp /var/lib/aide/aide.db.new /var/lib/aide/aide.db}}

Per ora, lasciate le impostazioni sul database così come sono; le vedremo in dettaglio in seguito.

Next, consider the variables which are short-hand notations for what information to record in the database.

{{FileBox|filename=aide.conf|title=Configurazione di AIDE utilizzando la notazione breve|lang=ini|1=
Binlib = p+i+n+u+g+s+b+m+c+md5+sha1
Logs = p+i+n+u+g+S
...
}}

{{Note|I codici <code>md5</code> e <code>sha1</code> significano ovviamente che saranno calcolati hash di tipo MD5 e SHA-1 (rispettivamente).}}

Le lettere sono descritte nel file {{Path|aide.conf}} di default, ma per comodità riportiamo nella tabella seguente le opzioni più comuni:

{| class="table"
! Short
! Description
|-
| <code>p</code>
| Permessi
|-
| <code>i</code>
| Numero dell'inode
|-
| <code>n</code>
| Numero di (hard)link
|-
| <code>u</code>
| Informazioni sull'Utente (User)
|-
| <code>g</code>
| Informazioni sul Gruppo (Group)
|-
| <code>s</code>
| Dimensione (Size)
|-
| <code>S</code>
| Dimensione (Size, ma viene riportato solo il calo di dimensione - la crescita è consentita)
|-
| <code>b</code>
| Conta dei blocchi (Block count)
|-
| <code>m</code>
| Modification time
|}

Di seguito un'overview di quali directory scansionare e di cosa cercare. Con le tre righe d'esempio seguenti, AIDE è configurato per esaminare le directory {{Path|/bin}} e {{Path|/sbin}} con gli elementi identificati dalla notazione in <var>Binlib</var>. Il path {{Path|/var/log}} utilizzerà invece quanto definito nella variabile <var>Logs</var> sopra.

{{FileBox|filename=aide.conf|title=Opzioni sugli obbiettivi da scansionare|1=
/bin Binlib
/sbin Binlib
/var/log Logs
...
}}

AIDE supporta le espressioni regolari ed agli utenti è permesso "rimuovere" le corrispondenze. Per esempio, per controllare il path {{Path|/var/log}} ma non il {{Path|/var/log/portage}} è possibile impostare un set di esclusioni utilizzando il <code>!</code> prima dei percorsi da escludere:

{{FileBox|filename=aide.conf|title=Altri obbiettivi di scan|1=
/var/log Logs
!/var/log/portage
}}

=== Opzioni dettagliate ===

The configuration file is based on regular expressions, macros and rules for files and directories. Users experienced with the [https://www.tripwire.org/ tripwire solution] will have no difficulties dealing with AIDE's configuration file. The following macros are available:

{| class="table table-striped table-condensed" style="width: auto;"
|-
! Macro !! Description !! Syntax
|-
| <code>ifdef</code> || If defined || <code>@@ifdef "name"</code>
|-
| <code>ifndef</code> || If not defined || <code>@@ifndef "name"</code>
|-
| <code>define</code> || Define a variable || <code>@@define "name" "value"</code>
|-
| <code>undef</code> || Undefine a variable || <code>@@undef "name"</code>
|-
| <code>ifhost</code> || if "hostname" || <code>@@ifhost "hostname"</code>
|-
| <code>ifnhost</code> || if not "hostname" || <code>@@ifnhost "hostname"</code>
|-
| <code>endif</code> || Endif must be used after any of the above macros except define and undef || <code>@@endif</code>
|}

These macros become very handy when dealing with multiple Gentoo boxes, while using the same configuration on all. Not all machines run the same services or even have the same users.

Next we have a set of flags which identify the permissions, file properties, checksums, cryptographic hashes, ... to validate on files and directories.

{| class="table table-striped table-condensed" 
|-
! Flag !! Description
|-
| <code>p</code> || permissions
|-
| <code>i</code> || inode
|-
| <code>n</code> || number of links
|-
| <code>u</code> || user
|-
| <code>g</code> || group
|-
| <code>s</code> || size
|-
| <code>b</code> || block count
|-
| <code>m</code> || mtime
|-
| <code>a</code> || atime
|-
| <code>c</code> || ctime
|-
| <code>S</code> || check for growing size
|-
| <code>md5</code> || md5 checksum
|-
| <code>sha1</code> || sha1 checksum
|-
| <code>rmd160</code> || rmd160 checksum
|-
| <code>tiger</code> || tiger checksum
|-
| <code>R</code> || <code>p+i+n+u+g+s+m+c+md5</code>
|-
| <code>L</code> || <code>p+i+n+u+g</code>
|-
| <code>E</code> || Empty group
|-
| <code><nowiki>></nowiki></code> || Growing logfile <code>p+u+g+i+n+S</code>
|}

If AIDE is compiled with mhash support, then the following flags can be used as well:

{| class="table table-striped table-condensed"
|-
! Flag !! Description
|-
| <code>haval</code> || haval checksum
|-
| <code>gost</code> || gost checksum
|-
| <code>crc32</code> || crc32 checksum
|}

=== Inizializzazione e scansioni frequenti ===

Per un setup di base di AIDE, è necessario inizializzare un database. Questo avviene utilizzando l'opzione <code>--init</code>. Per sincerarsi che AIDS utilizzi le configurazioni definite nelle sezioni precedenti, assicurarsi di passare l'opzione <code>--config</code> con il puntamento alla configurazione corretta:

{{RootCmd|aide --init --config{{=}}/etc/aide/aide.conf|output=<pre>
AIDE, version 0.14.2
  
### AIDE database at /var/lib/aide/aide.db.new initialized.
</pre>}}

Una volta inizializzato, ogni database preesistente può essere sovrascritto:

{{RootCmd|cd /var/lib/aide; cp aide.db.new aide.db}}

Con il nuovo database disponibile, le risorse possono essere esaminate nuovamente utilizzando l'opzione <code>--check</code>. Questo creerà un altro database contente ogni modifica fatta al filesystem dalla creazione del primo database. Assicuratevi di utilizzare l'opzione <code>--config</code> con il puntamento alla stessa configurazione utilizzata per la creazione del primo database:

{{RootCmd|aide --check --config{{=}}/etc/aide/aide.conf|output=<pre>
AIDE, version 0.14.2
  
### All files match AIDE database. Looks okay!
</pre>}}

Se ci sono state modifiche, verrà inviata una notifica:

{{RootCmd|aide --check --config{{=}}/etc/aide/aide.conf|output=<pre>
AIDE found differences between database and filesystem!!
Start timestamp: 2013-04-11 15:31:02
  
Summary:
  Total number of files:        318
  Added files:                  0
  Removed files:                0
  Changed files:                2
  
  
---------------------------------------------------
Changed files:
---------------------------------------------------
  
changed: /etc/pam.d
changed: /etc/pam.d/run_init
  
---------------------------------------------------
Detailed information about changes:
---------------------------------------------------
  
  
Directory: /etc/pam.d
  Mtime    : 2013-04-09 22:11:18              , 2013-04-11 15:31:01
  Ctime    : 2013-04-09 22:11:18              , 2013-04-11 15:31:01
  
File: /etc/pam.d/run_init
  Size     : 205                              , 208
  Mtime    : 2013-04-09 22:11:18              , 2013-04-11 15:31:00
  Ctime    : 2013-04-09 22:11:18              , 2013-04-11 15:31:01
  Inode    : 394203                           , 394053
  MD5      : Mm0KPzpPt63eqGClTJ/KaQ==         , eLUrP2BsIq25f3AZX+dlBA==
  SHA1     : NrQtsUeOsXS4RHUq+ejYBne5V6E=     , 5A6ef6VJCcMiqEjKQ7e9xkBNZB8=
</pre>}}

== Consigli e Best practices ==

=== Specificate cosa esaminare ===

La configurazione di default è utile, ma necessità di alcune rifiniture per andare incontro alle necessità dell'utente. E' dunque importante sapere quali file esaminare e perché.

Per esempio, per esaminare solo i file relativi all'autenticazione ma non altri, utilizzate una configurazione come la seguente:

{{FileBox|filename=aide.conf|title=Targets relativi all'autenticazione|1=
# SELinux policy e configurazioni
/etc/selinux ConfFiles
# DB di autenticazione 
/etc/passwd ConfFiles
/etc/shadow ConfFiles
/etc/nsswitch.conf ConfFiles
# Configurazioni Autenticazione
/etc/pam.d ConfFiles
/etc/securetty ConfFiles
/etc/security ConfFiles
# librerie PAM 
/lib(64)?/security Binlib
}}

=== Mantenete il database offline ed in sola lettura ===

Un secondo aspetto importante è che il database risultante dovrebbe essere memorizzato "offline" quando "non" necessario e dovrebbe essere utilizzato in sola lettura quando "è" necessario. Questo aggiunge un certo grado di protezione contro un utente malevolo che possa aver compromesso la macchina e modificato il database. Per esempio, memorizzare il database su una share NFS read-only (per i server) o su un media non scrivibile (quando l'accesso fisico alla macchina è possibile), come un CD o una chiavetta USB in sola lettura.

Dopo aver memorizzato il database in una posto in sola lettura, aggiornate il file {{Path|aide.conf}} in modo che la variabile <code>database</code> punti a questo nuovo file.

=== Fare scansioni offline ===

Se possibile, provate ad utilizzare metodi di scansione offline per i vostri sistemi. In caso di piattaforme virtuali, è possibile fare delle snapshot del sistema, montare queste snapshot (in read-only) e fare lo scan su quest'ultimo filesystem.

{{RootCmd|losetup /dev/loop0 /srv/virt/gentoo.img
|vgscan
|vgchange -ay
|mount -o ro /dev/volgrpX/volumeY /mnt/image
|chroot /mnt/image
|aide --check --config{{=}}/path/to/aide.conf
|exit
|umount /mnt/image
|vgchange -an /dev/volgrpX
|losetup -d /dev/loop0}}

L'approccio sopra utilizza {{c|chroot}}. Questo è necessario solamente quando il filesystem iniziale è stato scansionato dal sistema "live" e l'amministratore vuole eseguire una verifica offline. Se lo scan iniziale è stato fatto anch'esso offline, allora il file {{Path|aide.conf}} punterà già al mount point corretto ed il database utilizzerà quei percorsi immediatamente, quindi non ci sarà bisogno di alcun chroot.

== Ulteriori informazioni ==

* In [[Integrity/Concepts]] vengono discussi concetti relativi all'integrità dei sistemi (in inglese)

== Risorse esterne ==

* [http://archive09.linux.com/articles/113919 Tutorial sull'utilizzo di AIDE (Linux.com)]
* [http://www.symantec.com/connect/articles/securing-linux-aide Articolo "Difendere Linux con AIDE" (Symantec.com)]


[[Category:Server and Security]]
