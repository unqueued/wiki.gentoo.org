<languages />
<translate>

{{Metadata|abstract=Deblobing Gentoo Kernel Sources}}

{{InfoBox stack
|{{InfoBox homepage|https://www.fsfla.org|text=Free Software Foundation Latin America|header=true}}
|{{InfoBox generic|https://linux-libre.fsfla.org/pub/linux-libre/releases/|text=Linux-libre releases}}
}}

From Wikipedia: ''A binary blob is a closed-source binary-only piece of software without publicly available source code.'' Since 1996, Linux kernel includes more and more binary blobs, to handle devices with closed-sources firmwares only (and among these devices, those without technical documentation which would authorize free firmware development for them). Proprietary software always introduces freedom, security or privacy concerns.

Linux kernel deblobing is the operation which removes binary blobs, to get a completely free kernel. This is done with two shell scripts written by Brian Brazil, Jeff Moe and Alexandre Oliva, named <code>deblob-check</code> and <code>deblob-version</code>, where <code>''version''</code> represents the kernel revision. A third script which is for Linux tarballs, <code>deblob-main</code>, is not used here. See the scripts [https://www.fsfla.org/svn/fsfla/software/linux-libre/scripts/README README] to get information about them.

Thoses scripts are provided by the Free Software Foundation Latin America, for each kernel revision. FSFLA mainly provides Linux-libre distribution.

Once deblobed the kernel is compiled as usual. Deblobing kernel obviously means that '''devices with proprietary firmware only cannot be used''', like Intel wireless cards. Nvidia graphic cards will only use nouveau, the open source driver. See below how to get a list of removed blobs without kernel compilation.

== Deblobing ck and rc sources ==

For:
* {{Package|sys-kernel/ck-sources}}
* {{Package|sys-kernel/rt-sources}}


set the USE flag <code>deblob</code> in {{Path|/etc/portage/make.conf}}, sources will be automatically deblobed after being emerged.

== Deblobing gentoo-sources (or any other sources) ==

<code>deblob</code> USE flag no more deblobs {{Package|sys-kernel/gentoo-sources}}, this must be manually done.

{{Note|<code>linux-4.4.26-gentoo</code> is used in the following example.}}

=== Emerging Sources ===

If you restricted licences, for example with <code>ACCEPT_LICENSE="-* @FREE"</code> in {{Path|/etc/portage/make.conf}}, first accept <code>freedist</code> licence needed for Gentoo sources.

* If the file {{Path|/etc/portage/package.license}} exists:

{{RootCmd|echo 'sys-kernel/gentoo-sources freedist' >> /etc/portage/package.license}}

* If the file doesn't exist:

{{RootCmd|echo 'sys-kernel/gentoo-sources freedist' > /etc/portage/package.license}}

{{Note|{{Path|/etc/portage/package.license}} may be a directory, in this case issue for example:


{{RootCmd|echo 'sys-kernel/gentoo-sources freedist' > /etc/portage/package.license/gentoo-sources}}
}}

Then emerge Gentoo sources:

{{Emerge|sys-kernel/gentoo-sources}}

Then set {{Path|/usr/src/linux}} symlink to the emerged sources if <code>symlink</code> USE flag is not set for Gentoo sources:

First get the list of available sources:

{{RootCmd|eselect kernel list|output=<pre>
[1] linux-4.1.37-gentoo *
[2] linux-4.4.26-gentoo
etc.
</pre>}}

… then choose the right ones:

{{RootCmd|eselect kernel set linux-4.4.26-gentoo}}

Then change directory to {{Path|/usr/src/linux}}:

{{RootCmd|cd /usr/src/linux}}

=== Downloading Deblob Scripts ===

Scripts are on [https://linux-libre.fsfla.org/pub/linux-libre/releases/ Linux-libre server]. First make some vars to simplify lines to be entered:

* <code>version</code> will contain sources version and is the only one to be adapted, a minor version number is not mandatory;
* <code>main</code> will be generated, containing version without minor revision if needed, <code>4.4</code> for <code>4.4.26</code>;<br />''(If there is a release candidate string, <code>4.5-rc7</code> for example, enter <code>main</code> by hand —there is usually no rc string with gentoo-sources.)''
* <code>url</code> will contain downloading URL.


Making the vars:

{{RootCmd
|version{{=}}4.4.26
|if [ `echo $version {{!}} tr -cd '.' {{!}} wc -c` {{=}}{{=}} 2 ]; then main{{=}}`echo ${version%.*}`; else main{{=}}$version; fi
|url{{=}}https://linux-libre.fsfla.org/pub/linux-libre/releases/
}}

Downloading:

{{RootCmd
|wget $url$version-gnu/deblob-$main
|wget $url$version-gnu/deblob-$main.sign
|wget $url$version-gnu/deblob-check
|wget $url$version-gnu/deblob-check.sign
}}

Make the scripts executable by root only:

{{RootCmd|chmod 744 deblob-$main deblob-check}}

=== Verifying Signatures ===

First import or update the Linux-libre server key:

{{RootCmd|gpg --keyserver keys.gnupg.net --recv-key BCB7CF877E7D47A7}}

Then verify the signatures:

{{RootCmd
|gpg --verify deblob-$main.sign deblob-$main
|gpg --verify deblob-check.sign deblob-check
}}

{{Note|For each verification this warning is usual, because server's key was imported but not trusted:


{{GenericCmd|<pre>
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
</pre>}}
The important output is <code>Good signature</code> for each script.
}}

=== Python Version ===

Deblob scripts use the Python 2.7 interpreter. Emerge it:

{{Emerge|dev-lang/python:2.7|params+=--noreplace}}

=== Deblob Command ===

Deblobing can now be started (remember the <code>main</code> var):

{{RootCmd|PYTHON{{=}}"python2.7" ./deblob-$main}}

During the operation, which may be long, all deblobing information is displayed. After kernel compilation '''-gnu''' suffix will be appended to it's name, <code>4.4.26-gentoo-gnu</code> in this example.

=== List of Removed Blobs ===

To get the list of removed blobs with their kernel symbol names, redirect the deblob command output to a file:

{{RootCmd|PYTHON{{=}}"python2.7" ./deblob-$main > /path/to/file/deblob-$version.log}}

As kernel sources can be re-emerged after being deblobed, this is a convenient way, without kernel compilation, to investigate if targeted hardware should work without binary blobs.

== External resources ==

* The [https://en.wikipedia.org/wiki/Binary_blob Binary blob Wikipedia article]

</translate>

[[Category:Kernel]]
