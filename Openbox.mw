{{InfoBox stack
|{{InfoBox homepage|http://www.openbox.org|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox github|danakj/openbox}}
}}

'''Openbox''' is a highly configurable, next generation window manager with extensive standards support. 

== Installation ==

=== USE flags ===

{{USEflag|package=x11-wm/openbox}}

=== Emerge ===

Emerge Openbox:

{{Emerge|x11-wm/openbox}}

== Configuration ==

There are four important files to consider when configuring Openbox:

* {{Path|[[Openbox#autostart|autostart]]}}
* {{Path|[[Openbox#autostart|environment]]}}
* {{Path|[[Openbox#autostart|menu.xml]]}}
* {{Path|[[Openbox#autostart|rc.xml]]}}

Openbox installs these files to {{Path|/etc/xdg/openbox/}} To have Openbox use custom configurations for each user, copy the four configuration files above to the home directory of each user ({{Path|~/.config/openbox/}}), then modify each according to the users' needs.

For example:

{{Cmd|mkdir -p ~/.config/openbox/
|cp /etc/xdg/openbox/* ~/.config/openbox/}}

Then use a text editor of choice to start making changes:

{{Cmd|vim ~/.config/openbox/autostart}}

=== Starting ===

To start Openbox it is possible to use a [[display manager]] or the {{c|startx}} command.

To use {{c|startx}} with [[ConsoleKit]] support, setup ConsoleKit and create the following file:

{{FileBox|filename=~/.xinitrc|title=Openbox with ConsoleKit support|lang=bash|1=
exec ck-launch-session dbus-launch --sh-syntax --exit-with-session openbox-session
}}

=== autostart ===

The {{Path|autostart}} script is the ideal way to execute specific commands and programs when Openbox starts. It makes no difference if Openbox is started using the {{c|startx}} command or a display manager, {{Path|autostart}} will be executed either way.

The following is an example of some of the things that could be done in an {{Path|autostart}} file.

{{FileBox|filename=~/.config/openbox/autostart|title=Openbox autostart example|lang=bash|1=
# Sets the wallpaper to an image of choice.
wallpaper="planet.jpeg"

# Sets the DESKTOP_ENV variable to "OPENBOX"
DESKTOP_ENV="OPENBOX"

# The following are examples on how to call programs;
# unless programs are called in a daemon mode like the 
# conky example below an ampersand (&) will need to be included 
# in order to start the command and fork it to the background
# See job control for more information.
conky --daemonize

# Waits one second then starts the NetworkManager applet.
sleep 1 && nm-applet --sm-disable &

# Starts a light-weight X11 desktop panel.
fbpanel &

# Starts a lightweight image viewer to display the wallpaper.
feh --bg-scale ~/Artwork/${wallpaper} &

# Starts a simple battery monitor for the system tray.
batti &

# Starts a program that turns on numlock in X (after the X server starts).
numlockx &
}}

=== environment ===

Using the {{Path|environment}} file is the ideal place to export global variables and configure the Openbox environment:

{{FileBox|filename=~/.config/openbox/environment|title=Openbox environment example|lang=bash|1=
eval $(gpg-agent --daemon)
eval $(gnome-keyring-daemon)
if which dbus-launch >/dev/null && test -z "$DBUS_SESSION_BUS_ADDRESS"; then
       eval `dbus-launch --sh-syntax --exit-with-session`
fi
LANG="el_GR.UTF8"
}}

=== menu.xml ===

The {{Path|menu.xml}} file contains information for the right-click menus in Openbox. By default the right click menu is predefined with some common applications, so unless the applications are installed on the system most of the default links on the menu will not be operational.

==== Dynamic generation ====

===== openbox-menu =====

An application called {{c|openbox-menu}} can be used to dynamically generate new Openbox right click menus based off information defined in the {{Path|/etc/xdg/menus}} directory.

Install {{Package|x11-misc/openbox-menu}}:

{{Emerge|x11-misc/openbox-menu}}

After the menu generator has been installed, run the following command to create a new menu for the present user:

{{Cmd|openbox-menu}}

===== obmenu-generator =====

Another excellent choice for generating an Openbox right-click menu is
{{c|obmenu-generator}}.  It can generate either static or dynamic
(pipe) menus based on a user-modifiable schema and the .desktop files
installed by most applications.  It supports themed icons and
arbitrarily nested submenus.

[http://trizenx.blogspot.co.uk/2012/02/obmenu-generator.html http://trizenx.blogspot.co.uk/2012/02/obmenu-generator.html]

[https://github.com/trizen/obmenu-generator https://github.com/trizen/obmenu-generator]

Install {{Package|x11-misc/obmenu-generator}}:

{{Emerge|x11-misc/obmenu-generator}}

To generate a static menu with icons:

{{Cmd|obmenu-generator -i -s}}

To generate a pipe menu with icons:

{{Cmd|obmenu-generator -i -p}}

Add '-c' to automatically reconfigure a running instance of opoenbox:

{{Cmd|obmenu-generator -i -s -c}}

=== rc.xml ===

The {{Path|rc.xml}} file is used to specify keyboard and mouse bindings.

The following is a list of special key 'modifiers':

{| class="wikitable sortable"
|-
! Key !! Description
|-
| S || {{Key|Shift}} key
|-
| C || {{Key|Ctrl}} key
|-
| A || {{Key|Alt}} key
|-
| W || Super (windows) key
|-
| M || Meta key
|-
| H || Hyper key
|}

To make a key binding, combine modifiers and a key. They are separated with the <code>-</code> (dash) sign.

{{Important|Case matters! '''S''' (uppercase) equates to the {{Key|Shift}} key while '''s''' (lowercase) is the ''{{Key|s}} alphabet key''.}}

==== Key binding examples ====

{| class="wikitable"
|-
! Keybinding !! Modifier
|-
| {{Key|Alt}}+{{Key|o}} || A-o
|-
| {{Key|Ctrl}}+{{Key|Alt}}+{{Key|x}} || C-A-x
|-
| {{Key|Ctrl}}+{{Key|Alt}}+{{Key|Shift}}+{{Key|y}} || C-A-S-y
|-
| {{Key|Shift}}+{{Key|s}} || S-s
|}

{{Important| Any custom key bindings should go between <code><nowiki><keyboard></nowiki></code> and <code><nowiki></keyboard></nowiki></code> tags in {{Path|rc.xml}}.}}

To open a {{c|xterm}} window with '''Super+{{Key|t}}''', add the following to the {{Path|rc.xml}}:

{{FileBox|filename=~/.config/openbox/rc.xml|title=XTerm key bind example|1=
<keybind key="W-t">
  <action name="Execute">
    <command>xterm</command>
  </action>
</keybind>
}}

Keybinding a menu is also possible. For example, bind Openbox's right click and middle click menus with the following statement:

{{FileBox|filename=~/.config/openbox/rc.xml|title=Root-Menu key bind example|1=
<keybind key="W-x">
  <action name="ShowMenu">
    <menu>root-menu</menu>
  </action>
</keybind>

<keybind key="W-z">
  <action name="ShowMenu">
    <menu>client-list-combined-menu</menu>
  </action>
</keybind>
}}

In the above example, the right click menu is bound to a Super+{{Key|x}} key press combination, and the middle click menu is bound to Super+{{Key|z}} key press combo. It is useful to key bind applications especially when a user prefers to not use a panel program with Openbox.

== Tips ==

=== Icons in the Openbox menu ===

Since version 3.5.0, Openbox is able to have icons next to menu entries. 

# To emerge Openbox with imlib support add <code>imlib</code> USE flag to x11-wm/openbox in {{Path|/etc/portage/package.use}} {{RootCmd|echo "x11-wm/openbox imlib" >> /etc/portage/package.use}}
# Re-emerge Openbox so that support for the <code>imlib</code> USE flag is considered: {{Emerge|params+=--changed-use|x11-wm/openbox}}
# Add a <nowiki><showIcons>yes</showIcons></nowiki> line to the <nowiki><menu></nowiki> section of the {{Path|rc.xml}} file.
# Add in <nowiki>menu.xml icon="<path>"</nowiki> like this: {{FileBox|filename=~/.config/openbox/menu.xml|title=Manually add icons to Openbox example|1=<nowiki>
<menu label="Shells" icon="/usr/share/icons/shell.png">
<item label="xterm" icon="/usr/share/icons/xterm.png">
	<action name="Execute">
		<execute>xterm</execute>
	</action>
</item>
</nowiki>
}}

== See also ==

* [[Tint2]] - A lightweight panel/taskbar
* [[Openbox/Guide|Openbox/Guide]] - A Gentoo Openbox configuration guide
* [[LXDE]] - An ''extremely'' lightweight desktop environment based on Openbox.

== External resources ==

* https://wiki.archlinux.org/index.php/Openbox

[[Category:Window manager]]
