{{Stub}}
{{Warning|Work in progress, document unusable in current state}}

{{InfoBox stack
|{{InfoBox homepage|http://www.nongnu.org/quagga/|header=true}}
}}

Quagga is a free software routing suite. Quagga supports static routing, and dynamic routing protocols. 

==Installation==
{{USEflag|package=net-misc/quagga
|bgpclassless 
|caps 
|doc 
|ipv6+yes
|multipath 
|ospfapi 
|pam+yes
|readline 
|snmp
|tcp-zebra
}}

{{emerge|quagga}}

{{RootCmd|rc-update add quagga default}}

Before starting zebra you have to configure it, by creating a {{Path|/etc/quagga/zebra.conf}} file.
{{RootCmd|bzcat /usr/share/doc/quagga-0.99.22.4/samples/zebra.conf.sample.bz2 > /etc/quagga/zebra.conf}}

Start zebra daemon:
{{RootCmd|/etc/init.d/quagga start}}

Verify zebra is running:
{{RootCmd|netstat -tulpen {{!}} grep zebra|output=<pre>
tcp        0      0 0.0.0.0:2601            0.0.0.0:*               LISTEN      114        21947582   23564/zebra
</pre>}}

==Architecture==
The Quagga routing suite consists of 2 parts:
* zebra daemon
* routing proceses (RIP,OSPF,BGP)

The zebra daemon is a abstraction layer between the kernel and between the running routing processes.
Each routing protocol has its own specific daemon
{{RootCmd|rc-service -l {{|}} egrep 'bgp{{|}}rip{{|}}opsf{{|}}zebra'|output=<pre>
bgpd
ripd4
ripngd
zebra
</pre>}}

Not all routing protocols have ipv6 support enabled

{|class="wikitable"
!IPv4
!IPv6
|}

{|class="wikitable"
|ripd
|ospfd
|bgpd
|-
!colspan="3"|zebra
|-
!colspan="3"|Linux kernel routing table
|}

Quagga installed on a physical host acts as a dedicated router. Quagga updates the kernel routing table.
It modifies interface IP addressing, sets static routes and enables dynamic routing.

A linux host has dedicated management tools to configure physical interfaces:
* {{Package|sys-apps/iproute2}}
* {{Package|sys-apps/net-tools}}

The tools work only if the user has root access to the host. 

Quagga can modify, add and change the physical host interface configuration and routing table, without the need user having privileged root access to a dedicated machine. Quagga is basically a another tool for <iproute2> and <net-tools>, with additional networking functionality. Quagga is like iproute2 on steroids.

==Configuration==
Following steps will explain howto configure a IP address on a loopback interface using Quagga suite .Finally we will show the configured IP address outside of the Quagga suite. This will explain some basic usage of Quagga, how it works and interacts with linux kernel and IP configuration.

We assume following example IP configuration of a physical host:

{|class="wikitable"
|ripd
|ospfd
|bgpd
|-
!colspan="3"|zebra
|-
!colspan="3"|Linux kernel routing table
|}


Show the configuration using the linux <code>ip route</code> command
{{Cmd
|ip route|output=<pre>
default via 192.168.0.1 dev wlan0  metric 2005
127.0.0.0/8 dev lo  scope host
127.0.0.0/8 via 127.0.0.1 dev lo
192.168.0.0/24 dev wlan0  proto kernel  scope link  src 192.168.0.10  metric 2005
</pre>}}

Following sections will explain howto configure

The default quagga configuration has following user credentials for login:
{{RootCmd| grep -v ! /etc/quagga/zebra.conf|output=<pre>
hostname Router
password zebra
enable password zebra
</pre>}}
===Login into Quagga===
Login to local daemon using password ''zebra''
{{Cmd
|telnet localhost 2601
|output=<pre>
Connected to localhost.
Escape character is '^]'.

Hello, this is Quagga (version 0.99.22.4).
Copyright 1996-2005 Kunihiro Ishiguro, et al.

User Access Verification

Password:
Router>
</pre>}}

===Using help===
Show basic mode commands, use '''?''' key for help.
{{Cmd
|?
|prompt=Router>
|color=black
|output=<pre>
  echo      Echo a message back to the vty
  enable    Turn on privileged mode command
  exit      Exit current mode and down to previous mode
  help      Description of the interactive help system
  list      Print command list
  quit      Exit current mode and down to previous mode
  show      Show running system information
  terminal  Set terminal line parameters
  who       Display who is on vty
</pre>}}

===Privileged mode===
The privileged mode is used to add, change, modify interface IP settings. To get into privileged mode use <code>enable</code>, the default password ''zebra''.
{{Cmd
|ena
|prompt=Router>
|color=black
|output=<pre>
Password:
</pre>}}
{{Note|The prompt will change from > to # if using privileged mode}} 

Run once again  help in privileged mode, notice different commands available compared: 
{{Cmd
|ena
|prompt=Router#
|color=black
|output=<pre>
  clear      Reset functions
  configure  Configuration from vty interface
  copy       Copy configuration
  debug      Debugging functions (see also 'undebug')
  disable    Turn off privileged mode command
  echo       Echo a message back to the vty
  end        End current mode and change to enable mode.
  exit       Exit current mode and down to previous mode
  help       Description of the interactive help system
  list       Print command list
  logmsg     Send a message to enabled logging destinations
  no         Negate a command or set its defaults
  quit       Exit current mode and down to previous mode
  show       Show running system information
  terminal   Set terminal line parameters
  who        Display who is on vty
  write      Write running configuration to memory, network, or terminal
</pre>}}

====Show configuration====


===Configure IP address===
Get into edit mode
{{Cmd
|conf t
|prompt=Router#
|color=black
|output=<pre>
Router(config)#
</pre>}} 

Chose the IP loopback interface 
{{Cmd
|int lo
|prompt=Router(config)#
|color=black
|output=<pre>
Router(config-if)# 
</pre>}} 

Configure the IP address 192.168.0.100/32 on loopback interface
{{Cmd
|ip add 192.168.0.100/32
|prompt=Router(config-if)#
|color=black
}} 

Exit configuration mode:
{{Cmd
|end
|prompt=Router(config-if)#
|color=black
|output=<pre>
Router#
</pre>}} 

Show changed loopback changed interface configuration
{{Cmd
|sh int lo
|prompt=Router#
|color=black
|output=<pre>
Interface lo is up, line protocol detection is disabled
  index 1 metric 1 mtu 65536
  flags: <UP,LOOPBACK,RUNNING>
  inet 127.0.0.1/8 broadcast 127.255.255.255
  inet 192.168.0.100/32
  inet6 ::1/128
</pre>}}

Save running configuration:
{{Cmd
|write
|prompt=Router#
|color=black
|output=<pre>
Configuration saved to /etc/quagga/zebra.conf
</pre>}}

Exit quagga
{{Cmd
|exit
|prompt=Router#
|color=black
}}

Show IP configuration using {{Package|sys-apps/iproute2}}, notice the additional IP address set on loopback interface
{{Cmd|ip add|output=<pre>
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 brd 127.255.255.255 scope host lo
       valid_lft forever preferred_lft forever
    inet 192.168.0.100/32 scope global lo
       valid_lft forever preferred_lft forever
[...]
5: wlan0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP qlen 1000
    link/ether de:ad:be:ef:de:ad brd ff:ff:ff:ff:ff:ff
    inet 192.168.0.10/24 brd 192.168.0.255 scope global wlan0
       valid_lft forever preferred_lft forever
</pre>}}

===Test connectivity===



==See also==
* [[iproute2]]
* [[Static Routing]]

==External resources==
* [http://www.nongnu.org/quagga/docs/quagga.html Official Quagga documentation]

[[Category:Server]]
[[Category:Software]]
[[Category:Daemons]]
