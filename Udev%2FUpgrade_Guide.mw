{{Warning|'''Be careful when upgrading udev''', you will need to consider the changes listed below; ignoring them can ''break'' your system!}}

== udev 171 to 204 ==
The following special attention is required:

* '''CONFIG_DEVTMPFS=y''' must be set in the kernel, for which you need at least Linux kernel 2.6.32.

* If there is a {{Path|/dev}} line in [[fstab|/etc/fstab]], it must have the devtmpfs filesystem type or it will conflict with the above options.

* Remove udev-postmount from any runlevels, it is not necessary. Exception: Note that sys-fs/eudev still has the udev-postmount init script in use with USE="rule-generator"

* If you are using {{Path|/etc/udev/rules.d/70-persistent-net.rules}}, read [http://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames Predictable Network Interface Names],
otherwise delete it together with {{Path|/etc/udev/rules.d/70-persistent-cd.rules}} as both are from the now deleted rule_generator that doesn't exist anymore.

* The new [http://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames Predictable Network Interface Names] will be used by default, unless at least one of the following conditions is fulfilled:
** the kernel commandline contains '''net.ifnames=0''' (recommended)
** {{Path|/etc/udev/rules.d/80-net-name-slot.rules}} is an empty file with only comments inside of it (note that future versions '''may rename the file''')
** {{Path|/etc/udev/rules.d/80-net-name-slot.rules}} is a symlink to {{Path|/dev/null}}

* If you use Linux 3.8 or higher you should be able to disable USE="firmware-loader" and let kernel do the loading instead. However, you can still use USE="firmware-loader" on newer kernels too.

* {{Package|sys-apps/biosdevname}} is no longer necessary if you use the [http://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames Predictable Network Interface Names].

* Any file you haven't created or edited yourself in {{Path|/etc/udev/rules.d}} should be backupped and removed as it's likely an relic from old udev installation.

For more details, read the full news article {{Path|/usr/portage/metadata/news/2013-03-29-udev-upgrade/2013-03-29-udev-upgrade.en.txt}} and the post install output of emerging udev.

== udev 204 to 208 ==
The following special attention is required:

* Since this version, kernel with accept4() function support is mandatory. It's supported for amd64, ia64, mips, sparc and x86 in 2.6.32.61. All others, like ARM, will need newer
kernel like 3.0 for the function.
* It's no longer the job of the /dev manager, like udev, to create /dev nodes for static kernel modules such as /dev/fuse or /dev/snd/seq. Instead they are now created by the
kmod-static-nodes init script which is part of sys-apps/kmod since version 15. Make sure you add the init script to the "sysinit" runlevel.

== Example interface IDs ==

The default naming precedence rules are these:

# Names incorporating Firmware/BIOS provided index numbers for on-board devices (ID_NET_NAME_ONBOARD, example: eno1)
# Names incorporating Firmware/BIOS provided PCI Express hotplug slot index numbers (ID_NET_NAME_SLOT, example: ens1)
# Names incorporating physical/geographical location of the connector of the hardware (ID_NET_NAME_PATH, example: enp2s0)
# Names incorporating the interfaces's MAC address (ID_NET_NAME_MAC, example: enx78e7d1ea46da)
# Classic, unpredictable kernel-native ethX naming (example: eth0) 

(Rule 4 is disabled by default.) So, if your output is like this:

{{Cmd|udevadm test-builtin net_id /sys/class/net/eth0 2> /dev/null|output=<pre>ID_NET_NAME_MAC=enxd4a8xxxxxxxx
ID_NET_NAME_ONBOARD=eno1
ID_NET_NAME_PATH=enp1s0f1</pre>
}}

The interface will be named ''eno1'', because ID_NET_NAME_ONBOARD takes precedence over ID_NET_NAME_PATH.

== Things to think of ==

* /etc/conf.d/net
* Renaming init scripts
* Replacing init scripts in runlevels (via rc-update)
* iptables configuration
* vnstat configuration
* samba configuration

A quick way to get a list of files that will need to be updated can be found using the following:
{{Cmd|grep -r 'eth0' /etc/* {{!}} grep -v '#'}}

== Fixing network interfaces ==

This shows how you can fix your network-interfaces, if they don't work anymore (or before they stop working, if you didn't switch to the new udev yet). It is only applicable to simple setups, like one ethernet and one wifi interface. If you have a more complicated setup (like more ethernet adapters) I assume you already know what to do.

=== Renaming init scripts ===

If you are '''still running the old udev''' and are up to enabling the new one, execute
{{Cmd|udevadm test-builtin net_id /sys/class/net/eth0 2> /dev/null|output=<pre>ID_NET_NAME_MAC=enxd4a8xxxxxxxx
ID_NET_NAME_PATH=enp1s0f1</pre>
}}
Take the ID_NET_NAME_PATH-item (here ''enp1s0f1'') and execute
{{Cmd|ln -s net.lo /etc/init.d/net.enp1s0f1}}
If you have a wifi-interface do this for this interface,too!

If you are '''already running the new udev and the network is down''', execute
{{Cmd|ls -la /sys/class/net|output=<pre>total 0
drwxr-xr-x  2 root root 0 Apr  2 19:42 ./
drwxr-xr-x 49 root root 0 Apr  2 19:42 ../
lrwxrwxrwx  1 root root 0 Apr  2 19:42 enp1s0f1 -> ../../devices/pci0000:00/0000:00:1c.1/0000:02:00.0/net/enp1s0f1/
lrwxrwxrwx  1 root root 0 Apr  2 19:42 lo -> ../../devices/virtual/net/lo/
lrwxrwxrwx  1 root root 0 Apr  2 19:42 sit0 -> ../../devices/virtual/net/sit0/</pre>
}}
Look which link points to a pci-device (here ''enp1s0f1'') and execute
{{Cmd|ln -s net.lo /etc/init.d/net.enp1s0f1}}
If you have a wifi-interface do this for this interface,too!

=== Replacing init scripts in runlevels (via rc-update) ===

{{Cmd|rc-update delete net.eth0 default}}
{{Cmd|rc-update add net.enp1s0f1 default}}
Same for the wifi-interface again, if necessary.

[[Category:Upgrades]]
