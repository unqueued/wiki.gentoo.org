This article is intended for porters who want to add SharkBait support for a device that's not currently supported. In this article, you will be given the general idea on how to adapt parts that are crucial for SharkBait system to work on a device. The following components will be covered:

* Preinit. [https://github.com/KireinaHoro/preinit repository home]
* SharkBait-setup. [https://github.com/KireinaHoro/sharkbait-setup repository home]
* Kernel sources. ({{c|sys-kernel/${BOARD_NAME}-sources}}) [https://github.com/KireinaHoro/android/tree/master/sys-kernel/angler-sources example]
* Kernel headers. ({{c|sys-kernel/linux-headers-${BSP_VERSION}}}) [https://github.com/KireinaHoro/android/tree/master/sys-kernel/liunx-headers example]

__TOC__

== Preinit ==

Preinit performs early initialization of the device to load the Gentoo init (OpenRC as of current). The following directory structure is required for a supported device ({{c|angler}} as an example here) is as follows:

{{CodeBox|title={{c|preinit}} directory structure|1=angler
├── bootimg.cfg
├── initramfs
│   ├── init
│   └── (other contents in initramfs)
└── Makefile}}
* {{c|bootimg.cfg}} defines offsets for kernel and initramfs, as well as kernel commandline options. Porters should adapt what they get when dissecting {{c|boot.img}} for their device and make the following modifications:
** remove {{c|bootsize}} option so that abootimg does not complain about a boot.img bigger than the original one (though this is unlikely to be the case).
** add <code>androidboot.selinux=permissive</code> to the boot commandline to set SELinux to permissive.
* {{c|initramfs}} holds the minimal initramfs that correctly mounts filesystems and {{c|switch_root}} to load Gentoo init.
** {{c|initramfs/init}} is required. The {{c|angler}} init is a shell script that does the necessary jobs, but any executable file should work.
** Mind the permissions: kernel won't be able to execute an {{c|init}} that's not executable, which would result in a boot failure.
* {{c|Makefile}} enables processing the {{c|initramfs}} programmatically before {{c|installkernel}} packs it up.
** This will be useful for things like {{c|busybox}} installation, runtime-specific things, etc.
** {{c|installkernel}} will call {{c|make}} in the device directory ({{c|angler}} in the directory hierarchy). Read the example {{c|Makefile}} so that you handle the paths correctly.

== SharkBait-setup ==

SharkBait-setup handles the setup of the Android container. The following directory structure is required for a supported device ({{c|angler}} as an example here) is as follows:

{{CodeBox|title={{c|sharkbait-setup}} directory structure|1=angler
├── disable_encryption.sh
├── fstab.android
├── patches
│   ├── fstab.angler.patch
│   └── (other patches to apply to Android rootfs)
└── serial-consoles (if any)}}
* {{c|disable_encryption.sh}} is ran on the helper workstation and disables encryption for the partition where the Gentoo root will reside in.
** For devices that does not support encryption or have the Gentoo root in a partition that's not encrypted, this script should just print a notice and return 0.
** {{Important|Warn users about data wipe and wait for 10 seconds for a Ctrl-C!}}
* {{c|fstab.android}} is appended to the Gentoo fstab and contain mountpoints that are necessary for Android.
** Android's {{c|vold}} should not handle any internal mounts any more (external mounts such as OTG or SD card may still be managed by {{c|vold}}); make sure all required mounts are present.
** It is strongly recommended to mount to {{c|/var/lib/android}} and then bind into the LXC rootfs for ease when accessing the Android partitions and extra security. Refer to the example {{c|fstab.android}} file for {{c|angler}} to get a better understanding of this.
* {{c|patches}} holds patches that will be applied to the real Android rootfs via {{c|patch -p0}}, extracted from the current boot.img present on the device.
** Disable all partition mounts in {{c|fstab.$DEVICE.patch}} or equivalent file.
** Put more patches that are required here, such as patches on {{c|init.rc}} to properly handle cgroups issues introduced by containerization. Refer to {{c|init.rc.patch}} for {{c|angler}} for more information on this topic.
* {{c|serial-consoles}} defines serial consoles that are available on the device, if there is any. This file will be appended to {{c|/etc/inittab}}.

== Kernel sources ==

The kernel source package of a device packages the source tree from the vendor. A ebuild for {{c|sys-kernel/${BOARD_NAME}-sources}} is required; read the [https://github.com/KireinaHoro/android/blob/master/sys-kernel/angler-sources/angler-sources-3.10.73.ebuild ebuild for {{c|angler-sources}}] for reference. Only the package name, version, and the git repo URL would require adapting; the other parts of the ebuild do not need modification.

The following modifications on the source tree are required for a working kernel:

* Apply [https://github.com/KireinaHoro/android_kernel_huawei_angler/commit/be819350157b2aadcbc8db7001119130f0e51bad.patch this patch] on the tree to enable {{c|installkernel}} function.
* Supply a valid {{c|defconfig}} with LXC features enabled. See [https://github.com/KireinaHoro/android_kernel_huawei_angler/blob/sharkbait/arch/arm64/configs/sharkbait_angler_defconfig the example for angler] and [[LXC#Kernel_options_required LXC]] for reference.
* Make sure that the kernel '''compiles''' and '''boots correctly''' with (relatively) new compilers from Gentoo.
* Regularly merge upstream changes.

== Kernel headers ==

Kernel headers that match the device kernel source ease the process of compiling cross-compile toolchains for Android targets. The [https://github.com/KireinaHoro/android/blob/master/sys-kernel/linux-headers/linux-headers-3.10.73.ebuild ebuild for {{c|angler}}] should be a clear example, with only the need to modify the version number and the git repo URL.

== Test the port ==

Make sure the port boots correctly. You may need a serial console to debug boot failures. Also, check that all the hardware functions work properly (camera, bluetooth, etc.); if that's not the case point it out when submitting a merge request so that we can look into the issue. Happy hacking!
