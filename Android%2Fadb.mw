'''This WIKI has been created for non-rooted devices, for rooted devices please create another wiki OR add a rooted section at bottom'''

== About ADB == 

'''ADB''' stands for Android Debug Bridge<ref>https://developer.android.com/studio/command-line/adb.html</ref>, and it is a part of the Android Software Development Kit (SDK)<ref>https://developer.android.com/sdk/</ref>. It can be installed with {{Package|dev-util/android-sdk-update-manager}}

{{Emerge|android-sdk-update-manager}}

== Installation ==

==== Install ADB & Fastboot ====

Fastboot will get installed under same package as '''adb'''

Install {{Package|dev-util/android-tools}}:

{{Emerge|dev-util/android-tools}}

==== Enable USB Debugging ====

Enable the USB Debugging option under Settings > Developer options.

For Android 4.2 and newer, Developer options is hidden by default; use the following stepsː
̽
 1) On the device, go to Settings > About <device>.
 2) Tap the Build number seven times to make Settings > Developer options available enable.
 3) Go back to system settings and scroll down to bottom > Developer Options
 4) Now hit Enable USB-Debugging

 Tips: You might also want to enable the Stay awake option, to prevent Device from sleeping while plugged into the USB port. 

==== Detect Devices ====
{{Cmd|adb devices}}

 List of devices attached 
 8NH7N17B0XX9898        device

If your device is listed then you can connect to your android devices shell (first time you must accept authorized request on your device when you typing below command)

==== Enter Shell ====
{{Cmd|adb shell}}

==Multiple Devices Connected==
If you have multiple devices connected to your PC then you must use -s for specify wich device otherwise you will see a message similiar toː

 error: more than one device/emulator

{{Cmd|adb devices}}

 List of devices attached
 9QZ7N11B0ZX8999        device
 8NH7N17B0XX9898        device

{{Cmd|adb -s <device̠-number> shell }}

==Connect to ADB via wifi==

==== Set Port ====
If you prefer to use adb over a wifi connection instead of using the cable you can type below command with the usb plugged in first timeː

{{Cmd|adb tcpip 5555}}

 restarting in TCP mode port: 5555

==== Print IP ====
To get your IP of your connected android device you can typeː 

{{Cmd|adb shell ip route {{!}} awk '{print $9}'}}

 192.168.1.51 

==== Connect ====
Now you should be able to connect to your deviceː

{{Cmd|adb connect  192.168.1.51ː5555}}

 connected to 192.168.1.80:5555

Now control your device as usual via adb.

<pre style="color:red">
It is NOT recommended to flash your device over adb via wifi or similiar things that can harm your device if connection will be lost
</pre>

== Control Daemon==

====Start ADB daemon====
{{Cmd|adb start-server}}

====Stop ADB daemon====
{{Cmd|adb  stop-server}}

====Kill adb deamon====
{{Cmd|adb kill-server}}

Sometimes it might be necessary to kill adb if you your device will not be shown after you have connected the device if it's already running before you connecting the device, then just start the daemon again after you killed adb daemon.

== Reboot ==

====System reboot====
{{Cmd|adb reboot}}
 
==== Recovery mode ====
{{Cmd|adb reboot recovery}}

==== Bootloader mode ====
{{Cmd|adb reboot bootloader}}

== File Transfer ==

==== Push a file ====
{{Cmd|adb push mypicture.png /storage/on/device}}

==== Push a folder ====
{{Cmd|adb push myfolder /storage/on/device}}

==== Push all files in a folder ====
Files from myfolder will be transfered into storage/on/device
''Notice the trial slash''
{{Cmd|adb push myfolder/ /storage/on/device}}

==== Pull a file ====
{{Cmd|adb pull /storage/on/device/mypicture.png}}

==== Pull a folder ====
{{Cmd|adb pull /storage/on/device /home/̩$(whoami)/android-folder/}}

==== Pull all files in a folder ====
Notice the trial slash
{{Cmd|adb push myfolder /storage/on/device}}

== ADB -  Properties ==

====Print properties ====
{{Cmd|adb shell getprop}}

==== Set a property service ====
{{Cmd|adb shell setprop key value }}

== ADB - Service==

==== Service Syntax ====
{{Cmd|adb shell service call <your_service_name> <number at which the function appears in your_service_name.aidl> <type of the argument like i32 or i64> <argument>}}

==== List all services ====
{{Cmd|adb shell service list}}
 iphonesubinfo: [com.android.internal.telephony.IPhoneSubInfo]
 phone: [com.android.internal.telephony]

==== Exampleː Make a call via service ====
{{Cmd|adb shell service call phone 1 s16 '+6512345678'}}

==== Exampleː Print IMEI via a call service ====
{{Cmd|adb shell service call iphonesubinfo 1 }}
 Result: Parcel(
   0x00000000: 00000000 0000000f 00360038 00340034 '........8.6.2.0.'
   0x00000010: 00330036 00330030 00300035 00350032 '6.3.0.3.5.1.2.5.'
   0x00000020: 00370038 00000038                   '8.7.8...        ')

Convert the output to a readable formatː 

{{Cmd|adb shell service call iphonesubinfo 1{{!}} cut -d "'" -f2{{!}} grep -Eo '[0-9]'{{!}} xargs{{!}} sed 's/\ //g'}}

 862063035125878

== ADB - PM ==
 
==== List installed packages ====
{{Cmd|adb shell pm list packages}} 

 package:com.android.email 
 package:com.android.phone
 package:com.android.shell
 package:com.android.wallpaperbackup
 .......
==== List enabled packages ====
{{Cmd|adb shell pm list packages -e}}

==== List disabled packages ====
{{Cmd|adb shell pm list packages -d}}

==== List third party packages installed by user ====
{{Cmd|adb shell pm list packages -3}}

==== List users ====
{{Cmd|adb shell pm list users}}
 Users:
        UserInfo{0:Owner:13} running

==== List permission groups ====
{{Cmd|adb shell pm list permission-groups}}
 permission group:com.google.android.gms.permission.CAR_INFORMATION 
 permission group:android.permission-group.LOCATION
 permission group:android.permission-group.STORAGE
 permission group:android.permission-group.MICROPHONE
 .......

==== List features ====
{{Cmd|adb shell pm list features}}
 feature:android.hardware.camera
 feature:android.hardware.camera.autofocus
 feature:android.hardware.faketouch
 feature:android.hardware.fingerprint
 feature:android.hardware.nfc
 feature:android.software.vr.mode
 .......

==== Uninstall a package ====
{{Cmd|pm uninstall --user 0 package.name}}

Exampleː 
{{Cmd|pm uninstall --user 0 com.facebook.orca}}
 Success
 
Tips For uninstall several packages at once you must do it in a loop

{{Cmd|for packages in com.package1 com.package2; do adb shell pm uninstall --user 0 $packages; done }}



== Dumpsys ==

A tool that runs on Android devices and provides information about system services
̺
To get a diagnostic output for all system services for your connected device, simply run adb shell dumpsys. However, this outputs far more information than you would typically want. For more manageable output, specify the service you want to examine by including it in the command. 

==== Dumpsys Syntax ====
{{Cmd|adb shell dumpsys [-t timeout] [--help] [-l] [--skip services] [service] [arguments] [-c] [-h]}}

==== Exampleː Print Battery Stats ====
{{Cmd|adb shell dumpsys battery}}

  AC powered: false
  USB powered: true
  Wireless powered: false
  Max charging current: 500000
  Max charging voltage: 5000000
  Charge counter: 0
  status: 2
  health: 2
  present: true
  level: 45
  scale: 100
  voltage: 3826
  temperature: 240
  technology: Li-poly

==== List Options ====
{{Cmd|adb shell dumpsys -l}}

 If above command does not work then you can useː
{{Cmd|adb shell dumpsys {{!}} grep -a 'DUMP OF SERVICE'}}

== HTC Backup ==

With a non rooted device, the only things you can backup locally is what the couple device/android will let you do. That is pretty much the same files you can copy with the already mentioned software. With the Android 4.x devices, a nice solution to make such a partial backup is the so-called 

[https://android.stackexchange.com/questions/28296/full-backup-of-non-rooted-devices/28315#28315 "adb backup"].

{{Cmd|<nowiki>adb backup [-f <file>] [-apk|-noapk] [-shared|-noshared] [-all] [-system|nosystem] [<packages...>]</nowiki>}}

where:

* -f : the path of the *.ab file that will be saved on your computer. This file is a compressed file that contains an archive of the data/apks from your device.
* -apk|-noapk : indicates if the *.apk files should be backed up (default is -noapk)
* -shared|-noshared: enable/disable backup of the device's shared storage / SD card contents (default is -noshared)
* -all : indicates that you want the entire system backed up. you can use the packages filter to just backup specific packages, or use -all for a full system backup.
* -system|-nosystem: indicates if all the system applications and data are included when backing up. (default is -system)
* <packages> : this is where you can list specific packages to backup. Use these if you want to back up only specific applications. If using -all, you do not need to specify packages.

To backup the phone into '''~/HTC_backup''' 
{{Cmd|cd ~}}
{{Cmd|mkdir HTC_backup}}
{{Cmd|adb devices}}
will start the daemon and show you the devices on the USB.
{{Cmd|adb backup -apk -shared -all -system -f ~/HTC_backup/backup<date_of_the_day>.ab}}
will backup every thing the device will let you to backup.
{{Cmd|adb restore ~/HTC_backup/backup<date_of_the_day>.ab}}
will restore the backup into the device.

To stop the daemon:
{{Cmd|adb kill-server}}

== References ==
{{reflist}}

[[Category:Software]]
