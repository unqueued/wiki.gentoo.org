<languages />
Wenn Sie <tt>emerge</tt> zum Bau eines Paketes verwenden, ist es nicht ungewöhnlich Meldungen die von Portage selbst kommen zu bemerken. Weil sie wichtige Informationen von Gentoo Entwicklern beinhalten können, ist es eine gute Idee sie zu lesen. Das ist aber oft nicht sofort möglich, weil sie schnell aus dem Bildbereich scrollen. Dies kann leicht durch die Aktivierung einer Portage Funktion genannt elog gelöst werden, deren Zweck es ist Meldungen zur späteren Durchsicht auf Festplatte zu speichern. Es bestehen aber auch noch andere Aufzeichnungsmöglichkeiten ...

== Portage elog Teilsystem ==

Das Portage elog Teilsystem behält bestimmte von ebuild gelieferte Log-Meldungen im Auge, die von Entwicklern in die ebuilds gepackt wurden um die Aufmerksamkeit des Administrators oder der Benutzer auf sich zu ziehen. Diese Meldungen beinhalten oft wichtige oder interessante Informationen in Bezug zu den genannten Paketen.

=== Einrichtung ===

Wählen Sie durch die Variable <code>PORTAGE_ELOG_CLASSES</code> welche Art von Informationen geloggt werden sollen. Mögliche Werte sind <code>info</code>, <code>warn</code>, <code>error</code>, <code>log</code> und <code>qa</code>:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_ELOG_CLASSES="log warn error"
}}

=== Konfiguration für Datei-basierte Speicherung ===

Portage kann die elog Ereignisse auf mehrere Arten handhaben.

Um die elog Ereignisse auf Festplatte zu speichern aktivieren Sie das <code>save</code> Modul in der Variable <code>PORTAGE_ELOG_SYSTEM</code>:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_ELOG_SYSTEM="save"
}}

Die Meldungen werden in {{Path|/var/log/portage/elog}} oder {{Path|${PORT_LOGDIR}/elog}} gespeichert, wenn die genannte Variable gesetzt ist.

Um in Kategorien unterteilte elog Dateien zu erzeugen, aktivieren Sie die Portage Funktion <code>split-elog</code>. Sie wird Portage dazu bringen Kategorie-basierte Unterverzeichnisse im Verzeichnis {{Path|/var/log/portage/elog}} zu erzeugen.

=== Für E-Mail Konfigurieren ===

Um Logdateien an einen Empfänger zu mailen aktivieren Sie das Modul <code>mail</code>. Die Mail-Option erfordert dass einige zusätzliche Variablen gesetzt sind. Lesen Sie {{Path|/usr/share/portage/config/make.conf.example}} für weitere Informationen.

Unterhalb ist eine Beispiel-Konfiguration gezeigt, die hoffentlich selbsterklärend ist:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_ELOG_SYSTEM="mail"
# Zuerst die Empfangs-Mail Adresse, dann der SMTP Server
PORTAGE_ELOG_MAILURI="log-intake@example.com mail.example.com"
PORTAGE_ELOG_MAILFROM="portage@$(hostname).example.com"
PORTAGE_ELOG_MAILSUBJECT="${PACKAGE} is ${ACTION} on ${HOST}"
}}

Ein weiteres Beispiel mit nullmailer oder sendmail:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_ELOG_SYSTEM="mail"
# Zuerst die Empfangs-Mail Adresse, dann der SMTP Server
PORTAGE_ELOG_MAILURI="users@host /usr/sbin/sendmail"
PORTAGE_ELOG_MAILFROM="portage@$(hostname).example.com"
PORTAGE_ELOG_MAILSUBJECT="${PACKAGE} is ${ACTION} on ${HOST}"
}}

=== Ähnliche Software ===

Das folgende ist eine Liste von elog-ähnlichen Softwarepaketen:

* {{Package|app-portage/elogv}} - Curses basiertes Werkzeug zum Parsen des Inhalts von elogs
* {{Package|app-portage/elogviewer}} - Python basierter elog Betrachter
* {{Package|app-portage/portage-mod_jabber}} - Modul zur Unterstützung des XMPP (Jabber) Protokolls für elog Ereignisse

== Logdateien erzeugen ==

Mit dem Portage elog Teilsystem werden Paketerzeugungs-Logdateien auf Festplatte gespeichert oder zu einem entfernten Empfänger geschickt, unabhängig von Erfolg oder Misserfolg. Dies erlaubt es Administratoren den Bau später zu überprüfen oder Bau-Logdateien für Support-Tickets abzurufen.

=== Einrichtung ===

Um die Portage Protokollierung zu aktivieren bearbeiten Sie {{Path|/etc/portage/make.conf}} und setzen Sie <code>PORT_LOGDIR</code> auf ein Verzeichnis in dem die Logdateien aufbewahrt werden sollen. Standardmässig verwendet Portage {{Path|/var/log/portage}}:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORT_LOGDIR="/var/log/portage"
}}

Als Nächstes beeinflusst eine Anzahl von <code>FEATURES</code> Einstellungen wie Portage mit Build-Logs umgeht.

* Mit gesetztem <code>binpkg-logs</code> werden selbst die Protokolle von Binärpaketen gespeichert
* Wenn <code>clean-logs</code> gesetzt ist werden regelmässig Logdatei-Säuberungsoperationen durchgeführt. Der Befehl der ausgeführt wird ist durch <code>PORT_LOGDIR_CLEAN</code> definiert und standardmässig beträgt die Aufbewahrungsdauer der Dateien 7 Tage.
* Mit gesetztem <code>split-log</code> werden Build-Logs in Kategorie-benannten Unterverzeichnissen von <code>${PORT_LOGDIR}/build</code> aufbewahrt.

=== Aufräumen ===

Wenn <code>clean-logs</code> gesetzt ist, wird Portage nach jeder Build oder unmerge Operation den Befehl ausführen, der durch <code>PORT_LOGDIR_CLEAN</code> definiert ist. Standardmässig wird der folgende Befehl verwendet:

{{FileBox|filename=/usr/share/portage/config/make.globals|lang=bash|1=
PORT_LOGDIR_CLEAN="find \"\${PORT_LOGDIR}\" -type f ! -name \"summary.log*\" -mtime +7 -delete"
}}

Falls Sie ein benutzerdefiniertes Kommando definieren, vergessen Sie nicht die Variable <code>${PORT_LOGDIR}</code> zu "''escapen''" (oder geben sie den richtigen Ort hartkodiert an).

== Externe Ressourcen ==

* [http://blog.siphos.be/2013/09/underestimated-or-underused-portage-elogging/ Unterschätzt oder unausgelastet: Portage (e)logging] auf ([[User:SwifT|Sven Vermeulen]]'s Blog)

[[Category:Portage]]
