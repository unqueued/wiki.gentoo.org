<languages />

{{Metadata|abstract=genkernel est un outil créé par Gentoo utilisé pour automatiser le processus de compilation du noyau et du système de fichiers virtuel de démarrage (initramfs).}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox wikipedia|header=true}}
|{{InfoBox gitweb|genkernel.git}}
|{{InfoBox github|gentoo/genkernel}}
}}

{{c|genkernel}} est un outil créé par Gentoo utilisé pour automatiser le processus de compilation du [[kernel/fr| noyau]] et du système de fichiers virtuel de démarrage [[initramfs|(initramfs)]]. Parmi les fonctionnalités, on peut citer :

* Configurer les sources du noyau
* Compiler le noyau, le compresser {{Path|bzImage}}, et le copier dans {{Path|/boot}}.
* Créer un système de fichiers virtuels de démarrage (initramfs) dans {{Path|/boot}}.
* Créer les liens symboliques dans {{Path|/boot}}.
* Ajouter du contenu personnalisé dans le fichier initramfs comme les fichiers spécifiques à l’encryption, une image pour l'écran de chargement, des modules supplémentaires, et plus encore.
* Compresser le fichier initramfs.
* Configure le système d'amorçage pour démarrer sur le nouveau noyau et fichier initramfs.

{{Note|C'est une erreur courante de croire que {{c|genkernel}} va ''automatiquement'' générer une configuration du noyau personnalisée. {{c|genkernel}} automatise le processus de compilation du noyau et assemble le fichier initramfs, mais ne génère ''pas'' un fichier de configuration du noyau personnalisé. Il utilise une configuration générique qui fournit une support pour les sous-systèmes couramment utilisés en fonction de l'architecture. Les détails des défauts utilisés pour chaque architecture peuvent être retrouvés sur le [https://gitweb.gentoo.org/proj/genkernel.git/tree/arch répertoire en amont]. Choisir l'architecture voulue puis choisir le fichier kernel-config.}}

== Installation ==

=== Options de la variable USE ===

{{USEflag|package=sys-kernel/genkernel}}

=== Emerge ===

Procéder à l'installation du paquet genkernel :

{{Emerge|sys-kernel/genkernel}}

== Utilisation == 

La forme générale de l'invocation de '''genkernel''' est la suivante :

{{RootCmd|genkernel [options ...] action}}

=== Options === 

Le comportement réel de genkernel dépend d'une grande variété d'options, dont la majorité peut être activée/désactivée dans le fichier {{Path|/etc/genkernel.conf}} ou passée avec la commande {{c|genkernel}}. Les options passées en ligne de commande prévalent sur celles définies dans {{Path|/etc/genkernel.conf}}. Le fichier de configuration est très bien documenté, cependant les options les plus courantes seront vues dans cet article. Le but est pour le lecteur d'être familier avec les invocations courantes de genkernel. Pour une information plus complète, se reporter aux commentaires du fichier {{Path|/etc/genkernel.conf}} ou à la sortie de la commande {{c|man genkernel}}.

{{Note| Certaines options possèdent une variante qui déclenche un comportement inverse. Elle sont notées sous la forme <code>--[no-]option_name</code>, et l'effet inverse est noté entre crochets comme dans cet exemple :
{{CodeBox|title=Activer ou désactiver une certaine option |1= --[no]menuconfig : Activates [deactivates]…}}
Lorsqu'une option possède seulement un effet négatif, le <code>no-</code>, ainsi que son effet, qui ne sont pas optionnels dans ce cas là, sont notés sans les crochets.}}

==== Options agissant sur l'interactivité de l'utilisateur ====

Les options de configuration listées ci-dessous aident l'utilisateur à décider comment interagir avec le processus de configuration. L'utilisateur peut même décider si le fichier de configuration sera sauvegardé. Les options suivantes sont les options de configuration de premier ordre :

{| class="table table-condensed"
|-
! scope="col" width="25%" | Option !! Description
|-
|-
| <code>--config=/path/to/genkernel.conf</code> || Pointe vers le fichier de configuration de Genkernel à utiliser (par défaut sur {{Path|/etc/genkernel.conf}}).
|-
| <code>--[no-]menuconfig</code> || Active (ou désactive) la commande {{c|make menuconfig}} (qui invoque un menu de configuration interactif) avant de compiler le noyau.
|-
| <code>--gconfig</code> || Propose un outil de configuration du noyau qui dépend des librairies GTK+. L'avantage de cette option et que la plupart des utilisateurs trouvent plus facile et plus claire la configuration du noyau en utilisant cet outil, vu qu'il dépend du système de fenêtres X. L'inconvénient de cette option est que le système de fenêtres X est requis pour l'utiliser, et ne marchera donc pas en ligne de commande.
|-
| <code>--xconfig</code> || Propose un outil de configuration du noyau qui dépend des librairies Qt. L'avantage de cette option et que la plupart des utilisateurs trouvent plus facile et plus claire la configuration du noyau en utilisant cet outil, vu qu'il dépend du système de fenêtres X. L'inconvénient de cette option est que le système de fenêtres X est requis pour l'utiliser, et ne marchera donc pas en ligne de commande.
|-
| <code>--[no-]save-config</code> || Enregistrer [ou non] la configuration du noyau dans un fichier dans le répertoire {{Path|/etc/kernels}} pour un usage ultérieur.
|-
| <code>--kernname=NickName</code> || Autorise la modification du nom du noyau et des images initrd dans le répertoire {{Path|/boot}}, de façon à ce que les images générées soient {{Path|kernel-NickName-version}} et {{Path|initramfs-NickName-version}}.
|}

==== Options agissant sur le système résultant ====

Les options définies ici définissent quelles fonctionnalités, seront, ou ne seront pas, incluses dans le noyau et le système de fichiers virtuel de démarrage résultants.

{| class="table table-condensed"
|-
! scope="col" width="25%" | Option !! Description
|-
| <code>--[no-]splash</code> ||  Active (ou désactive) le support pour [[Fbsplash]] (framebuffer splash) dans l'image initrd générée par genkernerl. Pour outrepasser le thème par défaut utilisé par fbsplash, utiliser <code>--splash=PreferredTheme</code> (où <code>PreferredTheme</code> est le nom d'un des répertoires dans {{Path|/etc/splash}}).
|-
| <code>--splash-res=PreferredResolution</code> || Cette option permet de sélectionner les résolutions qui seront supportées par l'écran de chargement dans le fichier initrd lors du démarrage du système. C'est utile pour deux raisons. D'abord, pour permettre de ne sélectionner seulement que les résolutions pertinentes au système. Deuxièmement, pour éviter les augmentations inutiles de l'espace disque requis par le fichier initrd (vu que le fichier initrd n'a pas besoin de prendre un compte les résolutions qui ne sont pas supportées par le système). Cependant, il est préférable d'omettre l'option si le noyau est compilé pour une image CD ; cela permet de supporter toutes les résolutions possibles pour l'écran de chargement.
|-
| <code>--do-keymap-auto</code> || Force la sélection d'un dispositif de clavier lors du démarrage.
|-
| <code>--lvm</code> || Inclut le support pour le stockage via [http://sources.redhat.com/lvm2/ Logical Volume Management] (LVM2) depuis les fichiers binaires statiques, si disponibles sur le système. Les fichiers LVM2 binaires nécessaires seront compilés s'ils ne sont pas disponibles. Être sur d'avoir le paquet {{Package|sys-fs/lvm2}} installé sur le système ({{c|emerge sys-fs/lvm2}}) avant d'activer cette option, puis se reporter à [[LVM|l'article sur LVM]] du wiki Gentoo.
|-
| <code>--dmraid</code> || Inclut le support pour DMRAID ; l'utilitaire qui crée des mappages RAID à l'aide du sous-système mappeur de périphérique du noyau. [http://people.redhat.com/~heinzm/sw/dmraid/readme DMRAID] découvre, active, désactive et affiche les propriétés des jeux logiciels RAID (ATARAID, par exemple) et partitions DOS.
|-
| <code>--luks</code> || Inclut le support pour ''Linux Unified Key Setup'' ou [https://gitlab.com/cryptsetup/cryptsetup LUKS]. Cela permettra d'utiliser une partition encryptée comme système de fichiers racine. Dans le système d'amorçage, mettre cette partition comme valeur de <code>crypt_root</code> (et <code>root</code> doit désigner la partition décryptée créée par LUKS).
|-
| <code>--disklabel</code> || Ajoute le support pour les labels et identifiants universels uniques (UUID) à l'image initrd.
|-
| <code>--iscsi</code> || Ajoute le support pour iSCSI à l'image initrd.
|-
| <code>--multipath</code> || Ajoute le support pour [[Multipath]] à l'image initrd.
|-
| <code>--linuxrc=/chemin/vers/le/fichier_linuxrc</code> || Spécifie un fichier linuxrc créé par l'utilisateur — un script initialisé pendant le démarrage du noyau, avant l'actuel processus de démarrage. Un script linuxrc par défaut peut être trouvé dans le répertoire {{Path|/usr/share/genkernel/}}. Ce script permet de démarrer dans un petit noyau modulaire; il essaye de ne charger que le minimum des pilotes nécessaires (en tant de modules) au système.
|-
| <code>--cachedir=/path/to/alt/dir</code> || Modifie l'emplacement par défaut du cache utilisé lors de la compilation du noyau.
|-
| <code>--tempdir=/path/to/new/tempdir</code> || Spécifie l'emplacement du répertoire temporaire utilisé par genkernel lors de la compilation du noyau.
|-
| <code>--unionfs</code> || Inclut le support pour [http://www.fsl.cs.sunysb.edu/project-unionfs.html Unification File System (UFS)] dans l'image initrd.
|-
| <code>--mountboot</code> || Détecte si le répertoire {{Path|/boot}} doit être monté sur une partition séparée. Il regardera dans le script {{Path|/etc/fstab}} pour les instructions sur comment monter la partition boot sur un système de fichiers (si nécessaire).
|}

==== Options agissant sur le choix des outils utilisés pour la compilation ====

Les options suivantes sont prises en charge par genkernel, et sont passées aux applications concernées lors de la compilation et de l'assemblage du noyau. Ces options influent sur le choix des outils utilisés pendant le processus de compilation, quoi qu'à un niveau assez bas.

{| class="table table-condensed"
|-
! scope="col" width="25%" | Options !! Description
|-
| <code>--kernel-cc=someCompiler</code> || Spécifie le compilateur utilisé lors du processus de compilation du noyau.
|-
| <code>--kernel-ld=someLinker</code> || Spécifie l'éditeur de liens utilisé lors du processus de compilation du noyau.
|-
| <code>--kernel-as=someAssembler</code> || Spécifie l'assembleur utilisé lors du processus de compilation du noyau.
|-
| <code>--kernel-make=someMake</code> || Spécifie une alternative à l'utilitaire GNU make utilisé lors du processus de compilation du noyau.
|-
| <code>--utils-cc=someCompiler</code> || Spécifie le compilateur utilisé lors du processus de la compilation des utilitaires de support.
|-
| <code>--utils-ld=someLinker</code> || Spécifie l'éditeur de liens utilisé lors du processus de la compilation des utilitaires de support.
|-
| <code>--utils-as=someAssembler</code> || Spécifie l'assembleur utilisé lors du processus de la compilation des utilitaires de support.
|-
| <code>--utils-make=someMake</code> || Spécifie une alternative à l'utilitaire GNU make utilisé lors de la compilation des utilitaires de support.
|-
| <code>--makeopts=-jX</code> || Spécifie le nombre de threads simultanés que l'utilitaire make peut mettre en œuvre alors que le noyau (et les utilitaires) sont compilés. La variable <code> X </ code> est un nombre à choisir librement, bien que les valeurs les plus courantes soient obtenues en ajoutant un (1) au nombre de cœurs utilisés par le système ou simplement en utilisant le nombre de cœurs du système. Ainsi, pour un système avec un seul cœur, les valeurs d'option les plus courantes sont <code>-j2</code> ou <code>-j1</code> ; Un système à deux cœurs utilise très probablement les options <code>-j3</code> ou <code>-j2</code>, etc. (Un système avec un processeur prenant en charge la technologie Hyper-Threading ™ (HT) peut être supposé avoir deux cœurs, à condition que le support Symmetric Multi-Processing (SMP) soit activé dans le noyau.)
|}

==== Options agissant sur le processus de compilation ====

Les options suivantes ont généralement un effet lors de la compilation réelle.

{| class="table table-condensed"
|-
! scope="col" width="25%" | Option !! Description
|-
| <code>--kerneldir=/path/to/sources/</code> || Spécifie un emplacement alternatif du noyau plutôt que l'emplacement par défaut {{Path|/usr/src/linux/}}.
|-
| <code>--kernel-config=/path/to/config-file</code> || Spécifie une configuration alternative du noyau à utiliser plutôt que le fichier par défaut {{Path|/path/to/sources/.config}}.
|-
| <code>--module-prefix=/path/to/prefix-directory/</code> || Spécifie un préfixe pour le répertoire dans lequel les modules du noyau seront installés (le chemin par défaut est le répertoire {{Path|/lib/modules}}.)
|-
| <code>--[no-]clean</code> || Active (ou désactive) la commande {{c|make clean}} avant la compilation du noyau. La commande {{c|make clean}} supprime tous les fichiers objets et les dépendances de l'arbre source du noyau.
|-
| <code>--[no-]mrproper</code> || Active (désactive) la commande {{c|make mrproper}} avant la compilation du noyau. Comme la commande {{c|make clean}} listée ci-dessus, {{c|make mrproper}} supprime tous les fichiers objets et les dépendances de l'arbre source du noyau. Cependant, les fichiers de configuration précedents (dans {{Path|/path/to/sources/.config}} ou {{Path|/path/to/sources/.config.old}}) seront aussi supprimés de l'arbde source du noyau. Si la disparition du fichier de configuration du noyau {{Path|.config}} n'est pas souhaitée, désactiver cette option.
|-
| <code>--oldconfig</code> || Exécute la commande {{c|make oldconfig}}, qui essaye de collecter des informations pour la configuration du noyau en fonction de l'architecture du système depuis un script générique dans {{Path|/usr/share/genkernel}}. C'est un processus non-interactif ; aucune entrée utilisateur n'est demandée. Aussi, si l'option <code>--oldconfig</code>est utilisée conjointement avec l'option <code>--clean</code>, cette dernière est annulée, résultant en l'activation de l'option <code>--no-clean</code>.
|-
| <code>--callback="echo hello"</code> || Appelle paramètres spécifiés ({{c|echo hello}}, dans ce cas) après que le noyau et les modules aient été compilés, mais avant l'installation de l'image initrd. Cela peut être utile quand des modules externes sont installés dans l'image initrd, permettant d'installer les items nécessaires avant de redéfinir une groupe de modules genkernel.
|-
| <code>--[no-]install</code> || Active (ou désactive) la commande {{c|make install}}, qui installe la nouvelle image du noyau, le fichier de configuration, l'image initrd et la carte du système sur la partition boot. Chaque module compilé sera également installé. Par défaut, genkernel essaiera de monter {{Path|/boot}} si présent sur une partition séparée avant d'exécuter la commande.
|-
| <code>--no-ramdisk-modules</code> || Évite de copier les modules dans l'image initrd créée par genkernel. Cette option est une exception à la règle sur l'utilisation du préfixe  <code>no-</code> ; l'oubli de ce préfixe créer une option de genkernel invalide.
|-
| <code>--all-ramdisk-modules</code> || Copie tous les modules disponibles dans l'image initrd créée par genkernel.
|-
| <code>--genzimage</code> || Créé l'image initrd, avant l'image du noyau (cette astuce ne s'applique actuellement qu'aux systèmes PPC Pegasos).
|}

==== Options de débogage ====

L'utilisation d'options de débogage pendant la compilation du noyau contrôle le nombre d'informations reportées, ainsi que la présentation de celles-ci.

{| class="table table-condensed"
|-
! scope="col" width="25%" | Option !! Description
|-
| <code>--loglevel=<nowiki><0|1|2|3|4|5></nowiki></code> || Contrôle le niveau de verbosité de l'information donnée par genkernel. La variable <code>&lt;verblevel&gt;</code> est un entier entre 0 et 5. Le niveau '0' représente une verbosité minimale, alors que '5' donne autant d'information que possible à propos de l'activité de genkernel durant le processus de compilation du noyau.
|-
| <code>--logfile=/path/to/output_file</code> || Ignore la valeur fixée par l'option <code>--loglevel</code> (ci-dessus) et envoie toutes les informations de débogage produites par genkernel dans fichier spécifié. Le fichier par défaut est {{Path|/var/log/genkernel.log }}.
|-
| <code>--[no-]color</code> || Active (ou désactive) la sortie colorée des informations de débogage (générées par genkernel) en utilisant des séquences d'échappement.
|-
| <code>--[no-]debug-cleanup</code> || Active (ou désactive) le nettoyage complet d'après exécution pour un débogage plus facile.
|}

=== Actions ===

Une action passée avec la commande {{c|genkernel [options …] ''action''}} indique à genkernel ce qu'il faut faire. Les actions prises en charge sont :

{| class="table table-condensed"
|-
! scope="col" width="25%" | Action !! Description
|-
| {{c|all}} || Compile toutes les étapes — le fichier initrd, l'image du noyau et les modules.
|-
| {{c|bzImage}} || Ne compiler que l'image du noyau.
|-
| {{c|kernel}} || Ne compiler que l'image du noyau et les modules.
|-
| {{c|initramfs}} || Ne compiler que l'image initramfs/ramdisk.
|-
| {{c|ramdisk}} || Ne compiler que l'image initramfs/ramdisk.
|}

== Configuration ==

=== Démarrer ===

Bien qu'il y ait plusieurs façons de lancer genkernel, la plus simple reste {{c|genkernel all}}. Une configuration générique qui marche correctement pour tous les systèmes sera alors utilisée. Comme mentionné précédemment, cette méthode n'est pas sans inconvénients. La plupart des modules compilés ne seront pas utilisés et la compilation prendra beaucoup de temps. L'illustration suivante montre une approche plus efficace, en passant certains paramètres à genkernel en tant qu'utilisateur root:

{{RootCmd|genkernel --splash --no-install --no-clean --menuconfig all}}

Cette opération indique à genkernel de créer un noyau avec un écran de démarrage (<code>--splash</code>) en tampon de trames (framebuffer) qui devra être installé à la main (<code>--no-install</code>). Dans la phase préparatoire de compilation, genkernel n'effacera pas les objets déjà compilés (<code>--no-clean</code>). Enfin, un menu de configuration sera affiché, permettant à l'utilisateur de choisir quels modules seront compilés (<code>--menuconfig</code>).

Remplacer <code>--no-install</code> par <code>--install</code> pour qu'il installe automatiquement le nouveau noyau dans {{Path|/boot}} et spécifier <code>--symlink</code> pour qu'il crée les liens symboliques. En utilisant le paramètre -- <code>--mountboot</code> , la partition {{Path|/boot}} sera montée par genkernel automatiquement, si nécessaire.

{{Note|Ne pas oublier que le fichier {{Path|/etc/genkernel.conf}} est lu par la commande '''genkernel''' lorsqu'elle démarre, et que toutes les options qui y sont définies, seront appliquées, sauf quand une option en ligne de commande contradictoire est passée.}}

=== Changer le noyau  ===

La première chose à faire est d'autoriser le lancement de {{c|make menuconfig}} dans le fichier {{Path|/etc/genkernel.conf}} :

{{FileBox|filename=/etc/genkernel.conf|title=Forcer l'utilisation du menu de configuration dans  /etc/genkernel.conf|1=
# Lancer 'make menuconfig' avant de compiler le noyau 
MENUCONFIG="yes"
}}

==== Gestion des fichiers ====

Quand il utilise genkernel, l'utilisateur doit être conscient de quelques aspects concernant la gestion des fichiers de configuration et des fichiers image du noyau, ainsi que de la façon dont les sources du noyau sont manipulées par le système.

===== Fichiers sources =====

Après une commande {{c|emerge -u gentoo-sources}},, chaque fois que de nouvelles sources sont disponibles, un nouveau répertoire est créé pour les sources du noyau dans  {{Path|/usr/src/}} pour les héberger. Normalement, le dossier des sources actives est pointé par le lien symbolique {{Path|/usr/src/linux}}.

Le répertoire {{Path|/usr/src}} pourrait ressembler à ceci :

{{Cmd|ls -l /usr/src|output=<pre>
total 16
lrwxrwxrwx  1 root root   19 21 Mar   2013 linux -> linux-3.7.10-gentoo
drwxr-xr-x 24 root root 4096 25 Aug  10:39 linux-3.10.7-gentoo
drwxr-xr-x 20 root root 4096 21 Apr  19:42 linux-3.7.10-gentoo
drwxr-xr-x 21 root root 4096 14 Mar   2013 linux-3.7.9-gentoo
</pre>}}

Le lien symbolique {{Path|/usr/src/linux}} peut être changé de différentes manières. 

* Si l'option <code>symlink</code> de la variable USE est définie le lien symbolique {{Path|/usr/src/linux}} est automatiquement mis à jour pour pointer sur les nouvelles sources installées par la commande <code>emerge</code>. 

* Si l'option de la variable USE <code>symlink</code> n'est pas définie, l'utilisateur peut changer la destination du lien symbolique en utilisant la commande {{c|eselect kernel list}} suivie de la commande {{c|eselect kernel set}}.

genkernel utilisera ''toujours'' (exclusivement) les sources pointées par le lien symbolique {{Path|/usr/src/linux}}.

===== Fichiers de configuration du noyau =====

Si une compilation du noyau a déjà été faite à partir des sources actives du noyau, il devrait y avoir un fichier dans le dossier {{Path|/etc/kernels}} qui contient la configuration du noyau qui a été appliquée lors de la création de la dernière bzimage du noyau. Ce fichier est nommé par exemple {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}} ; nom dans lequel il faut remplacer <code>x86_64</code> par l'architecture du système, <code>3.7.9</code> par la version des sources utilisées et <code>r1</code> par le numéro de divulgation des sources.

C'est ce fichier {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}} qui est utilisé comme point de départ de la configuration lorsque {{c|genkernel --menuconfig all}} est lancé.

Si c'est la première fois que genkernel est exécuté avec les nouvelles sources du noyau, ou si la précédente configuration n'a pas été sauvegardée, ce fichier est remplacé par une configuration par défaut qui réside dans {{Path|usr/share/genkernel/arch/x86_64/kernel-config}} (nom dans lequel x86_64 doit être remplacé par l'architecture réelle).

{{Note|Le chemin vers ce fichier de configuration par défaut peut être changé en définissant la variable  <var>DEFAULT_KERNEL_CONFIG</var> dans le fichier {{Path|/etc/genkernel.conf}}.}}

===== Sauvegarder la configuration compilée =====

Si l'option <code>--save-config</code> de genkernel est activée, soit depuis la ligne de commande, soit dans  {{Path|/etc/genkernel.conf}}, la configuration compilée du noyau est sauvegardée (avec le nom donné ci-dessus) dans le dossier {{Path|/etc/kernels}}. En même temps, la configuration est sauvegardée dans le fichier  {{Path|.config}} dans le dossier  {{Path|/usr/src/linux}} mais ce n'est pas ce fichier qui est réutilisé lors de la prochaine exécution de {{c|genkernel all}}.

{{Warning/fr|Il faut être conscient que, à chaque fois que genkernel est exécuté avec l'option <code>--save-config</code> de genkernel définie, le fichier de  configuration dans {{Path|/etc/kernels}} est écrasé. En conséquence, il est fortement recommandé de dupliquer ce fichier sous un nouveau nom ''avant'' d'exécuter genkernel pour le préserver.}}

===== Installer le noyau et le disque virtuel de démarrage dans le dossier {{Path|/boot}} =====

Spécifier l'option <code>all</code> lors de l'invocation de genkernel, demandera à genkernel d'installer les images du noyau et du système de fichiers virtuel de démarrage (initramfs) dans le dossier {{Path|/boot}}. Afin d'exécuter <code>--install</code> d'une manière appropriée, définir ce qui suit dans le fichier {{Path|/etc/genkernel.conf}} :

{{FileBox|filename=/etc/genkernel.conf|title=Définir l'auto-sauvegarde des images du noyau et de initramfs |lang=bash|1=
# Monter BOOTDIR automatiquement s'il n'est pas monté ?
MOUNTBOOT="yes"
  
# Sauvegarder la nouvelle configuration dans /etc/kernels si
# la compilation réussit
SAVE_CONFIG="yes"
  
# Créer les liens symbolique dans  BOOTDIR automatiquement ?
SYMLINK="yes"
  
# Ajouter le nouveau noyau à grub2?
#BOOTLOADER="grub2"
}}

* Le premier paramètre parle de lui-même.

* Le second paramètre dit à genkernel de sauvegarder la configuration du noyau compilé dans {{Path|/etc/kernels}}.

* Les deux dernières options indiquent à genkernel de mettre la configuration de grub à jour. En pratique, voilà ce qui se passe :
** Si une image précédente du noyau avec le même nom existe déjà, elle est renommée en ajoutant {{Path|.old}}  à son nom. Un lien symbolique qui pointe sur lui {{Path|kernel.old}} est automatiquement créé.
** Le nouveau noyau prend la place de tout noyau de même nom dans le dossier {{Path|/boot}}. Si c'est la première fois que le noyau est compilé, un lien symbolique qui pointe sur le nouveau noyau est automatiquement créé.

Après l'exécution de la commande {{c|genkernel --menuconfig all}}, le dossier {{Path|/boot}} pourrait ressembler à ceci :

{{Cmd|ls -al /boot|output=<pre>
total 41336
drwxr-xr-x  3 root root    4096 20 avril 17:23 .
drwxr-xr-x 24 root root    4096 15 sept. 12:31 ..
lrwxrwxrwx  1 root root       1 24 févr.  2013 boot -> .
drwxr-xr-x  2 root root    4096 24 févr.  2013 grub
lrwxrwxrwx  1 root root      40 20 avril 17:23 initramfs -> initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1314412 20 avril 17:23 initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1313548 21 mars   2013 initramfs-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 1295344 25 févr.  2013 initramfs-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3310324 25 févr.  2013 initramfs-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      44 20 avril 17:23 initramfs.old -> initramfs-genkernel-x86_64-3.7.10-gentoo.old
lrwxrwxrwx  1 root root      37 20 avril 17:23 kernel -> kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866656 20 avril 17:23 kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866560 21 mars   2013 kernel-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 4552288 25 févr.  2013 kernel-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3400736 25 févr.  2013 kernel-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      41 20 avril 17:23 kernel.old -> kernel-genkernel-x86_64-3.7.10-gentoo.old
</pre>}}

==== Configurer le programme d'amorçage ====

Les liens symboliques présentées plus haut peuvent être utilisés pour configurer le programme d'amorçage, de telle manière que même si le nouveau noyau n'est pas amorçable, l'utilisateur puisse toujours redémarrer sur l'ancien. 

Pour permettre au nouveau noyau et au nouveau système de fichiers virtuel initrd produit par genkernel de fonctionner correctement, il faut fournir un minimum d'informations dans le fichier de configuration du programme d'amorçage :

* Ajouter <code>root=/dev/sdaN</code> aux paramètres du noyau passés à l'image du noyau, où {{Path|/dev/sdaN}} pointe sur le partition root (<code>N</code> est le numéro de la partition si une partition existe.).
* Si un écran de chargement est utilisé, ajouter une ligne pour le mode approprié tel que <code>vga=0x317</code> aux paramètres passés au noyau et ajouter aussi <code>splash=verbose</code> ou <code>splash=silent</code> en fonction du niveau de verbosité voulu tout au long du processus de démarrage.
* Ajouter l'information sur l'image initrd comme requis par le système d'amorçage. Consulter le chapitre sur la [[Handbook:X86/Installation/Bootloader/fr| Configuration du Système d'amorçage]] du manuel Gentoo pour plus de détails sur comment rendre le système d'amorçage au courant de l'existence du fichier initrd.

Voici à quoi le fichier {{Path|grub.conf}} pourrait ressembler.

{{FileBox|filename=/boot/grub/grub.conf|title=Un Exemple de fichier grub.conf|lang=bash|1=
# This is a sample grub.conf for use with Genkernel, per the Gentoo handbook 
# http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=1&chap=10#doc_chap2 
# If you are not using Genkernel and you need help creating this file, you 
# should consult the handbook. Alternatively, consult the grub.conf.sample that 
# is included with the Grub documentation. 
  
default 0 
timeout 5
splashimage=(hd1,0)/boot/grub/splash.xpm.gz 
   
title Gentoo Linux 
root (hd0,6) 
kernel /boot/kernel initrd=/dev/ram0 root=/dev/sda7 rootfstype=ext4  
initrd /boot/initramfs
  
title Gentoo Linux old kernel 
root (hd0,6) 
kernel /boot/kernel.old initrd=/dev/ram0 root=/dev/sda7 rootfstype=ext4 
initrd /boot/initramfs.old
}}

==== Préserver les fichiers qui fonctionnent ====

L'application genkernel sauvegarde automatiquement les changements des fichiers. Si les changements précédents doivent être sauvegardés, les actions suivantes sont à envisager.

* Le premier fichier à préserver est le fichier de configuration du noyau dans {{Path|/etc/kernels/}}. Si les sources n'ont pas changées avant la recompilation du noyau, le nom utilisé précédemment pour ce fichier sera utilisé à nouveau. C'est pourquoi dupliquer le fichier de configuration précédent avec un nouveau nom aide à préserver l'information tout en laissant l'ancien  fichier disponible  comme point de départ de la nouvelle configuration.

* La deuxième chose importante à préserver est les images des noyaux et initramfs déjà amorçables. La manière de le faire dépend du contexte : 
:# Si le dernier noyau compilé est amorçable, exécuter  {{c|genkernel}} renommera cette image du noyau(et de façon similaire celle de l'image initramfs) en  {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} et créera une nouvelle image {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}. Ceci signifie que, même si le nouveau noyau n'est pas amorçable, l'utilisateur sera toujours en mesure de démarrer sur l'ancien. 
:# Si le dernier noyau compilé n'est pas amorçable et si les sources n'ont pas été changées depuis que l'utilisateur en a compilé un qui était amorçable, avant d'exécuter {{c|genkernel}}, commencer par effacer la nouvelle image du noyau et supprimer le suffixe {{Path|.old}} du nom du dernier noyau amorçable. Sans cela si le nouveau noyau n'est pas amorçable pour la deuxième fois, le {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} amorçable sera évincé par le renommage du {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}, laissant l'utilisateur avec un système non amorçable. Tenir le même raisonnement pour initramfs.

==== Utiliser la  configuration précédente du noyau tout en changeant les sources ====

La configuration précédente peut être utilisée via la variable <var>make menuconfig</var> dans le fichier {{Path|/etc/genkernel.conf}} comme ci-après :

{{FileBox|filename=/etc/genkernel.conf|title=Définir l'appel à make menuconfig|lang=bash|1=
# Exécuter 'make menuconfig' avant de compiler le noyau ?
MENUCONFIG="yes"
}}

{{Note|Il n'est pas nécessaire d'exécuter {{c|make oldconfig}} quand {{c|genkernel}} est utilisé, même si les sources ont été changées de  {{Path|kernel-genkernel-ARCH-version-gentoo-rx}} en {{Path|kernel-genkernel-ARCH-version-gentoo-r(x+1)}} ou de {{Path|kernel-genkernel-ARCH-version-gentoo}} en {{Path|kernel-genkernel-ARCH-(version+1)-gentoo}} parce que {{c|make menuconfig}} va essayer de charger la configuration précédente au mieux dans le menu. Néanmoins, une ''revue minutieuse'' de chacune des options et des nouvelles sections est recommandée. }}

== Démarrer depuis le réseau ==

==== Depuis un CD-ROM d'installation ====

L'outil {{c|genkernel}} peut fabriquer des images de noyau et de disque virtuel initial (initrd) qui permettent de démarrer sur le réseau (netboot). Avec un peu de chance, il est possible de faire démarrer n'importe quel ordinateur récent par le réseau sur l'environnement fourni par le CD-ROM d'installation de Gentoo.

La magie de la chose réside dans le script linuxrc de genkernel : il va essayer de monter le CD-ROM d'installation par NFS via le réseau. Partant de là, les scripts d'initialisation du CD-ROM d'installation seront utilisés comme si le CD était présent en local.

==== Construire un noyau et un initrd qui prennent en charge le démarrage par le réseau ====

Pour activer le support du démarrage par le réseau, activer les options suivantes lors de la configuration du noyau :

{{Warning/fr|Le support du démarrage par le réseau avec genkernel est expérimental et peut contenir quelques bogues. }}

Tout d'abord, l'image du noyau doit contenir les pilotes de la carte réseau du système. En principe, les pilotes pour ce genre de périphériques sont compilés en tant que modules. Pourtant, il est impératif ici (pour pouvoir démarrer avec) que ces pilotes soient intégrés dans le noyau et pas en modules.

{{KernelBox|title=Configurer un noyau 3.x.x avec la prise en charge du pilote NIC|<pre>
Device Drivers --->
   Networking Support --->
      Ethernet (10 or 100Mbit)  --->
         [*] Ethernet (10 or 100Mbit)
         <*>   The driver(s) for each network card</pre>
}}

{{Note|S'assurer de choisir {{c|&lt;*&gt;}} et non pas {{c|&lt;M&gt;}}.}}

Ensuite, il est suggéré d'activer ''IP: kernel level autoconfiguration'' et ''IP: DHCP support''. Cela évitera une couche supplémentaire de complexité si l'adresse IP et le chemin NFS du CD-ROM d'installation peuvent être spécifiés par un serveur DHCP. Bien sûr, cela signifie que la ligne de commande d'appel du noyau sera la même pour toutes les machines — ce qui est très important pour un démarrage via ethernet.

{{KernelBox|title=Configurer un noyau 3.x.x avec la prise en charge de DHCP|<pre>
Device Drivers --->
   Networking Support --->
      Networking options
         [*] TCP/IP networking--->
         [*]   IP: kernel level autoconfiguration
         [*]     IP: DHCP support
</pre>}}

Ces options indiquent au noyau d'envoyer une requête DHCP au démarrage.

De plus, activer [[SquashFS]] car la majorité des CD-ROM d'installation récents de Gentoo l'utilisent. Le support de SquashFS n'est pas intégré aux sources génériques de Linux. Pour activer SquashFS, appliquer les correctifs nécessaires ou bien installer les gentoo-sources.

{{KernelBox|title=Configurer le noyau pour une prise en charge de SquashFS|<pre>
File systems--->
   Miscellaneous filesystems --->
      [*] SquashFS 2.X - Squashed file system support
</pre>}}

Une fois que le processus de compilation est terminé, créer une archive compressée (.tar.gz) qui contient les modules du noyau. Cette étape n'est nécessaire que si la version du noyau ne correspond pas à la version de l'image située sur le CD-ROM d'installation.

Pour créer une archive contenant tous les modules :

{{RootCmd|cd /
|tar -cf /tmp/modules-X.Y.Z.tar.gz /lib/modules/X.Y.Z/}}

Selon la méthode de démarrage par le réseau, l'une des étapes suivantes doit être exécutée :

Pour créer une image etherboot :

{{Emerge|net-misc/mknbi}}

{{RootCmd
|cd /boot
|mkelf-linux -params{{=}}"root{{=}}/dev/ram0 init{{=}}/linuxrc ip{{=}}dhcp" kernel... initrd... > etherboot.img}}

Pour créer une image TFTP OpenBoot/SPARC64 :

{{Emerge|sys-apps/sparc-utils}}

{{RootCmd
|cd /boot
|elftoaout kernel... -o kernel.aout
|piggyback64 kernel.aout System.map-... initrd-...
|mv kernel.aout openboot.img}}

Le fichier {{Path|openboot.img}} est l'image à démarrer.

Enfin, copier ce noyau sur le serveur TFTP. La manière de procéder dépend complètement de l'architecture et dépasse les limites de ce guide. Consulter la documentation spécifique de la plate-forme utilisée.

==== Configuration du NFS ====

Pour mettre en place un partage NFS qui contient le CD-ROM d'installation, utiliser un périphérique de bouclage (loop device) pour y monter l'image ISO et copier le contenu du CD dans le partage NFS. En bonus, le script initrd de genkernel désarchivera tous les fichiers .tar.gz situés dans le répertoire {{Path|/nfs/livecd/add/}}. Tout ce qu'il reste à faire est de copier l'archive {{Path|modules-X.Y.Z.tar.gz}} dans le répertoire {{Path|/nfs/livecd/add/}}.

En supposant que {{Path|/nfs/livecd}} soit un partage NFS :

{{RootCmd|mount /tmp/gentoo-livecd.iso /mnt/cdrom -o loop
|cp -p /mnt/cdrom /nfs/livecd
|umount /mnt/cdrom}}

Copier {{Path|modules.tar.gz}} dans {{Path|/add}}

{{RootCmd|mkdir /nfs/livecd/add
|cp /tmp/modules-X.Y.Z.tar.gz /nfs/livecd/add}}

==== Configuration du DHCP ====

Les images netboot demanderont une adresse IP et un chemin NFS au serveur DHCP ainsi qu'une option <code>root-path</code>. Ces informations peuvent être configurées individuellement en utilisant l'adresse MAC pour identifier les machines :

{{FileBox|filename=/etc/dhcpd.conf|title=Exemple de configuration de client dhcpd.conf |1=
# Ici, 192.168.1.2 est le serveur NFS alors que 192.168.1.10 sera l'adresse IP de la machine démarrée par le  réseau  
host netbootableMachine {
         hardware ethernet 11:22:33:44:55:66;
         fixed-address 192.168.1.10;
         option root-path "192.168.1.2:/nfs/livecd";
}
}}

==== Utilisation du démarrage par le réseau ====

Le démarrage par le réseau est encore une fois très spécifique à la plate-forme utilisée. Ce qui est important, c'est de spécifier les paramètres  <code>ip=dhcp</code> et <code>init=/linuxrc</code> sur la ligne de commande du noyau. Cela activera la carte réseau et montera le CD-ROM d'installation via NFS. Voici quelques astuces pour certaines plates-formes :

Pous etherboot, insérer le disque etherboot dans le lecteur et redémarrer. La ligne de commande du noyau a été spécifiée lors de la construction de l'image. 
Avec Sparc64, appuyer sur {{Key|Stop}}+{{Key|A}} à l'invite de démarrage puis entrer :

{{RootCmd|boot net ip{{=}}dhcp init{{=}}/linuxrc|prompt=ok }}
  
For PXE, Configurez pxelinux (qui fait partie de syslinux),
puis créez un fichier {{Path|pxelinux.cfg/default}}qui contient ces lignes:

{{FileBox|filename=pxelinux.cfg/default|title=Default entry|1=
DEFAULT gentoo
TIMEOUT 40
PROMPT 1
  
LABEL gentoo
    KERNEL kernel-X.Y.Z
    APPEND initrd=initrd-X.Y.Z root=/dev/ram0 init=/linuxrc ip=dhcp
}}

==== Booting a genkernel initramfs ====

===== Introduction =====

Si vous avez installé un disque virtuel initial (initramfs) avec genkernel, vous devriez assurément regarder les options diverses et variées de boot que vous pouvez (ou devez) définir dans la configuration de votre chargeur de démarrage. Les plus courantes sont citées ici pour référence.

===== Loading LVM or software-RAID =====

If the system uses LVM or software-RAID, the initramfs has to be built using the <code>--lvm</code> and <code>--mdadm</code> options. Do not forget to enable support during boot as well. This can be done using the dolvm and domdadm options.

{{FileBox|filename=/boot/grub/grub.conf|title=Enabling LVM and/or MDADM support|1=
# Example for GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 dolvm domdadm
initrd /initramfs-genkernel-x86_64-3.4.3
}}

===== Booting in single-user mode =====

Si, pour une raison ou une autre, le démarrage échoue, récupérer le système en démarrant le mode utilisateur unique reste possible. Ceci ne chargera que les services réellement nécessaires et offrira à l'utilisateur un shell de récuppration root.

{{FileBox|filename=/boot/grub/grub.conf|title=Booting in single-user mode|1=
# Example for GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 init_opts=S
initrd /initramfs-genkernel-x86_64-3.4.3
}}

== Troubleshooting ==

=== compile failed: Kernel not found ===

This failure can be experienced when attempting to compile a kernel for one architecture with a kernel {{Path|.config}} file that has a target of a different architecture than the target. This could be as simple as a machine running an {{Keyword|amd64}} kernel attempting to compile for a {{Keyword|x86}} target.

This can be experienced when booting from a x86_64 LiveCD on a system that is capable of operating in 64-bits, however the target to be installed or repaired is 32-bits. After the compilation process begins, {{c|genkernel}} will attempt to automatically detect the architecture for the target based on the currently running kernel. If the currently running kernel is 64-bit, then, unless it is told otherwise, {{c|genkernel}} will presume it should be looking for a 64-bit kernel.

Suppose then that the kernel's {{Path|.config}} file has x64 disabled. The {{c|make}} command will execute and the resulting kernel binary will be placed in the associated {{Path|x86}} directory. When {{c|genkernel}} goes to install (move and rename) the kernel it cannot find the kernel because it expected a 64-bit kernel.

The solution to this failure is to set {{c|genkernel}}'s <code>--arch-override</code> option to, in this case, the {{Keyword|x86}} architecture. The final command could look like this:

{{RootCmd|genkernel --kernel-config{{=}}/usr/src/linux/.config --btrfs --install --arch-override{{=}}x86 all}}

To override the architecture choice permanently, modify the <var>ARCH_OVERRIDE</var> variable in the {{Path|/etc/genkernel.conf}} file.

== See also ==

* [[Kernel/Configuration|Manual kernel configuration]] - For the times it is necessary to to do things manually.
* [[Dracut]] - Another initramfs builder available in Gentoo.


[[Category:Kernel]]
[[Category:Initramfs]] {{Migrated|originalauthors=Tim Yamin, Jimi Ayodele, Thomas Seiler, Joshua Saddler, Sebastian Pipping, José Fournier}}
