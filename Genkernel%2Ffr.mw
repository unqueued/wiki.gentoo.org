<languages />

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox project|Genkernel|header=true}}
|{{InfoBox package|sys-kernel/genkernel}}
|{{InfoBox wikipedia}}
|{{InfoBox gitweb|genkernel.git}}
|{{InfoBox github|gentoo/genkernel}}
}}

{{c|genkernel}} is [[Article description::a tool created by Gentoo used to automate the build process of the [[kernel]] and [[initramfs]].]] Some of the general features include:

* Configurer les sources du noyau
* Compiler le noyau, le compresser {{Path|bzImage}}, et le copier dans {{Path|/boot}}.
* Créer un système de fichiers virtuels de démarrage (initramfs) dans {{Path|/boot}}.
* Créer les liens symboliques dans {{Path|/boot}}.
* Ajouter du contenu personnalisé dans le fichier initramfs comme les fichiers spécifiques à l’encryption, une image pour l'écran de chargement, des modules supplémentaires, et plus encore.
* Compresser le fichier initramfs.
* Configure le système d'amorçage pour démarrer sur le nouveau noyau et fichier initramfs.

{{Note|C'est une erreur courante de croire que {{c|genkernel}} va ''automatiquement'' générer une configuration du noyau personnalisée. {{c|genkernel}} automatise le processus de compilation du noyau et assemble le fichier initramfs, mais ne génère ''pas'' un fichier de configuration du noyau personnalisé. Il utilise une configuration générique qui fournit une support pour les sous-systèmes couramment utilisés en fonction de l'architecture. Les détails des défauts utilisés pour chaque architecture peuvent être retrouvés sur le [https://gitweb.gentoo.org/proj/genkernel.git/tree/arch répertoire en amont]. Choisir l'architecture voulue puis choisir le fichier kernel-config.}}

== Installation ==

=== Options de la variable USE ===

{{USEflag|package=sys-kernel/genkernel}}

=== Emerge ===

Procéder à l'installation du paquet genkernel :

{{Emerge|sys-kernel/genkernel}}

== Utilisation == 

La forme générale de l'invocation de '''genkernel''' est la suivante :

{{RootCmd|genkernel [options ...] action}}

=== Options === 

Le comportement réel de genkernel dépend d'une grande variété d'options, dont la majorité peut être activée/désactivée dans le fichier {{Path|/etc/genkernel.conf}} ou passée avec la commande {{c|genkernel}}. Les options passées en ligne de commande prévalent sur celles définies dans {{Path|/etc/genkernel.conf}}. Le fichier de configuration est très bien documenté, cependant les options les plus courantes seront vues dans cet article. Le but est pour le lecteur d'être familier avec les invocations courantes de genkernel. Pour une information plus complète, se reporter aux commentaires du fichier {{Path|/etc/genkernel.conf}} ou à la sortie de la commande {{c|man genkernel}}.

{{Note| Certaines options possèdent une variante qui déclenche un comportement inverse. Elle sont notées sous la forme <code>--[no-]option_name</code>, et l'effet inverse est noté entre crochets comme dans cet exemple :
{{CodeBox|title=Activer ou désactiver une certaine option |1= --[no]menuconfig : Activates [deactivates]…}}
Lorsqu'une option possède seulement un effet négatif, le <code>no-</code>, ainsi que son effet, qui ne sont pas optionnels dans ce cas là, sont notés sans les crochets.}}

==== Options agissant sur l'interactivité de l'utilisateur ====

Les options de configuration listées ci-dessous aident l'utilisateur à décider comment interagir avec le processus de configuration. L'utilisateur peut même décider si le fichier de configuration sera sauvegardé. Les options suivantes sont les options de configuration de premier ordre :

; <code>--config=/path/to/genkernel.conf</code>
: Points to the Genkernel configuration file to use (defaults to {{Path|/etc/genkernel.conf}}).
; <code>--[no-]menuconfig</code>
: Activates (or deactivates) the {{c|make menuconfig}} command (which invokes an interactive configuration menu) before building the kernel.
; <code>--gconfig</code>
: Provides a kernel configuration utility which depends on the GTK+ libraries. The advantage of this option is that most users find it easier and clearer to configure the kernel using this tool, since it relies on the X-windowing system. The disadvantage of this option is that the X-windowing system is required to use it, so it will not work on the command line.
; <code>--xconfig</code>
: Provides a kernel configuration utility which depends on the QT libraries. The advantage of this option is that most users find it easier and clearer to configure the kernel using this tool, since it relies on the X-windowing system. The disadvantage of this option is that the X-windowing system is needed to use it, so it will not work on the command line.
; <code>--[no-]save-config</code>
: Saves [or does not save] the kernel configuration to a file in the {{Path|/etc/kernels}} directory for later use.
; <code>--kernname=NickName</code>
: Allows the modification of the name of the kernel and initrd images in the {{Path|/boot}} directory, so that the images produced are {{Path|kernel-NickName-version}} and {{Path|initramfs-NickName-version}}.

==== Options agissant sur le système résultant ====

Les options définies ici définissent quelles fonctionnalités, seront, ou ne seront pas, incluses dans le noyau et le système de fichiers virtuel de démarrage résultants.

; <code>--[no-]splash</code>
:  Activates (or deactivates) support for [[Fbsplash]] framebuffer splash in the genkernel-built initrd image. To override the default theme used by fbsplash, use <code>--splash=PreferredTheme</code> (where <code>PreferredTheme</code> is the title of one of the directories inside the {{Path|/etc/splash}} directory).
; <code>--splash-res=PreferredResolution</code>
: This option allows to select which splash screen resolutions will be supported in the initrd during the start-up of the system. This is useful for two reasons. First, to be able to select only the splash screen resolution(s) relevant to the system. Second, to avoid the unnecessary increase in the disk space required by initrd (since the initrd does not have to support resolutions that are irrelevant for the system's configuration.) However, the option is best omitted if the kernel is being compiled for an Installation CD; this allows splash support for all possible resolutions.
; <code>--do-keymap-auto</code>
: Force keymap selection during the boot sequence.
; <code>--lvm</code>
: Includes support for storage using via [http://sources.redhat.com/lvm2/ Logical Volume Management] (LVM2) from static binaries, if available to the system. Relevant (static) LVM2 binaries are compiled if they are unavailable. Be sure to install the {{Package|sys-fs/lvm2}} package on the system ({{c|emerge sys-fs/lvm2}}) before enabling this option, then review the [[LVM|LVM article]] on the Gentoo wiki.
; <code>--dmraid</code>
: Includes support for DMRAID; the utility which creates RAID mappings using the kernel device-mapper subsystem. [http://people.redhat.com/~heinzm/sw/dmraid/readme DMRAID] discovers, activates, deactivates and displays properties of software RAID sets (ATARAID, for example) and contained DOS partitions.
; <code>--luks</code>
: Includes support for Linux Unified Key Setup or [https://gitlab.com/cryptsetup/cryptsetup LUKS]. This will allow to use a device encrypted by LUKS which contains the root filesystem. On the bootloader, set that encrypted device as the value of <code>crypt_root</code> (and <code>root</code> shall be the unencrypted device LUKS creates).
; <code>--disklabel</code>
: Adds support for disk label and UUID support to the initrd.
; <code>--iscsi</code>
: Adds support for iSCSI to the initrd.
; <code>--multipath</code>
: Adds support for [[Multipath]] to the initrd.
; <code>--linuxrc=/path/to/the/linuxrc_file</code>
: Specifies a user-created linuxrc — a script that is initialized during the start-up stage of the kernel, prior to the actual boot process. A default linuxrc script can be found in the {{Path|/usr/share/genkernel/}} directory. This script allows booting into a small, modularized kernel; it tries to load the minimum amount of drivers that are needed (as modules) by the system.
; <code>--cachedir=/path/to/alt/dir</code>
: Overrides the default cache location used while compiling the kernel.
; <code>--tempdir=/path/to/new/tempdir</code>
: Specifies the location of the temporary directory used by genkernel while compiling the kernel.
; <code>--unionfs</code>
: Includes support for the [http://www.fsl.cs.sunysb.edu/project-unionfs.html Unification File System] in the initrd image.
; <code>--mountboot</code>
: Detects whether or not the {{Path|/boot}} directory needs to be mounted on a separate partition. It will check {{Path|/etc/fstab}} script for instructions on how to mount the boot partition on a file system (if needed).

==== Options agissant sur le choix des outils utilisés pour la compilation ====

Les options suivantes sont prises en charge par genkernel, et sont passées aux applications concernées lors de la compilation et de l'assemblage du noyau. Ces options influent sur le choix des outils utilisés pendant le processus de compilation, quoi qu'à un niveau assez bas.

; <code>--kernel-cc=someCompiler</code>
: Specifies the compiler employed during the kernel compilation process.
; <code>--kernel-ld=someLinker</code>
: Specifies the linker employed during the kernel compilation process.
; <code>--kernel-as=someAssembler</code>
: Specifies the assembler employed during the kernel compilation process.
; <code>--kernel-make=someMake</code>
: Specifies an alternative to the GNU make utility employed during the kernel compilation process.
; <code>--utils-cc=someCompiler</code>
: Specifies the compiler employed during the compilation of support utilities.
; <code>--utils-ld=someLinker</code>
: Specifies the linker employed during the compilation of support utilities.
; <code>--utils-as=someAssembler</code>
: Specifies the assembler employed during the compilation of support utilities.
; <code>--utils-make=someMake</code>
: Specifies an alternative to the GNU make utility employed during the compilation of support utilities.
; <code>--makeopts=-jX</code>
: Specifies the number of concurrent threads that the make utility can implement while the kernel (and utilities) are being compiled. The variable <code>X</code> is a number to be freely chosen, although the most common values are obtained by adding one (1) to the number of cores used by the system, or just use the number of cores on the system. So, for a system with one core, most common option values are <code>-j2</code> or <code>-j1</code>; a system with two cores most likely uses the <code>-j3</code> or <code>-j2</code> options, and so on. (A system with one processor that supports Hyper-Threading™ (HT) Technology can be assumed to have 2 cores, provided Symmetric Multi-Processing (SMP) support is enabled in the kernel.)

==== Options agissant sur le processus de compilation ====

Les options suivantes ont généralement un effet lors de la compilation réelle.

; <code>--kerneldir=/path/to/sources/</code>
: Specifies an alternative kernel source location, rather than the default {{Path|/usr/src/linux/}} location.
; <code>--kernel-config=/path/to/config-file</code>
: Specifies what alternative kernel configuration will be used, rather than the default {{Path|/path/to/sources/.config}} file.
; <code>--module-prefix=/path/to/prefix-directory/</code>
: Specifies a prefix to the directory where kernel modules will be installed (default path is the {{Path|/lib/modules}} directory.)
; <code>--[no-]clean</code>
: Activates (or deactivates) the {{c|make clean}} command before compiling the kernel. The {{c|make clean}} command removes all object files and dependencies from the kernel's source tree.
; <code>--[no-]mrproper</code>
: Activates (or deactivates) the {{c|make mrproper}} command before kernel compilation. Like the {{c|make clean}} command listed above, {{c|make mrproper}} removes all object files and dependencies from the kernel's source tree. However, any previous configuration files (in {{Path|/path/to/sources/.config}} or {{Path|/path/to/sources/.config.old}}) will also be purged from the kernel's source tree. If it is undesirable that the kernel's {{Path|.config}} file keeps disappearing, be sure to disable this option!
; <code>--oldconfig</code>
: Issues the {{c|make oldconfig}} command, which attempts to collect configuration information for the system's architecture from a generic script in {{Path|/usr/share/genkernel}}. This is a non-interactive process; no user input is entertained. Also, if <code>--oldconfig</code> is used in conjunction with <code>--clean</code>, the latter option is negated, resulting in the activation of the <code>--no-clean</code> option.
; <code>--callback="echo hello"</code>
: Calls the specified arguments ({{c|echo hello}}, in this case) after the kernel and the relevant modules have been built, but before building the initrd image. This may be useful when installing external modules in the initrd image by emerging the relevant item(s) with the callback feature, and then redefining a genkernel module group.
; <code>--[no-]install</code>
: Activates (or deactivates) the {{c|make install}} command, which installs the new kernel image, configuration file, initrd image and system map onto the boot partition. Any compiled modules will be installed as well. By default genkernel will attempt mount {{Path|/boot}} if it is on a separate partition before running the install command.
; <code>--no-ramdisk-modules</code>
: Refrains from copying any modules to the genkernel-created initrd image. This option is an exception to the rule about the <code>no-</code> prefix; omission of this prefix creates an invalid genkernel option.
; <code>--all-ramdisk-modules</code>
: Copies all available modules to the genkernel-created initrd image.
; <code>--genzimage</code>
: Creates the initrd image, prior to the kernel image (this hack currently applies only to PPC Pegasos systems).

==== Options de débogage ====

L'utilisation d'options de débogage pendant la compilation du noyau contrôle le nombre d'informations reportées, ainsi que la présentation de celles-ci.

; <code>--loglevel=<nowiki><0|1|2|3|4|5></nowiki></code>
: Controls the level of verbosity for information provided by genkernel. The variable <code>&lt;verblevel&gt;</code> is an integer between 0 and 5. The level '0' represents minimal output, while '5' provides as much information as possible about genkernel's activities during the kernel compilation process.
; <code>--logfile=/path/to/output_file</code>
: Ignores the value set by the <code>--loglevel</code> option (above) and sends all debugging data produced by genkernel to the specified output file. Outputs to {{Path|/var/log/genkernel.log }} by default.
; <code>--[no-]color</code>
: Activates (or deactivates) colored output of debugging information (reported by genkernel) using escape sequences.
; <code>--[no-]debug-cleanup</code>
: Activates (or deactivates) the full post-run cleanup for debug purposes.

=== Actions ===

Une action passée avec la commande {{c|genkernel [options …] ''action''}} indique à genkernel ce qu'il faut faire. Les actions prises en charge sont :

{| class="table table-condensed"
|-
! scope="col" width="25%" | Action !! Description
|-
| {{c|all}} || Compile toutes les étapes — le fichier initrd, l'image du noyau et les modules.
|-
| {{c|bzImage}} || Ne compiler que l'image du noyau.
|-
| {{c|kernel}} || Ne compiler que l'image du noyau et les modules.
|-
| {{c|initramfs}} || Ne compiler que l'image initramfs/ramdisk.
|-
| {{c|ramdisk}} || Ne compiler que l'image initramfs/ramdisk.
|}

== Configuration ==

=== Démarrer ===

Bien qu'il y ait plusieurs façons de lancer genkernel, la plus simple reste {{c|genkernel all}}. Une configuration générique qui marche correctement pour tous les systèmes sera alors utilisée. Comme mentionné précédemment, cette méthode n'est pas sans inconvénients. La plupart des modules compilés ne seront pas utilisés et la compilation prendra beaucoup de temps. L'illustration suivante montre une approche plus efficace, en passant certains paramètres à genkernel en tant qu'utilisateur root:

{{RootCmd|genkernel --splash --no-install --no-clean --menuconfig all}}

Cette opération indique à genkernel de créer un noyau avec un écran de démarrage (<code>--splash</code>) en tampon de trames (framebuffer) qui devra être installé à la main (<code>--no-install</code>). Dans la phase préparatoire de compilation, genkernel n'effacera pas les objets déjà compilés (<code>--no-clean</code>). Enfin, un menu de configuration sera affiché, permettant à l'utilisateur de choisir quels modules seront compilés (<code>--menuconfig</code>).

Remplacer <code>--no-install</code> par <code>--install</code> pour qu'il installe automatiquement le nouveau noyau dans {{Path|/boot}} et spécifier <code>--symlink</code> pour qu'il crée les liens symboliques. En utilisant le paramètre -- <code>--mountboot</code> , la partition {{Path|/boot}} sera montée par genkernel automatiquement, si nécessaire.

{{Note|Ne pas oublier que le fichier {{Path|/etc/genkernel.conf}} est lu par la commande '''genkernel''' lorsqu'elle démarre, et que toutes les options qui y sont définies, seront appliquées, sauf quand une option en ligne de commande contradictoire est passée.}}

=== Changer le noyau  ===

La première chose à faire est d'autoriser le lancement de {{c|make menuconfig}} dans le fichier {{Path|/etc/genkernel.conf}} :

{{FileBox|filename=/etc/genkernel.conf|title=Forcer l'utilisation du menu de configuration dans  /etc/genkernel.conf|1=
# Lancer 'make menuconfig' avant de compiler le noyau 
MENUCONFIG="yes"
}}

==== Gestion des fichiers ====

Quand il utilise genkernel, l'utilisateur doit être conscient de quelques aspects concernant la gestion des fichiers de configuration et des fichiers image du noyau, ainsi que de la façon dont les sources du noyau sont manipulées par le système.

===== Fichiers sources =====

Après une commande {{c|emerge -u gentoo-sources}},, chaque fois que de nouvelles sources sont disponibles, un nouveau répertoire est créé pour les sources du noyau dans  {{Path|/usr/src/}} pour les héberger. Normalement, le dossier des sources actives est pointé par le lien symbolique {{Path|/usr/src/linux}}.

Le répertoire {{Path|/usr/src}} pourrait ressembler à ceci :

{{Cmd|ls -l /usr/src|output=<pre>
total 16
lrwxrwxrwx  1 root root   19 21 Mar   2013 linux -> linux-3.7.10-gentoo
drwxr-xr-x 24 root root 4096 25 Aug  10:39 linux-3.10.7-gentoo
drwxr-xr-x 20 root root 4096 21 Apr  19:42 linux-3.7.10-gentoo
drwxr-xr-x 21 root root 4096 14 Mar   2013 linux-3.7.9-gentoo
</pre>}}

Le lien symbolique {{Path|/usr/src/linux}} peut être changé de différentes manières. 

* Si l'option <code>symlink</code> de la variable USE est définie le lien symbolique {{Path|/usr/src/linux}} est automatiquement mis à jour pour pointer sur les nouvelles sources installées par la commande <code>emerge</code>. 

* Si l'option de la variable USE <code>symlink</code> n'est pas définie, l'utilisateur peut changer la destination du lien symbolique en utilisant la commande {{c|eselect kernel list}} suivie de la commande {{c|eselect kernel set}}.

genkernel utilisera ''toujours'' (exclusivement) les sources pointées par le lien symbolique {{Path|/usr/src/linux}}.

===== Fichiers de configuration du noyau =====

Si une compilation du noyau a déjà été faite à partir des sources actives du noyau, il devrait y avoir un fichier dans le dossier {{Path|/etc/kernels}} qui contient la configuration du noyau qui a été appliquée lors de la création de la dernière bzimage du noyau. Ce fichier est nommé par exemple {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}} ; nom dans lequel il faut remplacer <code>x86_64</code> par l'architecture du système, <code>3.7.9</code> par la version des sources utilisées et <code>r1</code> par le numéro de divulgation des sources.

C'est ce fichier {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}} qui est utilisé comme point de départ de la configuration lorsque {{c|genkernel --menuconfig all}} est lancé.

Si c'est la première fois que genkernel est exécuté avec les nouvelles sources du noyau, ou si la précédente configuration n'a pas été sauvegardée, ce fichier est remplacé par une configuration par défaut qui réside dans {{Path|usr/share/genkernel/arch/x86_64/kernel-config}} (nom dans lequel x86_64 doit être remplacé par l'architecture réelle).

{{Note|Le chemin vers ce fichier de configuration par défaut peut être changé en définissant la variable  <var>DEFAULT_KERNEL_CONFIG</var> dans le fichier {{Path|/etc/genkernel.conf}}.}}

===== Sauvegarder la configuration compilée =====

Si l'option <code>--save-config</code> de genkernel est activée, soit depuis la ligne de commande, soit dans  {{Path|/etc/genkernel.conf}}, la configuration compilée du noyau est sauvegardée (avec le nom donné ci-dessus) dans le dossier {{Path|/etc/kernels}}. En même temps, la configuration est sauvegardée dans le fichier  {{Path|.config}} dans le dossier  {{Path|/usr/src/linux}} mais ce n'est pas ce fichier qui est réutilisé lors de la prochaine exécution de {{c|genkernel all}}.

{{Warning/fr|Il faut être conscient que, à chaque fois que genkernel est exécuté avec l'option <code>--save-config</code> de genkernel définie, le fichier de  configuration dans {{Path|/etc/kernels}} est écrasé. En conséquence, il est fortement recommandé de dupliquer ce fichier sous un nouveau nom ''avant'' d'exécuter genkernel pour le préserver.}}

===== Installer le noyau et le disque virtuel de démarrage dans le dossier {{Path|/boot}} =====

Spécifier l'option <code>all</code> lors de l'invocation de genkernel, demandera à genkernel d'installer les images du noyau et du système de fichiers virtuel de démarrage (initramfs) dans le dossier {{Path|/boot}}. Afin d'exécuter <code>--install</code> d'une manière appropriée, définir ce qui suit dans le fichier {{Path|/etc/genkernel.conf}} :

{{FileBox|filename=/etc/genkernel.conf|title=Définir l'auto-sauvegarde des images du noyau et de initramfs |lang=bash|1=
# Monter BOOTDIR automatiquement s'il n'est pas monté ?
MOUNTBOOT="yes"
  
# Sauvegarder la nouvelle configuration dans /etc/kernels si
# la compilation réussit
SAVE_CONFIG="yes"
  
# Créer les liens symbolique dans  BOOTDIR automatiquement ?
SYMLINK="yes"
  
# Ajouter le nouveau noyau à grub2?
#BOOTLOADER="grub2"
}}

* Le premier paramètre parle de lui-même.

* Le second paramètre dit à genkernel de sauvegarder la configuration du noyau compilé dans {{Path|/etc/kernels}}.

* Les deux dernières options indiquent à genkernel de mettre la configuration de grub à jour. En pratique, voilà ce qui se passe :
** Si une image précédente du noyau avec le même nom existe déjà, elle est renommée en ajoutant {{Path|.old}}  à son nom. Un lien symbolique qui pointe sur lui {{Path|kernel.old}} est automatiquement créé.
** Le nouveau noyau prend la place de tout noyau de même nom dans le dossier {{Path|/boot}}. Si c'est la première fois que le noyau est compilé, un lien symbolique qui pointe sur le nouveau noyau est automatiquement créé.

Après l'exécution de la commande {{c|genkernel --menuconfig all}}, le dossier {{Path|/boot}} pourrait ressembler à ceci :

{{Cmd|ls -al /boot|output=<pre>
total 41336
drwxr-xr-x  3 root root    4096 20 avril 17:23 .
drwxr-xr-x 24 root root    4096 15 sept. 12:31 ..
lrwxrwxrwx  1 root root       1 24 févr.  2013 boot -> .
drwxr-xr-x  2 root root    4096 24 févr.  2013 grub
lrwxrwxrwx  1 root root      40 20 avril 17:23 initramfs -> initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1314412 20 avril 17:23 initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1313548 21 mars   2013 initramfs-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 1295344 25 févr.  2013 initramfs-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3310324 25 févr.  2013 initramfs-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      44 20 avril 17:23 initramfs.old -> initramfs-genkernel-x86_64-3.7.10-gentoo.old
lrwxrwxrwx  1 root root      37 20 avril 17:23 kernel -> kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866656 20 avril 17:23 kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866560 21 mars   2013 kernel-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 4552288 25 févr.  2013 kernel-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3400736 25 févr.  2013 kernel-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      41 20 avril 17:23 kernel.old -> kernel-genkernel-x86_64-3.7.10-gentoo.old
</pre>}}

==== Configurer le programme d'amorçage ====

Les liens symboliques présentées plus haut peuvent être utilisés pour configurer le programme d'amorçage, de telle manière que même si le nouveau noyau n'est pas amorçable, l'utilisateur puisse toujours redémarrer sur l'ancien. 

Pour permettre au nouveau noyau et au nouveau système de fichiers virtuel initrd produit par genkernel de fonctionner correctement, il faut fournir un minimum d'informations dans le fichier de configuration du programme d'amorçage :

* Ajouter <code>root=/dev/sdaN</code> aux paramètres du noyau passés à l'image du noyau, où {{Path|/dev/sdaN}} pointe sur le partition root (<code>N</code> est le numéro de la partition si une partition existe.).
* Si un écran de chargement est utilisé, ajouter une ligne pour le mode approprié tel que <code>vga=0x317</code> aux paramètres passés au noyau et ajouter aussi <code>splash=verbose</code> ou <code>splash=silent</code> en fonction du niveau de verbosité voulu tout au long du processus de démarrage.
* Ajouter l'information sur l'image initrd comme requis par le système d'amorçage. Consulter le chapitre sur la [[Handbook:X86/Installation/Bootloader/fr| Configuration du Système d'amorçage]] du manuel Gentoo pour plus de détails sur comment rendre le système d'amorçage au courant de l'existence du fichier initrd.

Voici à quoi le fichier {{Path|grub.conf}} pourrait ressembler.

{{FileBox|filename=/boot/grub/grub.conf|title=Un Exemple de fichier grub.conf|lang=bash|1=
# This is a sample grub.conf for use with Genkernel, per the Gentoo handbook 
# http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=1&chap=10#doc_chap2 
# If you are not using Genkernel and you need help creating this file, you 
# should consult the handbook. Alternatively, consult the grub.conf.sample that 
# is included with the Grub documentation. 
  
default 0 
timeout 5
splashimage=(hd1,0)/boot/grub/splash.xpm.gz 
   
title Gentoo Linux 
root (hd0,6) 
kernel /boot/kernel initrd=/dev/ram0 root=/dev/sda7 rootfstype=ext4  
initrd /boot/initramfs
  
title Gentoo Linux old kernel 
root (hd0,6) 
kernel /boot/kernel.old initrd=/dev/ram0 root=/dev/sda7 rootfstype=ext4 
initrd /boot/initramfs.old
}}

==== Préserver les fichiers qui fonctionnent ====

L'application genkernel sauvegarde automatiquement les changements des fichiers. Si les changements précédents doivent être sauvegardés, les actions suivantes sont à envisager.

* Le premier fichier à préserver est le fichier de configuration du noyau dans {{Path|/etc/kernels/}}. Si les sources n'ont pas changées avant la recompilation du noyau, le nom utilisé précédemment pour ce fichier sera utilisé à nouveau. C'est pourquoi dupliquer le fichier de configuration précédent avec un nouveau nom aide à préserver l'information tout en laissant l'ancien  fichier disponible  comme point de départ de la nouvelle configuration.

* La deuxième chose importante à préserver est les images des noyaux et initramfs déjà amorçables. La manière de le faire dépend du contexte : 
:# Si le dernier noyau compilé est amorçable, exécuter  {{c|genkernel}} renommera cette image du noyau(et de façon similaire celle de l'image initramfs) en  {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} et créera une nouvelle image {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}. Ceci signifie que, même si le nouveau noyau n'est pas amorçable, l'utilisateur sera toujours en mesure de démarrer sur l'ancien. 
:# Si le dernier noyau compilé n'est pas amorçable et si les sources n'ont pas été changées depuis que l'utilisateur en a compilé un qui était amorçable, avant d'exécuter {{c|genkernel}}, commencer par effacer la nouvelle image du noyau et supprimer le suffixe {{Path|.old}} du nom du dernier noyau amorçable. Sans cela si le nouveau noyau n'est pas amorçable pour la deuxième fois, le {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} amorçable sera évincé par le renommage du {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}, laissant l'utilisateur avec un système non amorçable. Tenir le même raisonnement pour initramfs.

==== Utiliser la  configuration précédente du noyau tout en changeant les sources ====

La configuration précédente peut être utilisée via la variable <var>make menuconfig</var> dans le fichier {{Path|/etc/genkernel.conf}} comme ci-après :

{{FileBox|filename=/etc/genkernel.conf|title=Définir l'appel à make menuconfig|lang=bash|1=
# Exécuter 'make menuconfig' avant de compiler le noyau ?
MENUCONFIG="yes"
}}

{{Note|Il n'est pas nécessaire d'exécuter {{c|make oldconfig}} quand {{c|genkernel}} est utilisé, même si les sources ont été changées de  {{Path|kernel-genkernel-ARCH-version-gentoo-rx}} en {{Path|kernel-genkernel-ARCH-version-gentoo-r(x+1)}} ou de {{Path|kernel-genkernel-ARCH-version-gentoo}} en {{Path|kernel-genkernel-ARCH-(version+1)-gentoo}} parce que {{c|make menuconfig}} va essayer de charger la configuration précédente au mieux dans le menu. Néanmoins, une ''revue minutieuse'' de chacune des options et des nouvelles sections est recommandée. }}

== Démarrer depuis le réseau ==

==== Depuis un CD-ROM d'installation ====

L'outil {{c|genkernel}} peut fabriquer des images de noyau et de disque virtuel initial (initrd) qui permettent de démarrer sur le réseau (netboot). Avec un peu de chance, il est possible de faire démarrer n'importe quel ordinateur récent par le réseau sur l'environnement fourni par le CD-ROM d'installation de Gentoo.

La magie de la chose réside dans le script linuxrc de genkernel : il va essayer de monter le CD-ROM d'installation par NFS via le réseau. Partant de là, les scripts d'initialisation du CD-ROM d'installation seront utilisés comme si le CD était présent en local.

==== Construire un noyau et un initrd qui prennent en charge le démarrage par le réseau ====

Pour activer le support du démarrage par le réseau, activer les options suivantes lors de la configuration du noyau :

{{Warning/fr|Le support du démarrage par le réseau avec genkernel est expérimental et peut contenir quelques bogues. }}

Tout d'abord, l'image du noyau doit contenir les pilotes de la carte réseau du système. En principe, les pilotes pour ce genre de périphériques sont compilés en tant que modules. Pourtant, il est impératif ici (pour pouvoir démarrer avec) que ces pilotes soient intégrés dans le noyau et pas en modules.

{{KernelBox|title=Configurer un noyau 3.x.x avec la prise en charge du pilote NIC|<pre>
Device Drivers --->
   Networking Support --->
      Ethernet (10 or 100Mbit)  --->
         [*] Ethernet (10 or 100Mbit)
         <*>   The driver(s) for each network card</pre>
}}

{{Note|S'assurer de choisir {{c|&lt;*&gt;}} et non pas {{c|&lt;M&gt;}}.}}

Ensuite, il est suggéré d'activer ''IP: kernel level autoconfiguration'' et ''IP: DHCP support''. Cela évitera une couche supplémentaire de complexité si l'adresse IP et le chemin NFS du CD-ROM d'installation peuvent être spécifiés par un serveur DHCP. Bien sûr, cela signifie que la ligne de commande d'appel du noyau sera la même pour toutes les machines — ce qui est très important pour un démarrage via ethernet.

{{KernelBox|title=Configurer un noyau 3.x.x avec la prise en charge de DHCP|<pre>
Device Drivers --->
   Networking Support --->
      Networking options
         [*] TCP/IP networking--->
         [*]   IP: kernel level autoconfiguration
         [*]     IP: DHCP support
</pre>}}

Ces options indiquent au noyau d'envoyer une requête DHCP au démarrage.

De plus, activer [[SquashFS]] car la majorité des CD-ROM d'installation récents de Gentoo l'utilisent. Le support de SquashFS n'est pas intégré aux sources génériques de Linux. Pour activer SquashFS, appliquer les correctifs nécessaires ou bien installer les gentoo-sources.

{{KernelBox|title=Configurer le noyau pour une prise en charge de SquashFS|<pre>
File systems--->
   Miscellaneous filesystems --->
      [*] SquashFS 2.X - Squashed file system support
</pre>}}

Une fois que le processus de compilation est terminé, créer une archive compressée (.tar.gz) qui contient les modules du noyau. Cette étape n'est nécessaire que si la version du noyau ne correspond pas à la version de l'image située sur le CD-ROM d'installation.

Pour créer une archive contenant tous les modules :

{{RootCmd|cd /
|tar -cf /tmp/modules-X.Y.Z.tar.gz /lib/modules/X.Y.Z/}}

Selon la méthode de démarrage par le réseau, l'une des étapes suivantes doit être exécutée :

Pour créer une image etherboot :

{{Emerge|net-misc/mknbi}}

{{RootCmd
|cd /boot
|mkelf-linux -params{{=}}"root{{=}}/dev/ram0 init{{=}}/linuxrc ip{{=}}dhcp" kernel... initrd... > etherboot.img}}

Pour créer une image TFTP OpenBoot/SPARC64 :

{{Emerge|sys-apps/sparc-utils}}

{{RootCmd
|cd /boot
|elftoaout kernel... -o kernel.aout
|piggyback64 kernel.aout System.map-... initrd-...
|mv kernel.aout openboot.img}}

Le fichier {{Path|openboot.img}} est l'image à démarrer.

Enfin, copier ce noyau sur le serveur TFTP. La manière de procéder dépend complètement de l'architecture et dépasse les limites de ce guide. Consulter la documentation spécifique de la plate-forme utilisée.

==== Configuration du NFS ====

Pour mettre en place un partage NFS qui contient le CD-ROM d'installation, utiliser un périphérique de bouclage (loop device) pour y monter l'image ISO et copier le contenu du CD dans le partage NFS. En bonus, le script initrd de genkernel désarchivera tous les fichiers .tar.gz situés dans le répertoire {{Path|/nfs/livecd/add/}}. Tout ce qu'il reste à faire est de copier l'archive {{Path|modules-X.Y.Z.tar.gz}} dans le répertoire {{Path|/nfs/livecd/add/}}.

En supposant que {{Path|/nfs/livecd}} soit un partage NFS :

{{RootCmd|mount /tmp/gentoo-livecd.iso /mnt/cdrom -o loop
|cp -p /mnt/cdrom /nfs/livecd
|umount /mnt/cdrom}}

Copier {{Path|modules.tar.gz}} dans {{Path|/add}}

{{RootCmd|mkdir /nfs/livecd/add
|cp /tmp/modules-X.Y.Z.tar.gz /nfs/livecd/add}}

==== Configuration du DHCP ====

Les images netboot demanderont une adresse IP et un chemin NFS au serveur DHCP ainsi qu'une option <code>root-path</code>. Ces informations peuvent être configurées individuellement en utilisant l'adresse MAC pour identifier les machines :

{{FileBox|filename=/etc/dhcpd.conf|title=Exemple de configuration de client dhcpd.conf |1=
# Ici, 192.168.1.2 est le serveur NFS alors que 192.168.1.10 sera l'adresse IP de la machine démarrée par le  réseau  
host netbootableMachine {
         hardware ethernet 11:22:33:44:55:66;
         fixed-address 192.168.1.10;
         option root-path "192.168.1.2:/nfs/livecd";
}
}}

==== Utilisation du démarrage par le réseau ====

Le démarrage par le réseau est encore une fois très spécifique à la plate-forme utilisée. Ce qui est important, c'est de spécifier les paramètres  <code>ip=dhcp</code> et <code>init=/linuxrc</code> sur la ligne de commande du noyau. Cela activera la carte réseau et montera le CD-ROM d'installation via NFS. Voici quelques astuces pour certaines plates-formes :

Pous etherboot, insérer le disque etherboot dans le lecteur et redémarrer. La ligne de commande du noyau a été spécifiée lors de la construction de l'image. 
Avec Sparc64, appuyer sur {{Key|Stop}}+{{Key|A}} à l'invite de démarrage puis entrer :

{{RootCmd|boot net ip{{=}}dhcp init{{=}}/linuxrc|prompt=ok }}
  
Pour PXE, configurer pxelinux (qui fait partie de syslinux), puis créer un fichier {{Path|pxelinux.cfg/default}} qui contient ces lignes :

{{FileBox|filename=pxelinux.cfg/default|title=Entrée par défaut|1=
DEFAULT gentoo
TIMEOUT 40
PROMPT 1
  
LABEL gentoo
    KERNEL kernel-X.Y.Z
    APPEND initrd=initrd-X.Y.Z root=/dev/ram0 init=/linuxrc ip=dhcp
</pre> }}

==== Amorcer un disque virtuel initial de genkernel ====

===== Introduction =====

Si un disque virtuel initial (initramfs) a été installé avec genkernel, alors regarder les options diverses et variées de boot que qui peuvent (ou doivent) être définies dans la configuration du système d'amorçage. Les plus courantes sont citées ici pour référence.

===== Chargement de LVM ou de software-RAID =====

Si le système utilise LVM ou RAID logiciel, le disque virtuel initial (initramfs) a du être construit en utilisant les options <code>--lvm</code> et <code>--mdadm</code>. Néanmoins, ne pas oublier d'activer la prise en charge au moment du démarrage. Ceci peut être fait en utilisant les options dolvm et domdadm.

{{FileBox|filename=/boot/grub/grub.conf|title=Activer la prise en charge de  LVM et/ou MDADM|1=
# Exemple pour  GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 dolvm domdadm
initrd /initramfs-genkernel-x86_64-3.4.3
}}

===== Démarrer dans le mode utilisateur unique (single-user) =====

Si, pour une raison ou une autre, le démarrage échoue, récupérer le système en démarrant le mode utilisateur unique reste possible. Ceci ne chargera que les services réellement nécessaires et offrira à l'utilisateur un shell de récupération root.

{{FileBox|filename=/boot/grub/grub.conf|title=Démarrer dans le mode utilisateur unique|1=
# Exemple pour GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 init_opts=S
initrd /initramfs-genkernel-x86_64-3.4.3
}}

== Dépannage ==

=== La compilation a échouée : Kernel not found ===

Cet échec peut être rencontré quand l'utilisateur essaye de compiler un noyau pour une architecture avec un fichier de configuration noyau {{Path|.config}} qui cible une architecture différente. Cela peut être aussi simple qu'une machine tournant sur un noyau {{Keyword|amd64}} et qui essaye de compiler pour une machine cible sous {{Keyword|x86}}.

Cela peut être rencontré quand l'utilisateur démarre depuis un LiveCD x86_64 sur un système capable d'opérer en 64 bits, alors que le système cible à installer ou réparer est en 32 bits. Après que le processus de compilation ne démarre, {{c|genkernel}} essaiera automatiquement de détecter l'architecture pour le système cible en fonction de celle du noyau actuel. Si le noyau actuel est en 64 bits, alors, à moins que spécifié, {{c|genkernel}} assumera qu'il doit chercher pour un noyau 64 bits.

Supposer que le fichier {{Path|.config}} du noyau a désactivé le support pour x64. La commande {{c|make}} s'exécutera et le noyau résultant sera placé dans le répertoire {{Path|x86}} associé. Quand {{Path|x86}} va pour installer (déplacer et renommer) le noyau, il ne pourra pas le trouver car il s'attendait à un noyau 64 bits.

La solution est de mettre l'option de {{c|genkernel}} <code>--arch-override</code> à, dans ce cas, l'architecture {{Keyword|x86}}. La commande final ressemblera à ceci :

{{RootCmd|genkernel --kernel-config{{=}}/usr/src/linux/.config --btrfs --install --arch-override{{=}}x86 all}}

Pour outrepasser le choix d'architecture de façon permanente, modifier la variable <var>ARCH_OVERRIDE</var> dans le fichier {{Path|/etc/genkernel.conf}}.

=== external modules (such as xtables_addons) must be rebuilt manually with a new kernel ===

Genkernel can rebuild external modules after the kernel is built; edit {{Path|genkernel.conf}} to include this line:

{{FileBox|filename=/etc/genkernel.conf|title=Run a command after building a new kernel|lang=bash|1=
# Run the specified command in the current environment after the kernel and
# modules have been compiled, useful to rebuild external kernel module
# (use "emerge --quiet @module-rebuild" for >=portage-2.2) or installing additional
# files (use 'copy_image_with_preserve dtb path/to/dtb dtb ${KNAME}-${ARCH}-${KV}')
#CMD_CALLBACK=""
CMD_CALLBACK="emerge --quiet @module-rebuild"
}}

== Voir aussi ==

* [[Kernel/Configuration/fr|Configuration du noyau manuelle]] - Pour quand il est nécessaire de faire les choses manuellement.
* [[Dracut]] - Un autre outil de création des fichiers initramfs disponible dans Gentoo.


[[Category:Kernel]]
[[Category:Initramfs]] {{Migrated|originalauthors=Tim Yamin, Jimi Ayodele, Thomas Seiler, {{Dev|nightmorph}}, {{Dev|sping}}, {{Dev|jaaf}}}}
