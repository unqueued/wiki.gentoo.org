<languages />

{{Metadata|abstract=genkernel est utilisé pour automatiser le processus de compilation/construction du noyau et du disque initial de démarrage (initramfs).}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox wikipedia|header=true}}
|{{InfoBox gdoc|genkernel}}
}}

'''genkernel''' est utilisé pour automatiser le processus de compilation du   [[kernel/fr| noyau]] et du système de fichiers virtuel de démarrage [[initramfs|(initramfs)]]. Parmi les fonctionnalités citons :
* la configuration des sources du noyau 
* la compilation de l'image compressée du noyau  {{Path|bzImage}} et sa copie dans {{Path|/boot}}
* la création d'un système de fichiers virtuel du démarrage (initramfs) et sa copie dans {{Path|/boot}}
* la création des liens symboliques dans   {{Path|/boot}}
* l'ajout d'un contenu personnalisé au système de fichiers virtuel de démarrage (initramfs) comme par exemple les fichiers relatifs au chiffrage, les écrans d'attente, les modules supplémentaires et plus encore.
* la compression de l'initramfs
* la configuration du [[bootloader |chargeur de démarrage]]

== Installation ==

{{USEflag|package=sys-kernel/genkernel
|crypt++no
|cryptsetup++no
|ibm++no
|selinux++no
}}

Initiate the installation of genkernel:

{{Emerge|genkernel}}

== Invocation de Genkernel ==

La forme générale de l'invocation de '''genkernel''' est la suivante :

{{RootCmd|<pre> genkernel [options ...] action
</pre>}}

=== Options === 

Le comportement réel de genkernel dépend d'une grande variété d'options, dont la majorité peut être activée/désactivée dans le fichier {{Path|/etc/genkernel.conf}} ou passer avec la commande <kbd>genkernel</kbd> . Les options passées en ligne de commande prévalent sur celles définies dans {{Path|/etc/genkernel.conf}}. Ce fichier est très bien documenté. Nous examinerons néanmoins ici quelques unes des options les plus communes. Pour une information plus complète, reportez-vous aux commentaires du fichier {{Path|/etc/genkernel.conf}} ou à la sortie de la commande <kbd>man genkernel</kbd> .

{{Note| Certaines options possèdent une variante qui déclenche un  comportement inverse. Elle sont notées sous la forme <tt>--[no-]option_name</tt>, et l'effet inverse est noté entre crochets comme dans cet exemple :
{{CodeBox|title=Activer ou désactiver une certaine option |1= --[no]menuconfig : Activates [deactivates]…}}
Lorsqu'une option possède seulement un effet négatif, le <tt>no-</tt>, ainsi que son effet, qui ne sont pas optionnels dans ce cas là, sont notés sans les crochets.}}

Where options have only a negative effect, the <code>no-</code>, and its effect,  which are not optional in this case, are figured without square brackets.}}

==== Options acting on user interactivity ====

The configuration options listed below help the user decide how to interact with the configuration process. Users can even choose whether or not the configuration file created in the process should be saved. The following are considered primary configuration options:

{| class="wikitable"
|-
! Option !! Description
|-
| <code>--[no-]menuconfig</code> || Activates [ or deactivates] the <tt>make menuconfig</tt> command (which invokes an interactive configuration menu) before building the kernel.
|-
| <code>--gconfig</code> || Provides a kernel configuration utility which depends on the GTK+ libraries. The advantage of this option is that most users find it easier and clearer to configure the kernel using this tool, since it relies on the X-windowing system. The disadvantage of this option is that the X-windowing system is required to use it, so it will not work on the command line.
|-
| <code>--xconfig</code> || Provides a kernel configuration utility which depends on the QT libraries. The advantage of this option is that most users find it easier and clearer to configure the kernel using this tool, since it relies on the X-windowing system. The disadvantage of this option is that the X-windowing system is needed to use it, so it will not work on the command line.
|-
| <code>--[no-]save-config</code> || Saves [or does not save] the kernel configuration to a file in the {{Path|/etc/kernels}} directory for later use.
|-
| <code>--kernname=NickName</code> || Allows the modification of the name of the kernel and initrd images in the {{Path|/boot}} directory, so that the images produced are {{Path|kernel-NickName-version}} and {{Path|initramfs-NickName-version}}.
|}

==== Options acting on the resulting system ====

The configuration options listed here defines which features will or will not be enabled in the resulting kernel and initrd.

{| class="wikitable"
|-
! Option !! Description
|-
| <code>--[no-]splash</code> ||  Activates [or deactivates] support for [[Fbsplash]] framebuffer splash in the genkernel-built initrd image. To override the default theme used by fbsplash, use <code>--splash=PreferredTheme</code> (where <code>PreferredTheme</code> is the title of one of the directories inside the {{Path|/etc/splash}} directory.
|-
| <code>--splash-res=PreferredResolution</code> || This option allows to select which splash screen resolutions will be supported in the initrd during the start-up of the system. This is useful for two reasons. First, to be able to select only the splash screen resolution(s) relevant to the system. Second, to avoid the unnecessary increase in the disk space required by initrd (since the initrd does not have to support resolutions that are irrelevant for the system's configuration.) However, the option is best omitted if the kernel is being compiled for an Installation CD; this allows splash support for all possible resolutions.
|-
| <code>--do-keymap-auto</code> || Force keymap selection during the boot sequence.
|-
| <code>--lvm</code> || Includes support for storage using via [http://sources.redhat.com/lvm2/ Logical Volume Management] (LVM2) from static binaries, if available to the system. Relevant (static) LVM2 binaries are compiled if they are unavailable. Be sure to install the {{Package|sys-fs/lvm2}} package on the system (<tt>emerge sys-fs/lvm2</tt> before enabling this option, then review the [[LVM | LVM article]] on the Gentoo wiki.
|-
| <code>--dmraid</code> || Includes support for DMRAID; the utility which creates RAID mappings using the kernel device-mapper subsystem. [http://people.redhat.com/~heinzm/sw/dmraid/readme DMRAID] discovers, activates, deactivates and displays properties of software RAID sets (ATARAID, for example) and contained DOS partitions.
|-
| <code>--luks</code> || Includes support for Linux Unified Key Setup or [http://clemens.endorphin.org/cryptography LUKS]. This will allow to use a device encrypted by LUKS which contains the root filesystem. On the bootloader, set that encrypted device as the value of <code>crypt_root</code> (and <code>real_root</code> shall be the unencrypted device LUKS creates).
|-
| <code>--disklabel</code> || Adds support for disk label and UUID support to the initrd.
|-
| <code>--iscsi</code> || Adds support for iSCSI to the initrd.
|-
| <code>--multipath</code> || Adds support for [[Multipath]] to the initrd.
|-
| <code>--linuxrc=/path/to/the/linuxrc_file</code> || Specifies a user-created linuxrc — a script that is initialized during the start-up stage of the kernel, prior to the actual boot process. A default linuxrc script can be found in the {{Path|/usr/share/genkernel/}} directory. This script allows booting into a small, modularized kernel; it tries to load the minimum amount of drivers that are needed (as modules) by the system.
|-
| <code>--cachedir=/path/to/alt/dir</code> || Overrides the default cache location used while compiling the kernel.
|-
| <code>--tempdir=/path/to/new/tempdir</code> || Specifies the location of the temporary directory used by genkernel while compiling the kernel.
|-
| <code>--unionfs</code> || Includes support for the [http://www.fsl.cs.sunysb.edu/project-unionfs.html Unification File System] in the initrd image.
|-
| <code>--mountboot</code> || Detects whether or not the {{Path|/boot}} directory needs to be mounted on a separate partition. It will check {{Path|/etc/fstab}} script for instructions on how to mount the boot partition on a file system (if needed).
|}

==== Options acting on the choice of the tools used for building ====

The following options are supported by genkernel, and are passed to the relevant applications while the kernel is being assembled. These options affect the compiling tools used for the kernel compilation process, albeit at a much lower level.

{| class="wikitable"
|-
! Options !! Description
|-
| <code>--kernel-cc=someCompiler</code> || Specifies the compiler employed during the kernel compilation process.
|-
| <code>--kernel-ld=someLinker</code> || Specifies the linker employed during the kernel compilation process.
|-
| <code>--kernel-as=someAssembler</code> || Specifies the assembler employed during the kernel compilation process.
|-
| <code>--kernel-make=someMake</code> || Specifies an alternative to the GNU make utility employed during the kernel compilation process.
|-
| <code>--utils-cc=someCompiler</code> || Specifies the compiler employed during the compilation of support utilities.
|-
| <code>--utils-ld=someLinker</code> || Specifies the linker employed during the compilation of support utilities.
|-
| <code>--utils-as=someAssembler</code> || Specifies the assembler employed during the compilation of support utilities.
|-
| <code>--utils-make=someMake</code> || Specifies an alternative to the GNU make utility employed during the compilation of support utilities.
|-
| <code>--makeopts=-jX</code> || Specifies the number of concurrent threads that the make utility can implement while the kernel (and utilities) are being compiled. The variable <code>X</code> is a number to be freely chosen, although the most common values are obtained by adding one (1) to the number of cores used by the system, or just use the number of cores on the system. So, for a system with one core, most common option values are <code>-j2</code> or <code>-j1</code>; a system with two cores most likely uses the <code>-j3</code> or <code>-j2</code> options, and so on. (A system with one processor that supports Hyper-Threading™ (HT) Technology can be assumed to have 2 cores, provided Symmetric Multi-Processing (SMP) support is enabled in the kernel.)
|}

==== Options acting on the compilation process ====

The following options usually take effect during the actual compilation:

{| class="wikitable"
|-
! Option !! Description
|-
| <code>--kerneldir=/path/to/sources/</code> || Specifies an alternative kernel source location, rather than the default {{Path|/usr/src/linux/}} location.
|-
| <code>--kernel-config=/path/to/config-file</code> || Specifies what alternative kernel configuration will be used, rather than the default {{Path|/path/to/sources/.config}} file.
|-
| <code>--module-prefix=/path/to/prefix-directory/</code> || Specifies a prefix to the directory where kernel modules will be installed (default path is the {{Path|/lib/modules}} directory.)
|-
| <code>--[no-]clean</code> || Activates [or deactivates] the <tt>make clean</tt> command before compiling the kernel. The make clean command removes all object files and dependencies from the kernel's source tree.
|-
| <code>--[no-]mrproper</code> || Activates [or deactivates] the <tt>make mrproper</tt> command before kernel compilation. Like the make clean command listed above, make mrproper removes all object files and dependencies from the kernel's source tree. However, any previous configuration files (in {{Path|/path/to/sources/.config}} or {{Path|/path/to/sources/.config.old}}) will also be purged from the kernel's source tree.
|-
| <code>--oldconfig</code> || Issues the <tt>make oldconfig</tt> command, which attempts to collect configuration information for the system's architecture from a generic script in {{Path|/usr/share/genkernel}}. This is a non-interactive process; no user input is entertained. Also, if <code>--oldconfig</code> is used in conjunction with <code>--clean</code>, the latter option is negated, resulting in the activation of the <code>--no-clean</code> option.
|-
| <code>--callback="echo hello"</code> || Calls the specified arguments (<tt>echo hello</tt>, in this case) after the kernel and the relevant modules have been built, but before building the initrd image. This may be useful when installing external modules in the initrd image by emerging the relevant item(s) with the callback feature, and then redefining a genkernel module group.
|-
| <code>--[no-]install</code> || Activates [or deactivates] the make install command, which installs the new kernel image, configuration file, initrd image and system map onto the boot partition. Any compiled modules will be installed as well. By default genkernel will attempt mount {{Path|/boot}} if it is on a separate partition before running the install command.
|-
| <code>--no-ramdisk-modules</code> || Refrains from copying any modules to the genkernel-created initrd image. This option is an exception to the rule about the <code>no-</code> prefix; omission of this prefix creates an invalid genkernel option.
|-
| <code>--all-ramdisk-modules</code> || Copies all available modules to the genkernel-created initrd image.
|-
| <code>--genzimage</code> || Creates the initrd image, prior to the kernel image (this hack currently applies only to PPC Pegasos systems).
|}

==== Debugging options ====

The use of debugging options during the kernel compilation process controls the amount of information reported, as well as the presentation of said data.

{| class="wikitable"
|-
! Option !! Description
|-
| <code>--loglevel=verblevel</code> || Controls the level of verbosity for information provided by genkernel. The variable <code>&lt;verblevel&gt;</code> is an integer between 0 and 5. The level '0' represents minimal output, while '5' provides as much information as possible about genkernel's activities during the kernel compilation process.
|-
| <code>--logfile=/path/to/outputfile</code> || Ignores the value set by the <code>--loglevel</code> argument, and sends all debugging data produced by genkernel to the specified output file, which is located at {{Path|/var/log/genkernel.log }} by default.
|-
| <code>--[no-]color</code> || Activates (or deactivates) colored output of debugging information (reported by genkernel) using escape sequences.
|}

=== Action ===

Une action passée avec la commande <tt>genkernel [options …] action</tt> indique à <kbd>genkernel</kbd>  ce qu'il faut faire. Les <tt>actions prises</tt> en charge sont :

;<kbd>all</kbd>
: compile/construit toutes les étapes — le disque virtuel initial (initrd), l'image du noyau et les modules.

;<kbd>bzImage</kbd>
:  ne compile/construit que l'image du noyau.

;<kbd>kernel</kbd> : ne compile/construit que l'image du noyau et les modules

;<kbd>initramfs</kbd>
:  ne compile/construit que le disque virtuel initial(initramfs)

;<kbd>ramdisk</kbd>
: ne compile/construit que le disque virtuel initial(initramfs)

== Utiliser Genkernel  ==

=== Première invocation de Genkernel ===

Bien qu'il y ait plusieurs façons de lancer genkernel, la plus simple reste <kbd>genkernel all</kbd>. Une configuration générique qui marche correctement pour tous les systèmes sera alors utilisée. Comme mentionné précédemment, cette méthode n'est pas sans inconvénients. La plupart des modules compilés ne seront pas utilisés et la compilation prendra beaucoup de temps. L'illustration suivante montre une approche plus efficace, en passant certains paramètres à genkernel en tant qu'utilisateur root:

{{RootCmd|genkernel --splash --no-install --no-clean --menuconfig all}}

Cette opération indique à genkernel de créer un noyau avec un écran de démarrage (<tt>--splash</tt>) en tampon de trames (framebuffer)  qui devra être installé à la main (<tt>--no-install</tt>). Dans la phase préparatoire de compilation, genkernel n'effacera pas les objets déjà compilés (<tt>--no-clean</tt>). Enfin, un menu de configuration sera affiché, permettant à l'utilisateur de choisir quels modules seront compilés (<tt>--menuconfig</tt>).

Remplacez <tt>--no-install</tt> par <tt>--install</tt> pour qu'il installe automatiquement le nouveau noyau dans {{Path|/boot}} et spécifiez <tt>--symlink</tt> pour qu'il crée les liens symboliques pour vous. En utilisant le paramètre -- <tt>--mountboot</tt> , la partition {{Path|/boot}} sera monté par genkernel automatiquement, si nécessaire.

{{Note|N'oubliez pas que le fichier {{Path|/etc/genkernel.conf}} est lu par la commande <kbd>genkernel</kbd> lorsqu'elle démarre, et que toutes les options qui y sont définies, seront appliquées, sauf quand une option en ligne de commande contradictoire est passée. }}

=== Utiliser Genkernel pour modifier votre noyau  ===

La première chose que vous devriez faire, c'est autoriser le lancement de <kbd>make menuconfig</kbd> dans le fichier {{Path|/etc/genkernel.conf}} :

{{FileBox|filename=/etc/genkernel.conf|title=Forcer l'utilisation du menu de configuration dans  /etc/genkernel.conf|1=
# Lance  'make menuconfig' avant de compiler le noyau ?
MENUCONFIG="yes"
}}

==== Gestion des fichiers par  genkernel ====

Quand il utilise genkernel, l'utilisateur doit être conscient de quelques aspects concernant la gestion des fichiers de configuration et des fichiers image du noyau, ainsi que de la façon dont les sources du noyau sont manipulées par le système.

===== Fichiers sources utilisés par  genkernel =====

Après une commande <kbd>emerge -u gentoo-sources</kbd>, chaque fois que de nouvelles sources sont disponibles, un nouveau dossier est créé pour les sources du noyau dans  {{Path|/usr/src/}} pour les héberger. Normalement, le dossier des sources actives est pointé par le lien symbolique {{Path|/usr/src/linux}}.

Le dossier  {{Path|/usr/src}} pourrait ressembler à ceci :

{{Cmd|ls -l /usr/src|output=<pre>
total 16
lrwxrwxrwx  1 root root   19 21 Mar   2013 linux -> linux-3.7.10-gentoo
drwxr-xr-x 24 root root 4096 25 Aug  10:39 linux-3.10.7-gentoo
drwxr-xr-x 20 root root 4096 21 Apr  19:42 linux-3.7.10-gentoo
drwxr-xr-x 21 root root 4096 14 Mar   2013 linux-3.7.9-gentoo
</pre>}}

Le lien symbolique  {{Path|linux}} peut être changé de différentes manières. 

* Si l'option <code>symlink</code> de la variable USE est définie dans {{Path|/etc/portage/make.conf}}, le lien symbolique {{Path|linux}} est automatiquement mis à jour pour pointer sur les nouvelles sources installées par la commande <code> emerge</code>. . 

* Si l'option de la variable  USE évoquée ci-dessus n'est pas définie, l'utilisateur peut changer la destination du lien symbolique en utilisant la commande <kbd>eselect kernel list</kbd> .

Quoi qu'il en soit, <kbd>genkernel</kbd> utilise toujours les sources pointées par ce lien symbolique.

===== Fichiers de configuration du noyau utilisé par genkernel =====

Si une compilation du noyau a déjà été faite à partir des sources actives du noyau, il devrait y avoir un fichier dans le dossier {{Path|/etc/kernels}} qui contient la configuration du noyau qui a été appliquée lors de la création de la dernière bzimage du noyau. Ce fichier est nommé par exemple {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}}; nom dans lequel il faut remplacer x86_64 par votre achitecture, 3.7.9 par la version des sources que vous utilisez et r1 par le numéro de divulgation de vos sources.

C'est ce fichier  {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}} qui est utilisé comme point de départ de la configuration lorsque vous lancez   <kbd>genkernel --menuconfig all</kbd>.

If it is the first time that genkernel is run with the new kernel sources, or if the previous result has not been saved, this file is substituted with a default configuration file that resides at {{Path|usr/share/genkernel/arch/x86_64/kernel-config}} where x86_64 is substituted with the actual architecture.

{{Note|Le chemin vers ce fichier de configuration par défaut peut être changé en définissant la variable  DEFAULT_KERNEL_CONFIG dans le fichier {{Path|/etc/genkernel.conf}}.}}

===== Sauvegarder la configuration compilée =====

If the <code>--save-config</code> genkernel option is activated, either from the command line or inside {{Path|/etc/genkernel.conf}}, the compiled kernel configuration is saved (with the name given above) into the {{Path|/etc/kernels}} directory. At the same time, the configuration is saved in the {{Path|.config}} file in {{Path|/usr/src/linux}} directory but this file is not reused on the next <tt>genkernel all</tt> run.

{{Warning|One has to be aware, that each time genkernel is run, with the <code>--save-config</code> genkernel option set, the configuration file in {{Path|/etc/kernels}} is overridden. Thus, it is highly recommended to copy this file under a new name ''before'' running genkernel in order to preserve it. }}

===== Installer le noyau et le disque virtuel de démarrage dans le dossier /boot  =====

Specifying the <code>--install</code> option when invoking genkernel, will ask genkernel to install the kernel image and the initramfs into the {{Path|/boot}} directory. In order to run <code>--install</code> a convenient manner, set the following in the {{Path|/etc/genkernel.conf}} file:

{{FileBox|filename=/etc/genkernel.conf|title=Setting up kernel and initramfs auto-saving|lang=bash|1=
# Mount BOOTDIR automatically if it is not mounted?
MOUNTBOOT="yes"
  
# Save the new configuration in /etc/kernels upon
# successful compilation
SAVE_CONFIG="yes"
  
# Make symlinks in BOOTDIR automatically?
SYMLINK="yes"
  
# Add new kernel to grub?
#BOOTLOADER="grub"
}}

* Le premier paramètre parle de lui-même.

* Le second paramètre indique à genkernel de sauvegarder la configuration du noyau compilé dans {{Path|/etc/kernels}}.

* Les deux dernières options indiquent à genkernel de mettre la configuration de  grub à jour. En pratique, voilà ce qui se passe :
** si une image précédente du noyau avec le même nom existe déjà, elle est renommée en ajoutant  <tt>.old</tt> à son nom. Un lien symbolique  {{Path|kernel.old}} est automatiquement créé qui pointe sur lui.
** le nouveau noyau prend la place de tout noyau de même nom dans le dossier  {{Path|/boot}}. Si c'est la première fois que le noyau est compilé, un lien symbolique est automatiquement créé qui pointe sur le nouveau noyau.

After running <tt>genkernel --menuconfig all</tt>, the {{Path|/boot}} directory might look like this:

{{Cmd|ls -al /boot|output=<pre>
total 41336
drwxr-xr-x  3 root root    4096 20 avril 17:23 .
drwxr-xr-x 24 root root    4096 15 sept. 12:31 ..
lrwxrwxrwx  1 root root       1 24 févr.  2013 boot -> .
drwxr-xr-x  2 root root    4096 24 févr.  2013 grub
lrwxrwxrwx  1 root root      40 20 avril 17:23 initramfs -> initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1314412 20 avril 17:23 initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1313548 21 mars   2013 initramfs-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 1295344 25 févr.  2013 initramfs-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3310324 25 févr.  2013 initramfs-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      44 20 avril 17:23 initramfs.old -> initramfs-genkernel-x86_64-3.7.10-gentoo.old
lrwxrwxrwx  1 root root      37 20 avril 17:23 kernel -> kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866656 20 avril 17:23 kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866560 21 mars   2013 kernel-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 4552288 25 févr.  2013 kernel-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3400736 25 févr.  2013 kernel-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      41 20 avril 17:23 kernel.old -> kernel-genkernel-x86_64-3.7.10-gentoo.old
</pre>}}

==== Configurer le chargeur de démarrage  ====

Les liens symboliques présentées plus haut peuvent être utilisés  pour configurer le chargeur de démarrage, de telle manière que même si le nouveau noyau n'est pas amorçable, l'utilisateur puisse toujours redémarrer sur l'ancien. 

Pour permettre au nouvea noyau et au nouveau système de fichiers virtuel de démarrage produit par  genkernel de fonctionner correctement, il faut fournir un minimum d'informations dans le fichier de configuration du chargeur de démarrage :
* Ajoutez  <code>real_root=/dev/sdax</code> aux paramètres passés à l'image du noyau, avec {{Path|/dev/sdax}} pointant sur la partition racine.
* Si splash est utilisé, ajoutez un mode line convenable tel que  <code>vga=0x317</code> aux  paramètres passés au noyau et ajoutez aussi   <code>splash=verbose</code> ou <code>splash=silent</code> selon la loquacité attendue dans le processus de démarrage. 
* Ajoutez l'information  initrd information requise par le chargeur de démarrage. Consultez le  chapitre sur la [http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=1&chap=10 configuration du chargeur de démarrage ] du manuel de Gentoo pour les détails sur comment rendre votre chargeur de démarrage informé de la présence de initrd.

Voici à quoi le fichier  {{Path|grub.conf}} pourrait ressembler.

{{FileBox|filename=/boot/grub/grub.conf|title=An example of grub.conf file|lang=bash|1=
# This is a sample grub.conf for use with Genkernel, per the Gentoo handbook 
# http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=1&chap=10#doc_chap2 
# If you are not using Genkernel and you need help creating this file, you 
# should consult the handbook. Alternatively, consult the grub.conf.sample that 
# is included with the Grub documentation. 
  
default 0 
timeout 5
splashimage=(hd1,0)/boot/grub/splash.xpm.gz 
   
title Gentoo Linux 
root (hd0,6) 
kernel /boot/kernel initrd=/dev/ram0 real_root=/dev/sda7 rootfstype=ext4  
initrd /boot/initramfs
  
title Gentoo Linux old kernel 
root (hd0,6) 
kernel /boot/kernel.old initrd=/dev/ram0 real_root=/dev/sda7 rootfstype=ext4 
initrd /boot/initramfs.old
}}

==== Préserver vos fichiers qui fonctionnent ====

L'application genkernel sauvegarde automatiquement les changements des fichiers. Si les changements précédents doivent être sauvegardés, les actions suivantes sont à envisager.

* Le premier fichier à préserver est le fichier de configuration du noyau dans {{Path|/etc/kernels/}}. Si les sources n'ont pas changées avant la recompilation du noyau, le nom utilisé précédemment pour ce fichier sera utilisé à nouveau. C'est pourquoi dupliquer le fichier de configuration précédent avec un nouveau nom aide à préserver l'information tout en laissant l'ancien  fichier disponible  comme point de départ de la nouvelle configuration.

* The second important thing is to preserve the already bootable kernel and initramfs images. The way to accomplish this depends on the context:
:# If the last kernel compiled is bootable, running '''genkernel''' will rename this kernel (and similarly initramfs) image to {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} and create a new {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}. This mean that even if the new kernel is not bootable, users will always be able to boot the old one.
:# If the last kernel compiled is not bootable and sources haven't changed since the user compiled a bootable one, prior to running '''genkernel''', first delete the new kernel image and remove the <tt>.old</tt> suffix from the last bootable one. Without this, if the newly compiled kernel is not bootable for the second time, the bootable {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} will be kicked out by the renaming of the non bootable {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}, giving the user an unbootable system. Use the same reasoning for initramfs.

=== Utiliser la  configuration précédente du noyau tout en changeant de  sources ===

The previous configuration can be used through the <tt>make menuconfig</tt> option in {{Path|/etc/genkernel.conf}} as follows:

{{FileBox|filename=/etc/genkernel.conf|title=Setting up make menuconfig|lang=bash|1=
# Run 'make menuconfig' before compiling this kernel?
MENUCONFIG="yes"
}}

{{Note|There is no need to run <tt>make oldconfig</tt> with genkernel even if the sources are changed from {{Path|kernel-genkernel-ARCH-version-gentoo-rx}} to {{Path|kernel-genkernel-ARCH-version-gentoo-r(x+1)}} or from {{Path|kernel-genkernel-ARCH-version-gentoo}} to {{Path|kernel-genkernel-ARCH-(version+1)-gentoo}} because <tt>make menuconfig</tt> will try to load the previous configuration into the menu as much as possible. Nevertheless, reviewing each option and new sections carefully is recommended.}}

== Démarrer sur le réseau avec genkernel ==

=== Démarrer sur un CD-ROM d'installation Gentoo depuis le réseau  ===

L'outil genkernel peut fabriquer des images de noyaux et de disque virtuel initial (initrd) qui permettent de démarrer sur le réseau (netboot). Avec un peu de chance, vous devriez pouvoir faire démarrer n'importe quel ordinateur récent par le réseau sur l'environnement fourni par le CD-ROM d'installation de Gentoo.

La magie de la chose réside dans le script linuxrc de genkernel : il va essayer de monter le CD-ROM d'installation par NFS via le réseau. Partant de là, les scripts d'initialisation du CD-ROM d'installation seront utilisés comme si le CD était présent en local.

=== Construire un noyau et an initrd qui prennent en charge  le démarrage par le réseau ===

Pour activer le support du démarrage par le réseau, activez les options suivantes lors de la configuration du noyau :

{{Warning/fr|Le support du démarrage par le réseau avec genkernel est expérimental et peut contenir quelques bogues. }}

Tout d'abord, l'image du noyau doit contenir les pilotes de votre carte réseau. En principe, les pilotes pour ce genre de périphériques sont compilés en tant que modules. Pourtant, il est impératif ici (pour pouvoir démarrer avec) que ces pilotes soient intégrés dans le noyau et pas en modules.

{{KernelBox|title=Configuring a 3.x.x series kernel to support various NIC drivers|<pre>
Device Drivers --->
   Networking Support --->
      Ethernet (10 or 100Mbit)  --->
         [*] Ethernet (10 or 100Mbit)
         <*>   The driver(s) for each network card</pre>
}}

Assurez-vous de choisir <tt>&lt;*&gt;</tt> et non pas <tt>&lt;M&gt;</tt>.

Ensuite, nous vous suggérons d'activer ''IP: kernel level autoconfiguration'' et ''IP: DHCP support''. Cela évitera une couche supplémentaire de complexité si l'adresse IP et le chemin NFS du CD-ROM d'installation peuvent être spécifiés par un serveur DHCP. Bien sûr, cela signifie que la ligne de commande d'appel du noyau sera la même pour toutes les machines.

{{KernelBox|title=Configuring a 3.x.x series kernel to support DHCP|<pre>
Device Drivers --->
   Networking Support --->
      Networking options
         [*] TCP/IP networking--->
         [*]   IP: kernel level autoconfiguration
         [*]     IP: DHCP support
</pre>}}

Ces options indiquent au noyau d'envoyer une requête DHCP au démarrage.

De plus, vous devez activer SquashFS car la majorité des CD-ROM d'installation récents de Gentoo l'utilisent. Le support de SquashFS n'est pas intégré aux sources génériques de Linux, vous devrez appliquer les correctifs nécessaires ou bien installer les gentoo-sources.

{{KernelBox|title=Configuring the kernel to support SquashFS|<pre>
File systems--->
   Miscellaneous filesystems --->
      [*] SquashFS 2.X - Squashed file system support
</pre>}}

Une fois que le processus de compilation est terminé, créez une archive compressée (.tar.gz) qui contient les modules du noyau. Cette étape n'est nécessaire que si la version de votre noyau ne correspond pas à la version de l'image située sur le CD-ROM d'installation.

Pour créer une archive contenant tous les modules :

{{RootCmd|cd /
|tar -cf /tmp/modules-X.Y.Z.tar.gz /lib/modules/X.Y.Z/}}

Selon votre méthode de démarrage par le réseau, vous devrez exécuter certaines des étapes suivantes :

Créer une image etherboot.

{{RootCmd|emerge mknbi
|cd /boot
|mkelf-linux -params{{=}}"root{{=}}/dev/ram0 init{{=}}/linuxrc ip{{=}}dhcp" kernel... initrd... > etherboot.img}}

Pour créer une image TFTP OpenBoot / SPARC64.

{{RootCmd|emerge sparc-utils
|cd /boot
|elftoaout kernel... -o kernel.aout
|piggyback64 kernel.aout System.map-... initrd-...
|mv kernel.aout openboot.img}}

Le fichier {{Path|openboot.img}} est l'image à démarrer.

Enfin, copiez ce noyau sur votre serveur TFTP. La manière de procéder dépend complètement de votre architecture et dépasse les limites de ce guide. Veuillez consulter la documentation de votre plate-forme.

=== Configuration du NFS ===

Pour mettre en place un partage NFS qui contient le CD-ROM d'installation, utilisez un périphérique de bouclage (loop device) pour y monter l'image ISO et copiez le contenu du CD dans le partage NFS. En bonus, le script initrd de genkernel désarchivera tous les fichiers .tar.gz situés dans le répertoire {{Path|/nfs/livecd/add/}}. Tout ce qu'il vous reste à faire est de copier votre archive {{Path|modules-X.Y.Z.tar.gz}}  dans le répertoire {{Path|/nfs/livecd/add/}}.

En supposant que  {{Path|/nfs/livecd}} soit un partage NFS.

{{RootCmd|mount /tmp/gentoo-livecd.iso /mnt/cdrom -o loop
|cp -p /mnt/cdrom /nfs/livecd
|umount /mnt/cdrom}}

Copiez{{Path|modules.tar.gz}} dans {{Path|/add}}

{{RootCmd|mkdir /nfs/livecd/add
|cp /tmp/modules-X.Y.Z.tar.gz /nfs/livecd/add}}

=== Configuration du DHCP ===

Les images netboot demanderont une adresse IP et un chemin NFS à votre serveur DHCP. Ces informations peuvent être configurées individuellement en utilisant l'adresse MAC pour identifier les machines :

{{FileBox|filename=/etc/dhcpd.conf|title=Sample client dhcpd.conf setup|1=
# Here, 192.168.1.2 is the NFS server while 192.168.1.10 will be the IP address of the netbooted machine
host netbootableMachine {
         hardware ethernet 11:22:33:44:55:66;
         fixed-address 192.168.1.10;
         option root-path "192.168.1.2:/nfs/livecd";
}
}}

=== Utilisation du démarrage par le réseau ===

Le démarrage par le réseau est encore une fois très spécifique à la plate-forme utilisée. Ce qui est important, c'est de spécifier les paramètres  <code>ip=dhcp</code> et <code>init=/linuxrc</code> sur la ligne de commande du noyau. Cela activera la carte réseau et montera le CD-ROM d'installation via NFS. Voici quelques astuces pour certaines plates-formes :

Pous etherboot, insérer le disque etherboot dans le lecteur et redémarrez. La ligne de commande du noyau a été spécifiée lors de la construction de l'image. 
Avec Sparc64, pressez {{Key|Stop}}-{{Key|A}} à l'invite de démarrage et entrez :

{{RootCmd|boot net ip{{=}}dhcp init{{=}}/linuxrc|prompt=ok }}
  
For PXE, Configurez pxelinux (qui fait partie de syslinux),
puis créez un fichier {{Path|pxelinux.cfg/default}}qui contient ces lignes:

{{FileBox|filename=pxelinux.cfg/default|title=Default entry|1=
DEFAULT gentoo
TIMEOUT 40
PROMPT 1
  
LABEL gentoo
    KERNEL kernel-X.Y.Z
    APPEND initrd=initrd-X.Y.Z root=/dev/ram0 init=/linuxrc ip=dhcp
}}

=== Amorcer un disque virtuel initial de genkernel ===

==== Introduction ====

Si vous avez installé un disque virtuel initial (initramfs) avec genkernel, vous devriez assurément regarder les options diverses et variées de boot que vous pouvez (ou devez) définir dans la configuration de votre chargeur de démarrage. Les plus courantes sont citées ici pour référence.

==== Chargement de LVM ou de software-RAID ====

Si votre système utilise LVM ou RAID logiciel, vous avez sans aucun doute construit le disque virtuel initial (initramfs) en utilisant les options <tt>--lvm</tt> et <tt>--mdadm</tt>. Néanmoins, vous ne devriez pas oublier d'activer la prise en charge au moment du démarrage. Ceci peut être fait en utilisant les options dolvm et domdadm.

{{FileBox|filename=/boot/grub/grub.conf|title=Enabling LVM and/or MDADM support|1=
# Example for GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 dolvm domdadm
initrd /initramfs-genkernel-x86_64-3.4.3
}}

==== Démarrer dans le mode utilisateur unique (single-user) ====

Si, pour une raison ou une autre, le démarrage échoue, récupérer le système en démarrant le mode utilisateur unique reste possible. Ceci ne chargera que les services réellement nécessaires et offrira à l'utilisateur un shell de récuppration root.

{{FileBox|filename=/boot/grub/grub.conf|title=Booting in single-user mode|1=
# Example for GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 init_opts=S
initrd /initramfs-genkernel-x86_64-3.4.3
}}

[[Category:Kernel]]
[[Category:Initramfs]] {{Migrated|originalauthors=Tim Yamin, Jimi Ayodele, Thomas Seiler, Joshua Saddler, Sebastian Pipping, José Fournier}}
