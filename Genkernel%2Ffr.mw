<languages />

{{Metadata|abstract=genkernel est un outil créé par Gentoo utilisé pour automatiser le processus de compilation du noyau et du système de fichiers virtuel de démarrage (initramfs).}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox wikipedia|header=true}}
|{{InfoBox gitweb|genkernel.git}}
|{{InfoBox github|gentoo/genkernel}}
}}

{{c|genkernel}} est un outil créé par Gentoo utilisé pour automatiser le processus de compilation du [[kernel/fr| noyau]] et du système de fichiers virtuel de démarrage [[initramfs|(initramfs)]]. Parmi les fonctionnalités, on peut citer :

* Configurer les sources du noyau
* Compiler le noyau, le compresser {{Path|bzImage}}, et le copier dans {{Path|/boot}}.
* Créer un système de fichiers virtuels de démarrage (initramfs) dans {{Path|/boot}}.
* Créer les liens symboliques dans {{Path|/boot}}.
* Ajouter du contenu personnalisé dans le fichier initramfs comme les fichiers spécifiques à l’encryption, une image pour l'écran de chargement, des modules supplémentaires, et plus encore.
* Compresser le fichier initramfs.
* Configure le système d'amorçage pour démarrer sur le nouveau noyau et fichier initramfs.

{{Note|C'est une erreur courante de croire que {{c|genkernel}} va ''automatiquement'' générer une configuration du noyau personnalisée. {{c|genkernel}} automatise le processus de compilation du noyau et assemble le fichier initramfs, mais ne génère ''pas'' un fichier de configuration du noyau personnalisé. Il utilise une configuration générique qui fournit une support pour les sous-systèmes couramment utilisés en fonction de l'architecture. Les détails des défauts utilisés pour chaque architecture peuvent être retrouvés sur le [https://gitweb.gentoo.org/proj/genkernel.git/tree/arch répertoire en amont]. Choisir l'architecture voulue puis choisir le fichier kernel-config.}}

== Installation ==

=== Options de la variable USE ===

{{USEflag|package=sys-kernel/genkernel}}

=== Emerge ===

Procéder à l'installation du paquet genkernel :

{{Emerge|sys-kernel/genkernel}}

== Utilisation == 

La forme générale de l'invocation de '''genkernel''' est la suivante :

{{RootCmd|genkernel [options ...] action}}

=== Options === 

Le comportement réel de genkernel dépend d'une grande variété d'options, dont la majorité peut être activée/désactivée dans le fichier {{Path|/etc/genkernel.conf}} ou passée avec la commande {{c|genkernel}}. Les options passées en ligne de commande prévalent sur celles définies dans {{Path|/etc/genkernel.conf}}. Le fichier de configuration est très bien documenté, cependant les options les plus courantes seront vues dans cet article. Le but est pour le lecteur d'être familier avec les invocations courantes de genkernel. Pour une information plus complète, se reporter aux commentaires du fichier {{Path|/etc/genkernel.conf}} ou à la sortie de la commande {{c|man genkernel}}.

{{Note| Certaines options possèdent une variante qui déclenche un comportement inverse. Elle sont notées sous la forme <code>--[no-]option_name</code>, et l'effet inverse est noté entre crochets comme dans cet exemple :
{{CodeBox|title=Activer ou désactiver une certaine option |1= --[no]menuconfig : Activates [deactivates]…}}
Lorsqu'une option possède seulement un effet négatif, le <code>no-</code>, ainsi que son effet, qui ne sont pas optionnels dans ce cas là, sont notés sans les crochets.}}

==== Options agissant sur l'interactivité de l'utilisateur ====

Les options de configuration listées ci-dessous aident l'utilisateur à décider comment interagir avec le processus de configuration. L'utilisateur peut même décider si le fichier de configuration sera sauvegardé. Les options suivantes sont les options de configuration de premier ordre :

{| class="table table-condensed"
|-
! scope="col" width="25%" | Option !! Description
|-
|-
| <code>--config=/path/to/genkernel.conf</code> || Pointe vers le fichier de configuration de Genkernel à utiliser (par défaut sur {{Path|/etc/genkernel.conf}}).
|-
| <code>--[no-]menuconfig</code> || Active (ou désactive) la commande {{c|make menuconfig}} (qui invoque un menu de configuration interactif) avant de compiler le noyau.
|-
| <code>--gconfig</code> || Propose un outil de configuration du noyau qui dépend des librairies GTK+. L'avantage de cette option et que la plupart des utilisateurs trouvent plus facile et plus claire la configuration du noyau en utilisant cet outil, vu qu'il dépend du système de fenêtres X. L'inconvénient de cette option est que le système de fenêtres X est requis pour l'utiliser, et ne marchera donc pas en ligne de commande.
|-
| <code>--xconfig</code> || Propose un outil de configuration du noyau qui dépend des librairies Qt. L'avantage de cette option et que la plupart des utilisateurs trouvent plus facile et plus claire la configuration du noyau en utilisant cet outil, vu qu'il dépend du système de fenêtres X. L'inconvénient de cette option est que le système de fenêtres X est requis pour l'utiliser, et ne marchera donc pas en ligne de commande.
|-
| <code>--[no-]save-config</code> || Enregistrer [ou non] la configuration du noyau dans un fichier dans le répertoire {{Path|/etc/kernels}} pour un usage ultérieur.
|-
| <code>--kernname=NickName</code> || Autorise la modification du nom du noyau et des images initrd dans le répertoire {{Path|/boot}}, de façon à ce que les images générées soient {{Path|kernel-NickName-version}} et {{Path|initramfs-NickName-version}}.
|}

==== Options agissant sur le système résultant ====

Les options définies ici définissent quelles fonctionnalités, seront, ou ne seront pas, incluses dans le noyau et le système de fichiers virtuel de démarrage résultants.

{| class="table table-condensed"
|-
! scope="col" width="25%" | Option !! Description
|-
| <code>--[no-]splash</code> ||  Active (ou désactive) le support pour [[Fbsplash]] (framebuffer splash) dans l'image initrd générée par genkernerl. Pour outrepasser le thème par défaut utilisé par fbsplash, utiliser <code>--splash=PreferredTheme</code> (où <code>PreferredTheme</code> est le nom d'un des répertoires dans {{Path|/etc/splash}}).
|-
| <code>--splash-res=PreferredResolution</code> || Cette option permet de sélectionner les résolutions qui seront supportées par l'écran de chargement dans le fichier initrd lors du démarrage du système. C'est utile pour deux raisons. D'abord, pour permettre de ne sélectionner seulement que les résolutions pertinentes au système. Deuxièmement, pour éviter les augmentations inutiles de l'espace disque requis par le fichier initrd (vu que le fichier initrd n'a pas besoin de prendre un compte les résolutions qui ne sont pas supportées par le système). Cependant, il est préférable d'omettre l'option si le noyau est compilé pour une image CD ; cela permet de supporter toutes les résolutions possibles pour l'écran de chargement.
|-
| <code>--do-keymap-auto</code> || Force la sélection d'un dispositif de clavier lors du démarrage.
|-
| <code>--lvm</code> || Inclut le support pour le stockage via [http://sources.redhat.com/lvm2/ Logical Volume Management] (LVM2) depuis les fichiers binaires statiques, si disponibles sur le système. Les fichiers LVM2 binaires nécessaires seront compilés s'ils ne sont pas disponibles. Être sur d'avoir le paquet {{Package|sys-fs/lvm2}} installé sur le système ({{c|emerge sys-fs/lvm2}}) avant d'activer cette option, puis se reporter à [[LVM|l'article sur LVM]] du wiki Gentoo.
|-
| <code>--dmraid</code> || Inclut le support pour DMRAID ; l'utilitaire qui crée des mappages RAID à l'aide du sous-système mappeur de périphérique du noyau. [http://people.redhat.com/~heinzm/sw/dmraid/readme DMRAID] découvre, active, désactive et affiche les propriétés des jeux logiciels RAID (ATARAID, par exemple) et partitions DOS.
|-
| <code>--luks</code> || Inclut le support pour ''Linux Unified Key Setup'' ou [https://gitlab.com/cryptsetup/cryptsetup LUKS]. Cela permettra d'utiliser une partition encryptée comme système de fichiers racine. Dans le système d'amorçage, mettre cette partition comme valeur de <code>crypt_root</code> (et <code>root</code> doit désigner la partition décryptée créée par LUKS).
|-
| <code>--disklabel</code> || Ajoute le support pour les labels et identifiants universels uniques (UUID) à l'image initrd.
|-
| <code>--iscsi</code> || Ajoute le support pour iSCSI à l'image initrd.
|-
| <code>--multipath</code> || Ajoute le support pour [[Multipath]] à l'image initrd.
|-
| <code>--linuxrc=/chemin/vers/le/fichier_linuxrc</code> || Spécifie un fichier linuxrc créé par l'utilisateur — un script initialisé pendant le démarrage du noyau, avant l'actuel processus de démarrage. Un script linuxrc par défaut peut être trouvé dans le répertoire {{Path|/usr/share/genkernel/}}. Ce script permet de démarrer dans un petit noyau modulaire; il essaye de ne charger que le minimum des pilotes nécessaires (en tant de modules) au système.
|-
| <code>--cachedir=/path/to/alt/dir</code> || Modifie l'emplacement par défaut du cache utilisé lors de la compilation du noyau.
|-
| <code>--tempdir=/path/to/new/tempdir</code> || Spécifie l'emplacement du répertoire temporaire utilisé par genkernel lors de la compilation du noyau.
|-
| <code>--unionfs</code> || Inclut le support pour [http://www.fsl.cs.sunysb.edu/project-unionfs.html Unification File System (UFS)] dans l'image initrd.
|-
| <code>--mountboot</code> || Détecte si le répertoire {{Path|/boot}} doit être monté sur une partition séparée. Il regardera dans le script {{Path|/etc/fstab}} pour les instructions sur comment monter la partition boot sur un système de fichiers (si nécessaire).
|}

==== Options agissant sur le choix des outils utilisés pour la compilation ====

Les options suivantes sont prises en charge par genkernel, et sont passées aux applications concernées lors de la compilation et de l'assemblage du noyau. Ces options influent sur le choix des outils utilisés pendant le processus de compilation, quoi qu'à un niveau assez bas.

{| class="table table-condensed"
|-
! scope="col" width="25%" | Options !! Description
|-
| <code>--kernel-cc=someCompiler</code> || Spécifie le compilateur utilisé lors du processus de compilation du noyau.
|-
| <code>--kernel-ld=someLinker</code> || Spécifie l'éditeur de liens utilisé lors du processus de compilation du noyau.
|-
| <code>--kernel-as=someAssembler</code> || Spécifie l'assembleur utilisé lors du processus de compilation du noyau.
|-
| <code>--kernel-make=someMake</code> || Spécifie une alternative à l'utilitaire GNU make utilisé lors du processus de compilation du noyau.
|-
| <code>--utils-cc=someCompiler</code> || Spécifie le compilateur utilisé lors du processus de la compilation des utilitaires de support.
|-
| <code>--utils-ld=someLinker</code> || Spécifie l'éditeur de liens utilisé lors du processus de la compilation des utilitaires de support.
|-
| <code>--utils-as=someAssembler</code> || Spécifie l'assembleur utilisé lors du processus de la compilation des utilitaires de support.
|-
| <code>--utils-make=someMake</code> || Spécifie une alternative à l'utilitaire GNU make utilisé lors de la compilation des utilitaires de support.
|-
| <code>--makeopts=-jX</code> || Spécifie le nombre de threads simultanés que l'utilitaire make peut mettre en œuvre alors que le noyau (et les utilitaires) sont compilés. La variable <code> X </ code> est un nombre à choisir librement, bien que les valeurs les plus courantes soient obtenues en ajoutant un (1) au nombre de cœurs utilisés par le système ou simplement en utilisant le nombre de cœurs du système. Ainsi, pour un système avec un seul cœur, les valeurs d'option les plus courantes sont <code>-j2</code> ou <code>-j1</code> ; Un système à deux cœurs utilise très probablement les options <code>-j3</code> ou <code>-j2</code>, etc. (Un système avec un processeur prenant en charge la technologie Hyper-Threading ™ (HT) peut être supposé avoir deux cœurs, à condition que le support Symmetric Multi-Processing (SMP) soit activé dans le noyau.)
|}

==== Options agissant sur le processus de compilation ====

Les options suivantes ont généralement un effet lors de la compilation réelle.

{| class="table table-condensed"
|-
! scope="col" width="25%" | Option !! Description
|-
| <code>--kerneldir=/path/to/sources/</code> || Specifies an alternative kernel source location, rather than the default {{Path|/usr/src/linux/}} location.
|-
| <code>--kernel-config=/path/to/config-file</code> || Specifies what alternative kernel configuration will be used, rather than the default {{Path|/path/to/sources/.config}} file.
|-
| <code>--module-prefix=/path/to/prefix-directory/</code> || Specifies a prefix to the directory where kernel modules will be installed (default path is the {{Path|/lib/modules}} directory.)
|-
| <code>--[no-]clean</code> || Activates (or deactivates) the {{c|make clean}} command before compiling the kernel. The {{c|make clean}} command removes all object files and dependencies from the kernel's source tree.
|-
| <code>--[no-]mrproper</code> || Activates (or deactivates) the {{c|make mrproper}} command before kernel compilation. Like the {{c|make clean}} command listed above, {{c|make mrproper}} removes all object files and dependencies from the kernel's source tree. However, any previous configuration files (in {{Path|/path/to/sources/.config}} or {{Path|/path/to/sources/.config.old}}) will also be purged from the kernel's source tree. If it is undesirable that the kernel's {{Path|.config}} file keeps disappearing, be sure to disable this option!
|-
| <code>--oldconfig</code> || Issues the {{c|make oldconfig}} command, which attempts to collect configuration information for the system's architecture from a generic script in {{Path|/usr/share/genkernel}}. This is a non-interactive process; no user input is entertained. Also, if <code>--oldconfig</code> is used in conjunction with <code>--clean</code>, the latter option is negated, resulting in the activation of the <code>--no-clean</code> option.
|-
| <code>--callback="echo hello"</code> || Calls the specified arguments ({{c|echo hello}}, in this case) after the kernel and the relevant modules have been built, but before building the initrd image. This may be useful when installing external modules in the initrd image by emerging the relevant item(s) with the callback feature, and then redefining a genkernel module group.
|-
| <code>--[no-]install</code> || Activates (or deactivates) the {{c|make install}} command, which installs the new kernel image, configuration file, initrd image and system map onto the boot partition. Any compiled modules will be installed as well. By default genkernel will attempt mount {{Path|/boot}} if it is on a separate partition before running the install command.
|-
| <code>--no-ramdisk-modules</code> || Refrains from copying any modules to the genkernel-created initrd image. This option is an exception to the rule about the <code>no-</code> prefix; omission of this prefix creates an invalid genkernel option.
|-
| <code>--all-ramdisk-modules</code> || Copies all available modules to the genkernel-created initrd image.
|-
| <code>--genzimage</code> || Creates the initrd image, prior to the kernel image (this hack currently applies only to PPC Pegasos systems).
|}

==== Options de débogage ====

L'utilisation d'options de débogage pendant la compilation du noyau contrôle le nombre d'informations reportées, ainsi que la présentation de celles-ci.

{| class="table table-condensed"
|-
! scope="col" width="25%" | Option !! Description
|-
| <code>--loglevel=<nowiki><0|1|2|3|4|5></nowiki></code> || Controls the level of verbosity for information provided by genkernel. The variable <code>&lt;verblevel&gt;</code> is an integer between 0 and 5. The level '0' represents minimal output, while '5' provides as much information as possible about genkernel's activities during the kernel compilation process.
|-
| <code>--logfile=/path/to/output_file</code> || Ignores the value set by the <code>--loglevel</code> option (above) and sends all debugging data produced by genkernel to the specified output file. Outputs to {{Path|/var/log/genkernel.log }} by default.
|-
| <code>--[no-]color</code> || Activates (or deactivates) colored output of debugging information (reported by genkernel) using escape sequences.
|-
| <code>--[no-]debug-cleanup</code> || Activates (or deactivates) the full post-run cleanup for debug purposes.
|}

=== Actions ===

The action passed on the command line with the {{c|genkernel [options …] ''action''}} tells genkernel what action to perform. The following actions are supported:

{| class="table table-condensed"
|-
! scope="col" width="25%" | Action !! Description
|-
| {{c|all}} || Builds all stages — the initrd, kernel image and modules.
|-
| {{c|bzImage}} || Only builds the kernel image.
|-
| {{c|kernel}} || Only builds the kernel image and modules.
|-
| {{c|initramfs}} || Only builds the initramfs/ramdisk image.
|-
| {{c|ramdisk}} || Only builds the initramfs/ramdisk image.
|}

== Configuration ==

=== Démarrer ===

Bien qu'il y ait plusieurs façons de lancer genkernel, la plus simple reste {{c|genkernel all}}. Une configuration générique qui marche correctement pour tous les systèmes sera alors utilisée. Comme mentionné précédemment, cette méthode n'est pas sans inconvénients. La plupart des modules compilés ne seront pas utilisés et la compilation prendra beaucoup de temps. L'illustration suivante montre une approche plus efficace, en passant certains paramètres à genkernel en tant qu'utilisateur root:

{{RootCmd|genkernel --splash --no-install --no-clean --menuconfig all}}

Cette opération indique à genkernel de créer un noyau avec un écran de démarrage (<code>--splash</code>) en tampon de trames (framebuffer) qui devra être installé à la main (<code>--no-install</code>). Dans la phase préparatoire de compilation, genkernel n'effacera pas les objets déjà compilés (<code>--no-clean</code>). Enfin, un menu de configuration sera affiché, permettant à l'utilisateur de choisir quels modules seront compilés (<code>--menuconfig</code>).

Remplacer <code>--no-install</code> par <code>--install</code> pour qu'il installe automatiquement le nouveau noyau dans {{Path|/boot}} et spécifier <code>--symlink</code> pour qu'il crée les liens symboliques. En utilisant le paramètre -- <code>--mountboot</code> , la partition {{Path|/boot}} sera montée par genkernel automatiquement, si nécessaire.

{{Note|Ne pas oublier que le fichier {{Path|/etc/genkernel.conf}} est lu par la commande '''genkernel''' lorsqu'elle démarre, et que toutes les options qui y sont définies, seront appliquées, sauf quand une option en ligne de commande contradictoire est passée.}}

=== Changer le noyau  ===

La première chose à faire est d'autoriser le lancement de {{c|make menuconfig}} dans le fichier {{Path|/etc/genkernel.conf}} :

{{FileBox|filename=/etc/genkernel.conf|title=Forcer l'utilisation du menu de configuration dans  /etc/genkernel.conf|1=
# Lancer 'make menuconfig' avant de compiler le noyau 
MENUCONFIG="yes"
}}

==== Gestion des fichiers ====

Quand il utilise genkernel, l'utilisateur doit être conscient de quelques aspects concernant la gestion des fichiers de configuration et des fichiers image du noyau, ainsi que de la façon dont les sources du noyau sont manipulées par le système.

===== Fichiers sources =====

Après une commande {{c|emerge -u gentoo-sources}},, chaque fois que de nouvelles sources sont disponibles, un nouveau répertoire est créé pour les sources du noyau dans  {{Path|/usr/src/}} pour les héberger. Normalement, le dossier des sources actives est pointé par le lien symbolique {{Path|/usr/src/linux}}.

Le répertoire {{Path|/usr/src}} pourrait ressembler à ceci :

{{Cmd|ls -l /usr/src|output=<pre>
total 16
lrwxrwxrwx  1 root root   19 21 Mar   2013 linux -> linux-3.7.10-gentoo
drwxr-xr-x 24 root root 4096 25 Aug  10:39 linux-3.10.7-gentoo
drwxr-xr-x 20 root root 4096 21 Apr  19:42 linux-3.7.10-gentoo
drwxr-xr-x 21 root root 4096 14 Mar   2013 linux-3.7.9-gentoo
</pre>}}

Le lien symbolique {{Path|/usr/src/linux}} peut être changé de différentes manières. 

* Si l'option <code>symlink</code> de la variable USE est définie le lien symbolique {{Path|/usr/src/linux}} est automatiquement mis à jour pour pointer sur les nouvelles sources installées par la commande <code>emerge</code>. 

* Si l'option de la variable USE <code>symlink</code> n'est pas définie, l'utilisateur peut changer la destination du lien symbolique en utilisant la commande {{c|eselect kernel list}} suivie de la commande {{c|eselect kernel set}}.

genkernel utilisera ''toujours'' (exclusivement) les sources pointées par le lien symbolique {{Path|/usr/src/linux}}.

===== Fichiers de configuration du noyau =====

If a kernel compilation has already been run with the active kernel sources, there might be a file inside the {{Path|/etc/kernels}} directory that contains the kernel configuration that has been applied while creating the last bzimage of the kernel. This file is named, for example {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}} where <code>x86_64</code> might be substituted with the system's architecture, <code>3.7.9</code> might be substituted with the version of the sources used, and <code>r1</code> with the release of the sources.

It is this {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}} file that is used as a starting configuration when running  {{c|genkernel --menuconfig all}}.

If it is the first time that genkernel is run with the new kernel sources, or if the previous result has not been saved, this file is substituted with a default configuration file that resides at {{Path|usr/share/genkernel/arch/x86_64/kernel-config}} where x86_64 is substituted with the actual architecture.

{{Note|The path to this default configuration file, may be altered by setting the <var>DEFAULT_KERNEL_CONFIG</var> variable in {{Path|/etc/genkernel.conf}} file.}}

===== Sauvegarder la configuration compilée =====

If the <code>--save-config</code> genkernel option is activated, either from the command line or inside {{Path|/etc/genkernel.conf}}, the compiled kernel configuration is saved (with the name given above) into the {{Path|/etc/kernels}} directory. At the same time, the configuration is saved in the {{Path|.config}} file in {{Path|/usr/src/linux}} directory but this file is not reused on the next {{c|genkernel all}} run.

{{Warning|One has to be aware, that each time genkernel is run, with the <code>--save-config</code> genkernel option set, the configuration file in {{Path|/etc/kernels}} is overridden. Thus, it is highly recommended to copy this file under a new name ''before'' running genkernel in order to preserve it. }}

===== Installing the kernel and initramfs into the {{Path|/boot}} directory =====

Specifying the <code>--install</code> option when invoking genkernel, will ask genkernel to install the kernel image and the initramfs into the {{Path|/boot}} directory. In order to run <code>--install</code> a convenient manner, set the following in the {{Path|/etc/genkernel.conf}} file:

{{FileBox|filename=/etc/genkernel.conf|title=Setting up kernel and initramfs auto-saving|lang=bash|1=
# Mount BOOTDIR automatically if it is not mounted?
MOUNTBOOT="yes"
  
# Save the new configuration in /etc/kernels upon
# successful compilation
SAVE_CONFIG="yes"
  
# Make symlinks in BOOTDIR automatically?
SYMLINK="yes"
  
# Add new kernel to grub2?
BOOTLOADER="grub2"
}}

* The first parameter speaks for itself.

* Le second paramètre indique à genkernel de sauvegarder la configuration du noyau compilé dans {{Path|/etc/kernels}}.

* The last two options tell genkernel to automatically update the grub configuration. In practice, the following happens:
** If a previous kernel image with the same name already exist, it is renamed by appending {{Path|.old}} to its name. A symlink {{Path|kernel.old}} is automatically created that points to it.
** The new kernel takes the place of any kernel with the same name into {{Path|/boot}}. If it is the first time a kernel is compiled, a symlink kernel is automatically created that points to the new kernel.

After running {{c|genkernel --menuconfig all}}, the {{Path|/boot}} directory might look like this:

{{Cmd|ls -al /boot|output=<pre>
total 41336
drwxr-xr-x  3 root root    4096 20 avril 17:23 .
drwxr-xr-x 24 root root    4096 15 sept. 12:31 ..
lrwxrwxrwx  1 root root       1 24 févr.  2013 boot -> .
drwxr-xr-x  2 root root    4096 24 févr.  2013 grub
lrwxrwxrwx  1 root root      40 20 avril 17:23 initramfs -> initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1314412 20 avril 17:23 initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1313548 21 mars   2013 initramfs-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 1295344 25 févr.  2013 initramfs-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3310324 25 févr.  2013 initramfs-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      44 20 avril 17:23 initramfs.old -> initramfs-genkernel-x86_64-3.7.10-gentoo.old
lrwxrwxrwx  1 root root      37 20 avril 17:23 kernel -> kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866656 20 avril 17:23 kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866560 21 mars   2013 kernel-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 4552288 25 févr.  2013 kernel-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3400736 25 févr.  2013 kernel-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      41 20 avril 17:23 kernel.old -> kernel-genkernel-x86_64-3.7.10-gentoo.old
</pre>}}

==== Configurer le chargeur de démarrage  ====

Les liens symboliques présentées plus haut peuvent être utilisés  pour configurer le chargeur de démarrage, de telle manière que même si le nouveau noyau n'est pas amorçable, l'utilisateur puisse toujours redémarrer sur l'ancien. 

To allow the kernel and intird provided by genkernel to run correctly, provide a minimum information in bootloader's configuration file:

* Add <code>root=/dev/sdaN</code> to the kernel parameters passed to the kernel image, where {{Path|/dev/sdaN}} points to the root partition (<code>N</code> is the number of the partition if a partition exists).
* If splash is used, add a suitable mode line such as <code>vga=0x317</code> to the parameters passed to the kernel and also add <code>splash=verbose</code> or <code>splash=silent</code> depending on the verboseness required through the boot process.
* Add the initrd information as required by the bootloader. Consult the [[Handbook:X86/Installation/Bootloader|Bootloader Configuration Chapter]] of the Gentoo Handbook for details on how to make the bootloader initrd-aware.

Voici à quoi le fichier  {{Path|grub.conf}} pourrait ressembler.

{{FileBox|filename=/boot/grub/grub.conf|title=An example of grub.conf file|lang=bash|1=
# This is a sample grub.conf for use with Genkernel, per the Gentoo handbook 
# http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=1&chap=10#doc_chap2 
# If you are not using Genkernel and you need help creating this file, you 
# should consult the handbook. Alternatively, consult the grub.conf.sample that 
# is included with the Grub documentation. 
  
default 0 
timeout 5
splashimage=(hd1,0)/boot/grub/splash.xpm.gz 
   
title Gentoo Linux 
root (hd0,6) 
kernel /boot/kernel initrd=/dev/ram0 root=/dev/sda7 rootfstype=ext4  
initrd /boot/initramfs
  
title Gentoo Linux old kernel 
root (hd0,6) 
kernel /boot/kernel.old initrd=/dev/ram0 root=/dev/sda7 rootfstype=ext4 
initrd /boot/initramfs.old
}}

==== Preserving the working files ====

L'application genkernel sauvegarde automatiquement les changements des fichiers. Si les changements précédents doivent être sauvegardés, les actions suivantes sont à envisager.

* The first file to preserve is the kernel configuration file in {{Path|/etc/kernels/}} If the source has not changed prior to the recompilation of the kernel, the previously used name for this file will be used. So copying the previous configuration file under a different name helps in preserving the information while keeping the file available as a starting point for a new configuration.

* The second important thing is to preserve the already bootable kernel and initramfs images. The way to accomplish this depends on the context:
:# If the last kernel compiled is bootable, running {{c|genkernel}} will rename this kernel (and similarly initramfs) image to {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} and create a new {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}. This mean that even if the new kernel is not bootable, users will always be able to boot the old one.
:# If the last kernel compiled is not bootable and sources haven't changed since the user compiled a bootable one, prior to running {{c|genkernel}}, first delete the new kernel image and remove the {{Path|.old}} suffix from the last bootable one. Without this, if the newly compiled kernel is not bootable for the second time, the bootable {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} will be kicked out by the renaming of the non bootable {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}, giving the user an unbootable system. Use the same reasoning for initramfs.

==== Using previous kernel configuration while changing the sources ====

The previous configuration can be used through the <var>MENUCONFIG</var> variable in {{Path|/etc/genkernel.conf}} as follows:

{{FileBox|filename=/etc/genkernel.conf|title=Setting up make menuconfig|lang=bash|1=
# Run 'make menuconfig' before compiling this kernel?
MENUCONFIG="yes"
}}

{{Note|There is no need to run {{c|make oldconfig}} when using {{c|genkernel}}, even if the sources are changed from {{Path|kernel-genkernel-ARCH-version-gentoo-rx}} to {{Path|kernel-genkernel-ARCH-version-gentoo-r(x+1)}} or from {{Path|kernel-genkernel-ARCH-version-gentoo}} to {{Path|kernel-genkernel-ARCH-(version+1)-gentoo}}. This is because {{c|make menuconfig}} will try to load the previous configuration into the menu as much as possible. Nevertheless, ''reviewing'' each option and new sections carefully is recommended.}}

=== Network booting ===

==== From an installation CD ====

The {{c|genkernel}} utility can build kernel and initrd images that provide support for network booting, or netbooting. With any luck, users should be able to netboot any recent computer into the environment provided by the Installation CD.

La magie de la chose réside dans le script linuxrc de genkernel : il va essayer de monter le CD-ROM d'installation par NFS via le réseau. Partant de là, les scripts d'initialisation du CD-ROM d'installation seront utilisés comme si le CD était présent en local.

==== Building the kernel and initramfs with netboot support ====

Pour activer le support du démarrage par le réseau, activez les options suivantes lors de la configuration du noyau :

{{Warning/fr|Le support du démarrage par le réseau avec genkernel est expérimental et peut contenir quelques bogues. }}

First, the kernel image must include the drivers for the system's Network Interface Cards (NIC). Normally, drivers for such devices will be compiled as modules. However, it is essential (for netbooting) that such drivers are compiled directly into the kernel image and not as modules.

{{KernelBox|title=Configuring a 3.x.x series kernel to support various NIC drivers|<pre>
Device Drivers --->
   Networking Support --->
      Ethernet (10 or 100Mbit)  --->
         [*] Ethernet (10 or 100Mbit)
         <*>   The driver(s) for each network card</pre>
}}

{{Note|Be sure to select {{c|&lt;*&gt;}} and not {{c|&lt;M&gt;}}.}}

Ensuite, nous vous suggérons d'activer ''IP: kernel level autoconfiguration'' et ''IP: DHCP support''. Cela évitera une couche supplémentaire de complexité si l'adresse IP et le chemin NFS du CD-ROM d'installation peuvent être spécifiés par un serveur DHCP. Bien sûr, cela signifie que la ligne de commande d'appel du noyau sera la même pour toutes les machines.

{{KernelBox|title=Configuring a 3.x.x series kernel to support DHCP|<pre>
Device Drivers --->
   Networking Support --->
      Networking options
         [*] TCP/IP networking--->
         [*]   IP: kernel level autoconfiguration
         [*]     IP: DHCP support
</pre>}}

Ces options indiquent au noyau d'envoyer une requête DHCP au démarrage.

Additionally, enable [[SquashFS]] because most modern Gentoo Installation CDs require it. Support for SquashFS is not included with the generic kernel source tree. To enable SquashFS, apply the necessary patches to the generic kernel source or install gentoo-sources.

{{KernelBox|title=Configuring the kernel to support SquashFS|<pre>
File systems--->
   Miscellaneous filesystems --->
      [*] SquashFS 2.X - Squashed file system support
</pre>}}

Une fois que le processus de compilation est terminé, créez une archive compressée (.tar.gz) qui contient les modules du noyau. Cette étape n'est nécessaire que si la version de votre noyau ne correspond pas à la version de l'image située sur le CD-ROM d'installation.

Pour créer une archive contenant tous les modules :

{{RootCmd|cd /
|tar -cf /tmp/modules-X.Y.Z.tar.gz /lib/modules/X.Y.Z/}}

Selon votre méthode de démarrage par le réseau, vous devrez exécuter certaines des étapes suivantes :

Créer une image etherboot.

{{Emerge|net-misc/mknbi}}

{{RootCmd
|cd /boot
|mkelf-linux -params{{=}}"root{{=}}/dev/ram0 init{{=}}/linuxrc ip{{=}}dhcp" kernel... initrd... > etherboot.img}}

To create an OpenBoot/SPARC64 TFTP image:

{{Emerge|sys-apps/sparc-utils}}

{{RootCmd
|cd /boot
|elftoaout kernel... -o kernel.aout
|piggyback64 kernel.aout System.map-... initrd-...
|mv kernel.aout openboot.img}}

Le fichier {{Path|openboot.img}} est l'image à démarrer.

Finally, copy this kernel to the TFTP server. The details are architecture-dependent and are beyond the scope of this guide. Please refer to the documentation for the specific platform of interest.

==== NFS setup ====

Pour mettre en place un partage NFS qui contient le CD-ROM d'installation, utilisez un périphérique de bouclage (loop device) pour y monter l'image ISO et copiez le contenu du CD dans le partage NFS. En bonus, le script initrd de genkernel désarchivera tous les fichiers .tar.gz situés dans le répertoire {{Path|/nfs/livecd/add/}}. Tout ce qu'il vous reste à faire est de copier votre archive {{Path|modules-X.Y.Z.tar.gz}}  dans le répertoire {{Path|/nfs/livecd/add/}}.

En supposant que  {{Path|/nfs/livecd}} soit un partage NFS.

{{RootCmd|mount /tmp/gentoo-livecd.iso /mnt/cdrom -o loop
|cp -p /mnt/cdrom /nfs/livecd
|umount /mnt/cdrom}}

Copiez{{Path|modules.tar.gz}} dans {{Path|/add}}

{{RootCmd|mkdir /nfs/livecd/add
|cp /tmp/modules-X.Y.Z.tar.gz /nfs/livecd/add}}

==== DHCP setup ====

The netboot images will ask the DHCP server on the network for an IP as well as a <code>root-path</code> option. Both can be specified per host using a MAC address to identify machines:

{{FileBox|filename=/etc/dhcpd.conf|title=Sample client dhcpd.conf setup|1=
# Here, 192.168.1.2 is the NFS server while 192.168.1.10 will be the IP address of the netbooted machine
host netbootableMachine {
         hardware ethernet 11:22:33:44:55:66;
         fixed-address 192.168.1.10;
         option root-path "192.168.1.2:/nfs/livecd";
}
}}

==== Netbooting instructions ====

Le démarrage par le réseau est encore une fois très spécifique à la plate-forme utilisée. Ce qui est important, c'est de spécifier les paramètres  <code>ip=dhcp</code> et <code>init=/linuxrc</code> sur la ligne de commande du noyau. Cela activera la carte réseau et montera le CD-ROM d'installation via NFS. Voici quelques astuces pour certaines plates-formes :

For etherboot, insert the etherboot disk into the drive and reboot. The kernel command line was specified when the image was constructed. 
  
With Sparc64, press {{Key|Stop}}+{{Key|A}} at the boot prompt and then enter:

{{RootCmd|boot net ip{{=}}dhcp init{{=}}/linuxrc|prompt=ok }}
  
For PXE, Configurez pxelinux (qui fait partie de syslinux),
puis créez un fichier {{Path|pxelinux.cfg/default}}qui contient ces lignes:

{{FileBox|filename=pxelinux.cfg/default|title=Default entry|1=
DEFAULT gentoo
TIMEOUT 40
PROMPT 1
  
LABEL gentoo
    KERNEL kernel-X.Y.Z
    APPEND initrd=initrd-X.Y.Z root=/dev/ram0 init=/linuxrc ip=dhcp
}}

==== Booting a genkernel initramfs ====

===== Introduction =====

Si vous avez installé un disque virtuel initial (initramfs) avec genkernel, vous devriez assurément regarder les options diverses et variées de boot que vous pouvez (ou devez) définir dans la configuration de votre chargeur de démarrage. Les plus courantes sont citées ici pour référence.

===== Loading LVM or software-RAID =====

If the system uses LVM or software-RAID, the initramfs has to be built using the <code>--lvm</code> and <code>--mdadm</code> options. Do not forget to enable support during boot as well. This can be done using the dolvm and domdadm options.

{{FileBox|filename=/boot/grub/grub.conf|title=Enabling LVM and/or MDADM support|1=
# Example for GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 dolvm domdadm
initrd /initramfs-genkernel-x86_64-3.4.3
}}

===== Booting in single-user mode =====

Si, pour une raison ou une autre, le démarrage échoue, récupérer le système en démarrant le mode utilisateur unique reste possible. Ceci ne chargera que les services réellement nécessaires et offrira à l'utilisateur un shell de récuppration root.

{{FileBox|filename=/boot/grub/grub.conf|title=Booting in single-user mode|1=
# Example for GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 init_opts=S
initrd /initramfs-genkernel-x86_64-3.4.3
}}

== Troubleshooting ==

=== compile failed: Kernel not found ===

This failure can be experienced when attempting to compile a kernel for one architecture with a kernel {{Path|.config}} file that has a target of a different architecture than the target. This could be as simple as a machine running an {{Keyword|amd64}} kernel attempting to compile for a {{Keyword|x86}} target.

This can be experienced when booting from a x86_64 LiveCD on a system that is capable of operating in 64-bits, however the target to be installed or repaired is 32-bits. After the compilation process begins, {{c|genkernel}} will attempt to automatically detect the architecture for the target based on the currently running kernel. If the currently running kernel is 64-bit, then, unless it is told otherwise, {{c|genkernel}} will presume it should be looking for a 64-bit kernel.

Suppose then that the kernel's {{Path|.config}} file has x64 disabled. The {{c|make}} command will execute and the resulting kernel binary will be placed in the associated {{Path|x86}} directory. When {{c|genkernel}} goes to install (move and rename) the kernel it cannot find the kernel because it expected a 64-bit kernel.

The solution to this failure is to set {{c|genkernel}}'s <code>--arch-override</code> option to, in this case, the {{Keyword|x86}} architecture. The final command could look like this:

{{RootCmd|genkernel --kernel-config{{=}}/usr/src/linux/.config --btrfs --install --arch-override{{=}}x86 all}}

To override the architecture choice permanently, modify the <var>ARCH_OVERRIDE</var> variable in the {{Path|/etc/genkernel.conf}} file.

== See also ==

* [[Kernel/Configuration|Manual kernel configuration]] - For the times it is necessary to to do things manually.
* [[Dracut]] - Another initramfs builder available in Gentoo.


[[Category:Kernel]]
[[Category:Initramfs]] {{Migrated|originalauthors=Tim Yamin, Jimi Ayodele, Thomas Seiler, Joshua Saddler, Sebastian Pipping, José Fournier}}
