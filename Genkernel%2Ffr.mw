<languages />
{{Lowercase title}}
{{InfoBox stack
|{{InfoBox wikipedia|header=true}}
|{{InfoBox gdoc|genkernel}}
}}

'''genkernel''' est utilisé pour automatiser le processus de compilation du   [[kernel/fr| noyau]] et du système de fichiers virtuel de démarrage [[initramfs|(initramfs)]]. Parmi les fonctionnalités citons :
* la configuration des sources du noyau 
* la compilation de l'image compressée du noyau  {{Path|bzImage}} et sa copie dans {{Path|/boot}}
* la création d'un système de fichiers virtuel du démarrage (initramfs) et sa copie dans {{Path|/boot}}
* la création des liens symboliques dans   {{Path|/boot}}
* l'ajout d'un contenu personnalisé au système de fichiers virtuel de démarrage (initramfs) comme par exemple les fichiers relatifs au chiffrage, les écrans d'attente, les modules supplémentaires et plus encore.
* la compression de l'initramfs
* la configuration du [[bootloader |chargeur de démarrage]]

== Installation ==

Pour installer le paquet {{Package|sys-kernel/genkernel}}, commencez par sélectionner les options de la variable USE appropriées.

{{USEflag|package=sys-kernel/genkernel
|crypt++no
|cryptsetup++no
|ibm++no
|selinux++no
}}

Ensuite, vous pouvez procéder à l'installation du paquet genkernel.

{{Emerge|genkernel}}

== Invocation de Genkernel ==

La forme générale de l'invocation de '''genkernel''' est la suivante :

{{RootCmd|<pre> genkernel [options ...] action
</pre>}}

=== Options === 

Le comportement réel de genkernel dépend d'une grande variété d'options, dont la majorité peut être activée/désactivée dans le fichier {{Path|/etc/genkernel.conf}} ou passer avec la commande. Les options passées en ligne de commande prévalent sur celles définies dans {{Path|/etc/genkernel.conf}}. Ce fichier est très bien documenté. Nous examinerons néanmoins ici quelques unes des options les plus communes. Pour une information plus complète, reportez-vous aux commentaires du fichier {{Path|/etc/genkernel.conf}} ou à la sortie de la commande <code>man genkernel</code> .

{{Note| Certaines options possèdent une variante qui déclenche un  comportement inverse. Elle sont notées sous la forme <tt>--[no-]option_name</tt>, et l'effet inverse est noté entre crochets comme dans cet exemple :
{{Code|Activer ou désactiver une certaine option |<pre>
--[no-]menuconfig : Activer [désactiver] ...
</pre>}}
Lorsqu'une option possède seulement un effet négatif, le <tt>no-</tt>, ainsi que son effet, qui ne sont pas optionnels dans ce cas là, sont notés sans les crochets.}}

==== Options agissant sur l'interactivité de l'utilisateur ====

Les options de configuration listées ci-dessous permettent de décider comment interagir avec le processus de configuration. L'utilisateur peut même décider si le fichier de configuration sera ou pas sauvegardé. Les options suivantes sont les options de configuration de premier ordre :

;<tt>--[no-]menuconfig</tt>
: Active [ or désactive] la commande  <code>make menuconfig</code> (qui invoque un menu interactif de configuration) avant de compiler le noyau.

;<tt>--gconfig</tt>
: fournit un outil de configuration du noyau qui dépend des bibliothèques GTK+. L'avantage de cette option est que la majorité des utilisateurs trouvent cette interface plus claire et facile à utiliser pour configurer le noyau, puisqu'elle utilise le système X-Window. Son inconvénient est que vous devez avoir X-Window pour l'utiliser, cela ne marchera pas dans une console en ligne de commande.

;<tt>--xconfig</tt>
:  fournit un outil de configuration du noyau qui dépend des bibliothèques Qt. L'avantage de cette option est que la majorité des utilisateurs trouvent cette interface plus claire et facile à utiliser pour configurer le noyau, puisqu'elle utilise le système X-Window. Son inconvénient est que vous devez avoir X-Window pour l'utiliser, cela ne marchera pas dans une console en ligne de commande.

;<tt>--[no-]save-config</tt>
: sauvegarde [ou ne sauvegarde pas] la configuration du noyau dans un fichier situé dans le répertoire {{Path|/etc/kernels}} pour une future utilisation.

;<tt>--kernname=&lt;NickName&gt;</tt>: vous permet de nommer le noyau et le disque virtuel initial (initrd).qui seront copiés dans {{Path|/boot}}, de sorte que les noms de fichier produits soient '''kernel-Nom-version''' et '''initramfs-Nom-version'''.

==== Options agissant sur le système résultant ====

Les options définies ici définissent quelles fonctionnalités, seront, ou ne seront pas, incluses dans le noyau et le système de fichiers virtuel de démarrage résultants. 

;<tt>--[no-]splash</tt>
: ajoute [ou n'ajoute pas] la prise en charge de l'écran d'attente en tampon de trame (splash framebuffer) au sytème de fichiers virtuel de démarrage (initrd) que construit genkernel. Pour écraser le thème par défaut utilisé par fbsplash, utilisez <tt>--splash=&lt;MonThème&gt;</tt> (où <tt>&lt;MonThème&gt;</tt> est le nom de l'un des répertoires situés dans {{Path|/etc/splash}}).

;<tt>--splash-res=&lt;PreferredResolution&gt;</tt>
:  cette option vous permet de sélectionner les résolutions prise en charge par l'initrd au démarrage. Elle est utile pour deux raisons : d'abord, vous pouvez choisir quelles résolutions sont prises en charge spécifiquement par votre système, ensuite, vous réduisez la quantité d'espace occupée par l'initrd puisque ce dernier n'a plus à s'occuper des résolutions que vous n'utiliserez pas. Cependant, vous pouvez ignorer cette option si vous compilez un noyau pour un CD d'installation, ce qui permettra à bootsplash de prendre en charge toutes les résolutions.

;<tt>--do-keymap-auto</tt>
: force la sélection de l'arrangement de clavier lors du démarrage.

;<tt>--lvm</tt>
: inclut la prise en charge des volumes gérés par LVM2 grâce à des binaires statiques, s'ils sont disponibles. Les binaires (statiques) LVM2 en question sont compilés lorqu'ils manquent. Assurez-vous d'avoir installé le paquet lvm2 sur votre système avec emerge lvm2 avant d'activer cette option et d'avoir lu l'[[LVM |article LVM ]] sur ce wiki.

;<tt>--dmraid</tt>
: inclut la prise en charge de DMRAID, l'outil qui crée des volumes RAID logiciels en utilisant le sous-système device-mapper du noyau. [http://people.redhat.com/~heinzm/sw/dmraid/readme DMRAID]  découvre, active, désactive et affiche les propriétés des volumes RAID (ATARAID par exemple) ainsi que celles des partition DOS incluses.

;<tt>--luks</tt>
: inclut le support de Linux Unified Key Setup ([http://clemens.endorphin.org/cryptography LUKS]). Cela vous permettra d'utiliser un périphérique chiffré par LUKS pour placer votre système de fichiers racine (/). Spécifiez alors au chargeur de démarrage le nom de ce périphérique via la variable <code>crypt_root</code>  (<code>real_root</code> doit être le nom du périphérique une fois déchiffré par LUKS).

;<tt>--disklabel</tt>
: ajoute la prise en charge de disk label (étiquette de disque) and UUID (Identifiant Unique Universel) à votre disque virtuel initial (initrd).

;<tt>--iscsi</tt>
: ajoute la prise en charge de iSCSI à votre disque virtuel initial (initrd).

;<tt>--multipath</tt>
: ajoute la prise en charge de Multipath à votre disque virtuel initial (initrd).

;<tt>--linuxrc=/path/to/your/linuxrc</tt>
: spécifie un script linuxrc créé par l'utilisateur qui sera appelé lors de la phase de démarrage du noyau, avant le démarrage du système. (Un script linuxrc par défaut devrait se trouver dans {{Path|/usr/share/genkernel/}}.) Ce script vous permet d'amorcer sur un petit noyau modulaire et de charger les pilotes requis (sous forme de modules) par le système avant le démarrage.

;<tt>--cachedir=/path/to/alt/dir</tt>
: remplace le chemin par défaut du cache utilisé pendant la compilation.

;<tt>--tempdir=/path/to/new/tempdir</tt>
: spécifie le chemin du répertoire temporaire utilisé par genkernel lors de la compilation du noyau.

;<tt>--unionfs</tt>
: inclut la prise en charge de [http://www.fsl.cs.sunysb.edu/project-unionfs.html Unification File System] dans votre disque virtuel initial (initrd).

;<tt>--mountboot</tt>
:  détecte si le répertoire  {{Path|/boot}}  a besoin d'être monté en lisant le {{Path|/etc/fstab}} et en y prenant les instructions sur la manière de le monter.

==== Options agissant sur le choix des outils utilisés pour la compilation  ====

Les options suivantes sont prises en charge par genkernel, et sont passées aux applications concernées lors de la compilation et de l'assemblage du noyau. Ces options influent sur le choix des outils utilisés pendant le processus de compilation, quoi qu'à un niveau assez bas.

;<tt>--kernel-cc=&lt;unCompilateur&gt;</tt>
: ceci spécifie quel compilateur sera utilisé pour construire votre noyau

;<tt>--kernel-ld=&lt;unéditeurDeLiens&gt;</tt>
: ceci spécifie quel éditeur de liens sera utilisé dans la construction de votre noyau.

;<tt>--kernel-as=&lt;unAssembleur&gt;</tt>
: ceci spécifie quel assembleur  sera utilisé pour construire votre noyau.

;<tt>--kernel-make=&lt;unMake&gt;</tt>
: ceci spécifie un utilitaire GNU make alternatif qui sera utilisé pour la construction de votre noyau.

;<tt>--utils-cc=&lt;unCompilateur&gt;</tt>
: ceci spécifie un compilateur qui sera utilisé pour construire les outils annexes.

;<tt>--utils-ld=&lt;unÉditeurDeLiens&gt;</tt>
: ceci spécifie un éditeur de liens utilisé dans la construction des outils annexes.

;<tt>--utils-as=&lt;unAssembleur&gt;</tt>
: ceci spécifie un assembleur qui sera utilisé pour construire les outils annexes.

;<tt>--utils-make=&lt;unMake&gt;</tt>
: ceci spécifie un utilitaire GNU make alternatif qui sera utilisé pour la construction des outils annexes..

;<tt>--makeopts=-jX</tt>
: spécifie le nombre de fils d'exécution concurrents que make peut utiliser pendant la compilation du noyau et des outils. La variable <code>X</code> est un nombre obtenu en ajoutant un (1) au nombre de processeurs du système. Pour un système monoprocesseur, la valeur appropriée serait <code>-j2</code> . Un biprocesseur utiliserait <code>-j3</code>  et ainsi de suite. Un système monoprocesseur qui prend en charge la technologie Hyper-Threading™ (ou « HT ») peut utiliser la valeur <code>-j3</code> , en supposant que le support du SMP (Symmetric Multi-Processing) soit activé dans le noyau au moment de la compilation.

==== Options agissant sur le processus de compilation ====

Les options suivantes ont généralement un effet lors de la compilation réelle.

;<tt>--kerneldir=/chemin/vers/sources/</tt>
: pour spécifier l'endroit où se trouvent les sources du noyau et ne pas utiliser l'emplacement par défaut {{Path|/usr/src/linux/}}.

;<tt>--kernel-config=/chemin/vers/fichier/config-file</tt>
: pour spécifier l'endroit où se trouve le fichier de configuration et ne pas utiliser l'emplacement par défaut {{Path|/path/to/sources/.config}}.

;<tt>--module-prefix=/chemin/vers/modules prefix/</tt>
: pour spécifier où installer les modules du noyau et ne pas utiliser l'emplacement par défaut{{Path|/lib/modules}}.

;<tt>--[no-]clean</tt>
:  lance [ou ne lance pas] make clean avant de compiler le noyau, ce qui efface toutes les dépendances et fichiers objets déjà présents.

;<tt>--[no-]mrproper</tt>
: lance [ou ne lance pas] make mrproper avant de compiler le noyau. Comme la commande make clean, make mrproper efface toutes les dépendances et fichiers objets de l'arborescence des sources du noyau, mais elle efface également les fichiers de configuration (tels que {{Path|/path/to/sources/.config}} ou {{Path|/path/to/sources/.config.old}}) .

;<tt>--oldconfig</tt>
: Lance la commande <code>make oldconfig</code>, qui essaira de collecter des informations de configuration pour votre architecture depuis un script générique situé dans {{Path|/usr/share/genkernel}}. Ce processus n'est pas interactif ; aucune entrée de l'utilisateur n'est demandée. De plus, si <tt>--oldconfig</tt> est utilisé en même temps que <tt>--clean</tt>, cette dernière sera annulée, comme si on avait rajouté l'option  <tt>--no-clean</tt>.

;<tt>--callback="echo hello"</tt>
:  cette routine effectue un appel à l'argument spécifié (ici, echo Hello) après que le noyau et les modules correspondants aient été construits, mais avant de créer l'image initrd. C'est utile lorsque vous souhaitez installer des modules externes dans l'initrd en passant la commande emerge en argument et redéfinir de ce fait un nouveau groupe de modules genkernel.

;<tt>--[no-]install</tt>
: lance [ou ne lance pas] la commande <code>make install</code>, ce qui installe votre nouveau noyau, le fichier de configuration, l'image initrd et le System.map sur votre partition montée de boot. Les modules compilés seront aussi installés..

;<tt>--no-ramdisk-modules</tt>
: empêche la copie des modules dans l'image de disque intitial (initrd) créée par genkernel.

;<tt>--all-ramdisk-modules</tt>
: copie tous les modules disponibles dans l'image de disque initial (initrd) créée par genkernel.

;<tt>--genzimage</tt>
:  crée l'image initrd avant l'image du noyau (cette bidouille ne s'applique actuellement qu'aux systèmes PPC Pegasos.)

==== Options de débogage ====

L'utilisation d'options de débogage pendant la compilation du noyau contrôle le nombre d'informations reportées, ainsi que la présentation de celles-ci.

;<tt>--loglevel=&lt;niveau de verbosité&gt;</tt>
: contrôle le niveau de verbosité des informations fournies par genkernel. La variable '''NiveauVerbosité''' doit être un nombre entier compris entre 0 et 5. Le niveau « 0 » représentant le minimum d'information, tandis qu'une valeur de « 5 » fournira le plus d'informations possible sur le déroulement des opérations.

;<tt>--logfile=/chemim/vers/fichier/journal</tt>
: ignore la valeur de  <tt>--loglevel</tt> et renvoie toutes les informations produites par genkernel vers le fichier spécifié, qui est {{Path|/var/log/genkernel.log }} par défaut.

;<tt>--[no-]color</tt>
: active [ou désactive] la sortie colorée des informations de débogage (celles reportées par genkernel).

=== Action ===

Une action passée avec la commande <code>genkernel [options …] action</code> indique à <code>genkernel</code>  ce qu'il faut faire. Les actions prises en charge sont :

;<code>all</code>
: compile/construit toutes les étapes — le disque virtuel initial (initrd), l'image du noyau et les modules.

;<code>bzImage</code>
:  ne compile/construit que l'image du noyau.

;<code>kernel</code> : ne compile/construit que l'image du noyau et les modules

;<code>initramfs</code>
:  ne compile/construit que le disque virtuel initial(initramfs)

;<code>ramdisk</code>
: ne compile/construit que le disque virtuel initial(initramfs)

== Utiliser Genkernel  ==

=== Première invocation de Genkernel ===

Bien qu'il y ait plusieurs façons de lancer genkernel, la plus simple reste <code>genkernel all</code>. Une configuration générique qui marche correctement pour tous les systèmes sera alors utilisée. Comme mentionné précédemment, cette méthode n'est pas sans inconvénients. La plupart des modules compilés ne seront pas utilisés et la compilation prendra beaucoup de temps. L'illustration suivante montre une approche plus efficace, en passant certains paramètres à genkernel en tant qu'utilisateur root:

{{RootCmd|genkernel --splash --no-install --no-clean --menuconfig all}}

Cette opération indique à genkernel de créer un noyau avec un écran de démarrage (<tt>--splash</tt>) en tampon de trames (framebuffer)  qui devra être installé à la main (<tt>--no-install</tt>). Dans la phase préparatoire de compilation, genkernel n'effacera pas les objets déjà compilés (<tt>--no-clean</tt>). Enfin, un menu de configuration sera affiché, permettant à l'utilisateur de choisir quels modules seront compilés (<tt>--menuconfig</tt>).

Remplacez <tt>--no-install</tt> par <tt>--install</tt> pour qu'il installe automatiquement le nouveau noyau dans {{Path|/boot}} et spécifiez <tt>--symlink</tt> pour qu'il crée les liens symboliques pour vous. En utilisant le paramètre -- <tt>--mountboot</tt> , la partition {{Path|/boot}} sera monté par genkernel automatiquement, si nécessaire.

{{Note|N'oubliez pas que le fichier {{Path|/etc/genkernel.conf}} est lu par la commande <code>genkernel</code> lorsqu'elle démarre, et que toutes les options qui y sont définies, seront appliquées, sauf quand une option en ligne de commande contradictoire est passée. }}

=== Utiliser Genkernel pour modifier votre noyau  ===

La première chose que vous devriez faire, c'est autoriser le lancement de <code>make menuconfig</code> dans le fichier {{Path|/etc/genkernel.conf}} :

{{File|/etc/genkernel.conf|Forcer l'utilisation du menu de configuration dans  /etc/genkernel.conf|<pre>
# Lance  'make menuconfig' avant de compiler le noyau ?
MENUCONFIG="yes"
</pre>}}

==== Gestion des fichiers par  genkernel ====

Quand il utilise genkernel, l'utilisateur doit être conscient de quelques aspects concernant la gestion des fichiers de configuration et des fichiers image du noyau, ainsi que de la façon dont les sources du noyau sont manipulées par le système.

===== Fichiers sources utilisés par  genkernel =====

Après une commande <code>emerge -u gentoo-sources</code>, chaque fois que de nouvelles sources sont disponibles, un nouveau dossier est créé pour les sources du noyau dans  {{Path|/usr/src/}} pour les héberger. Normalement, le dossier des sources actives est pointé par le lien symbolique {{Path|/usr/src/linux}}.

Le dossier  {{Path|/usr/src}} pourrait ressembler à ceci :

{{Cmd|ls -l /usr/src|output=<pre>
total 16
lrwxrwxrwx  1 root root   19 21 mars   2013 linux -> linux-3.7.10-gentoo
drwxr-xr-x 24 root root 4096 25 août  10:39 linux-3.10.7-gentoo
drwxr-xr-x 20 root root 4096 21 avril 19:42 linux-3.7.10-gentoo
drwxr-xr-x 21 root root 4096 14 mars   2013 linux-3.7.9-gentoo
drwxr-xr-x  7 root root 4096 20 avril 17:06 rpm
</pre>}}

Le lien symbolique  {{Path|linux}} peut être changé de différentes manières. 

* Si l'option <code>symlink</code> de la variable USE est définie dans {{Path|/etc/portage/make.conf}}, le lien symbolique {{Path|linux}} est automatiquement mis à jour pour pointer sur les nouvelles sources installées par la commande <code> emerge</code>. . 

* Si l'option de la variable  USE évoquée ci-dessus n'est pas définie, l'utilisateur peut changer la destination du lien symbolique en utilisant la commande <code>eselect kernel list</code> .

Quoi qu'il en soit, <code>genkernel</code> utilise toujours les sources pointées par ce lien symbolique.

===== Fichiers de configuration du noyau utilisé par genkernel =====

Si une compilation du noyau a déjà été faite à partir des sources actives du noyau, il devrait y avoir un fichier dans le dossier {{Path|/etc/kernels}} qui contient la configuration du noyau qui a été appliquée lors de la création de la dernière bzimage du noyau. Ce fichier est nommé par exemple {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}}; nom dans lequel il faut remplacer x86_64 par votre achitecture, 3.7.9 par la version des sources que vous utilisez et r1 par le numéro de divulgation de vos sources.

C'est ce fichier  {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}} qui est utilisé comme point de départ de la configuration lorsque vous lancez   <code>genkernel --menuconfig all</code>.

Si c'est la première fois que vous lancez <code>genkernel</code>, ou si la précédente configuration n'a pas été sauvegardée, ce fichier est remplacé par une configuration par défaut qui réside dans {{Path|usr/share/genkernel/arch/x86_64/kernel-config}} (nom dans lequel x86_64 doit être remplacé par votre architecture réelle).

{{Note|Le chemin vers ce fichier de configuration par défaut peut être changé en définissant la variable  DEFAULT_KERNEL_CONFIG dans le fichier {{Path|/etc/genkernel.conf}}.}}

===== Sauvegarder la configuration compilée =====

Si l'option  <code>save-config</code> de genkernel est activée, soit depuis la ligne de commande, soit dans  {{Path|/etc/genkernel.conf}}, la configuration compilée du noyau est sauvegardée (avec le nom donné ci-dessus) dans le dossier {{Path|/etc/kernels}}. En même temps, la configuration est sauvegardée dans le fichier  {{Path|.config}} dans le dossier  {{Path|/usr/src/linux}} mais ce n'est pas ce fichier qui est réutilisé lors de l'exécution suivante de <code>genkernel all</code>.

{{Warning/fr|Il faut être conscient que , chaque fois que genkernel est exécuté avec l'option <code>save-config</code> de genkernel définie, le fichier de  configuration dans {{Path|/etc/kernels}} est écrasé. En conséquence, il est fortement recommandé de dupliquer  ce fichier sous un nouveau nom avant d'exécuter genkernel pour le préserver. }}

===== Installer le noyau et le disque virtuel de démarrage dans le dossier /boot  =====

L'action <code>all</code> spécifiée lors de l'invocation de  genkernel, demande à  <code>genkernel</code> d'installer les images du noyau et du système de fichiers virtuel de démarrage (initramfs) dans le dossier  {{Path|/boot}} . Afin de le faire d'une manière appropriée, définissez ce qui suit dans le fichier {{Path|/etc/genkernel.conf}} :

{{File|/etc/genkernel.conf|Définir l'auto-sauvegarde des images du noyau et de  initramfs |<pre>
# Monter BOOTDIR automatiquement s'il n'est pas monté ?
MOUNTBOOT="yes"
  
# Sauvegarder la nouvelle configuration dans /etc/kernels si
# la compilation réussit
SAVE_CONFIG="yes"
  
# Créer les liens symbolique dans  BOOTDIR automatiquement ?
SYMLINK="yes"
  
# Ajouter le nouveau noyau à  grub?
#BOOTLOADER="grub"
</pre>}}

* Le premier paramètre parle de lui-même.

* Le second paramètre indique à genkernel de sauvegarder la configuration du noyau compilé dans {{Path|/etc/kernels}}.

* Les deux dernières options indiquent à genkernel de mettre la configuration de  grub à jour. En pratique, voilà ce qui se passe :
** si une image précédente du noyau avec le même nom existe déjà, elle est renommée en ajoutant  <tt>.old</tt> à son nom. Un lien symbolique  {{Path|kernel.old}} est automatiquement créé qui pointe sur lui.
** le nouveau noyau prend la place de tout noyau de même nom dans le dossier  {{Path|/boot}}. Si c'est la première fois que le noyau est compilé, un lien symbolique est automatiquement créé qui pointe sur le nouveau noyau.

Après l'exécution de la commande  <code>genkernel --menuconfig all</code>, le dossier  {{Path|/boot}} pourrait ressembler à ceci :

{{Cmd|ls -al /boot|output=<pre>
total 41336
drwxr-xr-x  3 root root    4096 20 avril 17:23 .
drwxr-xr-x 24 root root    4096 15 sept. 12:31 ..
lrwxrwxrwx  1 root root       1 24 févr.  2013 boot -> .
drwxr-xr-x  2 root root    4096 24 févr.  2013 grub
lrwxrwxrwx  1 root root      40 20 avril 17:23 initramfs -> initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1314412 20 avril 17:23 initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1313548 21 mars   2013 initramfs-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 1295344 25 févr.  2013 initramfs-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3310324 25 févr.  2013 initramfs-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      44 20 avril 17:23 initramfs.old -> initramfs-genkernel-x86_64-3.7.10-gentoo.old
lrwxrwxrwx  1 root root      37 20 avril 17:23 kernel -> kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866656 20 avril 17:23 kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866560 21 mars   2013 kernel-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 4552288 25 févr.  2013 kernel-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3400736 25 févr.  2013 kernel-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      41 20 avril 17:23 kernel.old -> kernel-genkernel-x86_64-3.7.10-gentoo.old
</pre>}}

==== Configurer le chargeur de démarrage  ====

Les liens symboliques présentées plus haut peuvent être utilisés  pour configurer le chargeur de démarrage, de telle manière que même si le nouveau noyau n'est pas amorçable, l'utilisateur puisse toujours redémarrer sur l'ancien. 

Pour permettre au nouvea noyau et au nouveau système de fichiers virtuel de démarrage produit par  genkernel de fonctionner correctement, il faut fournir un minimum d'informations dans le fichier de configuration du chargeur de démarrage :
* Ajoutez  <code>real_root=/dev/sdax</code> aux paramètres passés à l'image du noyau, avec {{Path|/dev/sdax}} pointant sur la partition racine.
* Si splash est utilisé, ajoutez un mode line convenable tel que  <code>vga=0x317</code> aux  paramètres passés au noyau et ajoutez aussi   <code>splash=verbose</code> ou <code>splash=silent</code> selon la loquacité attendue dans le processus de démarrage. 
* Ajoutez l'information  initrd information requise par le chargeur de démarrage. Consultez le  chapitre sur la [http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=1&chap=10 configuration du chargeur de démarrage ] du manuel de Gentoo pour les détails sur comment rendre votre chargeur de démarrage informé de la présence de initrd.

Voici à quoi le fichier  {{Path|grub.conf}} pourrait ressembler.

{{File|/boot/grub/grub.conf|Un exemple de fichier de configuration grub.conf |<pre>
# Ceci est un exemple de grub.conf pour une utilisation avec Genkernel, d'après le manuel de  Gentoo  
# http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=1&chap=10#doc_chap2 
# Si vous n'utilisez pas  Genkernel et que vous avez besoin d'aide pour créer ce fichier, vous  
# devriez consulter le manuel. En alternative,  consultez l'exemple '''grub.conf.sample''' qui se trouve
# dans la documentation de  Grub. 
  
default 0 
timeout 5
splashimage=(hd1,0)/boot/grub/splash.xpm.gz 
   
title Gentoo Linux 
root (hd0,6) 
kernel /boot/kernel initrd=/dev/ram0 real_root=/dev/sda7 rootfstype=ext4  
initrd /boot/initramfs
  
title Gentoo Linux old kernel 
root (hd0,6) 
kernel /boot/kernel.old initrd=/dev/ram0 real_root=/dev/sda7 rootfstype=ext4 
initrd /boot/initramfs.old
</pre>}}

==== Préserver vos fichiers qui fonctionnent ====

L'application genkernel sauvegarde automatiquement les changements des fichiers. Si les changements précédents doivent être sauvegardés, les actions suivantes sont à envisager.

* Le premier fichier à préserver est le fichier de configuration du noyau dans {{Path|/etc/kernels/}}. Si les sources n'ont pas changées avant la recompilation du noyau, le nom utilisé précédemment pour ce fichier sera utilisé à nouveau. C'est pourquoi dupliquer le fichier de configuration précédent avec un nouveau nom aide à préserver l'information tout en laissant l'ancien  fichier disponible  comme point de départ de la nouvelle configuration.

* La deuxième chose importante à préserver ce sont les images des noyaux et initramfs déjà amorçables. La manière de le faire dépend du contexte : 
:# Si le dernier noyau compilé est amorçable, exécuter  <code>genkernel</code> renommera cette image du noyau(et de façon similaire celle de l'image initramfs) en  {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} et créera une nouvelle image {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}. Ceci signifie que, même si le nouveau noyau n'est pas amorçable, l'utilisateur sera toujours en mesure de démarrer sur l'ancien. 
:# Si le dernier noyau compilé n'est pas amorçable et si les sources n'ont pas été changées depuis que l'utilisateur en a compilé un qui était amorçable, avant d'exécuter <code>genkernel</code>, commencez par effacer la nouvelle image du noyau et supprimer le suffixe <tt>.old</tt>  du nom du dernier noyau amorçable. Sans cela si le nouveau noyau n'est pas amorçable pour la deuxième fois, le {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} amorçable sera évincé par le renommage du  {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}, laissant l'utilisateur avec un système non amorçablex Tenez le même raisonnement pour initramfs.

=== Utiliser la  configuration précédente du noyau tout en changeant de  sources ===

La configuration précédente peut être utilisée via l'option  <code>make menuconfig</code> dans le fichier {{Path|/etc/genkernel.conf}} comme ci-après :

{{File|/etc/genkernel.conf|Définir l'appel à  make menuconfig|<pre>
# Exécute 'make menuconfig' avant de compiler le noyau ?
MENUCONFIG="yes"
</pre>}}

{{Note|Il n'est pas nécessaire d'exécuter <code>make oldconfig</code> avec genkernel même si les sources ont été changées de  {{Path|kernel-genkernel-ARCH-version-gentoo-rx}} en {{Path|kernel-genkernel-ARCH-version-gentoo-r(x+1)}} ou de {{Path|kernel-genkernel-ARCH-version-gentoo}} to {{Path|kernel-genkernel-ARCH-(version+1)-gentoo}} parce que <code>make menuconfig</code> va essayer de charger la configuration précédente au mieux dans le menu. Néanmoins, une revue minutieuse de chacune des options et des nouvelles sections est recommandée. }}

== Démarrer sur le réseau avec genkernel ==

=== Démarrer sur un CD-ROM d'installation Gentoo depuis le réseau  ===

L'outil genkernel peut fabriquer des images de noyaux et de disque virtuel initial (initrd) qui permettent de démarrer sur le réseau (netboot). Avec un peu de chance, vous devriez pouvoir faire démarrer n'importe quel ordinateur récent par le réseau sur l'environnement fourni par le CD-ROM d'installation de Gentoo.

La magie de la chose réside dans le script linuxrc de genkernel : il va essayer de monter le CD-ROM d'installation par NFS via le réseau. Partant de là, les scripts d'initialisation du CD-ROM d'installation seront utilisés comme si le CD était présent en local.

=== Construire un noyau et an initrd qui prennent en charge  le démarrage par le réseau ===

Pour activer le support du démarrage par le réseau, activez les options suivantes lors de la configuration du noyau :

{{Warning/fr|Le support du démarrage par le réseau avec genkernel est expérimental et peut contenir quelques bogues. }}

Tout d'abord, l'image du noyau doit contenir les pilotes de votre carte réseau. En principe, les pilotes pour ce genre de périphériques sont compilés en tant que modules. Pourtant, il est impératif ici (pour pouvoir démarrer avec) que ces pilotes soient intégrés dans le noyau et pas en modules.

{{Kernel|Configurer un noyau 2.6.x avec la prise en charge de votre pilote NIC |<pre>
Device Drivers --->
   Networking Support --->
      Ethernet (10 or 100Mbit)  --->
         [*] Ethernet (10 or 100Mbit)
         <*>   the driver for your network card</pre>
}}

Assurez-vous de choisir <tt>&lt;*&gt;</tt> et non pas <tt>&lt;M&gt;</tt>.

Ensuite, nous vous suggérons d'activer '''IP: kernel level autoconfiguration''' et '''IP: DHCP support'''. Cela évitera une couche supplémentaire de complexité si l'adresse IP et le chemin NFS du CD-ROM d'installation peuvent être spécifiés par un serveur DHCP. Bien sûr, cela signifie que la ligne de commande d'appel du noyau sera la même pour toutes les machines.

{{Kernel|Configurer un noyau 2.6.x avec la prise en charge de DHCP|<pre>
Device Drivers --->
   Networking Support --->
      Networking options
         [*] TCP/IP networking--->
         [*]   IP: kernel level autoconfiguration
         [*]     IP: DHCP support
</pre>}}

Ces options indiquent au noyau d'envoyer une requête DHCP au démarrage.

De plus, vous devez activer SquashFS car la majorité des CD-ROM d'installation récents de Gentoo l'utilisent. Le support de SquashFS n'est pas intégré aux sources génériques de Linux, vous devrez appliquer les correctifs nécessaires ou bien installer les gentoo-sources.

{{Kernel| Configurer le noyau pour une prise en charge de SquashFS|<pre>
File systems--->
   Miscellaneous filesystems --->
      [*] SquashFS 2.X - Squashed file system support
</pre>}}

Une fois que le processus de compilation est terminé, créez une archive compressée (.tar.gz) qui contient les modules du noyau. Cette étape n'est nécessaire que si la version de votre noyau ne correspond pas à la version de l'image située sur le CD-ROM d'installation.

Pour créer une archive contenant tous les modules :

{{RootCmd|cd /
|tar -cf /tmp/modules-X.Y.Z.tar.gz /lib/modules/X.Y.Z/}}

Selon votre méthode de démarrage par le réseau, vous devrez exécuter certaines des étapes suivantes :

Créer une image etherboot.

{{RootCmd|emerge mknbi
|cd /boot
|mkelf-linux -params{{=}}"root{{=}}/dev/ram0 init{{=}}/linuxrc ip{{=}}dhcp" kernel... initrd... > etherboot.img}}

Pour créer une image TFTP OpenBoot / SPARC64.

{{RootCmd|emerge sparc-utils
|cd /boot
|elftoaout kernel... -o kernel.aout
|piggyback64 kernel.aout System.map-... initrd-...
|mv kernel.aout openboot.img}}

Le fichier {{Path|openboot.img}} est l'image à démarrer.

Enfin, copiez ce noyau sur votre serveur TFTP. La manière de procéder dépend complètement de votre architecture et dépasse les limites de ce guide. Veuillez consulter la documentation de votre plate-forme.

=== Configuration du NFS ===

To setup a NFS share that contains the Installation CD, use the loop device to mount the ISO image and then copy the contents of the CD into the NFS share. As a nice extra, genkernel's initrd scripts will extract all tar.gz files located in the {{Path|/nfs/livecd/add/}} directory. All that needs to be done here is copy the {{Path|modules-X.Y.Z.tar.gz}} archive to the {{Path|/nfs/livecd/add/}} directory.

The following assumes that {{Path|/nfs/livecd}} is an exported NFS share:

{{RootCmd|mount /tmp/gentoo-livecd.iso /mnt/cdrom -o loop
|cp -p /mnt/cdrom /nfs/livecd
|umount /mnt/cdrom}}

Now copy the {{Path|modules.tar.gz}} file into {{Path|/add}}:

{{RootCmd|mkdir /nfs/livecd/add
|cp /tmp/modules-X.Y.Z.tar.gz /nfs/livecd/add}}

=== DHCP setup ===

The netboot images will ask the DHCP server on the network for an IP as well as a <tt>root-path</tt> parameter. Both can be specified per host using a MAC address to identify machines:

{{File|/etc/dhcpd.conf|Exemple de configuration de  client dhcpd.conf |<pre>
# Ici, 192.168.1.2 est le serveur NFS alors que 192.168.1.10 sera l'adresse IP de la machine démarrée par le  réseau  
host netbootableMachine {
         hardware ethernet 11:22:33:44:55:66;
         fixed-address 192.168.1.10;
         option root-path "192.168.1.2:/nfs/livecd";
}
</pre>}}

=== Netbooting Instructions ===

Le démarrage par le réseau est encore une fois très spécifique à la plate-forme utilisée. Ce qui est important, c'est de spécifier les paramètres  <code>ip=dhcp</code> et <code>init=/linuxrc</code> sur la ligne de commande du noyau. Cela activera la carte réseau et montera le CD-ROM d'installation via NFS. Voici quelques astuces pour certaines plates-formes :

Pous etherboot, insérer le disque etherboot dans le lecteur et redémarrez. La ligne de commande du noyau a été spécifiée lors de la construction de l'image. 
Avec Sparc64, pressez {{Key|Stop}}-{{Key|A}} à l'invite de démarrage et entrez :

{{RootCmd|boot net ip{{=}}dhcp init{{=}}/linuxrc|prompt=ok }}
  
For PXE, Configurez pxelinux (qui fait partie de syslinux),
puis créez un fichier {{Path|pxelinux.cfg/default}}qui contient ces lignes:

{{File|pxelinux.cfg/default|Entrée par défaut|<pre>
DEFAULT gentoo
TIMEOUT 40
PROMPT 1
  
LABEL gentoo
    KERNEL kernel-X.Y.Z
    APPEND initrd=initrd-X.Y.Z root=/dev/ram0 init=/linuxrc ip=dhcp
</pre> }}

=== Amorcer un disque virtuel initial de genkernel ===

==== Introduction ====

Si vous avez installé un disque virtuel initial (initramfs) avec genkernel, vous devriez assurément regarder les options diverses et variées de boot que vous pouvez (ou devez) définir dans la configuration de votre chargeur de démarrage. Les plus courantes sont citées ici pour référence.

==== Chargement de LVM ou de software-RAID ====

Si votre système utilise LVM ou RAID logiciel, vous avez sans aucun doute construit le disque virtuel initial (initramfs) en utilisant les options <tt>--lvm</tt> et <tt>--mdadm</tt>. Néanmoins, vous ne devriez pas oublier d'activer la prise en charge au moment du démarrage. Ceci peut être fait en utilisant les options dolvm et domdadm.

{{File|/boot/grub/grub.conf|Activer la prise en charge de  LVM et/ou MDADM|<pre>
# Exemple pour  GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 dolvm domdadm
initrd /initramfs-genkernel-x86_64-3.4.3
</pre> }}

==== Démarrer dans le mode utilisateur unique (single-user) ====

Si, pour une raison ou une autre, le démarrage échoue, récupérer le système en démarrant le mode utilisateur unique reste possible. Ceci ne chargera que les services réellement nécessaires et offrira à l'utilisateur un shell de récuppration root.

{{File|/boot/grub/grub.conf|Booting in single-user mode|<pre>
# Example for GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 init_opts=S
initrd /initramfs-genkernel-x86_64-3.4.3
</pre> }}

== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:


* Tim Yamin
* Jimi Ayodele 
* Thomas Seiler 
* Joshua Saddler
* Sebastian Pipping
* José Fournier

[[Category:Kernel]]
[[Category:Initramfs]]
