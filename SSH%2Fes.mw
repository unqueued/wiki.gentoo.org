<languages />

{{Metadata|abstract=SSH (Secure Shell) es un programa de terminal cifrado que reemplaza la herramienta clásica telnet en los sistemas operativos tipo Unix.}}

{{InfoBox stack
|{{InfoBox homepage|http://www.openssh.org|header=true}}
|{{InfoBox wikipedia|Secure Shell}}
|{{InfoBox ohloh|openssh}}
}}
'''SSH''' ('''S'''ecure '''SH'''ell) es un programa de terminal cifrado que reemplaza la herramienta clásica telnet en los sistemas operativos tipo Unix.

Además del acceso a la terminal remota proporcionada por el binario principal {{c|ssh}}, la suite de programas SSH ha crecido hasta incluir otras herramientas como {{c|scp}} ('''S'''ecure '''C'''opy '''P'''rogram) y {{c|sftp}} ('''S'''ecure '''F'''ile '''T'''ransfer '''P'''rotocol).

Originalmente, SSH no era libre. Sin embargo, hoy la implementación estándar más popular y de-facto de SSH es OpenSSH de [http://www.openbsd.org/ OpenBSD] ,que viene pre-instalado en Gentoo.

== Instalación ==

=== Comprobar la instalación ===

La mayoría de los despliegues de Gentoo Linux incluyen OpenSSH en el sistema. Esto se puede comprobar lanzando la orden {{c|ssh}}. Si está instalado, se debería mostrar información sobre su utilización:

{{Cmd|ssh|output=<pre>
usage: ssh [-1246AaCfgKkMNnqsTtVvXxYy] [-b bind_address] [-c cipher_spec]
           [-D [bind_address:]port] [-E log_file] [-e escape_char]
           [-F configfile] [-I pkcs11] [-i identity_file]
           [-L [bind_address:]port:host:hostport] [-l login_name] [-m mac_spec]
           [-O ctl_cmd] [-o option] [-p port]
           [-Q cipher | cipher-auth | mac | kex | key]
           [-R [bind_address:]port:host:hostport] [-S ctl_path] [-W host:port]
           [-w local_tun[:remote_tun]] [user@]hostname [command]
</pre>}}

Si no se muestra información sobre su utilización, probablemente {{c|ssh}} está corrupto o no instalado. También es posible que el usuario reconstruya OpenSSH para incluir una nueva configuración USE. Sea cual sea el caso, continúe para conocer los ajustes USE.

=== Ajustes USE ===

{{USEflag|package=net-misc/openssh}}

=== Emerge ===

Después de cambiar los ajustes USE necesarios, no olvide instalar (o reconstruir) OpenSSH:

{{emerge|net-misc/openssh|params+=--changed-use}}

== Configuración ==

=== Crear claves ===

Con el fin de proporcionar un intérprete de comandos seguro, se utilizan las claves criptográficas para administrar las funcionalidades de cifrado, descifrado, y de hashing ofrecidos por SSH.

En el primer inicio del servicio SSH, se generarán claves del sistema. Las claves pueden ser (re) generadas mediante la orden {{c|ssh-keygen}}.

Para generar las claves de la versión del protocolo SSH 2 (algoritmos DSA y RSA):

{{RootCmd|/usr/bin/ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key -N ""
|/usr/bin/ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N ""}}

The article [https://stribika.github.io/2015/01/04/secure-secure-shell.html Secure Secure Shell] suggests using '''Ed25519''' and '''RSA''' public key algorithms with:

{{RootCmd
|/usr/bin/ssh-keygen -t ed25519 -a 100 -f /etc/ssh/ssh_host_dsa_key -N ""
|/usr/bin/ssh-keygen -t rsa -b 4096 -o -a 100 -f /etc/ssh/ssh_host_rsa_key -N ""
}}

=== Configuración del servidor ===

El servidor SSH suele estar configurado en el {{Path|/etc/ssh/sshd_config}} aunque también es posible realizar una configuración adicional en archivo {{Path|/etc/conf.d/sshd}} de OpenRC, incluyendo el cambio de la ubicación del archivo de configuración.
Para obtener información detallada sobre cómo configurar el servidor puede ver el ''sshd_config'' [[man page]].

Los usuarios también deberían estudiar la [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html guía OpenSSH de Sven] para una configuración centrada en seguridad.

=== Configuración del cliente ===

Los programas cliente {{c|ssh}} cliente y afines ({{c|scp}}, {{c|sftp}}) se puede configurar utilizando los siguientes archivos:

* {{Path|~/.ssh/config}}
* {{Path|/etc/ssh/ssh_config}}

Para más información lea el manual {{Path|ssh_config}}:

{{Cmd|man ssh_config}}

=== Autenticación sin contraseña ===

Útil para la administración de servidores [[git]].

==== Cliente ====

En el cliente, lance la siguiente orden:

{{Cmd|ssh-keygen -t rsa|output=<pre>
Generating public/private rsa key pair.
Enter file in which to save the key (/home/larry/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/larry/.ssh/id_rsa.
Your public key has been saved in /home/larry/.ssh/id_rsa.pub.
The key fingerprint is:
de:ad:be:ef:15:g0:0d:13:37:15:ad:cc:dd:ee:ff:61 larry@client
The key's randomart image is:
+--[ RSA 2048]----+
|                 |
|     .           |
| . .. n   .      |
|   . &#40;: . .      |
|  o   . . : .    |
| . ..: >.> .     |
|  * ?. .         |
| o.. .. ..       |
| :. .  ! .       |
+-----------------+
</pre>}}

==== Servidor ====

Asegúrese de que existe una cuenta para el usuario en el servidor, y luego colocar los clientes  {{Path|id_rsa.pub}} en el archivo del servidor {{Path|~/.ssh/authorized_keys}} dentro del directorio de inicio del usuario.

{{Cmd|ssh-copy-id <server>|collapse-output=true|output=<pre>/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/larry/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
larry@<server>'s password: 

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh '<server>'"
and check to make sure that only the key(s) you wanted were added.
</pre>}}

Afterwards a passwordless login should be possible doing

{{cmd|ssh <server>|output=<pre>larry@<server></pre>}}

Then on the server, the file {{path|/etc/ssh/sshd_config}} should be set to <code>PasswordAuthentication no</code>.

==== Prueba de máquina simple ====

El procedimiento anterior se puede probar a cabo localmente:

{{Cmd|ssh-keygen -t rsa|output=<pre>
Generating public/private rsa key pair.
Enter file in which to save the key (/home/larry/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
...
</pre>}}

{{Cmd|mv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys}}

{{Cmd|ssh localhost}}

=== Prevención contra intrusos ===

SSH es un servicio que recibe ataques con bastante regularidad. Herramientas como [[sshguard]] y [[fail2ban]] monitorizan los registros y prohíben el acceso de usuarios que han intentado conectarse sin éxito en varias ocasiones. Utilícelas de la forma apropiada para asegurar un sistema que reciba ataques con frecuencia.

== Utilización ==

=== Servicios ===

==== OpenRC ====

Añada el demonio OpenSSH al nivel de ejecución por defecto:

{{RootCmd|rc-update add sshd default}}

Arranque el demonio sshd con:

{{RootCmd|rc-service sshd start}}

El servidor OpenSSH se puede controlar como cualquier otro servicio gestionado por [[OpenRC]]:

{{RootCmd
|rc-service sshd start
|rc-service sshd stop
|rc-service sshd restart
}}

{{Note|Las conexiones SSH activas al servidor no se ven afectadas cuando se lanza {{c|rc-service sshd restart}}.}}

==== Systemd ====

Para que el demonio OpenSSH arranque cunado lo haga el sistema:

{{RootCmd|systemctl enable sshd.service|output=<pre>
Created symlink from /etc/systemd/system/multi-user.target.wants/sshd.service to /usr/lib64/systemd/system/sshd.service.
</pre>}}

Para arrancar ahora el demonio OpenSSH:

{{RootCmd|systemctl start sshd.service}}

Para comprobar si se ha iniciado el servicio:

{{RootCmd|systemctl status sshd.service}}

=== Escape sequences ===

During an active SSH session, pressing the tilde ({{Key|~}}) key starts an escape sequence. Enter the following for a list of options:

{{GenericCmd|prompt=ssh>|color=white|~?}}

== Resolución de problemas ==

Hay 3 niveles diferentes modos de depuración que pueden ayudar a solucionar problemas. Con la opcion <code>-v</code> de SSH se imprime mensajes de depuración acerca de su progreso. Esto es útil en la depuración de una conexión , la autenticación y los problemas de configuración. Varias opciones <code>-v</code> aumentan el nivel de detalle. El máximo nivel de detalle es de profundidad tres.

{{Cmd
|ssh example.org -v
|ssh example.org -vv
|ssh example.org -vvv
}}

=== Muerte de conexiones de larga vida ===

Muchos dispositivos de acceso a Internet realizan la Traducción de Direcciones de Red ([[NAT]]), un proceso que permite a los dispositivos en una red privada como la que normalmente se encuentran en una casa o lugar de negocio para acceder a redes extranjeras, como lo es Internet, a pesar de tener una única dirección IP en esa red. Por desgracia, no todos los dispositivos NAT son creados iguales, y algunos de ellos se cierran incorrectamente a las conexiones de larga duración, como ocasionalmente usa TCP, como las utilizadas por SSH. Esto es generalmente observable como una incapacidad repentina para interactuar con el servidor remoto incluso si el programa cliente {{c|ssh}} no ha terminado.

Con el fin de resolver el problema, los clientes y los servidores OpenSSH pueden configurarse para enviar un 'keep alive', o mensaje invisible destinado a mantener y confirmar el estado en tiempo real del enlace:

* Para habilitar el mantenimiento de las conexiones vivas ''para todos los clientes que se conecten a su servidor local'', defina <code>ClientAliveInterval 30</code> (o algún otro valor en segundos) dentro del archivo {{Path|/etc/ssh/ssh_config}}.
* Para habilitar el mantenimiento de las conexiones vivas ''para todos los servidores a los que se ha conectado desde su cliente local'', defina <code>ServerAliveInterval 30</code> (o algún otro valor en segundos) dentro del archivo {{Path|/etc/ssh/ssh_config}}

=== El reenvío X11 no se realiza ni tunela ===

'''Problema''': Después de hacer los cambios necesarios a los ficheros de configuración para permitir el reenvío X11, se encuentra con que las aplicaciones se están ejecutando en el servidor y no se reenvían al cliente.

'''Solución''': Lo que seguramente está ocurriendo es que durante la conexión SSH en el servidor remoto la variable <var>DISPLAY</var> no está definida o se redefine ''después'' de que lo haga la sesión SSH.

Se pueden hacer pruebas en este escenario tal y como se muestra a continuación conectándose remotamente:

{{Cmd|echo $DISPLAY|output=<pre>
localhost:10.0
</pre>}}

La salida debería ser algo similar a <code>localhost:10.0</code> o <code>localhost2.local:10.0</code> cuando define <code>X11UseLocalhost no</code>. Si no se muetra el usual <code>:0.0</code>, compruébe para asegurarse de que la variable <var>DISPLAY</var> no está limpiando o reinicializando en {{Path|~/.bash_profile}}. Si es así, elimine o comente su definición para la inicialización de la variable <var>DISPLAY</var> para evitar que se ejecute el código en {{Path|~/.bash_profile}} durante una conexión SSH:

{{Cmd|ssh -t larry@localhost2 bash --noprofile}}

Asegúrese de sustituir <code>larry</code> por el nombre de usuario apropiado en la orden de arriba.

Un truco para completar esta tarea que funciona es definir un alias dentro del fichero {{Path|~/.bashrc}}.

== Vea también ==

* [[Security_Handbook/Securing_services#ssh|Asegurar el servicio SSH]] en el manual de seguridad de Gentoo
* [[Keychain/es|Guía Keychain de Gentoo Linux]]
* [[autossh]] - Detecta la finalización de conexiones SSH y las reconexiones automáticas.
* [[SCP]] - Un programa para copiar de forma segura (Secure Copy Program) incluido en el paquete SSH.
* [[SFTP]] - Un cliente para la transferencia segura de ficheros incluido en el paquete SSH.
* [[SSHFS]] - Un cliente SSH basado en FUSE para montar sistemas de ficheros.

== Recursos externos ==

* [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html Asegurar OpenSSH] - Documentación de los desarrolladores de Gentoo.


[[Category:SSH]]
[[Category:Server]]
[[Category:Daemons]]
[[Category:Authentication]]
