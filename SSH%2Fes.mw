<languages />

{{Metadata|abstract=SSH (Secure Shell) es un programa de terminal cifrado que reemplaza la herramienta clásica telnet en los sistemas operativos tipo Unix.}}

{{InfoBox stack
|{{InfoBox homepage|http://www.openssh.org|header=true}}
|{{InfoBox wikipedia|Secure Shell}}
|{{InfoBox ohloh|openssh}}
}}
'''SSH''' ('''S'''ecure '''SH'''ell) es un programa de terminal cifrado que reemplaza la herramienta clásica telnet en los sistemas operativos tipo Unix.

Además del acceso a la terminal remota proporcionada por el binario principal '''ssh''', la suite de programas SSH ha crecido hasta incluir otras herramientas como '''scp''' ('''s'''ecure '''c'''o'''p'''y) y '''sftp''' ('''s'''ecure '''f'''ile '''t'''ransfer '''p'''rotocol).

Originalmente, SSH no era libre. Sin embargo, hoy la implementación estándar más popular y de-facto de SSH es OpenSSH de [http://www.openbsd.org/ OpenBSD] ,que viene pre-instalado en Gentoo.

== Instalación ==

La mayoría de las implementaciones ya tendran instalado OpenSSH (a través del {{Package|net-misc/openssh}}). Este paquete utiliza las siguientes  USE flags:

{{USEflag|package=net-misc/openssh
|bindist
|hpn
|pam
|tcpd
|kerberos
|ldap
|libedit
|selinux
|skey
|static
|X
|X509
}}

Después de cambiar los parámetros USE, no se olvide de recompilar OpenSSH:

{{emerge|net-misc/openssh}}

== Ejecutar OpenSSH ==

=== Servidor ===

Añadir openssh al nivel de ejecución por defecto si no se ha hecho aun.

{{RootCmd|rc-update add sshd default}}

Iniciar el daemon sshd con:

{{RootCmd|/etc/init.d/sshd start}}

El servidor OpenSSH se puede controlar como cualquier otro servicio gestionado de [[OpenRC]]:

{{RootCmd|/etc/init.d/sshd start
|/etc/init.d/sshd stop
|/etc/init.d/sshd restart}}

{{Note/es|Las Conexiones SSH activas al servidor no se verán afectadas al ejecutar <code>/etc/init.d/sshd restart</code>.}}

== Configuración ==

=== Crear claves ===

Con el fin de proporcionar un shell seguro, las Llaves criptográficas se usan para administrar las funcionalidades de cifrado, descifrado y de hashing ofrecidos por SSH. 

En el primer inicio del servicio SSH, se generarán Llaves del sistema. Las Llaves pueden ser (re) generadas mediante el comando <code>ssh-keygen</code>.

{{Note/es|Sustituya <code>FraseSecreta</code> en el ejemplo con su propia frase secreta.}}

Para generar la clave utilizada para la versión 1 del protocolo SSH (que por lo general no está habilitado más, ya que ha dejado de utilizarse en favor de la versión 2 del protocolo):

{{RootCmd|/usr/bin/ssh-keygen -t rsa1 -b 1024 -f /etc/ssh/ssh_host_key -N "FraseSecreta"}}

Para generar las claves de la versión del protocolo SSH 2 (algoritmos DSA y RSA):

{{RootCmd|/usr/bin/ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key -N "FraseSecreta"
|/usr/bin/ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N "FraseSecreta"}}

=== Configuración del servidor ===

El servidor SSH suele estar configurado en el {{Path|/etc/ssh/sshd_config}} aunque también es posible realizar una configuración adicional en archivo {{Path|/etc/conf.d/sshd}} de OpenRC, incluyendo el cambio de la ubicación del archivo de configuración.
Para obtener información detallada sobre cómo configurar el servidor puede ver el ''sshd_config'' [[man page]].

También debe estudiar esta [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html guía] para una configuración centrada en seguridad.

=== Configuración del cliente ===

Los programas '''ssh''' cliente y afines ('''scp''', '''sftp''', etc.) se puede configurar en los siguientes archivos:
* {{Path|~/.ssh/config}}
* {{Path|/etc/ssh/ssh_config}}

Para más información lea el manual <code>ssh_config</code>:

{{Cmd|man ssh_config}}

=== autenticación sin contraseña ===

Útil para la administración de servidores [[git]].

==== Cliente ====

En el cliente, ejecute el siguiente comando:

{{Cmd|ssh-keygen -t rsa|output=<pre>
Generating public/private rsa key pair.
Enter file in which to save the key (/home/larry/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/larry/.ssh/id_rsa.
Your public key has been saved in /home/larry/.ssh/id_rsa.pub.
The key fingerprint is:
de:ad:be:ef:15:g0:0d:13:37:15:ad:cc:dd:ee:ff:61 larry@client
The key's randomart image is:
+--[ RSA 2048]----+
|                 |
|     .           |
| . .. n   .      |
|   . &#40;: . .      |
|  o   . . : .    |
| . ..: >.> .     |
|  * ?. .         |
| o.. .. ..       |
| :. .  ! .       |
+-----------------+
</pre>}}

=== Servidor ===

Asegúrese de que existe una cuenta para el usuario en el servidor, y luego colocar los clientes  {{Path|id_rsa.pub}} en el archivo {{Path|~/.ssh/authorized_keys}}.

==== Prueba de máquina simple ====

El procedimiento anterior se puede probar a cabo localmente:

{{Cmd|ssh-keygen -t rsa|output=<pre>
Generating public/private rsa key pair.
Enter file in which to save the key (/home/larry/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
...
</pre>}}

{{Cmd|mv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys}}

{{Cmd|ssh localhost}}

== Solución de problemas ==

Hay 3 niveles diferentes modos de depuración que pueden ayudar a solucionar problemas. Con la opcion ''-v ssh'' se imprime mensajes de depuración acerca de su progreso. Esto es útil en la depuración de una conexión , la autenticación y los problemas de configuración. Varias opciones -v Aumentan el nivel de detalle. El máximo es 3.

{{Cmd|ssh example.org -v
|ssh example.org -vv
|ssh example.org -vvv}}

=== Muerte de conexiones De Larga vida ===

Muchos dispositivos de acceso a Internet realizan la traducción de direcciones de red ([[NAT]]), un proceso que permite a los dispositivos en una red privada como la que normalmente se encuentran en una casa o lugar de negocio para acceder a redes extranjeras, como lo es Internet, a pesar de tener una única dirección IP en esa red. Por desgracia, no todos los dispositivos NAT son creados iguales, y algunos de ellos se cierran incorrectamente a las conexiones de larga duración, como ocasionalmente usa TCP, como las utilizadas por SSH. Esto es generalmente observable como una incapacidad repentina para interactuar con el servidor remoto, aunque programa cliente 'ssh'''''  no ha salido.

Con el fin de resolver el problema, los clientes y los servidores OpenSSH pueden configurarse para enviar un 'keep alive', o mensaje invisible destinado a mantener y confirmar el estado en tiempo real del enlace. 
* Para permitir el keepalive ''' a todos los clientes que se conecten a tu servidor local''', Establecer ''ServerAliveInterval 30'' (o algún otro valor, en segundos) dentro del archivo {{Path|/etc/ssh/ssh_config}}.

=== ¡El reenvío X11 no se realiza ni tunela! ===

<b>Problem</b>: After you have made the necessary changes to the configuration files for permitting X11 Forwarding, you find X applications are executing on the server and are not being forwarded to the client.

<b>Solution</b>: What is likely occurring during SSH login into the remote server or host, the <code>$DISPLAY</code> variable is either being unset or is being set after the SSH session sets it.

Haga pruebas en este escenario tal y como se muestra a continuación conectándose remotamente:

{{Cmd|echo $DISPLAY|output=<pre>
localhost:10.0
</pre>}}

You should get something similar to "localhost:10.0" or "localhost2.local:10.0" using server side <code>X11UseLocalhost no</code> setting.  If you're getting the usual ":0.0", check to make sure you are not unsetting or initializing the <code>$DISPLAY</code> variable within {{Path|$HOME/.bash_profile}}. If so, remove or comment your custom initialization of <code>$DISPLAY</code> or prevent {{Path|bash_profile}} from executing during SSH login:

{{Cmd|ssh -t me@localhost2 bash --noprofile}}

Un truco que se puede hacer consiste en crear un alias en {{Path|bashrc}}.

== Prevención contra intrusos ==
La herramienta ssh es un servicio que recibe ataques con bastante regularidad. [[sshguard]] y [[fail2ban]] monitorizan los registros y prohíben el acceso de usuarios remotos que han intentado conectarse sin éxito.

== Vea también ==
* [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html Securing OpenSSH] - Documentación del desarrollador de Gentoo.
* [http://www.gentoo.org/doc/es/articles/openssh-key-management-p1.xml Gestión de claves para OpenSSH, Parte 1]- Documentación de Gentoo, eche un vistazo a las tres partes.
* [[Keychain/es|Guía Keychain de Gentoo Linux]]
* [[autossh]] - Detecta la finalización de conexiones SSH y las reconexiones automáticas.


[[Category:SSH]]
[[Category:Server]]
[[Category:Daemons]]
