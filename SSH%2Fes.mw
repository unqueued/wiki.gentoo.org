<languages />

{{Metadata|abstract=SSH (Secure Shell) es un programa de terminal cifrado que reemplaza la herramienta clásica telnet en los sistemas operativos tipo Unix.}}

{{InfoBox stack
|{{InfoBox homepage|http://www.openssh.org|header=true}}
|{{InfoBox wikipedia|Secure Shell}}
|{{InfoBox ohloh|openssh}}
}}
'''SSH''' ('''S'''ecure '''SH'''ell) es un programa de terminal cifrado que reemplaza la herramienta clásica telnet en los sistemas operativos tipo Unix.

Además del acceso a la terminal remota proporcionada por el binario principal {{c|ssh}}, la suite de programas SSH ha crecido hasta incluir otras herramientas como {{c|scp}} ('''S'''ecure '''C'''opy '''P'''rogram) y {{c|sftp}} ('''S'''ecure '''F'''ile '''T'''ransfer '''P'''rotocol).

Originalmente, SSH no era libre. Sin embargo, hoy la implementación estándar más popular y de-facto de SSH es OpenSSH de [http://www.openbsd.org/ OpenBSD] ,que viene pre-instalado en Gentoo.

== Instalación ==

=== Comprobar la instalación ===

La mayoría de los despliegues de Gentoo Linux incluyen OpenSSH en el sistema. Esto se puede comprobar lanzando la orden {{c|ssh}}. Si está instalado, se debería mostrar información sobre su utilización:

{{Cmd|ssh|output=<pre>
usage: ssh [-1246AaCfgKkMNnqsTtVvXxYy] [-b bind_address] [-c cipher_spec]
           [-D [bind_address:]port] [-E log_file] [-e escape_char]
           [-F configfile] [-I pkcs11] [-i identity_file]
           [-L [bind_address:]port:host:hostport] [-l login_name] [-m mac_spec]
           [-O ctl_cmd] [-o option] [-p port]
           [-Q cipher | cipher-auth | mac | kex | key]
           [-R [bind_address:]port:host:hostport] [-S ctl_path] [-W host:port]
           [-w local_tun[:remote_tun]] [user@]hostname [command]
</pre>}}

Si no se muestra información sobre su utilización, probablemente {{c|ssh}} está corrupto o no instalado. También es posible que el usuario reconstruya OpenSSH para incluir una nueva configuración USE. Sea cual sea el caso, continúe para conocer los ajustes USE.

=== Ajustes USE ===

{{USEflag|package=net-misc/openssh}}

=== Emerge ===

Después de cambiar los ajustes USE necesarios, no olvide instalar (o reconstruir) OpenSSH:

{{emerge|net-misc/openssh|params+=--changed-use}}

== Configuración ==

=== Crear claves ===

Con el fin de proporcionar un intérprete de comandos seguro, se utilizan las claves criptográficas para administrar las funcionalidades de cifrado, descifrado, y de hashing ofrecidos por SSH.

En el primer inicio del servicio SSH, se generarán claves del sistema. Las claves pueden ser (re) generadas mediante la orden {{c|ssh-keygen}}.

Para generar la clave utilizada para la versión 1 del protocolo SSH (que por lo general no está habilitado más, éste se ha dejado de utilizar en favor de la versión 2 del protocolo) utilice:

{{RootCmd|/usr/bin/ssh-keygen -t rsa1 -b 1024 -f /etc/ssh/ssh_host_key -N ""}}

Para generar las claves de la versión del protocolo SSH 2 (algoritmos DSA y RSA):

{{RootCmd|/usr/bin/ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key -N ""
|/usr/bin/ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N ""}}

=== Configuración del servidor ===

El servidor SSH suele estar configurado en el {{Path|/etc/ssh/sshd_config}} aunque también es posible realizar una configuración adicional en archivo {{Path|/etc/conf.d/sshd}} de OpenRC, incluyendo el cambio de la ubicación del archivo de configuración.
Para obtener información detallada sobre cómo configurar el servidor puede ver el ''sshd_config'' [[man page]].

Los usuarios también deberían estudiar la [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html guía OpenSSH de Sven] para una configuración centrada en seguridad.

=== Configuración del cliente ===

Los programas cliente {{c|ssh}} cliente y afines ({{c|scp}}, {{c|sftp}}) se puede configurar utilizando los siguientes archivos:

* {{Path|~/.ssh/config}}
* {{Path|/etc/ssh/ssh_config}}

Para más información lea el manual {{Path|ssh_config}}:

{{Cmd|man ssh_config}}

=== Autenticación sin contraseña ===

Útil para la administración de servidores [[git]].

==== Cliente ====

En el cliente, lance la siguiente orden:

{{Cmd|ssh-keygen -t rsa|output=<pre>
Generating public/private rsa key pair.
Enter file in which to save the key (/home/larry/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/larry/.ssh/id_rsa.
Your public key has been saved in /home/larry/.ssh/id_rsa.pub.
The key fingerprint is:
de:ad:be:ef:15:g0:0d:13:37:15:ad:cc:dd:ee:ff:61 larry@client
The key's randomart image is:
+--[ RSA 2048]----+
|                 |
|     .           |
| . .. n   .      |
|   . &#40;: . .      |
|  o   . . : .    |
| . ..: >.> .     |
|  * ?. .         |
| o.. .. ..       |
| :. .  ! .       |
+-----------------+
</pre>}}

==== Servidor ====

Asegúrese de que existe una cuenta para el usuario en el servidor, y luego colocar los clientes  {{Path|id_rsa.pub}} en el archivo del servidor {{Path|~/.ssh/authorized_keys}} dentro del directorio de inicio del usuario.

==== Prueba de máquina simple ====

El procedimiento anterior se puede probar a cabo localmente:

{{Cmd|ssh-keygen -t rsa|output=<pre>
Generating public/private rsa key pair.
Enter file in which to save the key (/home/larry/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
...
</pre>}}

{{Cmd|mv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys}}

{{Cmd|ssh localhost}}

=== Prevención contra intrusos ===

SSH is a commonly attacked service. Tools such as [[sshguard]] and [[fail2ban]] monitor logs and black list remote users who have repeatedly attempted, yet failed to login. Utilize them as needed to secure a frequently attacked system.

== Usage ==

=== Services ===

==== OpenRC ====

Add the OpenSSH daemon to the default runlevel:

{{RootCmd|rc-update add sshd default}}

Start the sshd daemon with:

{{RootCmd|rc-service sshd start}}

The OpenSSH server can be controlled like any other [[OpenRC]]-managed service:

{{RootCmd
|rc-service sshd start
|rc-service sshd stop
|rc-service sshd restart
}}

{{Note|Active SSH connections to the server remain unaffected when issuing {{c|rc-service sshd restart}}.}}

==== Systemd ====

To have the OpenSSH daemon start when the system starts:

{{RootCmd|systemctl enable sshd.service|output=<pre>
Created symlink from /etc/systemd/system/multi-user.target.wants/sshd.service to /usr/lib64/systemd/system/sshd.service.
</pre>}}

To start the OpenSSH daemon now:

{{RootCmd|systemctl start sshd.service}}

To check if the service has started:

{{RootCmd|systemctl status sshd.service}}

== Troubleshooting ==

Hay 3 niveles diferentes modos de depuración que pueden ayudar a solucionar problemas. Con la opcion <code>-v</code> de SSH se imprime mensajes de depuración acerca de su progreso. Esto es útil en la depuración de una conexión , la autenticación y los problemas de configuración. Varias opciones <code>-v</code> aumentan el nivel de detalle. El máximo nivel de detalle es de profundidad tres.

{{Cmd
|ssh example.org -v
|ssh example.org -vv
|ssh example.org -vvv
}}

=== Muerte de conexiones de larga vida ===

Many internet access devices perform Network Address Translation ([[NAT]]), a process that enables devices on a private network such as that typically found in a home or business place to access foreign networks, such as the internet, despite only having a single IP address on that network. Unfortunately, not all NAT devices are created equal, and some of them incorrectly close long-lived, occasional-use TCP connections such as those used by SSH.  This is generally observable as a sudden inability to interact with the remote server, even though the {{c|ssh}} client program has not exited.

In order to resolve the issue, OpenSSH clients and servers can be configured to send a 'keep alive', or invisible message aimed at maintaining and confirming the live status of the link:

* To enable keep alive ''for all clients connecting to your local server'', set <code>ClientAliveInterval 30</code> (or some other value, in seconds) within the {{Path|/etc/ssh/sshd_config}} file.
* To enable keep alive ''for all servers connected to by your local client'', set <code>ServerAliveInterval 30</code> (or some other value, in seconds) within the {{Path|/etc/ssh/ssh_config}} file.

=== El reenvío X11 no se realiza ni tunela ===

'''Problema''': Después de hacer los cambios necesarios a los ficheros de configuración para permitir el reenvío X11, se encuentra con que las aplicaciones se están ejecutando en el servidor y no se reenvían al cliente.

'''Solution''': What is likely occurring during SSH login into the remote server or host, the <var>DISPLAY</var> variable is either being unset or is being set ''after'' the SSH session sets it.

Se pueden hacer pruebas en este escenario tal y como se muestra a continuación conectándose remotamente:

{{Cmd|echo $DISPLAY|output=<pre>
localhost:10.0
</pre>}}

The output should be something similar to <code>localhost:10.0</code> or <code>localhost2.local:10.0</code> using server side <code>X11UseLocalhost no</code> setting. If the usual <code>:0.0</code> is not displayed, check to make sure the <var>DISPLAY</var> variable within {{Path|~/.bash_profile}} is not being unset or re-initializing. If it is, remove or comment out any custom initialization of the <var>DISPLAY</var>variable to prevent the code in {{Path|~/.bash_profile}} from executing during a SSH login:

{{Cmd|ssh -t larry@localhost2 bash --noprofile}}

Be sure to substitute <code>larry</code> in the command above with the proper username.

Un truco para completar esta tarea que funciona es definir un alias dentro del fichero {{Path|~/.bashrc}}.

== Vea también ==

* [[Keychain|Gentoo Linux Keychain Guide]]
* [[autossh]] - Detects when SSH connections drop and auto-reconnects.
* [[SCP]] - A Secure Copy Program that comes with the SSH suite.
* [[SFTP]] - Secure File Transfer Protocol client that comes with the SSH suite.
* [[SSHFS]] - A FUSE based SSH powered mount client.

== Recursos externos ==

* [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html Asegurar OpenSSH] - Documentación de los desarrolladores de Gentoo.
* [http://www.gentoo.org/doc/en/articles/openssh-key-management-p1.xml OpenSSH Key Management Part1] - Documentación de Gentoo, eche un vistazo a las tres partes.


[[Category:SSH]]
[[Category:Server]]
[[Category:Daemons]]
