<languages/>

== 관리 인터페이스 ==

이 문서는 이 장에서 언급한 프로그램에 의존하지 않습니다. 설치하고 사용할 수 있지만, 멀쩡한 시스템이라면 이들 없이도 돌아가야 합니다. 하지만 예외가 있다면, {{Package|www-apps/postfixadmin}} 꾸러미입니다. postfixadmin은 초기 테이블을 만들 때 사용하므로 예외로 두었습니다. 이유는 간단한데, postfixadmin은 데이터베이스를 관리할 때 사용할 수 있으며 테이블 배치에 전적으로 만족하지 않으면 잘못될 수 있습니다. 따라서 postfixadmin이 테이블을 만들도록 하고 그대로 쓰도록 하는게 낫습니다.

== Apache, PHP, PostgreSQL ==

Apache, PHP and PostgreSQL are extensive packages. Read the [[Apache]] article about how to setup Apache. [[PHP]] also has a wiki page dedicated to its installation. It should be made certain that all features expected from PHP and Apache work before continuing, as they will be important for the usage of webmail and statistics presentation.

One of the core components of the setup is [[PostgreSQL]]. Make sure to read through and follow the wiki article to set up the PostgreSQL infrastructure before continuing. Alternatively there is also [[MySQL]] or [[LDAP]].

Connecting PostgreSQL and Apache (and others) together can happen in several ways, via the network or via a UNIX socket for example. While UNIX sockets are the fastest and slightly more secure, a TCP/IP connection might be desired when connecting across multiple (virtual) servers.

When using UNIX sockets, it is important however, that common filesystem permissions are used and thus apache and postfix may need to be in the <tt>postgres</tt> group.

{{RootCmd|gpasswd -a apache postgres}}

== Postfixadmin ==

As mentioned in the introduction, postfixadmin will be used to create the tables. This to make sure that if postfixadmin would ever be used to administer the mail accounts etc, it will understand the table format.

If not done so already, {{Package|www-apps/postfixadmin}} should be emerged:

{{Emerge|postfixadmin}}

Since postfixadmin is a web application, <tt>webapp-config</tt> will be used to install postfixadmin to {{Path|localhost/postfixadmin}}. If an external domain is preferred and required, Apache will have to be setup adequately, preferably only over https.

{{RootCmd|webapp-config -I -h localhost -d postfixadmin postfixadmin 2.3.4}}

Postfixadmin also needs a database to store its data in and a user to access this database. The user <tt>postfixadmin</tt> will be created for postfixadmin to access the database, later another user will be created to read from this database. This way, administration and plain reading will be logically separated.

{{RootCmd|createuser -U postgres -D -P -R -S postfixadmin|output=<pre>
Enter password for new role: $password
Enter it again: $password
</pre>}}

A database for this user will also be needed. It will be owned by <tt>postfixadmin</tt>:

{{RootCmd|createdb -U postgres postfix -O postfixadmin}}

PHP will be accessing the database through apache and thus requires access to the database:

{{RootCmd|gpasswd -a apache postgres}}

Next the postfixadmin configuration file needs to be edited to point to this database amongst other things.

{{Note|Postfixadmin wants a hashed password in its config file, this will be generated by visiting http://localhost/postfixadmin/setup.php. However to actually get the password, the config file needs to be setup properly beforehand. As such, filling in the password in {{Path|config.inc.php}} can only be done after having edited it properly.}}

{{FileBox|filename=/var/www/localhost/htdocs/postfixadmin/config.inc.php|title=Diff of postfixadmin configuration|lang=diff|1=
-$CONF['configured'] = false;
+$CONF['configured'] = true;
 
-$CONF['postfix_admin_url'] = '';
+$CONF['postfix_admin_url'] = 'http://localhost/postfixadmin';
-$CONF['database_type'] = 'mysql';
+$CONF['database_type'] = 'pgsql';
 $CONF['database_host'] = 'localhost';
-$CONF['database_user'] = 'postfix';
-$CONF['database_password'] = 'postfixadmin';
+$CONF['database_user'] = 'postfixadmin';
+$CONF['database_password'] = '$password';
 $CONF['database_name'] = 'postfix';
 $CONF['database_prefix'] = '';
 
-$CONF['admin_email'] = 'postmaster@change-this-to-your.domain.tld';
+$CONF['admin_email'] = 'postmaster@example.com';
 
 
-    'abuse' => 'abuse@change-this-to-your.domain.tld',
-    'hostmaster' => 'hostmaster@change-this-to-your.domain.tld',
-    'postmaster' => 'postmaster@change-this-to-your.domain.tld',
-    'webmaster' => 'webmaster@change-this-to-your.domain.tld'
+    'abuse' => 'abuse@example.com',
+    'hostmaster' => 'hostmaster@example.com',
+    'postmaster' => 'postmaster@example.com',
+    'webmaster' => 'webmaster@example.com'
 
-$CONF['domain_path'] = 'NO';
+$CONF['domain_path'] = 'YES';
 
-$CONF['domain_in_mailbox'] = 'YES';
+$CONF['domain_in_mailbox'] = 'NO';
 
-$CONF['transport'] = 'NO';
+$CONF['transport'] = 'YES';
 
-$CONF['vacation_domain'] = 'autoreply.change-this-to-your.domain.tld';
+$CONF['vacation_domain'] = 'autoreply.example.com';
 
-$CONF['user_footer_link'] = "http://change-this-to-your.domain.tld/main";
+$CONF['user_footer_link'] = "http://example.com/";
 
-$CONF['footer_text'] = 'Return to change-this-to-your.domain.tld';
-$CONF['footer_link'] = 'http://change-this-to-your.domain.tld';
+$CONF['footer_text'] = 'Return to http://example.com/';
+$CONF['footer_link'] = 'http://example.com/';
 
-// $CONF['mailbox_postcreation_script']='sudo -u courier /usr/local/bin/postfixadmin-mailbox-postcreation.sh';
+$CONF['mailbox_postcreation_script']='sudo -u vmail /usr/local/bin/postfixadmin-mailbox-postcreation.sh';
 
-// $CONF['mailbox_postdeletion_script']='sudo -u courier /usr/local/bin/postfixadmin-mailbox-postdeletion.sh';
+$CONF['mailbox_postdeletion_script']='sudo -u vmail /usr/local/bin/postfixadmin-mailbox-postdeletion.sh';
 
-// $CONF['domain_postdeletion_script']='sudo -u courier /usr/local/bin/postfixadmin-domain-postdeletion.sh';
+$CONF['domain_postdeletion_script']='sudo -u vmail /usr/local/bin/postfixadmin-domain-postdeletion.sh';
}}

{{Note|The last three entries are completely optional, but make adding and deleting of mailboxes and domains possible. When not using postfixadmin these can be omitted. Otherwise the noted scripts can be copied from {{Path|/usr/share/doc/postfixadmin-2.3.7/ADDITIONS}}. For the scripts to work [[sudo]] needs to be installed and configured. Remember to make any used scripts executable (chmod +x), and to change the <code>basedir</code> and <code>trashbase</code> variables at the top of the scripts to the [[Complete Virtual Mail Server/Linux vmail user|storage space]].
{{RootCmd|visudo|output=<pre>
apache ALL=(vmail) NOPASSWD: /usr/local/bin/postfixadmin-domain-postdeletion.sh
apache ALL=(vmail) NOPASSWD: /usr/local/bin/postfixadmin-mailbox-postcreation.sh
apache ALL=(vmail) NOPASSWD: /usr/local/bin/postfixadmin-mailbox-postdeletion.sh
</pre>}}
This will allow apache (via postfixadmin) to run the above mentioned scripts as the <tt>vmail</tt> user.
}}

Having postfixadmin generate the required tables, go to http://localhost/postfixadmin/setup.php and follow the instructions. Also any configuration errors or missing packages will be noted here. At this point a password hash will also be generated and can be edited into the config file. After that, super-admin users can be added to the database from this page. To log into the administrative page, go to http://localhost/postfixadmin/.

{{Warning|The mailsystem should end up being fully postfixadmin compatible. It should not matter if users/domains are added manually or via the postfixadmin GUI. Note however, that there are some user -> domain dependencies.}}

{{Note|If postfixadmin is not desired on the system, it can be removed after the tables have been created. Another option is to have postfixadmin create the tables on some other test system, and export/import the tables.}}

[[Category:Mail Servers]]
