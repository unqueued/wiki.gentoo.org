{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://libtorrent.rakshasa.no|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox ohloh|rtorrent}}
}}
'''rTorrent''' is a highly configurable [[torrent]] client based on libtorrent and ncurses. 

== Installation ==
Install {{Package|net-p2p/rtorrent}}:
{{USEflag|package=net-p2p/rtorrent
|color
|daemon
|debug++no
|ipv6
|test++no
|xmlrpc
}}
{{Emerge|rtorrent}}

== Configuration ==
The RTorrent configuration is stored in the user's {{Path|~/.rtorrent.rc}}. A lot can be configured, for this reason, the configuration is divided in sections. 

=== Basics ===
These options are pretty straightforward:
{{File|/home/user/.rtorrent.rc||<pre>
# Global upload and download rate in KiB. "0" for unlimited.
#download_rate = 0
upload_rate = 75

# Default directory to save the downloaded torrents.
directory = /home/user/media/

# Default session directory. When restarting rtorrent, the torrents from this directory will be restarted.
session = /home/wim/media/session
</pre>}}

=== Watching a Directory ===
You can configure rTorrent to watch one or more directories for new torrent files and queue them automatically. You can also set a download directory for each watch directory (rather than downloading to the default download directory).

{{File|/home/user/.rtorrent.rc||<pre>
# A watch directory downloading to the default location
schedule = watch_directory_3,5,300,load_start=/home/user/media/watch/*.torrent

# Watch directories with customized download directories
schedule = watch_directory_1,5,60,"load_start=/home/user/media/watch_series/*.torrent,d.set_directory=/home/user/media/series"
schedule = watch_directory_2,5,5,"load_start=/home/wim/media/watch_music/*.torrent,d.set_directory=/home/user/media/music"
schedule = watch_directory_3,5,300,"load_start=/home/user/media/watch_movies/*.torrent,d.set_directory=/home/user/media/movies"

# Restart torrents that have been copied back and stop those that have been deleted
schedule = tied_directory,1,30,start_tied=
schedule = untied_directory,1,30,close_untied=

# Close torrents when diskspace is low.
schedule = low_diskspace,5,60,close_low_diskspace=100M
</pre>}}

{{Note|Several commands can be scheduled to run depending on two values, ''start'' and ''interval''. The command in question is called every interval, beginning at start. The values can be seconds or a time format.}}
{{File|/home/user/.rtorrent.rc||<pre>
# Execute command after 5 seconds and again every 5 minutes
schedule = some_command,5,300,foo

# Execute command immediately and at 03:00
schedule = some_command,0,03:00,foo
default</pre>}}

=== Ratio Handling ===
You can control seed time by making it dependent on each torrent's ratio. Each torrent is seeded for a minimum of ''min.set'' percent. if a total of ''upload.set'' has been uploaded. If ''upload.set'' is not reached, it will seed a maximum of ''max.set'' percent. Read the [http://libtorrent.rakshasa.no/wiki/RTorrentRatioHandling wiki] on the libtorrent site for different ratio groups.
{{File|/home/user/.rtorrent.rc||<pre>
# First, enable the default ratio group, which controls all loaded torrents. Set the limits for the group next.
ratio.enable=
ratio.min.set=200
ratio.max.set=300
ratio.upload.set=20M
</pre>}}

== Adding a self-signed certificate ==
Some trackers use SSL certificates, however most are not signed for various reasons. rTorrent uses the database located in {{Path|/etc/ssl/certs/ca-certificates.crt}}. You also may want to use HTTPS because some ISPs (like Comcast) perform bandwidth shaping, effectively slowing down BitTorrent (regardless of whether your use is legitimate).

Add a certificate (if the domain was mytracker.net and the port was 443):
{{RootCmd|openssl s_client -connect mytracker.net:443 </dev/null 2>/dev/null {{!}} sed -n '/BEGIN CERTIFICATE/,/END CERTIFICATE/p' >> /etc/ssl/certs/ca-certificates.crt}}

You need to re-hash after adding a certificate:
{{RootCmd|c_rehash}}

Try with curl:
{{Cmd|curl https://mytracker.net:443}}
You should not get a warning regarding the self-signed certificate.

Restart rTorrent. If using the daemon:
{{RootCmd|/etc/init.d/rtorrentd restart}}

== Customizing the daemonizer ==
The Gentoo ebuild installs a good basic init script. However, it can be enhanced in various ways if needed. The following examples are completely optional.

=== Arrow keys not working ===
Probably you can enable them in your terminal application. For instance ''XTerm'' has the "set-appcursor" option, and "Enable Application Cursor Keys" in the toolbar.

Or on the server side, you can change the TERM variable. Your terminal application might work well with TERM="linux" instead of "xterm".

Changing the TERM variable:
{{File|/etc/init.d/rtorrentd||<pre>
#env TERM="xterm" \
env TERM="linux" \
</pre>}}

=== Using dtach as daemonizer ===
A smaller alternative to the app-misc/screen package is {{Package|app-misc/dtach}}. This is all what's needed for using ''dtach'' instead of ''screen''.

Save this patch on your computer:
{{File|rtorrentd-init.patch||<pre>
--- /usr/portage/net-p2p/rtorrent/files/rtorrentd.init	2011-11-07 16:46:30.000000000 +0100
+++ /etc/init.d/rtorrentd	2013-12-21 10:55:01.251541772 +0100
@@ -15,13 +15,12 @@
 	env TERM="xterm" \
 		start-stop-daemon \
 			--start \
-			--make-pidfile \
 			--pidfile /var/run/rtorrentd.pid \
-			--background \
 			--user $USER \
 			--env HOME="${PWHOME:-/home/$USER}" \
-			--name rtorrent \
-			--exec /usr/bin/screen -- -D -m -S rtorrentd /usr/bin/rtorrent
+			--exec /usr/bin/dtach -- -n /tmp/rtorrentd.dtach /usr/bin/rtorrent
+
+	pgrep --newest --uid $USER --exact rtorrent >/var/run/rtorrentd.pid
 	eend $?
 }
</pre>}}

{{RootCmd
|USE<nowiki>=</nowiki>"-daemon" emerge -av net-p2p/rtorrent app-misc/dtach
|cp /usr/portage/net-p2p/rtorrent/files/rtorrentd.conf /etc/conf.d/rtorrentd
|cp /usr/portage/net-p2p/rtorrent/files/rtorrentd.init /etc/init.d/rtorrentd
|chmod +x /etc/init.d/rtorrentd
|patch -p0 < /PATH/TO/rtorrentd-init.patch
}}

Change the the USER variable to your user account, or (better) a separate account.
{{File|/etc/conf.d/rtorrentd||<pre>
#USER="$USER"
USER="p2p"
</pre>}}

If needed, you can give access to group members of the configured user. Add this at the end of the start() section of the init script:
{{File|/etc/init.d/rtorrentd||<pre>
chmod g+rw /tmp/rtorrentd.dtach
eend $?
</pre>}}

Starting ''rTorrent'' in the background, and run at system boot:
{{RootCmd
|/etc/init.d/rtorrentd start
|rc-update add rtorrentd default  # optionally
}}

Login as user, or execute as a group member to attach the ''rtorrentd'' session:
{{Cmd
|su - p2p  # optionally
|dtach -a /tmp/rtorrentd.dtach
}}

To detach the ''rtorrentd'' session again: press ''Ctrl-\'' on the keyboard.

=== Localization ===
Extra environment variable, if you set LANG in your users {{Path|~/.bashrc}} file. This doesn't affect translations, but only character set and sorting.
{{File|/etc/init.d/rtorrentd||<pre>
--env HOME="${PWHOME:-/home/$USER}" \
--env LANG="nl_NL@euro" \
</pre>}}

=== Renice the process ===
If checksum calculations eat a lot of CPU, try adding this at the end of the start() section of the init script:
{{File|/etc/init.d/rtorrentd||<pre>
renice -n 5 `cat /var/run/rtorrentd.pid` >/dev/null
eend $?
</pre>}}

=== Controlling rTorrent exit ===
By default, the application is closed by the TERM signal. A more graceful exit would be to issue the INT signal, which is equivalent to the ''Ctrl-q'' key press in the rTorrent interface. This way, seeding quota get a last chance to be reported to the tracker. A second ''Ctrl-q'' key press is TERM exit, without waiting for the trackers to respond. After that, a KILL signal is justified.

Changing exit signals, and 1 or more seconds waiting time:
{{File|/etc/init.d/rtorrentd||<pre>
#start-stop-daemon --stop --signal 15 \
start-stop-daemon --stop --retry -INT/10/-INT/5/-KILL/5 \
</pre>}}

[[Category:Software]]
