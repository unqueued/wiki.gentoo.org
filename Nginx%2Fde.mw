<languages />

{{Metadata|abstract=Nginx ist ein robuster, kleiner und hochperformanter Webserver und ein Reverse Proxy Server. Er ist eine gute Alternative zu populären Webservern wie Apache und lighttpd.}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|https://nginx.org/en/|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox odoc|https://nginx.org/en/docs/}}
}}

'''nginx''' ist ein robuster, kleiner und hochperformanter [[:Category:Web Servers|Web server]] und ein Reverse Proxy Server.  Er ist eine gute Alternative zu populären Webservern wie [[Apache]] und [[lighttpd]].

== Installation ==

Vor der unmittelbaren Installation des {{Package|www-servers/nginx}} Paketes, ist es sinnvoll die USE flags für Nginx zu beachten.

=== Erweiterte USE-Flags ===

Nginx nutzt Module um seine Funktionalitäten zu erweitern. Um die Verwaltung dieses modularen Aufbaus zu vereinfachen, nutzt der nginx-ebuild erweiterte USE (<var>[[USE_EXPAND]]</var>) -Flags um anzuzeigen welche Module installiert werden sollen.

* HTTP-bezogene Module können durch die <var>NGINX_MODULES_HTTP</var> -Variable aktiviert werden
* Mail-bezogene Module können durch die <var>NGINX_MODULES_MAIL</var> -Variable aktiviert werden
* Drittparteien-Module können durch die <var>NGINX_ADD_MODULES</var> -Variable aktiviert werden

Diese Variablen müssen in {{Path|/etc/portage.make.conf}} gesetzt werden. Ihre Beschreibung kann unter  {{Path|[https://gitweb.gentoo.org/repo/gentoo.git/plain/profiles/desc/nginx_modules_http.desc /usr/portage/profiles/desc/nginx_modules_http.desc]}} und {{Path|[https://gitweb.gentoo.org/repo/gentoo.git/plain/profiles/desc/nginx_modules_mail.desc /usr/portage/profiles/desc/nginx_modules_mail.desc]}} gefunden werden.

Um zum Beispiel das <code>fastcgi</code> Modul zu aktivieren :

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
NGINX_MODULES_HTTP="fastcgi"
}}

Obiges übrschreibt den Standard-Wert von <var>NGINX_MODULES_HTTP</var> und setzt ihn auf <code>fastcgi</code>. Um das <code>fastcgi</code>-Modul zu aktivieren ohne den Standard-Wert von <var>NGINX_MODULES_HTTP</var> zu überschreiben, kann die folgende USE-Flag-Notation in {{Path|[[:/etc/portage/package.use]]}} spezifiziert werden :

{{FileBox|filename=/etc/portage/package.use|lang=bash|1=
www-servers/nginx NGINX_MODULES_HTTP: fastcgi
}}

=== USE-Flags ===

{{USEflag|package=www-servers/nginx}}

=== Emerge ===

Mit gesetzten USE-Flags, {{Package|www-servers/nginx}} installieren :

{{Emerge|www-servers/nginx}}

=== Installationsverifizierung ===

Die Standardkonfiguration von nginx definiert einen virtuellen Server mit dem Wurzelverzeichnis gesetzt auf {{Path|/var/www/localhost/htdocs}}. Aufgrund des {{Bug|449136}} erstellt das nginx-ebuild nur das Verzeichnis {{Path|/var/www/localhost}} und ohne eine Indexdatei. Um eine funktionierende Standardkonfiguration zu erhalten, das Verzeichnis {{Path|/var/www/localhost/htdocs}} und eine simple Indexdatei erstellen:

{{RootCmd
|mkdir /var/www/localhost/htdocs
|echo 'Hello, World!' > /var/www/localhost/htdocs/index.html
}}

Das nginx-Paket installiert einen Init-Dienst welcher Administratoren erlaubt, ihn zu stoppen, zu starten oder neuzustarten. Das nächste Kommando ausführen um den nginx-Dienst zu starten:

{{RootCmd|/etc/init.d/nginx start}}

Um sicherzustellen, dass nginx korrekt läuft, mit einem Webbrowser die Adresse [[http://localhost http://localhost]] aufrufen oder ein Kommandozeilentool wie {{c|curl}} benutzen:

{{Cmd|curl http://localhost}}

== Konfiguration ==

Die Nginx-Konfiguration wird mittels der {{Path|/etc/nginx/nginx.conf}}-Datei gesteuert.

=== Einzelseiten-Zugriff ===

Das folgende Beispiel zeigt einen Einzelseiten-Zugang, ohne dynamische Möglichkeiten (wie z.B. [[PHP]]).

{{FileBox|filename=/etc/nginx/nginx.conf|title=Gentoo's Standard-Konfiguration|1=
user nginx nginx;
worker_processes 1;
 
error_log /var/log/nginx/error_log info;
 
events {
	worker_connections 1024;
	use epoll;
}
 
http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;
 
	log_format main
		'$remote_addr - $remote_user [$time_local] '
		'"$request" $status $bytes_sent '
		'"$http_referer" "$http_user_agent" '
		'"$gzip_ratio"';
 
	client_header_timeout 10m;
	client_body_timeout 10m;
	send_timeout 10m;
 
	connection_pool_size 256;
	client_header_buffer_size 1k;
	large_client_header_buffers 4 2k;
	request_pool_size 4k;
 
	gzip off;
 
	output_buffers 1 32k;
	postpone_output 1460;
 
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
 
	keepalive_timeout 75 20;
 
	ignore_invalid_headers on;
 
	index index.html;
 
	server {
		listen 127.0.0.1;
		server_name localhost;
 
		access_log /var/log/nginx/localhost.access_log main;
		error_log /var/log/nginx/localhost.error_log info;
 
		root /var/www/localhost/htdocs;
	}
}
}}

=== Multiseiten-Zugriff ===

Es ist möglich die <code>include</code> -Direktive auszuhebeln um die Konfiguration in mehrere Teile aufzuspalten :

{{FileBox|filename=/etc/nginx/nginx.conf|title=Multiseiten-Konfiguration|1=
user nginx nginx;
worker_processes 1;
 
error_log /var/log/nginx/error_log info;
 
events {
	worker_connections 1024;
	use epoll;
}
 
http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;
 
	log_format main
		'$remote_addr - $remote_user [$time_local] '
		'"$request" $status $bytes_sent '
		'"$http_referer" "$http_user_agent" '
		'"$gzip_ratio"';
 
	client_header_timeout 10m;
	client_body_timeout 10m;
	send_timeout 10m;
 
	connection_pool_size 256;
	client_header_buffer_size 1k;
	large_client_header_buffers 4 2k;
	request_pool_size 4k;
 
	gzip off;
 
	output_buffers 1 32k;
	postpone_output 1460;
 
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
 
	keepalive_timeout 75 20;
 
	ignore_invalid_headers on;
 
	index index.html;
 
	include /etc/nginx/conf.d/*.conf;
}
}}

{{FileBox|filename=/etc/nginx/conf.d/local.conf|title=Simpler Host|1=
server {
        listen 127.0.0.1;
        server_name localhost;
  
        access_log /var/log/nginx/localhost.access_log main;
        error_log /var/log/nginx/localhost.error_log info;
  
        root /var/www/localhost/htdocs;
}
}}

{{FileBox|filename=/etc/nginx/conf.d/local-ssl.conf|title=Simpler SSL-Host|1=
server {
    listen 443 ssl;
    server_name host.tld;
    ssl_certificate /etc/ssl/nginx/host.tld.pem;
    ssl_certificate_key /etc/ssl/nginx/host.tld.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:AES128:AES256:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK;
    ssl_dhparam /etc/ssl/nginx/host.tld.dh4096.pem;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:50m;
}
}}

=== PHP-Unterstützung ===

Die folgenden Seiten zur nginx-Konfiguration hinzufügen um PHP-Unterstützung zu aktivieren. In diesem Beispiel tauscht nginx Informationen mit dem PHP-Prozess über einen UNIX-Socket aus.

{{FileBox|filename=/etc/nginx/nginx.conf|title=PHP-Unterstützung aktivieren|1=
...
http {
...
    server { 
    ...
            location ~ \.php$ {
                       # Nach nicht existenten Skripten suchen oder einen 404-Fehler zurückgeben
                       # Ohne diese Zeile sendet nginx blind jede Anfrage, die auf .php endet, zu php-fpm
                       try_files $uri =404;
                       include /etc/nginx/fastcgi.conf;
                       fastcgi_pass unix:/run/php-fpm.socket;
           }
    }
}
}}

Um dieses Setup zu unterstützen, muss PHP mit Unterstützung für den FastCGI Prozess-Manager {{Package|dev-lang/php}} gebaut werden, was durch die <code>fpm</code> USE-Flag gesteuert wird:

{{RootCmd|echo "dev-lang/php fpm" >> /etc/portage/package.use}}

PHP mit der aktivierten <code>fpm</code> USE-Flag neu bauen:

{{Emerge|dev-lang/php}}
 
{{Note|UNIX-Socket-Kommunikation zu nutzen ist die präferierte und empfohlene Konfiguration}}

Die {{Path|/etc/php/fpm-php5.5/php-fpm.conf}}-Konfiguration überprüfen und folgende Zeile hinzufügen:

{{FileBox|filename=/etc/php/fpm-php5.5/php-fpm.conf|title=PHP mit UNIX-Socket-Unterstützung ausführen|lang=ini|1=
listen = /run/php-fpm.socket
listen.owner = nginx
}}

Die Zeitzone in der php-fpm-Datei {{Path|php.ini}} setzen. Den <code><PUT_TIMEZONE_HERE></code>-Text in der FileBox hierunter mit der passenden Zeitzoneninformation ersetzen.

{{FileBox|filename=/etc/php/fpm-php5.5/php.ini|title=Zeitzone in php.ini einstellen|lang=ini|1=
date.timezone = <PUT_TIMEZONE_HERE>
}}

Den {{c|php-fpm}}-Daemon starten:

{{RootCmd|/etc/init.d/php-fpm start}}

{{c|php-fpm}} zum Default-Runlevel hinzufügen:

{{RootCmd|rc-update add php-fpm default}}

{{c|nginx}} mit geänderter Konfiguration neu laden:

{{RootCmd|/etc/init.d/nginx reload}}

=== IP-Adressen-Zugriffsliste ===

Das nächste Beispiel zeigt wie man den Zugriff zu einer bestimmten URL (in diesem Fall {{Path|/nginx_status}}) nur folgendem erlaubt:

* bestimmten Hosts (z.B. "192.0.2.1 127.0.0.1")
* und bestimmten IP-Netzwerken (z.B. "198.51.100.0/24")

{{FileBox|filename=/etc/nginx/nginx.conf|title=Aktivieren und Konfigurieren einer IP-Zugriffsliste für die /nginx_status Seite|1=
http {
    server { 
            location /nginx_status {
                     stub_status on;
                     allow 127.0.0.1/32;
                     allow 192.0.2.1/32;
                     allow 198.51.100.0/24;
                     deny all;
             }
     }
}
}}

=== Grundlegende Authentifizierung ===

nginx erlaubt es, den Zugriff durch Validieren des Benutzernamens und Passwortes einzuschränken:

{{FileBox|filename=/etc/nginx/nginx.conf|title=Aktivieren und Konfigurieren der Benutzerauthentifizierung für das / Verzeichnis|1=
http {
    server { 
            location / {
                   auth_basic           "Authentication failed";
                   auth_basic_user_file conf/htpasswd;
             }
     }
}
}}
 
Die {{Path|htpasswd}}-Datei kann erzeugt werden mittels:

{{Cmd|openssl passwd}}

=== TLS-Unterstützung ===

Es wird wärmstens empfohlen als unsicher bekannte Verschlüsselungsverfahren zu de- und "nur" TLS zu aktivieren.

{{FileBox|filename=/etc/nginx/nginx.conf|title=Unsichere Verschlüsselungverfahren de- und TLS aktivieren|1=
server {
    listen 443;
    server_name host.tld;
    ssl on;
    ssl_certificate /etc/ssl/nginx/host.tld.pem;
    ssl_certificate_key /etc/ssl/nginx/host.tld.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:AES128:AES256:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK;
    ssl_dhparam /etc/ssl/nginx/host.tld.dh4096.pem;
}
}}

Das ebuild stellt Standard-selbstsignierte Zertifikate in {{Path|/etc/ssl/nginx}} bereit

==== Vorwärts gerichtete Geheimhaltung ====

Das Diffie-Hellman-Zertifikat kann mittels {{c|openssl}} erzeugt werden:

{{Cmd|openssl dhparam -out dh4096.pem 4096}}

=== Drittparteien-Module ===

Den Drittparteien-Modul-Quellcode herunterladen und ihn nach {{Path|/usr/src}} verschieben. Das ausgewählte Nginx-Modul kompilieren, dann die folgende Zeile zu {{Path|/etc/portage/make.conf}} hinzufügen:

{{FileBox|filename=/etc/portage/make.conf|title=Drittparteien-Modul hinzufügen|1=
NGINX_ADD_MODULES="/usr/src/nginxmodule"}}

nginx mit dem aktivierten Drittparteien-Modul neu bauen:

{{Emerge|www-servers/nginx}}

== Usage ==

=== Service control ===

==== OpenRC ====

Start nginx:

{{RootCmd|/etc/init.d/nginx start}}

Stop nginx:

{{RootCmd|/etc/init.d/nginx stop}}

Add nginx to the default runlevel:

{{RootCmd|rc-update add nginx default}}

Restart the nginx service: 

{{RootCmd|/etc/init.d/nginx restart}}

== Fehlersuche ==

In case of problems, the following commands can help troubleshoot the situation.

=== Validierung der Konfiguration ===

Verify that the running nginx configuration has no errors:

{{RootCmd|/usr/sbin/nginx -t|output=<pre>
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
</pre>}}

By running {{c|nginx}} with the <code>-t</code> option, it will validate the configuration file without actually starting the {{c|nginx}} daemon.

=== Verify processes are running ===

Check if {{c|nginx}} processes are running:

{{Cmd|ps aux {{!}} egrep 'nginx{{!}}PID'|output=<pre>
  PID TTY      STAT   TIME COMMAND
26092 ?        Ss     0:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf
26093 ?        S      0:00 nginx: worker proces
</pre>}}

=== Verify bound addresses and ports ===

Verify nginx daemon is listening on the right TCP port (such as 80 for HTTP or 443 for HTTPS):

{{RootCmd|netstat -tulpen {{!}} grep :80|output=<pre>
tcp        0      0 127.0.0.1:80            0.0.0.0:*               LISTEN      0          12336835   -26092/nginx: master
</pre>}}

== See also ==

* [[Apache]] - The most popular HTTP server used the Internet.
* [[Lighttpd]] - A fast, lightweight web server.

== External resources ==

* https://nginx.org/en/docs/beginners_guide.html - A {{c|nginx}} beginner's guide. Helpful for those who do not know much about {{c|nginx}}.
* https://nginx.com/resources/admin-guide/ - The {{c|ngnix}} administration guide. Helpful for web administrators who have been working in the field.
* http://wiki.nginx.org/Main - The nginx wiki.
* https://github.com/h5bp/server-configs-nginx - H5BP nginx config.

[[Category:Web Servers]]
