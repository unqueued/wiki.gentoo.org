<languages />


{{Metadata|abstract=이 자주 묻는 질문 문서에서는 젠투/MIPS와 일반적인 리눅스/MIPS와 관련한 자주 묻는 대부분의 질문 중 몇가지에 대해 답을 하려 합니다.}}

이 자주 묻는 질문 문서에서는 젠투/MIPS와 일반적인 리눅스/MIPS와 관련한 자주 묻는 대부분의 질문 중 몇가지에 대해 답을 하려 합니다.

=== 도입부 ===

이 자주 묻는 질문 문서에서는 젠투/MIPS와 일반적인 리눅스/MIPS와 관련 여러 사용자가 자주 묻는 질문에 대해 답을 하려 합니다. 새 사용자와 써본 사용자 전부를 대상으로 합니다. 쉽게 찾아볼 수 있도록 몇가지 분류로 나누었습니다. 

자주 묻는 질문 문서에 기여하고 싶거나, 이 안내서를 읽고 미처 답하지 못한 질문이 있다면 자유롭게 [[Project:MIPS|한 줄 질문을 남겨주세요]]. 

== 젠투/MIPS 프로젝트 관련 ==

== 젠투/MIPS가 뭐죠? ==

젠투/MIPS는 젠투 리눅스를 MIPS에 포팅하려는 작은 프로젝트입니다. 

== 왜 MIPS에 젠투 리눅스를 설치하죠? ==

예, 좋아요. 일부 MIPS 머신은 오늘날 추세에 있는 머신에 비하면 빠른 장비가 아닙니다. 그러나 이런 괴물 같은 머신이 존재하는 시대임에도 불구하고, 여전히 쓸모있는 머신이 될 수 있습니다. 코발트 큐브 2는 매우 널리 알려진 광대역 인터넷 라우터이자, 웹사이트, 전자메일, IRC, 등 여러 작업을 처리할 수 있는 머신이 될 수 있습니다. 그러니까 이런 장비에 리눅스를 설치하려는 이유는 여러가지가 있습니다. 

* 판에 박힌 참고를 벗어나 다른 다양한 컴퓨터 하드웨어를 배울 수 있습니다

* 쓰레기 덩어리를 매우 쓸모있는 시스템으로 바꿔줍니다

* 상태 심볼: x86 리눅스는 꽤 흔해서 오늘날에 즐기기에는 재미없습니다. 그러나 MIPS 리눅스는 상당히 드물어서 조금 살펴봐야 할 점이 있습니다.

=== 젠투를 NetBSD/MIPS 또는 IRIX로 포팅하면 어떤가요? ===

올, 괜찮은 생각인데요. 많은 젠투/MIPS 팀 구성원은 다른 기여자들과 마찬가지로 Linux/MIPS를 전반적으로 손보고 있는데요. 이와 같은 프로젝트는 [[Project:Prefix|젠투 프리픽스 프로젝트]]에 들어있습니다. 일부 작업은 IRIX에서 마무리가 됐구요, 나머지는 [https://bugs.gentoo.org/buglist.cgi?quicksearch=irix 버그질라]에서 찾아볼 수 있습니다. 

== MIPS 하드웨어 자주 묻는 질문 ==

=== MIPS가 뭐죠? ===

[http://www.mips.com MIPS Technologies]는 [http://en.wikipedia.org/wiki/MIPS_architecture MIPS 아키텍처]를 구현한 수많은 RISC CPU 코어를 만드는 회사예요. 이런 모든 종류의 하드웨어에서 나타나는 프로세서는 작은 임베디드 장치로부터 큰 서버에까지 다양한 곳에서 볼 수 있습니다. 

이 단어는 다음의 의미를 줄인 말이기도 합니다. '''M''' illions of '''I''' nstructions '''P''' er '''S''' econd.

=== MIPS 프로세서는 어떤 하드웨어가 사용하나요? ===

간단하게 말하자면... 많아요. MIPS 프로세서는 작은 PDA(초기 윈도우 CE를 설치한 카시오 PDA라든지), X 터미널(텍트로닉스 TekXPress XP330 시리즈)에서 실리콘 그래픽스 인디, O2, 실리콘 그래픽스 Origin 2000 같은 고성능 서버까지 다양한 머신에서 볼 수 있습니다. 

실제 목록은 [http://www.linux-mips.org/wiki/index.php/Systems Linux/MIPS 웹사이트]에서 찾아볼 수 있습니다 

... 그리고 이건 표면적인 내용일 뿐이고요. 사실 광범위하고 다양한 머신이 있어요. 현재대부분은 리눅스가 동작하지 않습니다. 젠투/MIPS를 어떤 MIPS 머신에든 원하는대로 이식하려는 시도를 반기긴 하지만, 이게 돌아가려면, 하나하나 일일히 손수 지원할 수 밖에 없습니다. 링크시스 WRT54G 같은 일부 머신은 [http://embedded.gentoo.org 임베디드 젠투 프로젝트]에 초점을 맞추고 있습니다. 

=== 제 머신을 지원하나요? ===

우선 지원 여부를 찾는 가장 쉬운 방법은 [[MIPS/Hardware_Requirements|젠투/MIPS 요구사항 페이지]]에서 찾아보는 방법입니다. 이 페이지는 이론적으로 젠투/MIPS를 실행할 수 있는 시스템을 알려줍니다. 

목록에 여러분의 머신이 없다면 [http://www.linux-mips.org/wiki/index.php/Systems Linux/MIPS 웹사이트] 에서 원하는 항목을 찾아보시면 됩니다. 하지만 설치는 그리 간단하지 않으며, 실제 커널을 올리고, 하드웨어에 해당하는 올바른 부팅 미디어를 온전히 여러분 스스로가 해결해야 합니다. 당연하겠지만, 할 수 있는한 도와드리겠습니다. 

=== 머신 X를 지원하는건 어때요 ===

젠투/MIPS 하드웨어 요구사항 페이지를 살펴보셨다면 아마 대부분의 머신을 지원하지 못한다는 내용을 보셨을겁니다. SGI 하드웨어의 경우라면, 많은 하드웨어중에 극히 일부만 알고 있어서, 해당 하드웨어에 리눅스를 충분히 완벽하게 이식할 수는 없습니다. 

If you managed to get Linux working on a box currently listed as ''unsupported'' however, please tell us. We'd be interested to know. 

== MIPS 프로그램 자주 묻는 질문 ==

=== 제가 사용해야 할 스테이지 타르볼은 무엇인가요? ===

타르볼은 시스템에서 동작중인 CPU에 따라 다릅니다. 스테이지 파일 이름은 다음과 같습니다: 

{{CodeBox|title=스테이지 타르볼 이름 짓기 형식|1=
  stage3-mipsel4_multilib-20110627.tar.bz2
\____/ \_____/ \______/ \______/
   {{!}}      {{!}}       {{!}}        {{!}}
   {{!}}      {{!}}       {{!}}        `-- 젠투 릴리즈 (만든 날짜)
   {{!}}      {{!}}       {{!}}
   {{!}}      {{!}}       `--- ABI: multilib, n32, n64 (o32에는 붙이지 않음)
   {{!}}      {{!}}
   {{!}}      `----------- ISA 레벨 엔디안
   {{!}}                     mips   ==> 빅 엔디안
   {{!}}                     mipsel ==> 리틀 엔디안
   {{!}}
   `------------------ 스테이지 타르볼 형식: 1, 2, 3.
}}

R4000 계열 CPU에서는, <code>mips3</code> 또는 <code>mipsel3</code> 스테이지 타르볼을 사용하세요. 

R5000 계열 또는 이후 CPU에서는, <code>mips4</code> 또는 <code>mipsel4</code> 스테이지 타르볼을 사용하세요. 

=== chroot 명령을 실행할 때 "Illegal Instruction" 이나 "Cannot Execute Binary File" 오류가 나오는데요. 제가 뭘 잘못했죠? ===

보통 스테이지 타르볼이 잘못될 때 나타나는 오류입니다. <code>mips3</code> CPU에서 <code>mips4</code> 사용자 환경 바이너리를 실행하려고 하면, ''illegal instruction'' 오류 메시지가 뜨고요. 마찬가지로 빅 엔디언 CPU 를 사용중인데 리틀 엔디언 코드를 실행하려고 하면 ''cannot execute binary file'' 오류 메시지가 뜹니다. 

해결 방법은 단순합니다: 파티션을 밀어버리고, 제대로 된 타르볼을 풀어보세요. 

== 실리콘 그래픽스 관련 자주 묻는 질문 ==

=== 왜 SGI 머신이 네트워크 부팅이 안되죠? ===

This could be for any number of reasons, ranging from cabling issues, through to issues on the server. The best way to troubleshoot any problem is a step-by-step approach... 

#  '''Have you got the SGI machine (and server) plugged into the right network ports?'''<br /> Make sure the network is cabled correctly. Also note that some machines have special needs. For instance the Challenge S cannot obtain network connectivity under Linux via its UTP port, you need to use the AUI port via a transceiver.
#  '''Are there any firewalls in use?'''<br />Make sure your firewall is not blocking DHCP/BOOTP requests (ports 67 and 68 on UDP) or TFTP (port 69 on UDP). <code>iptables -I INPUT 1 -p udp --dport 67:69 -j ACCEPT</code> should get things rolling.
#  '''Have you disabled packet MTU discovery and set the port range?'''<br />SGI boxes require {{Path|/proc/sys/net/ipv4/ip_no_pmtu_disc}} = 1 and {{Path|/proc/sys/net/ipv4/ip_local_port_range}} = "2048 32767". See [http://www.gentoo.org//doc/en/handbook/handbook-mips.xml?part=1&chap=2#doc_chap4 the Gentoo/MIPS handbook]. {{Note|Only required for IP22/IP28 systems.  Other SGI systems can netboot without these two tweaks.}}
#  '''Is the server giving out the correct details via BOOTP?'''<br />Double check your {{Path|/etc/dhcp/dhcpd.conf}} . ISC's dhcpd won't dish out addressing information via BOOTP unless the machine has been statically defined with a fixed address.
#  '''Which TFTP server are you using?'''<br /><code>tftp-hpa</code> is known to work. <code>atftp</code> is a lot more advanced, this can cause problems. If in doubt, try installing <code>tftp-hpa</code> and see if the problem clears up.
#  '''Are the daemons running?''' <br /><code>dhcpd</code> should show up when typing <code>ps ax</code> . As for TFTP, it'll largely depend on whether its a standalone server, or if its running from <code>(x)inetd</code> . <code>tftp-hpa</code> runs as a process called <code>in.tftpd</code> . Look for that in the <code>ps ax</code> output and start any services not currently running.
#  '''Does the kernel exist in {{Path|/tftpboot}} ?'''<br />Make sure you place the kernel image to be booted in this directory and that it is world-readable. ( <code>chmod 644 /tftpboot/foo</code> ) Also, in your {{Path|/etc/dhcp/dhcpd.conf}} , note that the path to the kernel will be relative to the {{Path|/tftpboot}} directory if you're using <code>tftp-hpa</code> .
#  '''Have you unset the <code>netaddr</code> and <code>dlserver</code> PROM variables?'''<br />Try running <code>unsetenv netaddr</code> and <code>unsetenv dlserver</code> .

=== 머신에서 커널을 다운로드하는데, "행"이 걸려있네요(시리얼 콘솔 안쓰고 모니터랑 키보드를 쓰고 있어요) ===

Unfortunately, not all graphics frame buffers are supported under Linux yet. This doesn't mean you can't use the machine... it just means you'll need a null-modem serial cable to interact with it. It is quite possible that the machine is in fact running, however, the system is outputting to the serial console rather than the screen.  Try using a default serial connection of '''''9600 8N1''''', with a null modem adapter.

== 코발트 관련 자주 묻는 질문 ==

=== 왜 내 코발트 머신이 부팅하지 않죠? ===

여러가지 이유가 될 수 있는데요. 그 중에 가장 쉬운 해결책을 내보자면 점검 항목을 따라 실행해보고 모든 동작이 올바르게 진행되는지 확인해보세요. 

#  '''Have you got the Cobalt machine (and server) plugged into the right network ports?'''<br />Make sure the network is cabled correctly. Please note, the Cobalt firmware will only boot via the Primary network port.
#  '''Are there any firewalls in use?'''<br />Make sure your firewall is not blocking DHCP/BOOTP requests (ports 67 and 68 on UDP) or RPC/Portmap (port 111 on UDP and TCP). The following firewall rules should get things rolling: {{RootCmd|iptables -I INPUT 1 -p udp --dport 67:68 -j ACCEPT|iptables -I INPUT 1 -p udp --dport 111 -j ACCEPT|iptables -I INPUT 1 -p tcp --dport 111 -j ACCEPT}}
#  '''Is the server giving out the correct details via BOOTP?'''<br />Double check your {{Path|/etc/dhcp/dhcpd.conf}} . ISCs dhcpd won't dish out addressing information via BOOTP unless the machine has been statically defined with a fixed address.
#  '''Are you exporting {{Path|/nfsroot}} in your {{Path|/etc/exports}} ?'''<br />Make sure you are exporting that to the Cobalt machine. It only needs read-only access. Also remember to run <code>exportfs -av</code> after you edit the file.
#  '''Are the daemons running?'''<br /><code>dhcpd</code> should show up when typing <code>ps ax</code> . Likewise with <code>portmap</code> and the other RPC daemons. The following commands should look after this for you: <code>/etc/init.d/dhcp start</code>  <code>/etc/init.d/nfs start</code> 
#  '''Does the kernel exist in {{Path|/nfsroot}} ?'''<br />Make sure you place the kernel image to be booted in this directory and that it is world-readable. ( <code>chmod 644 /nfsroot/foo</code> )

=== Why don't you support the Qube 2700? ===

The Qube 2700 was the first of the Cobalt servers. While they are very nice machines, unfortunately, they lack a serial port. In other words, any interaction with the machine has to be done through a network. At present, our netboot images do not support this. 

[[Category:Core system]] {{Migrated|originalauthors=Stuart Longland, Matt Turner}}
