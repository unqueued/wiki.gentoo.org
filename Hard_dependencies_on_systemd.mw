While some people might intuitively think that software packages should not generally depend on a specific init system, systemd itself is a large package that not only implements an init system, but also provides a number of other executables ({{C|systemd-udevd}}, {{C|systemd-logind}}, {{C|systemd-resolved}}, {{C|systemd-networkd}}, {{C|systemd-tmpfiles}}, {{C|systemd-localed}}, {{C|systemd-machined}}, {{C|systemd-nspawn}}, etc.), libraries ({{C|libsystemd}}, {{C|libudev}}), a [[PAM|PAM module]] ({{C|pam_systemd.so}}) and a [[Systemd-boot|UEFI boot manager]] ({{C|systemd-boot}}), among other components. So any other package that needs any of these components, even if it is just one, would pull {{Package|sys-apps/systemd}} as a dependency.

This article contains [[Article description::a (possibly partial) list of packages in Gentoo's repository that unconditionally require [[systemd]]]], i.e. that unconditionally list sys-apps/systemd in one or more of the corresponding ebuild's <var>xDEPEND</var> variables, thereby making systemd a 'hard dependency'.

== Packages ==

{{Note|Packages designed to interact with systemd as their main purpose, like GNOME Logs ({{Package|gnome-extra/gnome-logs}}, a viewer for systemd's journal), systemd-kcm ({{Package|kde-misc/systemd-kcm}}, a systemd control module for KDE), or python-systemd ({{Package|dev-python/python-systemd}}, a Python module for native access to the systemd facilities) are not considered.}}

* {{Package|app-admin/abrt}} — This package includes three daemons, {{C|abrt_dump_journal_core}}, {{C|abrt_dump_journal_oops}} and {{C|abrt_dump_journal_xorg}}, that extract core dumps, oopses and [[Xorg]] crashes, respectively, logged in systemd's journal. These tools are useless on Gentoo without systemd; however, the package's build system builds them unconditionally, and because they access the journal using the [https://www.freedesktop.org/software/systemd/man/sd-journal.html sd-journal API] of {{C|libsystemd}}, this results in a build failure if that library is not present. Assuming the rest of the package is still worth it without these daemons, to avoid the dependency the build system would have to be patched to conditionally build them based on a {{Path|configure}} script option, and the ebuild would have to be modified to enable or disable the option based on the state of the <code>systemd</code> USE flag. The ebuild installs [[OpenRC]] service scripts for other daemons though, in addition to upstream's service unit files. Also, several other programs use {{C|libreport}}, so they gain an indirect dependency on {{C|libsystemd}} through that library (see below). In particular, those that produce log messages instruct {{C|libreport}} to log to the journal (<code>LOGMODE_JOURNAL</code>), expecting the administrator to configure {{C|systemd-journald}} to [https://www.freedesktop.org/software/systemd/man/journald.conf.html#Forwarding%20to%20traditional%20syslog%20daemons forward messages to syslog], instead of logging to syslog directly (<code>LOGMODE_SYSLOG</code>). A decision that would [https://github.com/abrt/abrt/commit/a7db6e2b457f9141741f055503e56c07fce0717c have to be reverted] (or {{C|libreport}} would have to be patched to make <code>LOGMODE_JOURNAL</code> a synonym of <code>LOGMODE_SYSLOG</code> if journal support is disabled at compile time).

* {{Package|dev-libs/libreport}} — This package provides a library, {{C|libreport}}, with logging functionality among other things, including logging to systemd's journal. It does so by using the sd-journal API of {{C|libsystemd}}. To avoid the dependency, the library and the build system would have to be patched to make the feature, which is useless on Gentoo without systemd, a compile-time option, and the ebuild would have to be modified to enable or disable the option based on the state of the <code>systemd</code> USE flag.

* {{Package|games-util/gamemode}} — This package provides a daemon, {{C|gamemoded}}, that implements a [[D-Bus]] interface, ''com.feralinteractive.GameMode'', and a library, {{C|libgamemode}}, that programs can use to communicate with the daemon over the per-user-login-session message bus, to perform remote procedure calls (RPC). Both the library and the daemon use [https://www.freedesktop.org/software/systemd/man/sd-bus.html the sd-bus API] of {{C|libsystemd}} to implement bus client functionality. {{C|gamemoded}} also uses [https://www.freedesktop.org/software/systemd/man/sd-daemon.html the sd-daemon API] of {{C|libsystemd}} to [https://www.freedesktop.org/software/systemd/man/sd_notify.html pass service state information to systemd].

* {{Package|gnome-extra/gnome-user-share}} — This package provides a daemon, {{C|gnome-user-share-webdav}}, that expects to be launched and supervised by a {{C|systemd}} process running as a user instance<ref>GNOME [https://bugzilla.gnome.org/show_bug.cgi?id=766331 bug 76631], "data: Add a way for gnome-user-share to be started via user systemd", and [https://gitlab.gnome.org/GNOME/gnome-user-share/commit/d6b6858f39afbf2e9dbd1cb04986d2260f418f11 accompanying commit] to the Git repository.</ref><ref>Bastien Nocera, [https://mail.gnome.org/archives/desktop-devel-list/2016-September/msg00012.html e-mail] to the GNOME Desktop Development List, September 5th, 2016.</ref> (i.e. {{C|systemd --user}}). It does so by installing a service unit file, {{Path|gnome-user-share-webdav.service}}, in {{Path|/usr/lib/systemd/user}}. It has no other runtime dependency on systemd, and no compile-time dependency on it.

* {{Package|gnome-extra/office-runner}} — This package provides a GTK+ 3 program, {{C|office-runner}}, that inhibits the low-level handling of the hardware lid switch by communicating over D-Bus with a process that [https://www.freedesktop.org/wiki/Software/systemd/logind/ implements the ''org.freedesktop.login1.Manager'' interface], and invoking the <code>Inhibit()</code> method of its {{Path|/org/freedesktop/login1}} object to take an [https://www.freedesktop.org/wiki/Software/systemd/inhibit inhibitor lock]. This D-Bus interface is implemented by {{C|systemd-logind}}, but also by [[#See also|elogind]], so it is not clear if this package couldn't also work with {{Package|sys-auth/elogind}}. It does not have a compile-time dependency on systemd, it uses the GDBus API of GLib ({{Package|dev-libs/glib}}).

* {{Package|sys-apps/dbus-broker}} with the <code>launcher</code> USE flag set — This package provides a daemon, {{C|dbus-broker}}, that, in combination with a second process that meets certain specifications, called ''the controller'', implements a D-Bus message bus daemon, just like the {{C|dbus-daemon}} program from the D-Bus reference implementation ({{Package|sys-apps/dbus}}). It also provides another daemon, {{C|dbus-broker-launch}}, that can act as a controller for {{C|dbus-broker}}, and is built if the <code>launcher</code> USE flag is set. Because {{C|dbus-broker}} needs a controller to be usable, this is the ebuild's default setting (i.e. <code>IUSE=+launcher</code>). {{C|dbus-broker-launch}} and {{C|dbus-broker}} together aim to behave in a way that is fully compatible with {{C|dbus-daemon}}, except in several occasions where it deviates. While {{C|dbus-broker}} does not have any dependency on systemd, {{C|dbus-broker-launch}} has lots:
** Its code is structured as an event loop, implemented with [https://www.freedesktop.org/software/systemd/man/sd-event.html the sd-event API] of {{C|libsystemd}}. Events that the loop handles are received signals, received D-Bus messages, {{C|dbus-broker}} process terminations, and changes in directories that contain configuration files (e.g. {{Path|/usr/share/dbus-1/{system,session}.d/*.conf}}) and service files (e.g. {{Path|/usr/share/dbus-1/system-services/*.service}} and {{Path|${XDG_DATA_HOME}/dbus-1/services/*.service}}), and are monitored via inotify watches.
** It uses the sd-bus API of {{C|libsystemd}} to implement communications over the message bus, and communications with {{C|dbus-broker}}.
** It uses the sd-daemon API of {{C|libsystemd}} to [https://www.freedesktop.org/software/systemd/man/sd_listen_fds.html receive the message bus' file descriptor from systemd], and to verify that it corresponds to a listening, stream mode UNIX-domain socket.
** It also uses the sd-daemon API to notify systemd when it is ready to provide the service, and when it is reloading.
** It uses the [https://www.freedesktop.org/software/systemd/man/sd-id128.html the sd-id128 API] of {{C|libsystemd}} to retrieve the system's machine ID.
** At runtime, it tries to connect to {{C|systemd-journald}}'s socket, {{Path|/run/systemd/journal/socket}}, to log both its messages and {{C|dbus-broker}}'s to systemd's journal.
** At runtime, it doesn't execute activatable services' associated programs itself like {{C|dbus-daemon}} does. Instead, it expects a {{C|systemd}} process to be connected to the message bus, and asks it to execute the programs by creating transient service units for them, using [https://www.freedesktop.org/wiki/Software/systemd/dbus systemd's ''org.freedesktop.systemd1.Manager'' D-Bus interface]. This is one of the documented deviations<ref>dbus-broker's Wiki on GitHub, [https://github.com/bus1/dbus-broker/wiki/Deviations "Deviations" page], bullet "Direct Activation". Retrieved on July 4th, 2019.</ref>.

* {{Package|www-misc/profile-sync-daemon}} — This package provides a [[bash]] script, {{C|profile-sync-daemon}}, intended to be periodically executed with a <code>resync</code> argument, and [[systemd#Timer_services|a timer unit file]] and accompanying service unit files to implement that with systemd. The script is likely usable on Gentoo without systemd regardless, e.g. with explicit [[cron]] setup by the user, provided the <var>XDG_RUNTIME_DIR</var> environment variable is appropriately set as per the XDG Base Directory Specification<ref>XDG Base Directory Specification, [https://specifications.freedesktop.org/basedir-spec/latest/ar01s03.html section "Environment variables"]. Retrieved on July 21st, 2018.</ref>. The {{C|psd preview}} command also uses {{C|systemctl is-active}} to show the status of its supplied units [https://wiki.archlinux.org/index.php/Profile-sync-daemon#Preview_.28parse.29_mode as part of its output] ("''Systemd service is currently active''", "''Systemd resync service is currently active''"), which is meaningless without systemd. Running the unmodified script would be ugly because of the shell's "''command not found''" error messages instead of the intended output, but otherwise nonfatal. Cosmetic patches could be applied to suppress that part of the output, and to fix other error messages that suggest systemd commands to the user in order to fix the situation that caused the error.

== Packages that formerly had a hard dependency on systemd ==

* {{Package|gnome-base/gnome}} — For versions 3.28 and earlier, the GNOME desktop environment contained components that required {{C|systemd-logind}}<ref>Olav Vitters, [https://blogs.gnome.org/ovitters/2013/09/25/gnome-and-logindsystemd-thoughts GNOME and logind+systemd thoughts], September 25th, 2013. Retrieved on July 18th, 2018.</ref> (among them, notably, its display manager, [[GNOME/gdm|GDM]]). However, as of version 3.30, Gentoo's packaging of GNOME allows it to work once again with [[sysvinit]] + [[OpenRC]] as the init system<ref>Gentoo website, News section, [https://www.gentoo.org/news/2019/03/27/gnome-330-openrc.html "Gentoo GNOME 3.30 for all init systems"], March 27th, 2019.</ref>. This is achieved through elogind; non-systemd GNOME profiles (i.e. those with 'gnome', but not 'systemd', in their name) set the <code>elogind</code> [[USE flag]] so that packages pull sys-auth/elogind as a dependency instead of sys-apps/systemd. Some GNOME packages, though, still unconditonally pull sys-apps/systemd, and are explictly listed above.

* {{Package|x11-wm/mutter}} with the <code>wayland</code> USE flag set (i.e. {{C|USE{{=}}wayland emerge mutter}}) — For versions 3.28.0 and earlier, Mutter's native (KMS) backend used to require {{C|systemd-logind}}. Building the native backend is optional, and enabled if the <code>wayland</code> USE flag is set. As of version 3.28.1, the native backend can alternatively be built with elogind<ref>[https://gitlab.gnome.org/GNOME/mutter/blob/34644b2133241efe25794b57ddd18e6d9517cc0b/NEWS NEWS file] for mutter-3.28.1
 and [https://gitlab.gnome.org/GNOME/mutter/commit/06c357d7819cf2a648e57efe947f5a3cca7d74d2 the commit that introduced the feature].</ref>, and [[Portage]] will do so if the <code>elogind</code> USE flag is also set.

== See also ==

* {{See also|Elogind}}

== References ==

{{reflist}}

[[Category:Init_systems]]
