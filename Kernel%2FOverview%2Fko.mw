<languages />


{{Metadata|abstract=이 문서에서는 젠투가 포티지를 통해 제공하는 모든 커널 소스의 개요를 제공합니다.}}

이 문서에서는 젠투가 포티지를 통해 제공하는 모든 커널 소스의 개요를 제공합니다.

== 도입부 ==

젠투 리눅스의 다른 부분처럼 젠투 커널 팀의 철학은 여러분 사용자들에게 최대한 폭넓은 선택의 자유를 드리는 것입니다. <code>emerge -s sources</code>의 출력 결과를 보시면 꽤 다양한 선택이 가능한 커널 목록을 보실 수 있습니다. 이 문서에서 젠투 설계의 시각에서 각각의 패치셋의 목표를 살펴볼 수 있게 하고, 이 밖에도 제공해드릴 수 있는 다른 커널 소스에 대해서도 설명합니다. 

== 지원 커널 꾸러미 ==

=== genkernel ===

<code>genkernel</code>은 하드웨어를 자동으로 감지하고 커널을 자동으로 설정하는데 사용할 수 있는 커널 도구 모음입니다. 보통 커널을 직접 컴파일하는데 익숙하지 않은 사용자들에게 추천합니다. 

더 많은 정보를 보려면 [http://www.gentoo.org//doc/en/genkernel.xml 젠투 리눅스 커널 안내서]를 읽어보십시오. 

=== 범용: gentoo-sources ===

대부분의 사용자들에게 <code>gentoo-sources</code> 커널을 추천합니다. <code>gentoo-sources</code> 는 보안 문제, 커널 버그를 약간 패치한 리눅스 3.x 기반 커널이며, 일반적이지 않은 시스템 아키텍처의 호환성을 개선했습니다. 

<code>gentoo-sources</code> 꾸러미는 젠투 커널 팀의 대부분의 자원을 흡수했습니다. 공식 리눅스 커널의 USB와 PCI 하위시스템을 전담하며 udev의 메인테이너인 저명한 커널 해커 Greg Kroah-Hartman 의 전문성을 통해 믿을 수 있는 소질있는 개발 집단을 통해 제공합니다. 

=== 서버용: hardened-sources ===

<code>hardened-sources</code>는 공식 리눅스 커널을 기반으로 하며 젠투 서버 시스템에서 실행하는데 역점을 두었습니다. ([http://www.nsa.gov/selinux/ LSM/SELinux] 와 [http://grsecurity.net grsecurity] 의 지원같은) 다양한 젠투 강화 프로젝트에 대한 패치를 제공하며 안정성/보안개선을 포함했습니다. 더 많은 내용을 보시려면 [http://www.gentoo.org/proj/en/hardened/ http://www.gentoo.org/proj/en/hardened/]를 방문하십시오. 

{{Important/ko|이 커널은 보안 강화를 위한 강력한 패치를 제공합니다. 사용전 [http://www.gentoo.org//proj/en/hardened/ 문서]를 읽어보십시오. }}

=== ck-sources ===

<code>ck-sources</code>는 Con Kolivas의 커널 패치 모음입니다. 이 패치 모음은 본래 시스템 응답성, 상호 동작 능력을 개선하고, 다양한 작업부하(서버부터 데스크톱까지)에 대해 설정할 수 있도록 설계했습니다. 이 패치셋에는 시스템 응답성을 유지하고 상당한 규모의 부하가 걸려도 시스템이 부드럽게 동작하도록 하는 BFS 스케줄러를 포함합니다. 지원 정보는 [http://kernel.kolivas.org http://kernel.kolivas.org] 와 <code>irc.oftc.net</code> 의 <code>#ck</code>채널에서 확인해보실 수 있습니다.

=== git-sources ===

<code>git-sources</code> 꾸러미는 업스트림 개발 커널 트리의 일일 스냅샷을 추적합니다. 커널 개발과 시험에 관심이 있을 경우에 이 커널을 실행해야 합니다. 버그 보고서는 [http://bugzilla.kernel.org/ 리눅스 커널 버그 추적] 또는 LKML(리눅스 커널 메일링 리스트)로 보내야 합니다. 

=== 아키텍처 의존 커널 ===

<code>mips-sources</code> 와 <code>xbox-sources</code>는 이름에서 보시는 바와 같이 특정 아키텍처에서 잘 동작하게 패치했습니다. 또한 위 아래에서 언급한 다른 패치 셋으로부터 하드웨어 및 기능 지원에 대한 약간의 패치도 포함합니다. 

== 지원하지 않는 커널 꾸러미 ==

이제 <code>emerge -s sources</code>를 실행했을때 스크롤 해서 볼 수 있는 다른 {{Path|sys-kernel/*-sources}} 일부 패키지를 간단하게 설명해보고자 합니다. 철자순으로 살펴보도록 하겠습니다. 이 커널은 덤으로 제공할 뿐이며 젠투 커널 팀에서 지원하는 다양한 패치 셋은 없습니다. 

=== pf-sources ===

<code>pf-sources</code>에는 다양한 커널 패치 일부를 포함하고 있습니다. 여기에는 <code>ck-sources</code>의 BFS 패치셋, <code>tuxonice</code> 패치, [http://www.linuximq.net LinuxIMQ], [http://algo.ing.unimo.it/people/paolo/disk_sched/patches/ BFQ] I/O [http://kerneltrap.org/Linux/Budget_Fair_Queuing_IO_Scheduler 스케줄러] 를 포함합니다. 

=== openvz-sources ===

OpenVZ는 리눅스에서 빌드한 서버 가상화 솔루션입니다. OpenVZ는 고립되고 안전한 가상 개인 서버(VPS) 또는 단일 물리 서버에서 서버 활용도를 높이고 프로그램의 충돌 없음을 확인하도록하는 가상 환경을 만듭니다. 더 많은 정보를 보시려면 [http://www.openvz.org http://www.openvz.org]를 참조하십시오. 

=== tuxonice-sources ===

<code>tuxonice-sources</code> (예전에는 <code>suspend2-sources</code>) 는 gentoo-sources에 있는 genpatch와, ''suspend2''로 알려진 리눅스 커널용 suspend-to-disk 개선 구현체에 대한 패치로 이루어져 있습니다. 

이 커널은 어디든 랩톱을 대기상태로 놓았다가 복귀하는 작업을 자주 하는 랩톱 사용자에게 추천합니다. 

=== usermode-sources ===

<code>usermode-sources</code> 에는 사용자 모드 리눅스 커널 패치가 있습니다. 이 커널은 가상서버 지원과 시험을 의도한 리눅스 안의 리눅스 안의  ... 리눅스를 동작하도록 설계하였습니다. 리눅스의 안정성과 확장성에 대한 이 엄청난 찬사의 내용을 보시려면 [http://user-mode-linux.sourceforge.net http://user-mode-linux.sourceforge.net]을 살펴보십시오. 

UML과 젠투정보를 더 보시려면 [https://wiki.gentoo.org/wiki/User-mode_Linux/System_testing_with_UML 젠투 UML 안내서]를 살펴보십시오.

=== vanilla-sources ===

아마도 다른 리눅스 사용자들처럼 친숙해 할지도 모르는 커널 소스는 <code>vanilla-sources</code>일 것입니다. [http://www.kernel.org/ http://www.kernel.org/]에서 공식적으로 출시하는 커널 소스 입니다. 이 커널을 전적으로 우리가 패치하지 않는다는 점을 참고하십시오. 완전히  그대로 둔 리눅스 커널을 실행해보고픈 사람들을 위한 있는 그대로의 커널입니다. <code>gentoo-sources</code> 커널을 대신 사용할 것을 추천합니다. 

이 패키지에서는 2.6, 3.x 두가지 버전의 커널을 찾을 수 있습니다. 

== 이전에 제공한 커널 꾸러미 ==

=== aa-sources ===

<code>aa-sources</code>는 모든 종류의 패치로 커널을 상당 부분 수정했었습니다. 업스트림 관리자가 커널 패치 셋을 내놓는 작업을 그만둠에 따라 이 패키지는 오래되어 제거되었습니다. 

=== alpha-sources ===

<code>alpha-sources</code>는 알파 아키텍처에 대한 하드웨어 호환성을 개선하는 패치를 포함한 2.4 커널이었습니다. 이 패치는 커널 메인라인에서 개발하고 포함했습니다. 알파 사용자는 이제 더이상 추가 패치가 필요하지 않으며 최근 커널만 가지고도 동작할 수 있습니다. 

=== 아키텍처 의존 커널 ===

<code>cell-sources</code> 는 소니 플레이 스테이션 3 게임 콘솔에서 구동하려 설계한 2.6 커널이었습니다. 

=== development-sources ===

kernel.org에서의 공식 2.6 커널이었던 <code>development-sources</code>는 이제 <code>vanilla-sources</code> 꾸러미에서 찾을 수 있습니다. 

=== gentoo-dev-sources ===

버그, 보안, 안정성 수정에 대해 패치한 <code>gentoo-dev-sources</code> 2.6 커널은 이제 <code>gentoo-sources</code> 패키지에서 찾을 수 있습니다. 

=== grsec-sources ===

<code>grsec-sources</code> 커널 소스는 다른 보안 관련 패치와 PaX를 지원하는 최신 grsecurity 업데이트(2.0 이상)로 종종 패치합니다.  grsecurity 패치가 <code>hardened-sources</code>에 포함됨에 따라 이 패키지는 더이상 포티지에 없습니다. 

=== hardened-dev-sources ===

<code>hardened-dev-sources</code>는 이제 <code>hardened-sources</code> 패키지에서 찾을 수 있습니다. 

=== hppa-sources ===

<code>hppa-sources</code>는 HPPA 아키텍처의 하드웨어 호환성 개선을 적용한 패치와 2.6 커널입니다. 이 패치는 메인라인 커널에서 개발하고 포함했습니다. HPPA 사용자는 이제 더이상 추가 패치가 필요하지 않으며 최근 커널만 가지고도 동작할 수 있습니다. 

=== mm-sources ===

<code>mm-sources</code>는 <code>vanilla-sources</code>를 기반으로 하며, Andrew Morton 패치셋이 들어있습니다. 커널에 포함하던 시험용 최신 기능을 포함했습니다(커널 소스 상태를 당황스럽게 만들어 거절되기도 하였습니다). 항상  선두를 유지하고 근본적으로 다른곳보다 일주일 빨리 바꿀 수 있었습니다. 커널 해커들은 매우 실험적인 새 기능을 돌리기 위한 시험판으로 활용했습니다. 

=== rsbac-dev-sources ===

<code>rsbac-dev-sources</code>는 이제 <code>rsbac-sources</code> 패키지에서 찾을 수 있습니다. 

=== rsbac-sources ===

<code>rsbac-sources</code>는 2.6 기반 커널이었습니다. 룰 모음 기반 접근 제어([http://www.rsbac.org RSBAC])를 사용하려 패치를 포함했습니다. 메인테이너가 빠져 제거되었습니다. 추가 보안 기능이 필요하다면 <code>hardened-sources</code>를 사용하십시오. 

=== selinux-sources ===

<code>selinux-sources</code>에는 수많은 보안 개선사항을 포함한 2.4 커널이었지만 2.6 트리에서 보안 개발로 인해 도태되었습니다. SELinux의 기능성은 <code>hardened-sources</code> 꾸러미에서 찾아볼 수 있습니다. 

=== sh-sources ===

<code>sh-sources</code>는 SuperH 아키텍처의 하드웨어 호환성 개선을 적용한 패치와 2.6 커널입니다. 이 패치는 메인라인 커널에서 개발하고 포함했습니다. SuperH 사용자는 이제 더이상 추가 패치가 필요하지 않으며 최근 커널만 가지고도 동작할 수 있습니다. 

=== sparc-sources ===

<code>sparc-sources</code>는 스파크 아키텍처에 대한 하드웨어 호환성을 개선하는 패치를 포함한 2.4 커널이었습니다. 이 패치는 커널 메인라인에서 개발하고 포함했습니다. 스파크 사용자는 이제 더이상 추가 패치가 필요하지 않으며 최근 커널만 가지고도 동작할 수 있습니다. 

=== uclinux-sources ===

<code>uclinux-sources</code>는 임베디드 장치에 MMU를 포함하지 않은 CPU 대상임을 의미합니다. 더 많은 내용은 [http://www.uclinux.org http://www.uclinux.org]에서 보십시오. 하드웨어 테스트 목적으로 보안 패치가 부족하여 더이상 포티지 트리에 없습니다. 

=== win4lin-sources ===

<code>win4lin-sources</code>는 리눅스 사용자들이 마이크로소프트 윈도우 프로그램을 네이티브에서 돌아가는 정도의 속도로 사용할 수 있게 하는 유저랜드 win4lin 도구를 지원하도록 패치했습니다. 보안 문제로 제거했습니다. 

=== xen-sources ===

<code>xen-sources</code>는 단일 물리 시스템에서 여러 운영체제를 동작하도록 한 2.6 기반 커널이었습니다. [http://www.xensource.com Xen] 으로 구현한 호스트 운영체제에서 동작하는 하나 이상의 게스트 운영체제를 얹어놓은 가상 환경을 만들 수 있습니다. 

<code>xen-sources</code>는 메인라인 리눅스 커널 3.0에 맞춰 패치했습니다. 

Xen과 젠투에 대해 더 알아보려면, [http://www.gentoo.org//doc/en/xen-guide.xml 젠투 Xen 안내서]를 읽어보십시오. 

=== zen-sources ===

<code>zen-sources</code>는 데스크톱 시스템용으로 설계했습니다. 여기에 포함된 코드는 메인라인 커널에서 찾을 수 없습니다. zen 커널에는 새 기능, 추가 하드웨어 지원, 데스크톱 고급 설정기능이 추가된 패치가 있었습니다. 

== 감사문 ==

이 안내서에 제공한 노고에 대해 다음 작성자와 편집자분들께 감사의 말을 전하고자 합니다:


* Sven Vermeulen
* Brandon Low
* Daniel Drake
* Carl Anderson
* Jorge Paulo
* Benny Chuang
* Gregorio Guidi
* Shyam Mani
* Joshua Saddler

[[Category:Kernel]]
