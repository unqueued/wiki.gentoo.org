<languages />

{{Metadata|abstract=Distcc es un programa diseñado para distribuir tareas de compilación entre nodos participantes en una red. Está compuesto por un servidor: distccd y un programa cliente: distcc. Distcc puede trabajar de forma transparente con ccache, Portage, y Automake realizando una simple configuración.}}

[http://distcc.samba.org Distcc] es un programa diseñado para distribuir tareas de compilación a través de la red hacia máquinas participantes. Consiste en un servidor, <code>distccd</code> y un programa cliente, <code>distcc</code>. Distcc puede trabajar de forma transparente con [http://ccache.samba.org ccache], Portage y Automake realizando una sencilla configuración. 

Si está pensando en usar distcc para ayudarle a realizar el bootstrap en una instalación Gentoo, asegúrese de leer la sección [[#Usar_Distcc_para_realizar_el_Bootstrap|Usar Distcc para hacer el bootstrap]]. 

== Configuración ==

=== Dependencias ===

Para utilizar Distcc, todas las máquinas en su red deben tener la misma versión del GCC. Mezclar 3.3.x (variando la x) es correcto, pero mezclar 3.3.x y 3.2.x "puede" resultar en errores en tiempo de compilación o ejecución. 

=== Instalar Distcc ===

Hay un par de opciones que debería conocer antes de instalar distcc. 

Distcc incluye un monitor gráfico para monitorizar las tareas que su computador está enviando para compilación. Si usa GNOME, entonces agregue 'gnome' a sus parámetros USE. Sin embargo, si no lo usa y
quiere monitorizar, entonces agregue 'gtk' a la lista de parámetros USE. 

{{Emerge|distcc}}

{{Important/es|Recuerde que debe asegurarse de instalar distcc en todas las máquinas que vayan a participar en la compilación.}}

=== Configurar Portage para utilizar Distcc ===

Configurar Portage para usar distcc es fácil. Siga estos sencillos pasos en cada sistema que vaya a participar en la compilación distribuida: 

{{Emerge|distcc}}

Ahora, ajuste la variable <code>MAKEOPTS</code> y la variable <code>FEATURES</code> tal y como se describe abajo. Una estrategia común es definir N como el doble del número total de CPUs disponibles (locales y remotas) más uno y definir M como el número de CPUs locales. En el caso en el que no estén disponibles máquinas distcc o el ebuild requiera únicamente compilación local (por ejemplo gcc), el ajuste <code>-lM</code> evitará que se ejecuten demasiadas tareas.

{{RootCmd|nano -w /etc/portage/make.conf|output=<pre>
MAKEOPTS="-jN -lM"
FEATURES="distcc"
</pre>
}}

=== Especificar las máquinas participantes ===

Utilice la orden <code>distcc-config</code> para indicar la lista de máquinas. A continuación se  muestra un ejemplo de lista: 

{{Code|Ejemplos de definiciones de máquinas|<pre> 192.168.0.1 192.168.0.2 192.168.0.3
192.168.0.1/2 192.168.0.2 192.168.0.3/10
192.168.0.1:4000/2 192.168.0.2/1 192.168.0.3:3632/4
@192.168.0.1 @192.168.0.2:/usr/bin/distccd 192.168.0.3
</pre>
}}

Hay otras formas de configurar máquinas. Eche un vistazo a la página del manual de distcc para obtener más información.

Si desea compilar en la máquina local debería escribir 'localhost' en la lista de máquinas. Contrariamente, si no desea utilizar la máquina local
para compilar (que frecuentemente es el caso) omítala de la lista. En una máquina lenta usar localhost puede de hecho hacer las cosas más lentas.
Asegúrese de comprobar sus ajustes para mejorar el rendimiento.

Puede parecer complicado, pero en la mayoría de los casos una variante de la línea 1 ó de la 2 funcionará. 

Como la mayoría de la gente no usará las líneas 3 ó 4, haré [http://distcc.samba.org/man/distcc_1.html referencia a] los documentos de distcc (man distcc) para obtener más información, los cuales incluyen la posibilidad de usar distcc sobre una conexión SSH. 

Por ejemplo, para ajustar la primera línea en el ejemplo anterior: 

{{RootCmd|/usr/bin/distcc-config --set-hosts "192.168.0.1 192.168.0.2 192.168.0.3"}}

Modifique su {{Path|/etc/conf.d/distccd}} para ajustarlo a sus necesidades y asegúrese de usar la directiva <code>--allow</code> para permitir únicamente máquinas en las cuales confíe. Para mayor seguridad debería utilizar también la directiva <code>--listen</code> para indicarle al demonio distcc en qué dirección IP debe escuchar (en sistemas con más de una dirección IP). Se puede encontrar más información acerca de seguridad en distcc en [http://distcc.samba.org/security.html Distcc Security Design]. 

{{Important/es|Es importante utilizar --allow y --listen. Por favor, lea la página del manual de distccd o el documento sobre seguridad indicado arriba para obtener más información.}}

Ahora inicie el demonio distcc en todas las máquinas participantes: 

{{RootCmd|rc-update add distccd default |/etc/init.d/distccd start}}

=== Configurar Distcc para trabajar con Automake ===

Esto es más fácil de configurar en algunos casos que con Portage. Hay que actualizar su variable de entorno <code>PATH</code> para incluir
{{Path|/usr/lib/distcc/bin}} delante del directorio que contiene <code>gcc</code> ({{Path|/usr/bin}}). No obstante, hay un problema. Si
utiliza ccache, deberá poner distcc después de ccache: 

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

Puede colocar esto en su archivo {{Path|~/.bashrc}} o equivalente para tener configurada la variable PATH cada vez que ingrese al sistema.

Entonces, así donde normalmente escribiría <code>make</code>, escribirá <code>make -jN</code> (donde N es un entero). El valor de N varía según su
red y la cantidad de máquinas disponibles para la compilación.  Pruebe con sus propios ajustes para encontrar el número que le ofrezca el mejor rendimiento. 

=== Configurar distcc para trabajar con ssh ===

La configuración de distcc a través de ssh incluye algunos detalles que debe conocer. En primer lugar, genere un par de claves ssh sin contraseña. Observe que portage compila los programas con el usuario portage. La carpeta de inicio del usuario portage es {{Path|/var/tmp/portage}} lo que implica que las claves se deben almacenar en {{Path|/var/tmp/portage/.ssh}}.

{{RootCmd|ssh-keygen -b 2048 -t rsa -f /var/tmp/portage/.ssh/id_rsa}}

A continuación genere una sección para cada máquina en el fichero de configuración de ssh:

{{RootCmd|nano -w /var/tmp/portage/.ssh/config|output=<pre>
Host test1
  HostName 123.456.789.1
  Port 1234
  User UserName
Host test2
  HostName 123.456.789.2
  Port 1234
  User UserName
</pre> }}

<!-- Translated in previos paragraph -->

También asegúrese de que todas las máquinas están listadas en el fichero {{Path|known_hosts}} y añada su calve pública al fichero {{Path|authorized_keys}} de todas las máquinas. Para configurar las máquinas test1 y test2 lance:

{{RootCmd|/usr/bin/distcc-config --set-hosts "@test1 @test2"}}

Por favor, no incluya el símbolo @ el cual especifica las máquinas ssh para <code>distcc</code>.

== Compilación cruzada ==

La compilación cruzada consiste en construir programa para otra arquitectura. Esto puede ser tan simple como usar un Athlon (i686) para construir un programa para un K6-2 (i586) o usar un Sparc para construir un programa para un ppc. Esto se documenta en nuestra [[Distcc/Cross-Compiling/es|DistCC Guía de Compilación Cruzada]].

== Usar distcc para hacer el bootstrap ==

=== Paso 1: Configurar Portage ===

Inicie su nueva máquina con un LiveCD de Gentoo Linux y siga las [http://www.gentoo.org/doc/es/handbook/handbook-x86.xml?part=1 instrucciones de instalación] hasta la parte del arranque. (Lea las  [[FAQ/es|FAQ de Gentoo]] para obtener más información sobre el arranque). A continuación configure Portage para que utilice distcc: 

{{RootCmd|nano -w /etc/portage/make.conf|output=<pre>
FEATURES="distcc"
MAKEOPTS="-jN"
</pre>
}}

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

=== Paso 2: Obtener distcc ===

Instale distcc: 

{{RootCmd|USE{{=}}'-*' emerge --nodeps sys-devel/distcc}}

=== Paso 3: Configurar distcc ===

Lance <code>distcc-config --install</code> para configurar distcc. Sustituya <code>máquina*</code> por las direcciones IP o nombres de la máquinas que participan como nodos DistCC.

{{RootCmd|/usr/bin/distcc-config --set-hosts "localhost máquina1 máquina2 máquina3 ..."}}

¡Distcc ya está configurado para hacer bootstrap! Continúe con las instrucciones de instalación oficiales y ''no olvide'' hacer emerge de distcc después de <code>emerge system</code>. Esto
asegurará que la dependencias requeridas también se instalan. 

{{Note/es|Durante el arranque y <code>emerge system</code> puede que parezca que distcc no se está utilizando. Esto es normal ya que algunos ebuilds no funcionan bien con distcc por lo que se deshabilita intencionadamente.}}

== Solución a problemas ==

=== Algunos paquetes no utilizan distcc ===

A medida que instale algunos paquetes, observará que la construcción de algunos de ellos no se está realizando (y por tanto no se están construyendo en paralelo). Esto puede ocurrir porque el fichero Makefile del paquete no soporta operaciones en paralelo o el mantenedor del ebuild ha deshabilitado explícitamente dichas operaciones en paralelo debido un problema conocido. 

En algunas ocasiones, distcc puede causar que un paquete falle en su compilación. Si sucede esto, por favor [https://bugs.gentoo.org/ cuéntenoslo].

=== Versiones mezcladas de GCC ===

Si tiene versiones diferentes de GCC en sus máquinas, probablemente tenga problemas extraños. La solución es asegurarse de que todas las máquinas tengan la misma versión. 

Las actualizaciones de Portage más recientes utilizan <code>${CHOST}-gcc</code> en lugar de <code>gcc</code>. Esto significa que si está mezclando máquinas i686 con otros tipos de máquina (i386, i586) tendrá problemas. Una solución temporal a esto es hacer <code>export CC='gcc' CXX='c++'</code> o ponerlo en {{Path|/etc/portage/make.conf}}. 

{{Important/es|Hacer esto explícitamente redefine algún comportamiento de Portage y puede que tenga resultados un tanto extraños en el futuro. Haga esto solo si está combinando CHOSTs.}}

=== -march=native ===

A partir de la versión 4.3.0 de GCC, el compilador ofrece soporta para el parámetro <code>-march=native</code> que habilita la detección automática de la CPU y de las optimizaciones que merece la pena activar en el procesador sobre
el que corre el GCC. Esto es un problema con <code>distcc</code>, ya que permite mezclar código optimizado para diferentes procesadores (como
AMD Athlon e Intel Pentium). "No" utilice <code>-march=native</code> o <code>-mtune=native</code> en sus <code>CFLAGS</code> o <code>CXXFLAGS</code> al
compilar con <code>distcc</code>.

Para conocer los ajustes que GCC habilitaría cuando se llama con <code>-march=native</code>, lance lo siguiente:

{{Cmd|gcc -march{{=}}native -E -v - &lt;/dev/null 2&gt;&amp;1 {{!}} grep cc1|output=<pre>
/usr/libexec/gcc/x86_64-pc-linux-gnu/4.7.3/cc1 -E -quiet -v - -march=corei7-avx \
 -mcx16 -msahf -mno-movbe -mno-aes -mpclmul -mpopcnt -mno-abm -mno-lwp -mno-fma \
 -mno-fma4 -mno-xop -mno-bmi -mno-bmi2 -mno-tbm -mavx -mno-avx2 -msse4.2 -msse4.1 \
 -mno-lzcnt -mno-rdrnd -mno-f16c -mno-fsgsbase --param l1-cache-size=32 \
--param l1-cache-line-size=64 --param l2-cache-size=6144 -mtune=corei7-avx
</pre>}}

== Distcc Extras ==

=== Distcc Monitors === 

Distcc ships with two monitors. The text-based one is always built and is called <code>distccmon-text</code>. Running it for the first time can be a bit confusing, but it is really quite easy to use. If you run the program with no parameter it will run once. However, if you pass it a number it will update every N seconds, where N is the argument you passed. 

The other monitor is only turned on if you enabled <code>gtk</code> or <code>gnome</code> in your <code>USE</code> flags. This one is GTK+ based, runs in an X environment and it is quite lovely. For Gentoo the GUI monitor has been called <code>distccmon-gui</code> for less confusion. Elsewhere it may be referred to as <code>distccmon-gnome</code>. 

{{RootCmd|distccmon-text N}}

or run <code>distccmon-gui</code>:

{{RootCmd|distccmon-gui}}

To monitor Portage's distcc usage you can use:
{{RootCmd|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-text N
|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-gui}}

{{Important|If your distcc directory is elsewhere, change the DISTCC_DIR variable accordingly.}}

== Agradecimientos ==

Nos gustarían dar las gracias a los siguientes autores y editores por sus contribuciones a esta guía:

* Lisa Seelye
* Mike Frysinger
* Erwin
* Sven Vermeulen
* Lars Weiler
* Tiemo Kieft
* nightmorph
