<languages />

{{Metadata|abstract=Distcc es un programa diseñado para distribuir tareas de compilación entre nodos participantes en una red. Está compuesto por un servidor: distccd y un programa cliente: distcc. Distcc puede trabajar de forma transparente con ccache, Portage, y Automake realizando una simple configuración.}}

{{InfoBox stack
|{{InfoBox homepage|https://code.google.com/p/distcc/|header=true}}
|{{InfoBox wikipedia}}
}}

[https://code.google.com/p/distcc/ Distcc] es un programa diseñado para distribuir tareas de compilación a través de la red hacia máquinas participantes. Consiste en un servidor, <tt>distccd</tt> y un programa cliente, <tt>distcc</tt>. Distcc puede trabajar de forma transparente con [http://ccache.samba.org ccache], [[Portage]] y Automake realizando una sencilla configuración. 

Cuando planee utilizar <tt>distcc</tt> para ayudarle a realizar el bootstrap en una instalación Gentoo, asegúrese de leer [[#Utilizar_distcc_para_realizar_el_bootstrap|Utilizar distcc para realizar el bootstrap]]. 

== Instalación ==

Antes de configurar <tt>distcc</tt>, echémos un vistazo a la instalación del paquete  {{Package|sys-devel/distcc}} en todos los equipos.

=== Requisitos para todos los equipos ===

Para utilizar <tt>distcc</tt>, todas las máquinas en la red deben tener la misma versión de GCC. Mezclar 3.3.x (variando la x) es correcto, pero mezclar 3.3.x y 3.2.x "puede" resultar en errores en tiempo de compilación o ejecución. 

=== Instalar el software ===

Distcc incluye un monitor gráfico para monitorizar las tareas que un computador está enviando para compilación. Este monitor se habilita cuando el ajuste <code>USE</code> <code>gtk</code> está activado.

Después de configurar el ajuste <code>USE</code>, instale el paquete {{Package|sys-devel/distcc}}:

{{Emerge|distcc}}

{{Important/es|Recuerde instalar {{Package|sys-devel/distcc}} en todas las máquinas que vayan a participar en la construcción.}}

=== Auto iniciar el demonio distcc ===

Para que <tt>distccd</tt> arranque de forma automática se debe seguir las instrucciones siguientes dependiendo del sistema de inicio utilizado.

==== Usar OpenRC ====

Modifique {{Path|/etc/conf.d/distccd}} y asegúrarse de usar la directiva <tt>--allow</tt> para permitir únicamente máquinas cliente de confianza. Para mayor seguridad debería utilizar también la directiva <tt>--listen</tt> para indicarle al demonio <tt>distcc</tt> en qué dirección IP debe escuchar (en sistemas con más de una dirección IP). Se puede encontrar más información acerca de seguridad en <tt>distcc</tt> en las [http://distcc.googlecode.com/svn/trunk/doc/web/security.html notas sobre seguridad de distcc].

En el siguiente ejemplo se permite a los clientes distcc correr en <tt>192.168.0.4</tt> y <tt>192.168.0.5</tt> para conectarse al servidor <tt>distccd</tt> que corre en la máquina local:

{{FileBox|filename=/etc/conf.d/distccd|title=Permitir a clientes específicos conectarse a distccd|lang=bash|1=
DISTCCD_OPTS="--port 3632 --log-level notice --log-file /var/log/distccd.log -N 15 --allow 192.168.0.4 --allow 192.168.0.5"
}}

{{Important/es|Es importante utilizar <tt>--allow</tt> y <tt>--listen</tt>. Por favor, lea la página del manual de <tt>distccd</tt> o el documento sobre seguridad indicado arriba para obtener más información.}}

Ahora inicie el demonio <tt>distcc</tt> en todas las máquinas participantes: 

{{RootCmd|rc-update add distccd default |rc-service distccd start}}

==== Usar systemd ====

Editar {{Path|/etc/systemd/system/distccd.service.d/00gentoo.conf}} y añadir los clientes permitidos en formato CIDR. A continuación se muestra un ejemplo:

{{FileBox|filename=/etc/systemd/system/distccd.service.d/00gentoo.conf|title=Definir ALLOWED_SERVERS|lang=bash|1=
Environment="ALLOWED_SERVERS=192.168.1.0/24"
}}

Recargar los fichero de unidad después de realizar estos cambios:

{{RootCmd|systemctl daemon-reload}}

Habilitar el auto arranque de <tt>distcc</tt> y a continuación arrancar el servicio:

{{RootCmd|systemctl enable distccd
|systemctl start distccd}}

== Configuración ==

Echemos un vistazo a la configuración de <tt>distcc</tt>.

=== Especificar las máquinas participantes ===

Utilice la orden <kbd>distcc-config</kbd> para indicar la lista de máquinas. 

A continuación se muestra una lista ejemplo de definiciones de equipos. En la mayoría de los casos, serán suficientes variaciones de las líneas 1 y 2. Se puede encontrar más información sobre la sintaxis de las líneas 3 y 4 en la [http://distcc.googlecode.com/svn/trunk/doc/web/man/distcc_1.html página del manual de distcc].

{{CodeBox|title=Ejemplos de definiciones de máquinas|1=
192.168.0.1 192.168.0.2 192.168.0.3
192.168.0.1/2 192.168.0.2 192.168.0.3/10
192.168.0.1:4000/2 192.168.0.2/1 192.168.0.3:3632/4
@192.168.0.1 @192.168.0.2:/usr/bin/distccd 192.168.0.3
}}

Hay otras formas de configurar máquinas. Eche un vistazo a la página del manual de <tt>distcc</tt> (<kbd>man distcc</kbd>) para obtener más información.

Si se van a realizar compilaciones en la máquina local debería escribir <code>localhost</code> en la lista de máquinas. Contrariamente, si no se va a utilizar la máquina local para compilar, omítala de la lista de máquinas. En una máquina lenta usar localhost puede de hecho hacer las cosas más lentas. Asegúrese de comprobar los ajustes para mejorar el rendimiento.

Configuraremos <tt>distcc</tt> para que usar los equipos mencionados en la primera línea del ejemplo:

{{RootCmd|/usr/bin/distcc-config --set-hosts "192.168.0.1 192.168.0.2 192.168.0.3"}}

=== Usar distcc con Portage ===

Configurar [[Portage]] para usar <tt>distcc</tt> es fácil. Es cuestión de habilitar la característica <tt>distcc</tt> y definir un valor correcto para el número de trabajos simultáneos (ya que así <tt>distcc</tt> incrementará la cantidad de recursos disponibles para la construcción)

Ajuste la variable <code>MAKEOPTS</code> y la variable <code>FEATURES</code> tal y como se describe abajo.

Una estrategia común es
* Definir el valor de <code>N</code> al ''doble'' del número ''total'' (local + remotas) de núcleos de CPU + 1, y
* Definir el valor de <code>M</code> al número de núcleos de CPU ''locales''

El uso de <code>-lM</code> en la varialble <code>MAKEOPTS</code> evitará lanzar demasiadas tareas cuando alguno de los equipos del cluster de <tt>distcc</tt> no estén disponibles (incrementando la cantidad de trabajos simultáneos en el resto de los sistemas) o cuando se configure un ebuild para no permitir construcciones en remoto (como con gcc). Esto se logra rechazando el inicio de trabajos adicionales cuando la carga del sistema están en el valor de <tt>M</tt> o por encima de éste.

{{FileBox|filename=/etc/portage/make.conf|title=Ajustar MAKEOPTS y FEATURES|lang=bash|1=
# Reemplace N y M por los valores correctos calculados previamente
MAKEOPTS="-jN -lM"
FEATURES="distcc distcc-pump"
}}

Por ejemplo, cuando hay dos equipos PC anfitriones con cuatro núcleos que corren <tt>distcc</tt> y el equipo PC local tiene una CPU con doble núcleo entonces la variable <code>MAKEOPTS</code> podría ser:

{{FileBox|filename=/etc/portage/make.conf|title=Ejemplo jde MAKEOPTS para dos equipos PC con cuádruple núcleo (remotos) y un equipo PC con dos núcleos (local)|lang=bash|1=
# Dos equipos remotos con cuatro núcleos cada uno = 8 núcleos remotos
# Un equipo local con dos núcleos = 2 núcleos en local
# El número total de núcleos es 10, de modo que:N = 2*10+1 and M=2
MAKEOPTS="-j21 -l2"
}}

Cuando edite el fichero {{Path|make.conf}}, asegúrese de que no se ha definido <tt>-march=native</tt> en las variables <code>CFLAGS</code> o <code>CXXFLAGS</code>. <tt>distcc</tt> no distribuirá trabajos a otras máquinas si <code>march</code> está definido a <code>native</code>. El valor adecuado para <tt>-march=</tt> se puede obtener lanzando la siguiente orden:

{{Cmd|gcc -v -E -x c -march{{=}}native -mtune{{=}}native - < /dev/null 2>&1 {{!}} grep cc1 {{!}} perl -pe 's/ -mno-\S+//g; s/^.* - //g;'}}

Lea [http://blogs.gentoo.org/mgorny/2014/06/23/inlining-marchnative-for-distcc/ <tt>-march=native</tt> en línea para distcc] para ampliar la información.

=== Usar distcc con automake ===

Esto es más fácil de configurar en algunos casos que con Portage. Todo lo que se necesita hacer es actualizar la  variable de entorno <code>PATH</code> para incluir {{Path|/usr/lib/distcc/bin}} delante del directorio que contiene <tt>gcc</tt> ({{Path|/usr/bin/}}). No obstante, hay un problema. Si se utiliza <tt>ccache</tt>, entonces deberá poner la localización de distcc después de la de ccache: 

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

Coloque esto en el archivo {{Path|~/.bashrc}} del usuario  o fichero equivalente para tener configurada la variable <code>PATH</code> cada vez que que el usuario entre en el sistema o defínala globlamente en un fichero en {{Path|/etc/env.d/}}

En lugar de llamar únicamente a <kbd>make</kbd>, agregue <kbd>-jN</kbd> (donde <code>N</code> es un número entero). El valor de <code>N</code> depende de la red y de la tipología de los computadores que se utilizan para compilar. Una aproximación heurística a los valores correctos se ha dado anteriormente en este artículo.

== Utilizar distcc para realizar el bootstrap ==

El uso de <tt>distcc</tt> para el inicio (esto es, construir una cadena de herramientas antes de instalar el resto del sistema) requiere realizar algunas acciones adicionales.

=== Paso 1: Configurar Portage ===

Inicie la nueva máquina con un LiveCD de Gentoo Linux y siga las [[Handbook:AMD64/es|instrucciones de instalación]] mientras se siguen las instrucciones en las [[FAQ/es|FAQ de Gentoo]] para obtener más información sobre el bootstrap. A continuación configure Portage para que utilice <tt>distcc</tt>: 

{{FileBox|filename=/etc/portage/make.conf|title=Configure Portage para usar distcc|lang=bash|1=
FEATURES="distcc"
MAKEOPTS="-jN"
}}

Actualice también la variable <code>PATH</code> en la sesión de instalación:

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

=== Paso 2: Obtener distcc ===

Instale {{Package|sys-devel/distcc}}: 

{{RootCmd|USE{{=}}'-*' emerge --nodeps sys-devel/distcc}}

=== Paso 3: Configurar distcc ===

Lance <kbd>distcc-config --install</kbd> para configurar distcc. Sustituya la cadena <code>máquina#</code> del ejemplo por las direcciones IP o nombres de la máquinas que participan como nodos DistCC.

{{RootCmd|/usr/bin/distcc-config --set-hosts "localhost máquina1 máquina2 máquina3 ..."}}

¡Distcc ya está configurado para hacer bootstrap! Continúe con las instrucciones de instalación adecuadas y ''no'' olvide lanzar kbd>emerge distcc</kbd> después de lanzar <kbd>emerge @system</kbd>. Esto asegurará que las dependencias necesarias también se instalarán. 

{{Note/es|Durante el arranque y <kbd>emerge system</kbd> puede que parezca que <tt>distcc</tt> no se está utilizando. Esto es normal ya que algunos ebuilds no funcionan bien con distcc por lo que se deshabilita intencionadamente.}}

== Extras de distcc ==

The <tt>distcc</tt> application has additional features and applications to support working in a <tt>distcc</tt> environment.

=== Monitores de distcc === 

Distcc se distribuye con dos herramientas de monitorización. La basada en texto se construye siempre y se llama <tt>distccmon-text</tt>. Al lanzarlo la primera puede resultar confuso, pero es muy fácil de utilizar. Si el programa se lanza sin parámetros, correrá solo una vez. Sin embargo si se le pasa un número, actualizará la información cada <code>N</code> segundos, donde <code>N</code> es el argumento indicado.

{{Cmd|distccmon-text 10}}

La otra utilidad de monitorización solo se habilita cuando se habilita el ajuste <code>USE</code> <code>gtk</code>. Esta herramienta está basada en GTK+, corre en un entorno X y es bastante encantador. En Gentoo, se ha cambiado el nombre a <tt>distccmon-gui</tt> para evitar confusiones (originalmente se llamaba <tt>distccmon-gnome</tt>).

{{Cmd|distccmon-gui}}

Para monitorizar el uso de <tt>distcc</tt> por parte de Portage:

{{RootCmd|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-text 10 |DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-gui}}

{{Important/es|Si el directorio distcc está en otro lugar, cambie la variable <code>DISTCC_DIR</code> adecuadamente.}}

Un truco consisten en definir <code>DISTCC_DIR</code> en variables de entorno:

{{RootCmd|echo 'DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/"' >> /etc/env.d/02distcc}}

Ahora actualice el entorno:

{{RootCmd|env-update
|source /etc/profile}}

Para terminar, arranque la aplicación GUI:

{{RootCmd|distccmon-gui}}

=== Usar SSH para la comunicación de distcc ===

La configuración de distcc a través de SSH incluye algunos detalles. En primer lugar, genere un par de claves SSH sin contraseña. Observe que portage compila los programas con el usuario Portage. La carpeta de inicio del usuario Portage es {{Path|/var/tmp/portage/}} lo que implica que las claves se deben almacenar en {{Path|/var/tmp/portage/.ssh/}}.

{{RootCmd|ssh-keygen -b 2048 -t rsa -f /var/tmp/portage/.ssh/id_rsa}}

A continuación cree una sección para cada máquina en el fichero de configuración de SSH:

{{FileBox|filename=/var/tmp/portage/.ssh/config|title=Añadir las secciones para cada equipo|1=
Host test1
  HostName 123.456.789.1
  Port 1234
  User UserName
Host test2
  HostName 123.456.789.2
  Port 1234
  User UserName
}}

Envíe la clave pública a cada nodo de compilación:

{{RootCmd|ssh-copy-id -i /var/tmp/portage/.ssh/id_rsa.pub NombreDeUsuario@NodoDeCompilación}}

También asegúrese de que todas las máquinas están listadas en el fichero {{Path|known_hosts}}:

{{RootCmd|ssh-keyscan -t rsa <nodo-de-compilación-1> <nodo-de-compilación-2> [...] > /var/tmp/portage/.ssh/known_hosts}}

Corrija los permisos del fichero como se muestra a continuación:

{{RootCmd|chown -R portage:portage /var/tmp/portage/.ssh/}}

Para configurar los equipos <tt>test1</tt> y <tt>test2</tt>, lance:

{{RootCmd|/usr/bin/distcc-config --set-hosts "@test1 @test2"}}

Por favor, observe que el símbolo <tt>'@'</tt>, especifica las máquinas ssh para distcc.

== Solución a problemas ==

<!-- Se debe considerar mover esta sección a una subpágina diferente si se extiende demasiado -->

Si se produce cualquier problema mientras se utiliza <tt>distcc</tt>, entonces esta sección puede ser de ayuda.

=== ERROR: failed to open {{Path|/var/log/distccd.log}} ===

<!-- Se eliminará cuando la incidencia se resuelva y el paquete corregido sea estable -->

As of January 22nd, 2015 emerging fails to create the proper {{Path|distccd.log}} file in {{Path|/var/log/}}. This apparently only effects version 3.1-r8 of distcc. This bug is in the process of being corrected (see {{Bug|477630}}). It is possible to work around this by manually creating the log file, giving it proper ownership, and restarting the distccd daemon:

{{RootCmd
|mkdir -p /var/log/distcc
|touch /var/log/distcc/distccd.log
|chown distcc:daemon /var/log/distcc/distccd.log
}}

A continuación actualice la ruta {{Path|/var/log}} del fichero de configuración de <tt>distccd</tt> en {{Path|/etc/conf.d/distccd}} para definirla al directorio de {{Path|distcc}} creado en el paso anterior:

{{FileBox|filename=/etc/conf.d/distccd|title=Actualizar la ruta al registro|lang=bash|1=
DISTCCD_OPTS="--port 3632 --log-level notice --log-file /var/log/distcc/distccd.log -N 15 
}}

Para terminar, reinicie el servicio distccd:

{{RootCmd|/etc/init.d/distccd restart}}

=== Algunos paquetes no utilizan distcc ===

A medida que se instalan algunos paquetes, los usuarios observarán que la construcción de algunos de ellos no se está realizando (y por tanto no se están construyendo en paralelo). Esto puede ocurrir porque el fichero {{Path|Makefile}} del paquete no soporta operaciones en paralelo o el mantenedor del ebuild ha deshabilitado explícitamente dichas operaciones en paralelo debido un problema conocido. 

En algunas ocasiones, <tt>distcc</tt> puede causar que un paquete falle en su compilación. Si sucede esto, por favor [https://bugs.gentoo.org/ informe] de ello.

=== Versiones mezcladas de GCC ===

Si el entorno aloja versiones diferentes de GCC, probablemente tenga problemas extraños. La solución es asegurarse de que todas las máquinas tengan la misma versión. 

Las actualizaciones de Portage más recientes utilizan <code>${CHOST}-gcc</code> (menos gcc) en lugar de <code>gcc</code>. Esto significa que si se mezclan máquinas i686 con otros tipos de máquina (i386, i586) entonces las construcciones darán problemas. Una solución temporal a esto es lanzar <kbd>export CC='gcc' CXX='c++'</kbd> en un terminal de root o ponerlo en {{Path|/etc/portage/make.conf}}.

{{Important/es|Hacer esto explícitamente redefine algún comportamiento de Portage y puede que tenga resultados un tanto extraños en el futuro. Haga esto solo si no puede evitar el mezclar CHOSTs.}}

=== -march=native ===

A partir de la versión 4.3.0 de GCC, el compilador ofrece soporta para la opción <tt>-march=native</t> que habilita la detección automática de la CPU y de las optimizaciones que merece la pena activar en el procesador sobre el que está corriendo GCC. Esto es un problema cuando se utiliza <tt>distcc</tt>, ya que permite mezclar código optimizado para diferentes procesadores. Por ejemplo, al correr <tt>distcc</tt> con <tt>-march=native</tt> en un sistema que tiene un procesador AMD Athlon y haciendo lo mismo en ''otro'' sistema que tiene un procesador Intel Pentium processor se mezclará el código compilado en ambos procesadores.

Preste atención a la siguiente advertencia:

{{Warning/es|'''No''' utilice <tt>-march{{=}}native</tt> o <tt>-mtune{{=}}native</tt> en las varibales <code>CFLAGS</code> o <code>CXXFLAGS</code> de {{Path|make.conf}} cuando compile con <tt>distcc</tt>.}}

Para conocer los ajustes que GCC habilitaría cuando se llama con <tt>-march=native</tt>, lance lo siguiente:

{{Cmd|gcc -march{{=}}native -E -v - &lt;/dev/null 2&gt;&amp;1 {{!}} grep cc1|output=<pre>
/usr/libexec/gcc/x86_64-pc-linux-gnu/4.7.3/cc1 -E -quiet -v - -march=corei7-avx \
 -mcx16 -msahf -mno-movbe -mno-aes -mpclmul -mpopcnt -mno-abm -mno-lwp -mno-fma \
 -mno-fma4 -mno-xop -mno-bmi -mno-bmi2 -mno-tbm -mavx -mno-avx2 -msse4.2 -msse4.1 \
 -mno-lzcnt -mno-rdrnd -mno-f16c -mno-fsgsbase --param l1-cache-size=32 \
--param l1-cache-line-size=64 --param l2-cache-size=6144 -mtune=corei7-avx
</pre>}}

== Ver también ==

* La  [[Distcc/Cross-Compiling/es|guía de compilación cruzada de DistCC]] explica cómo se utiliza una arquitectura para construir programas para otra arquitectura mediante <tt>distcc</tt>. Esto puede ser tan simple como utilizar una máquina Athlon (i686) para construir un programa para una K6-2 (i586) o utilizar una máquinaSPARC para construir un programa para una basada en PowerPC.

== Recursos externos ==

* [http://blogs.gentoo.org/mgorny/2014/06/23/inlining-marchnative-for-distcc/ Uso de <tt>-march=native</tt> en línea para distcc]
* [https://code.google.com/p/distcc/ Página oficial de Distcc]


{{Migrated|originalauthors=Lisa Seelye, Mike Frysinger, Erwin, Sven Vermeulen, Lars Weiler, Tiemo Kieft and nightmorph}}
