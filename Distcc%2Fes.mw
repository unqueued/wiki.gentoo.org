<languages />

Distcc es un programa diseñado para distribuir tareas de compilación a través de la red hacia máquinas participantes. Consiste en un servidor, <code>distccd</code> y un programa cliente, <code>distcc</code>. Distcc puede trabajar de forma transparente con [http://ccache.samba.org ccache], Portage y Automake realizando una sencilla configuración. 

Si está pensando en usar distcc para ayudarle a realizar el bootstrap en una instalación Gentoo, asegúrese de leer la sección [[#Usar_Distcc_para_realizar_el_Bootstrap|Usar Distcc para hacer el bootstrap]]. 

== Configuración ==

=== Dependencias ===

Para utilizar Distcc, todas las máquinas en su red deben tener la misma versión del GCC. Mezclar 3.3.x (variando la x) es correcto, pero mezclar 3.3.x y 3.2.x "puede" resultar en errores en tiempo de compilación o ejecución. 

=== Instalar Distcc ===

Hay un par de opciones que debería conocer antes de instalar distcc. 

Distcc incluye un monitor gráfico para monitorizar las tareas que su computador está enviando para compilación. Si usa Gnome, entonces agregue 'gnome' a sus parámetros USE. Sin embargo, si no lo usa y
quiere monitorizar, entonces agregue 'gtk' a la lista de parámetros USE. 

{{Emerge|distcc}}

{{Important|Recuerde que debe asegurarse de instalar distcc en todas las máquinas que vayan a participar en la compilación.}}

=== Configurar Portage para utilizar Distcc ===

Configurar Portage para usar distcc es fácil. Siga estos sencillos pasos en cada sistema que vaya a participar en la compilación distribuida: 

{{Emerge|distcc}}

Ahora, ajuste la variable <code>MAKEOPTS</code> y la variable <code>FEATURES</code> tal y como se describe más abajo. Para <code>MAKEOPTS</code>, defina un adecuado para su configuración particular. Una estrategia común es definir N como el doble del número total de CPUs disponibles más uno.

{{RootCmd|nano -w /etc/portage/make.conf|output=<pre>
MAKEOPTS="-jN"
FEATURES="distcc"
</pre>
}}

=== Especificar las máquinas participantes ===

Utilice la orden <code>distcc-config</code> para indicar la lista de máquinas. A continuación se  muestra un ejemplo de lista: 

{{Code|Ejemplos de definiciones de máquinas|<pre> 192.168.0.1 192.168.0.2 192.168.0.3
192.168.0.1/2 192.168.0.2 192.168.0.3/10
192.168.0.1:4000/2 192.168.0.2/1 192.168.0.3:3632/4
@192.168.0.1 @192.168.0.2:/usr/bin/distccd 192.168.0.3
</pre>
}}

Hay otras formas de configurar máquinas. Eche un vistazo a la página del manual de distcc para obtener más información.

Si desea compilar en la máquina local debería escribir 'localhost' en la lista de máquinas. Contrariamente, si no desea utilizar la máquina local
para compilar (que frecuentemente es el caso) omítala de la lista. En una máquina lenta usar localhost puede de hecho hacer las cosas más lentas.
Asegúrese de comprobar sus ajustes para mejorar el rendimiento.

Puede parecer complicado, pero en la mayoría de los casos una variante de la línea 1 ó de la 2 funcionará. 

Como la mayoría de la gente no usará las líneas 3 ó 4, haré [http://distcc.samba.org/man/distcc_1.html referencia a] los documentos de distcc (man distcc) para obtener más información, los cuales incluyen la posibilidad de usar distcc sobre una conexión SSH. 

Por ejemplo, para ajustar la primera línea en el ejemplo anterior: 

{{RootCmd|/usr/bin/distcc-config --set-hosts "192.168.0.1 192.168.0.2 192.168.0.3"}}

Modifique su {{Path|/etc/conf.d/distccd}} para ajustarlo a sus necesidades y asegúrese de usar la directiva <code>--allow</code> para permitir únicamente máquinas en las cuales confíe. Para mayor seguridad debería utilizar también la directiva <code>--listen</code> para indicarle al demonio distcc en qué dirección IP debe escuchar (en sistemas con más de una dirección IP). Se puede encontrar más información acerca de seguridad en distcc en [http://distcc.samba.org/security.html Distcc Security Design]. 

{{Important|Es importante utilizar --allow y --listen. Por favor, lea la página del manual de distccd o el documento sobre seguridad indicado arriba para obtener más información.}}

Ahora inicie el demonio distcc en todas las máquinas participantes: 

{{RootCmd|rc-update add distccd default |/etc/init.d/distccd start}}

=== Configurar Distcc para trabajar con Automake ===

Esto es más fácil de configurar en algunos casos que con Portage. Hay que actualizar su variable de entorno <code>PATH</code> para incluir
{{Path|/usr/lib/distcc/bin}} delante del directorio que contiene <code>gcc</code> ({{Path|/usr/bin</path>}}). No obstante, hay un problema. Si
utiliza ccache, deberá poner distcc después de ccache: 

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

You can put this in your {{Path|~/.bashrc}} or equivalent file to have the PATH set every time you log in.

Then, as you would normally type <code>make</code> , you would type <code>make -jN</code> (where N is an integer). The value of N depends on your network and the types of computers you are using to compile. Test your own settings to find the number that yields the best performance. 

== Compilación cruzada ==

Cross-compiling is using one architecture to build programs for another architecture. This can be as simple as using an Athlon (i686) to build a program for a K6-2 (i586), or using a Sparc to build a program for a ppc. This is documented in our [[Distcc/Cross-Compiling|DistCC Cross-compiling Guide]] .

== Usar Distcc para realizar el Bootstrap ==

=== Step 1: Configure Portage ===

Boot your new box with a Gentoo Linux LiveCD and follow the [http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=1 installation instructions] up until the bootstrapping part. (See the [http://www.gentoo.org//doc/en/faq.xml#stage12 Gentoo FAQ] for more information about bootstrapping.) Then configure Portage to use distcc: 

{{RootCmd|nano -w /etc/portage/make.conf|output=<pre>
FEATURES="distcc"
MAKEOPTS="-jN"
</pre>
}}

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

=== Step 2: Getting Distcc ===

Instale distcc: 

{{RootCmd|USE{{=}}'-*' emerge --nodeps sys-devel/distcc}}

=== Step 3: Setting Up Distcc ===

Run <code>distcc-config --install</code> to setup distcc; substitute <code>host*</code> with the IP addresses or hostnames of the participating DistCC nodes.

{{RootCmd|/usr/bin/distcc-config --set-hosts "localhost host1 host2 host3 ..."}}

Distcc is now set up to bootstrap! Continue with the official installation instructions and ''do not forget'' to re-emerge distcc after <code>emerge system</code> . This is to make sure that all of the dependencies you want are installed as well. 

{{Note|During bootstrap and <code>emerge system</code> distcc may not appear to be used. This is expected as some ebuilds do not work well with distcc, so they intentionally disable it.}}

== Troubleshooting ==

=== Some Packages Don't Use Distcc ===

As you emerge various packages, you'll notice that some of them aren't being distributed (and aren't being built in parallel). This may happen because the package's Makefile doesn't support parallel operations or the maintainer of the ebuild has explicitly disabled parallel operations due to a known problem. 

Sometimes distcc might cause a package to fail to compile. If this happens for you, please [http://bugs.gentoo.org report] it to us. 

=== Mixed GCC Versions ===

If you have different GCC versions on your hosts, there will likely be very weird problems. The solution is to make certain all hosts have the same GCC version. 

Recent Portage updates have made Portage use <code>${CHOST}-gcc</code> instead of <code>gcc</code> . This means that if you're mixing i686 machines with other types (i386, i586) you will run into problems. A workaround for this may be to <code>export CC='gcc' CXX='c++'</code> or to put it in {{Path|/etc/portage/make.conf}} . 

{{Important|Doing this explicitly redefines some behavior of Portage and may have some weird results in the future. Only do this if you're mixing CHOSTs.}}

=== -march=native ===

Starting with GCC 4.3.0, the compiler supports the <code>-march=native</code> switch which turns on CPU autodetection and optimizations that are worth being enabled on the processor the GCC is running at. This is a problem with <code>distcc</code> as it allows mixing of code optimized for different processors (like AMD Athlon and Intel Pentium). ''Don't'' use <code>-march=native</code> or <code>-mtune=native</code> in your <code>CFLAGS</code> or <code>CXXFLAGS</code> when compiling with <code>distcc</code> .

To know the flags that GCC would enable when called with <code>-march=native</code>, execute the following:

{{Cmd|gcc -march{{=}}native -E -v - &lt;/dev/null 2&gt;&amp;1 {{!}} grep cc1|output=<pre>
/usr/libexec/gcc/x86_64-pc-linux-gnu/4.7.3/cc1 -E -quiet -v - -march=corei7-avx \
  -mcx16 -msahf -mno-movbe -mno-aes -mpclmul -mpopcnt -mno-abm -mno-lwp -mno-fma \
  -mno-fma4 -mno-xop -mno-bmi -mno-bmi2 -mno-tbm -mavx -mno-avx2 -msse4.2 -msse4.1 \
  -mno-lzcnt -mno-rdrnd -mno-f16c -mno-fsgsbase --param l1-cache-size=32 \
  --param l1-cache-line-size=64 --param l2-cache-size=6144 -mtune=corei7-avx
</pre>}}

== Distcc Extras ==

=== Distcc Monitors ===

Distcc ships with two monitors. The text-based one is always built and is called <code>distccmon-text</code> . Running it for the first time can be a bit confusing, but it is really quite easy to use. If you run the program with no parameter it will run once. However, if you pass it a number it will update every N seconds, where N is the argument you passed. 

The other monitor is only turned on if you enabled <code>gtk</code> or <code>gnome</code> in your <code>USE</code> flags. This one is GTK+ based, runs in an X environment and it is quite lovely. For Gentoo the GUI monitor has been called <code>distccmon-gui</code> for less confusion. Elsewhere it may be referred to as <code>distccmon-gnome</code> . 

{{RootCmd|distccmon-text N}}

o lance <code>distccmon-gui</code>:

{{RootCmd|distccmon-gui}}

To monitor Portage's distcc usage you can use:
{{RootCmd|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-text N
|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-gui}}

{{Important|If your distcc directory is elsewhere, change the DISTCC_DIR variable accordingly.}}

== Agradecimientos ==

Nos gustarían dar las gracias a los siguientes autores y editores por sus contribuciones a esta guía:

* Lisa Seelye
* Mike Frysinger
* Erwin
* Sven Vermeulen
* Lars Weiler
* Tiemo Kieft
* nightmorph
