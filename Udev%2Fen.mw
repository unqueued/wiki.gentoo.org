<languages />
{{Metadata|abstract=udev is the device manager for the Linux kernel. It manages device nodes in /dev and handles all user space actions when adding or removing devices.}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|https://www.freedesktop.org/wiki/Software/systemd/|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox gitweb|https://cgit.freedesktop.org/systemd/systemd/tree/src/udev|raw=true}}
|{{InfoBox project|Udev}}
}}

'''udev''' is the device manager for the Linux kernel. It manages device nodes in {{Path|/dev}} and handles all user space actions when adding or removing devices. Readers of this article should also look at [[Eudev|eudev]], a fork of udev.

== What is udev? ==

=== The /dev directory ===

{{:/dev/en}}

== Installation ==

{{Important|When updating udev, check the [[Udev/Upgrade Guide|udev upgrade guide]] for information that can prevent unbootable systems.}}

=== Kernel ===

{{c|udev}} requires the following kernel options:

<!-- See https://git.kernel.org/?p=linux/hotplug/udev.git;a=blob_plain;f=README -->
{{KernelBox|1=
General setup  --->
    [*] Configure standard kernel features (expert users)  --->
        [ ] Enable deprecated sysfs features to support old userspace tools
        [*] Enable signalfd() system call
Enable the block layer  --->
    [*] Block layer SG support v4
Networking support  --->
    Networking options  --->
        <*> Unix domain sockets
Device Drivers  --->
    Generic Driver Options  --->
        ()  path to uevent helper
        [*] Maintain a devtmpfs filesystem to mount at /dev
    < > ATA/ATAPI/MFM/RLL support (DEPRECATED)  --->
File systems  --->
    [*] Inotify support for userspace
    Pseudo filesystems --->
        [*] /proc file system support
        [*] sysfs file system support
}}

=== USE flags===

Portage knows the <code>udev</code> global USE flag for enabling support for udev in other packages. Adding this USE flag value to the USE flag list (default in all Linux [[Profile (Portage)|profiles]]) will pull in the {{Package|sys-fs/udev}} package automatically:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
USE="udev"
}}

{{USEflag|package=sys-fs/udev}}

=== Emerge ===

After setting USE flags update the system so the changes take effect:

{{Emerge|params+=--changed-use --deep|@world}}

== Configuration ==

=== Service ===

To start udev at boot time, add it to the sysinit runlevel. This can be done by issuing the following command with root privileges:

{{RootCmd|rc-update add udev sysinit}}

== Advanced Configuration ==

=== Rules ===

udev provides a set of rules that match against exported values of uevents (events sent by the kernel) and properties of the discovered device. A matching rule will possibly name and create a device node and run configured programs to setup and configure the device.

The rule definitions are stored in two locations:

# '''{{Path|/lib/udev/rules.d/}}''' - Rules in this directory are installed by certain packages, they generally should not be changed by users;
# '''{{Path|/etc/udev/rules.d/}}''' - This folder is for end-user specified rules. Any new rules should be added in this directory;

In these directories, multiple rule files (with suffix {{Path|.rules}}) are traversed in alphanumerical order. Inside the rules files, udev will find expressions that might match a uevent together with the state to match (is the uevent because a device is added or removed) and the command to execute.

The event matching is based on information such as:

* The ''SUBSYSTEM'' of the uevent (for which type of device is the uevent fired);
* The ''ACTION'' that is taken (add, change, or remove);
* One or more attributes (through ''ATTR'' or ''ATTRS''), such as the device class, vendor or other device information;
* The kernel-provided name (through ''KERNEL''), such as sd* (for SCSI/SATA disks) or input* (for input devices such as mice and keyboards);
* One or more environment settings (through ''ENV''), used to send information between multiple rules.

Based on this information, the rule can then state if:

# Some information needs to be shared with later events (through environment variables)
# Links need to be created in {{Path|/dev}}
# Commands need to be executed

Udev does this for every rule that matches (it does not stop after the first match) to allow a flexible device management approach.

=== Persistent device names ===

The kernel detects devices asynchronously, udev mirrors the kernel's [[sysfs]] filesystem and so the devices are named and numbered in order of detection. So by default udev provides no persistent device names. However there are mechanisms for some device classes to provide these:

* Udev creates for storage devices additional symlinks based on the device's ID, [[Removable_media#UUIDs_and_labels|label, UUID]] and path. See the {{Path|/dev/disk/by-*}} directory. So instead of using e.g. the device file {{Path|/dev/sda}} use the file {{Path|/dev/disk/by-label/SOME_LABEL}}.

* The same for input devices in the {{Path|/dev/input}} directory.

* Using custom rules enables users to create their own device files.

== Usage ==

Some useful commands are:

* Show all messages about a given device file:
: {{RootCmd|udevadm info --query{{=}}all --name{{=}}/dev/DEVICE_FILE}}

* Monitor udev activities:
: {{RootCmd|udevadm monitor}}

* Assign a persistent name to an ethernet device:
: {{FileBox|filename=/etc/udev/rules.d/ethernet.rules|lang=bash|1=
SUBSYSTEM=="net", ACTION=="add", ATTR{address}=="01:23:45:67:89:ab", NAME="eth6789ab"
}}

See the ''udevadm'' [[man page]] for more information.

== Troubleshooting ==

* {{Bug|udev|search=package}}

=== Log monitor messages ===

To log all message when {{c|udevadm monitor}} is ran, modify the following configuration file:

{{FileBox|filename=/etc/conf.d/udev|lang=bash|1=
udev_monitor="YES"
}}

It will create the new log file located at {{Path|/run/udev/udevmonitor.log}}

=== Debug mode ===

Enabling debug mode will output more log messages:

{{FileBox|filename=/etc/conf.d/udev|lang=bash|1=
udev_debug="YES"
}}

Set the logging priority:

{{FileBox|filename=/etc/udev/udev.conf|lang=bash|1=
udev_log="debug"
}}

The log file {{Path|/run/udevdebug.log}} will be created but no messages will be logged to it. The most recent versions of udev will log all messages to {{c|dmesg}}.

=== Missing device files {{Path|/dev/null}} and {{Path|/dev/console}} ===

Some udev versions need the {{Path|/dev/null}} and {{Path|/dev/console}} files in order to work properly, but can not create them on their own. To manually create these files for udev run the following commands with root privileges:

{{RootCmd
|mkdir test
|mount --bind / test
|cd test/dev
|mknod -m 660 console c 5 1
|mknod -m 660 null c 1 3
|cd ../..
|umount test
|rmdir test
}}

=== NIC assigned eth0, but is moved to eth1 ===

Those having dual network cards on their motherboards may run into a situation where {{c|ifconfig}} may show no eth0 or eth1. {{c|dmesg}} may show their NIC detected as eth0, and later moved to eth1. Performing a {{c|ifconfig -a}} will also show the NIC as eth1. This is caused by using the kernel assigned names in the first place. Users should write custom rules like {{Path|/etc/udev/rules.d/70-my-network.rules}} to use free names like lan0 or wireless0 or use predictable interface names (which have been enabled by default since udev version 197).

Remember to also remove old files from old versions of udev:

{{RootCmd|rm /etc/udev/rules.d/70-persistent-net.rules}}

Also make sure not to pass <code>net.ifnames=0</code> on the kernel commandline. This setting would disable the predictable devname feature of udev altogether.

== See also ==

[[Eudev|eudev]] - A Gentoo maintained fork of udev.

== External resources ==

{{Bug|575718|text=Bug 575718 - Request for council decision regarding virtual/udev default provider}} - Default virtual/udev provider changed to sys-fs/eudev


[[Category:Core system]]
[[Category:Daemons]]
