<languages />
Cet article explique comment mettre en place et utiliser  '''GRUB2''' avec des configurations simples. Pour des visionner des informations plus compréhensibles, utilisez [[GRUB2]]. Pour réaliser une migration de [[GRUB|GRUB Legacy]] vers GRUB2, utilisez [[GRUB2 Migration]].

== Installation de GRUB2 ==

La paquet {{Package|sys-boot/grub}} utilise le système de slot, c'est à dire que grub-0.97 et grub-2.xx peuvent être installés en même temps sur le système. Néanmoins, bien que ces deux versions de GRUB peuvent être installées simultanément, une seule version de GRUB peut être utilisée en tant que chargeur d'amorçage.

To install GRUB2, first set the <var>GRUB_PLATFORMS</var> variable with one or more appropriate values in the system's {{Path|make.conf}}. If unset, GRUB2 will guess which platform to use on the system. It guesses <code>pc</code> (which is the MBR style of installation) for {{Keyword|x86}}/{{Keyword|amd64}} architectures.

{{FileBox|filename=/etc/portage/make.conf|title=GRUB_PLATFORMS example|lang=bash|1=
# Standard PC (BIOS)
GRUB_PLATFORMS="pc"
 
# UEFI on amd64
GRUB_PLATFORMS="efi-64"
 
# Both UEFI and PC
GRUB_PLATFORMS="efi-64 pc"
}}

After the variable is set, emerge the software:

{{emerge|sys-boot/grub:2}}

== Activating the GRUB2 boot loader ==

Mount {{Path|/boot}} if applicable:

{{RootCmd|mount /boot}}

When using an EFI platform, make sure that the [[EFI System Partition]] is available (mounted) at {{Path|/boot/efi}}. This can either be through a specific mount point (at {{Path|/boot/efi}}) or by having an entire {{Path|/boot}} partition formatted with the FAT filesystem. This will effectually render {{Path|/boot}} into a large EFI System Partition.

Presuming only {{Path|/boot/efi}} is FAT:

{{RootCmd|mount /boot/efi}}

Run the {{c|grub-install}} utility to copy the relevant files to {{Path|/boot/grub}}. On the PC platform, this also installs a boot image to the Master Boot Record (MBR) or a partition's boot sector.

To install GRUB2 to the MBR:

{{RootCmd|grub-install /dev/sda||output=<pre>
Installation finished. No error reported.
</pre>}}

To install GRUB2 on an EFI capable system:

{{RootCmd|grub-install --target{{=}}x86_64-efi|output=<pre>
Installation finished. No error reported.
</pre>}}

{{Important|When installing GRUB2 to an EFI capable system (like the example above) is giving troubles, make sure the <var>GRUB_PLATFORMS</var> variable is properly set in {{Path|/etc/portage/make.conf}}}}

The {{c|grub-install}} command accepts a <code>--target</code> option to specify which CPU/Platform to install. If unspecified, {{c|grub-install}} will make a guess: on {{Keyword|x86}}/{{Keyword|amd64}} it will use the <code>i386-pc</code> value by default.

== Automatic configuration ==

GRUB2 is traditionally configured by using the {{c|grub-mkconfig}} program to generate a configuration file.

{{c|grub-mkconfig}} generates the configuration file based on template sections located in {{Path|/etc/grub.d}}. The default templates should cover most common boot setups.

{{Cmd|ls /etc/grub.d|output=<pre>
00_header  10_linux  20_linux_xen  30_os-prober  40_custom  41_custom  README
</pre>}}

The behavior of these templates can be controlled by setting variables in {{Path|/etc/default/grub}}. See the [http://www.gnu.org/software/grub/manual/html_node/Simple-configuration.html GRUB manual] for more information.

=== Kernel naming scheme ===

In order for {{c|grub-mkconfig}} to detect the available Linux kernel(s), their names must start with {{Path|vmlinuz-}} or {{Path|kernel-}}.

For example:

{{CodeBox|title=Example kernel names that GRUB2 can detect|<pre>
 /boot/vmlinuz-3.4.3
 /boot/kernel-2.6.39-gentoo
 /boot/kernel-genkernel-x86_64-3.17.1-gentoo-r1
</pre>}}

When using an [[initramfs]], its name should start with {{Path|initramfs-}} or {{Path|initrd-}} and end with {{Path|.img}}. The version must match one of a kernel image. File names generated by {{c|[[genkernel]]}} will also work.

For example:

{{CodeBox|title=Example initramfs names that GRUB2 can detect|<pre>
 /boot/initrd.img-3.4.3
 /boot/initrd-3.4.3.img
 /boot/initrd-3.4.3.gz
 /boot/initrd-3.4.3
 /boot/initramfs-3.4.3.img
 /boot/initramfs-genkernel-3.4.3-gentoo
 /boot/initramfs-genkernel-x86_64-2.6.39-gentoo
</pre>}}

To generate the {{Path|grub.cfg}} file, execute the {{c|grub-mkconfig}} command like so:

{{RootCmd|grub-mkconfig -o /boot/grub/grub.cfg|output=<pre>
Generating grub.cfg ...
Found linux image: /boot/vmlinuz-3.2.9
done
</pre>}}

=== Silent kernel decompression ===

To silence kernel decompression at boot time, edit {{Path|/etc/default/grub}} and add <code>quiet</code> to the <var>GRUB_CMDLINE_LINUX_DEFAULT</var> variable.

{{FileBox|filename=/etc/default/grub|title=Silent decompression example|lang=bash|1=
GRUB_CMDLINE_LINUX_DEFAULT="quiet"
}}

=== Systemd ===

To boot systemd while using GRUB2 make the <var>GRUB_CMDLINE_LINUX</var> variable look like this:

{{FileBox|filename=/etc/default/grub|title=Systemd example|lang=bash|1=
GRUB_CMDLINE_LINUX="init=/usr/lib/systemd/systemd"
}}

=== Loading another operating system ===

{{c|grub-mkconfig}} can also generate configurations to load ''other'' operating systems. This requires the {{Package|sys-boot/os-prober}} package.

To boot Windows, the {{Package|sys-fs/ntfs3g}} also needs to be installed. It allows for the {{c|grub-mkconfig}} utility to probe NTFS filesystems.

== Manual configuration ==

Users do not need to use {{c|grub-mkconfig}}. The {{Path|grub.cfg}} file can be edited manually as well.

As most users have experience with GRUB Legacy format, the next example shows how to write a GRUB2 configuration file based on information from the GRUB Legacy configuration.

{|
! style="text-align: left;" | {{Path|grub.conf}} (GRUB Legacy)
|
! style="text-align: left;" | {{Path|grub.cfg}} (GRUB 2)
|-
| style="background: rgb(250,250,250); vertical-align: top; border: 1px solid black; padding: 5px 7px;" | <code style="color: gray; margin: 0; padding: 0; border: 0; background: transparent; line-height: normal;">timeout 5<br />
<br />
<span style="font-weight: bold; color: maroon;">title</span> Gentoo Linux 3.2.12<br />
root <span style="font-weight: bold; color: maroon;">(</span>hd0,<span style="font-weight: bold; color: maroon;">0)</span><br />
<span style="font-weight: bold; color: maroon;">kernel</span> /boot/kernel-3.2.12-gentoo root=/dev/sda3</code>
| style="vertical-align: middle; font-size: 50px; color: gray;" | ⇨
| style="background: rgb(250,250,250); vertical-align: top; border: 1px solid black; padding: 5px 7px;" | <code style="color: gray; margin: 0; padding: 0; border: 0; background: transparent; line-height: normal;">timeout<span style="font-weight: bold; color: green;">=</span>5<br />
<br />
<span style="font-weight: bold; color: green;">menuentry</span> <span style="font-weight: bold; color: green;">'</span>Gentoo Linux 3.2.12<span style="font-weight: bold; color: green;">'</span> <span style="font-weight: bold; color: green;">{</span><br />
<span style="display: inline-block; width: 4ex; overflow: hidden;">	</span>root<span style="font-weight: bold; color: green;">=</span>hd0,<span style="font-weight: bold; color: green;">1</span><br />
<span style="display: inline-block; width: 4ex; overflow: hidden;">	</span><span style="font-weight: bold; color: green;">linux</span> /boot/kernel-3.2.12-gentoo root=/dev/sda3<br />
<span style="font-weight: bold; color: green;">}</span>
|}

{{Note|GRUB Legacy numbers partitions starting with 0; GRUB2 numbers partitions starting with 1. Both bootloaders number drives starting with 0.}}

== See also ==

*[[GRUB2]] - The 'full' GRUB2 article contains more information and an extensive list of resources.


[[Category:Bootloaders]]
