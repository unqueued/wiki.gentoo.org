<languages />
<translate>
{{Official|http://www.gentoo.org/doc/en/kernel-config.xml}}

This article describes the manual configuration and setup of the [[Special:MyLanguage/Kernel|Linux kernel]]. For an automatic method see the [[Special:MyLanguage/Genkernel|genkernel]] article.

== Set symlink ==

The symlink <tt>/usr/src/linux</tt> should always point to the kernel sources, you are actually using. To do this you can:

* install the kernel with active ''symlink'' [[Special:MyLanguage/USE flag|USE flag]].

* set the symlink with '''eselect''':
: {{RootCmd|eselect kernel list}}
: This outputs the available kernel sources. The star indicates the chosen sources. To change the kernel sources, e.g. to the second entry, do:
: {{RootCmd|eselect kernel set 2}}

* set the symlink yourself, e.g.:
: {{RootCmd|ln -sf /usr/src/linux-2.6.39-gentoo-r3 /usr/src/linux}}

== Configuration tools ==

The kernel offers several tools to configure himself:

; '''make config'''
: Text based configuration. The options are prompted one after another. You have to answer all options and out-of-order access to former options is not possible.

; '''make menuconfig'''
: Graphical menu (only text input). You can navigate through the menu and change the options you want.

; '''make xconfig'''
: Graphical menu using Qt4. You have to install {{Package|x11-libs/qt-gui}}.

; '''make gconfig'''
: Graphical menu using GTK+. You have to install {{Package|x11-libs/gtk+}}, {{Package|dev-libs/glib}} and {{Package|gnome-base/libglade}}.

Also there are several scripts to create misc default configuration. See:
{{RootCmd|make help}}

== Configuration ==

This article describes the configuration using '''make menuconfig''', but the procedure is the same for the other menus.
{{RootCmd|cd /usr/src/linux
|make menuconfig}}

=== Usage ===

In the shown menu the blue bar indicates your position. With the arrow keys {{Key|up}} and {{Key|down}} you can change the position. The arrow keys {{Key|left}} and {{Key|right}} traverse the menu bar in the bottom and define, what happens, when you hit the {{Key|Enter}} key. '''Select''' switches to a sub menu - the menu entries ending with ''--->'' - , while '''Exit''' exits a sub menu. Alternative you can hit the {{Key|Esc}} key twice.


Menu entries, which starts with brackets, are drivers or features, which you can activate:

; [ ], [*]
: Options in square brackets can be activated or deactivated. The asterisk marks the menu entry as activated. You change the value with the {{Key|space}} key or press {{Key|Y}} ('''Y'''es) to activate or {{Key|N}} ('''N'''o) to deactivate the entry.
: Is the option activated, the chosen driver will be build into the kernel and is always available at boot time.

; < >, <M>, <*>
: Options in angle brackets can be activated or deactivated, but also activated as module (indicated by a ''M''). You change the value as before and press key {{Key|M}} for activate as module.
: The differentiation between a driver as module and a driver build into the kernel is, that the module is not loaded at boot time, so speeds up the boot. As needed you are loading the module yourself or let a tool like [[Special:MyLanguage/udev|udev]] do it (as needed also at boot time). Simpler in the usability is a driver build into the kernel.

; {M}, {*}
: Options in curly brackets can be activated or activated as module but not be deactivated, because another driver needs this activated in either way.

; -M-, -*-
: Options between hyphens are activated in the shown way by another driver. There is no choice.


Furthermore some menu entries have a tag at the end:

; (NEW)
: This driver is new in the kernel and is maybe not stable enough.

; (EXPERIMENTAL)
: This driver is experimental and most likely not stable enough.

; (DEPRECATED)
: This driver is deprecated and not needed for most systems.

; (OBSOLETE)
: This driver is obsolete and should not be activated.


Most options have a description, which get by pressing the {{Key|H}} key or choose in the menu bar '''Help'''.

=== Driver selection ===

See the [[Special:MyLanguage/Hardware detection|hardware detection]] article and the articles in the[[Special:MyLanguage/Category:Hardware|Hardware]] category.

== Build ==

After configuring the kernel you have to compile the kernel:
{{RootCmd|make}}

If you have a processor with multiple cores, you can let all the cores do the work. For this add the parameter '''-j(NUMBER_CORES +1)'''. For a dual core processor:
{{RootCmd|make -j3}}

== Setup ==

If activated drivers as modules, you have to install them:
{{RootCmd|make modules_install}}
The modules will be copied to a sub folder of <tt>/lib/modules</tt>.


The kernel needs to be copied to the <tt>/boot</tt> folder. Therefor you have to mount <tt>/boot</tt> first, if the folder has its own partition:
{{RootCmd|mount /boot}}

Now you can copy the kernel to <tt>/boot</tt>:
{{RootCmd|cp arch/ARCH/boot/bzImage /boot/kernel-2.6.39-gentoo-r3
|cp System.map /boot/System.map-2.6.39-gentoo-r3
|cp .config /boot/config-2.6.39-gentoo-r3}}
Replace ''ARCH'' with your architecture, e.g. for x86 and x86_64 (amd64) systems it is '''x86'''.
The target name is arbitrary. The version number helps to distinguish several kernels.

Alternative there is a tool:
{{RootCmd|make install}}
This command executes <tt>/sbin/installkernel</tt>, which is part of the {{Package|sys-apps/debianutils}} package. It copies the kernel and the additional files in Debian's naming syntax to <tt>/boot</tt> and creates there the symlinks <tt>vmlinuz</tt>, <tt>System.map</tt> and <tt>config</tt>, which points to the new kernel etc. . If there are already such symlinks, the old ones are renamed with an ending <tt>.old</tt>. These symlinks are handy, because they point always to the newest kernel without changing the file path (e.g. in the bootloader configuration).

== Bootloader ==

Change your bootloader configuration to pick up at boot the new kernel.

Finally restart your system with the new kernel.

== Links ==

* [http://kernelnewbies.org/Linux26Changes kernel changelog with some explanations]

[[Category:Kernel]]
</translate>
