<languages />
<translate>

<!--T:1-->
This article describes the manual configuration and setup of the [[Kernel|Linux kernel]]. For an automatic method see the [[genkernel]] article.

== Set symlink == <!--T:2-->

<!--T:3-->
The symlink <tt>/usr/src/linux</tt> should always point to the kernel sources that is currently being used. This can be done in one of three ways:

<!--T:4-->
; 1. Installing the kernel sources with active ''symlink'' [[USE flag]]
: This will make the <tt>/usr/src/linux</tt> point to your newly installed kernel sources. If necessary, it can still be modified later with the following two methods:

<!--T:48-->
; 2. Setting the symlink with '''eselect''':

</translate>
: {{RootCmd| eselect kernel list |
  |output=Available kernel symlink targets:<br/> &nbsp; [1] linux-2.6.39-gentoo-r2 *<br/> &nbsp; [2] linux-2.6.39-gentoo-r3
}}
<translate>

<!--T:49-->
: This outputs the available kernel sources. The asterisk indicates the chosen sources. To change the kernel sources, e.g. to the second entry, do:

</translate>
: {{RootCmd|eselect kernel set 2}}
<translate>

<!--T:5-->
; 3. Setting the symlink manually:

</translate>
: {{RootCmd|ln -sf /usr/src/linux-2.6.39-gentoo-r3 /usr/src/linux |
  |ls -l /usr/src/linux |
  |output=lrwxrwxrwx 1 root root 11 Aug 29 22:10 /usr/src/linux -> linux-2.6.39-gentoo-r3}}
<translate>

== Configuration tools == <!--T:6-->

<!--T:7-->
The kernel offers several tools to configure itself:

<!--T:8-->
; '''make config'''
: Text based configuration. The options are prompted one after another. All options need to be answered, and out-of-order access to former options is not possible.

<!--T:9-->
; '''make menuconfig'''
: Graphical menu (only text input). You can navigate through the menu and change the options you want.

<!--T:10-->
; '''make nconfig'''
: Graphical menu based on ncurses. Requires {{Package|sys-libs/ncurses}} to be installed.

<!--T:11-->
; '''make xconfig'''
: Graphical menu using Qt4. Requires {{Package|x11-libs/qt-gui}} to be installed.

<!--T:12-->
; '''make gconfig'''
: Graphical menu using GTK+. Requires {{Package|x11-libs/gtk+}}, {{Package|dev-libs/glib}} and {{Package|gnome-base/libglade}} to be installed.

<!--T:13-->
There are also several scripts to create miscellaneous default configurations. See:

</translate>
{{RootCmd|make help}}
<translate>
== Existing configuration ==

If an existing configuration should be used to configure a kernel, there are several ways to obtain one.

=== From the currently running kernel ===

When the kernel configuration option ''IKCONFIG_PRO'' is enabled, the configuration of the currently running one can be accessed through the virtual file ''/proc/config.gz''.
</translate>
{{RootCmd|zcat /proc/config.gz > /usr/src/linux/.config}}
<translate>
=== From a previously built Kernel ===

To re-use the config file from a previously built kernel, there are various ways to access it.

==== Build directory ====

If the directory of an old kernel hasn't been deleted/cleaned yet, the configuration is still available in the file ''.config''.
</translate>
{{RootCmd|cp /usr/src/linux-2.6.39-gentoo-r3/.config /usr/src/linux/.config}}
<translate>
==== Saved genkernel configurations ====
When using genkernel for building the kernel and having set ''SAVE_CONFIG="yes"'' in its configuration, the config will be saved in the ''/etc/kernels'' directory.
</translate>
{{RootCmd|cp /etc/kernels/kernel-config-x86_64-2.6.39-gentoo-r3 /usr/src/linux/.config}}
<translate>

== Configuration == <!--T:14-->

<!--T:15-->
This article describes the configuration using '''make menuconfig''', but the procedure is similar for the other menus.
Change the working directory to ''/usr/src/linux''.
</translate>
{{RootCmd|cd /usr/src/linux}}
<translate>
When using an already existing configuration, make sure to update the configuration first to the current kernel's configuration options. This will ask for configuration options introduced since the previous configuration's kernel.
</translate>
{{RootCmd|make oldconfig}}
<translate>
Now start the configuration.
</translate>
{{RootCmd|make menuconfig}}
<translate>

=== Usage === <!--T:16-->

<!--T:17-->
In the shown menu the blue bar indicates your position. With the arrow keys {{Key|up}} and {{Key|down}} you can change the position. The arrow keys {{Key|left}} and {{Key|right}} traverse the menu bar in the bottom and define, what happens, when you hit the {{Key|Enter}} key. '''Select''' switches to a sub menu - the menu entries ending with ''--->'' - , while '''Exit''' exits a sub menu. Alternative you can hit the {{Key|Esc}} key twice.

<!--T:18-->
Menu entries, which start with brackets, are drivers or features which can be activated:

<!--T:19-->
; [ ], [*]
: Options in square brackets can be activated or deactivated. The asterisk marks the menu entry as activated. You change the value with the {{Key|space}} key or press {{Key|Y}} ('''Y'''es) to activate or {{Key|N}} ('''N'''o) to deactivate the entry.
: Is the option is activated, the chosen driver will be built into the kernel and will always be available at boot time.

<!--T:20-->
; < >, <M>, <*>
: Options in angle brackets can be activated or deactivated, but also activated as module (indicated by a ''M''). You change the value as before and press key {{Key|M}} for activate as module.
: The differentiation between a driver as module and a driver build into the kernel is, that the module is not loaded at boot time, so speeds up the boot. As needed you are loading the module yourself or let a tool like [[udev]] do it (as needed also at boot time). Simpler in the usability is a driver build into the kernel.

<!--T:21-->
; {M}, {*}
: Options in curly brackets can be activated or activated as module but not be deactivated, because another driver needs this activated in either way.

<!--T:22-->
; -M-, -*-
: Options between hyphens are activated in the shown way by another driver. There is no choice.


<!--T:23-->
Furthermore some menu entries have a tag at the end:

<!--T:24-->
; (NEW)
: This driver is new in the kernel and is maybe not stable enough.

<!--T:25-->
; (EXPERIMENTAL)
: This driver is experimental and most likely not stable enough.

<!--T:26-->
; (DEPRECATED)
: This driver is deprecated and not needed for most systems.

<!--T:27-->
; (OBSOLETE)
: This driver is obsolete and should not be activated.


<!--T:28-->
Most options have a description, which get by pressing the {{Key|H}} key or choose in the menu bar '''Help'''.

=== Driver selection === <!--T:29-->

<!--T:30-->
See the [[hardware detection]] article and the articles in the [[:Category:Hardware|Hardware]] category.

=== Search modules === <!--T:45-->
Within ''menuconfig'', you can use {{Key|/}} to search modules by keyboards.

== Build == <!--T:31-->

<!--T:32-->
After configuring the kernel you have to compile the kernel:

</translate>
{{RootCmd|make}}
<translate>

<!--T:33-->
If you have a processor with multiple cores, you can let all the cores do the work. For this add the parameter '''-j(NUMBER_CORES +1)'''. For a dual core processor:

</translate>
{{RootCmd|make -j3}}
<translate>

== Setup == <!--T:34-->

<!--T:35-->
If activated drivers as modules, you have to install them:

</translate>
{{RootCmd|make modules_install}}
<translate>

<!--T:50-->
The modules will be copied to a sub directory of <tt>/lib/modules</tt>.

<!--T:46-->
To install the actual kernel:

</translate>
{{RootCmd|make install}}
<translate>

<!--T:47-->
This command executes <tt>/sbin/installkernel</tt>, which is part of the {{Package|sys-apps/debianutils}} package. It copies the kernel and the additional files in Debian's naming syntax to <tt>/boot</tt> and creates there the symlinks <tt>vmlinuz</tt>, <tt>System.map</tt> and <tt>config</tt>, which point to the new kernel etc. The symlinks pointing to the older kernel sources will be renamed to <tt>.old</tt> suffix, as well as the old kernel if it has the same version as newly-installed one. These symlinks are handy, because they point always to the newest kernel without changing the file path (e.g. you can use them in the bootloader configuration).

== Bootloader == <!--T:39-->

<!--T:40-->
Change your bootloader configuration to pick up at boot the new kernel.

<!--T:41-->
Finally restart your system with the new kernel.

<!--T:44-->
[[Category:Kernel]]
</translate>
