<languages />

{{Metadata|abstract=Questa guida dovrebbe aiutare gli utenti a localizzare la loro distribuzione Gentoo Linux per qualsiasi paese conosciuto. Essa utilizza la Germania come caso di studio, dal momento che è tradotto da un documento tedesco. Include la configurazione per l'uso del simbolo di valuta euro}}

== Fuso orario ==

Per mantenere il tempo di sistema correttamente secondo la presente posizione, è necessario impostare il fuso orario. Le istruzioni su come fare questo per [[System_time#OpenRC|OpenRC based systems]] e [[System_time#systemd|systemd based systems]] può essere trovato nell'articolo [[System_time|system time]].

== Sistema locale ==

=== Cosa sono le località ===

A locale is a set of information that most programs use for determining country and language specific settings. The locales and their data are part of the system library and can be found at {{Path|/usr/share/i18n/locales/}} on most systems. A locale name is generally named <code>ab_CD</code> where <code>ab</code> is the two (or three) letter language code (as specified in ISO-639) and <code>CD</code> is the two letter country code (as specified in ISO-3166). Variants like <code>@euro</code> or <code>@latin</code> are often appended to locale names, e.g. <code>de_DE@euro</code> or <code>nan_TW@latin</code>. Please explore [http://en.wikipedia.org/wiki/Locale Wikipedia] to read more about locales and related articles.

=== Environment variables for locales ===

The variables controlling different aspects of locale settings are given in the table below. All of them take one name of a locale in <code>ab_CD</code> format given above. 

{| class="table table-striped" style="text-align: left;" 
|- 
! scope=col width=25% | Variable name
! scope=col width=75% | Explanation
|- 
| <var>LANG</var>
| Defines all locale settings at once, while allowing further individual customization via the LC_* settings below.
|- 
| <var>LC_COLLATE</var>
| Define alphabetical ordering of strings. This affects e.g. output of sorted directory listings.
|- 
| <var>LC_CTYPE</var>
| Define the character-handling properties for the system. This determines which characters are seen as alphabetic, numeric, and so on. This also determines the character set used, if applicable.
|- 
| <var>LC_MESSAGES</var>
| Programs' localizations stored in {{Path|/usr/share/locale/}} for applications that use a message-based localization scheme (the majority of GNU programs; see the next chapters for further information on which programs do, and how to get the programs that don't to work).
|- 
| <var>LC_MONETARY</var>
| Defines currency units and formatting of currency-type numeric values.
|- 
| <var>LC_NUMERIC</var>
| Defines formatting of numeric values which aren't monetary. Affects things such as thousand separator and decimal separator.
|- 
| <var>LC_TIME</var>
| Defines formatting of dates and times.
|- 
| <var>LC_PAPER</var>
| Defines default paper size.
|- 
| <var>LC_ALL</var>
| Overrides all other settings.
|-
|}

{{Note|Some programs are written in such a way that they expect traditional English ordering of the alphabet, while some locales, most notably the Estonian one, use a different ordering. Therefore it's recommended to explicitly set <var>LC_COLLATE</var> to C when dealing with system-wide settings.}}

{{Warning|Using <var>LC_ALL</var> is strongly discouraged as it automatically overrides all other <var>LC_*</var> variables (<var>LANG</var> is not affected). This means that changes made by other means will be hidden until <var>LC_ALL</var> is set to a null string. It is probably best not to set it in a startup file.}}

Most typically, users only set the <var>LANG</var> variable globally.

=== Generating specific locales ===

Most users will probably only use one or maybe two locales on their system. How additional locales can be specified is explained in the {{Path|/etc/locale.gen}} file. 

{{CodeBox|title=Adding locales to /etc/locale.gen|1=
en_GB ISO-8859-1
en_GB.UTF-8 UTF-8
de_DE ISO-8859-1
de_DE@euro ISO-8859-15
}}

{{Note|Use an <code>@euro</code> value from {{Path|/usr/share/i18n/SUPPORTED/}} as the locale when using the Euro currency symbol (€) on non UTF-8 based locales.}}

The next step is to run {{c|locale-gen}}. It will generate all the locales specified in the {{Path|/etc/locale.gen}} file and write them to the locale-archive ({{Path|/usr/lib/locale/locale-archive}}). 

{{RootCmd|locale-gen|output=<pre>
 * Generating 4 locales (this might take a while) with 1 jobs
 *  (1/4) Generating en_GB.ISO-8859-1 ...                       [ ok ]
 *  (2/4) Generating en_GB.UTF-8 ...                            [ ok ]
 *  (3/4) Generating de_DE.ISO-8859-1 ...                       [ ok ]
 *  (4/4) Generating de_DE.ISO-8859-15@euro ...                 [ ok ]
 * Generation complete
</pre>}}

Verify that the selected locales are available by running {{c|locale -a}}.

{{Cmd|locale -a|output=<pre>
C
POSIX
de_DE
de_DE.iso88591
de_DE.iso885915@euro
de_DE@euro
deutsch
en_GB
en_GB.iso88591
en_GB.utf8
german
</pre>}}

The {{Path|/usr/lib/locale/locale-archive}} file can be shown by {{c|localedef}}.

{{Cmd|localedef --list-archive}}

Its raw content can be displayed using the {{c|strings}} command.

{{Cmd|strings /usr/lib/locale/locale-archive {{!}} less}}

=== Setting a locale ===

==== OpenRC ==== 

When using OpenRC locale settings are stored in environment variables. These are typically set in the {{Path|/etc/env.d/02locale}} (for system-wide settings) and {{Path|~/.bashrc}} (for user-specific settings) file.  More details can be found in the [[UTF-8#Setting_the_locale|UTF-8]] article.  The system wide settings ({{Path|/etc/env.d/02locale}}) can be managed through {{c|eselect locale}}. For instance, to set the <var>LANG</var> variable to the <code>C</code> value:

{{RootCmd|eselect locale list|output=<pre>
Available targets for the LANG variable:
  [1]   C 
  [2]   POSIX
  [3]   en_US
  [4]   en_US.iso885915
  [5]   en_US.utf8
  [ ]   (free form)
</pre>}}

{{RootCmd|eselect locale set 1}}

Of course, editing the file manually is possible as well to diversify the locale variables.

{{FileBox|filename=/etc/env.d/02locale|title=Setting the default system locale in /etc/env.d/02locale|lang=bash|1=
LANG="de_DE.UTF-8"
LC_COLLATE="C"
}}

It's also possible, and pretty common especially in a more traditional UNIX environment, to leave the global settings unchanged, i.e. in the "<code>C</code>" locale. Users can still specify their preferred locale in their own shell RC file: 

{{FileBox|filename=~/.bashrc|title=Setting the user locale|lang=bash|1=
export LANG="de_DE.UTF-8"
export LC_COLLATE="C"
}}

Another way of configuring system is to leave it in the default C locale, but enable UTF-8 character representation at the same time. This option is achieved using the following settings in {{Path|/etc/env.d/02locale}}: 

{{CodeBox|title=Using traditional C locale while specifying UTF-8|lang=bash|1=
LC_CTYPE=de_DE.UTF-8
}}

Using the above snippet, users will be able to see localized file names properly, while not being forced to completely use the selected language. 

Once the right locale is set up, be sure to update the environment variables to make the system aware of the change.

For a system-wide default locale:

{{RootCmd|env-update && source /etc/profile}}

For a user-specific locale:

{{Cmd|source ~/.bashrc}}

After this, kill the X server by pressing {{Key|Ctrl}}+{{Key|Alt}}+{{Key|Backspace}}, log out, then log in as a user. 

Now, verify that the changes have taken effect: 

{{Cmd|locale}}

==== systemd ====

With systemd set the locale with the {{c|localectl}} command. Check the list of available locales with:

{{RootCmd|localectl list-locales}}

Then set the desired locale:

{{RootCmd|<nowiki>localectl set-locale LANG=de_DE.utf8</nowiki>}}

Finally check if the result is good:

{{RootCmd|<nowiki>localectl | grep "System Locale"</nowiki>|output=<pre>
   System Locale: LANG=de_DE.utf8
</pre>}}

== Keyboard layout for the console ==

=== OpenRC ===

The keyboard layout used by the console is set in {{Path|/etc/conf.d/keymaps}} by the <var>keymap</var> variable. Valid values can be found in {{Path|/usr/share/keymaps/YOUR_ARCH/}}. {{Path|i386}} has further subdivisions into layout ({{Path|qwerty/}}, {{Path|azerty/}}, etc.). Some languages have multiple options - experiment with the various options to decide which one fits the needs best. 

{{FileBox|filename=/etc/conf.d/keymaps|title=Setting the console keymap|lang=bash|1=
keymap="de"
#keymap="de-latin1"
#keymap="de-latin1-nodeadkeys"
}}

=== systemd ===

With systemd the keymap layout used for the console can be set using the {{c|localectl}} command. First check the available keymap layouts:

{{RootCmd|localectl list-keymaps}}

Then set the requested console keymap layout:

{{RootCmd|localectl set-keymap it}}

Finally check if the console keymap layout was set correctly:

{{RootCmd|<nowiki>localectl | grep "VC Keymap"</nowiki>|output=<pre>
       VC Keymap: it
</pre>}}

== Keyboard layout for the X server ==

=== OpenRC ===

The keyboard layout to be used by the X server is specified in {{Path|/etc/X11/xorg.conf.d/30-keyboard.conf}} by the <var>XkbLayout</var> option. For details visit the [[Xorg/Guide#Configuring_the_keyboard|Xorg guide]] and the article about [[Keyboard_layout_switching#X11|Keyboard layout switching]].

=== systemd ===

With systemd the keymap layout for the X11 server can be set using the {{c|localectl}} command. First check the available X11 keymap layouts:

{{RootCmd|localectl list-x11-keymap-layouts}}

Then set the requested X11 keymap layout:

{{RootCmd|localectl set-x11-keymap it}}

Finally check if the X11 keymap layout was set correctly:

{{RootCmd|<nowiki>localectl | grep "X11 Layout"</nowiki>|output=<pre>
      X11 Layout: it
</pre>}}

== NLS ==

For message based localization to work in programs that support it and have the [https://packages.gentoo.org/useflags/nls <code>nls</code> (Native language support) USE flag], compile the programs with this flag set. Message strings are installed in {{Path|/usr/share/locale/<locale>/LC_MESSAGES/<package>.mo}} files. Most of the programs using nls also need the gettext library to extract and use localized messages. Of course, Portage will automatically install it when needed.

After enabling the <code>nls</code> USE flag some packages might need to be re-emerged:

{{Emerge|params+=--newuse --deep --with-bdeps=y|@world}}

== LINGUAS ==

There is also an additional <var>USE_EXPAND</var> flag called <var>[https://packages.gentoo.org/useflags/linguas_en LINGUAS]</var> <ref>[https://devmanual.gentoo.org/general-concepts/linguas/ LINGUAS] in Gentoo Development Guide</ref>, which affects the localization files that get installed in gettext-based programs, and decides which GUI language packs should be downloaded and installed for some specific software packages, such as [[Firefox]], [[Thunderbird]], [[KDE#Localization|kde-base/kde-l10n]] or [[LibreOffice|app-office/libreoffice-l10n]]. The variable takes in ''space''-separated list of language codes, and a suggested place to set it is {{Path|[[:/etc/portage/make.conf#LINGUAS|/etc/portage/make.conf]]}}: 

{{RootCmd|nano -w /etc/portage/make.conf|output=<pre>
## (Add in the LINGUAS variable. For instance, for German, Finnish and English:)
LINGUAS="de fi en"
</pre>}}

With <code>LINGUAS=""</code>, most ebuilds would install only the packages' default language but none of the <code>LC_MESSAGES</code> files. They would also not download and install any of the further language packs. For instance, the currently stable [[LibreOffice|app-office/libreoffice]] receives further language support through {{Package|app-office/libreoffice-l10n}} which supports download and installation of the language packs defined in <code>LINGUAS</code>. Since the origin language of libreoffice is <code>en_US</code>, it does not have <code>en_US</code> flag in {{Package|app-office/libreoffice-l10n}}. So with <code>LINGUAS=""</code>, libreoffice still supports <code>en_US</code>.

To see the status of GUI translation, hyphenation, spell checking and other localizations on the language, please refer to the [https://translations.documentfoundation.org/ LibreOffice translation web site].

For finer grained control the <var>USE_EXPAND</var> variables can be set per package in {{Path|[[:/etc/portage/package.use]]}}: 

{{FileBox|filename=/etc/portage/package.use|lang=bash|1=
www-client/firefox linguas_de linguas_pt_BR linguas_en_GB
}}

A list of installed programs making use of the <var>[https://packages.gentoo.org/useflags/linguas_en LINGUAS]</var> <var>USE_EXPAND</var> flag and their supported languages can be shown as follows:

{{Cmd|eix -I -U linguas}}

A list of <var>LINGUAS</var> values that can be used is provided as {{Path|/usr/portage/profiles/desc/linguas.desc}}: 

{{Cmd|grep -i french /usr/portage/profiles/desc/linguas.desc|output=<pre>
fr - French locale
fr_CA - French locale for Canada
fr_FR - French locale for France
</pre>
}}

After setting the <var>[https://packages.gentoo.org/useflags/linguas_en LINGUAS]</var> <var>USE_EXPAND</var> flag it may be necessary to re-emerge some packages:

{{Emerge|params+=--newuse --deep --with-bdeps=y|@world}}

== See also ==


* [[Handbook:AMD64/Installation/Base#Configure_locales|Configuring locales]] (Gentoo Handbooks)
* [[Evdev#Keyboard_layout|Keyboard layout]] inside the Evdev article
* [[X resources]]
* [[Localization/Guide/The_Euro_symbol|The Euro symbol]] ([http://unicode-table.com/en/20AC/ €]) for the console and in X

== External resources == 

* [http://www.gnu.org/software/libc/manual/html_node/Locales.html Locales and Internationalization] (gnu.org)

== References ==

{{reflist}}


[[Category:Localization]] {{Migrated|originalauthors=Alexander Holler, Steven Lucy, Benny Chuang, Lars Weiler, Tobias Scherbaum, Flammie Pirinen, nightmorph, klondike}}
