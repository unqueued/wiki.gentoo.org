<languages />

{{Metadata|abstract=Este artigo descreve as etapas para atualizar para um novo kernel.}}

Este artigo descreve as etapas para atualizar para um novo [[kernel]].

== Instalando e usando um novo kernel ==

Uma atualização do kernel pode ser uma boa ideia quando novas sources do kernel forem instaladas. Novas sources do kernel são às vezes instaladas durante a atualização do sistema executando o seguinte comando:

{{RootCmd|emerge --ask --update --deep --with-bdeps{{=}}y --newuse @world}}

Claro, eles podem ser instalados diretamente usando o comando (substituir ''gentoo-sources'' para ''hardened-sources'' utilizando o perfil hardened):

{{RootCmd|emerge --ask --update --deep --with-bdeps{{=}}y --newuse sys-kernel/gentoo-sources}}

A instalação de novas sources do kernel não fornece ao usuário um novo kernel. É necessário instalar um novo kernel a partir das novas fontes e, em seguida, reiniciar o sistema para realmente executar o novo kernel.

Fazer um novo kernel a partir das novas sources é basicamente o mesmo processo quando instalou o sistema. A diferença é que se pode usar a configuração do kernel antigo para criar uma configuração para o novo kernel. Usando a configuração antiga salva o usuário de passar por todas as opções do kernel (like {{c|make menuconfig}}) novamente.

A configuração do kernel é salva em um arquivo chamado {{Path|.config}} No diretório que contém as sources do kernel. Um novo kernel pode ter opções ou recursos que o kernel antigo não possui, ou pode não ter mais um recurso ou opção que o kernel antigo ainda possua. A configuração do kernel especifica se os recursos e opções de um kernel devem ser ativados ou não, talvez incorporados ao kernel, ou talvez construídos como módulos que podem ser carregados no kernel em execução sob demanda. Assim, o arquivo de configuração do novo kernel pode ter novas entradas que o arquivo de configuração do kernel antigo não possui e pode não ter mais entradas que estejam presentes no arquivo de configuração do kernel antigo.

Para lidar com essas alterações do arquivo de configuração, o arquivo de configuração do kernel antigo precisa ser convertido em uma configuração que pode ser usada com o novo kernel. Este artigo mostra como fazer um novo kernel a partir de novas sources do kernel com a conversão do arquivo de configuração do kernel antigo.

== Fazer um backup da configuração atual do kernel ==

É aconselhável fazer um backup da configuração do kernel para que as configurações anteriores não sejam perdidas. Afinal, muitos usuários dedicam um tempo considerável para descobrir a melhor configuração para o sistema, e perder essa informação é definitivamente desagradável.

É fácil fazer um backup da configuração atual do kernel:

{{RootCmd|cd /usr/src/linux
|cp .config ~/kernel-config-`uname -r`|}}

Desde que o symlink para as sources do kernel tenha sido definido corretamente, isso copia a configuração do kernel atualmente usado para o diretório home do root, renomeando a configuração para {{Path|kernel-config-}} seguido pela versão do kernel atual em execução.

== Definir symlink para novas sources do kernel ==

O symlink {{Path|/usr/src/linux}} deve sempre apontar para o diretório que contém as sources do kernel que atualmente é executado. Isso pode ser feito de três maneiras:

# Instalando as sources do kernel com <code>USE="symlink"</code>
# Configurando o link com eselect
# Atualização manual do link simbólico

=== Instalando as fontes do kernel com o USE flag symlink ===

Isso fará com que o {{Path|/usr/src/linux}} aponte para as fontes do kernel recém-instaladas.

Se necessário, ele ainda pode ser modificado posteriormente com um dos outros dois métodos.

=== Configurando o link com eselect ===

Para definir symlink com {{c|eselect}}:

{{RootCmd|eselect kernel list|output=<pre>
Available kernel symlink targets:
 [1] linux-3.14.14-gentoo *
 [2] linux-3.16.3-gentoo
</pre>}}

Isso fornece as sources de kernel disponíveis. O asterisco indica as sources escolhidas.

Para alterar as sources do kernel, e.g. Para a segunda entrada, faça:

{{RootCmd|eselect kernel set 2}}

=== Manually updating the symbolic link ===

To set the symbolic link manually:

{{RootCmd|ln -sf /usr/src/linux-3.16.3 /usr/src/linux
|ls -l /usr/src/linux|output=<pre>
lrwxrwxrwx 1 root root 19 Oct  4 10:21 /usr/src/linux -> linux-3.16.3-gentoo
</pre>}}

== Copy previous kernel configuration ==

The configuration of the old kernel needs to be copied to the new one. It can be found in several places:

* In the [[procfs]] filesystem, if the kernel option ''Enable access to .config through /proc/config.gz'' was activated in the present kernel:
: {{RootCmd|zcat /proc/config.gz > /usr/src/linux/.config}}

* From the old kernel. This will only work when the old kernel was compiled with CONFIG_IKCONFIG:
: {{RootCmd|/usr/src/linux/scripts/extract-ikconfig /path/to/old/kernel >/usr/src/linux/.config}}

* In the {{Path|/boot}} directory, if the configuration was installed there:
: {{RootCmd|cp /boot/config-3.14.14-gentoo /usr/src/linux/.config}}

* In the kernel directory of the currently-running kernel:
: {{RootCmd|cp /usr/src/linux-3.14.14-gentoo/.config /usr/src/linux/}}

* In the {{Path|/etc/kernels/}} directory, if <code>SAVE_CONFIG="yes"</code> is set in {{Path|/etc/genkernel.conf}} and {{c|[[genkernel]]}} was previously used:
: {{RootCmd|cp /etc/kernels/kernel-config-x86_64-3.14.14-gentoo /usr/src/linux/.config}}

== Configure the new kernel ==

To use the configuration of the old kernel with the new kernel, it needs to be converted.  The conversion can be done by running either {{c|make silentoldconfig}} or {{c|make olddefconfig}}. Use either, not both.

=== make silentoldconfig ===

The following configuration is like the text based configuration with {{c|make config}}.  For new configuration options, the user is asked for a decision. For example:

{{RootCmd|cd /usr/src/linux
|make silentoldconfig|output=<pre>
Anticipatory I/O scheduler (IOSCHED_AS) [Y/n/m/?] (NEW)
</pre>}}

The string ''(NEW)'' at the end of the line marks this option as new. Left to the string in square brackets are the possible answers: ''Y''es, ''n''o, ''m''odule or ''?'' to show the help. The recommend (i.e. default) answer is capitalized (here ''Y''). The help explains the option or driver.

Unfortunately {{c|make silentoldconfig}} doesn't show a lot more information for each option, such as the context, so it is sometimes difficult to give the right answer. In this case the best way to go is to remember the option name and revise it afterwards through one of the [[Kernel/Configuration#Configuration tools|graphical kernel configuration tools]].

=== make olddefconfig ===

If all new configuration options should be set to their recommended (i.e. default) values use {{c|make olddefconfig}}:

{{RootCmd|cd /usr/src/linux
|make olddefconfig}}

=== make help ===

Use {{c|make help}} to see other conversion methods available:

{{RootCmd|make help}}

== Build ==

{{Important|When external kernel modules are installed (like nvidia or zfs), it may be necessary to run {{c|make modules_prepare}} as described [[Kernel/Upgrade#Reinstall external kernel modules|below]] before building the kernel. Some modules cannot be installed or prepared before the kernel has been built.}}

{{Important|Do not forget to reconfigure the [[Bootloader|bootloader]] to account for the new kernel filenames, and rebuild the initramfs if one is used as well.}}

For this step, follow the steps in the [[Kernel/Configuration#Build|manual configuration]] article.

== Reinstalling external kernel modules ==

Any external kernel modules, such as [[:Category:Binary kernel modules|binary kernel modules]], need to be rebuilt for each new kernel. If the kernel has not been built yet, it has to first be prepared for the building of the external kernel modules:

{{RootCmd|make modules_prepare}}

Packages containing kernel modules can be rebuilt using the <code>@module-rebuild</code> set:

{{Emerge|@module-rebuild}}

== Solving build problems ==

When experiencing build problems while rebuilding the current kernel, it might help to sanitize the kernel sources. Make sure to backup the {{Path|.config}} file first, as the operation will remove it. Make sure not to use a {{Path|.bak}} or {{Path|~}} suffix as backup as {{c|make distclean}} will clean those up as well.

{{RootCmd|cp .config /usr/src/kernel_config_bk
|make distclean
|mv /usr/src/kernel_config_bk .config}}

== Removing old kernels ==

See the [[Kernel/Removal|kernel removal]] article. 

== External resources ==

* [http://kernelnewbies.org/LinuxChanges kernel changelog with some explanations of new features]

[[Category:Kernel]]
