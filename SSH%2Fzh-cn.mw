<languages />

{{Metadata|abstract=SSH (Secure Shell) 是一个加密的终端程序，用于替代类Unix操作系统上传统的telnet工具。}}

{{InfoBox stack
|{{InfoBox homepage|http://www.openssh.org|header=true}}
|{{InfoBox wikipedia|Secure Shell}}
}}
'''SSH''' ('''S'''ecure '''SH'''ell) 是一个加密的终端程序，用于替代类Unix操作系统上传统的 [[Wikipedia:telnet|telnet]] 工具。

SSH已经发展成为一组软件系列，除了提供用于远程终端访问的'''ssh'''这个主要的程序，还包括其他的工具如 '''scp''' ('''s'''ecure '''c'''o'''p'''y) 和 '''sftp''' ('''s'''ecure '''f'''ile '''t'''ransfer '''p'''rotocol)。

最初，SSH并不是免费的。然而，当今最流行并成为实际标准的SSH实现是 [http://www.openbsd.org/ OpenBSD] 的OpenSSH，它在Gentoo中已预安装。

== 安装 ==

多数的部署已经安装了OpenSSH(通过{{Package|net-misc/openssh}}软件包)。这个软件包使用的USE标记如下：

{{USEflag|package=net-misc/openssh
|bindist
|hpn
|pam
|tcpd
|kerberos
|ldap
|libedit
|selinux
|skey
|static
|X
|X509
}}

修改USE标记之后，不要忘记重新编译OpenSSH:

{{emerge|net-misc/openssh}}

== 运行 OpenSSH ==

=== 服务器端 ===
OpenSSH 服务器可以通过 '''/etc/init.d/ssh start'''，'''/etc/init.d/ssh stop''' 和 '''/etc/init.d/ssh restart''' 来控制，就像其它 [[OpenRC]] 管理的服务一样。

将openssh添加到默认的运行级别，如果之前没有做的话。

{{RootCmd|rc-update add sshd default}}

用下面的命令启动sshd守护进程：

{{RootCmd|/etc/init.d/sshd start}}

OpenSSH服务器可以像其他的由[[OpenRC]]管理的服务那样控制：

{{RootCmd|/etc/init.d/sshd start
|/etc/init.d/sshd stop
|/etc/init.d/sshd restart}}

{{Note/zh-cn|<code>/etc/init.d/sshd restart</code>并不会影响到正在运行的到服务器端的SSH连接。}}

== 配置 ==

=== 创建密钥 ===

为了提供一个安全的shell，加密的密钥用于管理SSH提供的加密，解密和哈希功能。 

在第一次启动SSH服务的时候，会生成系统密钥。密钥可以使用<code>ssh-keygen</code>（重新）生成。

{{Note/zh-cn|将例子中的<code>SecretPassphrase</code>替换成你自己的密码。}}

生成用于SSH协议版本1的密钥（通常并不启用，因为已经被废弃，取而代之的是协议版本2）：

{{RootCmd|/usr/bin/ssh-keygen -t rsa1 -b 1024 -f /etc/ssh/ssh_host_key -N "SecretPassphrase"}}

生成SSH协议2的密钥（DSA和RSA算法）：

{{RootCmd|/usr/bin/ssh-keygen -d -f /etc/ssh/ssh_host_dsa_key -N "SecretPassphrase"
|/usr/bin/ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N "SecretPassphrase"}}

=== 服务器端配置 ===

SSH服务器配置文件通常是 {{Path|/etc/ssh/sshd_config}}，虽然也有可能通过OpenRC的{{Path|/etc/conf.d/sshd}}文件进行进一步的配置，包括修改配置文件的位置。关于如何配置服务器的详细信息请参考''sshd_config'' [[man page]]。

您也应该学习这篇偏重于安全配置的[https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html 指南]。

=== 客户端配置 ===

'''ssh''' 客户端与相关的程序（'''scp'''，'''sftp''' 等等）可以通过下面的文件进行配置：
* {{Path|~/.ssh/config}}
* {{Path|/etc/ssh/ssh_config}}

更多的信息请阅读<code>ssh_config</code>手册：

{{Cmd|man ssh_config}}

=== 无密码验证 ===

对于管理 [[git]] 服务器非常便利。

==== 客户端 ====

在客户端执行下面的命令：

{{Cmd|ssh-keygen -t rsa|output=<pre>
Generating public/private rsa key pair.
Enter file in which to save the key (/home/larry/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/larry/.ssh/id_rsa.
Your public key has been saved in /home/larry/.ssh/id_rsa.pub.
The key fingerprint is:
de:ad:be:ef:15:g0:0d:13:37:15:ad:cc:dd:ee:ff:61 larry@client
The key's randomart image is:
+--[ RSA 2048]----+
|                 |
|     .           |
| . .. n   .      |
|   . (: . .      |
|  o   . . : .    |
| . ..: >.> .     |
|  * ?. .         |
| o.. .. ..       |
| :. .  ! .       |
+-----------------+
</pre>}}

==== 服务器 ====

确保服务器上存在用户的帐号，然后把客户端的{{Path|id_rsa.pub}}文件拷贝到服务器端的{{Path|~/.ssh/authorized_keys}}文件。

==== 单机测试 ====

上面的步骤可以在本地测试：

{{Cmd|ssh-keygen -t rsa|output=<pre>
Generating public/private rsa key pair.
Enter file in which to save the key (/home/larry/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
...
</pre>}}

{{Cmd|mv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys}}

{{Cmd|ssh localhost}}

== 故障排除 ==

有三种不同级别的调试模式可以帮助排除故障。配合"-v"参数ssh会输出关于其进度的调试信息。这有助于调试连接、验证和配置的问题。多个-v参数会增加调试信息的详细程度。最多可以使用3个-v参数。

{{Cmd|ssh example.org -v
|ssh example.org -vv
|ssh example.org -vvv}}

=== 长连接被关闭 ===

许多互联网接入设备进行网络地址转换 ([[NAT]])，使在专用网络（典型的例子像家里或者某个营业场所）内的设备可以访问外部网络如互联网，尽管该设备只拥有专用网络上的一个IP地址。不幸的是，不是所有的NAT设备都是一样的，其中一些会错误的关闭那些长时间连接，不经常使用的TCP连接，比如SSH使用的连接。这一问题通常的表现是突然无法和远程的服务器交互，尽管'''ssh'''客户端程序并未退出。

OpenSSH的客户端和服务器可以被配置为发送一个'keep alive'，或不可见的消息，旨在保持并确认连接的实时状态。
* 要保证'''所有的客户端链接到你的本地服务器的连接'''都保持活跃，在{{Path|/etc/ssh/sshd_config}}文件中设置''ClientAliveInterval 30'' (或者其他的值，单位为秒)。
* 要保证'''你本地客户端到所有服务器的连接'''都保持活跃，在{{Path|/etc/ssh/ssh_config}}文件中设置''ServerAliveInterval 30'' (或者其他的值，单位为秒)。

=== X11转发/隧道不工作 ===

<b>问题</b>: 在你对配置文件做了必要的修改以允许X11转发, 你发现X应用程序在服务器端执行却没有转发的客户端。

<b>解决办法</b>: 可能是在SSH登录到远程服务器或者主机的过程中，<code>$DISPLAY</code>变量被取消了或者在SSH session设置这一变量之后又被重设了。

远程登录后按如下步骤测试这一现象：

{{Cmd|echo $DISPLAY|output=<pre>
localhost:10.0
</pre>}}

如果服务器端设置了<code>X11UseLocalhost no</code>，通常你应该得到类似于"localhost:10.0"或者"localhost2.local:10.0"这样的结果。如果你得到的结果是":0.0"，请检查并确定你没有在{{Path|$HOME/.bash_profile}}中取消了或者初始化了<code>$DISPLAY</code>变量。如果是的话，删除或者注释掉你自定义初始化<code>$DISPLAY</code>的语句，或者在SSH登录的时候阻止{{Path|bash_profile}}的执行。

{{Cmd|ssh -t me@localhost2 bash --noprofile}}

一个小技巧是在{{Path|bashrc}}中将此命令定义为一个alias。

== See also ==
* [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html Securing OpenSSH] - Gentoo developer documentation.
* [http://www.gentoo.org/doc/en/articles/openssh-key-management-p1.xml OpenSSH Key Management Part1] - Gentoo documentation, have a look at all 3 parts.
* [[Keychain|Gentoo Linux Keychain Guide]]
* [[autossh]] - Detects when SSH connections drop and auto-reconnects.


[[Category:SSH]]
[[Category:Server]]
[[Category:Daemons]]
