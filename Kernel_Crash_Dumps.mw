This article explains how to capture the kernel crash dumps ('''kdump'''). Kdumps are produced by kernel panic or lockup.
To be simple, just a single kernel is used both for the ordinary system and recovery. The described method is almost distro independent.
This article is based on [http://rich0gentoo.wordpress.com/2011/11/11/kdump-on-gentoo/ KDump on Gentoo] by rich0, and the first version is posted by the author.

== Installation ==

=== Kernel ===
You need to activate the following kernel options:
{{Kernel||
Processor type and features --->
    [*] kexec system call
    [*] kernel crash dumps
    [*] Build a relocatable kernel
Kernel hacking  --->
    [*] Kernel debugging
    Compile-time checks and compiler options --->
        [*] Compile the kernel with debug info
File systems  --->
    Pseudo filesystems  --->
        -*- /proc file system support
        [*]   /proc/vmcore support
}}

=== Software ===
Install {{Package|sys-apps/kexec-tools}}:
{{USEflag|package=sys-apps/kexec-tools
|lzma
|xen
|zlib+yes
}}
{{Emerge|kexec-tools}}

== Configuration ==

=== local.d script ===
Create {{Path|/etc/local.d/kdump.start}} containing:
{{File|/etc/local.d/kdump.start||<pre>
#!/bin/bash
kexec -p /[path-to-kernel] --append="root=[root-device] single irqpoll maxcpus=1 reset_devices"
</pre>}}
If you are using an [[initramfs]] you also have to pass that as a parameter.
For example:
{{File|/etc/local.d/kdump.start||<pre>
#!/bin/bash
kexec -p /boot/kernel-genkernel-x86_64-3.16.1-gentoo \
--initrd=/boot/initramfs-genkernel-x86_64-3.16.1-gentoo \
--append="root=/dev/mapper/lvm-slash single irqpoll maxcpus=1 reset_devices dolvm softlevel=kdump"
</pre>}}

Now make this file executable:
{{RootCmd|chmod u+x /etc/local.d/kdump.start}}

Note that your kernel has to be readable. (A typical gentoo config leaves {{Path|/boot}} unmounted, so you'll either need to remove ''noauto'' from your [[fstab]] or place a copy of your kernel elsewhere.)

=== Bootloader ===
To the kernel boot option, add ''crashkernel=64M'' for up to around 12GB of system RAM. 

== Usage ==
First, run the above script.
{{RootCmd|/etc/local.d/kdump.start}}
It loads the rescue kernel image which is run after kernel crash.

Whenever you get a kernel panic or lockup (hard/soft if the kernel is set to detect them), kexec runs the kernel in crash mode, relocated to a reserved area of memory.  The rest of RAM will be untouched. When the system boots up log in and copy {{Path|/proc/vmcore}} to a file - this is your crash dump. Then reboot your system to get back to a normal configuration; you shouldn't continue to operate in this state.

You can force a kernel panic by executing the following command (do not forget to save all data, log-out other users and leave the filesystems in a clean state by the invocation of sync before doing this):
{{RootCmd|<nowiki>echo c | tee /proc/sysrq-trigger</nowiki>}}

== External resources==
* [http://www.mjmwired.net/kernel/Documentation/kdump/ Kernel documentation on kdump]

[[Category:Kernel]]
