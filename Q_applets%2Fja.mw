{{Lowercase title}}
<languages />
{{InfoBox stack
|{{InfoBox project|Portage-Tools|header=true}}
|{{InfoBox github|gentoo/portage-utils}}
|{{InfoBox gitweb|portage-utils.git}}
}}

{{Metadata|abstract=QアプレットはCで書かれた小さくて素早い、portageのヘルパーツールです。このガイドはapp-portage/portage-utilsパッケージとしても知られる、これらヘルパーツールの基本的な使い方を説明します。}}

QアプレットはCで書かれた小さくて素早い、portageのヘルパーツールです。このガイドは、{{Package|app-portage/portage-utils}} パッケージで提供されているこれらヘルパーツールの基本的な使い方を説明します。

{{Package|app-portage/portage-utils}} パッケージはCで書かれた非常に素早いユーティリティーのコレクションであり、 {{Package|app-portage/gentoolkit}} に比べてより素早く、しかし限定的な代替を提供します。qアプレットは [[Gentoolkit|gentoolkit]] を置き換えることを意図したものではないことに留意してください。このユーティリティーは [[Gentoolkit|gentoolkit]] の同等なものよりもかなり効率的であり、Portageを繰り返し呼ぶ必要があるスクリプト内での使用により適していますが、これらは同じ機能を提供するものでは''ありません''。qアプレットは[https://devmanual.gentoo.org/ebuild-writing/using-eclasses/index.html eclass] を考慮しませんし、{{c|revdep-rebuild}} や {{c|glsa-check}} のようなツールも提供しません。 

__TOC__

== インストール ==

=== USE フラグ ===

{{USEflag|package=app-portage/portage-utils}}

=== Emerge ===

Q アップレットをインストールします:

{{Emerge|app-portage/portage-utils}}

== 設定 ==

アップレットを使用する前に、まずキャッシュを初期化します:

{{RootCmd|q -r}}

== 使い方 ==

=== 呼び出し ===

{{c|man q}} または {{c|q --help}} と入力することによって、 {{Package|app-portage/portage-utils}} が提供しているアプリケーションの完全なリストが表示されます。このガイドでは最も役立つ機能について短く言及するだけにとどめ、それぞれのアプリケーションに関する情報全てを含めることはしませんので、それぞれのユーティリティについての説明はmanページをご覧ください。

短い説明文付きで利用可能なアプレットを見るには、{{c|q --help}} を実行します:

{{Cmd|q --help|output=<pre>
Usage: q <applet> <args>  : invoke a portage utility applet
  
Currently defined applets:
        q <applet> <args> : virtual applet
    qatom <pkg>           : split atom strings
   qcache <action> <args> : search the metadata cache
   qcheck <pkgname>       : verify integrity of installed packages
 qdepends <pkgname>       : show dependency info
    qfile <filename>      : list all pkgs owning files
    qgrep <misc args>     : grep in ebuilds
    qlist <pkgname>       : list files owned by pkgname
     qlop <pkgname>       : emerge log analyzer
   qmerge <pkgnames>      : fetch and merge binary package
     qpkg <misc args>     : manipulate Gentoo binpkgs
  qsearch <regex>         : search pkgname/desc
    qsize <pkgname>       : calculate size usage
    qtbz2 <misc args>     : manipulate tbz2 packages
     quse <useflag>       : find pkgs using useflags
    qxpak <misc args>     : manipulate xpak archives
  
Options: -[irmM:vqChV]
  -i, --install        * Install symlinks for applets
  -r, --reinitialize   * Reinitialize ebuild cache
  -m, --metacache      * Reinitialize metadata cache
  -M, --modpath  <arg> * Module path
  -v, --verbose        * Make a lot of noise
  -q, --quiet          * Tighter output; suppress warnings
  -C, --nocolor        * Don't output color
  -h, --help           * Print this help and exit
  -V, --version        * Print version and exit</pre>
}} 

=== あるファイルが含まれているパッケージを見つける方法 (qfile) ===

{{c|qfile}} コマンドは、ファイルがどのパッケージに属しているか見つけます: 

{{Cmd|qfile /etc/fonts/fonts.conf|output=<pre>
media-libs/fontconfig (/etc/fonts/fonts.conf)
</pre>}}

{{Cmd|qfile /usr/share/keymaps/atari/atari-uk-falcon.map.gz|output=<pre>
sys-apps/kbd (/usr/share/keymaps/atari/atari-uk-falcon.map.gz)
</pre>}}

=== パッケージの完全性確認 (qcheck) ===

パッケージによってインストールされたファイルのMD5チェックサムや更新日時を確認するには、{{c|qcheck}} アプリケーションを使います: 

{{Cmd|qcheck portage-utils|output=<pre>
Checking app-portage/portage-utils-0.1.13 ...
  * 36 out of 36 files are good
</pre>}}

もちろん、インストール後に変更された全てのファイルがここで報告されます。インストール後に手動で編集された設定ファイルが報告されても、心配はありません。 

=== あるパッケージに依存しているパッケージの一覧表示 (qdepends) ===

もちろんあるパッケージに依存しているパッケージ全てのリストを表示するアプリケーションもあります。{{c|qdepends}} としてお使いいただけます。<code>-a</code> オプションを使うことでパッケージ毎の全ての <var>DEPEND</var>、<var>RDEPEND</var>、<var>PDEPEND</var> 情報を表示します。 

{{Cmd|qdepends -a pygtk|output=<pre>
 * DEPEND
dev-python/pygtk-2.8.2: >=dev-lang/python-2.3 >=x11-libs/gtk+-2.8.0
>=dev-libs/glib-2.8.0 >=x11-libs/pango-1.10.0 >=dev-libs/atk-1.8.0
>=gnome-base/libglade-2.5.0 >=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl >=x11-libs/gtkglarea-1.99
>=dev-util/pkgconfig-0.9 sys-devel/patch
 * RDEPEND
dev-python/pygtk-2.8.2: >=dev-lang/python-2.3 >=x11-libs/gtk+-2.8.0
>=dev-libs/glib-2.8.0 >=x11-libs/pango-1.10.0 >=dev-libs/atk-1.8.0
>=gnome-base/libglade-2.5.0 >=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl >=x11-libs/gtkglarea-1.99
 * PDEPEND
</pre>}}

=== あるパッケージに依存するすべてのパッケージを(インストールされているかどうかを問わず)一覧表示する (qgrep) ===

qアプレットを使って、ある ebuild の名前 (以下の例では"libechonest"とします) に言及している ebuild を素早く探すことができます:

{{Cmd|<nowiki>qgrep -H libechonest | cut -f1 -d":" | uniq</nowiki>|output=<pre>
media-libs/libechonest/libechonest-2.0.2.ebuild
media-libs/libechonest/libechonest-2.2.0-r1.ebuild
media-libs/libechonest/libechonest-2.3.0.ebuild
media-libs/libechonest/libechonest-2.3.1.ebuild
media-libs/libechonest/libechonest-2.3.1-r1.ebuild
media-libs/libechonest/libechonest-9999.ebuild
media-sound/clementine/clementine-1.2.3.ebuild
media-sound/clementine/clementine-1.2.3-r1.ebuild
media-sound/clementine/clementine-1.3.1-r1.ebuild
media-sound/tomahawk/tomahawk-0.8.4-r3.ebuild
media-sound/tomahawk/tomahawk-9999.ebuild
</pre>}}

=== あるebuildに属するファイルの一覧表示 (qlist) ===

{{c|qlist}} は、指定した ebuild に属する全てのファイルの一覧を提供します。 

{{Cmd|qlist vim|output=<pre>
/usr/bin/gvim
/usr/bin/gvimdiff
/usr/bin/evim
/usr/bin/eview
/usr/bin/gview
/usr/bin/rgvim
[...]
</pre>}}

=== あるUSEフラグを使っているパッケージの検索 (quse) ===

使用している USE フラグの一覧を表示するには、{{c|quse}} をroot権限で実行してください。最初のebuildキャッシュ生成・更新時には時間がかかることがあります。 

{{Cmd|quse firefox|output=<pre>
app-misc/tracker/tracker-0.12.10-r1.ebuild applet doc eds elibc_glibc exif firefox-bookmarks flac flickr gif
[...]
</pre>}}

=== パッケージサイズの検索 (qsize) ===

パッケージの大きさを表示させるには、{{c|qsize}} アプリケーションを使用します: 

{{Cmd|qsize vim|output=<pre>
app-editors/gvim-6.4: 10 files, 7 non-files, 2327.516 KB
app-editors/vim-6.4: 6 files, 2 non-files, 2058.14 KB
app-editors/vim-core-6.4: 1024 files, 68 non-files, 10950.984 KB
[...]
</pre>}}

=== Portageツリーの検索 (qsearch) ===

{{Package|app-portage/portage-utils}} の中で最も強力なツールの一つが {{c|qsearch}} です。このツールは {{c|emerge -s}} を実行するよりもずっと速くPortageツリーを検索することができます。 

いくつか使い方の例を挙げます: 

{{Cmd|qsearch terminus|output=<pre>
media-fonts/terminus-font A clean fixed font for the console and X11
</pre>}}

The homepage of packages can be queried using the <code>-H</code> option:

{{Cmd|qsearch -H terminus|output=<pre>
media-fonts/terminus-font http://www.is-vn.bg/hamster/jimmy-en.html
</pre>}}

他の例として、Jabberクライアントについて見てみましょう:

{{Cmd|qsearch -S "jabber client"|output=<pre>
app-emacs/emacs-jabber A Jabber client for Emacs.
net-im/gajim Jabber client written in PyGTK
net-im/gnome-jabber Gnome Jabber Client
net-im/gossip Lightweight Jabber client for GNOME
net-im/imcom Python commandline Jabber Client
net-im/psi QT 3.x Jabber Client, with Licq-like interface
net-im/tkabber Featureful Jabber client for tcl/tk.
x11-themes/psi-themes Iconsets for Psi, a QT 3.x Jabber Client
</pre>}}

=== Extracting information from emerge logs (qlop) ===

There is also a tool that allows to extract useful information from the {{Path|emerge.log}} file. It is called {{c|qlop}} and it can be useful when package compilation times need to be estimated or to compare build times with other systems. It also allows to check what's compiling at the moment and how long it will probably take - which is handy when working in the console and don't have any other means to check it. 

{{Package|dev-lang/perl}} のビルド作業がおよそどのくらいかかるか知りたいときには:

{{Cmd|qlop -tH perl|output=<pre>
perl: 7 minutes, 52 seconds for 4 merges
</pre>}}

いま何がemergeされていて、その作業に既にどのくらいの時間が経過したのか、見てみましょう:

{{Cmd|qlop -c|output=<pre>
* perl-5.8.8-r23
    started: Mon May 21 12:41:11 2007
    elapsed: 19 seconds
</pre>}}

== 参考 ==

* [[Gentoolkit]] - A suite of tools to ease the administration of a Gentoo system.
* [[Q_applets/Qcheck|Qcheck]] - A command-line tool used verify integrity of installed packages.
{{Migrated|originalauthors=Åukasz Damentko, Joshua Saddler, and Marcelo Góes}}

[[Category:Portage tools]]
