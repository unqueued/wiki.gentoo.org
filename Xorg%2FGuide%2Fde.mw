<languages />

{{Metadata|abstract=Xorg ist der X Window Server, der es Benutzern gestattet stets eine grafische Umgebung zur Verfügung zu haben. Dieser Leitfaden befasst sich damit was Xorg ist, wie man es installiert und welche unterschiedlichen Konfigurations-Optionen es gibt.}}

Xorg ist der X Window Server, der es Benutzern gestattet stets eine grafische Umgebung zur Verfügung zu haben. Dieser Leitfaden befasst sich damit was Xorg ist, wie man es installiert und welche unterschiedlichen Konfigurations-Optionen es gibt.

== Was ist der X Window Server? ==

=== Grafisch gegen Kommandozeile ===

Der durchschnittliche Benutzer mag vielleicht bei dem Gedanken beängstigt sein, Befehle eintippen zu müssen. Warum sollte er sich nicht per grafischer Benutzeroberfläche seinen Weg durch die Freiheit von Gentoo (und Linux im allgemeinen) klicken können? Nun, natürlich können sie das machen! Linux bietet eine grosse Auswahl an auffälligen Benutzerschnittstellen und Umgebungen, die Sie auf der Basis Ihrer vorhandenen Installation installieren können. 

Dies ist eine der grössten Überraschungen auf die neue Benutzer stossen: Eine grafische Benutzerschnittstelle ist nichts anderes als ein Programm, das auf Ihrem System läuft. Es ist ''kein'' Teil des Linux Kernel oder irgendein anderes Interna des Systems. Es ist ein mächtiges Werkzeug, das die grafischen Fähigkeiten Ihres Arbeitsplatzrechners ermöglicht. 

Weil Standards wichtig sind, wurde ein Standard für die Darstellung und das Verschieben von Fenstern auf einem Bildschirm, die Interaktion mit dem Benutzer über Maus, Keyboard und andere Grundlagen, aber dennoch wichtige Aspekte geschaffen und als ''X Window System'' bezeichnet; Allgemein abgekürzt als ''X11'' oder nur ''X''. Es wird auf Unix, Linux und Unix-ähnlichen Betriebssystemen überall auf der Welt verwendet. 

Das Programm das Linux Nutzern die Möglichkeit bietet grafische Benutzerschnittstellen zu verwenden und das den X11 Standard nutzt ist Xorg-X11, eine Abspaltung des XFree86 Projektes. XFree86 hat sich dazu entschlossen eine Lizenz zu verwenden, die möglicherweise nicht mit der GPL Lizenz kompatibel ist. Es wird daher empfohlen Xorg zu verwenden. Der offizielle Portage-Tree stellt keine XFree86 Paket mehr zur Verfügung.

=== Das X.org Projekt ===

Das [http://www.x.org X.org] Projekt erschuf und pflegt eine frei verteilbare Open Source Implementierung des X11 Systems. Es ist eine Open Source X11-basierte Desktop Infrastruktur. 

Xorg bietet eine Schnittstelle zwischen Ihrer Hardware und der grafischen Software, die sie benutzen wollen. Zudem ist Xorg komplett "Netzwerk-bewusst". Das bedeutet, dass sie eine Anwendung auf einem System laufen lassen können, während Sie sie auf einem anderen betrachten. 

== Installation ==

Bevor Sie Xorg installieren können, müssen Sie Ihr System dafür vorbereiten. Als erstes richten wir den Kernel für die Unterstützung von Eingabegeräten und Grafikkarten ein. Dann bereiten wir {{Path|/etc/portage/make.conf}} vor, so dass die richtigen Treiber und Xorg Pakete kompiliert und installiert werden. 

=== Eingabetreiber-Unterstützung ===

In der Voreinstellung nutzt Xorg <code>evdev</code><ref name=evdev>[[evdev]]</ref>, einen Universaltreiber für Eingabegeräte. Zur Aktivierung von <code>evdev</code> müssen Sie eine Veränderung in Ihrer Kernel-Konfiguration vornehmen. Lesen Sie den [[Kernel/Gentoo_Kernel_Configuration_Guide/de|Kernel Konfigurationsleitfaden]], wenn Sie nicht wissen wie Sie Ihren Kernel konfigurieren. 

{{KernelBox|title=evdev im Kernel aktivieren|<pre>
Device Drivers --->
  Input device support --->
  <*>  Event interface
</pre>
}}

=== Kernel Mode-Setting ===

Moderne Open Source Grafikkartentreiber stützen sich auf Kernel Mode-Setting (KMS). KMS bietet einen verbesserten grafischen Systemstart mit weniger flackern, schnellerer Benutzerumschaltung, einer eingebauten Framebuffer Konsole, nahtlose Umschaltung von der Konsole zu Xorg und weiteren Merkmalen. KMS kollidiert mit alten Framebuffer Treibern, die in Ihrer Kernel Konfiguration '''deaktiviert''' bleiben müssen. 

Bereiten Sie als erstes Ihren Kernel für KMS vor. Sie müssen diesen Schritt unabhängig davon machen, welchen Xorg Grafikkartentreiber Sie verwenden. 

{{KernelBox|title=Framebuffer konfigurieren|<pre>
Device Drivers --->
  Graphics support --->
    Support for frame buffer devices --->
    ## (Deaktivieren Sie alle Treiber, eingeschlossen VGA, Intel, nVidia, und ATI.)
 
    ## (Weiter unten aktivieren sie die grundlegende Konsole-Unterstützung. KMS verwendet dies.)
    Console display driver support --->
      <*>  Framebuffer Console Support
</pre>
}}

Als Nächstes konfigurieren Sie den Kernel zur Verwendung der richtigen KMS Treiber für Ihre Grafikkarte. Intel, nVidia, und AMD/ATI sind die am häufigsten gebrauchten Karten. Folgen die der entsprechenden Kode-Auflistung unten. 

Für Intel Karten<ref>https://wiki.gentoo.org/wiki/Intel#Kernel</ref>: 

{{KernelBox|title=Intel Einstellungen|<pre>
Device Drivers --->
  Graphics support --->
    /dev/agpgart (AGP Support) --->
    <*>  Intel 440LX/BX/GX, I8xx and E7x05 chipset support
    Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
    <*>  Intel 8xx/9xx/G3x/G4x/HD Graphics
    [*]    Enable modesetting on intel by default
</pre>
}}

Für nVidia Karten: 

{{KernelBox|title=nVidia Einstellungen|<pre>
Device Drivers --->
  Graphics support --->
    Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
    <*>    Nouveau (nVidia) cards
</pre>
}}

Für neuere AMD/ATI Karten ([[ATI_FAQ/de|RadeonHD 2000 und aufwärts]]), emergen Sie {{Package|x11-drivers/radeon-ucode}} oder {{Package|sys-kernel/linux-firmware}}. Sobald Sie eines dieser Pakete installiert haben, konfigurieren Sie den Kernel wie im [[Radeon#Firmware|Firmware-Abschnitt]] des [[Radeon|Radeon Artikels]] beschrieben: 

{{KernelBox|title=AMD/ATI Einstellungen|<pre>
## (Stellen Sie den Kernel zur Nutzung der Radeon-ucode Firmware ein)
Device Drivers --->
  Generic Driver Options --->
  [*]  Include in-kernel firmware blobs in kernel binary
  ## # ATI Karten spezifisch, (siehe Radeon Seite für Details zur Einbindung von Firmware)
   (radeon/<YOUR-MODEL>.bin ...)
  ## # all:
   (/lib/firmware/) Firmware-Blobs Wurzelverzeichnis
 
## (Aktivierung Radeon KMS Unterstützung)
Device Drivers --->
  Graphics support --->
  <*>  Direct Rendering Manager --->
  <*>    ATI Radeon
  [*]      Enable modesetting on radeon by default
  [ ]      Enable userspace modesetting on radeon (DEPRECATED)
</pre>
}}

{{Note|Alte Radeon-Karten (X1900 Serien und älter) benötigen das Paket {{Package|x11-drivers/radeon-ucode}} oder jegliche Firmware-Konfiguration nicht. Aktivieren Sie einfach den Direct Rendering Manager und ATI Radeon Mode-Setting.}}

{{Note|Linux Kernel >{{=}} 3.9 haben die Option ''Enable modesetting on radeon by default'' nicht mehr, da sie bereits standardmässig inbegriffen ist.}}

Nun da KMS aufgesetzt ist, fahren Sie mit der Vorbereitung von {{Path|/etc/portage/make.conf}} im nächsten Abschnitt fort.

=== make.conf Konfiguration ===

Da nun der Kernel vorbereitet ist, müssen zwei wichtige Variablen in der Datei {{Path|/etc/portage/make.conf}} vor der Installation von Xorg konfiguriert werden. 

Die erste Variable ist <code>VIDEO_CARDS</code>. Sie wird verwendet um den Grafikkarten-Treiber einzustellen den Sie verwenden möchten und basiert für gewöhnlich auf der Art von Grafikkarte die sie haben. Die am häufigsten verwendeten Einstellungen sind <code>nouveau</code> für nVidia Karten oder <code>radeon</code> für ATI Karten. Beide verfügen über aktiv entwickelte, gut unterstützte Open Source Treiber. 

{{Note|Sie können ebenfalls die proprietären Treiber von nVidia und AMD/ATI, <code>nvidia</code> bzw. <code>fglrx</code> versuchen. Die Einrichtung der proprietären Treiber ist allerdings abseits des Fokus dieser Anleitung. Bitte lesen Sie den [[NVidia/nvidia-drivers/de|Gentoo Linux nVidia Leitfaden]] und die [[ATI_FAQ/de|Gentoo Linux ATI FAQ]]. Wenn Sie nicht wissen für welchen Treiber Sie sich entscheiden sollen, schauen Sie sich diese Anleitungen an, um weitere Informationen zu erhalten.}}

Der <code>intel</code> Treiber kann für Desktop-PCs und Laptops mit gewöhnlichen integrierten Grafik-Chipsätzen von Intel verwendet werden. 

{{Note|<code>VIDEO_CARDS</code> kann mehr als einen Treiber beinhalten, alle durch ein Leerzeichen voneinander getrennt.}}

Die zweite Variable ist <code>INPUT_DEVICES</code>. Mit ihr wird angegeben, welche Treiber für die Eingabegeräte kompiliert werden sollen. Sie auf <code>evdev</code><ref name=evdev /> zu setzten sollte in den meisten Fällen gut funktionieren. Falls Sie alternative Eingabegeräte wie ein Synaptics Touchpad eines Laptops verwenden, stellen  Sie sicher es <code>INPUT_DEVICES</code> hinzuzufügen. 

Entschließen Sie sich welche Treiber benutzt werden sollen und fügen Sie die notwendigen Einstellungen der Datei {{Path|/etc/portage/make.conf}} hinzu: 

{{CodeBox|title=make.conf Beispieleinträge|lang=bash|1=
## (Für Maus, Tastatur und Synaptics Touchpad Unterstützung)
INPUT_DEVICES="evdev synaptics"
## (Für nVidia Karten)
VIDEO_CARDS="nouveau"
## (Für AMD/ATI Karten)
VIDEO_CARDS="radeon"
}}

Wenn die vorgeschlagen Einstellungen nicht funktionieren, emergen Sie das Paket {{Package|x11-base/xorg-drivers}} (siehe die Schritte unterhalb). Prüfen Sie alle verfügbaren Optionen und wählen Sie jene, die auf das System zutreffen. Dieses Beispiel ist auf ein System mit Keyboard, Maus, Synaptics Touchpad und Radeon Grafikkarte zugeschnitten. 

{{Emerge|x11-base/xorg-drivers||params+=--verbose --pretend|output=<pre>
 
These are the packages that would be merged, in order:
 
Calculating dependencies... done!
[ebuild   R   ]  x11-base/xorg-drivers-1.9  INPUT_DEVICES="evdev synaptics
-acecad -aiptek -elographics% -fpit% -joystick -keyboard -mouse -penmount -tslib
-virtualbox -vmmouse -void -wacom"
VIDEO_CARDS="radeon -apm -ark -ast -chips -cirrus -dummy -epson -fbdev -fglrx
(-geode) -glint -i128 (-i740) (-impact) -intel -mach64 -mga -neomagic (-newport)
-nouveau -nv -nvidia -r128 -rendition -s3 -s3virge -savage -siliconmotion -sis
-sisusb (-sunbw2) (-suncg14) (-suncg3) (-suncg6) (-sunffb) (-sunleo) (-suntcx)
-tdfx -tga -trident -tseng -v4l -vesa -via -virtualbox -vmware (-voodoo) (-xgi)"
0 kB
</pre>
}}

Nach dem Setzen aller notwendiger Variablen kann Xorg installiert werden:

{{Emerge|x11-base/xorg-server}}

{{Note|Das Meta-Paket {{Package|x11-base/xorg-x11}} könnte anstelle des leichtgewichtigeren {{Package|x11-base/xorg-server}} installiert werden. Funktional sind {{Package|x11-base/xorg-x11}} und {{Package|x11-base/xorg-server}} das Gleiche. Allerdings bringt {{Package|x11-base/xorg-x11}} viele weitere Pakete mit sich, die die meisten Systeme wahrscheinlich nicht benötigen. Zusätzliche Pakete binden eine große Auswahl an Schriften in vielen Sprachen ein. Diese sind für ein funktionierendes X11 Grundgerüst nicht notwendig.}}

Wenn die Installation abgeschlossen ist, brauchen einige Umgebungsvariablen eine Reinitialisierung bevor es weiter geht. Lesen Sie das Profil mit diesem Befehl neu ein:

{{RootCmd|env-update
|source /etc/profile}}

=== NVidia Benutzer ===

Für NVidia Nutzer könnte es hilfreich sein <tt>nvidia-xconfig</tt> auszuführen, um eine funktionierende Datei {{Path|xorg.conf}} für die ausgewählte Grafikkarte zu erzeugen. Ohne diesen Schritt kann die Datei {{Path|xorg.conf}} wie unten beschrieben manuell erzeugt werden. Eine fehlende {{Path|xorg.conf}} wird manchmal einen "No screens found" Fehler beim Aufruf von <tt>startx</tt> im Terminal erzeugen.

Außerdem wird der NVidia Treiber nur nach einem Neustart funktionieren. Stellen Sie darum sicher das System nach der Ausführung von <tt>nvidia-xconfig</tt> neu zu starten.

{{RootCmd|nvidia-xconfig}}

Es ist möglich und empfehlenswert den OpenGL Renderer auf den Hardware-Renderer anstelle eines Software-Renderer einzustellen:

{{RootCmd|eselect opengl set nvidia}}

== Konfiguration ==

Der X Server ist dafür entworfen ohne weiteres Zutun zu funktionieren, ohne Notwendigkeit die Xorg Konfigurations-Dateien vorher manuell zu bearbeiten. Er ''sollte'' Geräte wie Bildschirme, Tastaturen und Mäuse erkennen und konfigurieren.

Versuchen Sie [[#startx_benutzen|startx]] ohne Bearbeitung einer Konfigurationsdatei zu benutzen. Wenn Xorg nicht startet oder es ein anderes Problem gibt, dann müssen Sie eine manuelle Konfiguration von Xorg vornehmen. Dies wird im folgenden Abschnitt erklärt. 

{{Note|Wenn Sie Änderungen am Kernel durchführen vergessen Sie nicht das System '''neu zu starten''', um den neu kompilierten Kernel zu verwenden, ''bevor'' Sie <tt>startx</tt> benutzen. Wenn der Kernel bei dem Vorgang auf eine neuere Version aktualisiert wurde, ist es höchstwahrscheinlich dass die Konfigurationsdateien des Bootloaders ebenfalls aktualisiert werden müssen.}}

=== Das Verzeichnis {{Path|xorg.conf.d}} ===

{{Important|Die Konfiguration der Dateien in {{Path|xorg.conf.d}} sollte als letzter Ausweg gesehen werden. Falls möglich ist es erstrebenswert Xorg ohne jegliche spezielle Konfiguration zu betreiben.}}

Die meisten der Konfigurationsdateien für Xorg sind im Verzeichnis {{Path|/etc/X11/xorg.conf.d/}} gespeichert. Jede Datei hat einen eindeutiger Namen und endet mit {{Path|.conf}}. Die Dateinamen im Konfigurations-Verzeichnis von Xorg's werden in alphanumerischer Reihenfolge gelesen. Beispielsweise wird {{Path|10-evdev.conf}} vor {{Path|20-synaptics.conf}} gelesen; {{Path|a-evdev.conf}} wird vor {{Path|b-synaptics.conf}} gelesen und so weiter. Die Dateien in diesem Verzeichnis brauchen nicht nummeriert zu sein, dies hilft aber sie geordnet zu halten. Ordnung ist hilfreich bei der Fehlersuche fehlerhafter Konfigurations-Dateien.

{{Note|Xorg bietet Beispiel-Konfigurationen in {{Path|/usr/share/doc/xorg-server-${version}/xorg.conf.example.bz2}}. Diese können genutzt werden um individuelle Konfigurationsdateien in {{Path|/etc/X11/xorg.conf.d/}} zu erstellen. Die Beispiele sind ausführlich kommentiert, falls aber mehr Dokumentation die Syntax betreffend benötigt wird, kann jederzeit auf <tt>man xorg.conf</tt> zurückgegriffen werden. Andere Beispiele finden Sie im Abschnitt [[#Weitere _Hilfsmittel|Weitere Hilfsmittel]] am Ende dieses Leitfadens.}}

=== startx benutzen ===

Versuchen Sie <tt>startx</tt> zum Starten des X Server. <tt>startx</tt> ist ein Script, das eine ''X Sitzung'' (X Session) ausführt. Das bedeutet, es startet den X Server und darauf aufbauend einige grafische Anwendungen. Es entscheidet, welche Anwendungen auszuführen sind, aufgrund der folgenden Logik: 

* Wenn eine Datei mit dem Namen {{Path|.xinitrc}} im Home-Verzeichnis existiert, wird es die hier aufgeführten Befehle ausführen.

* Andernfalls liest es den Wert der Variable <code>XSESSION</code> ein und führt entsprechend eine der in {{Path|/etc/X11/Sessions/}} verfügbaren Sitzungen aus. Der Wert von <code>XSESSION</code> kann in der Datei {{Path|/etc/env.d/90xsession}} eingestellt werden um eine Sitzung als Voreinstellung für alle Benutzer auf dem System einzustellen. Führen Sie zum Beispiel als root <tt>echo XSESSION="Xfce4" > /etc/env.d/90xsession</tt> aus. Dies erzeugt die Datei {{Path|90xsession}} und legt die Standard X Sitzung auf [[Xfce/Guide/de|Xfce]] fest. Denken Sie daran nach Änderungen an {{Path|90xsession}} <tt>env-update</tt> aufzurufen.

{{Cmd|startx}}

Wenn kein Window Manager installiert ist, wird ein durchgängig schwarzer Bildschirm erscheinen. Weil dies ebenso ein Zeichen dafür sein kann, dass etwas nicht stimmt, können die Pakete {{Package|x11-wm/twm}} und {{Package|x11-terms/xterm}} dafür installiert werden um X zu testen. 

Wenn die Programme installiert sind, starten Sie <tt>startx</tt> erneut. Ein paar <tt>xterm</tt> Windows sollten auftauchen, womit leicht überprüft werden kann, dass der X Server vernünftig arbeitet. Wenn Sie mit den Ergebnissen zufrieden sind, entfernen Sie die zuvor installierten Testpakete {{Package|x11-wm/twm}} und {{Package|x11-terms/xterm}} wieder. Sie werden nicht benötigt, um eine angemessene Arbeitsumgebung einzurichten.

=== X Einstellungen optimieren ===

==== Bildschirmauflösung einstellen ====

Wenn die Bildschirmauflösung falsch aussieht, sollten Sie zwei Abschnitte in Ihrer {{Path|xorg.conf.d}} Konfiguration überprüfen. Als erstes gibt es den ''Screen'' Abschnitt, unter dem die Auflösungen aufgeführt sind, mit denen Ihr X Server läuft. Dieser Abschnitt listet möglicherweise überhaupt gar keine Auflösung auf. Falls dies der Fall, ist schätzt Xorg die Auflösung auf Grundlage der Informationen im zweiten Abschnitt ''Monitor''. 

Lassen Sie uns nun die Auflösung verändern. Im nächsten Beispiel von {{Path|/etc/X11/xorg.conf.d/40-monitor.conf}} fügen wir die Zeile <code>PreferredMode</code> hinzu, so dass der X Server standardmäßig mit 1440x900 startet. Die <code>Option</code> im <code>Device</code> Abschnitt muss zum Namen Ihres Monitors (<code>DVI-0</code>) passen, dieser kann über den Aufruf von <tt>xrandr</tt> erhalten werden. Installieren Sie <tt>xrandr</tt> (<tt>emerge xrandr</tt>) einfach so lange, um diese Information zu bekommen. Das Argument nach dem Monitornamen (im Abschnitt <code>Device</code>) muss zum <code>Identifier</code> im Abschnitt <code>Monitor</code> passen. 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier  "RadeonHD 4550"
  Option      "Monitor-DVI-0" "DVI screen"
EndSection
Section "Monitor"
  Identifier  "DVI screen"
  Option      "PreferredMode" "1440x900"
EndSection
</pre>
}}

Starten Sie X (<tt>startx</tt>) um festzustellen, ob die gewünschte Auflösung verwendet wird.

==== Mehrere Monitore ====

In {{Path|/etc/X11/xorg.conf.d/}} können mehr als ein Monitor eingerichtet werden. Vergeben Sie jedem Monitor einen eindeutigen Namen und nennen Sie seine physische Position - wie "RightOf" (rechts von) oder "Above" (über) einem anderen Monitor. Das folgende Beispiel zeigt die Konfiguration eines DVI- und eines VGA-Monitors, wobei sich der VGA-Monitor auf der rechten Seite befindet: 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier "RadeonHD 4550"
  Option     "Monitor-DVI-0" "DVI screen"
  Option     "Monitor-VGA-0" "VGA screen"
EndSection
Section "Monitor"
  Identifier "DVI screen"
EndSection
Section "Monitor"
  Identifier "VGA screen"
  Option     "RightOf" "DVI screen"
EndSection
</pre>
}}

==== Tastatur konfigurieren ====

Um X zur Nutzung einer internationalen Tastatur einzurichten, erzeugen Sie eine passende Konfigurationstdatei in {{Path|/etc/X11/xorg.conf.d/}}. Dieses Beispiel nutzt ein tschechisches Tastaturlayout: 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/30-keyboard.conf|output=<pre>
Section "InputClass"
        Identifier "keyboard-all"
        Driver "evdev"
        Option "XkbLayout" "us,cz"
        Option "XkbModel" "logitech_g15"
        Option "XkbRules" "xorg"
        Option "XkbOptions" "grp:alt_shift_toggle,grp:switch,grp_led:scroll,compose:rwin,terminate:ctrl_alt_bksp"
        Option "XkbVariant" ",qwerty"
        MatchIsKeyboard "on"
EndSection
</pre>
}}

Der "terminate" Befehl (<code>terminate:ctrl_alt_bksp</code>) erlaubt es den Benutzern die X Sitzung durch die Tastenkombination {{Key|Ctrl}}+{{Key|Alt}}+{{Key|Backspace}} zu beenden. Allerdings beendet dies X schmachvoll -- etwas das der Nutzer möglicherweise vermeiden möchte. Es kann sinnvoll sein, wenn Programme den Bildschirm komplett eingefroren haben, oder beim Konfigurieren und Optimieren der Xorg Umgebung. Seien Sie jedoch vorsichtig beim Beenden der Desktop-Umgebung mit dieser Tastenkombination. Den meisten Programmen gefällt es nicht, auf diese Weise beendet zu werden. Einige, wenn nicht sogar alle Informationen die noch nicht auf die Festplatte geschrieben wurden sind verloren (die in "offenen Dokumenten" abgelegten Informationen).

==== Fertigstellung ====

Führen Sie <tt>startx</tt> aus und freuen Sie sich über das Ergebnis. Glückwunsch, Sie haben nun (hoffentlich) ein funktionierendes Xorg! Der nächste Schritt ist einen nützlichen Window-Manager oder eine Desktop-Umgebung wie [[KDE/de|KDE]], [[GNOME]], oder [[Xfce]] zu installieren. Informationen zur Installation dieser Desktop-Umgebungen finden Sie hier im Wiki.

== Siehe auch ==

* [[Wayland]] - Der Window-Manager der nächsten Generation für Linux.

== Externe Ressourcen ==

=== Konfigurationsdateien erstellen und bearbeiten ===

First of all, <tt>man xorg.conf</tt> and <tt>man evdev</tt><ref name=evdev /> provide quick yet complete references about the syntax used by these configuration files. Be sure to have them open on a terminal when editing Xorg configuration files! 

There are also many online resources on editing config files in {{Path|/etc/X11/}}. Only a few are listed here; use a choice favorite search engine to find more.

=== Weitere Hilfsmittel ===

More information about installing and configuring various graphical desktop environments and applications can be found in the [http://www.gentoo.org/doc/en/?catid=desktop Gentoo Desktop Documentation Resources] section of our documentation. 

When upgrading to xorg-server 1.9 from an earlier version, be sure to read the [http://www.gentoo.org/proj/en/desktop/x/x11/xorg-server-1.9-upgrade-guide.xml migration guide]. 

X.org provides many [http://www.x.org/wiki/FAQ FAQs] on their website, in addition to their other documentation.

== References ==
{{reflist}}

{{Migrated|originalauthors=swift, nightmorph}}
[[Category:X.Org]]
