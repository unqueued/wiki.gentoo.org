<languages />

{{Metadata|abstract=Xorg ist der X Window Server, der es Benutzern gestattet stets eine grafische Umgebung zur Verfügung zu haben. Dieser Leitfaden befasst sich damit was Xorg ist, wie man es installiert und welche unterschiedlichen Konfigurations-Optionen es gibt.}}

Xorg ist der X Window Server, der es Benutzern gestattet stets eine grafische Umgebung zur Verfügung zu haben. Dieser Leitfaden befasst sich damit was Xorg ist, wie man es installiert und welche unterschiedlichen Konfigurations-Optionen es gibt.

== Was ist der X Window Server? ==

=== Grafisch gegen Kommandozeile ===

Der durchschnittliche Benutzer mag vielleicht bei dem Gedanken beängstigt sein, Befehle eintippen zu müssen. Warum sollte er sich nicht per grafischer Benutzeroberfläche seinen Weg durch die Freiheit von Gentoo (und Linux im allgemeinen) klicken können? Nun, natürlich können sie das machen! Linux bietet eine grosse Auswahl an auffälligen Benutzerschnittstellen und Umgebungen, die Sie auf der Basis Ihrer vorhandenen Installation installieren können. 

Dies ist eine der grössten Überraschungen auf die neue Benutzer stossen: Eine grafische Benutzerschnittstelle ist nichts anderes als ein Programm, das auf Ihrem System läuft. Es ist ''kein'' Teil des Linux Kernel oder irgendein anderes Interna des Systems. Es ist ein mächtiges Werkzeug, das die grafischen Fähigkeiten Ihres Arbeitsplatzrechners ermöglicht. 

Weil Standards wichtig sind, wurde ein Standard für die Darstellung und das Verschieben von Fenstern auf einem Bildschirm, die Interaktion mit dem Benutzer über Maus, Keyboard und andere Grundlagen, aber dennoch wichtige Aspekte geschaffen und als ''X Window System'' bezeichnet; Allgemein abgekürzt als ''X11'' oder nur ''X''. Es wird auf Unix, Linux und Unix-ähnlichen Betriebssystemen überall auf der Welt verwendet. 

Das Programm das Linux Nutzern die Möglichkeit bietet grafische Benutzerschnittstellen zu verwenden und das den X11 Standard nutzt ist Xorg-X11, eine Abspaltung des XFree86 Projektes. XFree86 hat sich dazu entschlossen eine Lizenz zu verwenden, die möglicherweise nicht mit der GPL Lizenz kompatibel ist. Es wird daher empfohlen Xorg zu verwenden. Der offizielle Portage-Tree stellt keine XFree86 Paket mehr zur Verfügung.

=== Das X.org Projekt ===

Das [http://www.x.org X.org] Projekt erschuf und pflegt eine frei verteilbare Open Source Implementierung des X11 Systems. Es ist eine Open Source X11-basierte Desktop Infrastruktur. 

Xorg bietet eine Schnittstelle zwischen Ihrer Hardware und der grafischen Software, die sie benutzen wollen. Zudem ist Xorg komplett "Netzwerk-bewusst". Das bedeutet, dass sie eine Anwendung auf einem System laufen lassen können, während Sie sie auf einem anderen betrachten. 

== Installation ==

Bevor Sie Xorg installieren können, müssen Sie Ihr System dafür vorbereiten. Als erstes richten wir den Kernel für die Unterstützung von Eingabegeräten und Grafikkarten ein. Dann bereiten wir {{Path|/etc/portage/make.conf}} vor, so dass die richtigen Treiber und Xorg Pakete kompiliert und installiert werden. 

=== Eingabetreiber-Unterstützung ===

In der Voreinstellung nutzt Xorg <code>evdev</code><ref name=evdev>[[evdev]]</ref>, einen Universaltreiber für Eingabegeräte. Zur Aktivierung von <code>evdev</code> müssen Sie eine Veränderung in Ihrer Kernel-Konfiguration vornehmen. Lesen Sie den [[Kernel/Gentoo_Kernel_Configuration_Guide/de|Kernel Konfigurationsleitfaden]], wenn Sie nicht wissen wie Sie Ihren Kernel konfigurieren. 

{{KernelBox|title=evdev im Kernel aktivieren|<pre>
Device Drivers --->
  Input device support --->
  <*>  Event interface
</pre>
}}

=== Kernel Mode-Setting ===

Moderne Open Source Grafikkartentreiber stützen sich auf Kernel Mode-Setting (KMS). KMS bietet einen verbesserten grafischen Systemstart mit weniger flackern, schnellerer Benutzerumschaltung, einer eingebauten Framebuffer Konsole, nahtlose Umschaltung von der Konsole zu Xorg und weiteren Merkmalen. KMS kollidiert mit alten Framebuffer Treibern, die in Ihrer Kernel Konfiguration '''deaktiviert''' bleiben müssen. 

Bereiten Sie als erstes Ihren Kernel für KMS vor. Sie müssen diesen Schritt unabhängig davon machen, welchen Xorg Grafikkartentreiber Sie verwenden. 

{{KernelBox|title=Framebuffer konfigurieren|<pre>
Device Drivers --->
  Graphics support --->
    Support for frame buffer devices --->
    ## (Deaktivieren Sie alle Treiber, eingeschlossen VGA, Intel, nVidia, und ATI.)
 
    ## (Weiter unten aktivieren sie die grundlegende Konsole-Unterstützung. KMS verwendet dies.)
    Console display driver support --->
      <*>  Framebuffer Console Support
</pre>
}}

Als Nächstes konfigurieren Sie den Kernel zur Verwendung der richtigen KMS Treiber für Ihre Grafikkarte. Intel, nVidia, und AMD/ATI sind die am häufigsten gebrauchten Karten. Folgen die der entsprechenden Kode-Auflistung unten. 

Für Intel Karten<ref>https://wiki.gentoo.org/wiki/Intel#Kernel</ref>: 

{{KernelBox|title=Intel Einstellungen|<pre>
Device Drivers --->
  Graphics support --->
    /dev/agpgart (AGP Support) --->
    <*>  Intel 440LX/BX/GX, I8xx and E7x05 chipset support
    Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
    <*>  Intel 8xx/9xx/G3x/G4x/HD Graphics
    [*]    Enable modesetting on intel by default
</pre>
}}

Für nVidia Karten: 

{{KernelBox|title=nVidia Einstellungen|<pre>
Device Drivers --->
  Graphics support --->
    Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
    <*>    Nouveau (nVidia) cards
</pre>
}}

Für neuere AMD/ATI Karten ([[ATI_FAQ/de|RadeonHD 2000 und aufwärts]]), emergen Sie {{Package|x11-drivers/radeon-ucode}} oder {{Package|sys-kernel/linux-firmware}}. Sobald Sie eines dieser Pakete installiert haben, konfigurieren Sie den Kernel wie im [[Radeon#Firmware|Firmware-Abschnitt]] des [[Radeon|Radeon Artikels]] beschrieben: 

{{KernelBox|title=AMD/ATI Einstellungen|<pre>
## (Stellen Sie den Kernel zur Nutzung der Radeon-ucode Firmware ein)
Device Drivers --->
  Generic Driver Options --->
  [*]  Include in-kernel firmware blobs in kernel binary
  ## # ATI Karten spezifisch, (siehe Radeon Seite für Details zur Einbindung von Firmware)
   (radeon/<YOUR-MODEL>.bin ...)
  ## # all:
   (/lib/firmware/) Firmware-Blobs Wurzelverzeichnis
 
## (Aktivierung Radeon KMS Unterstützung)
Device Drivers --->
  Graphics support --->
  <*>  Direct Rendering Manager --->
  <*>    ATI Radeon
  [*]      Enable modesetting on radeon by default
  [ ]      Enable userspace modesetting on radeon (DEPRECATED)
</pre>
}}

{{Note|Alte Radeon-Karten (X1900 Serien und älter) benötigen das Paket {{Package|x11-drivers/radeon-ucode}} oder jegliche Firmware-Konfiguration nicht. Aktivieren Sie einfach den Direct Rendering Manager und ATI Radeon Mode-Setting.}}

{{Note|Linux kernel >{{=}} 3.9 does not have the ''Enable modesetting on radeon by default'' anymore as it is already implied by default.}}

Now that KMS has been set up, continue preparing {{Path|/etc/portage/make.conf}} in the next section.

=== make.conf configuration ===

Now that the kernel is prepared, two important variables in the {{Path|/etc/portage/make.conf}} file must be configured before installing Xorg. 

The first variable is <code>VIDEO_CARDS</code>. This is used to set the video drivers that you intend to use and is usually based on the kind of video card you have. The most common settings are <code>nouveau</code> for nVidia cards or <code>radeon</code> for ATI cards. Both have actively developed, well-supported open-source drivers. 

{{Note|You may also try the proprietary drivers from nVidia and AMD/ATI, <code>nvidia</code> and <code>fglrx</code> respectively. However, setting up the proprietary drivers is beyond the scope of this guide. Please read the [[NVidia/nvidia-drivers|Gentoo Linux nVidia Guide]] and [[ATI_FAQ|Gentoo Linux ATI FAQ]]. If you don't know which drivers you should choose, refer to these guides for more information.}}

The <code>intel</code> driver may be used for desktops or laptops with common Intel integrated graphics chipsets. 

{{Note|<code>VIDEO_CARDS</code> may contain more than one driver, each separated with a space.}}

The second variable is <code>INPUT_DEVICES</code> and is used to determine which drivers are to be built for input devices. In most cases setting it to <code>evdev</code><ref name=evdev /> should work just fine. If you use alternative input devices, such as a Synaptics touchpad for a laptop, be sure to add it to <code>INPUT_DEVICES</code>. 

Decide which drivers will be used and add necessary settings to the {{Path|/etc/portage/make.conf}} file: 

{{CodeBox|title=Sample make.conf entries|lang=bash|1=
## (For mouse, keyboard, and Synaptics touchpad support)
INPUT_DEVICES="evdev synaptics"
## (For nVidia cards)
VIDEO_CARDS="nouveau"
## (For AMD/ATI cards)
VIDEO_CARDS="radeon"
}}

If the suggested settings does not work emerge the {{Package|x11-base/xorg-drivers}} package(see the step below). Check all the options available and choose those which apply to the system. This example is for a system with a keyboard, mouse, Synaptics touchpad, and a Radeon video card. 

{{Emerge|x11-base/xorg-drivers||params+=--verbose --pretend|output=<pre>
 
These are the packages that would be merged, in order:
 
Calculating dependencies... done!
[ebuild   R   ]  x11-base/xorg-drivers-1.9  INPUT_DEVICES="evdev synaptics
-acecad -aiptek -elographics% -fpit% -joystick -keyboard -mouse -penmount -tslib
-virtualbox -vmmouse -void -wacom"
VIDEO_CARDS="radeon -apm -ark -ast -chips -cirrus -dummy -epson -fbdev -fglrx
(-geode) -glint -i128 (-i740) (-impact) -intel -mach64 -mga -neomagic (-newport)
-nouveau -nv -nvidia -r128 -rendition -s3 -s3virge -savage -siliconmotion -sis
-sisusb (-sunbw2) (-suncg14) (-suncg3) (-suncg6) (-sunffb) (-sunleo) (-suntcx)
-tdfx -tga -trident -tseng -v4l -vesa -via -virtualbox -vmware (-voodoo) (-xgi)"
0 kB
</pre>
}}

After setting all the necessary variables Xorg can be installed:

{{Emerge|x11-base/xorg-server}}

{{Note|The {{Package|x11-base/xorg-x11}} meta-package could be installed instead of the more lightweight {{Package|x11-base/xorg-server}}. Functionally {{Package|x11-base/xorg-x11}} and {{Package|x11-base/xorg-server}} are the same, however {{Package|x11-base/xorg-x11}} brings in many more packages that most systems will probably not require. Additional packages include a large assortment of fonts in many languages. They are not necessary for a working X11 framework.}}

When the installation is finished, some environment variables will need to re-initialized before continuing. Source the profile with this command:

{{RootCmd|env-update
|source /etc/profile}}

=== NVidia users ===

For NVidia users it might be beneficial to run <tt>nvidia-xconfig</tt> in order to generate a working {{Path|xorg.conf}} file for the selected graphics card. Without this step the {{Path|xorg.conf}} file will need to be created manually as described below. Missing the {{Path|xorg.conf}} will sometimes generate a "No screens found" error to the terminal when attempting to <tt>startx</tt>.

Also the NVidia driver will only work after a reboot, so be sure to restart the system after running <tt>nvidia-xconfig</tt>.

{{RootCmd|nvidia-xconfig}}

It is both possible and recommended to set the OpenGL renderer to the hardware renderer instead of a software renderer:

{{RootCmd|eselect opengl set nvidia}}

== Configuration ==

The X server is designed to work out-of-the-box, with no need to manually edit Xorg's configuration files. It ''should'' detect and configure devices such as displays, keyboards, and mice.

Try [[#Using_startx|using startx]] without editing any configuration files. If Xorg will not start, or there is some other problem, then manual configuration of Xorg will be needed. This is explained in the following section. 

{{Note|If changes have been made to the kernel, do not forget to '''restart the system''' ''before'' using <tt>startx</tt> in order to be using the newly built kernel. If the kernel was updated to a newer version in the process this will most likely require the bootloader's configuration files to be updated as well.}}

=== The {{Path|xorg.conf.d}} directory ===

{{Important|Configuring files in {{Path|xorg.conf.d}} should be seen as a last resort option. If possible it is desirable to run Xorg without any special configuration.}}

Most of the configuration files for Xorg are stored in {{Path|/etc/X11/xorg.conf.d/}}. Each file is given a unique name and ends in {{Path|.conf}}. The file names in Xorg's configuration directory will read in alpha numeric order. For example, {{Path|10-evdev.conf}} will be read before {{Path|20-synaptics.conf}}; {{Path|a-evdev.conf}} will be read before {{Path|b-synaptics.conf}}, and so on. The files in this directory are not required to be numbered, but doing so will help keep them organize. Organization is helpful in when debugging faulty configuration files.

{{Note|Xorg provides example configurations in {{Path|/usr/share/doc/xorg-server-${version}/xorg.conf.example.bz2}}. These can be used to create custom configuration files in {{Path|/etc/X11/xorg.conf.d/}}. The examples are heavily commented, but if more documentation regarding the syntax is needed <tt>man xorg.conf</tt> is always available. Other examples can be found in the section [[#Other_resources|Other resources]] at the end of this guide.}}

=== Using startx ===

Try <tt>startx</tt> to start up the X server. <tt>startx</tt> is a script that executes an ''X session''; that is, it starts the X server and some graphical applications on top of it. It decides which applications to run using the following logic: 

* If a file named {{Path|.xinitrc}} exists in the home directory, it will execute the commands listed there.

* Otherwise, it will read the value of the <code>XSESSION</code> variable and will execute one of the sessions available in {{Path|/etc/X11/Sessions/}} accordingly. The value of <code>XSESSION</code> can be set in the {{Path|/etc/env.d/90xsession}} file to make a default session for all users on the system. For example, as root, run <tt>echo XSESSION="Xfce4" > /etc/env.d/90xsession</tt>. This will create the {{Path|90xsession}} file and set the default X session to [[Xfce/Guide|Xfce]]. Remember to run <tt>env-update</tt> after making changes to {{Path|90xsession}}.

{{Cmd|startx}}

If no window manager has been installed a solid black screen will appear. Since this can also be a sign that something is wrong, the {{Package|x11-wm/twm}} and {{Package|x11-terms/xterm}} packages can be installed only to test X. 

Once the programs are installed, run <tt>startx</tt> again. A few <tt>xterm</tt> windows should appear, making it easy to verify the X server is working correctly. Once satisfied with the results, unmerge {{Package|x11-wm/twm}} and {{Package|x11-terms/xterm}} if installed in the step above to remove the testing packages. They will not be needed to setup a proper desktop environment.

=== Tweaking X settings ===

==== Setting the screen resolution ====

If the screen resolution looks to be wrong, you will need to check two sections in your {{Path|xorg.conf.d}} configuration. First of all, you have the ''Screen'' section which lists the resolutions that your X server will run at. This section might not list any resolutions at all. If this is the case, Xorg will estimate the resolutions based on the information in the second section, ''Monitor''. 

Now let us change the resolution. In the next example from {{Path|/etc/X11/xorg.conf.d/40-monitor.conf}} we add the <code>PreferredMode</code> line so that our X server starts at 1440x900 by default. The <code>Option</code> in the <code>Device</code> section must match the name of your monitor (<code>DVI-0</code>), which can be obtained by running <tt>xrandr</tt>. Install <tt>xrandr</tt> (<tt>emerge xrandr</tt>) just long enough to get this information. The argument after the monitor name (in the <code>Device</code> section) must match the <code>Identifier</code> in the <code>Monitor</code> section. 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier  "RadeonHD 4550"
  Option      "Monitor-DVI-0" "DVI screen"
EndSection
Section "Monitor"
  Identifier  "DVI screen"
  Option      "PreferredMode" "1440x900"
EndSection
</pre>
}}

Run X (<tt>startx</tt>) to discover it uses the desired resolution.

==== Multiple monitors ====

More than one monitor in can be established in {{Path|/etc/X11/xorg.conf.d/}}. Give each monitor a unique identifier, then list its physical position, such as "RightOf" or "Above" another monitor. The following example shows how to configure a DVI and a VGA monitor, with the VGA monitor as the right-hand screen: 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier "RadeonHD 4550"
  Option     "Monitor-DVI-0" "DVI screen"
  Option     "Monitor-VGA-0" "VGA screen"
EndSection
Section "Monitor"
  Identifier "DVI screen"
EndSection
Section "Monitor"
  Identifier "VGA screen"
  Option     "RightOf" "DVI screen"
EndSection
</pre>
}}

==== Configuring the keyboard ====

To setup X to use an international keyboard create the appropriate config file in {{Path|/etc/X11/xorg.conf.d/}}. This example features a Czech keyboard layout: 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/30-keyboard.conf|output=<pre>
Section "InputClass"
        Identifier "keyboard-all"
        Driver "evdev"
        Option "XkbLayout" "us,cz"
        Option "XkbModel" "logitech_g15"
        Option "XkbRules" "xorg"
        Option "XkbOptions" "grp:alt_shift_toggle,grp:switch,grp_led:scroll,compose:rwin,terminate:ctrl_alt_bksp"
        Option "XkbVariant" ",qwerty"
        MatchIsKeyboard "on"
EndSection
</pre>
}}

The "terminate" command (<code>terminate:ctrl_alt_bksp</code>) lets users kill the X session by using the {{Key|Ctrl}}+{{Key|Alt}}+{{Key|Backspace}} key combination. This will, however, make X exit disgracefully -- something that users might want to avoid. It can be useful when programs have frozen the display entirely, or when configuring and tweaking the Xorg environment. Be careful when killing the desktop with this key combination - most programs really do not like it when they are ended this way. Some, if not all, of the information that has not been written to the disk (information stored in "open documents") will be lost.

==== Finishing up ====

Run <tt>startx</tt> and be happy about the result. Congratulations, you now (hopefully) have a working Xorg! The next step is to install a useful window manager or desktop environment such as [[KDE]], [[GNOME]], or [[Xfce]]. Information on installing these desktop environments can be found here on the wiki.

== See also ==

* [[Wayland]] - The next generation window manager for Linux.

== External resources ==

=== Creating and editing config files ===

First of all, <tt>man xorg.conf</tt> and <tt>man evdev</tt><ref name=evdev /> provide quick yet complete references about the syntax used by these configuration files. Be sure to have them open on a terminal when editing Xorg configuration files! 

There are also many online resources on editing config files in {{Path|/etc/X11/}}. Only a few are listed here; use a choice favorite search engine to find more.

=== Other resources ===

More information about installing and configuring various graphical desktop environments and applications can be found in the [http://www.gentoo.org/doc/en/?catid=desktop Gentoo Desktop Documentation Resources] section of our documentation. 

When upgrading to xorg-server 1.9 from an earlier version, be sure to read the [http://www.gentoo.org/proj/en/desktop/x/x11/xorg-server-1.9-upgrade-guide.xml migration guide]. 

X.org provides many [http://www.x.org/wiki/FAQ FAQs] on their website, in addition to their other documentation.

== References ==
{{reflist}}

{{Migrated|originalauthors=swift, nightmorph}}
[[Category:X.Org]]
