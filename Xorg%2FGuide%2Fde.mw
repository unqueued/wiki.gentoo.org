<languages />

{{Metadata|abstract=Xorg ist der X Window Server, der es Benutzern gestattet stets eine grafische Umgebung zur Verfügung zu haben. Dieser Leitfaden befasst sich damit was Xorg ist, wie man es installiert und welche unterschiedlichen Konfigurations-Optionen es gibt.}}

<div class="mw-translate-fuzzy">
Xorg ist der X Window Server, der es Benutzern gestattet stets eine grafische Umgebung zur Verfügung zu haben. Dieser Leitfaden befasst sich damit was Xorg ist, wie man es installiert und welche unterschiedlichen Konfigurations-Optionen es gibt.
</div>

== Was ist der X Window Server? ==

=== Grafisch gegen Kommandozeile ===

<div class="mw-translate-fuzzy">
Der durchschnittliche Benutzer mag vielleicht bei dem Gedanken beängstigt sein, Befehle eintippen zu müssen. Warum sollte er sich nicht per grafischer Benutzeroberfläche seinen Weg durch die Freiheit von Gentoo (und Linux im allgemeinen) klicken können? Nun, natürlich können sie das machen! Linux bietet eine grosse Auswahl an auffälligen Benutzerschnittstellen und Umgebungen, die Sie auf der Basis Ihrer vorhandenen Installation installieren können.
</div>

Gentoo offers a wide variety of flashy graphical interfaces such as [[Window manager|window managers]] and [[Desktop environment|desktop environments]] which can be installed on top of an existing installation. 

<div class="mw-translate-fuzzy">
Dies ist eine der grössten Überraschungen auf die neue Benutzer stossen: Eine grafische Benutzerschnittstelle ist nichts anderes als ein Programm, das auf Ihrem System läuft. Es ist ''kein'' Teil des Linux Kernel oder irgendein anderes Interna des Systems. Es ist ein mächtiges Werkzeug, das die grafischen Fähigkeiten Ihres Arbeitsplatzrechners ermöglicht.
</div>

<div class="mw-translate-fuzzy">
Weil Standards wichtig sind, wurde ein Standard für die Darstellung und das Verschieben von Fenstern auf einem Bildschirm, die Interaktion mit dem Benutzer über Maus, Keyboard und andere Grundlagen, aber dennoch wichtige Aspekte geschaffen und als ''X Window System'' bezeichnet; Allgemein abgekürzt als ''X11'' oder nur ''X''. Es wird auf Unix, Linux und Unix-ähnlichen Betriebssystemen überall auf der Welt verwendet.
</div> 

<div class="mw-translate-fuzzy">
Das Programm das Linux Nutzern die Möglichkeit bietet grafische Benutzerschnittstellen zu verwenden und das den X11 Standard nutzt ist Xorg-X11, eine Abspaltung des XFree86 Projektes. XFree86 hat sich dazu entschlossen eine Lizenz zu verwenden, die möglicherweise nicht mit der GPL Lizenz kompatibel ist. Es wird daher empfohlen Xorg zu verwenden. Der offizielle Portage-Tree stellt keine XFree86 Paket mehr zur Verfügung.
</div>

=== Das X.org Projekt ===

Das [http://www.x.org X.org] Projekt erschuf und pflegt eine frei verteilbare Open Source Implementierung des X11 Systems. Es ist eine Open Source X11-basierte Desktop Infrastruktur. 

Xorg bietet eine Schnittstelle zwischen Ihrer Hardware und der grafischen Software, die sie benutzen wollen. Zudem ist Xorg komplett "Netzwerk-bewusst". Das bedeutet, dass sie eine Anwendung auf einem System laufen lassen können, während Sie sie auf einem anderen betrachten. 

== Installation ==

<div class="mw-translate-fuzzy">
Bevor Sie Xorg installieren können, müssen Sie Ihr System dafür vorbereiten. Als erstes richten wir den Kernel für die Unterstützung von Eingabegeräten und Grafikkarten ein. Dann bereiten wir {{Path|/etc/portage/make.conf}} vor, so dass die richtigen Treiber und Xorg Pakete kompiliert und installiert werden.
</div> 

=== Eingabetreiber-Unterstützung ===

<div class="mw-translate-fuzzy">
In der Voreinstellung nutzt Xorg <code>evdev</code><ref name=evdev>[[evdev]]</ref>, einen Universaltreiber für Eingabegeräte. Zur Aktivierung von <code>evdev</code> müssen Sie eine Veränderung in Ihrer Kernel-Konfiguration vornehmen. Lesen Sie den [[Kernel/Gentoo_Kernel_Configuration_Guide/de|Kernel Konfigurationsleitfaden]], wenn Sie nicht wissen wie Sie Ihren Kernel konfigurieren.
</div> 

<div class="mw-translate-fuzzy">
{{KernelBox|title=evdev im Kernel aktivieren|<pre>
Device Drivers --->
  Input device support --->
  <*>  Event interface
</pre>
}}
</div>

=== Kernel Mode-Setting ===

<div class="mw-translate-fuzzy">
Moderne Open Source Grafikkartentreiber stützen sich auf Kernel Mode-Setting (KMS). KMS bietet einen verbesserten grafischen Systemstart mit weniger flackern, schnellerer Benutzerumschaltung, einer eingebauten Framebuffer Konsole, nahtlose Umschaltung von der Konsole zu Xorg und weiteren Merkmalen. KMS kollidiert mit alten Framebuffer Treibern, die in Ihrer Kernel Konfiguration '''deaktiviert''' bleiben müssen.
</div>

{{Important|KMS conflicts with legacy framebuffer drivers, which must remain '''disabled''' in the kernel configuration.}}

<div class="mw-translate-fuzzy">
Bereiten Sie als erstes Ihren Kernel für KMS vor. Sie müssen diesen Schritt unabhängig davon machen, welchen Xorg Grafikkartentreiber Sie verwenden.
</div> 

<div class="mw-translate-fuzzy">
{{KernelBox|title=Framebuffer konfigurieren|<pre>
Device Drivers --->
  Graphics support --->
    Support for frame buffer devices --->
    ## (Deaktivieren Sie alle Treiber, eingeschlossen VGA, Intel, nVidia, und ATI.)
 
    ## (Weiter unten aktivieren sie die grundlegende Konsole-Unterstützung. KMS verwendet dies.)
    Console display driver support --->
      <*>  Framebuffer Console Support
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
Als Nächstes konfigurieren Sie den Kernel zur Verwendung der richtigen KMS Treiber für Ihre Grafikkarte. Intel, nVidia, und AMD/ATI sind die am häufigsten gebrauchten Karten. Folgen die der entsprechenden Kode-Auflistung unten.
</div> 

<div class="mw-translate-fuzzy">
Für Intel Karten<ref>https://wiki.gentoo.org/wiki/Intel#Kernel</ref>:
</div>

Für nVidia Karten: 

<div class="mw-translate-fuzzy">
{{KernelBox|title=nVidia Einstellungen|<pre>
Device Drivers --->
  Graphics support --->
    Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
    <*>    Nouveau (nVidia) cards
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
Für neuere AMD/ATI Karten ([[ATI_FAQ/de|RadeonHD 2000 und aufwärts]]), emergen Sie {{Package|x11-drivers/radeon-ucode}} oder {{Package|sys-kernel/linux-firmware}}. Sobald Sie eines dieser Pakete installiert haben, konfigurieren Sie den Kernel wie im [[Radeon#Firmware|Firmware-Abschnitt]] des [[Radeon|Radeon Artikels]] beschrieben:
</div> 

<div class="mw-translate-fuzzy">
{{KernelBox|title=AMD/ATI Einstellungen|<pre>
## (Stellen Sie den Kernel zur Nutzung der Radeon-ucode Firmware ein)
Device Drivers --->
  Generic Driver Options --->
  [*]  Include in-kernel firmware blobs in kernel binary
  ## # ATI Karten spezifisch, (siehe Radeon Seite für Details zur Einbindung von Firmware)
   (radeon/<YOUR-MODEL>.bin ...)
  ## # all:
   (/lib/firmware/) Firmware-Blobs Wurzelverzeichnis
 
## (Aktivierung Radeon KMS Unterstützung)
Device Drivers --->
  Graphics support --->
  <*>  Direct Rendering Manager --->
  <*>    ATI Radeon
  [*]      Enable modesetting on radeon by default
  [ ]      Enable userspace modesetting on radeon (DEPRECATED)
</pre>
}}
</div>

{{KernelBox|title=AMDGPU settings|1=
## (Setup the kernel to use the amdgpu firmware)
Device Drivers --->
   Generic Driver Options --->
   [*]  Include in-kernel firmware blobs in kernel binary
  ## # AMD card specific, (see AMDGPU page for details which firmware files to include)
   (amdgpu/<CARD-MODEL>.bin ...)
  ## # Specify the root directory
   (/lib/firmware/) External firmware blobs to build into the kernel binary
 
## (Enable Radeon KMS support)
Device Drivers --->
   Graphics support --->
   <M/*> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
   <M/*> AMD GPU
         [ /*] Enable amdgpu support for SI parts
         [ /*] Enable amdgpu support for CIK parts 
         [*]   Enable AMD powerplay component  
         ACP (Audio CoProcessor) Configuration  ---> 
             [*] Enable AMD Audio CoProcessor IP support (CONFIG_DRM_AMD_ACP)
         Display Engine Configuration  --->
             [*] AMD DC - Enable new display engine
             [ /*] DC support for Polaris and older ASICs
             [ /*] AMD FBC - Enable Frame Buffer Compression
             [ /*] DCN 1.0 Raven family
   <M/*> HSA kernel driver for AMD GPU devices
}}

<div class="mw-translate-fuzzy">
{{Note|Alte Radeon-Karten (X1900 Serien und älter) benötigen das Paket {{Package|x11-drivers/radeon-ucode}} oder jegliche Firmware-Konfiguration nicht. Aktivieren Sie einfach den Direct Rendering Manager und ATI Radeon Mode-Setting.}}
</div>

<div class="mw-translate-fuzzy">
{{Note|Linux Kernel >{{=}} 3.9 haben die Option ''Enable modesetting on radeon by default'' nicht mehr, da sie bereits standardmässig inbegriffen ist.}}
</div>

{{Note|Linux kernel >{{=}} 4.15 does include ''Display Core'' (DC) which is required for AMDGPU to work. This newer driver was written for GCN5.0 ''Vega'' and DCN1.0 ''Raven Ridge'' (APU), but also adds additional functionality for older Radeon graphics cards starting with GCN1.1 ''Southern Islands'' and newer. It is planned to make this additional support for older Radeon cards the standard, so do not be alarmed if you find this option missing in newer kernels.}}

Exit the kernel configuration, [[Kernel/Rebuild|rebuild the kernel, and reboot]].

<div class="mw-translate-fuzzy">
Nun da KMS aufgesetzt ist, fahren Sie mit der Vorbereitung von {{Path|/etc/portage/make.conf}} im nächsten Abschnitt fort.
</div>

<div class="mw-translate-fuzzy">
=== make.conf Konfiguration ===
</div>

<div class="mw-translate-fuzzy">
Da nun der Kernel vorbereitet ist, müssen zwei wichtige Variablen in der Datei {{Path|/etc/portage/make.conf}} vor der Installation von Xorg konfiguriert werden.
</div> 

<div class="mw-translate-fuzzy">
Die erste Variable ist <code>VIDEO_CARDS</code>. Sie wird verwendet um den Grafikkarten-Treiber einzustellen den Sie verwenden möchten und basiert für gewöhnlich auf der Art von Grafikkarte die sie haben. Die am häufigsten verwendeten Einstellungen sind <code>nouveau</code> für nVidia Karten oder <code>radeon</code> für ATI Karten. Beide verfügen über aktiv entwickelte, gut unterstützte Open Source Treiber.
</div>

{{Note|Sie können ebenfalls die proprietären Treiber von nVidia und AMD/ATI, <code>nvidia</code> bzw. <code>fglrx</code> versuchen. Die Einrichtung der proprietären Treiber ist allerdings abseits des Fokus dieser Anleitung. Bitte lesen Sie den [[NVidia/nvidia-drivers/de|Gentoo Linux nVidia Leitfaden]] und die [[ATI_FAQ/de|Gentoo Linux ATI FAQ]]. Wenn Sie nicht wissen für welchen Treiber Sie sich entscheiden sollen, schauen Sie sich diese Anleitungen an, um weitere Informationen zu erhalten.}}

Der <code>intel</code> Treiber kann für Desktop-PCs und Laptops mit gewöhnlichen integrierten Grafik-Chipsätzen von Intel verwendet werden. 

<div class="mw-translate-fuzzy">
{{Note|<code>VIDEO_CARDS</code> kann mehr als einen Treiber beinhalten, alle durch ein Leerzeichen voneinander getrennt.}}
</div>

<div class="mw-translate-fuzzy">
Die zweite Variable ist <code>INPUT_DEVICES</code>. Mit ihr wird angegeben, welche Treiber für die Eingabegeräte kompiliert werden sollen. Sie auf <code>evdev</code><ref name=evdev /> zu setzten sollte in den meisten Fällen gut funktionieren. Falls Sie alternative Eingabegeräte wie ein Synaptics Touchpad eines Laptops verwenden, stellen  Sie sicher es <code>INPUT_DEVICES</code> hinzuzufügen.
</div> 

[https://gitweb.gentoo.org/repo/gentoo.git/commit/?id=d3ac878318dd96a88190a13b5ac7572ec0c56380 make.defaults] has [[Libinput]] as the default input device driver.

To check what is presently activated, run:

{{Cmd|portageq envvar INPUT_DEVICES}}

<div class="mw-translate-fuzzy">
Entschließen Sie sich welche Treiber benutzt werden sollen und fügen Sie die notwendigen Einstellungen der Datei {{Path|/etc/portage/make.conf}} hinzu:
</div> 

<div class="mw-translate-fuzzy">
{{CodeBox|title=make.conf Beispieleinträge|lang=bash|1=
## (Für Maus, Tastatur und Synaptics Touchpad Unterstützung)
INPUT_DEVICES="evdev synaptics"
## (Für nVidia Karten)
VIDEO_CARDS="nouveau"
## (Für AMD/ATI Karten)
VIDEO_CARDS="radeon"
}}
</div>

<div class="mw-translate-fuzzy">
Wenn die vorgeschlagen Einstellungen nicht funktionieren, emergen Sie das Paket {{Package|x11-base/xorg-drivers}} (siehe die Schritte unterhalb). Prüfen Sie alle verfügbaren Optionen und wählen Sie jene, die auf das System zutreffen. Dieses Beispiel ist auf ein System mit Keyboard, Maus, Synaptics Touchpad und Radeon Grafikkarte zugeschnitten.
</div> 

<div class="mw-translate-fuzzy">
{{Emerge|x11-base/xorg-drivers||params+=--verbose --pretend|output=<pre>
 
These are the packages that would be merged, in order:
 
Calculating dependencies... done!
[ebuild   R   ]  x11-base/xorg-drivers-1.9  INPUT_DEVICES="evdev synaptics
-acecad -aiptek -elographics% -fpit% -joystick -keyboard -mouse -penmount -tslib
-virtualbox -vmmouse -void -wacom"
VIDEO_CARDS="radeon -apm -ark -ast -chips -cirrus -dummy -epson -fbdev -fglrx
(-geode) -glint -i128 (-i740) (-impact) -intel -mach64 -mga -neomagic (-newport)
-nouveau -nv -nvidia -r128 -rendition -s3 -s3virge -savage -siliconmotion -sis
-sisusb (-sunbw2) (-suncg14) (-suncg3) (-suncg6) (-sunffb) (-sunleo) (-suntcx)
-tdfx -tga -trident -tseng -v4l -vesa -via -virtualbox -vmware (-voodoo) (-xgi)"
0 kB
</pre>
}}
</div>

Nach dem Setzen aller notwendiger Variablen kann Xorg installiert werden:

{{Emerge|x11-base/xorg-server}}

<div class="mw-translate-fuzzy">
{{Note|Das Meta-Paket {{Package|x11-base/xorg-x11}} könnte anstelle des leichtgewichtigeren {{Package|x11-base/xorg-server}} installiert werden. Funktional sind {{Package|x11-base/xorg-x11}} und {{Package|x11-base/xorg-server}} das Gleiche. Allerdings bringt {{Package|x11-base/xorg-x11}} viele weitere Pakete mit sich, die die meisten Systeme wahrscheinlich nicht benötigen. Zusätzliche Pakete binden eine große Auswahl an Schriften in vielen Sprachen ein. Diese sind für ein funktionierendes X11 Grundgerüst nicht notwendig.}}
</div>

Wenn die Installation abgeschlossen ist, brauchen einige Umgebungsvariablen eine Reinitialisierung bevor es weiter geht. Lesen Sie das Profil mit diesem Befehl neu ein:

<div class="mw-translate-fuzzy">
{{RootCmd|env-update
|source /etc/profile}}
</div>

=== NVidia Benutzer ===

<div class="mw-translate-fuzzy">
Für NVidia Nutzer könnte es hilfreich sein <tt>nvidia-xconfig</tt> auszuführen, um eine funktionierende Datei {{Path|xorg.conf}} für die ausgewählte Grafikkarte zu erzeugen. Ohne diesen Schritt kann die Datei {{Path|xorg.conf}} wie unten beschrieben manuell erzeugt werden. Eine fehlende {{Path|xorg.conf}} wird manchmal einen "No screens found" Fehler beim Aufruf von <tt>startx</tt> im Terminal erzeugen.
</div>

<div class="mw-translate-fuzzy">
Außerdem wird der NVidia Treiber nur nach einem Neustart funktionieren. Stellen Sie darum sicher das System nach der Ausführung von <tt>nvidia-xconfig</tt> neu zu starten.
</div>

{{RootCmd|nvidia-xconfig}}

Es ist möglich und empfehlenswert den OpenGL Renderer auf den Hardware-Renderer anstelle eines Software-Renderer einzustellen:

{{RootCmd|eselect opengl set nvidia}}

== Konfiguration ==

<div class="mw-translate-fuzzy">
Der X Server ist dafür entworfen ohne weiteres Zutun zu funktionieren, ohne Notwendigkeit die Xorg Konfigurations-Dateien vorher manuell zu bearbeiten. Er ''sollte'' Geräte wie Bildschirme, Tastaturen und Mäuse erkennen und konfigurieren.
</div>

Versuchen Sie [[#startx_benutzen|startx]] ohne Bearbeitung einer Konfigurationsdatei zu benutzen. Wenn Xorg nicht startet oder es ein anderes Problem gibt, dann müssen Sie eine manuelle Konfiguration von Xorg vornehmen. Dies wird im folgenden Abschnitt erklärt. 

<div class="mw-translate-fuzzy">
{{Note|Wenn Sie Änderungen am Kernel durchführen vergessen Sie nicht das System '''neu zu starten''', um den neu kompilierten Kernel zu verwenden, ''bevor'' Sie <tt>startx</tt> benutzen. Wenn der Kernel bei dem Vorgang auf eine neuere Version aktualisiert wurde, ist es höchstwahrscheinlich dass die Konfigurationsdateien des Bootloaders ebenfalls aktualisiert werden müssen.}}
</div>

=== Das Verzeichnis {{Path|xorg.conf.d}} ===

<div class="mw-translate-fuzzy">
{{Important|Die Konfiguration der Dateien in {{Path|xorg.conf.d}} sollte als letzter Ausweg gesehen werden. Falls möglich ist es erstrebenswert Xorg ohne jegliche spezielle Konfiguration zu betreiben.}}
</div>

<div class="mw-translate-fuzzy">
Die meisten der Konfigurationsdateien für Xorg sind im Verzeichnis {{Path|/etc/X11/xorg.conf.d/}} gespeichert. Jede Datei hat einen eindeutiger Namen und endet mit {{Path|.conf}}. Die Dateinamen im Konfigurations-Verzeichnis von Xorg's werden in alphanumerischer Reihenfolge gelesen. Beispielsweise wird {{Path|10-evdev.conf}} vor {{Path|20-synaptics.conf}} gelesen; {{Path|a-evdev.conf}} wird vor {{Path|b-synaptics.conf}} gelesen und so weiter. Die Dateien in diesem Verzeichnis brauchen nicht nummeriert zu sein, dies hilft aber sie geordnet zu halten. Ordnung ist hilfreich bei der Fehlersuche fehlerhafter Konfigurations-Dateien.
</div>

<div class="mw-translate-fuzzy">
{{Note|Xorg bietet Beispiel-Konfigurationen in {{Path|/usr/share/doc/xorg-server-${version}/xorg.conf.example.bz2}}. Diese können genutzt werden um individuelle Konfigurationsdateien in {{Path|/etc/X11/xorg.conf.d/}} zu erstellen. Die Beispiele sind ausführlich kommentiert, falls aber mehr Dokumentation die Syntax betreffend benötigt wird, kann jederzeit auf <tt>man xorg.conf</tt> zurückgegriffen werden. Andere Beispiele finden Sie im Abschnitt [[#Weitere _Hilfsmittel|Weitere Hilfsmittel]] am Ende dieses Leitfadens.}}
</div>

=== startx benutzen ===

<div class="mw-translate-fuzzy">
Versuchen Sie <tt>startx</tt> zum Starten des X Server. <tt>startx</tt> ist ein Script, das eine ''X Sitzung'' (X Session) ausführt. Das bedeutet, es startet den X Server und darauf aufbauend einige grafische Anwendungen. Es entscheidet, welche Anwendungen auszuführen sind, aufgrund der folgenden Logik:
</div> 

* Wenn eine Datei mit dem Namen {{Path|.xinitrc}} im Home-Verzeichnis existiert, wird es die hier aufgeführten Befehle ausführen.

<div class="mw-translate-fuzzy">
* Andernfalls liest es den Wert der Variable <code>XSESSION</code> ein und führt entsprechend eine der in {{Path|/etc/X11/Sessions/}} verfügbaren Sitzungen aus. Der Wert von <code>XSESSION</code> kann in der Datei {{Path|/etc/env.d/90xsession}} eingestellt werden um eine Sitzung als Voreinstellung für alle Benutzer auf dem System einzustellen. Führen Sie zum Beispiel als root <tt>echo XSESSION="Xfce4" > /etc/env.d/90xsession</tt> aus. Dies erzeugt die Datei {{Path|90xsession}} und legt die Standard X Sitzung auf [[Xfce/Guide/de|Xfce]] fest. Denken Sie daran nach Änderungen an {{Path|90xsession}} <tt>env-update</tt> aufzurufen.
</div>

: {{RootCmd|echo XSESSION{{=}}"Xfce4" > /etc/env.d/90xsession}}

: This will create the {{Path|90xsession}} file and set the default X session to [[Xfce/Guide|Xfce]]. Remember to run {{c|env-update}} after making changes to {{Path|90xsession}}.

{{Cmd|startx}}

Wenn kein Window Manager installiert ist, wird ein durchgängig schwarzer Bildschirm erscheinen. Weil dies ebenso ein Zeichen dafür sein kann, dass etwas nicht stimmt, können die Pakete {{Package|x11-wm/twm}} und {{Package|x11-terms/xterm}} dafür installiert werden um X zu testen. 

<div class="mw-translate-fuzzy">
Wenn die Programme installiert sind, starten Sie <tt>startx</tt> erneut. Ein paar <tt>xterm</tt> Windows sollten auftauchen, womit leicht überprüft werden kann, dass der X Server vernünftig arbeitet. Wenn Sie mit den Ergebnissen zufrieden sind, entfernen Sie die zuvor installierten Testpakete {{Package|x11-wm/twm}} und {{Package|x11-terms/xterm}} wieder. Sie werden nicht benötigt, um eine angemessene Arbeitsumgebung einzurichten.
</div>

The session (program to start) could also be given as an argument to {{c|startx}}:

{{Cmd|startx /usr/bin/startfluxbox}}

You can also pass X11 server options, by preceding them with a double dash:

{{Cmd|startx -- vt7}}

=== X Einstellungen optimieren ===

==== Bildschirmauflösung einstellen ====

<div class="mw-translate-fuzzy">
Wenn die Bildschirmauflösung falsch aussieht, sollten Sie zwei Abschnitte in Ihrer {{Path|xorg.conf.d}} Konfiguration überprüfen. Als erstes gibt es den ''Screen'' Abschnitt, unter dem die Auflösungen aufgeführt sind, mit denen Ihr X Server läuft. Dieser Abschnitt listet möglicherweise überhaupt gar keine Auflösung auf. Falls dies der Fall, ist schätzt Xorg die Auflösung auf Grundlage der Informationen im zweiten Abschnitt ''Monitor''.
</div> 

<div class="mw-translate-fuzzy">
Lassen Sie uns nun die Auflösung verändern. Im nächsten Beispiel von {{Path|/etc/X11/xorg.conf.d/40-monitor.conf}} fügen wir die Zeile <code>PreferredMode</code> hinzu, so dass der X Server standardmäßig mit 1440x900 startet. Die <code>Option</code> im <code>Device</code> Abschnitt muss zum Namen Ihres Monitors (<code>DVI-0</code>) passen, dieser kann über den Aufruf von <tt>xrandr</tt> erhalten werden. Installieren Sie <tt>xrandr</tt> (<tt>emerge xrandr</tt>) einfach so lange, um diese Information zu bekommen. Das Argument nach dem Monitornamen (im Abschnitt <code>Device</code>) muss zum <code>Identifier</code> im Abschnitt <code>Monitor</code> passen.
</div> 

<div class="mw-translate-fuzzy">
{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier  "RadeonHD 4550"
  Option      "Monitor-DVI-0" "DVI screen"
EndSection
Section "Monitor"
  Identifier  "DVI screen"
  Option      "PreferredMode" "1440x900"
EndSection
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
Starten Sie X (<tt>startx</tt>) um festzustellen, ob die gewünschte Auflösung verwendet wird.
</div>

==== Mehrere Monitore ====

<div class="mw-translate-fuzzy">
In {{Path|/etc/X11/xorg.conf.d/}} können mehr als ein Monitor eingerichtet werden. Vergeben Sie jedem Monitor einen eindeutigen Namen und nennen Sie seine physische Position - wie "RightOf" (rechts von) oder "Above" (über) einem anderen Monitor. Das folgende Beispiel zeigt die Konfiguration eines DVI- und eines VGA-Monitors, wobei sich der VGA-Monitor auf der rechten Seite befindet:
</div> 

<div class="mw-translate-fuzzy">
{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier "RadeonHD 4550"
  Option     "Monitor-DVI-0" "DVI screen"
  Option     "Monitor-VGA-0" "VGA screen"
EndSection
Section "Monitor"
  Identifier "DVI screen"
EndSection
Section "Monitor"
  Identifier "VGA screen"
  Option     "RightOf" "DVI screen"
EndSection
</pre>
}}
</div>

==== Tastatur konfigurieren ====

<div class="mw-translate-fuzzy">
Um X zur Nutzung einer internationalen Tastatur einzurichten, erzeugen Sie eine passende Konfigurationstdatei in {{Path|/etc/X11/xorg.conf.d/}}. Dieses Beispiel nutzt ein tschechisches Tastaturlayout:
</div> 

<div class="mw-translate-fuzzy">
{{RootCmd|nano -w /etc/X11/xorg.conf.d/30-keyboard.conf|output=<pre>
Section "InputClass"
        Identifier "keyboard-all"
        Driver "evdev"
        Option "XkbLayout" "us,cz"
        Option "XkbModel" "logitech_g15"
        Option "XkbRules" "xorg"
        Option "XkbOptions" "grp:alt_shift_toggle,grp:switch,grp_led:scroll,compose:rwin,terminate:ctrl_alt_bksp"
        Option "XkbVariant" ",qwerty"
        MatchIsKeyboard "on"
EndSection
</pre>
}}
</div>

For methods of switching the keyboard layout see the [[Keyboard_layout_switching#X11|Keyboard layout switching]] article.

Der "terminate" Befehl (<code>terminate:ctrl_alt_bksp</code>) erlaubt es den Benutzern die X Sitzung durch die Tastenkombination {{Key|Ctrl}}+{{Key|Alt}}+{{Key|Backspace}} zu beenden. Allerdings beendet dies X schmachvoll -- etwas das der Nutzer möglicherweise vermeiden möchte. Es kann sinnvoll sein, wenn Programme den Bildschirm komplett eingefroren haben, oder beim Konfigurieren und Optimieren der Xorg Umgebung. Seien Sie jedoch vorsichtig beim Beenden der Desktop-Umgebung mit dieser Tastenkombination. Den meisten Programmen gefällt es nicht, auf diese Weise beendet zu werden. Einige, wenn nicht sogar alle Informationen die noch nicht auf die Festplatte geschrieben wurden sind verloren (die in "offenen Dokumenten" abgelegten Informationen).

==== Fertigstellung ====

<div class="mw-translate-fuzzy">
Führen Sie <tt>startx</tt> aus und freuen Sie sich über das Ergebnis. Glückwunsch, Sie haben nun (hoffentlich) ein funktionierendes Xorg! Der nächste Schritt ist einen nützlichen Window-Manager oder eine Desktop-Umgebung wie [[KDE/de|KDE]], [[GNOME]], oder [[Xfce]] zu installieren. Informationen zur Installation dieser Desktop-Umgebungen finden Sie hier im Wiki.
</div>

== Siehe auch ==

<div class="mw-translate-fuzzy">
* [[Wayland]] - Der Window-Manager der nächsten Generation für Linux.
</div>

== Externe Ressourcen ==

=== Konfigurationsdateien erstellen und bearbeiten ===

<div class="mw-translate-fuzzy">
Als Erstes bieten <tt>man xorg.conf</tt> und <tt>man evdev</tt><ref name=evdev /> schnelle und dennoch vollständige Referenz zur Syntax der Konfigurationsdateien an. Stellen Sie sicher sie in einem Terminal geöffnet zu haben, wenn Sie Xorg Konfigurationsdateien bearbeiten!
</div> 

Es gibt ebenfalls viele Online-Ressourcen über die Bearbeitung von Konfigurationsdateien in {{Path|/etc/X11/}}. Nur wenige sind hier aufgeführt. Verwenden Sie eine Auswahl Ihrer Lieblingssuchmaschinen um weitere zu finden.

=== Weitere Hilfsmittel ===

<div class="mw-translate-fuzzy">
Weitere Informationen zur Installation und Konfiguration verschiedener grafischer Desktop-Umgebungen und Applikationen können im Abschnitt [http://www.gentoo.org/doc/en/?catid=desktop Gentoo Desktop Dokumentations-Ressourcen] unseres Handbuchs gefunden werden.
</div> 

<div class="mw-translate-fuzzy">
Wenn Sie von einer früheren Version zum xorg-server 1.9 aktualisieren, lesen Sie bitte den [http://www.gentoo.org/proj/en/desktop/x/x11/xorg-server-1.9-upgrade-guide.xml Migrations-Leitfaden].
</div> 

X.org bietet viele [http://www.x.org/wiki/FAQ FAQs] auf ihrer Webseite, zusätzlich zu ihrer anderen Dokumentation.

{{Migrated|originalauthors={{Dev|SwifT}}, {{Dev|nightmorph}}}}
[[Category:X.Org]]
