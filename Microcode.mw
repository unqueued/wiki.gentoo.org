{{InfoBox stack
|{{InfoBox wikipedia|Microcode|header=true}}
}}

This document [[Article description::describes various ways how to update a CPU's microcode in Gentoo.]]

== Introduction ==

The microcode is a form of [[wikipedia:Firmware|firmware]] that controls the processor's internals. In modern [[wikipedia:X86|x86]] processors the microcode often handles execution of complex and highly specialized instructions. Parts of microcode also act as firmware for processor's embedded controllers. Furthermore, the microcode can be used to fix or mitigate processor design and implementation errata/bugs. Given the complexity of modern processors, a processor may have over one hundred of such errata<ref>[https://www.intel.com/content/dam/www/public/us/en/documents/specification-updates/desktop-6th-gen-core-family-spec-update.pdf#page=27 6th Generation IntelÂ® Processor Family], Intel. Retrieved on October 24, 2018</ref>.

Recent processors have ability to patch their microcode via ''microcode updates''. Microcode updates are stored in volatile memory and thus they have to be applied during each system boot.

A [[BIOS]]/[[wikipedia:Unified Extensible Firmware Interface|EFI]] can perform a microcode update early on. This kind of microcode updates are provided by BIOS/EFI and thus their version depends on the installed BIOS/EFI version. BIOS/EFI can be upgraded via a [[BIOS Update|BIOS update]] but still, the shipped microcode version depends on motherboard/BIOS vendor.

The [[Kernel|kernel]] itself can also perform a microcode update<ref>Fenghua Yu, Borislav Petkov, [https://www.kernel.org/doc/Documentation/x86/microcode.txt The Linux Microcode Loader], kernel.org. Retrieved on October 24, 2018</ref> from given [[Linux firmware|firmware binary blobs]] during boot. This way it is possible to patch the microcode with a newer microcode update than the one provided by BIOS/EFI.

{{Note|Severity of processor errata patched by microcode updates varies. It ranges from an extremely rare system instability to data corruption or a severe hardware vulnerability<ref>[https://newsroom.intel.com/wp-content/uploads/sites/11/2018/04/microcode-update-guidance.pdf Microcode Revision Guidance], Intel. Retrieved on October 24, 2018</ref>.}}

Because [[Complete_Handbook/Making_a_choice|Gentoo is about choices]] there there isn't just one way to update a CPU's microcode. Please choose the workflow which suits your setup.

== Preconditions ==

Ensure you have installed the package which is providing microcode updates for your processor.
Install {{Package|sys-kernel/linux-firmware}} and/or {{Package|sys-firmware/intel-microcode}}:

{{Emerge|sys-kernel/linux-firmware sys-firmware/intel-microcode}}

Any way to load microcode into the CPU must go through the kernel. Thus the respective options need to be enabled in the kernel configuration. Depending on the make of the CPU installed on the system, choose AMD or Intel microcode loading support (it does not hurt to choose both):

{{KernelBox|title=Configuring a kernel to support microcode loading|1=
Processor type and features --->
   [*] CPU microcode loading support
   [*]   Intel microcode loading support
   [*]   AMD microcode loading support
}}

== Dracut ==

{{RootCmd|dracut --early-microcode}}

{{FileBox|filename=/etc/dracut.conf.d/microcode.conf|1=
early_microcode="yes"
}}

== Genkernel ==

When using {{Package|sys-kernel/genkernel}}, ensure the package containing microcode updates for the processor(s) have been installed (see below). Be sure to call {{c|genkernel}} with the <code>--microcode</code> option:

{{RootCmd|genkernel --microcode}}

To generate a new initramfs with microcode included, call:

{{RootCmd|genkernel --microcode initramfs}}

Be sure to instruct the bootloader to load the newly generated initramfs.

It is recommended {{Path|genkernel.conf}} is updated to contains the following code:

{{FileBox|filename=/etc/genkernel.conf|lang=bash|1=
# Add in early microcode support
MICROCODE="yes"
}}

so that you don't need to remember to pass the <code>--microcode</code> parameter all the time.

{{Note|You need {{c|&gt;&#61;}}{{Package|sys-kernel/genkernel}}-3.5.0.7 for microcode support which isn't yet stabilized. Please see for [[Knowledge_Base:Accepting_a_keyword_for_a_single_package|how to keyword a single package]].}}

== The manual way ==

<Please help!>

=== Early microcode loading ===

Basically you provide the microcode as the first initramfs (aka initrd, in cpio format) to the kernel during boot. Grub (both legacy and grub2) lets you specify multiple cpio images separated by space in the initrd command.

GRUB2 supports loading an early microcode. If the microcode file is named after one of the following: {{Path|intel-uc.img}}, {{Path|intel-ucode.img}}, {{Path|amd-uc.img}}, {{Path|amd-ucode.img}}, {{Path|early_ucode.cpio}}, or {{Path|microcode.cpio}}, it will be automatically detected when running {{c|grub-mkconfig}}. To declare a microcode file named differently, e.g. ucode.cpio, add this line to {{Path|/etc/default/grub}}:

{{FileBox|filename=/etc/default/grub|title=|lang=bash|1=
GRUB_EARLY_INITRD_LINUX_CUSTOM="ucode.cpio"
}}

Regenerate the {{Path|grub.cfg}} with:

{{RootCmd|1=grub-mkconfig -o /boot/grub/grub.cfg|output=<pre>
Generating grub configuration file ...
Found linux image: /boot/vmlinuz-4.6.3-gentoo
Found initrd image: /boot/early_ucode.cpio /initramfs-genkernel-x86_64-4.6.3-gentoo
done
</pre>}}

{{Note|This is similar to what you should see, minus the initramfs if you do not have one.}}

=== Late microcode loading ===

To manually instruct the kernel to reload microcodes, do

{{RootCmd|echo 1 > /sys/devices/system/cpu/microcode/reload}}

and watch {{c|dmesg}} for any errors. This loading mechanism looks for microcode blobs in {{Path|/lib/firmware/{intel-ucode,amd-ucode}}}.

{{Note|You must run the command above after every reboot or firmware package update.}}

== Specifics ==

<Please help!>

=== AMD specifics ===

AMD microcodes are bundled in the {{Package|sys-kernel/linux-firmware}} package. A more lengthy guide is found in the [[AMD microcode]] article.

=== Intel specifics ===

Intel microcodes are bundled in the {{Package|sys-firmware/intel-microcode}} package. Detailed instructions can be found in the [[Intel microcode]] article.

== See also ==

* {{See also|Linux firmware}}
* {{See also|AMD microcode}}
* {{See also|Intel microcode}}

== External resources ==

* [https://www.emsec.ruhr-uni-bochum.de/media/emma/veroeffentlichungen/2017/08/16/usenix17-microcode.pdf Reverse Engineering x86 Processor Microcode] Paper describing microcode in common x86 processors.

== References ==

{{reflist}}

[[Category:Processors]]
[[Category:Firmware]]
