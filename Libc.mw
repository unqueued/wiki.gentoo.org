{{lowercase title}}
{{InfoBox stack
|{{InfoBox wikipedia|C_POSIX_library|header=true}}
}}

The libc is [[Article description::a software component that allows userspace applications to interact with operating system services.]] For Unix-like operating systems, it is an implementation of the facilities specified by the library clause of the C programming language standard, ISO/IEC International Standard 9899, of the POSIX (''Portable Operating System Interface'') and X/Open system interfaces as defined in IEEE Standard 1003.1, and of other extensions. On Linux distributions this implementation normally takes the form of one or more ''Executable and Linking Format (ELF) shared object files'' ('.so files'), with architecture-specific machine code that processes load at runtime using ''dynamic linking''. Dynamic linking makes the libc a runtime dependency of pretty much every package, and thus a core component of the distribution.

== Gentoo's libc setup ==

Gentoo supports three libc implementations for Linux:
* {{Package|sys-libs/glibc}}, from the GNU project, one of the oldest, best-known free software libc implementations. The GNU-style target triplets that represent the resulting operating system (for using e.g. as [[CHOST|values of <var>CHOST</var>]]) have the form <code>*-*-linux-gnu*</code>.
* {{Package|sys-libs/musl}}, from the musl project, aimed at being simple, lightweight, fast and correct in the sense of standards-conformance and safety. The GNU-style target triplets that represent the resulting operating system have the form <code>*-*-linux-musl*</code>.
* {{Package|sys-libs/uclibc-ng}}, from the uClibc-ng project, a small libc implementation aimed at developing embedded Linux systems. The GNU-style target triplets that represent the resulting operating system have the form <code>*-*-linux-uclibc*</code>.

The choice of libc implementation for a Gentoo machine is governed by [[Profile|profiles]]. Profiles that select the Linux kernel (<var>KERNEL</var> [[USE_EXPAND|USE_EXPAND variable]] set to <code>linux</code>) have package {{Package|virtual/libc}} in [[System_set_(Portage)|the system set]], i.e. it is guaranteed to be present in every Gentoo machine. This is a ''virtual package'', that is, it installs no files but has an any-of dependency, <code>|| ( ... )</code>, on other packages, or a similar construct. For these profiles, virtual/libc can be satisfied by one of the aforementioned libc packages depending on the value of the <var>ELIBC</var> USE_EXPAND variable. Musl-based profiles (those with 'musl' in the name, like {{Path|default/linux/amd64/17.0/musl}}) set <var>ELIBC</var> to <code>musl</code>, which causes virtual/libc to be satisfied by sys-libs/musl. uClibc-ng-based profiles (those with 'uclibc' in the name, like {{Path|default/linux/arm/17.0/uclibc}}) set <var>ELIBC</var> to <code>uclibc</code>, which causes virtual/libc to be satisfied by sys-libs/uclibc-ng. Otherwise, <var>ELIBC</var> is set to <code>glibc</code>, which causes virtual/libc to be satisfied by sys-libs/glibc.

<var>ELIBC</var>, just like <var>KERNEL</var>, can only be set by profiles.

Musl and uClibc-ng stage3 [[Stage tarball|tarballs]] are available in Gentoo mirrors, in 'vanilla' and hardened variants, although some of them, depending on architecture, might be found in the {{Path|/experimental}} directory instead of the standard {{Path|/releases/*/autobuilds/current-stage3-*}} directory. Their names have the forms {{Path|stage3-*-musl-{vanilla,hardened}-*.tar.{bz2,xz}}} and {{Path|stage3-*-uclibc-{vanilla,hardened}-*.tar.{bz2,xz}}}. There is also an official musl [[ebuild repository]], available with [[Eselect/Repository|eselect repository]] or [[Layman]] under the name "musl", which houses additional patches that allow several packages to build with sys-libs/musl.

{{Important|Musl-based and uClibc-ng-based profiles are currently labeled 'experimental', i.e. <kbd>eselect profile list</kbd> would show "(exp)" after the profile name. Most ''stable'' Linux profiles are currently GNU libc-based only.}}

For a refresher on stage3 tarballs and profiles, please review [[Handbook:Main_Page|the Gentoo Handbook]].

== See also ==

* [[Project:Toolchain|Gentoo Toolchain Project]], responsible of managing the GNU libc package
* [[Project:Hardened_musl|Gentoo Hardened musl Project]]
* [[Project:Hardened_uClibc|Gentoo Hardened uClibc Project]]

[[Category:Core system]]
[[Category:Meta]]
