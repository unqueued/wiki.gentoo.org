<languages />

{{Metadata|abstract=Dit artikel beschrijft de stappen om naar een nieuwere versie van de Linux-kernel te upgraden}}

Dit artikel [[Article description::beschrijft de stappen om naar een nieuwe [[kernel]] te upgraden.]]

== Installatie ==

Een kernel upgrade is mogelijk een goed idee wanneer nieuwe kernel broncode is geïnstalleerd. Nieuwe kernel broncode wordt soms geïnstalleerd tijdens een systeem update, bijvoorbeeld met de volgende opdracht:

{{RootCmd|emerge --ask --update --deep --with-bdeps{{=}}y --newuse @world}}

Uiteraard kunt u deze ook handmatig installeren met de volgende opdracht (vervang ''gentoo-sources'' met de variant die in gebruik is):

{{RootCmd|emerge --ask --update --deep --with-bdeps{{=}}y --newuse sys-kernel/gentoo-sources}}

Installing new kernel sources doesn't provide the user with a new kernel. It is necessary to make and install a new kernel from the new sources and then reboot the system to actually run the new kernel.

Making a new kernel from the new sources is basically the same process as making a kernel when installing the system. The difference is that one can use the configuration of the old kernel to create a configuration for the new kernel. Using the old configuration saves the user from going through all the kernel options (like {{c|make menuconfig}}) again.

The kernel configuration is saved in a file named {{Path|.config}} in the directory that holds the kernel sources. A new kernel may have had options or features added or removed since the old kernel. The kernel configuration specifies whether a kernel's features and options will be enabled or not, perhaps built into the kernel, or perhaps built as modules which can be loaded into the running kernel on demand. Hence the configuration file of the new kernel may have new entries the configuration file of the old kernel doesn't have, and it might not have entries anymore which are present in the configuration file of the old kernel.

To deal with such changes of the configuration file, the configuration file of the old kernel needs to be converted to a configuration that can be used with the new kernel. This article shows how to make a new kernel from new kernel sources with converting the configuration file of the old kernel.

=== Backup van de huidige kernelconfiguratie ===

Het is verstandig om een backup te maken van de kernelconfiguratie zodat de vorige configuratie niet verloren gaat. Veel gebruikers besteden per slot van rekening veel tijd om de beste configuratie voor hun systeem te vinden, het is niet de bedoeling dat dat verloren gaat.

Het is eenvoudig om een backup van de configuratie te maken.

{{RootCmd|cp /usr/src/linux/.config ~/kernel-config-`uname -r`}}

Vooropgesteld dat de symlink naar de kernelbroncode juist is, wordt hiermee de configuratie van de kernel die nu in gebruik is gekopieerd naar de gebuikersmap van root, waarbij de configuratie wordt hernoemd naar {{Path|kernel-config-}} gevolgd door de versie van de in gebruik zijnde Linux-kernel.

== Configuratie ==

=== Set symlink to new kernel sources ===

De symbolische link {{Path|/usr/src/linux}} zou altijd moeten verwijzen naar de map waarin de kernel broncode staat van de kernel die momenteel gebruikt word. Dit kan op een van de volgende drie manieren gedaan worden:

# Installing the kernel sources with <code>USE="symlink"</code>
# Setting the link with eselect
# Manually updating the symbolic link

==== Installing the kernel sources with the symlink USE flag ====

This will make the {{Path|/usr/src/linux}} point to the newly installed kernel sources.

If necessary, it can still be modified later with one of the other two methods.

==== Setting the link with eselect ====

To set the symlink with {{c|eselect}}:

{{RootCmd|eselect kernel list|output=<pre>
Available kernel symlink targets:
 [1] linux-3.14.14-gentoo *
 [2] linux-3.16.3-gentoo
</pre>}}

This outputs the available kernel sources. The asterisk indicates the chosen sources.

To change the kernel sources, e.g. to the second entry, do:

{{RootCmd|eselect kernel set 2}}

==== Manually updating the symbolic link ====

To set the symbolic link manually:

{{RootCmd|ln -sf /usr/src/linux-3.16.3-gentoo /usr/src/linux
|ls -l /usr/src/linux|output=<pre>
lrwxrwxrwx 1 root root 19 Oct  4 10:21 /usr/src/linux -> linux-3.16.3-gentoo
</pre>}}

==== Moving to the new folder ====

Now that the symbolic link has been modified, change the working directory to the new kernel folder.

{{RootCmd|cd /usr/src/linux}}

{{Note|This command is still necessary even if the working directory was already {{Path|/usr/src/linux}} when the symlink was modified. Until the new symlink is actually followed, the console will still be in the ''old'' kernel's directory.}}

=== Copy previous kernel configuration ===

The configuration of the old kernel needs to be copied to the new one. In addition to the backup copy that was saved to {{Path|/root}} in an earlier step, the old configuration can be found in several places:

* In het [[procfs]] bestandssysteem, als de kernel optie ''Enable access to .config through /proc/config.gz'' werd geactiveerd in jouw huidige kernel:
: {{RootCmd|zcat /proc/config.gz > /usr/src/linux/.config}}

* From the old kernel. This will only work when the old kernel was compiled with CONFIG_IKCONFIG:
: {{RootCmd|/usr/src/linux/scripts/extract-ikconfig /path/to/old/kernel >/usr/src/linux/.config}}

* In de map {{Path|/boot}}, als de configuratie daar aanwezig is:
: {{RootCmd|cp /boot/config-3.14.14-gentoo /usr/src/linux/.config}}

* In de kernel map van de huidige kernel die je draait:
: {{RootCmd|cp /usr/src/linux-3.14.14-gentoo/.confg /usr/src/linux}}

* In the {{Path|/etc/kernels/}} directory, if <code>SAVE_CONFIG="yes"</code> is set in {{Path|/etc/genkernel.conf}} and {{c|[[genkernel]]}} was previously used:
: {{RootCmd|cp /etc/kernels/kernel-config-x86_64-3.14.14-gentoo /usr/src/linux/.config}}

=== .config file ===

To use the configuration of the old kernel with the new kernel, it needs to be converted.  The conversion can be done by running either {{c|make silentoldconfig}} or {{c|make olddefconfig}}. Use either, not both.

==== make silentoldconfig ====

{{Important|{{c|make silentoldconfig}} is being removed as of linux version 4.19, it will be replaced by {{c|make syncconfig}}.}}

The following configuration is like the text based configuration with {{c|make config}}.  For new configuration options, the user is asked for a decision. For example:

{{RootCmd|cd /usr/src/linux
|make silentoldconfig|output=<pre>
Anticipatory I/O scheduler (IOSCHED_AS) [Y/n/m/?] (NEW)
</pre>}}

The string ''(NEW)'' at the end of the line marks this option as new. Left to the string in square brackets are the possible answers: ''Y''es, ''n''o, ''m''odule or ''?'' to show the help. The recommend (i.e. default) answer is capitalized (here ''Y''). The help explains the option or driver.

Unfortunately {{c|make silentoldconfig}} doesn't show a lot more information for each option, such as the context, so it is sometimes difficult to give the right answer. In this case the best way to go is to remember the option name and revise it afterwards through one of the [[Kernel/Configuration#Configuration tools|graphical kernel configuration tools]].

==== make olddefconfig ====

If all new configuration options should be set to their recommended (i.e. default) values use {{c|make olddefconfig}}:

{{RootCmd|cd /usr/src/linux
|make olddefconfig}}

==== make help ====

Use {{c|make help}} to see other conversion methods available:

{{RootCmd|make help}}

== Bouwen ==

{{Important|When external kernel modules are installed (like nvidia or zfs), it may be necessary to run {{c|make modules_prepare}} as described [[Kernel/Upgrade#Reinstalling external kernel modules|below]] before building the kernel. Some modules cannot be installed or prepared before the kernel has been built.}}

{{Important|Do not forget to reconfigure the [[Bootloader|bootloader]] to account for the new kernel filenames, and rebuild the initramfs if one is used as well.}}

Voor deze stap, volg je de stappen die vermeld staan in het [[Kernel/Configuration#Build|manueel configureren]] artikel.

=== Automated build and installation ===

It is possible to automatically build and install the newly emerged kernel using Portage hooks. While other approaches are also possible, the following is based on genkernel and gentoo-sources package. It requires the following prerequisites:

# {{c|genkernel all}} is able to build and install the kernel to which the {{Path|/usr/src/linux}} symlink points into <code>$BOOTDIR</code> and the bootloader.
# The <code>symlink</code> use flag is set for the kernel ebuild.

If those are fulfilled, simply install a <code>post_pkg_postinst</code> Portage hook as shown below.

{{FileBox|title=Automated kernel build and installation portage hook|filename=/etc/portage/env/sys-kernel/gentoo-sources|lang=bash|1=post_pkg_postinst() {
	CURRENT_KV=$(uname -r)
	# Check to see if genkernel has been run previously for the running kernel and use that config
	if [[ -f "${EROOT}/etc/kernels/kernel-config-${CURRENT_KV}" ]] ; then
		genkernel --kernel-config="${EROOT}/etc/kernels/kernel-config-${CURRENT_KV}" all
	elif [[ -f "${EROOT}/usr/src/linux-${CURRENT_KV}/.config" ]] ; then # Use latest kernel config from current kernel
		genkernel --kernel-config="${EROOT}/usr/src/linux-${CURRENT_KV}/.config" all
	elif [[ -f /proc/config.gz ]] ; then # Use known running good kernel
		zcat /proc/config.gz >> "${EROOT}/tmp/genkernel.config"
		genkernel --kernel-config="${EROOT}/tmp/genkernel.config" all
		rm "${EROOT}/tmp/genkernel.config"
	else # No valid configs known
		genkernel all
	fi
}
}}

== Externe kernel modules herinstalleren ==

{{Note|The modules_prepare step is not required if building an entire kernel as this function is done as part of the standard process.}}

Enige externe kernel modules, zoals bijvoorbeeld [[:Category:Binary kernel modules|binaire kernel modules]], dienen opnieuw gebouwd te worden voor elke nieuwe kernel. Als de kernel nog niet gebouwd was, dient deze eerst voorbereid te worden voor het bouwen van externe kernel modules.

{{RootCmd|make modules_prepare}}

Je kan de pakketten herbouwen met de ''@module-rebuild'' verzameling:

{{Emerge|@module-rebuild}}

=== Solving build problems ===

When experiencing build problems while rebuilding the current kernel, it might help to sanitize the kernel sources. Make sure to backup the {{Path|.config}} file first, as the operation will remove it. Make sure not to use a {{Path|.bak}} or {{Path|~}} suffix as backup as {{c|make distclean}} will clean those up as well.

{{RootCmd|cp .config /usr/src/kernel_config_bk
|make distclean
|mv /usr/src/kernel_config_bk .config}}

== Verwijderen ==

Zie het [[Kernel/Removal|kernel verwijderen]] artikel. 

== Zie ook ==

* {{See also|Genkernel}}

== Externe links ==

* [https://kernelnewbies.org/LinuxChanges Veranderingen in de kernel met enkele uitleg van sommige nieuwe functionaliteit]

[[Category:Kernel]]
