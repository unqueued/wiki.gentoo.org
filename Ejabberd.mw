{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|https://www.process-one.net/en/ejabberd/|header=true}}
|{{InfoBox homepage|https://www.ejabberd.im/|text=Community}}
|{{InfoBox wikipedia|Ejabberd}}
|{{InfoBox odoc|http://docs.ejabberd.im/|type=raw}}
|{{InfoBox github|processone/ejabberd}}
}}

== Set up a jabber server using ejabberd ==

This often fails at first try, because the whole ejabberd-erlang-mnesia thing can be really picky sometimes.
So, one hint may be to not initialize/start/test anything until the final hostname selections are in every config file. Changing hostname afterwards can cause problems, at least before becoming familiar with the above mentioned tools.

Second hint: If errors are encountered when restarting here, Erlang nodes might have to be stopped, which unfortunately are not called 'erlang' or something, but 'beam', so this might be found useful:
{{Cmd|killall beam -9}}

=== Installation ===

{{RootCmd|USE{{=}}"mod_pubsub mod_muc" emerge ejabberd}}
This will trigger things like: {{Package|net-im/jabber-base}}, {{Package|dev-lang/erlang}}, {{Package|net-im/ejabberd}}...

=== Configuration ===

In {{Path|/etc/jabber/ejabberd.cfg}} put:
{{FileBox|filename=/etc/jabber/ejabberd.cfg|1=
:{acl, admin, {user, "bob", "s端percomputer"<nowiki>}}</nowiki>.
}}
And:
{{FileBox|filename=/etc/jabber/ejabberd.cfg|1=
:{hosts, ["foo.bar"]}.
}}

Where foo.bar is what is required for the accounts, like bob@foo.bar
(so the server should be available at foo.bar. If not, clientside configuration needs extra server parameter).

In {{Path|/etc/jabber/ejabberctl.cfg}} put:
{{FileBox|filename=/etc/jabber/ejabberctl.cfg|1=
:ERLANG_NODE=ejabberd
}}
So the node will be called ejabberd@s端percomputer
while s端percomputer is the one configured in {{Path|/etc/conf.d/hostname}}
If this is changed, remember to call <code>/etc/init.d/hostname restart</code>

Then start:
{{RootCmd|/etc/init.d/ejabberd start}}
Then create users:
{{Cmd|<nowiki>ejabberdctl register {name} {domain} {password}</nowiki>}}
for example:
{{Cmd|ejabberdctl register bob foo.bar s端persecret}}
