{{InfoBox stack
|{{InfoBox homepage|http://www.arduino.cc/|header=true}}
|{{InfoBox wikipedia}}
}}
Arduino is an open source development platform. This document describes how to use the platform on Gentoo. Note that in addition to official and clone Arduino products based on Atmel AVR microprocessors, the environment can also support other Atmel AVR microprocessors (such as [https://github.com/MCUdude/MicroCore ATtiny13]), [http://www.stm32duino.com/viewtopic.php?f=42&t=97&sid=1f8f263f8c8283920499c949f059bad4 STM32 microprocessors], etc.

==Prepare the kernel for USB connection==
The arduino boards will be connected via USB to the computer. With this connection it is possible to write binaries to the atmega microprocessor and get debug messages from the board during run mode. Different boards have different USB interface chips. In case you prefer to use ICSP programming with an external adapter you don't need this for programming any more but eventually for debugging.
===Arduino NG (FTDI)===
{{KernelBox|title=for FTDI chip (can also be a module)|<pre>
Device Drivers  --->
    [*] USB support ---> 
      <*> USB Serial Converter support --->
        <*> USB FTDI Single Port Serial Driver
</pre>}}

===Arduino MEGA, 8U2, 16U2, 32U4 ([http://wiki.openmoko.org/wiki/USB_CDC_ACM CDC ACM])===
{{KernelBox|title=for CDC ACM (can also be a module)|<pre>
Device Drivers  --->
    [*] USB support ---> 
      <*> USB Modem (CDC ACM) support
</pre>}}

===Arduino NANO (CH340)===
These have used a range of serial converter chips, but mostly they use [http://www.wch.cn/product/CH340.html CH340].
{{KernelBox|title=for CH340 serial converter chip (can also be a module)|<pre>
Device Drivers  --->
    [*] USB support ---> 
      <*> USB Serial Converter support --->
        <*> USB Winchiphead CH341 Single Port Serial Driver
</pre>}}

==Validate connectivity==
After booting with the new kernel this can be tested after connecting the board to the computers USB port:
{{RootCmd|dmesg}}
{{ContentBox|after connect an Arduino NG|<pre>
usb 5-4: FTDI USB Serial Device converter now attached to ttyUSB0
</pre>}}
{{ContentBox|after connect an Arduino MEGA|<pre>
cdc_acm 5-4:1.0: ttyACM0: USB ACM device
</pre>}}

==Grant access==
Every user who are privileged to connect to the board should be added to the uucp group.
{{RootCmd|usermod -a -G uucp user}}

==Prepare the toolchain==
Because we need to compile code into binaries for another target platform ([http://en.wikipedia.org/wiki/Atmel Atmel] [https://en.wikipedia.org/wiki/Atmel_AVR AVR] microprocessors) we have to install a cross development [https://en.wikipedia.org/wiki/GNU_toolchain toolchain].

===Recommended: Install the toolchain using crossdev===
If you haven't already, check out the section on Creating a cross-compiler from the [https://wiki.gentoo.org/wiki/Embedded_Handbook/General/Creating_a_cross-compiler Embedded Handbook]. This will give you a good introduction to crossdev and how it works.

====Installing crossdev====
Install '''crossdev''' if you don't have it.

{{Emerge|crossdev}}

{{Note|Should you have any issues running crossdev, try upgrading to a more recent masked or unstable version.}}

====Creating the local overlay====
Before building the toolchain, you need to create a local overlay called ''crossdev''.

{{Note|The ''crossdev'' overlay will be auto-selected by the crossdev tool to build packages for all crossdev-targeted platforms &mdash; so creating only this one overlay is enough to ensure that all of the crossdev built packages remain completely separate from the native packages for your system.}}

{{Note|These commands are a quick installation method. For more details please refer to the [[Custom_repository#Crossdev|custom repository]] page, ''Crossdev'' section.}} 

{{RootCmd
|mkdir -p /usr/local/portage-crossdev/{profiles,metadata}
|echo 'crossdev' > /usr/local/portage-crossdev/profiles/repo_name
|echo 'masters {{=}} gentoo' > /usr/local/portage-crossdev/metadata/layout.conf
|chown -R portage:portage /usr/local/portage-crossdev
}}

Then instruct ''portage'' and ''crossdev'' to use this overlay:

{{FileBox|filename=/etc/portage/repos.conf/crossdev.conf|lang=ini|1=
[crossdev]
location = /usr/local/portage-crossdev
priority = 10
masters = gentoo
auto-sync = no
}}

====Build and install the toolchain====
OK, now you're all set. Build and install the AVR toolchain with this command:
{{RootCmd|crossdev -s4 --stable --portage --verbose --target avr}}

This works as of January 2018.

An older alternative recommendation from the arduino overlay is this command:
{{RootCmd|USE{{=}}-nls -openmp -pch -sanitize -vtv crossdev -t avr -s4 --without-headers}}

=====Troubleshooting=====
{{Note|Should you have any issues running crossdev, try upgrading to a more recent masked or unstable version.}}

In the event you have problems with the gcc stages, try:
{{RootCmd|USE{{=}}"-openmp -hardened -sanitize -vtv" crossdev -s4 --stable --portage --verbose --target avr}}

You may also need a workaround so that the linking works as expected (see bug [http://bugs.gentoo.org/show_bug.cgi?id=147155 147155]).

For amd64: 
{{RootCmd|ln -s /usr/x86_64-pc-linux-gnu/avr/lib/ldscripts /usr/avr/lib/ldscripts}}
Or x86:
{{RootCmd|ln -s /usr/i686-pc-linux-gnu/avr/lib/ldscripts /usr/avr/lib/ldscripts }}

===Discouraged: Install non-Gentoo toolchain===
Using the original [http://www.atmel.com/tools/ATMELAVRTOOLCHAINFORLINUX.aspx Atmel AVR toolchain] seems to be possible but not tested.

Using the Debian precompiled toolchain is described [http://blog.coldtobi.de/index.php?op=ViewArticle&articleId=21&blogId=1 over here].

==Installing the arduino IDE==
{{Warning|'''As of January 2018 the version of the Arduino IDE in portage (1.0.5-r2) is completely out of date, with the official version now at 1.8.5!''' You should probably [https://www.arduino.cc go download that one instead]. Note that you can also [https://www.arduino.cc/en/Main/Software#beta download beta and hourly builds]. This ridiculous situation is apparently directly related to a [https://bugs.gentoo.org/348991 classic example of Gentoo developer/user community separation, open source, not my problem (so screw the users) bullshit]. If you really want an ebuild packaged version instead, the apparent fix is to use the [https://github.com/mapmot/arduino-overlay arduino-overlay] which is currently up to date.}}

===Arduino overlay===

* '''Benefit''': Currently up to date. Packaged. Updates through portage possible. Pure command line (no IDE) possible.
* '''Drawback''': Unofficial distribution with unofficial packages.

<br/>

In order to make use of the [https://github.com/mapmot/arduino-overlay arduino-overlay]...

{{FileBox|filename=/etc/portage/repos.conf/arduino-overlay.conf|title=Add the arduino overlay|<pre>[arduino-overlay]
priority = 50
location = /var/lib/arduino-overlay
sync-type = git
sync-uri = https://github.com/mapmot/arduino-overlay.git
auto-sync = Yes
</pre>}}

Then you can check out the overlay...

{{RootCmd|emerge --sync}}

Then install the command line sketch build tool.

{{RootCmd|emerge -av {{=}}dev-embedded/arduino-builder-1.3.25}}

Then install the IDE.

{{RootCmd|emerge -av {{=}}dev-embedded/arduino-1.8.5}}

===Official download===

* '''Benefit''': Always up to date.
* '''Drawback''': Not packaged for Gentoo. All or nothing. Not built from source. Requires manual updates.

<br/>

[https://www.arduino.cc/en/Main/Software Official tarball downloads] (including beta and hourly versions).

===Out of date portage version (discouraged)===
*'''Benefit''': Immediately available on Gentoo.
*'''Drawback''': Earth shatteringly ancient version, no support or community.

<br/>

The arduino IDE can be installed with:
{{Emerge|arduino}}

After the start of arduino IDE (a link should be found in the application/development section of your start menu) the sketchbook location should be configured.<br />
This is possible via the menu ''File/Preferences/Sketchbook location/''.

==Using eclipse IDE==
After installing eclipse IDE you can choose between two eclipse plugins. Plugins can be installed via provided update sites.
Simply add the given site via ''eclipse menu/help/software-updates/add-site''.
{{Note| Installation of eclipse IDE is out of the scope of this article. Please read [http://gentoo-en.vfose.ru/wiki/Eclipse Eclipse wiki] for that topic.}}
{{Note|There are major changes since arduino installation version 1 (formerly versions were "022" etc.). Also major changes since arduino installation version 1.5.x where done.
Last but not least the plugin "Arduino Eclipse Extension" has reworked between version 1.2.4 and version 2.x to support the new arduino way [http://blog.baeyens.it/#home (more details there)] so the version 2.x is only compatible with eclipse juno (not helios and not indigo). Please choose the right version of eclipse for your needs!}}
===Arduino Eclipse Extension===
'''Arduino Eclipse Extension''' is a free eclipse plugin for arduino projects developed by Jantje. It depends on the installation of arduino IDE.<br />
Use the update site "http://www.baeyens.it/eclipse/update" for the installation of a plugin version which is compatible with '''arduino 1.0.4''' and eclipse '''helios''' and '''indigo'''.<br />
Use the update site "http://www.baeyens.it/eclipse/V2" for installation of a plugin version which is compatible with '''arduino 1.5.x''' and eclipse '''juno'''.

===AVR Eclipse Plugin===
'''AVR Eclipse Plugin''' is a free eclipse plugin for developing boards with avr atmel microprocessors. It is not especially make for the arduino boards, but it can used for that. It is not necessary to install arduino IDE for using that plugin. More informations can be found on the [http://avr-eclipse.sourceforge.net/wiki/index.php/The_AVR_Eclipse_Plugin wiki site].<br />
Use the update site "http://avr-eclipse.sourceforge.net/updatesite/" for installation of the plugin which is known to work with eclipse '''helios'''.
{{Note| V1 of the ''Arduino Eclipse Extension'' contains the ''AVR Eclipse Plugin'' as such you can not have both on your eclipse without confusion.
V2 no longer includes the ''AVR Eclipse Plugin'' so you can easily install ''AVR Eclipse Plugin'' next to the ''Arduino Eclipse Extension''.}}

== Tips and Tricks ==
===udev rule for Arduino NG===
This rule can be used to make an symlink {{Path|/dev/arduino}}, especially usefull in case of more than one arduino boards. For example create an file {{Path|12-mikrocontroller.rules}} and add the line below:
{{FileBox|filename=/etc/udev/rules.d/12-mikrocontroller.rules|lang=bash|1=
SUBSYSTEMS=="usb", ATTRS{product}=="FT232R USB UART", ATTRS{manufacturer}=="FTDI", NAME="ttyUSB%n", SYMLINK+="arduino"
}}

===udev rule for Arduino MEGA===
This rule can be used to make an symlink {{Path|/dev/arduino}}, especially usefull in case of more than one arduino boards.<br />
For example create an file {{Path|12-mikrocontroller.rules}} and add the line below:
{{FileBox|filename=/etc/udev/rules.d/12-mikrocontroller.rules|lang=bash|1=
SUBSYSTEMS=="usb", ATTRS{product}=="Arduino Mega 2560", ATTRS{manufacturer}=="Arduino (www.arduino.cc)", NAME="ttyACM%n", SYMLINK+="arduino"
}}

== Troubleshooting ==
=== Problem with deprecated items in avr-libc v1.8.0 and above (and Mega 2560)===
If you can see the messages below you have found this compatibility issue ([http://arduino.cc/forum/index.php/topic,92364.0.html arduino forum]).
{{ContentBox|Errors while compilation|<pre>/usr/share/arduino/hardware/arduino/cores/arduino/HardwareSerial.cpp:107:41: error: attempt to use poisoned "SIG_USART0_RECV"
/usr/share/arduino/hardware/arduino/cores/arduino/HardwareSerial.cpp:117:15: error: attempt to use poisoned "SIG_USART0_RECV"
/usr/share/arduino/hardware/arduino/cores/arduino/HardwareSerial.cpp:161:15: error: attempt to use poisoned "SIG_USART0_RECV"
/usr/share/arduino/hardware/arduino/cores/arduino/HardwareSerial.cpp:178:15: error: attempt to use poisoned "SIG_USART0_RECV"
/usr/share/arduino/hardware/arduino/cores/arduino/HardwareSerial.cpp:195:15: error: attempt to use poisoned "SIG_USART0_RECV"
</pre>}}
To fix this manipulate your {{Path|Arduino.h}} at the third line:
{{FileBox|filename=/usr/share/arduino/hardware/arduino/cores/arduino/Arduino.h|lang=cpp|1=
#ifndef Arduino_h
#define Arduino_h
//start: fix the compatibility issue
#define __AVR_LIBC_DEPRECATED_ENABLE__ 1
//end: fix the compatibility issue
#include <stdlib.h>
...
}}

== External resources ==

* [[Embedded Handbook]] - More information about embedded systems, cross compiling, and other related topics.
* [http://playground.arduino.cc/linux/gentoo Outdated guide for arduino on Gentoo] (arduino official hosted site).
* [http://www.baeyens.it/eclipse/ Arduino eclipse extension] main site.
* [http://gentoo-en.vfose.ru/wiki/Crossdev#AVR_Architecture AVR section on old crossdev wiki page]

[[Category:Embedded systems]]
