<languages />

<translate>

This FAQ is intended to answer some of the most frequently asked questions relating to Gentoo/MIPS and Linux/MIPS in general.

=== Introduction ===

This FAQ is intended to answer frequently asked questions about Gentoo/MIPS and Linux/MIPS that we receive from various users. It's aimed at both new users and experienced users alike. It has been split into a number of categories to make navigation easier. 

If you'd like to contribute to the FAQ or, having read this guide, you still have questions that are left unanswered, feel free to [http://www.gentoo.org/proj/en/base/mips/ drop us a line] . 

== About the Gentoo/MIPS Project ==

=== What is Gentoo/MIPS? ===

Gentoo/MIPS is a small project responsible for looking after the MIPS port of Gentoo Linux. 

=== Why install Gentoo Linux on MIPS? ===

Okay, sure, some MIPS machines aren't the fastest boxes on the block these days. However, despite the age of some of these beasts, they still can make very functional, useful machines. A Cobalt Qube 2 could make a very nice broadband Internet router, capable of hosting websites, email, IRC and numerous other tasks. There are a number of reasons why you'd want to install Linux on this sort of hardware. 

* It teaches you a lot about computer hardware by giving you an alternate frame of reference

* It allows you to turn what would otherwise be useless junk into a very functional system

* Status Symbol: Linux on x86 is so common these days it's not funny. However, Linux on MIPS is a lot less common and quite a talking point.

=== Why don't you port Gentoo to NetBSD/MIPS or IRIX? ===

Hey, great idea. Unfortunately, a lot of the Gentoo/MIPS team already have their hands full looking after Linux/MIPS as well as other commitments. A project like this would fall under the umbrella of the [http://www.gentoo.org/proj/en/gentoo-alt/prefix/ Gentoo Prefix project] . Some work has been done for IRIX, the remnants of which can be found in [https://bugs.gentoo.org/buglist.cgi?quicksearch=irix bugzilla] . 

== MIPS Hardware FAQs ==

=== What is MIPS? ===

[http://www.mips.com MIPS Technologies] is a company that produce a number of RISC CPU cores which implement the[http://en.wikipedia.org/wiki/MIPS_architecture MIPS Architecture] . These processors appear in all sorts of hardware ranging from small embedded devices to large servers. 

It also happens to be an acronym; '''M''' illions of '''I''' nstructions '''P''' er '''S''' econd. 

=== What sort of hardware uses MIPS processors? ===

In short... lots. MIPS Processors see use inside all sorts of machines, ranging from small PDAs (such as the early Windows CE powered Casio PDAs), X Terminals (e.g. Tektronix TekXPress XP330 series), through to workstations such as the Silicon Graphics Indy and O2 and even high end servers such as the Silicon Graphics Origin 2000. 

A comprehensive list can be found on the [http://www.linux-mips.org/wiki/index.php/Systems Linux/MIPS website] 

... and that's only scratching the surface. These machines are wide and varied. Many of them do not currently run Linux. Of those that do, we only support a handful, although you're welcome to port Gentoo/MIPS to any MIPS machine if you so wish. Some of these machines are also the focus of the [http://embedded.gentoo.org Embedded Gentoo Project] such as the Linksys WRT54G. 

=== Is my machine supported? ===

For the first one an easy way to find out is to have a look at the [http://www.gentoo.org//doc/en/mips-requirements.xml Gentoo/MIPS requirements page] . This will tell you if the system you've got can theoretically run Gentoo/MIPS. 

If you don't find your machine listed there, you may wish to have a look on the [http://www.linux-mips.org/wiki/index.php/Systems Linux/MIPS website] to find it there. Installation won't be straightforward however, as the actual process of producing a kernel and suitable boot media for your hardware will have to be done largely by yourself. Naturally though, we'll try to help where we can. 

=== Why don't you support machine X ===

If you've looked at the Gentoo/MIPS Hardware Requirements page, you've probably noticed there are a lot of machines we don't support. In the case of SGI hardware, very little is known about some of them, not enough to successfully port Linux to them. 

If you managed to get Linux working on a box currently listed as ''unsupported'' however, please tell us. We'd be interested to know. 

== MIPS Software FAQs ==

=== Which stage tarball do I use? ===

This will depend on the CPU type running in your system. The stage filename is named as follows: 

{{Code|Stage Tarball Naming Scheme|<pre>
  stage3-mipsel4_multilib-20110627.tar.bz2
  \____/ \_____/ \_____/  \______/
     |      |       |        |
     |      |       |        `-- Gentoo Release (date of creation)
     |      |       |
     |      |       `--- ABI: multilib, n32, n64 (nothing for o32)
     |      |
     |      `----------- Endianness and ISA Level
     |                     mips   ==> Big Endian
     |                     mipsel ==> Little Endian
     |
     `------------------ Stage Tarball type: 1, 2 or 3.
</pre>
}}

For R4000-class CPUs, use a <code>mips3</code> or <code>mipsel3</code> stage tarball. 

For R5000-class or later CPUs, use a <code>mips4</code> or <code>mipsel4</code> stage tarball. 

=== I got an "Illegal Instruction" or "Cannot Execute Binary File" error message when chrooting.  What did I do wrong? ===

This is generally caused by using the wrong stage tarball. If you try to run a <code>mips4</code> userland on a <code>mips3</code> CPU, you'll get an ''illegal instruction'' error message. Likewise, if you have a Big Endian CPU and you try to run Little Endian code on it, you'll get ''cannot execute binary file'' . 

The fix is simple: clean out your partition, then unpack the correct tarball. 

== Silicon Graphics Specific FAQs ==

=== Why doesn't my SGI machine netboot? ===

This could be for any number of reasons, ranging from cabling issues, through to issues on the server. The best way to troubleshoot any problem is a step-by-step approach... 

#  '''Have you got the SGI machine (and server) plugged into the right network ports?''' Make sure the network is cabled correctly. Also note that some machines have special needs. For instance the Challenge S cannot obtain network connectivity under Linux via its UTP port, you need to use the AUI port via a transceiver.

#  '''Are there any firewalls in use?''' Make sure your firewall is not blocking DHCP/BOOTP requests (ports 67 and 68 on UDP) or TFTP (port 69 on UDP). <code>iptables -I INPUT 1 -p udp --dport 67:69 -j ACCEPT</code> should get things rolling.

#  '''Have you disabled packet MTU discovery and set the port range?''' SGI boxes require {{Path|/proc/sys/net/ipv4/ip_no_pmtu_disc}} = 1 and {{Path|/proc/sys/net/ipv4/ip_local_port_range}} = "2048 32767". See [http://www.gentoo.org//doc/en/handbook/handbook-mips.xml?part=1&chap=2#doc_chap4 the Gentoo/MIPS handbook] .

#  '''Is the server giving out the correct details via BOOTP?''' Double check your {{Path|/etc/dhcp/dhcpd.conf}} . ISC's dhcpd won't dish out addressing information via BOOTP unless the machine has been statically defined with a fixed address.

#  '''Which TFTP server are you using?'''  <code>tftp-hpa</code> is known to work. <code>atftp</code> is a lot more advanced, this can cause problems. If in doubt, try installing <code>tftp-hpa</code> and see if the problem clears up.

#  '''Are the daemons running?'''  <code>dhcpd</code> should show up when typing <code>ps ax</code> . As for TFTP, it'll largely depend on whether its a standalone server, or if its running from <code>(x)inetd</code> . <code>tftp-hpa</code> runs as a process called <code>in.tftpd</code> . Look for that in the <code>ps ax</code> output and start any services not currently running.

#  '''Does the kernel exist in {{Path|/tftpboot}} ?''' Make sure you place the kernel image to be booted in this directory and that it is world-readable. ( <code>chmod 644 /tftpboot/foo</code> ) Also, in your {{Path|/etc/dhcp/dhcpd.conf}} , note that the path to the kernel will be relative to the {{Path|/tftpboot}} directory if you're using <code>tftp-hpa</code> .

#  '''Have you unset the <code>netaddr</code> and <code>dlserver</code> PROM variables?''' Try running <code>unsetenv netaddr</code> and <code>unsetenv dlserver</code> .

=== The machine downloads the kernel, but then "hangs" (using a monitor and keyboard not serial console) ===

Unfortunately, not all graphics frame buffers are supported under Linux yet. This doesn't mean you can't use the machine... it just means you'll need a null-modem serial cable to interact with it. It is quite possible that the machine is in fact running, however, the system is outputting to the serial console rather than the screen. 

== Cobalt Specific FAQs ==

=== Why won't my Cobalt machine boot? ===

This could be for a number of reasons. Our easiest bet however is to run through a checklist and make sure everything is correct. 

#  '''Have you got the Cobalt machine (and server) plugged into the right network ports?''' Make sure the network is cabled correctly. Please note, the Cobalt firmware will only boot via the Primary network port.

#  '''Are there any firewalls in use?''' Make sure your firewall is not blocking DHCP/BOOTP requests (ports 67 and 68 on UDP) or RPC/Portmap (port 111 on UDP and TCP). <code>iptables -I INPUT 1 -p udp --dport 67:68 -j ACCEPT</code>  <code>iptables -I INPUT 1 -p udp --dport 111 -j ACCEPT</code>  <code>iptables -I INPUT 1 -p tcp --dport 111 -j ACCEPT</code> should get things rolling.

#  '''Is the server giving out the correct details via BOOTP?''' Double check your {{Path|/etc/dhcp/dhcpd.conf}} . ISCs dhcpd won't dish out addressing information via BOOTP unless the machine has been statically defined with a fixed address.

#  '''Are you exporting {{Path|/nfsroot}} in your {{Path|/etc/exports}} ?''' Make sure you are exporting that to the Cobalt machine. It only needs read-only access. Also remember to run <code>exportfs -av</code> after you edit the file.

#  '''Are the daemons running?'''  <code>dhcpd</code> should show up when typing <code>ps ax</code> . Likewise with <code>portmap</code> and the other RPC daemons. The following commands should look after this for you: <code>/etc/init.d/dhcp start</code>  <code>/etc/init.d/nfs start</code> 

#  '''Does the kernel exist in {{Path|/nfsroot}} ?''' Make sure you place the kernel image to be booted in this directory and that it is world-readable. ( <code>chmod 644 /nfsroot/foo</code> )

=== Why don't you support the Qube 2700? ===

The Qube 2700 was the first of the Cobalt servers. While they are very nice machines, unfortunately, they lack a serial port. In other words, any interaction with the machine has to be done through a network. At present, our netboot images do not support this. 

== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:

</translate>

* Stuart Longland
* Matt Turner

[[Category:Core system]]
