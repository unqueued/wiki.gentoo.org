Since Boost does not provide any reasonable way for various build systems to find it, they use random hackery to do that. In order to choose a good location for boost files, and a way for the future ''boost-utils.eclass'' to enforce a particular version, this article will hold the research on how various build systems find boost currently.

== boost.m4 ==

[https://github.com/tsuna/boost.m4 boost.m4] is one of the macro sets for autotools to find boost.

=== headers ===

The macro adds a ''--with-boost'' option which allows the user to specify the path to boost installation prefix. If it is specified, the following directories are used for lookup:
  "$with_boost/include" "$with_boost"

Otherwise, the following default paths are used:
  . /opt/local/include /usr/local/include /opt/include /usr/include C:/Boost/include

For each of the fore-mentioned paths, boost lists the directory, collects all directories starting with ''boost-'' and sorts them using the version; starting with the newest version, it tries to compile a test application with a >= version test. If none of the ''boost-'' subdirs succeed, it tries one last time without a subdir.

In other words, boost.m4 always tries to find the newest boost available. However, passing ''--with-boost'' to a particular boost include directory should force it to use a particular version.
