[http://www.tryton.org/ Tryton] is a three-tiers high-level general purpose application platform under the license GPL-3 written in Python and using PostgreSQL as database engine.

It is the core base of a complete business solution ('''ERP''') providing modularity, scalability and security.

== Installation ==

First step: install PostgreSQL, following [[PostgreSQL|wiki entry]].
{{Emerge|postgresql-server}}

Second step: install layman, following [[Layman|wiki entry]].
{{Emerge|layman}}

Third step: install Tryton layout, following [http://code.google.com/p/tryton/wiki/GentooOverlay tryton instructions].
<br />
{{RootCmd|layman -a tryton}}

Fourth step: install Tryton server and client
<br />
{{Emerge|trytond}}
{{Emerge|tryton}}

== Server configuration ==

The server configuration file is /etc/trytond.conf where is possible to configure:
* json-rpc protocol
* webdav protocol
* database connection
* trytond admin password
* SMTP connection
* and so on

{{FileBox|filename=/etc/trytond.conf|title=Tryton server configuration file|lang=ini|1=
#This file is part of Tryton.  The COPYRIGHT file at the top level of
#this repository contains the full copyright notices and license terms.
[options]

# Activate the json-rpc protocol
jsonrpc = localhost:8000
#ssl_jsonrpc = False

# This is the hostname used when generating tryton URI
#hostname_jsonrpc =

# Configure the path of json-rpc data
#jsondata_path = /var/www/localhost/tryton

# Activate the xml-rpc protocol
#xmlrpc = *:8069
#ssl_xmlrpc = False

# Activate the webdav protocol
#webdav = *:8080
#ssl_webdav = False

# This is the hostname used when generating WebDAV URI
#hostname_webdav =

# Configure the database type
# allowed values are postgresql, sqlite, mysql
db_type = postgresql

# Configure the database connection
## Note: Only databases owned by db_user will be displayed in the connection dialog
## of the Tryton client. db_user must have create permission for new databases
## to be able to use automatic database creation with the Tryton client.
db_host = localhost
db_port = 5432
db_user = postgres
db_password = postgrsqlpassword
db_minconn = 1
db_maxconn = 64

# Configure the postgresql path for the executable
#pg_path = None

# Configure the Tryton server password
admin_passwd = trytonadminpassword

# Configure the path of the files for the pid and the logs
#pidfile = False
#logfile = False

#privatekey = server.pem
#certificate = server.pem

# Configure the SMTP connection
#smtp_server = localhost
#smtp_port = 25
#smtp_ssl = False
#smtp_tls = False
#smtp_password = False
#smtp_user = False

# Configure the path to store attachments and sqlite database
#data_path = /var/lib/trytond

# Allow to run more than one instance of trytond
#multi_server = False

# Configure the session timeout (inactivity of the client in sec)
#session_timeout = 600

# Enable auto-reload of modules if changed
#auto_reload = True

# Prevent database listing
#prevent_dblist = False

# Enable cron
# cron = True

# unoconv connection
#unoconv = pipe,name=trytond;urp;StarOffice.ComponentContext

# Number of retries on database operational error
# retry = 5

# Default database language code
# language = en_US
language = es_ES

# Timezone of the server
# timezone = False
}}

{{Note|Json-rpc protocol and database connection are the minimal configuration required.}}

Don't forget start the database server:
{{RootCmd|/etc/init.d/postgresql start}}
You can start the server now:
{{RootCmd|/etc/init.d/trytond start}}
If you want to start the server when de system boot up:
{{RootCmd|rc-update add trytond default}}

== Client configuration ==

You can configure the tryton client just running the application:

{{Cmd|tryton}}

The client ask you about Json-rpc and database connection. Create a new profile with the next data:
<pre>
Server: localhost
Port: 8000
Database: Create database
Username: admin
</pre>

{{Note|You need to create a new database.}}

== Modules installation ==

Initially, you only have 3 modules: ir, res and webDAV. To install other modules you can watch the app-tryton folder: /var/lib/layman/tryton/app-tryton. You can find the tryton modules. Install what you need:
{{Emerge|app-tryton/account}}
...
After that you need to tell the database that there is new modules installed, for that:

{{RootCmd|/usr/bin/trytond -d <db_name> -u account}}
or
{{RootCmd|/usr/bin/trytond -d <db_name> -u all}}

== References ==

[[file:///usr/share/doc/postgresql-docs-9.2.1/html/index.html|PostgreSQL documentation]<br />
[http://doc.tryton.org/2.8/ Tryton documentation]<br />
[http://gpo.zugaina.org/app-tryton/ Tryton overlays]<br />
[https://code.google.com/p/tryton/wiki/HelloWorld Tryton helloworld module]<br />
[http://wiki.tryton-erp.es/ Tryton spanish wiki]<br />

[[Category:Software]]
