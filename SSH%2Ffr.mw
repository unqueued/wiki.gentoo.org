<languages />

{{InfoBox stack
|{{InfoBox homepage|http://www.openssh.org|header=true}}
|{{InfoBox wikipedia|Secure Shell}}
}}
'''SSH''' ('''S'''ecure '''SH'''ell) est un programme de terminal chiffré qui remplace [[Wikipedia:telnet|telnet]] , l'outil classique des systèmes d'exploitation du type Unix.

En plus de l'accès par terminal distant procuré par le binaire principal '''ssh''', la suite de programmes SSH s'est développée pour inclure d'autres outils tels que '''scp''' (très largement utilisé) et '''sft''' (moins courant).

À l'origine, SSH n'était pas libre. Cependant, de nos jours, la version la plus populaire de SSH, qui constitue un standard de fait, est l'OpenSSH de [http://www.openbsd.org/ OpenBSD]. Cette version est pré-installée sur Gentoo.

== Exécuter OpenSSH ==

=== Serveur ===
Le serveur OpenSSH  peut être contrôlé comme n'importe quel autre service géré par [[OpenRC]], avec '''/etc/init.d/ssh start''', '''/etc/init.d/ssh stop''', and '''/etc/init.d/ssh restart'''.

Notez que les connexions actives aux serveur ne sont pas affectées lorsque vous exécutez la commande '''/etc/init.d/ssh restart''', tandis qu'exécuter  '''/etc/init.d/ssh stop''' suivi de  '''/etc/init.d/ssh start''' peut provoquer des déconnexions.

== Configuration ==

=== Configuration du serveur===
Le serveur SSH est ordinairement configuré dans le fichier {{Path|/etc/ssh/sshd_config}}, bien qu'il soit aussi possible d'effectuer des configurations ultérieures dans le fichier  {{Path|/etc/conf.d/sshd}} d'OpenRC, y compris en changeant l'emplacement du précédent. Pour des informations détaillées sur la manière de configurer le  serveur, reportez-vous à [[man page| page de manuel]] ''sshd_config'' .

Vous devriez également étudier ce [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html guide] pour une configuration centrée sur la sécurité.

=== Configuration du client ===
Le client '''ssh''' et les programmes en relation ('''scp''', '''sftp''', etc.) sont configurés dans le fichier  {{Path|/etc/ssh/ssh_config}}.   Pour plus d'informations sur la manière de configurer ces programmes, reportez-vous à la page de manuel de  ''ssh_config''.

=== Authentification sans mot de passe ===
très commode pour la gestion du  serveur  [[git]]

==== Client ====
Sur votre client, exécutez
{{Cmd|ssh-keygen -t rsa}}
puis faites Entrée 5 fois pour générer votre clé. Déplacer votre  clé client publique ~/.ssh/id_rsa.pub vers le  serveur auquel vous allez vous connecter  en tant que clé autorisée en la plaçant dans ~/.ssh/authorized_keys.

==== Serveur ====
Ajouter un utilisateur avce la commande useradd.

puis placez le fichier id_rsa.pub du client dans le dossier  ~/.ssh/authorized_keys du nouvel utilisateur.

==== Test sur une machine unique ====
{{Cmd|ssh-keygen -t rsa}}
Faites 5 fois Entrée

{{Cmd|mv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys}}
{{Cmd|ssh localhost}}

== Dépannage ==
Il y a trois niveau de débogage.  ''-v'' fait que ssh imprime des messages de débogage sur sa progression.  Ceci est utile pour déboguer une connexion, l'authentification, et les problèmes de configuration.  De multiples optioni  -v augmente la loquacité. Le maximum est 3.

debug1 mode:
{{Cmd|ssh example.org -v}}

debug2 mode:
{{Cmd|ssh example.org -vv}}

Mode de débogage 3:
{{Cmd|ssh example.org -vvv}}

=== Death of Long-lived Connections ===
Many internet access devices perform network address translation ([[NAT]]), a process that enables devices on a private network such as that typically found in a home or business place to access foreign networks, such as the internet, despite only having a single IP address on that network.  Unfortunately, not all NAT devices are created equal, and some of them incorrectly close long-lived, occasional-use TCP connections such as those used by SSH.  This is generally observable as a sudden inability to interact with the remote server, though the '''ssh''' client program has not exited.

In order to resolve the issue, OpenSSH clients and servers can be configured to send a 'keep alive', or invisible message aimed at maintaining and confirming the live status of the link.
* To enable keep alive '''for all clients connecting to your local server''', set ''ClientAliveInterval 30'' (or some other value, in seconds) within the {{Path|/etc/ssh/sshd_config}} file.
* To enable keep alive '''for all servers connected to by your local client''', set ''ServerAliveInterval 30'' (or some other value, in seconds) within the {{Path|/etc/ssh/ssh_config}} file.

== See also ==
* [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html Securing OpenSSH] - Gentoo developer documentation.
* [http://www.gentoo.org/doc/en/articles/openssh-key-management-p1.xml OpenSSH Key Management Part1] - Gentoo documentation, have a look at all 3 parts.
* [http://www.gentoo.org/doc/en/keychain-guide.xml Gentoo Linux Keychain Guide]
* [[autossh]] - Detects when SSH connections drop and auto-reconnects.


[[Category:SSH]]
[[Category:Server]]
[[Category:Daemons]]
