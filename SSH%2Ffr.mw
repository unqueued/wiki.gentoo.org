<languages />

{{Metadata|abstract=SSH (Secure Shell) est un programme de terminal chiffré qui remplace le classique outil telnet sur les systèmes d'exploitation du type Unix.}}

{{InfoBox stack
|{{InfoBox homepage|http://www.openssh.org|header=true}}
|{{InfoBox wikipedia|Secure Shell}}
{{InfoBox ohloh|openssh}}
}}
'''SSH''' ('''S'''ecure '''SH'''ell) est un programme de terminal chiffré qui remplace [[Wikipedia:telnet|telnet]] , l'outil classique des systèmes d'exploitation du type Unix.

In addition to remote terminal access provided by the main '''ssh''' binary, the SSH suite of programs has grown to include other tools such as '''scp''' ('''s'''ecure '''c'''o'''p'''y) and '''sftp''' ('''s'''ecure '''f'''ile '''t'''ransfer '''p'''rotocol).

À l'origine, SSH n'était pas libre. Cependant, de nos jours, la mise en œuvre la plus populaire de SSH, qui constitue un standard de fait, est l'OpenSSH de [http://www.openbsd.org/ OpenBSD]. Cette version est pré-installée sur Gentoo.

== Installation ==

La plupart des déploiements ont déjà OpenSSR installé (via le paquet {{Package|net-misc/openssh}}). Ce paquet utilise les options suivantes de la variable USE :

{{USEflag|paquet=net-misc/openssh
|bindist
|hpn
|pam
|tcpd
|kerberos
|ldap
|libedit
|selinux
|skey
|static
|X
|X509
}}

Après avoir changé les options de la variable USE, n'oubliez pas de recompiler OpenSSH :

{{emerge|net-misc/openssh}}

== Exécuter OpenSSH ==

=== Serveur ===

Ajoutez openssh au niveau d'exécution par défaut si cela n'a pas encore été fait.

{{RootCmd|rc-update add sshd default}}

Démarrez le démon sshd avec la commande :

{{RootCmd|/etc/init.d/sshd start}}

Le serveur OpenSSH peut être contrôlé comme tout autre service géré par [[OpenRC]] :

{{RootCmd|/etc/init.d/sshd start
|/etc/init.d/sshd stop
|/etc/init.d/sshd restart}}

{{Note|Les connexions actives au serveur SSH ne sont pas affectées lors de l'exécution de la commande <code>/etc/init.d/sshd restart</code>.}}

== Configuration ==

=== Créer les clés ===

Pour vous fournir un shell sécurisé, des clés de chiffrage sont utilisées pour le chiffrage, le déchiffrage et les fonctionnalités de  hâchage offertes par SSH. 

Au premier démarrage du service SSH, des clés systèmes sont générées. Les clés peuvent être régénérées via la commande <code>ssh-keygen</code>.

{{Note|Remplacez  <code>SecretPassphrase</code> dans les exemples par votre propre phrase de passe.}}

Pour générer les clés utilisées par la version 1 du protocole SSH (qui n'est normalement plus activé et a été rendu obsolète au profit de la version 2 du protocole) :

{{RootCmd|/usr/bin/ssh-keygen -t rsa1 -b 1024 -f /etc/ssh/ssh_host_key -N "SecretPassphrase"}}

Pour générer les clés les clés pour la version 2 du protocole SSH (algorythmes DSA et RSA):

{{RootCmd|/usr/bin/ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key -N "SecretPassphrase"
|/usr/bin/ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N "SecretPassphrase"}}

=== Configuration du serveur ===

Le serveur SSH est ordinairement configuré dans le fichier {{Path|/etc/ssh/sshd_config}}, bien qu'il soit aussi possible de compléter la configuration dans le fichier {{Path|/etc/conf.d/sshd}} d'OpenRC, y compris le changement de l'emplacement du fichier de configuration. Pour une information détaillée sur la manière de configurer le serveur, reportez-vous à la [[man page|page de manuel]] de ''sshd_config''.

Vous devriez également étudier ce [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html guide] pour une configuration centrée sur la sécurité.

=== Configuration du client ===

Le client '''ssh''' et les programmes en relation ('''scp''', '''sftp''', etc.) peuvent être configuré grâce aux fichiers suivants :
* {{Path|~/.ssh/config}}
* {{Path|/etc/ssh/ssh_config}}

Pour une information plus complète reportez-vous à la page de manuel <code>ssh_config</code>

{{Cmd|man ssh_config}}

=== Authentification sans mot de passe ===

Pratique pour la gestion du serveur [[git]].

==== Client ====

Sur votre client, exécutez :

{{Cmd|ssh-keygen -t rsa|output=<pre>
Generating public/private rsa key pair.
Enter file in which to save the key (/home/larry/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/larry/.ssh/id_rsa.
Your public key has been saved in /home/larry/.ssh/id_rsa.pub.
The key fingerprint is:
de:ad:be:ef:15:g0:0d:13:37:15:ad:cc:dd:ee:ff:61 larry@client
The key's randomart image is:
+--[ RSA 2048]----+
|                 |
|     .           |
| . .. n   .      |
|   . (: . .      |
|  o   . . : .    |
| . ..: >.> .     |
|  * ?. .         |
| o.. .. ..       |
| :. .  ! .       |
+-----------------+
</pre>}}

==== Serveur ====

Assurez-vous qu'un compte pour le client existe sur le serveur, et placez le contenu du fichier {{Path|id_rsa.pub}} dans {{Path|~/.ssh/authorized_keys}} file.

==== Test sur une machine unique ====

La procédure mentionnée ci-dessus peut être testée localement :

{{Cmd|ssh-keygen -t rsa|output=<pre>
Generating public/private rsa key pair.
Enter file in which to save the key (/home/larry/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
...
</pre>}}

{{Cmd|mv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys}}

{{Cmd|ssh localhost}}

== Dépannage ==

Il y a trois niveaux de débogage.  ''-v'' fait que ssh imprime des messages de débogage sur sa progression.  Ceci est utile pour déboguer une connexion, l'authentification, et les problèmes de configuration.  De multiples options  -v augmentent la loquacité. Le maximum est 3.

{{Cmd|ssh example.org -v
|ssh example.org -vv
|ssh example.org -vvv}}

=== Extinction des connexions à longue durée de vie ===

Beaucoup de périphériques d'accès à Internet effectuent de la translation d'adresses  ([[NAT]]), un processus qui autorise des matériels sur un réseau privé, tels que ceux rencontrés à la maison ou au bureau, à accéder à des réseaux externes, comme l'Internet, tout en n'ayant qu'une adresse IP unique sur ces réseaux.  Malheureusement, tous les périphériques  NAT ne se valent pas, et quelques uns d'entre-eux ferment inadéquatement des connexions à longue durée de vie qui utilisent occasionnellement TCP  comme celles qui utilisent SSH.  Ceci est généralement observable comme une soudaine incapacité à interagir avec le serveur distant, alors que le programme client '''ssh''' n'a pas été interrompu.

Pour résoudre ce problème, les clients OpenSSH et les serveurs peuvent être configurés pour envoyer un message invisible , ou  'keep alive (maintenir en vie)', qui vise à maintenir et à confirmer l'état vivant du lien. 
* Pour activer keep alive '''pour tous les clients se connectant à votre serveur local ''', définissez ''ClientAliveInterval 30'' (ou une autre valeur en secondes) dans le fichier  {{Path|/etc/ssh/sshd_config}}.
* Pour activer  keep alive '''pour tous les serveurs auxquels se connecte votre client local''', définissez ''ServerAliveInterval 30'' (ou une autre valeur en secondes) dans le fichier  {{Path|/etc/ssh/ssh_config}}.

=== X11 Forwarding Not Forwarding ou Tunneling! ===

<b>Problème</b>: Après avoir effectué les changements nécessaires aux fichiers de configuration pour autoriser le transfert X11 ( X11 Forwarding), vous vous rendrez compte que les applications X sont exécutées sur le serveur et ne sont pas transmises au client.

<b>Solution</b>: Ce qui se passe très vraissemblablement lors de la connexion SSH au serveur ou hôte distant, c'est que la variable  <code>$DISPLAY</code> est, soit non définie, soit définie après que la session SSH l'ait définie.

Vérifiez ce scénario après vous être connecté à distance de la manière suivante :

{{Cmd|echo $DISPLAY|output=<pre>
localhost:10.0
</pre>}}

Vous devriez obtenir quelque chose qui ressemble à  "localhost:10.0" ou "localhost2.local:10.0" en utilisant le règlage coté serveur  <code>X11UseLocalhost no</code> .  Si vous obtenez le ":0.0" habituel, assurez-vous que vous n'effacez pas, ou ne réinitialisez pas, la variable <code>$DISPLAY</code> dans {{Path|$HOME/.bash_profile}}. Si c'est le cas, retirez, ou mettez en commentaire, votre initialisation personnalisée de  <code>$DISPLAY</code> ou empêchez  {{Path|bash_profile}} d'exécuter  SSH lors de la connexion :

{{Cmd|ssh -t me@localhost2 bash --noprofile}}

Une astuce consiste à créer un alias pour cela dans {{Path|bashrc}}.

== Intrusion Prevention ==
ssh is a commonly attacked service.  [[sshguard]] & [[fail2ban]] monitor logs and black list remote users who have repeatedly failed to login.

== See also ==
* [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html Securing OpenSSH] - Gentoo developer documentation.
* [http://www.gentoo.org/doc/en/articles/openssh-key-management-p1.xml OpenSSH Key Management Part1] - Gentoo documentation, have a look at all 3 parts.
* [[Keychain|Gentoo Linux Keychain Guide]]
* [[autossh]] - Detects when SSH connections drop and auto-reconnects.


[[Category:SSH]]
[[Category:Server]]
[[Category:Daemons]]
