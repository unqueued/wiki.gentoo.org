<languages />
<translate>
<!--T:1-->
When using {{c|emerge}} for building a package, it is not uncommon to notice messages coming from [[Portage]] itself. Since they may contain important information from Gentoo developers it is a good idea to read them, but often this is not immediately possible because they rapidly scroll out of the screen. This can be easily solved by enabling a Portage [[FEATURES|feature]] called elog, whose purpose is to save messages to disk for later review. But other logging capabilities exist as well...

== Portage elog subsystem == <!--T:2-->

<!--T:3-->
The Portage elog subsystem keeps track of specific, ebuild-provided log messages that developers have put in the [[ebuild]]s to attract attention of the administrator or user. Often, these messages contain important or interesting information related to the build of said package.

=== Setup === <!--T:4-->

<!--T:5-->
Select which kind of information should be logged through the <var>PORTAGE_ELOG_CLASSES</var> variable. Possible values are <code>info</code>, <code>warn</code>, <code>error</code>, <code>log</code> and <code>qa</code>:

<!--T:6-->
{{FileBox|filename=[[:/etc/portage/make.conf]]|lang=bash|1=
PORTAGE_ELOG_CLASSES="log warn error"
}}

=== Configuring for file-based storage === <!--T:7-->

<!--T:8-->
Portage can handle the elog events in a number of ways.

<!--T:9-->
In order to save the elog events to disk, enable the <code>save</code> module in the <var>PORTAGE_ELOG_SYSTEM</var> variable:

<!--T:10-->
{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_ELOG_SYSTEM="save"
}}

<!--T:11-->
The messages will be saved in {{Path|/var/log/portage/elog}} or in {{Path|${PORTAGE_LOGDIR}/elog}} if said variable is set.

<!--T:12-->
In order to create per-category elog files, enable the <code>split-elog</code> Portage feature. It will force Portage to create category-based subdirectories of the {{Path|/var/log/portage/elog}} location.

=== Configuring for e-mail === <!--T:13-->

<!--T:14-->
To mail logs to a recipient, enable the <code>mail</code> module. The mail option requires some additional variables to be set. Read {{Path|/usr/share/portage/config/make.conf.example}} for more information.

<!--T:15-->
Below, an example setup is shown which is hopefully self-explanatory:

<!--T:16-->
{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_ELOG_SYSTEM="mail"
# First the mail-to address, then the SMTP server
PORTAGE_ELOG_MAILURI="log-intake@example.com mail.example.com"
PORTAGE_ELOG_MAILFROM="portage@$(hostname).example.com"
PORTAGE_ELOG_MAILSUBJECT="${PACKAGE} is ${ACTION} on ${HOST}"
}}

<!--T:34-->
Another example with nullmailer or sendmail:

<!--T:35-->
{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_ELOG_SYSTEM="mail"
# First the mail-to address, then the SMTP server
PORTAGE_ELOG_MAILURI="users@host /usr/sbin/sendmail"
PORTAGE_ELOG_MAILFROM="portage@$(hostname).example.com"
PORTAGE_ELOG_MAILSUBJECT="${PACKAGE} is ${ACTION} on ${HOST}"
}}

=== Related software === <!--T:17-->

<!--T:18-->
The following is a list of elog-related software packages:

<!--T:19-->
* {{Package|app-portage/elogv}} - Curses based utility to parse the contents of elogs
* {{Package|app-portage/elogviewer}} - Python based elog viewer

== Build logs == <!--T:20-->

<!--T:21-->
Package build logs can be saved to disk or mailed to a remote recipient. This allows administrators to review builds later.

=== Setup === <!--T:22-->

<!--T:23-->
To enable saving build logs, edit {{Path|[[:/etc/portage/make.conf]]}} and set <var>PORTAGE_LOGDIR</var> to a location where the log files should be stored. By default, when {{C|emerge}} is running, Portage saves the build log of a package to {{Path|${PORTAGE_TMPDIR}/portage/${CATEGORY}/${PF}/temp/build.log}} (possibly followed by an extension if <code>compress-build-logs</code> is in <var>FEATURES</var>), where <var>PORTAGE_TMPDIR</var> is {{Path|/var/tmp}} unless set to something different in {{Path|make.conf}}, and <var>${CATEGORY}</var> and <var>${PF}</var> represent the package's category and name (with version and revision), respectively. Directory {{Path|${PORTAGE_TMPDIR}/portage/${CATEGORY}/${PF}}} will be deleted after {{C|emerge}} finishes successfully, and the contained build log lost, but kept if it doesn't, so the log will still be available for [[Attach the logs to the bug ticket|attaching to support tickets]]:

<!--T:24-->
{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_LOGDIR="/var/log/portage"
}}

It is customary to choose {{Path|/var/log/portage}} as the location for log files, because it is where the elog subsystem's {{Path|elog}} directory would be if <var>PORTAGE_LOGDIR</var> has been previously empty or unset.

<!--T:25-->
Next, you may want to edit and/or set a number of <var>FEATURES=</var> settings in  {{Path|[[:/etc/portage/make.conf]]}} which influence how Portage handles build logs.

<!--T:26-->
* With <code>binpkg-logs</code> set, even binary package deployments will have their logs saved
* When <code>clean-logs</code> is set, regular log file clean operations are executed. The command that is executed is defined by <var>PORTAGE_LOGDIR_CLEAN</var> and defaults to a retention of the files of 7 days.
* With <code>split-log</code> set, build logs are stored in category-named subdirectories of <code>${PORTAGE_LOGDIR}/build</code>

{{Note|Until Portage version 2.3.53, <var>PORTAGE_LOGDIR</var> used to be named <var>PORT_LOGDIR</var>. This old name is now deprecated.}}

=== Cleaning up === <!--T:27-->

<!--T:28-->
When <code>clean-logs</code> is set, Portage will execute the command defined by <var>PORTAGE_LOGDIR_CLEAN</var> after every build or unmerge operation. By default, the following command is used:

<!--T:29-->
{{FileBox|filename=/usr/share/portage/config/make.globals|lang=bash|1=
PORTAGE_LOGDIR_CLEAN="find \"\${PORTAGE_LOGDIR}\" -type f ! -name \"summary.log*\" -mtime +7 -delete"
}}

<!--T:30-->
When defining a custom command, do not forget to ''escape'' the <var>PORTAGE_LOGDIR</var> variable (or immediately hardcode the right location).

{{Note|Until Portage version 2.3.53, <var>PORTAGE_LOGDIR_CLEAN</var> used to be named <var>PORT_LOGDIR_CLEAN</var>. This old name is now deprecated.}}

== External resources == <!--T:31-->

<!--T:32-->
* [[User:SwifT|Sven Vermeulen]]. [http://blog.siphos.be/2013/09/underestimated-or-underused-portage-elogging/ "Underestimated or underused: Portage (e)logging "], September 25th, 2013. Retrieved on May 30th, 2019.

</translate>
[[Category:Portage]]
