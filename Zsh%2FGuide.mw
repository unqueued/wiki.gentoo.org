== Installation ==

=== Installing zsh ===

To install <code>zsh</code> under Gentoo, we need to emerge the {{Package|app-shells/zsh}} (zsh itself) and {{Package|app-shells/zsh-completion}} (zsh completion scripts) packages. 

{{Emerge|zsh zsh-completion}}

=== Entering zsh ===

When you start <code>zsh</code> for the first time, you get the following message. You can skip this menu as we will create an init file later in this guide. 

{{Cmd|zsh|output=<pre>
This is the Z Shell configuration function for new users, zsh-newuser-install.
You are seeing this message because you have no zsh startup files
(the files .zshenv, .zprofile, .zshrc, .zlogin in the directory
~).  This function can help you with a few settings that should
make your use of the shell easier.

You can:

(q)  Quit and do nothing.  The function will be run again next time.

(0)  Exit, creating the file ~/.zshrc containing just a comment.
     That will prevent this function being run again.

(1)  Continue to the main menu.

--- Type one of the keys in parentheses --- q
</pre>
}}


== Configuration ==

=== Introduction ===

To start zsh for a single session, run <code>zsh</code> . For a more permanent solution, please refer to the chapter on [[#Saving_settings]]. After the installation, <code>zsh</code> seems to be very simple and rather limited in the area of functionality. To change this, several configuration changes need to be performed. 

=== Advanced Tab-completion ===

To enable the famous <code>zsh</code> tab-completion system, you need to run the following commands: 

{{Cmd|autoload -U compinit
|compinit}}

Default completion style is quite plain and ugly. If you want to improve its appearance, enter the following commands: 

{{Cmd|zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
|zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'}}

=== Command correction ===

It is also a good idea to enable the auto-correction of the commands typed: 

{{Cmd|setopt correctall}}

=== Prompts ===

The prompt may seem quite boring however, but we can fix it easily in several steps. First, we need to initialize advanced prompt support: 

{{Cmd|autoload -U promptinit
|promptinit}}

Available prompts samples may be printed via the <code>prompt -p</code> command. Now we can activate our favorite one: 

{{Cmd|prompt gentoo&gt;}}

{{Cmd|ls|prompt=gentoo&gt;}}

{{Note|If you're playing around with the different prompts, and you don't want to see a sample of every one, you can use <code>prompt -l</code> to list the prompts available.}}

Another option is to create your own prompt. To do this you will need to set the PS1 environment variable. 

{{Cmd|export PS1{{=}}"<nowiki>[Test Prompt]</nowiki> &gt; "}}
{{Cmd|ls|prompt=<nowiki>[Test Prompt]</nowiki> &gt; }}

While it is good to be able to create a custom text prompt, zsh also provides many escape sequences that allow system information to be inserted into the prompt. Some of the escape sequences available are: 

{| class="wikitable" style="text-align: left;" 
|- 
! Sequence
! Printed
|- 
| %T
| System time (HH:MM)
|- 
| %*
| System time (HH:MM:SS)
|- 
| %D
| System date (YY-MM-DD)
|- 
| %n
| Your username
|- 
| %B - %b
| Begin - end bold print
|- 
| %U - %u
| Begin - end underlining
|- 
| %d
| Your current working directory
|- 
| %~
| Your current working directory, relative to ~
|- 
| %M
| The computer's hostname
|- 
| %m
| The computer's hostname (truncated before the first period)
|- 
| %l
| Your current tty
|-
|}

These escape sequences may simply be inserted into the environment variable, PS1, and zsh will parse them automatically. 

{{Cmd|export PS1{{=}}"[%* - %D] %d %% "}}
{{Cmd|ls|prompt=[08:44:23 - 06-02-18] /home/username %}}

=== History ===

Unfortunately, the default zsh configuration in Gentoo does not include command history support. As working with a shell without history is very frustrating, we should enter the following commands: 

{{Cmd|export HISTSIZE{{=}}2000
|export HISTFILE{{=}}"$HOME/.history"}}

History won't be saved without the following command:

{{Cmd|export SAVEHIST{{=}}$HISTSIZE}}

To prevent history from recording duplicated entries (such as <code>ls -l</code> entered many times during single shell session), you can set the <code>hist_ignore_all_dups</code> option: 

{{Cmd|setopt hist_ignore_all_dups}}

A useful trick to prevent particular entries from being recorded into a history by preceding them with at least one space. 

{{Cmd|setopt hist_ignore_space}}

The following command won't be recorded. Note the extra space before it:

{{Cmd|cat /proc/cpuinfo}}

=== Miscellaneous settings ===

You can set the <code>autocd</code> option if you want to avoid tedious typing of <code>cd</code> command while changing current directory (for example <code>/etc</code> instead of <code>cd /etc</code> ). 

{{Cmd|setopt autocd}}

If standard bash-like globbing does not satisfy you, <code>extendedglob</code> option may be set to enable extended globbing (one similar to regular expressions). 

{{Cmd|setopt extendedglob}}

When option above is set, you are able to use extended globbing queries such as <code>cp ^*.(tar|bz2|gz)</code> . 

== Saving settings ==

=== Saving zsh settings ===

Once we have customized <code>zsh</code> the way we like it, it is a good idea to save these options as the <code>zsh</code> defaults for the system. One possible way to achieve this is to write our settings in the {{Path|/etc/zsh/zshrc}} script. Alternatively, we could make them the defaults for our account only be editing {{Path|~/.zshrc}} . 

{{Code|An example zshrc|<pre>
#!/bin/zsh

# completion
autoload -U compinit
compinit

# correction
setopt correctall

# prompt
autoload -U promptinit
promptinit
prompt gentoo
</pre>
}}


== Making zsh default shell ==

=== Option for users with root privileges ===

We can change shell for given user with <code>usermod</code> command. 

{{RootCmd|usermod -s /bin/zsh userlogin}}


=== Alternative for non-root users ===

If your system administrator (despite gentle requests, that is) refuses to set the shell to zsh for you, you can set <code>bash</code> to execute <code>zsh</code> on startup, all you need to do is make a slight modification to your {{Path|~/.bashrc}} . 

{{Code|Sample ~/.bashrc|<pre>
## (Add the following to your ~/.bashrc)
exec zsh
</pre>
}}

Another method of changing shells is to use the <code>chsh</code> command (a utility used to change a user's login shell). A normal user may only change the login shell for his own account. As root, you can change the login shell of any user. 

{{Cmd|chsh -s /bin/zsh username}}

== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:

* Henryk Konsek
* Andrew Morritt
* Chris White
* Peter Weller

[[Category:Shell]]
