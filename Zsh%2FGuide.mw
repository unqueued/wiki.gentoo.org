This guide [[Article description::details installation, configuration, and light usage functionality for zsh.]]

== Installation ==

=== Emerge ===

Emerging {{c|zsh}} under Gentoo ({{Package|app-shells/zsh}}) will install it: 

{{Emerge|app-shells/zsh}}

=== Additional software ===

It is also a good idea to install the zsh auto-completion scripts ({{Package|app-shells/zsh-completions}}):

{{Emerge|app-shells/zsh-completions}}

For Gentoo systems there is also a set of special Gentoo completion scripts:

{{Emerge|app-shells/gentoo-zsh-completions}}

== Configuration ==

=== Initiation ===

When starting {{c|zsh}} for the first time, the following message will appear. This menu can be skipped (by pressing {{Key|q}} then {{Key|Enter}}) as an init file will be created later in this guide. 

{{Invocation|zsh|output=<pre>
This is the Z Shell configuration function for new users, zsh-newuser-install.
You are seeing this message because you have no zsh startup files
(the files .zshenv, .zprofile, .zshrc, .zlogin in the directory
~).  This function can help you with a few settings that should
make your use of the shell easier.

You can:

(q)  Quit and do nothing.  The function will be run again next time.

(0)  Exit, creating the file ~/.zshrc containing just a comment.
     That will prevent this function being run again.

(1)  Continue to the main menu.

--- Type one of the keys in parentheses --- q
</pre>
}}

=== Advanced tab-completion ===

To enable the famous {{c|zsh}} tab-completion system, the following commands must be run: 

{{Cmd
|autoload -U compinit
|compinit
}}

Default completion style is quite plain and ugly. To improve its appearance, enter the following commands: 

{{Cmd|zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
|zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'
}}

=== Command correction ===

It is also a good idea to enable the auto-correction of the commands typed: 

{{Cmd|setopt correctall}}

=== Prompts ===

The prompt may seem quite boring however, but we can fix it easily in several steps. First, we need to initialize advanced prompt support: 

{{Cmd
|autoload -U promptinit
|promptinit
}}

Available prompts samples may be printed via the {{c|prompt -p}} command. Now we can activate our favorite one: 

{{Cmd|prompt gentoo&gt;}}

{{Cmd|prompt=gentoo&gt;|ls}}

{{Note|When playing around with the different prompts, {{c|prompt -l}} can be used to list the prompts available and so that a sample of every prompt is not displayed.}}

Another option is to create a custom prompt. To do this the <var>PS1</var> environment variable must be modified. For example:

{{Cmd|export PS1{{=}}"<nowiki>[Test Prompt]</nowiki> &gt; "}}

{{Cmd|ls|prompt=<nowiki>[Test Prompt]</nowiki> &gt; }}

While it is good to be able to create a custom text prompt, zsh also provides many escape sequences that allow system information to be inserted into the prompt. Some of the escape sequences available are: 

{| class="table table-condensed table-striped" style="text-align: left;" 
|- 
! Sequence
! Printed
|- 
| <code>%T</code>
| System time (HH:MM).
|- 
| <code>%*</code>
| System time (HH:MM:SS).
|- 
| <code>%D</code>
| System date (YY-MM-DD).
|- 
| <code>%n</code>
| Current username.
|- 
| <code>%B</code> - <code>%b</code>
| Begin - end bold print.
|- 
| <code>%U</code> - <code>%u</code>
| Begin - end underlining.
|- 
| <code>%d</code>
| The current working directory.
|- 
| <code>%~</code>
| The current working directory, relative to the home directory.
|- 
| <code>%M</code>
| The computer's hostname.
|- 
| <code>%m</code>
| The computer's hostname (truncated before the first period).
|- 
| <code>%l</code>
| The current tty.
|-
|}

These escape sequences may simply be inserted into the environment variable, <var>PS1</var>, and zsh will parse them automatically. 

{{Cmd|export PS1{{=}}"[%* - %D] %d %% "}}

{{Cmd|ls|prompt=[08:44:23 - 06-02-18] /home/username %}}

=== History ===

Unfortunately, the default zsh configuration in Gentoo does not include command history support. As working with a shell without history is very frustrating, we should enter the following commands: 

{{Cmd
|export HISTSIZE{{=}}2000
|export HISTFILE{{=}}"$HOME/.history"
}}

History won't be saved without the following command:

{{Cmd|export SAVEHIST{{=}}$HISTSIZE}}

To prevent history from recording duplicated entries (such as {{c|ls -l}} entered many times during single shell session), the <code>hist_ignore_all_dups</code> option can be set: 

{{Cmd|setopt hist_ignore_all_dups}}

A useful trick to prevent particular entries from being recorded into a history by preceding them with at least one space. 

{{Cmd|setopt hist_ignore_space}}

The following command won't be recorded. Note the extra space before it:

{{Cmd| cat /proc/cpuinfo}}

=== Miscellaneous settings ===

The <code>autocd</code> option can be set to avoid tedious typing of {{c|cd}} command while changing current directory (for example {{Path|/etc}} instead of {{c|cd /etc}}). 

{{Cmd|setopt autocd}}

If standard bash-like globbing does not satisfy, <code>extendedglob</code> option may be set to enable extended globbing (one similar to regular expressions). 

{{Cmd|setopt extendedglob}}

When option above is set, extended globbing queries such as {{c|cp ^*.(tar|bz2|gz)}} are available for use. 

=== Saving settings ===

==== Saving zsh settings ====

Once we have customized {{c|zsh}} the way we like it, it is a good idea to save these options as the {{c|zsh}} defaults for the system. One possible way to achieve this is to write our settings in the {{Path|/etc/zsh/zshrc}} script. Alternatively, we could make them the defaults for our account only be editing {{Path|~/.zshrc}}. 

{{FileBox|title=An example ~/.zshrc file|filename=~/.zshrc|lang=bash|1=
#!/bin/zsh

# Completion
autoload -U compinit
compinit

# Correction
setopt correctall

# Prompt
autoload -U promptinit
promptinit
prompt gentoo
}}

=== Making zsh default shell ===

==== The regular way ====

The shell for the current user can be changed using the {{c|chsh}} command:

{{Cmd|chsh -s /bin/zsh}}

This will set zsh as default shell for the current account. In order to set it as a shell for another account {{c|chsh}} must be ran with as root (super user) privileges.

==== Alternative (without chsh)====

If a system administrator (despite gentle requests) refuses to set the default login shell to zsh and the {{c|chsh}} command does not work, {{c|bash}} can be used to execute {{c|zsh}} on startup. Only a slight modification to the {{Path|~/.bashrc}} file is required:

{{FileBox|filename=~/.bashrc|lang=bash|1=
exec zsh
}}

== Usage ==

=== Invocation ===

To start {{c|zsh}} for a single session, invoke {{c|zsh}} from a terminal emulator.

For a more permanent solution, please refer to the above [[#Saving_settings|Saving settings]] section. After the installation, {{c|zsh}} seems to be very simple and rather limited in the area of functionality. To change this, several configuration changes need to be performed.

== See also ==

* {{See also|Shell}}
* {{See also|Bash}}
* {{See also|Dash}}

{{Migrated|originalauthors=Henryk Konsek, Andrew Morritt, Chris White, and Peter Weller}}

[[Category:Shell]]
