<languages />
{{Metadata|abstract=udev это менеджер устройств для ядра Linux. Он обрабатывает файлы устройств в каталоге /dev и обрабатывает все действия пользователя при добавлении или удалении устройств.}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://www.freedesktop.org/software/systemd/libudev/|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox gitweb|http://cgit.freedesktop.org/systemd/systemd/tree/src/udev|raw=true}}
}}

'''udev''' is the device manager for the Linux kernel. It manages device nodes in {{Path|/dev}} and handles all user space actions when adding or removing devices. Readers of this article should also look at [[Eudev|eudev]], a fork of udev.

== Что такое udev? ==

=== Каталог /dev ===

When Linux users talk about the hardware on their system in the vicinity of people who believe Linux is some sort of virus or brand of coffee, the use of "slash dev slash foo" will return strange looks for sure. But for the fortunate user (and that includes the reader of this article) using {{Path|/dev/sda1}} is just a fast way of referring to the primary master SATA, first partition. That's pretty easy, right? 

Most Linux users know what a [[device file]] is. Some even know why device files have special numbers. Take a close look at device list when <tt>ls -l</tt> is issued in the {{Path|/dev}} folder. What users take for granted is that the primary SATA disk is referred to as {{Path|/dev/sda}} Some users might not see it this way, but this is a flaw by design. 

Think about hotpluggable devices like USB, IEEE1394, hot-swappable PCI, etc. What is the first device? And for how long? What will the other devices be named when the first one disappears? How will that affect ongoing transactions? Wouldn't it be fun that a printing job is suddenly moved from a super-new laser printer to an almost-dead matrix printer because someone's mom decided to pull the plug of the laser printer which just so ''happened'' to be the first printer? 

Перейдем к <tt>udev</tt>. Цели проекта udev как занимательны, так и актуальны. Udev:

* Runs in userspace;
* Dynamically creates and removes device files;
* Provides consistent naming;
* Provides a userspace application program interface (API).

Каждая раз, когда в структуре устройств появляется изменение, ядро генерирует ''uevent'', который ловится <tt>udev</tt>. Затем <tt>udev</tt> следует правилам, определенным в каталогах {{Path|/etc/udev/rules.d}}, {{Path|/run/udev/rules.d}} и {{Path|/lib/udev/rules.d}}. На основании информации в uevent, он находит правило или правила, которые он должен выполнить, и выполняет необходимые действия. Эти действия могут заключаться в создании или удалении файлов устройств, но могут и загружать нужные файлы прошивки в память ядра.

== Установка ==

{{Important|When updating udev, check the [[Udev/Upgrade Guide|udev upgrade guide]] for information that can prevent unbootable systems.}}

=== Ядро ===

<tt>udev</tt> requires the following kernel options:

<!-- Смотри http://git.kernel.org/?p=linux/hotplug/udev.git;a=blob_plain;f=README -->
{{KernelBox|1=
General setup  --->
    [*] Configure standard kernel features (expert users)  --->
        [ ] Enable deprecated sysfs features to support old userspace tools
        [*] Enable signalfd() system call
Enable the block layer  --->
    [*] Block layer SG support v4
Networking support  --->
    Networking options  --->
        <*> Unix domain sockets
Device Drivers  --->
    Generic Driver Options  --->
        ()  path to uevent helper
        [*] Maintain a devtmpfs filesystem to mount at /dev
    < > ATA/ATAPI/MFM/RLL support (DEPRECATED)  --->
File systems  --->
    [*] Inotify support for userspace
    Pseudo filesystems --->
        [*] /proc file system support
        [*] sysfs file system support
}}

=== Программное обеспечение ===

Portage knows the global USE flag <code>udev</code> for enabling support for udev in other packages. Enabling this USE flag (default in all Linux [[profile|profiles]]) will pull in {{Package|sys-fs/udev}} automatically:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
USE="... udev ..."
}}

{{USEflag|package=sys-fs/udev|desc=Optional USE flags for the {{Package|sys-fs/udev}} package are as follows:
|acl+yes
|doc
|firmware-loader+yes
|gudev
|introspection
|kmod+yes
|selinux++no
|static-libs++no
}}

After setting this update the system so the changes take effect:

{{Emerge|params+=--changed-use --deep|@world}}

== Конфигурация ==

=== Запуск как сервис ===

To start udev at boot time, add it to the sysinit runlevel. This can be done by issuing the following command with root privileges:

{{RootCmd|rc-update add udev sysinit}}

== Расширенная конфигурация ==

=== Правила ===

udev дает возможность создавать правила, которые проверяют uevents (события, посланные ядром) и задают свойства найденного устройства. Совпадающее правило, возможно, даст устройству имя, создаст файл устройства, и запустит программу конфигурации, чтобы настроить устройство.

The rule definitions are stored in two locations:

# '''{{Path|/lib/udev/rules.d/}}''' - Rules in this directory are installed by certain packages, they generally should not be changed by users;
# '''{{Path|/etc/udev/rules.d/}}''' - This folder is for end-user specified rules. Any new rules should be added in this directory;

In these directories, multiple rule files (with suffix {{Path|.rules}}) are traversed in alphanumerical order. Inside the rules files, udev will find expressions that might match a uevent together with the state to match (is the uevent because a device is added or removed) and the command to execute.

Выражения проверяются на совпадение на основании следующей информации:

* Поле ''SUBSYSTEM'' uevent (для какого типа устройства был uevent)
* Действие (поле ''ACTION''), которое было предпринято (добавление, удаление, либо изменение устройства)
* Один или более атрибутов (через поля ''ATTR'' or ''ATTRS''), например, класс устройства, производитель, либо другая информация об устройстве
* Имя, данное ядром (через поле ''KERNEL''), например, sd* (для дисков SCSI/SATA), либо input* (для устройств ввода, таких, как мыши и клавиатуры)
* Одна или более настройка окружения (через поле ''ENV''), используемая для информации, которая может использоваться несколькими правилами сразу.

На основании этой информации, правило может сделать следующее:

# определить информацию, которую необходимо будет передать более поздним событиям (через переменные окружения)
# создать ссылки в {{Path|/dev}}
# выполнить команды

Udev does this for every rule that matches (it does not stop after the first match) to allow a flexible device management approach.

=== Постоянные имена устройств ===

Ядро определяет устройства асинхронно, а udev зеркалирует файловую систему [[sysfs]] ядра так, чтобы устройствам были даны названия и номера в порядке их определения. Так что, по умолчанию udev не дает постоянных имен устройств. Однако существуют механизмы для того, чтобы этого добиться (для некоторых классов устройств).

* Udev creates for storage devices additional symlinks based on the device's ID, label, UUID and path. See the {{Path|/dev/disk/by-*}} directory. So instead of using e.g. the device file {{Path|/dev/sda}} use the file {{Path|/dev/disk/by-label/SOME_LABEL}}.

* То же самое для устройств ввода в каталоге {{Path|/dev/input}}.

* Using custom rules enables users to create their own device files.

== Использование ==

Некоторые полезные команды следующие:

* Показать все сообщения о заданном файле устройства:
: {{RootCmd|udevadm info --query{{=}}all --name{{=}}/dev/DEVICE_FILE}}

* Мониторинг активности udev:
: {{RootCmd|udevadm monitor}}

Смотри [[man page|man страницу]] ''udevadm'' для более детальной информации.

== Устранение проблем ==

* {{Bug|udev|search=package}}

=== Логгинг сообщений монитора ===

To log all message when <tt>udevadm monitor</tt> is ran, modify the following configuration file:

{{FileBox|filename=/etc/conf.d/udev|lang=bash|1=
udev_monitor="YES"
}}

It will create the new log file located at {{Path|/run/udev/udevmonitor.log}}

=== Режим отладки ===

Enabling debug mode will output more log messages:

{{FileBox|filename=/etc/conf.d/udev|lang=bash|1=
udev_debug="YES"
}}

Установите приоритет логгинга

{{FileBox|filename=/etc/udev/udev.conf|lang=bash|1=
udev_log="debug"
}}

Будет создан файл логов {{Path|/run/udev/udevdebug.log}}, однако никакие сообщения в него не будут записываться. Самые новые версии udev будут отправлять все сообщения в <tt>dmesg</tt>

=== Отсутствующие файлы устройств {{Path|/dev/null}} и {{Path|/dev/console}} ===

Some udev versions need the {{Path|/dev/null}} and {{Path|/dev/console}} files in order to work properly, but can not create them on their own. To manually create these files for udev run the following commands with root privileges:

{{RootCmd
|mkdir test
|mount --bind / test
|cd test/dev
|mknod -m 660 console c 5 1
|mknod -m 660 null c 1 3
|cd ../..
|umount test
|rmdir test
}}

=== Сетевая карта определена как eth0, но изменилась на eth1 ===

Those having dual network cards on their motherboards may run into a situation where <tt>ifconfig</tt> may show no eth0 or eth1. <tt>dmesg</tt> may show their NIC detected as eth0, and later moved to eth1. Performing a <tt>ifconfig -a</tt> will also show the NIC as eth1. This is caused by using the kernel assigned names in the first place. Users should write custom rules like {{Path|/etc/udev/rules.d/70-my-network.rules}} to use free names like lan0 or wireless0 or use predictable interface names (which have been enabled by default since udev version 197).

Также, помните, что нужно удалить старые файлы, оставшиеся от старых версий udev:

{{RootCmd|rm /etc/udev/rules.d/70-persistent-net.rules}}

== See also ==
[[Eudev|eudev]] - A Gentoo maintained fork of udev.


[[Category:Core system]]
[[Category:Daemons]]
