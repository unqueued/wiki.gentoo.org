<languages />
{{Metadata|abstract=udev это менеджер устройств для ядра Linux. Он обрабатывает файлы устройств в каталоге /dev и обрабатывает все действия пользователя при добавлении или удалении устройств.}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://www.freedesktop.org/wiki/Software/systemd/|header=true}}
|{{InfoBox gdoc|Udev}}
|{{InfoBox wikipedia}}
|{{InfoBox gitweb|http://cgit.freedesktop.org/systemd/systemd/tree/src/udev|raw=true}}
}}

'''udev''' это менеджер устройств для ядра Linux. Он управляет файлами устройств в каталоге {{Path|/dev}} и обрабатывает все действия из пользовательского пространства при добавлении или удалении устройств. Читателям этой статьи следует также посмотреть на [[Eudev|eudev]] форк udev.

== Что такое udev? ==

=== Каталог /dev ===

Когда пользователи Linux разговаривают о начинке своих систем среди людей, полагающих, что Linux — это какой-то вид вируса или марка кофе, пользуясь оборотами вроде «слэш дев слэш что—нибудь» (/dev/foo), на них наверняка смотрят косо. Но для счастливчиков (естественно, включая читающих эту статью), {{Path|/dev/sda1}} — просто быстрый способ сослаться на первый раздел диска SATA на первичном канале. Это довольно легко, не так ли? 

Most Linux users know what a [[device file]] is. Some even know why device files have special numbers. Take a close look at device list when {{c|ls -l}} is issued in the {{Path|/dev}} folder. What users take for granted is that the primary SATA disk is referred to as {{Path|/dev/sda}} Some users might not see it this way, but this is a flaw by design. 

Представим себе устройства «горячей замены» вроде USB, IEEE1394, PCI с возможностью горячей замены и т.д. Какое из них является первым по счету? Надолго ли? Как изменятся названия других устройств, если первое отключить? Как это повлияет на текущие операции? Было бы забавно, если бы задание печати вдруг переключалось с вашего супер навороченного лазерного принтера на старый полудохлый матричный из-за того, что мама решила выдернуть разъем лазерного принтера, а тот, ''по счастью'', оказался первым в списке, не так ли? 

Перейдем к {{c|udev}}. Цели проекта udev как занимательны, так и актуальны. Udev:

* работа в режиме пользователя;
* динамическое создание и удаление файлов устройств;
* согласованное назначение имен устройств;
* предоставление (API) для режима пользователя.

Каждая раз, когда в структуре устройств появляется изменение, ядро генерирует ''uevent'', который ловится {{c|udev}}. Затем {{c|udev}} следует правилам, определенным в каталогах {{Path|/etc/udev/rules.d}}, {{Path|/run/udev/rules.d}} и {{Path|/lib/udev/rules.d}}. На основании информации в uevent, он находит правило или правила, которые он должен выполнить, и выполняет необходимые действия. Эти действия могут заключаться в создании или удалении файлов устройств, но могут и загружать нужные файлы прошивки в память ядра.

== Установка ==

{{Note|При обновлении проверьте [[Udev/Upgrade Guide|udev upgrade guide]]. Там есть информация, которая не позволит сделать систему не загружаемой.}}

=== Ядро ===

Для {{c|udev}} требуется включить следующие параметры ядра:

<!-- Смотри http://git.kernel.org/?p=linux/hotplug/udev.git;a=blob_plain;f=README -->
{{KernelBox|1=
General setup  --->
    [*] Configure standard kernel features (expert users)  --->
        [ ] Enable deprecated sysfs features to support old userspace tools
        [*] Enable signalfd() system call
Enable the block layer  --->
    [*] Block layer SG support v4
Networking support  --->
    Networking options  --->
        <*> Unix domain sockets
Device Drivers  --->
    Generic Driver Options  --->
        ()  path to uevent helper
        [*] Maintain a devtmpfs filesystem to mount at /dev
    < > ATA/ATAPI/MFM/RLL support (DEPRECATED)  --->
File systems  --->
    [*] Inotify support for userspace
    Pseudo filesystems --->
        [*] /proc file system support
        [*] sysfs file system support
}}

=== USE флаги ===

Portage знает о глобальном <code>udev</code> USE флаге для включения поддержки udev в остальных пакетах. Добавьте этот USE флаг в список USE флагов (он включен по умолчанию по всех Linux [[Profile (Portage)|профилях]]) приведет к тому, что пакет {{Package|sys-fs/udev}} автоматически установится:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
USE="udev"
}}

{{USEflag|package=sys-fs/udev}}

=== Emerge ===

После настройки USE флагов обновите систему, чтобы изменения вступили в силу:

{{Emerge|params+=--changed-use --deep|@world}}

== Конфигурация ==

=== Запуск как сервис ===

Чтобы запустить udev при загрузке, добавьте его к уровню запуска sysinit. Это может быть сделано при помощи следующей команды, если она запущена с привилегиями root пользователя:

{{RootCmd|rc-update add udev sysinit}}

== Расширенная конфигурация ==

=== Правила ===

udev дает возможность создавать правила, которые проверяют uevents (события, посланные ядром) и задают свойства найденного устройства. Совпадающее правило, возможно, даст устройству имя, создаст файл устройства, и запустит программу конфигурации, чтобы настроить устройство.

Определения правил сохраняются в двух местах:

# '''{{Path|/lib/udev/rules.d}}''' - правила в этом каталоге создают некоторые установленные пакеты, они, как правило, не должны изменятся пользователями;
# '''{{Path|/etc/udev/rules.d}}''' - этот каталог для пользовательских настроек. Любое новое правило должно быть добавлено в этот каталог.

В этих каталогах, обрабатываются файлы правил (с суффиксом {{Path|.rules}}) в буквенноцифровом порядке имен, по возрастанию. Внутри файлов правил, udev ищет выражения, которые могут совпасть с uevent, вместе с состоянием для проверки (добавляется устройство или удаляется), и с командами для выполнения.

Выражения проверяются на совпадение на основании следующей информации:

* Поле ''SUBSYSTEM'' uevent (для какого типа устройства был uevent)
* Действие (поле ''ACTION''), которое было предпринято (добавление, удаление, либо изменение устройства)
* Один или более атрибутов (через поля ''ATTR'' or ''ATTRS''), например, класс устройства, производитель, либо другая информация об устройстве
* Имя, данное ядром (через поле ''KERNEL''), например, sd* (для дисков SCSI/SATA), либо input* (для устройств ввода, таких, как мыши и клавиатуры)
* Одна или более настройка окружения (через поле ''ENV''), используемая для информации, которая может использоваться несколькими правилами сразу.

На основании этой информации, правило может сделать следующее:

# определить информацию, которую необходимо будет передать более поздним событиям (через переменные окружения)
# создать ссылки в {{Path|/dev}}
# выполнить команды

Udev делает эти действия для каждого правила, для которого находит соответствие (он не останавливается после первого совпадения), позволяя организовать гибкий подход к управлению устройствами.

=== Постоянные имена устройств ===

Ядро определяет устройства асинхронно, а udev зеркалирует файловую систему [[sysfs]] ядра так, чтобы устройствам были даны названия и номера в порядке их определения. Так что, по умолчанию udev не дает постоянных имен устройств. Однако существуют механизмы для того, чтобы этого добиться (для некоторых классов устройств).

* Udev creates for storage devices additional symlinks based on the device's ID, [[Removable_media#UUIDs_and_labels|label, UUID]] and path. See the {{Path|/dev/disk/by-*}} directory. So instead of using e.g. the device file {{Path|/dev/sda}} use the file {{Path|/dev/disk/by-label/SOME_LABEL}}.

* То же самое для устройств ввода в каталоге {{Path|/dev/input}}.

* Используя свои правила, пользователи могут создавать собственные файлы устройств.

== Использование ==

Некоторые полезные команды следующие:

* Показать все сообщения о заданном файле устройства:
: {{RootCmd|udevadm info --query{{=}}all --name{{=}}/dev/DEVICE_FILE}}

* Мониторинг активности udev:
: {{RootCmd|udevadm monitor}}

Смотри [[man page|man страницу]] ''udevadm'' для более детальной информации.

== Устранение проблем ==

* {{Bug|udev|search=package}}

=== Логгинг сообщений монитора ===

To log all message when {{c|udevadm monitor}} is ran, modify the following configuration file:

{{FileBox|filename=/etc/conf.d/udev|lang=bash|1=
udev_monitor="YES"
}}

Это создаст новый файл лога {{Path|/run/udev/udevmonitor.log}}.

=== Режим отладки ===

Включите режим отладки, выведет еще больше сообщений в логах:

{{FileBox|filename=/etc/conf.d/udev|lang=bash|1=
udev_debug="YES"
}}

Установите приоритет логгинга

{{FileBox|filename=/etc/udev/udev.conf|lang=bash|1=
udev_log="debug"
}}

The log file {{Path|/run/udevdebug.log}} will be created but no messages will be logged to it. The most recent versions of udev will log all messages to {{c|dmesg}}.

=== Отсутствующие файлы устройств {{Path|/dev/null}} и {{Path|/dev/console}} ===

Некоторые версии udev нуждаются {{Path|/dev/null}} и {{Path|/dev/console}} файлах для корректной работы, и не могут создать их сами. Чтобы вручную создать эти файлы для Udev выполните следующие команды с привилегиями root:

{{RootCmd
|mkdir test
|mount --bind / test
|cd test/dev
|mknod -m 660 console c 5 1
|mknod -m 660 null c 1 3
|cd ../..
|umount test
|rmdir test
}}

=== Сетевая карта определена как eth0, но изменилась на eth1 ===

Those having dual network cards on their motherboards may run into a situation where {{c|ifconfig}} may show no eth0 or eth1. {{c|dmesg}} may show their NIC detected as eth0, and later moved to eth1. Performing a {{c|ifconfig -a}} will also show the NIC as eth1. This is caused by using the kernel assigned names in the first place. Users should write custom rules like {{Path|/etc/udev/rules.d/70-my-network.rules}} to use free names like lan0 or wireless0 or use predictable interface names (which have been enabled by default since udev version 197).

Также, помните, что нужно удалить старые файлы, оставшиеся от старых версий udev:

{{RootCmd|rm /etc/udev/rules.d/70-persistent-net.rules}}

== See also ==

[[Eudev|eudev]] - A Gentoo maintained fork of udev.


[[Category:Core system]]
[[Category:Daemons]]
