<languages />

{{Metadata|abstract=This guide should help users localize their Gentoo Linux distribution to any European locale. It uses Germany as a case-study, since it is translated from the German doc. Includes configuration for use of the euro currency symbol.}}

== 標準時 ==

時刻を適切に保つには、あなたのタイムゾーン（標準時）を選び、システムがどの地域にあるのかを知らせる必要があります。

=== OpenRC ===

あなたのタイムゾーンを{{Path|/usr/share/zoneinfo}}から探してください。たただし、名前が{{Path|/usr/share/zoneinfo/Etc/GMT*}}であるようなタイムゾーンは避けてください。名前から期待されるようなゾーンにならないからです。例えば{{Path|GMT-8}}は、実際にはGMT+8になります。

ブリュッセルの標準時を使用したいとすると、{{Path|/etc/timezone}} を以下のように編集します:

{{RootCmd|nano -w /etc/timezone|output=<pre>
Europe/Brussels
</pre>}}

{{Package|timezone-data}}  を emerge すると、あなたの {{Path|/etc/localtime}} ファイルが適切に更新されるでしょう:

{{RootCmd|emerge --config timezone-data}}

新しいタイムゾーン情報を確認するには:

{{RootCmd|date|output=<pre>
Wed Mar  8 00:46:05 CET 2006
</pre>
}}

{{Note|タイムゾーン表示 (この場合は「CET」) が正しくあなたの地域を表しているか確かめてください。}}

{{Note|あなたのシェル設定ファイル (bashなら{{Path|.bash_profile}})において、(環境変数) <code>TZ</code>の値を{{Path|/usr/share/zoneinfo}}の後に続く全てに設定することで、(タイムゾーンを) ユーザレベルで設定することもできます。例えば、<code>TZ{{=}}"Europe/Berlin"</code>とします。}}

=== systemd ===

あなたがsystemdを使っているなら、<code>timedatectl</code>コマンドを使ってタイムゾーンを設定する必要があります。最初に、利用可能なタイムゾーンをチェックします:

{{RootCmd|timedatectl list-timezones}}

そして、選んだ標準時を設定:

{{RootCmd|timedatectl set-timezone Europe/Brussels}}

最後に、引数無しで<code>timedatectl</code>コマンドを実行して結果を確認します:

{{RootCmd|timedatectl}}

== ハードウェアクロック ==

=== OpenRC ===

ほとんどのGentoo Linuxのインストールでは、ハードウェアクロックはUTC（またはGMT、グリニッジ標準時）に設定されます。その後で、実際の現地時間を決定するため、あなたのタイムゾーンが利用されます。何らかの理由でUTCではないハードウェアクロックが必要な場合、{{Path|/etc/conf.d/hwclock}} (もしGentoo BSDを使っているなら: {{Path|/etc/conf.d/adjkerntz}}) を編集して、
<code>clock</code>の値を<code>UTC</code>から<code>local</code>に変更する必要があります。 

{{Code|UTC の時刻を使用する設定 /etc/conf.d/hwclock|<pre>
clock="UTC"</pre>}}

{{Code|ローカルタイムゾーンの時刻を利用する設定 /etc/conf.d/hwclock|<pre>
clock="local"</pre>}}

For more details like '''System clock''' see the [[System_time#System_clock|System time]] article.

== ロケールシステム ==

=== ロケールとは何ですか? ===

ロケールは、国や言語に特有の設定を決定するために使う情報の集合体で、大抵のプログラムがこれを利用します。ロケールとそのデータはシステムライブラリの一部であり、ほとんどのシステムにおいて {{Path|/usr/share/i18n/locales/}} にあります。ロケール名は一般に、<code>ab_CD</code>という形式で命名されます。ここで<code>ab</code>は2 (または3) 文字の言語コード (ISO-639で規定) であり、<code>CD</code>は2 (または3) 文字の国コード (ISO-3166で規定) になります。多くの場合、変形情報 (バリアント) がロケール名に追加されます。
例えば、<code>en_GB.UTF-8</code>や<code>de_DE@euro</code>です。ロケールと関連する記事をもっと読むには、[http://en.wikipedia.org/wiki/Locale Wikipedia (英語)]を探してみてください。

=== ロケール関連の環境変数 ===

ロケール設定の色々な側面を制御する環境変数を以下の表に示します。
これらのすべては、上記の<code>ab_CD</code>形式で表記されたロケール名を1つだけ設定できます。 

{| class="wikitable" style="text-align: left;" 
|- 
! 変数名
! 説明
|- 
| LANG
| 一度に全てのロケール設定を定義します。同時に、以下のLC_*設定を使うと、個別のカスタマイズが可能です。
|- 
| LC_COLLATE
| 文字列におけるアルファベットの順序を定義します。これは、例えば並び替えされたディレクトリ一覧の出力などに影響を与えます。
|- 
| LC_CTYPE
| そのシステムでの文字取り扱い属性を定義します。これは、どの文字がアルファベットや数値などの一部とみなすか、などを決定します。該当する場合、使用される文字集合も決定します。
|- 
| LC_MESSAGES
| プログラムで使用するローカライズ言語（{{Path|/usr/share/locale/}} から指定します）。メッセージベースの多言語対応手法 (Gnuプログラムの大部分。詳しい情報は次の章をご覧ください) を使ったアプリケーション用です。
|- 
| LC_MONETARY
| 通貨単位と通貨型の数値の書式を定義します。
|- 
| LC_NUMERIC
| 通貨ではない数値の書式を定義します。たとえば桁の区切りや小数点記号などのものに影響します。
|- 
| LC_TIME
| 日付と時刻の書式を定義します。
|- 
| LC_PAPER
| 既定の紙の大きさを定義します。
|- 
| LC_ALL
| 他のすべての設定を上書きするための特殊な環境変数です。
|-
|}

{{Note|Some programs are written in such a way that they expect traditional English ordering of the alphabet, while some locales, most notably the Estonian one, use a different ordering. Therefore it's recommended to explicitly set LC_COLLATE to C when dealing with system-wide settings.}}

{{Warning/ja|LC_ALL を設定するのは、(LANGを除く)他の全ての LC_* 変数の設定を上書きしてしまうので、特に避けるべきです。つまり、 LC_ALL をリセットしない限りは他の手段による変更が有効にならないということです。大概は、起動時に LC_ALL を設定することは最良の選択ではないでしょう。}}

Most typically users only set the LANG variable on the global basis.

=== Generating Specific Locales ===

You will probably only use one or maybe two locales on your system. You can specify locales you will need in {{Path|/etc/locale.gen}}. 

{{CodeBox|title=Adding locales to /etc/locale.gen|1=
en_GB ISO-8859-1
en_GB.UTF-8 UTF-8
de_DE ISO-8859-1
de_DE@euro ISO-8859-15
}}

The next step is to run <code>locale-gen</code>. It will generate all the locales you have specified in the {{Path|/etc/locale.gen}} file and write them to the locale-archive ({{Path|/usr/lib/locale/locale-archive}}). 

{{RootCmd|locale-gen|output=<pre>
 * Generating 4 locales (this might take a while) with 1 jobs
 *  (1/4) Generating en_GB.ISO-8859-1 ...                       [ ok ]
 *  (2/4) Generating en_GB.UTF-8 ...                            [ ok ]
 *  (3/4) Generating de_DE.ISO-8859-1 ...                       [ ok ]
 *  (4/4) Generating de_DE.ISO-8859-15@euro ...                 [ ok ]
 * Generation complete
</pre>}}

{{Note|<code>locale-gen</code> is available in <code>glibc-2.3.6-r4</code> and newer. If you have an older version of glibc, you should update it now.}}

You can verify that your selected locales are available by running <code>locale -a</code>.

{{Cmd|locale -a|output=<pre>
C
POSIX
de_DE
de_DE.iso88591
de_DE.iso885915@euro
de_DE@euro
deutsch
en_GB
en_GB.iso88591
en_GB.utf8
german
</pre>}}

The {{Path|/usr/lib/locale/locale-archive}} file can be displayed using the strings command.

{{Cmd|strings /usr/lib/locale/locale-archive {{!}} less}}

=== ロケール設定 ===

==== OpenRC ==== 

When using OpenRC locale settings are stored in environment variables. These are typically set in the {{Path|/etc/env.d/02locale}} (for system-wide settings) and {{Path|~/.bashrc}} (for user-specific settings) file.  More details can be found in [[UTF-8#Setting_the_locale]].  The system wide settings ({{Path|/etc/env.d/02locale}}) can be managed through <code>eselect locale</code>. For instance, to set the <code>LANG</code> variable to the <code>C</code> value:

{{RootCmd|eselect locale list|output=<pre>
Available targets for the LANG variable:
  [1]   C 
  [2]   POSIX
  [3]   en_US
  [4]   en_US.iso885915
  [5]   en_US.utf8
  [ ]   (free form)
</pre>}}

{{RootCmd|eselect locale set 1}}

Of course, you can edit the file manually as well and diversify the locale variables.

{{FileBox|filename=/etc/env.d/02locale|title=/etc/env.d/02locale でシステムのデフォルトのロケールを設定|lang=bash|1=
LANG="de_DE.UTF-8"
LC_COLLATE="C"
}}

{{Note|Use <code>de_DE@euro</code> as your LANG if you want to use the Euro currency symbol (â‚¬) on non UTF-8 based locales.}}

It's also possible, and pretty common especially in a more traditional UNIX environment, to leave the global settings unchanged, i.e. in the "<code>C</code>" locale. Users can still specify their preferred locale in their own shell RC file: 

{{FileBox|filename=~/.bashrc|title=~/.bashrc でユーザーのロケールを設定|lang=bash|1=
export LANG="de_DE.UTF-8"
export LC_COLLATE="C"
}}

Another way of configuring system is to leave it in the default C locale, but enable UTF-8 character representation at the same time. This option is achieved using the following settings in {{Path|/etc/env.d/02locale}}: 

{{CodeBox|title=Using traditional C locale while specifying UTF-8|lang=bash|1=
LC_CTYPE=de_DE.UTF-8
}}

Using the above snippet, users will be able to see localized file names properly, while not being forced to your preferred language. 

Once you have set the right locale, be sure to update your environment variables to make your system aware of the change.

For a system-wide default locale:

{{RootCmd|env-update && source /etc/profile}}

For a user-specific locale:

{{Cmd|source ~/.bashrc}}

After this, you will need to kill your X server by pressing {{Key|Ctrl}} + {{Key|Alt}} + {{Key|Backspace}}, log out, then log in as user. 

Now, verify that the changes have taken effect: 

{{Cmd|locale}}

==== systemd ====

If you use systemd you should set your locale with the <code>localectl</code> command. Check the list of available locales with:

{{RootCmd|localectl list-locales}}

Then set the locale you want:

{{RootCmd|<nowiki>localectl set-locale LANG=de_DE.utf8</nowiki>}}

Finally check if the result is good:

{{RootCmd|<nowiki>localectl | grep "System Locale"</nowiki>|output=<pre>
   System Locale: LANG=de_DE.utf8
</pre>}}

== Keyboard layout for the console ==

=== OpenRC ===

The keyboard layout used by the console is set in {{Path|/etc/conf.d/keymaps}} by the <code>keymap</code> variable. Valid values can be found in {{Path|/usr/share/keymaps/YOUR_ARCH/}}. {{Path|i386}} has further subdivisions into layout ({{Path|qwerty/}}, {{Path|azerty/}}, etc.). Some languages have multiple options, so you may wish to experiment to decide which one fits your needs best. 

{{CodeBox|title=Setting the console keymap|lang=bash|1=
keymap="de"
#keymap="de-latin1"
#keymap="de-latin1-nodeadkeys"
}}

=== systemd ===

With systemd the keymap layout used for your console can be set using the <code>localectl</code> command. First check the available keymap layouts:

{{RootCmd|localectl list-keymaps}}

Then set the console keymap layout you want:

{{RootCmd|localectl set-keymap it}}

Finally check if the console keymap layout was set correctly:

{{RootCmd|<nowiki>localectl | grep "VC Keymap"</nowiki>|output=<pre>
       VC Keymap: it
</pre>}}

== Keyboard layout for the X server ==

The keyboard layout to be used by the X server is specified in {{Path|/etc/X11/xorg.conf}} by the <code>XkbLayout</code> option. 

{{FileBox|filename=/etc/X11/xorg.conf|title=Setting the X keymap|lang=xorg_conf|1=
Section "InputClass"
	Identifier "keyboard-all"
	Driver "evdev"
	Option "XkbLayout" "de"
	#Option "XkbModel" "pc105"
	MatchIsKeyboard "on"
EndSection
}}

If you have an international keyboard layout, you should set the option <tt>XkbModel</tt> to <tt>pc102</tt> or <tt>pc105</tt> , as this will allow mapping of the additional keys specific to your keyboard. 

Deadkeys allow you to press keys that will not show immediately but will be combined with another letter to produce a single character. Setting <tt>XkbVariant</tt> to <tt>nodeadkeys</tt> allows input these special characters into X terminals. 

If you would like to switch between more than one keyboard layout (for example English and Russian), all you have to do is add a few lines to {{Path|xorg.conf}} that specify the desired layouts and the shortcut command. 

{{FileBox|filename=/etc/X11/xorg.conf|title=Switching between two keyboard layouts|lang=xorg_conf|1=
Section "InputClass"
	Identifier "keyboard-all"
	Driver "evdev"
	Option "XkbLayout"    "us,ru"
	Option "XkbOptions"   "grp:alt_shift_toggle,grp_led:scroll"
	MatchIsKeyboard "on"
EndSection
}}

Here, <code>XkbOptions</code> allows you to toggle between keyboard layouts by simply pressing <code>Alt-Shift</code> . This will also toggle the Scroll Lock light on or off, thanks to the <code>grp_led:scroll</code> option. This is a handy visual indicator of which keyboard layout you are using at the moment.

=== systemd ===

With systemd the keymap layout for the X11 server can be set using the <code>localectl</code> command. First check the available X11 keymap layouts:

{{RootCmd|localectl list-x11-keymap-layouts}}

Then set the X11 keymap layout you want:

{{RootCmd|localectl set-x11-keymap it}}

Finally check if the X11 keymap layout was set correctly:

{{RootCmd|<nowiki>localectl | grep "X11 Layout"</nowiki>|output=<pre>
      X11 Layout: it
</pre>}}

== The Euro Symbol for the Console ==

=== OpenRC ===

In order to get your console to display the Euro symbol, you will need to set <code>consolefont</code> in {{Path|/etc/conf.d/consolefont}} to a file found in {{Path|/usr/share/consolefonts/}} (without the <code>.psfu.gz</code> ). <code>lat9w-16</code> has the Euro symbol. 

{{FileBox|filename=/etc/conf.d/consolefont|title=Setting the console font|lang=bash|1=
consolefont="lat9w-16"
}}

You should verify that <tt>consolefont</tt> is in the boot runlevel: 

{{RootCmd|rc-update -v show {{!}} grep consolefont}}

If no runlevel is displayed for <code>consolefont</code> , then add it to the proper level: 

{{RootCmd|rc-update add consolefont boot}}

== X 上での通貨ユーロ記号 ==

=== 大概のアプリケーション ===

Getting the Euro symbol to work properly in X is a little bit tougher. The first thing you should do is change the <code>fixed</code> and <code>variable</code> definitions in {{Path|/usr/share/fonts/misc/fonts.alias}} to end in <code>iso8859-15</code> instead of <code>iso8859-1</code> . 

{{CodeBox|filename=/etc/X11/xorg.conf|title=Setting default X fonts|1=
fixed        -misc-fixed-medium-r-semicondensed--13-120-75-75-c-60-iso8859-15
variable     -*-helvetica-bold-r-normal-*-*-120-*-*-*-*-iso8859-15
}}

Some applications use their own font, and you will have to tell them separately to use a font with the Euro symbol. You can do this at a user-specific level in {{Path|.Xdefaults}} (you can copy this file to {{Path|/etc/skel/}} for use by new users), or at a global level for any application with a resource file in {{Path|/usr/share/X11/app-defaults/}} (like xterm). In these files you generally have to change an existing line, rather than adding a new one. To change our xterm font, for instance: 

{{Cmd|echo 'XTerm*font: fixed' >> ~/.Xresources 
|xrdb -merge ~/.Xresources}}

=== (X)Emacs における 通貨ユーロ記号 ===

(X)Emacs で通貨ユーロの記号を利用するには、{{Path|.Xdefaults}} に以下のとおり追加: 

{{Code|emacs へのフォント設定|<pre>
Emacs.default.attributeFont: -*-courier-medium-r-*-*-*-120-*-*-*-*-iso8859-15
</pre>
}}

XEmacs (純粋な Emacs ではない)では、さらなる作業が少し必要です。{{Path|/home/user/.xemacs/init.el}} に以下を追加: 

{{Code|xemacs でのフォント設定|<pre>
(define-key global-map '(EuroSign) '[€])
</pre>
}}

== NLS ==

For message based localization to work in programs that support it and have the <code>nls</code> (Native language support) USE flag, you will probably need to have the programs compiled with this flag set. Message strings are installed in {{Path|/usr/share/locale/<locale>/LC_MESSAGES/<package>.mo}} files. Most of the programs using nls also need the gettext library to extract and use localized messages. Of course, Portage will automatically install it when needed.

After enabling the <code>nls</code> USE flag you may need to re-emerge some packages:

{{Emerge|params+=--newuse --deep --with-bdeps=y|@world}}

== LINGUAS ==

There is also an additional localization variable called [https://devmanual.gentoo.org/general-concepts/linguas/<code>LINGUAS</code>], which affects the localization files that get installed in gettext-based programs, and decides which GUI language packs should be downloaded and installed for some specific software packages, such as [[Firefox]], [[Thunderbird]], [[KDE#Localization|kde-base/kde-l10n]] or [[LibreOffice|app-office/libreoffice-l10n]]. The variable takes in ''space''-separated list of language codes, and a suggested place to set it is {{Path|[[:/etc/portage/make.conf]]}}: 

{{RootCmd|nano -w /etc/portage/make.conf|output=<pre>
## (LINGUAS 変数を追加する。例えばドイツ語とフィンランド語と英語:)
LINGUAS="de fi en"
</pre>}}

With <code>LINGUAS=""</code>, most ebuilds would install only the packages' default language but none of the <code>LC_MESSAGES</code> files. They would also not download and install any of the further language packs. For instance, the currently stable [[LibreOffice|app-office/libreoffice]] receives further language support through {{Package|app-office/libreoffice-l10n}} which supports download and installation of the language packs defined in <code>LINGUAS</code>. Since the origin language of libreoffice is <code>en_US</code>, it does not have <code>en_US</code> flag in {{Package|app-office/libreoffice-l10n}}. So with <code>LINGUAS=""</code>, libreoffice still supports <code>en_US</code>.

To see the status of GUI translation, hyphenation, spell checking and other localisations on your language, please refer to the [https://translations.documentfoundation.org/ LibreOffice translation web site].

For finer grained control it can be set per package in {{Path|[[:/etc/portage/package.use]]}}: 

{{FileBox|filename=/etc/portage/package.use|lang=bash|1=
www-client/firefox linguas_de linguas_pt_BR linguas_en_GB
}}

A list of installed programs making use of the <code>LINGUAS</code> variable and their supported languages can be shown as follows:

{{Cmd|eix -I -U linguas}}

利用可能なロケールのリストは {{Path|/usr/portage/profiles/desc/linguas.desc}} にあります: 

{{Cmd|grep -i french /usr/portage/profiles/desc/linguas.desc|output=<pre>
fr - French locale
fr_CA - French locale for Canada
fr_FR - French locale for France
</pre>
}}

After setting the <code>LINGUAS</code> USE flag it may be necessary to re-emerge some packages:

{{Emerge|params+=--newuse --deep --with-bdeps=y|@world}}

== 外部の情報 ==

* [http://www.gnu.org/software/libc/manual/html_node/Locales.html Locales and Internationalization] (gnu.org)

== 参考 ==

* [[Handbook:AMD64/Installation/Base#Configure_locales|Configuring locales]] (Gentoo ハンドブック)
* Xorg resources:
** [[Evdev]] の記事内の [[Evdev#Keyboard_layout|Keyboard layout]]
** [[X resources]]


[[Category:Localization]] {{Migrated|originalauthors=Alexander Holler, Steven Lucy, Benny Chuang, Lars Weiler, Tobias Scherbaum, Flammie Pirinen, nightmorph, klondike}}
