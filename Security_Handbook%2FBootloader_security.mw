<noinclude>{{:{{ROOTPAGENAME}}/TOC}}</noinclude>
<noinclude>Tightening security during and after installation.</noinclude>
<includeonly>== Tightening security ==</includeonly>
=== USE flags ===

The {{Path|[[make.conf]]}} file contains user defined USE flags and {{Path|[[:/etc/portage/make.profile|/etc/portage/make.profile/make.defaults]]}} contains the default USE flags for Gentoo Linux. For this guide's purposes, the important USE flags are <code>pam</code> (Pluggable Authentication Modules), <code>tcpd</code> (TCP wrappers), and <code>ssl</code> (Secure Socket Layer). These are all in the default USE flags.

=== Password protecting the boot loader ===

==== GRUB legacy ====

GRUB legacy supports two different ways of adding password protection to your boot loader. The first uses plain text, while the latter uses md5+salt encryption.

{{FileBox|filename=/boot/grub/grub.conf|1=
timeout 5
password changeme
}}

This will add the password <code>changeme</code>. If no password is entered at boot, GRUB will simply use the default boot setting.

When adding an md5 password, you must convert your password into crypt format, which is the same format used in {{Path|/etc/shadow}}. For more information see {{c|man crypt}}. The encrypted password <code>changeme</code>, for example, could look like this: <code>$1$T7/dgdIJ$dJM.n2wZ8RG.oEiIOwJUs.</code>

You can encrypt your password directly at the GRUB shell:

{{RootCmd|/sbin/grub|output=<pre>
GRUB version 0.92 (640K lower / 3072K upper memory)

   [ Minimal BASH-like line editing is supported. For the first word, TAB lists
     possible command completions. Anywhere else TAB lists the possible
     completions of a device/filename. ]
grub> md5crypt

Password: ********
(Typed changeme at the prompt)
Encrypted: $1$T7/dgdIJ$dJM.n2wZ8RG.oEiIOwJUs.

grub> quit
</pre>}}

Simply cut and paste the password into the {{Path|/boot/grub/grub.conf}} file:

{{FileBox|filename=/boot/grub/grub.conf|1=
timeout 5
password --md5 $1$T7/dgdIJ$dJM.n2wZ8RG.oEiIOwJUs.
}}

The 5 seconds timeout becomes handy if the system is remote and should be able to reboot without any keyboard interaction. Learn more about GRUB passwords by executing {{c|info grub}}.

==== GRUB2 ====

Password protecting GRUB2 is performed in a similar way to GRUB legacy (listed above). First, the {{c|grub2-mkpasswd-pbkdf2}} user space tool must be used in order to generate a pbkdf2 hash for the password:

{{RootCmd|grub-mkpasswd-pbkdf2|output=<pre>
Enter password:
Reenter password:
PBKDF2 hash of your password is grub.pbkdf2.sha512.10000.abcdef...
</pre>}}

Next create a few new GRUB users in the {{Path|/etc/grub.d/40_custom}} file. One of the users should be the superuser, the other user can have permissions to only boot specific boot entries.

{{FileBox|filename=/etc/grub.d/40_custom|1=
set superusers="root"
password_pbkdf2 root grub.pbkdf2.sha512.10000.aaa
password_pbkdf2 larry grub.pbkdf2.sha512.10000.ccc
}}

To make boot options unrestricted (any GRUB2 user can boot unrestricted entries) add <code>--unrestricted</code> to each menuentry line in the {{Path|/etc/grub.d/10_linux}} configuration file. This will look something like the following:

{{FileBox|filename=/etc/grub.d/10_linux|Unrestricted boot entry|lang=bash|1=
echo "menuentry '$(echo "$title" {{!}} grub_quote)' --unrestricted ${CLASS} \$menuentry_id_option 'gnulinux-$version-$type-$boot_device_id' {" {{!}} sed "s/^/$submenu_indentation/"
}}

To only let the superuser and a specific user (with a password) boot an entry, add the <code>--users</code> option to the menuentry lines. The user "larry" is used in the example below:

{{FileBox|filename=/etc/grub.d/10_linux|title=Specific user boot entry|lang=bash|1=
echo "menuentry '$(echo "$title" {{!}} grub_quote)' --users larry ${CLASS} \$menuentry_id_option 'gnulinux-$version-$type-$boot_device_id' {" {{!}} sed "s/^/$submenu_indentation/"
}}

Finally, be sure to regenerate the {{Path|grub.cfg}} file using the {{c|grub2-mkconfig}} command:

{{RootCmd|grub-mkconfig -o /boot/grub/grub.cfg}}

==== LILO ====

LILO also supports two ways of handling passwords: global and per-image, both in clear text.

The global password is set at the top of the configuration file, and applies to every boot image:

{{FileBox|filename=/etc/lilo.conf|1=
password=changeme
restricted
delay=3
}}

The per-image password is set as below:

{{FileBox|filename=/etc/lilo.conf|1=
image=/boot/bzImage
      read-only
      password=changeme
      restricted
}}

If the <code>restricted</code> option is not entered, it will prompt for a password every time.

In order to store the new information in {{Path|lilo.conf}}, you must run {{Path|/sbin/lilo}}.

=== Restricting console usage ===

The {{Path|/etc/securetty}} file allows you to specify which tty (terminal) devices root is allowed to login to.

We suggest that you comment out all lines except vc/1 if you are using devfs and all lines except tty1 if you are using udev. This will ensure that root only can login once and only on one terminal.

{{Note|Users in the group "wheel" can still {{c|su -}} to become root on other TTYs.}}

{{FileBox|filename=/etc/securetty|1=<pre>
# (For devfs)
vc/1
# (For udev)
tty1
</pre>}}
<noinclude>{{#set:Has short Title={{SUBPAGENAME}}|Has Title={{SUBPAGENAME}}}}
{{:{{ROOTPAGENAME}}/Navigator|Prev={{ROOTPAGENAME}}/Pre-installation concerns|Next={{ROOTPAGENAME}}/Logging}}</noinclude>
