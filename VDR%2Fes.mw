<languages />


{{Metadata|abstract=Esta guía le muestra como preparar Gentoo Linux para DVB y VDR.}}

Esta guía muestra como preparar Gentoo Linux para DVB y VDR.

== Información general de DVB ==

=== ¿Qué es DVB? ===

''DVB'' es el acrónimo de ''Digital Video Broadcasting'' (Difusión de Vídeo Digital). DVB describe métodos para transferir información digital de TV, radio, servicios interactivos como MHP, EPG y teletexto. Usando compresión de datos MPEG-2 o H.264 para HDTV es posible transferir varios canales en la misma frecuencia. A mayor
compresión de datos, mayor número de canales que se pueden transferir, pagando por ello una pérdida en la calidad. 

DVB puede transferirse de varias formas. La última letra identifica el
método de transferencia, por ejemplo, DVB-''T<'' para transmisiones terrestres. Existen otros tipos: 

* DVB-S para transmisión vía satélite
* DVB-C para transmisión por cable
* DVB-H para transmisión a dispositivos móviles (terrestres)
* DVB-IPI para transmisión sobre redes IP, por ejemplo Internet
* DVB-RC(S/C/T) canal de retorno para la transmisión de servicios de datos, por ejemplo Internet de banda ancha

=== Tipos y requerimientos de tarjetas DVB ===

Además de los diferentes métodos existentes para recibir un stream
DVB, las tarjetas se clasifican por el tipo de salida producida. Hay tarjetas con decodificador implementado que ofrece acceso directo al stream por medio del dispositivo {{Path|/dev/video}}. Estas tarjetas son ''tarjetas completas'' (full featured). Otras tarjetas no tienen decodificador, requieren un software instalado en el ordenador y son ''de bajo coste''. Esto implica mayores requisitos del sistema. La CPU de su ordenador debe funcionar al menos a 600 MHz y disponer de al menos de 256MB de RAM. [http://linuxtv.org/wiki/index.php/DVB_Card_Vendors Esta lista] puede ser útil para identificar su tarjeta. 

== Preparar el sistema ==

=== Configurar el núcleo ===

En primer lugar, debe asegurarse de que su núcleo soporta DVB y el dispositivo DVB instalado. Desde la versión 2.6 los controladores
necesarios están incluidos. Compruebe la configuración de su núcleo y
asegúrese de seleccionar las siguientes opciones como controladores
estáticos o como módulos. 

{{Kernel|Opciones requeridas del núcleo|<pre>
Input Device Support --->
 * Event Interface
Device Drivers --->
  Multimedia Devices --->
    Digital Video Broadcasting Devices --->
     [*] DVB For Linux
      * DVB Core Support
      M [Su controlador]
</pre>
}}

Igualmente tendrá que seleccionar el controlador adecuado para su hardware. Para localizar el módulo correcto para su tarjeta, deberá marcar cada controlador como módulo. Si posee una tarjeta PCI, instale <code>pciutils</code> si no lo ha hecho aún. Si quiere los controladores ya instalados o no posee una tarjeta PCI, sáltese este paso y continúe
con [[#Comprobar la salida del núcleo|Comprobar la salida del núcleo]]. 

{{Emerge|pciutils}}

Después de arrancar el nuevo núcleo, lanzamos <code>pcimodules</code>
para listar los módulos requeridos. 

{{RootCmd|pcimodules|output=<pre>
ohci-hcd
ehci-hcd
sis900
snd-emu10k1
b2c2-flexcop-pci
nvidia nvidiafb
</pre>
}}

En este caso tendremos que cargar el módulo <code>b2c2-flexcop-pci</code>.
Añadiremos el nombre a {{Path|/etc/conf.d/modules}}. 

{{File|/etc/conf.d/modules||<pre>
modules="b2c2-flexcop-pci"
</pre>
}}

=== Comprobar la salida del núcleo ===

Se recomienda marcar cada controlador como módulo, de esta forma podrá
añadir el módulo requerido dinámicamente, especialmente si no conoce el nombre del módulo. Si ya conoce el nombre de módulo, marque el
controlador a compilar en el núcleo. Compile el núcleo, instale los módulos y reinicie. Puede comprobar si su núcleo ha detectado correctamente su tarjeta con <code>dmesg</code>. 

Si posee una tarjeta TerraTec Cinergy T2 la salida puede parecerse a ésta:

{{RootCmd|dmesg {{!}} grep DVB|output=<pre>
DVB: registering new adaptor (TerraTec/qanu USB2.0 Highspeed DVB-T Receiver).
input: TerraTec/qanu USB2.0 Highspeed DVB-T Receiver remote control as /class/input/input2
</pre>
}}

== Instalar VDR ==

Para instalar VDR simplemente lanzamos emerge. 

{{Emerge|vdr}} 

== Instalar el mando a distancia ==

Hay al menos dos formas de controlar VDR usando un mando a distancia infrarrojo. Si su tarjeta de televisión tiene un receptor IR
integrado, puede usar <code>vdr-remote</code>. De lo contrario casi seguro que necesitará usar LIRC. 

=== Instalar vdr-remote ===

En primer lugar instalamos el plugin mediante emerge: 

{{RootCmd|emerge vdr-remote
|eselect vdr-plugin enable remote}}

Cuando use el plugin remoto para el puerto IR en su tarjeta DVB todo debería funcionar correctamente con la configuración por defecto. Este plugin
utiliza automáticamente el dispositivo de entrada que contiene "dvb" en su nombre. Para usos más avanzados, eche un vistazo a {{Path|/etc/conf.d/vdr.remote}}. 

=== Alternativa: instalar LIRC ===

Si puede controlar su tarjeta de forma remota (pero no puede o no
quiere usar <c>vdr-remote</c>), puede configurar LIRC. LIRC interpreta las teclas pulsadas y devuelve un nombre para cada una. Un programa que soporte LIRC esperará por los eventos y lanzará la acción configurada en el fichero de configuración, casi siempre
almacenado en el directorio de configuración del programa que se
está ejecutando (por ejemplo <code>mplayer</code> carga el fichero
{{Path|~/.mplayer/lircrc}} ). Antes de instalar LIRC, deberá añadir <c>lirc</c> a los indicadores USE y añadir una entrada adicional a {{Path|/etc/portage/make.conf}}:
<code>LIRC_DEVICES</code>. Consulte
[http://www.lirc.org/html/table.html esta lista] para encontrar los argumentos apropiados para la opción. 

{{File|/etc/portage/make.conf||<pre>
# (Reemplace "devinput" por el controlador apropiado) LIRC_DEVICES="devinput"
USE="lirc"</pre>}}

{{Emerge|lirc}}

Al comienzo, deberemos definir cada código de tecla con un nombre. La
mayoría de los mandos a distancia soportados ya están configurados,
eche un vistazo a la  [http://lirc.sourceforge.net/remotes/ lista de mandos a distancia]. Descargue el fichero necesario y guárdelo como {{Path|/etc/lircd.conf}}. Ahora deberemos encontrar donde está el mando a distancia. Ejecute la siguiente orden para obtener una lista de los dispositivos de entrada actuales (asegúrese de que su dispositivo se está ejecutando). 

{{RootCmd|cat /proc/bus/input/devices|output=<pre>
I: Bus=0000 Vendor=0000 Product=0000 Version=0000
N: Name="TerraTec/qanu USB2.0 Highspeed DVB-T Receiver remote control"
P: Phys=usb-0000:00:1d.7-1/input0
S: Sysfs=/class/input/input2
H: Handlers=kbd event1 B: EV=100003
B: KEY=108fc210 2043 0 0 0 0 8000 2080 1 9e1680 0 0 ffc
</pre>
}}

En este caso, se ha conectado un dispositivo Terratec Cinergy por lo que podemos acceder al dispositivo a través de {{Path|/dev/input/event1}}. Cambie <code>event1</code> por el dispositivo correspondiente que se muestre en su salida. 

<code>lircd</code> necesita saber qué dispositivo usar. Añada la siguiente
línea a {{Path|/etc/conf.d/lircd}}. Recuerde reemplazar <code>devinput</code> por el nombre de su controlador y <code>event1</code> por el controlador en sí. 

{{File|/etc/conf.d/lircd||<pre>
LIRCD_OPTS="-H devinput -d /dev/input/event1"
</pre>
}}

Es el momento de arrancar <code>lircd</code>: 

{{RootCmd|/etc/init.d/lircd start}}

Ahora se debería observar <code>lircd</code> capturando y decodificando pulsaciones de teclas. Simplemente ejecute la orden <code>irw</code>. Párelo presionando Ctrl+C cuando termine. 

{{RootCmd|irw|output=<pre>
0000000000001aa2 00 Exit Technisat_TTS35AI.conf 
0000000000001a8d 00 Mute Technisat_TTS35AI.conf 
0000000000000a97 00 OK Technisat_TTS35AI.conf 
0000000000000a97 01 OK Technisat_TTS35AI.conf 
0000000000000a92 00 Menu Technisat_TTS35AI.conf
</pre>
}}

A continuación, añádalo al nivel de ejecución predeterminado para que
comience automáticamente en el arranque. 

{{RootCmd|rc-update add lircd default}}

Para poder usar su mando a distancia, debe habilitar el soporte LIRC en VDR. Añada la siguiente línea a {{Path|/etc/conf.d/vdr}}: 

{{File|/etc/conf.d/vdr||<pre>
IR_CTRL="lirc"
</pre>
}}

== Métodos de salida de vídeo ==

Ahora debe elegir uno (¡y solo uno!) de los siguientes dispositivos
de salida de vídeo que muestra la imagen y el On Screen Display (OSD)
superpuesto. 

=== Decodificación Hardware: Tarjetas DVB completas (full featured) ===

Los usuario de estas caras tarjetas no necesitan instalar nada más por lo que pueden continuar con [[#Crear una lista de canales|Crear una lista de canales]]. 

=== Decodificación Hardware: Tarjetas DXR3/Hollywood+ ===

Para utilizar una tarjeta DXR3 para la salida VDR necesitamos el plugin <code>vdr-dxr3</code>. 

{{Emerge|vdr-dxr3}}

{{File|/etc/conf.d/modules||<pre>
modules="em8300"
</pre>
}}

El módulo em8300 necesita alguna configuración que depende de la revisión exacta de la tarjeta. 

=== Decodificación Hardware: Tarjetas PVR350 ===

Debido a que las tarjetas PVR350 incorporan un chip dedocificador MPEG querremos hacer uso de él. Necesitamos instalar el plugin <code>vdr-pvr350</code>.  Si <c>ivtv-driver</c> no se ha instalado aún, emerge lo instalará automáticamente. Para cargar el módulo ivtv al arrancar el sistema, lo añadiremos a {{Path|/etc/conf.d/modules}}: 

{{Emerge|vdr-pvr350}}

{{File|/etc/conf.d/modules||<pre>
modules="ivtv"
</pre>
}}

=== Decodificación Software: vdr-softdevice ===

Para instalarlo, tenemos que hacer emerge de <code>vdr-softdevice</code>. No olvide habilitar el plugin 

{{Emerge|vdr-softdevice}}

{{RootCmd|eselect vdr-plugin enable softdevice}}

Para seleccionar las salidas de vídeo y audio adecuadas, edite {{Path|/etc/conf.d/vdr.softdevice}}. 

Por ahora, únicamente describiremos el método shm ("memoria compartida"). Es el que está habilitado por defecto en el fichero de configuración (Ajuste SOFTDEVICE_VIDEO_OUT). Más tarde necesitará arrancar <code>ShmClient</code> para obtener una ventana que muestre la imagen. 

{{Note|Si no quiere preocuparse de una plantilla de teclado aparte para
controlar VDR, existen ficheros de configuración de mandos a distancia disponibles en [http://dev.gentoo.org/~zzam/vdr_remote_conf/ espacio del desarrollador] Matthias Schwarzott. Hay ficheros para softdevice/shm y xineliboutput (se están creando más). Necesitará el fichero adecuado para
{{Path|/etc/vdr/remote.conf}} y lanzar <code>chown vdr:vdr</code> sobre el fichero para hacerlo funcionar.}}

=== Decodificación Software: vdr-xineliboutput ===

Algunas personas prefieren usar <code>vdr-xineliboutput</code>, porque
también puede funcionar remotamente. Ahora le enseñaremos cómo configurar <code>vdr-xineliboutput</code> en su servidor y cliente. En primer lugar, la configuración del servidor: 

{{Emerge|vdr-xineliboutput}}

{{RootCmd|eselect vdr-plugin enable xineliboutput}}

Añadir opciones de línea de comandos en este punto, es crucial para que xineliboutput funcione. Para ver más opciones, use <code>vdr --help</code>. 

{{File|/etc/conf.d/vdr.xineliboutput||<pre>
_EXTRAOPTS="--local=none --remote=37890"
</pre>
}}

El siguiente paso es editar {{Path|/etc/vdr/svdrphosts.conf}}. Este fichero describe un número de direcciones de servidor a las cuales está permitido conectarse al puerto SVDRP del grabador del disco de vídeo que se está ejecutando en el sistema servidor. 

{{File|/etc/vdr/svdrphosts.conf||<pre>
# (La sintaxis correcta es: Dirección-[/Máscara de red])
127.0.0.1 (aceptar siempre localhost)
192.168.1.0/24 (cualquier máquina de la red local)
#204.152.189.113 (una máquina específica)
#0.0.0.0/0 (cualquier máquina en cualquier red. ¡ÚSELO CON CUIDADO!)
</pre>
}}

Si solo quiere usar <code>vdr-xineliboutput</code> para ver la imagen en el mismo ordenador que el que está corriendo VDR puede continuar con la creación de la lista de canales. 

Otherwise, you now simply <code>emerge media-plugins/vdr-xineliboutput</code> on your client: 

{{Emerge|vdr-xineliboutput}}

Later (after having started VDR) you will use the command <code>vdr-sxfe xvdr://hostname</code> to connect to VDR and view its picture and OSD. 

{{Note|There is also a plugin which just simulates the existance of a real output device (<code>vdr-dummydevice</code>) for some fancy uses like record-only servers, but that is more advanced than a normal VDR setup.}}

== Creating a Channel List ==

To make VDR really useful you need to create an appropriate channel list. There is more than one way to get a working list of channels (besides downloading one). The channel list installed by default is for DVB-S reception on Astra on 19.2° E. 

=== Using dvbscan from linuxtv-dvb-apps ===

{{Emerge|linuxtv-dvb-apps}}

Find the correct frequency list for your region and type of reception. These files are stored under {{Path|/usr/share/dvb/scan}}. For reception with DVB-T in Germany, Region Nuernberg you need to use {{Path|/usr/share/dvb/scan/dvb-t/de-Nuernberg}}. 

{{Cmd|dvbscan -o vdr /usr/share/dvb/scan/dvb-t/de-Nuernberg > /etc/vdr/channels.conf}}

=== Using vdr-reelchannelscan ===

First, delete the contents of the existing channel list. 

{{RootCmd|rm /etc/vdr/channels.conf}}

{{Emerge|vdr-reelchannelscan}}

{{RootCmd|eselect vdr-plugin enable reelchannelscan}}

=== Channels for systems using vdr-analogtv ===

You'll probably want to configure your channels at this point. The VDR project provides you with some examples which can be found at {{Path|/usr/share/doc/vdr-analogtv-$version/examples/}}, as long as you've installed >= <code>media-plugins/vdr-analogtv-1.0.00-r1</code>. 

== Starting VDR ==

After having all basic software parts ready on the system you need to configure VDR with its OSD. 

If you use a hardware decoder for picture output you should switch on the connected TV now. If you use software output the client for this must be started after VDR. 

First, you should learn your key definitions; that is, connecting keys on your remote control to VDR's internal commands. 

{{Note|Just in case you need to edit the keyboard configuration, or (more likely) want to delete it to go back to learning the keys: VDR stores its key-definitions in {{Path|/etc/vdr/remote.conf}}.}}

We begin with starting VDR: 

{{RootCmd|/etc/init.d/vdr start|output=<pre>
* Preparing start of vdr:
*   config files ...                                        [ ok ]
*   Waiting for prerequisites (devices nodes etc.) ...      [ ok ]
* Starting vdr ...                                          [ ok ]
* First start of vdr: No check for running vdr possible
* until control device (remote/keyboard) keys are learnt!
</pre>
}}

{{Note|Users of software decoders should now start the client program that opens the window to show the TV picture and the OSD.}}

For users of vdr-softdevice:

{{RootCmd|ShmClient}}

For users of vdr-xineliboutput:

{{RootCmd|vdr-sxfe xvdr://hostname}}

The most useful keys for VDR are: 

* Cursor keys (Left/Right/Up/Down)
* Menu/Exit/Ok
* Colors (Red/Green/Yellow/Blue)
* Number keys (0-9)

{{Important|If you don't have many keys, make sure to assign these. (Some remotes have Play/Pause/etc. on the same keys as the colors, so use them for the colors).}}

Now that the basic installation is over, you need to configure VDR. Switch to your output screen and follow the on-screen instructions. VDR asks you to press various keys on your remote control to learn the correct key codes. If you don't own a remote control, you can use your keyboard. 

Now you can add the VDR initscript to the default runlevel to get it started every time your computer boots up. 

{{RootCmd|rc-update add vdr default}}

== Troubleshooting ==

{{Note|If you need any help, you can always ask someone in [http://www.gentoo.org/irc://irc.gentoo.org/gentoo-vdr #gentoo-vdr], or look around on our [http://forums.gentoo.org/ forums].}}

== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:


* Norman Golisz
* Dimitry Bradt
* Matthias Schwarzott
* Joshua Saddler
