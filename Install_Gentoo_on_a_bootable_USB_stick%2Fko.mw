<languages />
USB  메모리 스틱으로 젠투를 부팅하는 방법은 정말 쉽습니다. 주로 해볼만한 과정은 모든 머신에서 젠투를 부팅할 수 있게 초기화 램 디스크를 설정하는 부분입니다. 이 글에서는 어떤 컴퓨터에서든 USB 메모리 스틱으로 젠투를 설치하는 방법을 설명합니다. 이 설치 과정은 보통의 데스크톱 설치 과정과 유사하며 이렇게 바꾼 내용은 계속 남아있습니다.

== 준비 ==

{{Note|이 지침에서는 현재 플랫폼이 젠투 리눅스 하나만 있다고 간주합니다. 하지만 주된 단계는 어떤 배포판에서든 젠투에서 하던 방식(프로그램 설치 등)대로 바꾸면 진행할 수 있습니다.}}

몇가지 꾸러미를 설치하는 과정으로 시작하겠습니다. 여기서 중요한 대부분의 요소는 커널과 {{package|sys-kernel/genkernel}} 꾸러미입니다.

{{emerge|sys-kernel/gentoo-sources sys-kernel/genkernel}}

꾸러미별 USE 플래그를 추가하려면 {{path|/etc/portage/package.use/}}에 새 파일을 만드십시오:

{{FileBox|filename=/etc/portage/package.use/sys-apps|1=
sys-apps/busybox static
}}

이제 {{Package|sys-apps/busybox}} 꾸러미를 설치하십시오:

{{emerge|sys-apps/busybox}}

== 커널 컴파일 ==

커널에 필요한 설정을 적용하고 컴파일 하십시오. 과정상 자세한 내용은[[Handbook:AMD64/Installation/Kernel/ko|커널 설정]]과 [[Kernel/Configuration/ko|커널 설정 안내서]]를 참고하십시오. 여기서는 일반 커널이 더 많은 머신에서 부팅할 테므로 일반 커널을 활용하는게 좋음을 확실히 기억해두십시오.

설정 과정에서 이와 같이 모듈을 [[initramfs]]에 포함하여 컴파일할 수 있고 부팅 과정에서 불러올 수 있습니다.

{{RootCmd|mkdir /tmp/boot
|genkernel --firmware --busybox --disklabel --bootdir=/tmp/boot --no-symlink --all-ramdisk-modules --install all
}}

위 명령은 기본 커널을 빌드하고 램 디스크를 만든 다음 {{Path | /tmp/boot}}에 모든 파일을 복사합니다.

{{RootCmd|ls /tmp/boot/
|output=<pre>
initramfs-genkernel-x86_64-3.5.2-gentoo
kernel-genkernel-x86_64-3.5.2-gentoo
System.map-genkernel-x86_64-3.5.2-gentoo
</pre>}}

== USB 메모리 스틱 준비 ==

드라이브에 분할 공간을 두개 만듭니다({{Path|/boot}}와 {{Path|/}}(루트) 파티션을 설치한다고 가정). USB 메모리 스틱은 {{Path|/dev/sdb}}(USB 메모리 스틱을 장착한 다음 <tt>dmesg</tt> 명령을 바로 실행하면 어떤 장치가 USB 메모리 스틱인지 확인)에 있다고 가정합니다.

{{RootCmd|fdisk /dev/sdb|output=<pre>
Command (m for help): d
Selected partition 1
 
Command (m for help): n
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p): p
Partition number (1-4, default 1): 1
First sector (2048-4001759, default 2048): 
Using default value 2048
Last sector, +sectors or +size{K,M,G} (2048-4001759, default 4001759): +100M
 
Command (m for help): n
Partition type:
   p   primary (1 primary, 0 extended, 3 free)
   e   extended
Select (default p): p
Partition number (1-4, default 2):  
Using default value 2
First sector (206848-4001759, default 206848): 
Using default value 206848
Last sector, +sectors or +size{K,M,G} (206848-4001759, default 4001759): 
Using default value 4001759
 
Command (m for help): a
Partition number (1-4): 1
 
Command (m for help): p
 
Disk /dev/sdb: 2048 MB, 2048901120 bytes
255 heads, 63 sectors/track, 249 cylinders, total 4001760 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x001663df
 
   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1   *        2048      206847      102400   83  Linux
/dev/sdb2          206848     4001759     1897456   83  Linux
 
Command (m for help): w
The partition table has been altered!
 
Calling ioctl() to re-read partition table.
Syncing disks.
</pre>}}

첫번째 분할 공간을 부팅이 가능하게(명령으로 부팅 플래그 상태를 바꿈)했는지 확인하십시오

이제 새 파티션을 포맷하십시오. 여기서는 ext2 파일 시스템을 쓰지만 커널에서 지원하는 파일 시스템으로 {{Path|/}}파티션을 포맷할 수 있습니다. 참고로 포맷 과정에서 파티션에 레이블을 할당합니다. 이 과정은 드라이브 문자 할당이 완전히 다른 USB 메모리 스틱의 루트 파일 시스템을 감지하는 수단이 되기 때문에 중요합니다. 이전에 언급했던 {{c | genkernel}} 명령의 <code>--disklabel</code> 옵션과 관련이 있습니다.

{{RootCmd|mkfs.ext2 -L GENTOO_USB_BOOT /dev/sdb1
|mkfs.ext2 -L GENTOO_USB_ROOT /dev/sdb2}}

== 젠투 스테이지 3 설치 ==

커널, 램 디스크, 파일 시스템을 준비하고 나면 최소한의 설치를 진행해야합니다. 포티지 트리 스냅샷 같은 곳에 최신 스테이지 3가 들어있습니다.

* [http://distfiles.gentoo.org/releases/amd64/autobuilds/current-stage3-amd64/ current-stage3]
* [http://distfiles.gentoo.org/releases/snapshots/current/portage-latest.tar.xz portage-latest]

이 예제에서 {{Path|stage3-amd64-20120621.tar.bz2}} 와 {{Path|portage-latest.tar.xz}} 를 사용하겠습니다. 이 다음 부분은 젠투 설치 핸드북에 있는 내용과 약간 비슷합니다.

{{RootCmd|mount /dev/sdb2 /mnt/gentoo
|cd /mnt/gentoo
|tar -xpf ~/Download/stage3-amd64-20120621.tar.bz2
|cd usr
|tar -xpf ~/Download/portage-latest.tar.xz
|mount /dev/sdb1 /mnt/gentoo/boot
|cp /tmp/boot/* /mnt/gentoo/boot}}

다음 장에서는 USB 메모리 스틱에 개별적으로 젠투 리눅스를 설치하는 양상을 다룹니다. 이 글의 내용을 진행하는 동안 [[Handbook:Main_Page/ko|젠투 핸드북]]을 활용하시면 좋습니다.

=== 부트로더 ===

새 시스템으로 부팅하려면 USB 메모리 스틱으로 부트로더를 설치하십시오.

아래에는 [[lilo]] 와 [[syslinux]]의 예제 설정을 제시했습니다.

==== lilo ====

[[lilo]]를 (chroot 한 상태에서) 이머지하십시오:

{{RootCmd|prompt=(chroot) #|emerge sys-boot/lilo}}

{{path|etc/lilo.conf}} 파일을 편집하여 올바른 정보가 들어가도록 하십시오.

{{Warning|이 설정은 상당히 중요해서 한 줄씩 이야기하겠습니다.}}

{{FileBox|filename=/etc/lilo.conf|title=Configure lilo.conf|1=
boot=/dev/sdb              # The location of the USB Stick (currently)
lba32                      # use lba32 addressing (ignore)
compact                    # boot quickly by loading lots of blocks
                           # remove when there are problems with booting
prompt                     # Prompt for user input
timeout=20                 # Time to wait before default selection
default="Gentoo-352"       # Default selection after timeout
  
image=/boot/kernel-genkernel-x86_64-3.5.2-gentoo
	label="Gentoo-352"
	read-only
	root=/dev/ram0
	append="real_root=LABEL=GENTOO_USB_ROOT scandelay=5"
	initrd=/boot/initramfs-genkernel-x86_64-3.5.2-gentoo
}}

이미지 다음에 나타나는 줄은 다루기 쉽지만, 추가로 붙어있는 줄에는 볼만한 옵션을 넣었습니다.

* <code>real_root=LABEL=GENTOO_USB_ROOT</code> will use the label of the disk instead of {{path|/dev/sdb2}} which is important because these device numbers move around depending on the number of hard disks in the computer or number of USB disk drives.
* Also important for USB booting is the <code>scandelay</code> option, as USB devices need a little time to be detected by the kernel; that is what this option is for. When there are lots of modules booting takes a long time so it probably does not matter, but if there are only a few modules loaded then it is important, because the system could have booted before the kernel detects the USB device. Also, on newer machines with USB3 controllers it is necessary to add the <tt>xhci_hcd</tt> driver (built into the kernel or as a module).

이제 LILO(및 설정)를 USB 메모리 스틱에 설치하십시오:

{{RootCmd|prompt=(chroot) #|lilo|output=<pre>
Warning: /dev/sdb is not on the first disk
Warning: The initial RAM disk is too big to fit between the kernel and
   the 15M-16M memory hole.  It will be loaded in the highest memory as
   though the configuration file specified "large-memory" and it will
   be assumed that the BIOS supports memory moves above 16M.
Added Gentoo-352 ? *
2 warnings were issued.</pre>}}

The first warning is to be expected as we are not installing the boot loader onto the hard disk in the computer. The second warning will only cause a problem on machines that are old; if it is a problem try cutting down the kernel by removing modules.

==== syslinux ====

{{Warning|syslinux는 현재 ext{2,3,4}, btrfs, ntfs, fat 파일 시스템에서만 동작합니다.}}

{{RootCmd|prompt=(chroot) #|emerge syslinux}}

USB 메모리 스틱에 부팅 섹터를 설정하십시오.

{{RootCmd|prompt=(chroot) #|dd bs{{=}}440 count{{=}}1 conv{{=}}notrunc if{{=}}/usr/share/syslinux/mbr.bin of{{=}}/dev/sdb}}

이제 부트로더를 설정하겠습니다.

{{RootCmd|prompt=(chroot) #|mkdir /boot/syslinux|nano -w /boot/syslinux/syslinux.cfg}}

{{FileBox|filename=/boot/syslinux/syslinux.cfg|1=
PROMPT 1
TIMEOUT 50
DEFAULT gentoo
 
LABEL gentoo
        LINUX ../kernel-genkernel-x86_64-3.5.2-gentoo
        APPEND root=LABEL=GENTOO_USB_ROOT scandelay=3 ro
        INITRD ../initramfs-genkernel-x86_64-3.5.2-gentoo
}}

{{Note|The <code>ro</code> in the above <code>APPEND</code> line will cause the root partition to be mounted read-only (which is usually preferred on USB sticks). Replace <code>ro</code> with <code>rw</code> to allow the system to be modified from the boot onwards (instead of having the user mount the file system as read-write later).}}

Next install syslinux onto the USB stick. The <code>--device /dev/sdb1</code> option is not absolutely necessary though.

{{RootCmd|prompt=(chroot) #|extlinux --device /dev/sdb1 --install /boot/syslinux}}

=== fstab ===

{{FileBox|filename=/etc/fstab|title=레이블이 동작하도록 fstab 설정|1=
LABEL=GENTOO_USB_BOOT   /boot           ext2            noauto,noatime  1 2
LABEL=GENTOO_USB_ROOT   /               ext2            noatime         0 1
/dev/SWAP               none            swap            sw              0 0
/dev/cdrom              /mnt/cdrom      auto            noauto,ro       0 0
/dev/fd0                /mnt/floppy     auto            noauto          0 0
}}

== 요령 ==

Although it is possible to use the system just made as a standard Gentoo system, it might be worthwhile to compile binary packages on a host and then installing them on the USB stick. Or if the system has enough memory just mount {{Path|/var/tmp}} to a tmpfs, as compilation will be much quicker that way anyway!


[[Category:Core system]]
