Switching between nVidia's binary driver and the open source nouveau driver can be tricky, but definitely doable. This article will detail how to go about switching between them at different stages (i.e. at boot, in a runlevel, etc.)

== Switching using two kernels ==
=== On Boot ===
This method assumes the following:
* Two kernels, one with the nouveau driver enabled and one with the nouveau driver disabled (or built as a module).
* The nouveau-less kernel needs to have a ''-nvidia'' suffix(i.e CONFIG_LOCALVERSION=mykernel-nvidia).
* The GRUB bootloader.

It is assumed you already have a nouveau kernel and want to build the one that will use the nvidia driver. Begin with appending the ''-nvidia'' suffix to the kernel name:
{{Kernel||<pre>
General setup  --->
	(-mykernel-nvidia) Local version - append to kernel release
</pre>}}
Now make sure the nouveau driver is disabled or built as a module:
{{Kernel||<pre>
Device Drivers  --->
	[*] Staging drivers  --->
		<M> Nouveau (nVidia) cards
</pre>}}
Now recompile and install the kernel. Make sure you update GRUB to take the new kernel into account. Note that kernels with the same version but with different names are considered unique. So if you want to emerge an out-of-tree kernel module to be used with the nouveau kernel you'll first need to copy over the nouveau kernels config file to /usr/src/linux/.config.

Set the '''''VIDEO_CARDS''''' variable in /etc/make.conf to "nvidia nouveau" and update your system:
{{RootCmd|emerge --newuse --deep @world}}
 
Blacklist the '''nvidia''' and '''nouveau''' modules as you don't want udev to try and autoload them.
{{RootCmd|echo -e "blacklist nouveau\nblacklist nvidia" >> /etc/modprobe/nvidia-n-nouveau.conf}}
And finally use the init script bellow to switch graphics driver depending on what kernel you booted with:
{{File|/etc/local.d/nvidia.start||<pre>
#!/bin/bash

depend() {
	need localmount
	before xdm
}

if [[ $(uname -r) == *-nvidia ]] ; then
	modprobe -q nvidia
	if [[ $(eselect opengl show) != nvidia ]] ; then
		eselect opengl set nvidia &>/dev/null
	fi
cat > /etc/X11/xorg.conf.d/01-nvidia.conf << EOF
Section "Device"
  Identifier   "Device0"
  Driver       "nvidia"
  Option       "NoLogo" "True"
EndSection
EOF
else
	modprobe -q nouveau
	if [ -f /etc/X11/xorg.conf.d/01-nvidia.conf ] ; then
		rm /etc/X11/xorg.conf.d/01-nvidia.conf
	fi
	if [[ $(eselect opengl show) != xorg-x11 ]] ; then
		eselect opengl set xorg-x11 &>/dev/null
	fi
fi
</pre>}}
Copy it to /etc/local.d/nvidia.start and set the executable bit:
{{RootCmd|chmod +x /etc/local.d/nvidia.start}}

== Switching using a single kernel and {{Package|sys-apps/hprofile}} ==
Another method is switching between two profiles with hprofile, using a single kernel: /etc/init.d/hprofile has to be modified adding a few lines for vga switching. Warning: hprofile shall be added in boot runlevel.

Just be sure to built kernel modules about everything — at least nouveau, ttm, drm, and optionally(?) ac, button, video, i2c-algo-bit — to avoid useless hassles.  

{{GenericCmd|<pre>--- /etc/init.d/hprofile	2011-07-26 15:26:56.000000000 +0000
+++ /etc/init.d/hprofile	2012-03-03 17:42:34.686258567 +0000
@@ -7,15 +7,19 @@
 }
 
 start() {
+	vgap=$(/usr/sbin/hpdet vga)
 	powerp=$(/usr/sbin/hpdet power)
 	ebegin "Selecting hardware profile vga.$vgap and power.$powerp"
+	/usr/sbin/hprofile vga 
 	/usr/sbin/hprofile power
 	eend $?
 }
 
 stop() {
+	vgap=$(/usr/sbin/hprofile -c vga)
 	powerp=$(/usr/sbin/hprofile -c power)
 	ebegin "Stopping hardware profile vga.$vgap and power.$powerp"
+	/usr/sbin/hprofile -s vga
 	/usr/sbin/hprofile -s power
 	eend $?
 }</pre>}}

Create the necessaries folder /etc/hprofile/profiles/vga/{scripts,files/etc/X11/xorg.conf.d} and add the following files.

{{Note|Of course, the necessary files should be added for the following profiles, only nouveau and nvidia files will be posted in this contribution.}}
{{File|/etc/hprofile/profiles/vga/profiles||<pre>
intel
radeon
nvidia
nv
nouveau
fglrx</pre>}}

{{Note|This is necessary because the console font will be bigger when a new driver or rofile is set/used.}}
{{File|/etc/hprofile/profiles/vga/post-start||<pre>
#!/bin/sh
echo "Finished starting profile ${1}"
/etc/init.d/consolefont restart
exit 0</pre>}}

{{File|/etc/hprofile/profiles/vga/stop [or /etc/hprofile/profiles/vga/post-stop]||<pre>
#!/bin/sh
[ "${1}" == "intel" ] || [ "${1}" == "radeon" ] && \
    echo ON > /sys/kernel/debug/vgaswitcheroo/switch
echo "Finished Stopping profile ${1} and moving back xorg.conf"</pre>}}

{{Note|If a specific kernel module is loaded with an initramfs or modules init services, the appropriate profile will be selected with the following script.}}
{{File|/etc/hprofile/profiles/vga/ptest||<pre>
if [  ! -e /sys/kernel/debug/vgaswitcheroo/switch ]; then
    [ -z "$(lsmod | grep -i radeon)" ] && modprobe radeon && sleep 3
    [ -z "$(lsmod | grep -i i915)" ] && modprobe i915 && sleep 3
fi
[ $(grep DIS:+ /sys/kernel/debug/vgaswitcheroo/switch) ] && echo "radeon" && exit 0
[ $(grep IGD:+ /sys/kernel/debug/vgaswitcheroo/switch) ] && echo "intel" && exit 0
for drv in nouveau nvidia radeon i9{1,6}5 fglrx; do
[ -n "$(lspci -k | grep "Kernel driver in use: $drv")" ] && echo "$drv" && exit 0 
done
echo "invalid" && exit 1</pre>}}

{{File|/etc/hprofile/profiles/vga/scripts/nouveau.start||<pre>
#!/bin/sh
echo "Starting nouveau profile."
modprobe nouveau || echo "failed to load nouveau module."
[ "$(eselect opengl show)" != "xorg-x11" ] && eselect opengl set xorg-x11
exit 0</pre>}}
{{File|/etc/hprofile/profiles/vga/scripts/nouveau.stop||<pre>
#!/bin/sh
echo "Stopping nouveau profile."
echo 0 > /sys/class/vtconsole/vtcon1/bind
rmmod nouveau || echo "failed to remove nouveau module." && exit 1
/etc/init.d/consolefont restart
rmmod ttm
rmmod drm_kms_helper
rmmod dri</pre>}}

{{File|/etc/hprofile/profiles/vga/scripts/nvidia.start||<pre>
#!/bin/sh
echo "Starting nvidia profile."
modprobe nvidia || echo "failed to load nvidia module." && exit 1
[ "$(eselect opengl show)" != "nvidia" ] && eselect opengl set nvidia</pre>}}
{{File|/etc/hprofile/profiles/vga/scripts/nvidia.stop||<pre>
#!/bin/sh
echo "Stopping nvidia profile."
rmmod nvidia || echo "failed to remove nvidia module." && exit 1</pre>}}

{{File|/etc/hprofile/profiles/vga/files/etc/X11/xorg.conf.d/40-monitor.conf.nouveau||<pre>
Section "Monitor"
    Identifier  "DFP-0"
    VendorName  "DELL"
    ModelName   "2000WFP"
    Option      "PreferredMode" "1680x1050"
EndSection

Section "Device"
    Option      "EXAVsync"  "True"
    Option      "GLXVBlank" "True"
    Identifier  "8800GT"
    Driver      "nouveau"
    BusID       "PCI:1:0:0"
EndSection

Section "Screen"
    Identifier "NOUVEAU"
    Device     "8800GT"
    Monitor    "DFP-0"
    SubSection "Display"
        Viewport  0 0
        Depth     24
    EndSubSection
EndSection</pre>}}
{{File|/etc/hprofile/profiles/vga/files/etc/X11/xorg.conf.d/40-monitor.conf.nvidia||<pre>
Section "Monitor"
    Identifier "DFP-0"
    VendorName "DELL"
    ModelName  "2000WFP"
    Option     "PreferredMode" "1680x1050"
EndSection

Section "Device"
    Option     "AddARGBGLXVisuals"  "on"
    Option     "NoLogo"
    Identifier "8800GT"
    Driver     "nvidia"
    BusID      "PCI:1:0:0"
EndSection

Section "Screen"
    Identifier "NVIDIA"
    Device     "8800GT"
    Monitor    "DFP-0"
    SubSection "Display"
        Viewport  0 0
        Depth     24
    EndSubSection
EndSection</pre>}}

And with that, you should be able to switch vga profile as you like without needing an extra kernel and setup.

[[Category:Graphics Adapters]]
[[Category:Hardware]]
[[Category:Desktop]]
