<languages />

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox project|Portage-Tools|header=true}}
|{{InfoBox wikipedia|Gentoolkit}}
|{{InfoBox gitweb|gentoolkit.git}}
}}

{{c|eclean}} is a tool for cleaning repository source files and binary packages. It is part of the {{Package|app-portage/gentoolkit}} package and managed by the [[Project:Portage-Tools|Portage-Tools project]].

== Installation ==

=== Emerge ===

Install {{c|eclean}}:

{{Emerge|app-portage/gentoolkit}}

{{Note|Beachten Sie den [[Gentoolkit/de|Gentoolkit Artikel]] für Informationen zu weiteren Werkzeugen beinhaltet im Paket {{Package|app-portage/gentoolkit}}.}}

== Bedienung ==

By default, source files are located in the {{Path|/usr/portage/distfiles}} directory, while binary packages are located in the {{Path|/usr/portage/packages}} directory. The locations for each can be changed by altering the <var>[[DISTDIR]]</var> and the <var>PKGDIR</var> variables respectively in {{Path|/etc/portage/make.conf}}. Both locations can grow quite big if not periodically cleaned; this is the reason {{c|eclean}} was created.

=== Invocation ===

Use {{c|eclean --help}} to see full action summary, options list, and usage breakdown:

{{Cmd|eclean --help|output=<pre>
Usage:
 eclean [global-option] ... <action> [action-option] ...
 eclean-dist [global-option, distfiles-option] ...
 eclean-pkg [global-option, packages-option] ...
 eclean(-dist,-pkg) [--help, --version]
 
Available global options:
 -C, --nocolor             - turn off colors on output
 -d, --deep                - only keep the minimum for a reinstallation
 -e, --exclude-file=<path> - path to the exclusion file
 -i, --interactive         - ask confirmation before deletions
 -n, --package-names       - protect all versions (when --deep
 -p, --pretend             - only display what would be cleaned
 -q, --quiet               - be as quiet as possible
 -t, --time-limit=<time>   - don't delete files modified since <time>
   <time> is a duration: "1y" is "one year", "2w" is "two weeks", etc.
   Units are: y (years), m (months), w (weeks), d (days) and h (hours).
 -h, --help                - display the help screen
 -V, --version             - display version info
 
Available actions:
 packages     - clean outdated binary packages from PKGDIR
 distfiles    - clean outdated packages sources files from DISTDIR
 
Available options for the packages action:
 NONE  :)
 
Available options for the distfiles action:
 -f, --fetch-restricted   - protect fetch-restricted files (when --deep)
 -s, --size-limit=<size>  - don't delete distfiles bigger than <size>
   <size> is a size specification: "10M" is "ten megabytes", "200K" is
   "two hundreds kilobytes", etc.  Units are: G, M, K and B.
 
More detailed instruction can be found in `man eclean`
</pre>}}

=== Distfiles bereinigen ===

Säubern Sie das Quelldatei-Verzeichnis durch Übergabe des <code>distfiles</code> Arguments:

{{RootCmd|eclean distfiles}}

Oder durch Aufruf der kurzen Option:

{{RootCmd|eclean-dist}}

=== Pakete bereinigen ===

Für das Verzeichnis mit den Binärpaketen verwenden Sie stattdessen den folgenden Befehl:

{{RootCmd|eclean packages}}

Oder durch Aufruf der kurzen Option:

{{RootCmd|eclean-pkg}}

== Options ==

By default, source files and binary packages corresponding to any ebuild in the current repository will '''not''' be deleted. This way, system administrators can easily downgrade a package or install a previously removed package, provided the package is still in the current repository tree.

As an example, suppose packages foo-1.0 and foo-1.1 are both in the repository. After updating from foo-1.0 to foo-1.1, run {{c|eclean distfiles}}: source files for both versions will be kept, so if a problem occurs with foo-1.1 then the user can easily re-install foo-1.0 without re-downloading anything.

The other possible case is installing a previously removed package. Suppose that a package foo (any version) is installed on the system. After (inadvertently) removing it and running {{c|eclean distfiles}}, the source files for foo will be kept, so it can be re-installed without re-downloading anything.

Die gleichen Beispiele sind ebenfalls für Binärpakete anwendbar.

To save more disk space, add the <code>--deep</code> option: every source file or binary package that does not correspond to some ''currently installed'' package (version does matter) will be deleted. Please notice that this way users will not be protected in case they need to downgrade a package or re-install a previously removed package.

As an alternative, use both the <code>--deep</code> and the <code>--package-names</code> options: every source file or binary package that does not correspond to some currently installed package (version does not matter) will be deleted. This still will not protect in case a re-install of a previously removed package is needed, but it will protect the sources if the package needs to be downgraded later.

Für weitere Details lesen Sie die eclean(1) Man-Page:

{{Cmd|man 1 eclean}}

== Siehe auch ==

* [[Gentoolkit]]
* [[Knowledge Base:Remove obsoleted distfiles|Knowledge Base: Remove obsoleted distfiles]]
* [[DISTDIR]]


[[Category:Portage tools]]
