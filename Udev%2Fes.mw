<languages />


{{Metadata|abstract=udev es el gestor de dispositivos para el núcleo Linux. Gestiona los nodos de dispositivo en /dev y también todos las acciones en espacio de usuario cuando se añaden o eliminan dispositivos.}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox wikipedia|header=true}}
}}

'''udev''' es el gestor de dispositivos para el núcleo Linux. Principalmente gestiona los nodos de dispositivo en {{Path|/dev}} y también todos las acciones en espacio de usuario cuando se añaden o eliminan dispositivos. Eche también un vistazo a [Project:Eudev|eudev] una bifurcación de udev.

== ¿Qué es udev? ==

=== El directorio /dev ===

Cuando los usuarios de Linux hablan acerca del hardware de sus sistemas a gente que puede llegar a pensar que Linux es algún tipo de virus o marca de café, el uso de términos como "barra dev barra algo" provocará, sin dudas, miradas raras. Pero para el usuario afortunado (incluyendo al lector) el usar {{Path|/dev/sda1}} es solo una forma rápida de explicar que nos referimos a la primera partición del disco primer disco SATA. ¿O no? 

Todos sabemos lo que es un archivo de dispositivo. Algunos incluso saben por qué cuando miramos un poco más de cerca la salida de <code>ls
-l</code> en {{Path|/dev}} los archivos de dispositivo muestran unos números especiales. Pero lo que siempre damos por sentado es que el
primer disco SATA se llama {{Path|/dev/sda}}. Tal vez no lo vea así, pero esto es un fallo de diseño. 

Piense en los dispositivos que se enchufan en caliente como los USB, IEEE 1394, tarjetas PCI que se cambian en caliente ... ¿Cuál es el
primer dispositivo? ¿Y por cuánto tiempo? ¿Cómo se llamarán los demás dispositivos cuando el primero desaparezca? ¿Cómo afectará ésto a las transacciones en curso? ¿No sería divertido que un trabajo de impresión se cambiase de repente desde su flamante impresora láser nueva a la moribunda impresora de matriz solo porque alguien decidió desenchufar la impresora láser que era la primera impresora? 

Entra en escena ''udev''. Los objetivos del proyecto udev son a la vez interesantes y necesarios:

* Corre en espacio de usuario
* Crea y borra archivos de dispositivo dinámicamente
* Proporciona nombres consistentes
* Proporciona una API en espacio de usuario

Cada vez que se produce un cambio en la estructura de los dispositivos, el núcleo emite un ''uevent'' que recoge udev. Entonces,
udev sigue las reglas declaradas en los directorios
{{Path|/etc/udev/rules.d}}, {{Path|/run/udev/rules.d}} y {{Path|/lib/udev/rules.d}}. Basándose en la información contenida en el evento, busca la regla o reglas que necesita ejecutar y realiza las acciones requeridas. Estas acciones pueden consistir en la creación o eliminación de ficheros de dispositivo, pero pueden suponer también la carga de ficheros de firmware particulares en la memoria del núcleo.

== Instalación ==

{{Note/es|Si está actualizando, eche un vistazo a la [https://wiki.gentoo.org/wiki/Udev/upgrade página de actualización].}}

=== Núcleo ===

Necesita activar las siguientes opciones del núcleo:

<!-- Mire en  http://git.kernel.org/?p=linux/hotplug/udev.git;a=blob_plain;f=README --> {{Kernel||<pre>
General setup --->
  [*] Configure standard kernel features (expert users) --->
     [ ] Enable deprecated sysfs features to support old userspace tools
     [*] Enable signalfd() system call
Enable the block layer --->
  [*] Block layer SG support v4
Networking support --->
  Networking options --->
     <*> Unix domain sockets
Device Drivers --->
  Generic Driver Options --->
     () path to uevent helper
     [*] Maintain a devtmpfs filesystem to mount at /dev
  < > ATA/ATAPI/MFM/RLL support (DEPRECATED) --->
File systems --->
  [*] Inotify support for userspace
  Pseudo filesystems --->
     [*] /proc file system support
     [*] sysfs file system support
</pre>}}

=== Software ===

Portage reconoce el ajuste USE global ''udev'' para habilitar el soporte de udev en otros paquetes. Al habilitar este ajuste USE (se realiza por defecto todos los [[profile|perfiles]] ''linux'') se instalará automáticamente {{Package|sys-fs/udev}}:

{{File|/etc/portage/make.conf||<pre>
USE="... udev ..."
</pre>}}

Los ajustes USE para udev son:

{{USEflag|package=sys-fs/udev
|acl+yes
|doc
|firmware-loader+yes
|gudev+yes
|introspection+yes
|kmod+yes
|openrc+yes
|selinux++no
|static-libs++no
}}

Después de definir esto, seguramente desee actualizar su sistema para que los cambios tengan efecto:

{{Emerge|params+=--changed-use --deep|@world}}

== Configuración ==

=== Servicio ===

Para arrancar udev en el inicio, añada esto a su nivel de ejecución sysinit: {{RootCmd|rc-update add udev sysinit}}

== Configuración avanzada ==

=== Reglas ===

Udev ofrece un conjunto de reglas que concuerdan con los valores exportados de los uevents (eventos enviados por el núcleo) y las propiedades del dispositivo que se ha descubierto. Una regla que concuerda posiblemente creará y nombrará un nodo de dispositivo y lanzará los programas definidos para poner en marcha y configurar el dispositivos.

Las definiciones de las reglas se almacenan en {{Path|/lib/udev/rules.d}} (instaladas por los paquetes) y {{Path|/etc/udev/rules.d}} (para las reglase especificadas por los usuarios). En este sentido, varios ficheros de reglas (con el sufijo {{Path|.rules}}) se tratan en orden alfanumérico. Dentro de los ficheros de reglas, udev encuentra las expresiones que comparará con el uevent junto con el estado con el que debe concordar (es el uevent ya que se añade o elimina un dispositivo) y la orden que debe lanzar.

La concordancia del evento se basa en información como:
* El ''SUBSYSTEM'' del evento (para qué tipo de dispositivo se dispara el uevent)
* La ''ACTION'' que se toma (añadir, cambiar o eliminar)
* Uno o más atributos (a través de ''ATTR'' o ''ATTRS''), tales como la clase del dispositivo, el fabricante u otra información del dispositivo
* El nombre ofrecido por el núcleo (a través de ''KERNEL''), como sd* (para los discos SCSI/SATA) o input* (para dispositivos de entrada como teclados y ratones)
* Uno o más ajustes de entorno (a través de ''ENV''), utilizado para enviar información entre varias reglas.

Basándose en esta información, la regla puede entonces comprobar si:
* Se necesita compartir alguna información con eventos posteriores (a través de variables de entorno)
* Se necesita crear enlaces en {{Path|/dev}}
* Se necesita lanzar alguna orden

Udev realiza esto para cada regla que concuerda (por lo que no se detiene en la primera concordancia) para permitir un enfoque flexible de gestión de los dispositivos.

=== Nombres persistentes de dispositivos ===

El núcleo detecta los dispositivos de forma asíncrona. Udev crea un reflejo del sistema de ficheros del núcleo [[sysfs]] y por lo tanto los dispositivos se nombran y numeran en el orden de su detección. Así, por defecto udev no ofrece nombres persistentes de los dispositivos. Sin embargo, existen mecanismos de algunas clases de dispositivo para ofrecerlos:

* Udev crea enlaces simbólicos adicionales para los dispositivos de almacenamiento basándose en el identificador, el uuid y la ruta del dispositivo. Eche un vistazo al directorio {{Path|/dev/disk/by-*}}. Por lo que, por ejemplo, en lugar de utilizar el fichero de dispositivo {{Path|/dev/sda}} utiliza el fichero {{Path|/dev/disk/by-label/ALGUNA_ETIQUETA}}.

* Lo mismo aplica para los dispositivos de entrada en el directorio {{Path|/dev/input}}.

* Usando reglas propias puede crear sus propios ficheros de dispositivo.

== Utilización ==

Algunas órdenes útiles son las siguientes:

* Mostrar todos los mensajes sobre un determinado fichero de dispositivo: : {{RootCmd|udevadm info --query{{=}}all --name{{=}}/dev/FICHERO_DE_DISPOSITIVO}}

* Monitorizar las actividades de udev: {{RootCmd|udevadm monitor}}

Lea la [[man page|página del manual]] de ''udevadm'' para más información.

== Troubleshooting ==

* {{Bug|udev|search=package}}

=== Log monitor messages ===

Log all message you see, when you run '''udevadm monitor''':

{{File|/etc/conf.d/udev||<pre>
udev_monitor="YES"
</pre>}}

It will create the new log file {{Path|/run/udev/udevmonitor.log}}.

=== Debug mode ===

Enable debug mode to get more log messages:

{{File|/etc/conf.d/udev||<pre>
udev_debug="YES"
</pre>}}

It will create the new log file {{Path|/run/udev/udevdebug.log}}.

=== Missing device files {{Path|/dev/null}} and {{Path|/dev/console}} ===

Some udev versions need these files and can't create them on their own. So you have to create them:

{{RootCmd
|mkdir test
|mount --bind / test
|cd test/dev
|mknod -m 660 console c 5 1
|mknod -m 660 null c 1 3
|cd ../..
|umount test
|rmdir test
}}

=== NIC assigned eth0, but is moved to eth1 ===

Those having dual network cards on their motherboards may run into a situation where ifconfig may show no eth0 or eth1.  Dmesg may show their NIC detected as eth0, and later moved to eth1. Performing a "ifconfig -a" will also show the NIC as eth1. This is caused by using the kernel assigned names in the first place. You should write your own rules like {{Path|/etc/udev/rules.d/70-my-network.rules}} to
use free names like lan0 or wireless0 or use the predictable interface names which are enabled by the default since version 197.

Remember to also remove old files from old versions of udev:

{{RootCmd|rm /etc/udev/rules.d/70-persistent-net.rules}}


[[Category:Core system]]
[[Category:Daemons]]
