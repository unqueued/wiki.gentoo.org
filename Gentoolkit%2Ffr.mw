<languages />


Gentoolkit est une suite d'outils destinée à faciliter l'administration d'un système Gentoo. Ce document couvre les bases de quelques uns des outils présents dans cette boîte à outils.

== Introduction ==

=== Qu'est-ce que le Gentoolkit? ===

Gentoo est une distribution unique en son genre et présente quelques complexités qui n'existe tout simplement pas dans d'autres distributions. Au fur et à mesure que les développeurs et contributeurs de Gentoo découvraient ces complexités, ils écrivirent des outils pour aider les utilisateurs et les administrateurs à les surmonter. Beaucoup de ces outils ont été apportés au projet Gentoo et sont inclus dans le paquet <code>app-portage/gentoolkit</code>. 

{{Note| À ce jour, il existe deux versions de ''gentoolkit'' : <code>app-portage/gentoolkit</code> et <code>app-portage/gentoolkit-dev</code>. Alors que la première contient des scripts d'administration, la seconde contient des scripts déstinés à faciliter le développement sur Gentoo. Si vous êtes un développeur, vous pouvez avoir vos scripts inclus dans  <code>gentoolkit-dev</code> en prenant contact avec le mainteneur de ''gentoolkit''.  Ce document ne traite que de  ''gentoolkit''.}}

''Gentoolkit'' contient tout un ensemble d'outils utiles pour vous aider à gérer vos paquets et garder la trace de ce qui se passe sur votre système.  La plupart des utilisateurs -- en particuliers ceux qui mettent souvent leur système à jour -- tireront un bénéfice à avoir ''gentoolkit'' installé. 

=== Installation ===

Comme pour tout paquet Gentoo, l'installation fait appel à une simple commande ''emerge''. 

{{Emerge|gentoolkit}}

{{Note|Beaucoup des outils du  ''gentoolkit'' fournissent des informations importantes sur votre système ou requièrent des privilèges de super-utilisateur. Pour cette raison, certains des programmes ne peuvent être exécutés (ou fonctionner correctement) que s'ils sont lancés par un utilisateur disposant des privilèges du super-utilisateur. .}}

=== Trouver de la documentation ===

Toute la documentation dont un outil dispose (autre que les pages de manuel) se trouve dans {{Path|/usr/share/doc/gentoolkit-[version]/[nom_de_l_outil]/}}.

== equery ==


=== Introduction ===

<code>equery</code> est un outil qui affiche des informations utiles à propos des paquets sur votre système. <code>equery</code> est basé sur un système de modules. Chaque module possède un nom abrégé. Par exemple, <code>equery l gcc</code> équivaut à code>equery list gcc</code>. <code>equery --help</code> explique les options globales et liste tous les modules disponibles et leur nom abrégé.  <code>equery --help nom_module</code> affiche un écran d'aide pour le module ''nom_module''. Pour finir, <code>man equery</code> procure une explication détaillée sur tous les modules et options disponibles, ainsi que des exemples. 

Ci-dessous se trouve une lise des fonctionnalités qui fonctionnent sur la majorité des modules. 

{{Cmd|equery --quiet list gcc|output=<pre>
sys-devel/gcc-4.3.2-r3
</pre>}}

{{Cmd|equery --quiet list sys-devel/gcc|output=<pre>
sys-devel/gcc-4.3.2-r3
</pre>}}

{{Cmd|equery --quiet list '>{{=}}sys-devel/gcc-4'|output=<pre>
sys-devel/gcc-4.3.2-r3
</pre>}}

Tout comme ''emerge'', ''equery'' ne comprend pas les noms partiels de paquet :

{{Cmd|equery check zilla|output=<pre>
!!! No package found matching zilla
</pre>}}

À l'inverse d'''emerge'', ''equery'' peut accepter des passe-partout similaires à ceux du shell dans les noms de catégorie et/ou de paquet :

{{Cmd|equery check '*zilla*'|output=<pre>
 * Checking www-client/mozilla-firefox-3.0.14 ...
    90 out of 90 files passed
</pre>}}

{{Cmd|equery check www-c*/*|output=<pre>
 * Checking www-client/links-2.2 ...
   30 out of 30 files passed
 * Checking www-client/mozilla-firefox-3.0.14 ...
   90 out of 90 files passed
</pre>}}

La plupart des modules d'''equery'' accepte des entrées multiples :

{{Cmd|equery hasuse sse sse2|output=<pre>
 * Searching for USE flag sse ...
[IP-] [  ] media-libs/flac-1.2.1-r3 (0)
[IP-] [  ] media-libs/speex-1.2_beta3_p2 (0)
  
 * Searching for USE flag sse2 ...
[IP-] [  ] dev-libs/openssl-0.9.8k (0)
[IP-] [  ] x11-libs/pixman-0.16.0 (0)
</pre>}}

Quelques modules acceptent également les expressions régulières :

{{Cmd|equery -q list --portage-tree --full-regex '[kr]?flickr.*'|output=<pre>
dev-dotnet/flickrnet-bin-2.2
dev-ruby/flickr-1.0.2-r1
dev-ruby/flickr-1.0.2-r2
dev-ruby/rflickr-20060201
media-gfx/kflickr-0.6
[...]
</pre>}}

{{Note|La prise en charge des passe-partout a remplacé un certain nombre d'anciennes options dans  <code>equery</code>. Par exemple, pour agir sur tous les paquets d'un jeu , utilisez <code>'*'</code>. Pour agir sur tous les paquets d'une catégorie, utilisez   <code>'nom_de_catégorie/*'</code>.}}

{{Warning/fr| N'oubliez pas de mettre les entrées entre apostrophes (''quotes'') lorsque vous utilisez des caractères spéciaux du shell comme les astérisques ou les signes ''inférieur à ''et ''supérieur à''.}}

Les quelques sections qui suivent introduisent rapidement les différents modules de  <code>equery</code>.

=== Trouver de quel paquet provient un fichier avec le module belongs (b) ===

{{Cmd|equery belongs -e /usr/bin/glxgears|output=<pre>
 * Searching for /usr/bin/glxgears ...
 x11-apps/mesa-progs-7.5.1 (/usr/bin/glxgears)
</pre>}}

En utilisant l'option -f vous pouvez chercher les paquets installant des fichiers correspondant à une expression régulière. L'option -e est utile pour terminer la recherche immédiatement après avoir trouvé une correspondance. Comme il n'existe pas de fichier qui puisse avoir été installé par deux paquets, c'est là une optimisation sûre. 

=== Retouver les entrées de journalisation concernant des changements avec le module changes (c) ===

changes vous permet de voir les entrées de journalisation correspondant à un changement de version (ou plage de versions) d'un paquet. Imaginez qu'après une commande ''emerge --sync'', vous vous rendiez compte que Portage va être mis à jour et que vous vouliez savoir ce qui a changé :

{{Cmd|equery changes portage|output=<pre>
*portage-2.1.6.13 (03 May 2009)
  
  03 May 2009; Zac Medico <zmedico@gentoo.org> +portage-2.1.6.13.ebuild:
  2.1.6.13 bump. This fixes bug #268398 (document econf automatic die)
  and bug #267104 (handle insufficient space interaction with userfetch).
  Bug #268228 tracks all bugs fixed since 2.1.6.11.
</pre>
}}

=== Vérifier l'intégrité d'un paquet avec le module check (k) ===

Il est parfois utile de vérifier l'intégrité d'un paquet. ''equery'' peut vérifier la somme md5 ainsi que la marque horaire d'un paquet pour indiquer s'il a été corrompu, remplacé ou enlevé. 

{{Cmd|equery check gentoolkit|output=<pre>
 * Checking app-portage/gentoolkit-0.3.0_rc7 ...
   71 out of 71 files passed
</pre>
}}

=== Lister tous les paquets dépendant d'un autre avec le module depends (d) ===

Vous vous demandez peut-être si un paquet donné est installé sur votre système ? ''equery'' est capable de vous donner les noms des paquets qui le listent en tant que dépendance directe. Il faut faire appel pour cela au module ''depends'' :

{{Cmd|equery depends pygtk|output=<pre>
 * Searching for pygtk ...
app-admin/pessulus-2.24.0 (>=dev-python/pygtk-2.6.0)
app-editors/gedit-2.24.3 (python ? >=dev-python/pygtk-2.12)
dev-libs/libgweather-2.24.3 (python ? >=dev-python/pygtk-2)
dev-python/gnome-python-base-2.22.3 (>=dev-python/pygtk-2.10.3)
dev-python/gnome-python-desktop-base-2.24.1 (>=dev-python/pygtk-2.10.3)
[...]
</pre>
}}

=== Obtenir le graphe de dépendances avec le module ''depgraph'' (g) ===

<code>depgraph</code> est le réciproque de <code>depends</code>. Vous lui donnez un paquet en paramètre, et il est capable de trouver les paquets dont il dépend et non pas ceux qui dépendent de lui ! Lorsqu'une dépendance est trouvée, il va rechercher, de manière récursive, tous les paquets dont ce dernier dépend. Il est possible de contrôler la profondeur de l'arbre avec l'option --<code>--depth</code> . 

{{Cmd|equery depgraph mozilla-firefox|output=<pre>
 * Searching for mozilla-firefox ...
 * dependency graph for www-client/mozilla-firefox-2.0.0.19:
`-- www-client/mozilla-firefox-2.0.0.19
 `-- virtual/jre-1.6.0 (virtual/jre) [java]
  `-- virtual/jdk-1.6.0 (virtual/jdk-1.6.0*)
  `-- dev-java/icedtea6-bin (unable to resolve: package masked or removed)
   `-- dev-java/sun-jdk-1.6.0.15
    `-- dev-java/java-sdk-docs-1.6.0.10 [doc]
     `-- app-arch/unzip-6.0-r1
      `-- app-arch/bzip2-1.0.5-r1 [bzip2]
    `-- sys-libs/glibc-2.9_p20081201-r2
     `-- sys-devel/gettext-0.17 [nls]
      `-- virtual/libiconv-0 (virtual/libiconv)
[...]
</pre>
}}

Notez bien ici que <code>jre</code> est une dépendance directe et que <code>jdk</code> est une dépendance indirecte si l'option <code>java</code> de la variable USE est validée. 

=== Lister les fichiers appartenant à un paquet avec le module files (f) ===

<code>equery</code>peut lister les fichiers installés par un ebuild grâce au module <code>files</code> module. Utilisez l'option <code>--tree</code> pour obtenir une présentation de l'agencement des répertoires facile à lire. Utilisez l'option <code>--filter</code>pour vous limiter à un certain type de fichiers. Par exemple, pour savoir où ont été installés les exécutables, utilisez <code>--filter=cmd</code> ,et pour trouver rapidement l'emplacement des fichiers de configuration, essayez<code>--filter=conf</code> . 

{{Cmd|equery files --tree gentoolkit|output=<pre>
 * Searching for gentoolkit ...
 * Contents of app-portage/gentoolkit-0.3.0_rc7:
 /etc
   > /eclean
      + distfiles.exclude
      + packages.exclude
   > /env.d
      + 99gentoolkit-env
   > /revdep-rebuild
      + 99revdep-rebuild
 /usr
   > /bin
      + eclean
      + eclean-dist -> eclean
      + eclean-pkg -> eclean
      + epkginfo
      + equery
      + eread
      + euse
      + glsa-check
      + revdep-rebuild
   > /lib
      > /python2.6
         > /site-packages
            > /gentoolkit
            + gentoolkit-0.3.0_rc7-py2.6.egg-info
               + __init__.py
               > /equery
                  + __init__.py
                  + belongs.py
                  + changes.py
                  + check.py
                  + depends.py
                  + depgraph.py
                  + files.py
[...]
</pre>
}}

=== Chercher les paquets qui utilisent une option spécifique de USE avec le module hasuse (h) ===

Si vous souhaitez trouver quels paquets sur votre système peuvent utiliser une option USE bien précise, <code>equery</code>  dispose de la fonction <code>hasuse</code>. Ce module ne vous dira pas si l'option est activée, mais seulement si l'option peut être définie. Reportez-vous à la page de manuel de <code>equery</code>  pour plus de détail sur la manière d'obtenir cette information.

{{Cmd|equery hasuse qt3 qt4|output=<pre>
 * Searching for USE flag qt3 ...
[IP-] [  ] app-crypt/pinentry-0.7.5 (0)
[IP-] [  ] net-dns/avahi-0.6.24-r2 (0)
[IP-] [  ] net-wireless/wpa_supplicant-0.6.9 (0)
  
 * Searching for USE flag qt4 ...
[IP-] [  ] net-dns/avahi-0.6.24-r2 (0)
[IP-] [  ] net-wireless/wpa_supplicant-0.6.9 (0)
</pre>
}}

=== Lister les paquets avec le module list (l) ===

''equery'' dispose d'un outil puissant permettant de lister les paquets installés sur votre système, dans l'arbre de Portage ou même dans un « arbre alternatif ».

{{Cmd|equery list '*'|output=<pre>
 * Searching for * ...
[IP-] [  ] app-admin/eselect-1.2.3 (0)
[IP-] [  ] app-admin/eselect-ctags-1.10 (0)
[IP-] [  ] app-admin/eselect-esd-20060719 (0)
[IP-] [  ] app-admin/eselect-fontconfig-1.0 (0)
[IP-] [  ] app-admin/eselect-opengl-1.0.8-r1 (0)
[IP-] [  ] app-admin/eselect-python-20090824 (0)
[IP-] [  ] app-admin/eselect-ruby-20081227 (0)
[IP-] [  ] app-admin/eselect-vi-1.1.5 (0)
[IP-] [  ] app-admin/perl-cleaner-1.05 (0)
[IP-] [  ] app-admin/pessulus-2.24.0 (0)
[IP-] [  ] app-admin/python-updater-0.7 (0)
[IP-] [  ] app-admin/sudo-1.7.2_p1 (0)
[...]
</pre>
}}

La recherche standard cherchera parmi les paquets installés un nom donné. En donnant '*' tous les paquets du jeu seront listés. Dans le champ le plus à gauche, nous voyons que les paquets sont Installés et qu'ils proviennent de l'arbre de Portage. Ils ne sont pas masqués (le second champ est vide), ils sont tous installés dans le slot par défaut (0). 

Dans cet exemple, nous allons utiliser des options locales pour chercher des paquets de notre arbre de Portage et dans les arbres alternatifs (overlays). 

{{Cmd|equery list -po vim|output=<pre>
 * Searching for vim ...
[-P-] [  ] app-editors/vim-7.0.235 (0)
[-P-] [ ~] app-editors/vim-7.0.243 (0)
[-P-] [  ] app-editors/vim-7.1.123 (0)
[-P-] [ ~] app-editors/vim-7.1.330 (0)
[-P-] [  ] app-editors/vim-7.2 (0)
[-P-] [ ~] app-editors/vim-7.2.108 (0)
[IP-] [  ] app-editors/vim-7.2.182 (0)
[-P-] [ ~] app-editors/vim-7.2.238 (0)
[-P-] [ ~] app-editors/vim-7.2.264 (0)
</pre>
}}

Dans cet exemple, vous pouvez voir que la version 7.2.182 est installée et qu'aucune version n'est disponible depuis un arbre alternatif. Vous pouvez aussi voir quelles versions sont masquées par un mot clé sous la forme d'un <code>~</code> dans le deuxième champ. 

=== Voir les Méta-données d'un paquet avec le module meta (m) ===

Tout paquet de l'arbre Portage fournit au moins quelques méta-données sur qui est chargé de sa maintenance, le herd auquel il appartient, etc. Reportez-vous, pour plus de détails, à [http://devmanual.gentoo.org/ebuild-writing/misc-files/metadata/index.html Gentoo Metadata]. La quantité d'informations utiles dépend du bon vouloir de ses mainteneurs. Sans option, <code>meta</code> retourne quelques informations de base. 

{{Cmd|equery meta gnucash|output=<pre>
 * app-office/gnucash [gentoo]
 Herd:        gnome-office (gnome-office@gentoo.org)
 Maintainer:  tove@gentoo.org (Torsten Veller)
 Upstream:    None specified
 Location:    /usr/portage/app-office/gnucash
 Keywords:    2.2.9-r1:0: alpha amd64 ppc sparc x86
 Keywords:    2.2.9-r2:0:
 Keywords:    2.3.8:0:
 Keywords:    2.3.10:0: ~alpha ~amd64 ~ppc ~sparc ~x86
</pre>
}}

When the maintainer provides extra information, it can be very useful: 

{{Cmd|equery meta --description emacs|output=<pre>
 * app-editors/emacs
  GNU Emacs is an extensible, customizable text editor - and more. At its core
  is an interpreter for Emacs Lisp, a dialect of the Lisp programming language
  with extensions to support text editing. The features of GNU Emacs include:
   * Content-sensitive editing modes, including syntax coloring, for a wide
     variety of file types including plain text, source code, and HTML.
   * Complete built-in documentation, including a tutorial for new users.
   * Support for many languages and their scripts, including all the European
     "Latin" scripts, Russian, Greek, Japanese, Chinese, Korean, Thai,
     Vietnamese, Lao, Ethiopian, and some Indian scripts.
   * Highly customizable, using Emacs Lisp code or a graphical customization
     interface.
   * A large number of extensions that add other functionality, including a
     project planner, mail and news reader, debugger interface, calendar, and
     more. Many of these extensions are distributed with GNU Emacs; others are
     available separately.
</pre>
}}

=== Finding Package Sizes with size (s) ===

Have you ever been curious to find out how much space a specific package is occupying? Since a package could have its files over a number of directories, the usual <code>du -hc</code> might not give you the correct figure. Not to worry, here comes <code>equery</code> to the rescue!

{{Cmd|equery size openoffice-bin|output=<pre>
 * app-office/openoffice-bin-3.1.1
         Total files : 4624
         Total size  : 361.38 MiB
</pre>
}}

As you can see, <code>size</code> prints the total space used in human-readable units and lists the total number of files the package has. To get the total size in bytes, use <code>--bytes</code> . 

=== Listing Per-Package USE Flags with uses (u) ===

<code>equery</code>'s <code>uses</code> module can provide information about what USE flags are available for a specific package, and which of those flags is currently enabled. 

{{Cmd|equery uses gst-plugins-meta|output=<pre>
 * Searching for gst-plugins-meta ...
[ Legend : U - flag is set in make.conf       ]
[        : I - package is installed with flag ]
[ Colors : set, unset                         ]
 * Found these USE flags for media-plugins/gst-plugins-meta-0.10-r2:
 U I
 + + X      : Adds support for X11
 - - a52    : Enables support for decoding ATSC A/52 streams used in DVD
 + + alsa   : Adds support for media-libs/alsa-lib (Advanced Linux Sound
              Architecture)
 - - dvb    : Adds support for DVB (Digital Video Broadcasting)
 + + dvd    : Adds support for DVDs
 + + esd    : Adds support for media-sound/esound (Enlightened Sound Daemon)
 + + ffmpeg : Enable ffmpeg-based audio/video codec support
 + + flac   : Adds support for FLAC: Free Lossless Audio Codec
 - - mad    : Adds support for mad (high-quality mp3 decoder library and cli
              frontend)
 + + mpeg   : Adds libmpeg3 support to various packages
 - - mythtv : Support for retrieval from media-tv/mythtv backend
 + + ogg    : Adds support for the Ogg container format (commonly used by
              Vorbis, Theora and flac)
 - - oss    : Adds support for OSS (Open Sound System)
 + + theora : Adds support for the Theora Video Compression Codec
 + + vorbis : Adds support for the OggVorbis audio codec
 - - xv     : Adds in optional support for the Xvideo extension (an X API for
              video playback)
</pre>
}}

Here, a number of USE flags are enabled in <code>gstreamer</code>'s plugin meta-package, but you can see that there are other USE flags available. For more information on USE flags, please refer to the [http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=2&chap=2 USE Flags] chapter of the [http://www.gentoo.org/doc/en/handbook/ Gentoo Handbook]. 

=== Finding the Ebuild Path with which (w) ===

<code>which</code> is a simple script to help you quickly find the file path to an ebuild. If you pass an unversioned package name, <code>which</code> will return the path to the newest installable ebuild version, in other words, the ebuild Portage would use if you typed<code>emerge package</code>. Pass in a versioned package to get the path to that ebuild. 

{{Cmd|equery which gnome|output=<pre>
/usr/portage/gnome-base/gnome/gnome-2.26.3.ebuild
</pre>
}}

Lastly, if none of the above features of <code>equery</code> have answered your question, try using <code>which</code> to manually search an ebuild with programs like <code>cat</code>, <code>less</code> or <code>grep</code>: 

{{Cmd|grep HOMEPAGE $(equery which gentoolkit)|output=<pre>
HOMEPAGE="http://www.gentoo.org/proj/en/portage/tools/index.xml"
</pre>
}}


{{Warning|Be aware that <code>equery</code> currently changes the format of the output if it is sent through a pipe. The piped format is intended to be easier to parse by tools, but you can also turn it off by adding the <code>--no-pipe</code> option. If you write scripts that employ <code>equery</code>, you should be aware of this.}}

== euse ==

=== Introduction ===

<code>euse</code> is a tool to see, set and unset USE flags at various places. For more information on USE flags, please refer to the [http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=2&chap=2 USE Flags]. Please see<code>euse -h</code> for complete help and all options. 

=== Viewing, Setting and Unsetting USE Flags ===

The <code>euse -a</code> command reads the current active USE flags and displays them. 

{{Note|There are 5 "columns" that <code>euse</code> now uses to show whether a flag is set/unset and where all the flag has been set. The columns are as follows -- +/-, set in the Environment, set in make.Conf, set in make.Defaults, and set in make.Globals. The output looks like [+ECDG].}}

{{RootCmd|euse -a|output=<pre>
X                   [+ CD ]
aalib               [+    ]
acpi                [+ C  ]
alsa                [+ C  ]
apache2             [+ C  ]
apm                 [+  D ]
avi                 [+  D ]
berkdb              [+  D ]
bitmap-fonts        [+  D ]
bonobo              [+    ]
cdr                 [+ C  ]
crypt               [+ CD ]
cscope              [+ C  ]
cups                [+ CD ]
curl                [+    ]
emboss              [+  D ]
encode              [+  D ]
esd                 [+    ]
fam                 [+    ]
fbcon               [+ C  ]
firefox             [+ C  ]
font-server         [+  D ]
foomaticdb          [+  D ]
fortran             [+  D ]
gd                  [+ C  ]
gdbm                [+  D ]
gif                 [+ CD ]
gimpprint           [+ C  ]
gnome               [+ CD ]
gphoto2             [+    ]
gpm                 [+ CD ]
gstreamer           [+ C  ]
gtk                 [+  D ]
gtkhtml             [+ C  ]
guile               [+    ]
imagemagick         [+    ]
imlib               [+ CD ]
innodb              [+    ]
ipv6                [+  D ]
javascript          [+ C  ]
jpeg                [+ CD ]
kde                 [+  D ]
ldap                [+    ]
libg++              [+ CD ]
libwww              [+ CD ]
mad                 [+ CD ]
mbox                [+ C  ]
md5sum              [+ C  ]
mikmod              [+ CD ]
mmx                 [+ C  ]
motif               [+ CD ]
mp3                 [+    ]
mpeg                [+ CD ]
mpeg4               [+ C  ]
mysql               [+ C  ]
ncurses             [+ CD ]
nls                 [+  D ]
nvidia              [+ C  ]
odbc                [+    ]
offensive           [+    ]
ogg                 [+ CD ]
opengl              [+ CD ]
oss                 [+  D ]
pam                 [+ CD ]
pdflib              [+ CD ]
perl                [+ CD ]
png                 [+ CD ]
python              [+ CD ]
qt                  [+  D ]
quicktime           [+ CD ]
readline            [+ CD ]
ruby                [+    ]
sdl                 [+ CD ]
slang               [+  D ]
spell               [+ CD ]
sse                 [+ C  ]
ssl                 [+ CD ]
svga                [+ CD ]
tcltk               [+ C  ]
tcpd                [+  D ]
tiff                [+ C  ]
truetype            [+ CD ]
usb                 [+ C  ]
vanilla             [+ C  ]
x86                 [+ C  ]
xml                 [+    ]
xosd                [+ C  ]
xv                  [+ CD ]
xvid                [+ C  ]
zlib                [+ CD ]
</pre>
}}

Similarly you can use the <code>euse -a -g</code> command to only view active global USE flags. The <code>euse -a -l</code> command does the same for active local USE flags. <code>-g</code> and <code>-l</code> are suboptions to <code>euse</code> and need an option before them (like <code>-a</code>) to function correctly. 

{{RootCmd|euse -a -l|output=<pre>
bitmap-fonts        [+  D ]
font-server         [+  D ]
fortran             [+  D ]
gimpprint           [+ C  ]
md5sum              [+ C  ]
mpeg4               [+ C  ]
nvidia              [+ C  ]
offensive           [+    ]
truetype            [+ CD ]
</pre>
}}

We can also use <code>euse</code> to set or unset use flags. The commands used for this are <code>euse -E flagname</code> (enable a flag) and <code>euse -D flagname</code> (disable a flag). 

{{Warning|Do not use the <code>euse -E</code> or <code>euse -D</code> commands by themselves (without a flag). It will set/unset ALL USE flags in {{Path|/etc/portage/make.conf}}. Although a backup is kept at {{Path|/etc/portage/make.conf.euse_backup}}, please be careful while using <code>euse -E</code> or <code>euse -D</code> .}}

Enabling a USE Flag:

{{RootCmd|euse -E 3dfx|output=<pre>
/etc/portage/make.conf was modified, a backup copy has been placed at /etc/portage/make.conf.euse_backup
</pre>}}

The {{Path|/etc/portage/make.conf}} file looks like so after the command was ran:

{{File|make.conf|After enabling the 3dfx USE flag|<pre>
USE="alsa acpi apache2 -arts cups cdr crypt cscope -doc fbcon \
     firefox gd gif gimpprint gnome gpm gstreamer gtkhtml imlib \
     innodb -java javascript jpeg libg++ libwww mad mbox md5sum \
     mikmod mmx motif mpeg mpeg4 mysql ncurses nvidia \
     ogg odbc offensive opengl pam pdflib perl png python \
     quicktime readline sdl spell sse ssl svga tcltk tiff truetype usb \
     vanilla X xosd xv xvid x86 zlib 3dfx"
</pre>}}

Disabling the USE Flag:

{{RootCmd|euse -D 3dfx|output=<pre>
/etc/portage/make.conf was modified, a backup copy has been placed at /etc/portage/make.conf.euse_backup
</pre>}}

Again, the {{Path|/etc/portage/make.conf}} file after the command:

{{File|make.conf|After disabling the 3dfx USE flag|<pre>
USE="alsa acpi apache2 -arts cups cdr crypt cscope -doc fbcon \
     firefox gd gif gimpprint gnome gpm gstreamer gtkhtml imlib \
     innodb -java javascript jpeg libg++ libwww mad mbox md5sum \
     mikmod mmx motif mpeg mpeg4 mysql ncurses nvidia \
     ogg odbc offensive opengl pam pdflib perl png python \
     quicktime readline sdl spell sse ssl svga tcltk tiff truetype usb \
     vanilla X xosd xv xvid x86 zlib -3dfx"
</pre>
}}

{{Note|<code>euse</code> does not physically remove the flag from make.conf. It just adds a - (minus) before the flag to unset it. You may have to manually clean up your make.conf to avoid unwanted variables.}}

== Other tools ==

=== revdep-rebuild ===

This tool is Gentoo's Reverse Dependency rebuilder. It will scan your installed ebuilds to find packages that have become broken as a result of an upgrade of a package they depend on. It can emerge those packages for you but it can also happen that a given package does not work any more with the currently installed dependencies, in which case you should upgrade the broken package to a more recent version. revdep-rebuild will pass flags to emerge which lets you use the <code>--pretend</code> flag to see what is going to be emerged again before you go any further. 

{{RootCmd|revdep-rebuild -p|output=<pre>
 * Configuring search environment for revdep-rebuild
  
 * Checking reverse dependencies
 * Packages containing binaries and libraries broken by a package update
 * will be emerged.
  
 * Collecting system binaries and libraries
 * Generated new 1_files.rr
 * Collecting complete LD_LIBRARY_PATH
 * Generated new 2_ldpath.rr
 * Checking dynamic linking consistency
[ 48% ]  *   broken /usr/lib/gstreamer-0.10/libgsttaglib.la (requires /usr/lib/libtag.la)
[ 64% ]  *   broken /usr/lib/libgdkglext-x11-1.0.la (requires /usr/lib/libGLU.la)
[ 67% ]  *   broken /usr/lib/libgtkglext-x11-1.0.la (requires /usr/lib/libGLU.la)
[ 85% ]  *   broken /usr/lib/python2.6/site-packages/gtk-2.0/gtk/gdkgl/_gdkgl.la (requires /usr/lib/libGLU.la)
 *   broken /usr/lib/python2.6/site-packages/gtk-2.0/gtk/gtkgl/_gtkgl.la (requires /usr/lib/libGLU.la)
[ 97% ]  *   broken /usr/qt/3/lib/libqt-mt.la (requires -lpng)
[ 100% ]
 * Generated new 3_broken.rr
 * Assigning files to packages
 *   /usr/lib/gstreamer-0.10/libgsttaglib.la -> media-plugins/gst-plugins-taglib
 *   /usr/lib/libgdkglext-x11-1.0.la -> x11-libs/gtkglext
 *   /usr/lib/libgtkglext-x11-1.0.la -> x11-libs/gtkglext
 *   /usr/lib/python2.6/site-packages/gtk-2.0/gtk/gdkgl/_gdkgl.la -> dev-python/pygtkglext
 *   /usr/lib/python2.6/site-packages/gtk-2.0/gtk/gtkgl/_gtkgl.la -> dev-python/pygtkglext
 *   /usr/qt/3/lib/libqt-mt.la -> x11-libs/qt
 * Generated new 4_raw.rr and 4_owners.rr
 * Cleaning list of packages to rebuild
 * Generated new 4_pkgs.rr
 * Assigning packages to ebuilds
 * Generated new 4_ebuilds.rr
 * Evaluating package order
 * Generated new 5_order.rr
 * All prepared. Starting rebuild
emerge --oneshot --pretend  dev-python/pygtkglext:0
media-plugins/gst-plugins-taglib:0.10
x11-libs/gtkglext:0
x11-libs/qt:3
  
These are the packages that would be merged, in order:
  
Calculating dependencies... done!
[ebuild   R   ] media-plugins/gst-plugins-taglib-0.10.17
[ebuild   R   ] x11-libs/gtkglext-1.2.0
[ebuild   R   ] x11-libs/qt-3.3.8b-r2
[ebuild   R   ] dev-python/pygtkglext-1.1.0
 * Now you can remove -p (or --pretend) from arguments and re-run revdep-rebuild.
</pre>
}}

If you need to rebuild some packages, you may run <code>revdep-rebuild</code> without the <code>-p</code> flag and the listed packages will be emerged again. 

=== glsa-check ===

<code>glsa-check</code> is mainly a test tool that keeps track of the various GLSA's (Gentoo Linux Security Advisory) and will eventually be integrated into<code>emerge</code> and<code>equery</code>. 

=== eread ===

<code>eread</code> is a simple utility to display elog files produced by >=<code>portage-2.1</code>. You can set the saving of elog files by setting a couple of variables in {{Path|/etc/portage/make.conf}}: 

{{File|make.conf|Enabling elog|<pre>
PORTAGE_ELOG_CLASSES="log"
PORTAGE_ELOG_SYSTEM="save"
</pre>
}}

{{Note|This is just one way of saving elog messages. For more information on how Portage's elog system works, please refer to the appropriate page in the [http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part{{=}}3&chap{{=}}1#doc_chap4 Portage Handbook].}}

Once you've set up elog to your satisfaction, just run <code>eread</code> to view your log files. 

{{Cmd|eread|output=<pre>
This is a list of portage log items. Choose a number to view that file or type
q to quit.
  
1) app-portage:gentoolkit-0.2.4_pre2:20070320-000256.log
2) app-portage:gentoolkit-0.2.4_pre2:20070320-000258.log
3) app-portage:gentoolkit-0.2.4_pre2:20070320-000319.log
4) app-portage:gentoolkit-0.2.3:20070320-000408.log
Choice?
</pre>
}}

Select a number and the file will be displayed using the paging program specified in the PAGER environment variable. If PAGER is not set, it will use <code>less</code>.

After displaying the elog item, you will be prompted if you want to delete the file.

=== eclean ===

<code>eclean</code> is a tool to remove old source files and old binary packages from your system. 

When you build and install packages, the source files are downloaded and preserved in DISTDIR, usually {{Path|/usr/portage/distfiles}}. This can accumulate several gigs of material over time if you don't clean it periodically. You can run <code>eclean-dist</code> to clean only source files from DISTDIR. 

You can create archives of installed packages by using <code>quickpg</code> or FEATURES="buildpkg". These archived packages are kept in PKGDIR, usually {{Path|/usr/portage/packages}}. When you no longer need to keep them around, or if they're too old, you can run <code>eclean-pkg</code> to remove them from PKGDIR. It's a good way to ensure that any binary packages you have are only the latest versions. 

For more information on <code>eclean</code> and tips on maintaining a cruft-free system, please read <code>man eclean</code> . 

== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:


* Matt Butcher
* John P. Davis
* Erwin
* Shyam Mani
* Xavier Neys
* Karl Trygve
* José Luis Rivero
* Joshua Saddler
* Douglas Anderson
