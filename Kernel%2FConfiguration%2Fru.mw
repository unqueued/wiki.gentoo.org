<languages />

{{Metadata|abstract=Эта статья описывает ручную конфигурацию и настройку ядра Linux. Автоматический метод описан в статье genkernel.}}

Эта статья описывает ручную конфигурацию и настройку [[Kernel/ru|ядра Linux]]. Автоматический метод описан в статье [[genkernel]].

==Установка символьной ссылки==

Символьная ссылка {{Path|/usr/src/linux}} всегда должна указывать на исходные коды используемого в настоящий момент ядра. Это может быть сделано одним из трех способов:

1. Установите исходный код ядра с включенным <code>symlink</code> [[USE flag|USE-флагом]]. Это заставит {{Path|/usr/src/linux}} указывать на исходный код свежеустановленного ядра. Если необходимо, символьная ссылка может быть изменена позже двумя следующими методами:

2. Настройка символьной ссылки с помощью {{c|eselect}} утилиты:

{{RootCmd|eselect kernel list|output=<pre>
Available kernel symlink targets:
[1] linux-3.3.8-gentoo
[2] linux-3.4.9-gentoo
</pre>}}

Эта команда выводит доступные исходные коды ядра. Звездочкой отмечены выбранные исходные коды. Для того чтобы изменить исходные коды ядра, например выбрать второй пункт, сделайте следующее:

{{RootCmd|eselect kernel set 2}}

3. Установка символьной ссылки вручную:

{{RootCmd|ln -sf /usr/src/linux-3.4.9-gentoo /usr/src/linux |
|ls -l /usr/src/linux |
|output=lrwxrwxrwx 1 root root 11 Aug 29 22:10 /usr/src/linux -> /usr/src/linux-3.4.9-gentoo
}}

<!-- The output is the same as the target file in the ln command. -->

==Инструменты конфигурации==

Ядро предлагает несколько инструментов для собственной конфигурации.

{| class="table"
|-
! Команда
! Описание
|-
| {{c|make config}}
| Конфигуратор с текстовым интерфейсом. Вопросы следуют один за другим. На все вопросы должен быть дан ответ по порядку. Доступ к предыдущим вопросам невозможен.
|-
| {{c|make menuconfig}}
| Конфигуратор основанный на ncurses с псевдографическим интерфейсом (возможен только ввод текста).  Для изменения параметров есть навигация с помощью меню.
|-
| {{c|make defconfig}}
| Создает новый конфигурационный файл с настройками по умолчанию, которые берутся из архитектурно-зависимых defconfig файлов. Используйте эту опцию, чтобы снова создать конфигурационный файл с настройками по умолчанию, так же как в архиве с исходным кодом.
|-
| {{c|make nconfig}}
| Еще один конфигуратор с псевдографическим меню основанный на ncurses. Требуется, чтобы библиотека {{Package|sys-libs/ncurses}} была установлена.
|-
| {{c|make xconfig}}
| Конфигуратор с графическим интерфейсом основанный на Qt4. Должен быть установлен {{Package|dev-qt/qtgui}} пакет.
|-
| {{c|make gconfig}}
| Конфигуратор с графическим интерфейсом основанный на GTK+. Должны быть установлены пакеты {{Package|x11-libs/gtk+}}, {{Package|dev-libs/glib}} и {{Package|gnome-base/libglade}}.
|-
| {{c|make oldconfig}}
| Обзор изменений между версиями ядра, а так же обновление их для создания нового {{Path|.config}} для ядра.
|-
| {{c|make allyesconfig}}
| Включает все возможные опции ядра. Эта утилита устанавливает ''все'' опции ядра в <code>*</code>. Убедитесь, что сохранена резервная копия конфигурации ядра, прежде чем будете экспериментировать с этой  опцией!!!
|}

Существует несколько сценариев создания смешанных конфигураций по умолчанию. 
Они могут помочь сделать более тонкую и в то же время более эффективную настройку. Выполните следующую команду для получения полного списка сценариев make targets:

{{RootCmd|make help}}

== Конфигурация ==

Эта статья описывает конфигурацию с использованием утилиты {{c|make menuconfig}}, но процедура аналогична и для других конфигураторов.

{{RootCmd|cd /usr/src/linux
|make menuconfig}}

=== Использование меню ===

В показываемом меню позиция курсора отмечена синей строкой. С помощью клавиш {{Key|↑}} и {{Key|↓}} можно изменять позицию курсора. Клавиши {{Key|←}} и {{Key|→}} проходят по меню внизу и определяют, что произойдет при нажатии клавиши {{Key|Enter}}. В меню внизу '''Select''' выбирает подменю — пункты меню оканчивающиеся с '''--->''', в то время как '''Exit''' выходит из подменю. В качестве альтернативы, можно выйти из подменю двойным нажатием клавиши {{Key|Esc}}.

Нажатие клавиш {{Key|A}}-{{Key|Z}} переместит курсор к пункту меню у которого эта буква выделена жирным шрифтом. Буквы {{Key|Y}}, {{Key|M}}, {{Key|N}} не используются для такой навигации; они нужны для других целей. Если пункт меню начинается с букв Y, M, или N, обычно используется следующая буква для выделения. Например для такого пункта меню "N'''e'''twork Device Support --->" нужно нажать клавишу {{Key|E}}.

Могут быть следующие символы перед пунктом меню:

{| class="table"
|-
! Символ(ы)
! Описание
|-
| <code>[ ], [*]</code>
| Пункт меню с квадратными скобками может быть включен или выключен. Звездочка отмечает пункт меню как включенный. Это значение также может быть изменено с помощью клавиши {{Key|space}}. Кроме того, можно нажать клавишу {{Key|Y}} ('''Y'''es) для включения или клавишу {{Key|N}} ('''N'''o) для отключения выбранного пункта.
<br />
Если пункт включен, то эта функция/драйвер будет собрана в ядро и всегда будет доступна во время загрузки.
|-
| <code>< >, <M>, <*></code>
| Пункт меню с квадратными скобками может быть включен или выключен, но так же включен как модуль (обозначается как ''M''). Значение, как и ранее, может быть изменено нажатием клавиш {{Key|Y}}/{{Key|N}} или нажатием клавиши {{Key|M}}, для включения функции/драйвера как модуля.
<br />
Смотрите статью [[Kernel Modules]] с более подробным описанием.
|-
| <code>{M}, {*}</code>
| Пункт меню с фигурными скобками может быть включен или включен как модуль, но не может быть выключен. Это происходит потому, что другая функция/драйвер зависит от этой функции.
|-
| <code>-M-, -*-</code>
| Пункт меню с дефисами включен по зависимости от другой функции/драйвера. Здесь нельзя изменить выбор.
|}

Кроме того, некоторые пункты меню имеют метки в конце:

{| class="table"
|-
! Метка
! Описание
|-
| <code>(NEW)</code>
| Этот драйвер является новым в ядре и, может быть, не достаточно стабилен.
|-
| <code>(EXPERIMENTAL)</code>
| Этот драйвер является экспериментальным и, скорее всего, он достаточно не стабилен.
|-
| <code>(DEPRECATED)</code>
| Этот драйвер является устаревшим и не требуется для большинства систем.
|-
| <code>(OBSOLETE)</code>
| Этот драйвер является устаревшим и его не нужно включать.
|}

Большинство параметров имеют описание, которое можно посмотреть нажимая клавишу {{Key|H}} или набрав '''Help''' в строке меню.

=== Выбор драйверов ===

Смотрите статью [[hardware detection]], а также статьи в категории [[:Category:Hardware|Hardware]].

=== Поиск модулей ===

Внутри <code>menuconfig</code> можно использовать {{Key|/}} для поиска модулей по имени.

As shown below, the search result will show numbers in front of the matches. Pressing {{Key|1}} in the example below would make <code>menuconfig</code> jump straight to the option ''Bluetooth device drivers'' in the menu structure.

{{KernelBox|title=Example output after searching for HCIBTUSB|1=
Symbol: BT_HCIBTUSB [{{=}}m]                       
Type  : tristate                               
Prompt: HCI USB driver                         
  Location:                                    
    -> Networking support (NET [{{=}}y])           
      -> Bluetooth subsystem support (BT [{{=}}y]) 
(1)     -> Bluetooth device drivers            
  Defined at drivers/bluetooth/Kconfig:5       
  Depends on: NET [{{=}}y] && BT [{{=}}y] && USB [{{=}}m]
}}

=== Включение общих настроек Gentoo Linux ===

Существует опция конфигурации ядра, называемая <var>CONFIG_GENTOO_LINUX</var>, которая находится только в {{Package|sys-kernel/gentoo-sources}} и других ядрах, поддерживаемых [[Project:Kernel|проектом ядра]]. Она ничего не делает сама по себе, но устанавливает различные необходимые опции конфигурации, которые чаще всего нужны для установок.

Пока данная настройка автоматически выбирает поддержку <code>tmpfs</code> и <code>devtmpfs</code>, которые нужны для работы с {{Path|/dev}} в Gentoo Linux, но в будущем эта настройка может включать и другие обязательные опции для системы на Gentoo Linux. Для более детальной информации, прочитайте информацию, которую можно получить через систему конфигурации ядра (как было описано выше в данной статье).

== Компиляция ==

После успешной конфигурации ядра скомпилируйте его:

{{RootCmd|make}}

For processors with multiple cores, make all the cores do the work. Add the option <code>-j(<NUMBER_OF_CORES> + 1)</code>. For example, a dual core processor contains two logical cores plus one (2 + 1):

{{RootCmd|make -j3}}

A quad core system contains four logical cores plus one (4 + 1):

{{RootCmd|make -j5}}

== Установка ==

If drivers are activated as modules, they must be installed:

{{RootCmd|make modules_install}}

Модули будут скопированы в подкаталог {{Path|/lib/modules}}.

Для того, чтобы установить само ядро:

{{RootCmd|make install}}

Эта команда запускает скрипт {{Path|/sbin/installkernel}}, который является частью пакета {{Package|sys-apps/debianutils}}. ''Новое ядро устанавливается в {{Path|/boot//vmlinuz-{version}}}. Если символьная ссылка {{Path|/boot/vmlinuz}} уже существует, она обновляется путем создания ссылки из {{Path|/boot/vmlinuz}} на новое ядро, а ядро, установленное ранее, доступно как {{Path|/boot/vmlinuz.old}}.'' (''installkernel'' [[man page]]). То же самое происходит и для файлов {{Path|config}} и {{Path|System.map}}. Эти символьные ссылки удобны, потому что они указывают на новейшее ядро без изменения файлового пути (например, они могут быть использованы в конфигурации загрузчика).

== Загрузчик ==

Измените конфигурацию [[bootloader|загрузчика]] системы для выбора нового ядра при загрузке.

И наконец, перезагрузите систему с новым ядром.

== Comparing current kernel configuration with default configuration ==

Use the following procedure to get an overview over the kernel configurations that deviate from the default. Keep in mind that the modification of configuration setting may entail additional configuration settings.

{{RootCmd
|cd /usr/src/linux
|cp .config ../.config.working
|make defconfig
|mv .config ../.config.default
|cp ../.config.working .config
|cd ..
|/usr/src/linux/scripts/diffconfig .config.working .config.default > .config.diff
}}

The search function in {{c|make menuconfig}} can be used to look up the flags and their interpretation.
When you're done, clean up:

{{RootCmd
|cd /usr/src/
|rm .config.working .config.default .config.diff
}}

== Смотрите также ==
* [[Genkernel/ru|Genkernel]]
* [[Kernel/Configuration/Kernel_Seeds|Kernel Seeds]]

== Ссылки ==

[[Category:Kernel]]
