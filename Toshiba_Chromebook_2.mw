[[Category:Laptops]]
== Summary ==
Everything works as of 13th August, after this [https://johnlewis.ie/baytrail-update/ SeaBIOS update] by John Lewis. Latest ChromeOS fw + John Lewis' SeaBIOS has both working suspend and working VPX (kvm)

== Hardware ==
* Intel Celeron N2840 - Dual Core, fanless
* 4 GB RAM (for model CB30-B-104) or 2 GB RAM (for model CB30-B-103)
* 1080p IPS screen (non-touch)
* Elan Touchpad
* 16 GB eMMC card as storage (embedded in mainboard, cannot be replaced)
* SD Card slot
* Intel 7260 AC-Wifi with Bluetooth
* Chromebook codename from Google: swanky

== Disclaimer/Prerequisites ==
* You have to open the machine, dismantle and cut off a piece of the heat shield to disable flash write protect.<ref name="coreboot">[http://www.coreboot.org/Chromebooks See the two pictures of Swanky mainboard for how to disable flash write protect]</ref>
* You must install [https://johnlewis.ie/custom-chromebook-firmware/rom-download/ John Lewis' SeaBIOS] to the flash, and to begin this you first have to do the aforementioned modification, and then enable developer mode on your Chromebook. You can enter this mode in the same way as on a Acer C7 Chromebook, and the procedure is described [https://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/acer-c7-chromebook#TOC-Entering here].
* You should have a large SD Card (SDXC UHC-1-type cards seems to work) if you want to use it as a normal laptop, as 16 GB storage can be a tad small. The internal storage cannot be upgraded, it's soldered to the mainboard.
* The swanky board code, blobs and config are not upstreamed to coreboot as of 2015/08/21, so it's not an easy task to compile your own firmware for this. So, the best (and maybe only) solution yet is to use John Lewis' SeaBIOS flasher.

== Notes ==
* Sound works, but you'll have to use alsamixer and unmute "Left Speaker Mixer Right DAC" and "Right Speaker Mixer Right DAC" (see [https://johnlewis.ie/procedure-to-get-sound-working-in-fedora-22-on-asus-c300-chromebook/ this blogpost])
* Setting up the kernel config is a bit hard if doing it from scratch. A nice way to make your own kernel config right, is using a Fedora LiveUSB environment and use `make localmodconfig´ or `make localyesconfig´ when configuring your kernel.
* The kernel need some msecs of time to enumerate your eMMC device and eventual SD card, so you won't get this system to boot without either an initrd, or if you don't use an initrd, the kernel boot parameters `rootdelay=2´. One second might be enough, but with two seconds you're sure.
* On my setup I use pulseaudio, and I had to have this .asoundrc<ref name="PulseAudio Perfect Setup">[http://www.freedesktop.org/wiki/Software/PulseAudio/Documentation/User/PerfectSetup/ PulseAudio Perfect Setup]</ref> file in my home folder to make sound in alsa applications works (for instance adobe-flash)
<pre>pcm.!default {
    type pulse
    # If defaults.namehint.showall is set to off in alsa.conf, then this is
    # necessary to make this pcm show up in the list returned by
    # snd_device_name_hint or aplay -L
    hint.description "Default Audio Device"
}
ctl.!default {
    type pulse
}</pre>
