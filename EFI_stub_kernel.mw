<languages />
<translate>

{{InfoBox stack|{{InfoBox homepage|https://www.kernel.org/doc/Documentation/efi-stub.txt|header=true}}|{{InfoBox package|sys-kernel/gentoo-sources}}|{{InfoBox wikipedia|EFI system partition}}{{InfoBox todo|CONFIG_PM_STD_PARTITION for hibernation}}}}

The (U)EFI firmware present in many computers can function as [[bootloader]], allowing systems to boot without needing an additional software bootloader. This article shows how to configure and [[#Installation|install]] an unsigned kernel in the [[EFI System Partition|EFI System Partition (ESP)]] of a computer running in EFI mode with [[Sakaki's_EFI_Install_Guide/Configuring_Secure_Boot|secureboot]] turned off. 

== Kernel configuration ==

In order to boot directly from [[wikipedia:UEFI|UEFI]], the kernel needs to know where to find the root ({{path|/}}) partition of the system to be booted. Enable EFI runtime service support <var>(CONFIG_EFI)</var>, EFI stub support <var>(CONFIG_EFI_STUB)</var> and  Built-in kernel command line (<var>CONFIG_CMDLINE_BOOL</var>) and add the root partition path (example: {{Path|/dev/sda2}}) or its PARTUUID to (<var>CONFIG_CMDLINE</var>).

{{KernelBox|title=Enable EFI stub support|1=
Processor type and features  --->
    [*] EFI runtime service support 
    [*]   EFI stub support
    [ ]     EFI mixed-mode support
    ...
    ...
    [*] Built-in kernel command line
    (root=/dev/sda2)
}}

Using <code>root=PARTUUID=</code> might be preferable. To find out use {{C|blkid}}:

{{Note|The ''partition's'' PARTUUID is distinct from the ''filesystem's'' UUID.}}

{{RootCmd|blkid {{!}} grep sda2|output=<pre style="white-space: pre;">
/dev/sda2: UUID="d1e0c1e0-3a40-42c5-8931-cfa2c7deae32" TYPE="ext4" PARTUUID="adf55784-15d9-4ca3-bb3f-56de0b35d88d"
</pre>}}

{{KernelBox|title=CONFIG_CMDLINE - alternative using PARTUUID (example: adf55784-15d9-4ca3-bb3f-56de0b35d88d)|1=
Processor type and features  --->
    [*] Built-in kernel command line
    (root=PARTUUID=adf55784-15d9-4ca3-bb3f-56de0b35d88d)
}}

It is also a good idea to enable EFI Variable Support via sysfs <var>(CONFIG_EFI_VARS)</var> so that the [[Efibootmgr#EFI_vars|efivars]] can be mounted. <var>CONFIG_EFI_MIXED</var> as proposed by [[Handbook:AMD64/Installation/Kernel#Architecture_specific_kernel_configuration|Gentoo Handbook]] is not needed for the EFI boot stub.

{{KernelBox|title=EFI Variable Support via sysfs|1=
Firmware Drivers  --->
    EFI (Extensible Firmware Interface) Support  --->
        <*> EFI Variable Support via sysfs
}}

== Installation ==

If an ESP does not exist, one needs to be created. See [[EFI System Partition]].
Still in the kernel directory, build the kernel and install the modules:

{{RootCmd
|cd /usr/src/linux
|make && make modules_install
}}

Have the [[EFI System Partition|ESP]] (in this example {{path|/dev/sda1}}) mounted at {{path|/boot}}:

{{RootCmd|mount /dev/sda1 /boot}}

Copy or move the kernel image to the right place adding version number and the {{path|.efi}} suffix:

{{RootCmd
|mkdir -p /boot/EFI/Gentoo
|cp arch/x86/boot/bzImage /boot/EFI/Gentoo/bzImage-4.9.76-r1.efi
}}

In the ESP it should then be listed like:

{{Cmd|tree -L 3 /boot|output=<pre>
 /boot
 └── EFI
     └── Gentoo
         └── bzImage-4.9.76-r1.efi
</pre>}}

Alternatively the fallback directory {{path|/boot/EFI/Boot}} could be used additionally to or instead of {{path|/boot/EFI/Gentoo}}.

Next, update the NVRAM [[Efibootmgr#Creating_a_boot_entry|creating a new boot entry]] using e.g. [[efibootmgr]].

== Optional: Initramfs ==

If for some reason an [[initramfs]] is needed, it can either be embedded into the kernel or be used as a separate file.

In case it's desired [[Custom_Initramfs#Creating_a_separate_file|as a separate file]], it should also be copied or moved into the ESP and the NVRAM be updated accordingly. 

{{RootCmd|mv /boot/initramfs-4.9.76-r1-gentoo.img /boot/EFI/Gentoo/initramfs.img
|mount /sys/firmware/efi/efivars -o rw,remount
|efibootmgr --create --part 1 --label "Gentoo" --loader '\efi\gentoo\bzImage-4.9.76-r1.efi' -u 'initrd{{=}}\efi\gentoo\initramfs.img'
|mount /sys/firmware/efi/efivars -o ro,remount}}

Some UEFI implementations however seem to not support passing parameters from the NVRAM to the EFI stub kernel.

For embedding the initramfs directly into the kernel image, the '''Initramfs source file(s)''' (<var>CONFIG_INITRAMFS_SOURCE</var>) must be coded in the kernel (directly under the '''Initial RAM filesystem and RAM disk (initramfs/initrd) support''' (<var>CONFIG_BLK_DEV_INITRD</var>) option) as shown here for a custom initramfs created in {{path|[[Custom_Initramfs#Directory_structure|/usr/src/initramfs]]}}:

{{KernelBox|title=CONFIG_INITRAMFS_SOURCE{{=}}"/usr/src/initramfs" — (Example from [[Custom Initramfs]])|1=
General setup  --->
    [*] Initial RAM filesystem and RAM disk (initramfs/initrd) support
    (/usr/src/initramfs) Initramfs source file(s)
}}

Embedding takes place on compilation, so the kernel must then be recompiled and be moved (or copied) again into the ESP.

{{Note|This guide was created with the x64 architecture in mind. According the specification, UEFI is rich enough to cover a range of contemporary processor designs.<br />
UEFI image's name is composed by the machine type defined in the PE32+ format <ref>[http://www.uefi.org/sites/default/files/resources/UEFI%20Spec%202_6.pdf#page=68 UEFI Specification Version 2.6, Section 2.1.1 UEFI Images, p.18], January 2016. ''[http://www.uefi.org UEFI Forum]''. Retrieved on October 10, 2016.</ref> <ref>[http://www.uefi.org/sites/default/files/resources/UEFI%20Spec%202_6.pdf#page=140 UEFI Specification Version 2.6, Section 3.5.1.1 Removable Media Boot Behavior, p.90], January 2016. ''[http://www.uefi.org UEFI Forum]''. Retrieved on October 10, 2016.</ref>. For example, a UEFI OS loader for the x86 architecture is bootIA32.efi}}

== See also ==

* {{See also|efibootmgr}}
* efibootmgr in [[Handbook:AMD64/Installation/Bootloader#Alternative 2: efibootmgr]]
* [[Handbook:AMD64/Installation/Kernel#Architecture_specific_kernel_configuration|Architecture specific kernel configuration  (AMD64 Handbook)]] - should widely equal the [[#Kernel configuration]] section above
* {{See also|rEFInd}} and not needed for EFI stub kernels

== External resources ==

* [http://blog.realcomputerguy.com/2012/05/efi-stub-booting-without-bootloader.html EFI Stub - booting without a bootloader] Blog posting which this article is partially based on.
* [http://www.rodsbooks.com/efi-bootloaders/ EFI bootloaders] listing alternative ways to boot an (U)EFI system.
* [https://wiki.archlinux.org/index.php/EFISTUB EFISTUB] on wiki.archlinux.org
* [https://forums.gentoo.org/viewtopic-p-8111048.html#8111048 Gentoo Forums: Suspend and Hibernate with UEFI]

== References ==

{{reflist}}

</translate>

[[Category:Bootloaders]] [[Category:UEFI]]
