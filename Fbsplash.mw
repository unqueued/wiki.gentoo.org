{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://sourceforge.net/projects/fbsplash.berlios/|header=true}}
|{{InfoBox wikipedia|Bootsplash}}
|{{InfoBox todo|Udpate for CONFIG_FB_EFI}}
}}

'''fbsplash''' is a Gentoo implementation of a bootsplash screen to provide some eye candy during boot up, shut down or while working on a terminal without X. It is currently available in portage as {{Package|media-gfx/splashutils}}. A more modern alternative that also offers systemd support, but no eye-candy on the terminal is [[Plymouth]].

== Installation ==

=== USE flags ===

{{USEflag|package=media-gfx/splashutils}}

=== Emerge ===

Core fbsplash functionality is provided by {{Package|media-gfx/splashutils}} package, which can be installed by the following command:

{{Emerge|media-gfx/splashutils}}

Themes are provided by following packages:
* {{Package|media-gfx/splash-themes-gentoo}} 
* {{Package|media-gfx/bootsplash-themes}}
* {{Package|media-gfx/splash-themes-livecd}}
* {{Package|media-gfx/splash-themes-livedvd}}

=== Kernel ===

To use a splash image the kernel needs to support [[initramfs]] and it must also support framebuffer console decorations.

Normally, {{Package|sys-kernel/gentoo-sources}} have already been patched to support framebuffer console decorations. If a kernel other than gentoo-sources is being used, it may need to be patched first using genpatches. With this being said, some other kernels like {{Package|sys-kernel/tuxonice-sources}} have already been patched and are ready to use.

Enable framebuffer console decorations:

{{KernelBox|title=Kernel framebuffer configuration|<pre>
Device Drivers ->
    Graphics support ->
        <*> Support for frame buffer devices --->
            -*-   Enable Video Mode Handling Helpers
            [ ]   Enable Tile Blitting Support
            <*>   Userspace VESA VGA graphics support
            [*]   VESA VGA graphics support 
            < >   nVidia Framebuffer Support
            < >   ATI Radeon display support
            [ ]   Simple framebuffer support
        Console display driver support --->
            [*] VGA text console
            [*]   Enable Scrollback Buffer in System RAM
            (64)    Scrollback Buffer Size (in KB)
            <*> Framebuffer Console support
            -*-   Map the console to the primary display device
            [ ]   Framebuffer Console Rotation
            [*]   Support for the Framebuffer Console Decorations
            [ ] Select compiled-in fonts
</pre>}}

Remember that selecting the type of framebuffer device is important and affects the system. When planning to use open source graphics drivers, the appropriate device should be enabled here. For example, for radeon drive, enable ATI Radeon display support. However, if you are going to install proprietary drivers for the graphics card, you will likely have to rely on either Userspace VESA VGA graphics support or Simple framebuffer support. There is an option for EFI-based Framebuffer Support, too, in case you need it.

Thus, using either [[radeon]], [[intel]], or [[nouveau]] drivers provides a framebuffer capable device which is well implemented into the operating system. For users with the binary nVidia or AMD driver, there are workarounds using [[uvesafb]] or simple framebuffer to get frambuffer support.

Next, enable [[Libinput#Kernel|Event interface]] (<var>CONFIG_INPUT_EVDEV</var>) support for framebuffer themes:

{{KernelBox|title=Enabling the Event Interface|<pre>
Device Drivers --->
    Input Device Support --->
        <*> Event Interface
</pre>}}

== Usage ==

General usage scenarios.

=== Themes ===

{{Important|This requires the <code>fbcondecor</code> USE flag}}

The different themes are stored in {{Path|/etc/splash}} where the folder represents the theme name. To test some of them on the console use:

{{RootCmd|splash_manager -c set --theme{{=}}natural_gentoo --tty{{=}}1}}

This will change the theme on ''tty1'' to ''natural_gentoo''. Any theme in {{Path|/etc/splash}} that matches the current display resolution can be selected. Now to see the theme go to tty1 by pressing {{Key|Ctrl}}+{{Key|Alt}}+{{Key|F1}}.

To preview a theme in silent mode without reboot, try:

{{RootCmd|splash_manager -c demo -t natural_gentoo -m s --steps{{=}}100}}

{{Note|Don't run this command under X window.}}

For more reference please refer to:

{{RootCmd|splash_manager --help}}

=== Creating and updating an initramfs image ===

Add the fbcondecor service to the boot runlevel (OpenRC):

{{RootCmd|rc-update add fbcondecor boot}}

This way fbsplash would start when the system starts. However, the eye-candy would not be available immediately after boot and there would be some lag. Using an initramfs is the remedy to have it early at boot. Thus, we are going to make an initramfs.

Before you proceed, you must choose the theme and the resolution you want. While it seems trivial, the point is that not every theme you want might support your desired resolution. More important than this, the resolution that you want, might not be supported by the framebuffer device. So there are two steps to be done.

==== Finding the resolutions supported by the framebuffer device ====

Reveal the supported resolutions by your framebuffer device by issuing the following command:

{{RootCmd|cat /sys/class/graphics/fb0/modes}}

If you have selected simple frame buffer device support in kernel, you do not need to do this step. Please refer to the troubleshooting section.

==== Finding a theme with the supported resolution ====

Next, choose a theme that supports the resolution you want. For example, to find out which themes support full HD resolution:

{{RootCmd|find /etc/splash/ -name *1080*.cfg}}

==== Genkernel ====

If the initramfs is created using {{c|[[genkernel]]}}, the configuration in {{Path|/etc/genkernel.conf}} should be changed to the theme used.

{{FileBox|filename=/etc/genkernel.conf|lang=bash|1=
# Enable splashutils in early space (initrd). Default is "no".
SPLASH="yes"

# Use this splash theme. If commented out - the "default" name theme is used.
# Also, SPLASH="yes" needs to be enabled for this one to one work.
# This supersedes the "SPLASH_THEME" option of /etc/conf.d/splash (in early space).
SPLASH_THEME="emerge-world"
}}

Alternatively the {{Path|/etc/conf.d/splash}} could be used to configure the theme, which will be loaded after initramfs.

==== Updating an initramfs image without using genkernel ====

If you have an existing initramfs (like one you have created with [[dracut]]) you want to use this feature. To append the theme to an existing initramfs:

{{RootCmd|splash_geninitramfs --verbose --res NxN --append /path/to/initramfsimage theme}}

==== Creating an initramfs image without using genkernel ====

To create a new initramfs for our theme:

{{RootCmd|splash_geninitramfs --verbose --res NxN --generate /boot/initramfs-bootsplash theme}}

To create a new initramfs with the content of an existing one to add our theme:

{{RootCmd|splash_geninitramfs --verbose --res NxN --copy /path/to/initramfsdir theme}}

=== Bootloader ===

{{GRUB2|video{{=}}uvesafb:1920x1080-32,mtrr:3,ywrap splash{{=}}verbose,theme:emerge-world}}

This enables the ''verbose'' version of the ''emerge-world'' theme, a full list of parameters can be found in {{Path|/usr/share/doc/splashutils*/kernel_parameters}}. The parameter <code>video=1920x1080</code> is optional, but will choose the proper resolution for the image.

=== Screenshots ===

To make screenshots of the framebuffer console, the tool {{Package|media-gfx/fbgrab}} can be used:

{{Cmd|fbgrab fbscreen.png}}

[[File:Bootsplash.png|1024x576px]]

== Troubleshooting ==

=== The theme does not load at boot ===

First, check if you have built the initramfs with the supported resolution. Maybe the device does not support it, or maybe the theme does not have any configuration files for it. Another possibility is that the initramfs is not loaded at boot.

=== The screen stays black until X starts ===

Disable every framebuffer device in kernel and enable only simple framebuffer one.

=== The device does not support the desired resolution ===

This is a limitation in the device if the resolution you want is not listed among the supported modes. Fortunately, there is a workaround -- simply disable every framebuffer device and enable simple frame buffer device. 

{{KernelBox|title=Kernel framebuffer configuration|<pre>
Device Drivers ->
    Graphics support ->
        <*> Support for frame buffer devices --->
            -*-   Enable Video Mode Handling Helpers
            [ ]   Enable Tile Blitting Support
            < >   Userspace VESA VGA graphics support
            [ ]   VESA VGA graphics support 
            < >   nVidia Framebuffer Support
            < >   ATI Radeon display support
            [*]   Simple framebuffer support</pre>}}


Then, to the default GRUB configuration, add:

{{FileBox|filename=/etc/default/grub|lang=bash|1=
GRUB_GFXMODE=1920x1080
}}

Of course, replace the resolution with whatever you would like and rebuild grub2 configuration file by issuing:

{{RootCmd|grub2-mkconfig -o /boot/grub2/grub.cfg}}

Enjoy the eye-candy!

[[Category:Bootloaders]]
