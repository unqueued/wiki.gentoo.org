<languages />


{{Metadata|abstract=Gentoo はフレキシブル、かつさまざまなインストール方法をサポートしています。 それら個々のインストール手順にすべてのヒントとトリックを記載することはほぼ不可能です。そのため本ドキュメントではリファレンスを目的として、これまでに投稿されたすべてのヒントとトリックを扱うことに挑戦します。}}

Gentoo はフレキシブル、かつさまざまなインストール方法をサポートしています。それら個々のインストール手順にすべてのヒントとトリックを記載することはほぼ不可能です。そのため本ドキュメントではリファレンスを目的として、これまでに投稿されたすべてのヒントとトリックを扱うことに挑戦します。


== イントロダクション ==

=== はじめに ===

このドキュメントは Gentoo/x86 のインストールに関して、さまざまなヒントとトリックを含んでいます。それらの多くはこれまで十分に議論されてきたものであり、インストール手順を補足できますが、元の手順を置き換えるものではありません。 

== 高度なインストール方法 ==

=== ソフトウェアRAID ===

{{Note/ja|もし、あなたがソフトウェアRAIDそのものに詳しくない場合、[https://raid.wiki.kernel.org/index.php/Linux_Raid ソフトウェア RAID について]を読んでください。}}

{{Note/ja|より詳細な手順については、[https://gentoo-handbook.lugons.org/doc/en/gentoo-x86+raid+lvm2-quickinstall.xml  Software Raid and LVM2 x86 Quick Install Guide]を参照してください。}}

インストール CD からブートする時は適切な RAID モジュールをロードしてください。例えば、RAID-1 の場合は以下を実行します。 

{{RootCmd|modprobe raid1}}

ここで、対象となるディスクのパーティションタイプが <code>83</code> (Linux native)ではなく、<code>fd</code> (Linux raid autodetect) となっていることを確認してください。パーティションタイプは <code>fdisk</code> の <code>t</code> コマンドで変更できます。 

また RAID を構成する前にメタデバイスノードを作成する必要があります。 

{{RootCmd|mknod /dev/md1 b 9 1
|mknod /dev/md2 b 9 2
|mknod /dev/md3 b 9 3}}

パーティション作成後、[http://www.linuxdevcenter.com/pub/a/linux/2002/12/05/RAID.html RAID management] のためのより進んだツールである <code>mdadm</code> コマンドで{{Path|/etc/mdadm.conf}} ファイルを作成します（もちろん、インストール CD でブートした場合でも作成します）。例えば、{{Path|/dev/sda}} と {{Path|/dev/sdb}} の上に RAID-1 でミラーされた boot、swap、root パーティションを作成する場合は、以下のようにします。 

{{RootCmd|mdadm --create --verbose /dev/md1 --level{{=}}1 --raid-devices{{=}}2 --metadata{{=}}0.90 /dev/sda1 /dev/sdb1
|mdadm --create --verbose /dev/md2 --level{{=}}1 --raid-devices{{=}}2 --metadata{{=}}0.90 /dev/sda2 /dev/sdb2
|mdadm --create --verbose /dev/md3 --level{{=}}1 --raid-devices{{=}}2 --metadata{{=}}0.90 /dev/sda3 /dev/sdb3}}

{{Important/ja|ブートパーティションに対しては、RAID-0 や RAID-5 のようなストライピングをする RAID は使用できません。また、<code>--metadata{{=}}0.90</code> はこれらクリティカルなファイルシステムのみに必要です。他のファイルシステムに対しては、より新しいメタデータフォーマットを使用できます。}}

Linux のソフトウェア RAID ドライバは、まずメタデバイスを作成します。進捗は {{Path|/proc/mdstat}} で確認できます。まずはメタデバイスが完全に生成されるまで待ちましょう。 

{{RootCmd|mdadm --detail --scan > /etc/mdadm.conf}}

ここから先は、boot パーティションに {{Path|/dev/md1}}、swap パーティションに {{Path|/dev/md2}}、root パーティションに {{Path|/dev/md3}} を使います。 

chrootを実行する直前に、{{Path|/etc/mdadm.conf}}全体を{{Path|/mnt/gentoo/etc}}にコピーすることを忘れないでください。 

カーネルを再コンフィグレーションするときは、適切なRAIDサポートをモジュールではなく、カーネルに"組み込む"必要があります。 

When installing extra tools, emerge {{Package|sys-fs/mdadm}} as well. Note that this isn't available on all Installation CDs so you might not be able to install Gentoo on a Software RAID when using a networkless installation! 

ブートローダーの設定時、もしミラーリングを使っている場合は、ミラーリング対象のすべてのディスクのMBRにインストールしなければなりません。

=== カーネル2.4を使用したATA RAID ===

まず、インストールCDを<code>doataraid</code>オプション付きでブートしてください。ブート後、{{Path|/dev/ataraid}}ディレクトリを確認してください。ATA RAIDで使用可能なハードディスクそれぞれに対して、{{Path|disc*}}ディレクトリが存在するはずです。ここでディスク全体は{{Path|disc}}と表示され、パーティションは{{Path|part*}}と表示されます。 

Gentooをインストールしたい{{Path|/dev/ataraid/disc*/*}}デバイスファイルをメモしておいてください。後でインストール例の{{Path|/dev/sda}}を、メモしたパスで置き換えなければならないためです。 

chrootする前に、{{Path|/dev}}を新しい環境にbindオプション付きでマウントしなければなりません。 

{{RootCmd|mount --rbind /dev /mnt/gentoo/dev}}

カーネル設定時、ATA RAIDチップセットといくつかのオプションをサポートする必要があります。ポピュラーなATA RAIDシステムは、''Promise FastTrack built-in RAID''で、この場合は<code>Promise FastTrack Options</code>を組み込む必要があります。 

GRUBを設定する時は、まずGRUBのブートディスクを生成しなければなりません。これはあなたが想像するほど難しい作業ではありません。まずは普段どおりGRUBをインストールしますが、GRUBを実際にMBRに書き込むときは以下の手順を実行します。 

{{RootCmd|cd /boot/grub
|dd if{{=}}stage1 of{{=}}/dev/fd0 bs{{=}}512 count{{=}}1
|dd if{{=}}stage2 of{{=}}/dev/fd0 bs{{=}}512 seek{{=}}1}}

{{Path|grub.conf}}の設定も必要です。これは通常のインストール手順と変わりありません。ただ、ATA RAIDデバイスを<code>root=</code>で確実に指定してください。 

インストール完了後、GRUBのブートディスクからブートすると、GRUBのプロンプトが表示されるでしょう。ATA RAIDデバイスからブートするように設定します。 

{{Cmd|root (hd0,x)|prompt=grub> 
|setup (hd0)
|quit}}

ここでリブートします。（同時にGRUBのブートフロッピーは取り出します） 

LILOの場合は、インストール手順に従えば安全にインストールできます。 

=== インストールCDのカーネルを使用する ===

もし、カーネルをあなた自身でコンパイルしたくない場合、インストールCDのカーネルをあなたのシステムにコピーすることができます。インストール手順のカーネルをコンパイルする箇所で、別のターミナル（{{Key|Alt}}と{{Key|F2}}を同時押し）に切り替えて、インストールの最初に指定したrootのパスワードでログインしてください。 

カーネルとモジュールをあなたのGentooにコピーしてください。 

{{Note/ja|${KN}はカーネルの名前で、通常は'gentoo'や'smp'のような名前になります。}}

{{RootCmd|cp /mnt/cdrom/isolinux/${KN} /mnt/cdrom/isolinux/${KN}.igz /mnt/gentoo/boot
|mkdir -p /mnt/gentoo/lib/modules
|cp -Rp /lib/modules/`uname -r` /mnt/gentoo/lib/modules}}

Gentooのブートアップ中に（インストールCDから）ロードされたすべてのモジュールを新しい環境側で設定します。chrootした環境で以下のコマンドを実行してください。 

{{RootCmd|printf "modules\"" >> /etc/conf.d/modules
|cat /proc/modules {{!}} cut -d ' ' -f 1 >> /etc/conf.d/modules
|printf "\"\n" >> /etc/conf.d/modules}}

{{Path|/etc/conf.d/modules}}の内容が適切に更新されたことを確認しましょう。

== インストールを簡単に ==

=== ターミナルから離れる ===

多くの場合、時間がかかるコンパイル中はシステムから離れたいものです。しかし、特定のケースではこれは難しくなります。例えば周囲に知らない人がたくさんいる公衆の環境でインストールをする場合です。このようなケースでは、コンパイルはバックグラウンドで実行して、すべてのターミナルからログオフしたくなるでしょう。 

これを実現するためのいくつかの手段があります。まず最初の方法は<code>screen</code>を使うことです。インストールCDからブート後、rootパスワードを設定して、screenセッションを開始してください。 

{{Note/ja|すべてのインストールCDがscreenを提供しているわけではありません。その場合、この節に記載している別の方法を使ってください。}}

{{RootCmd|screen -S gentoo}}

一旦、screenセッションに入った後は、すべてのインストール作業をscreen上で行えます。ターミナルを離れたくなった時は、{{Key|Ctrl}}と{{Key|a}}を同時に押した後、{{Key|d}}を押してください。これでscreenセッションからターミナルを"detach"するため、安全にログアウトできます。 

作業を再開する場合、再度rootでログインして、バックグラウンドで動作しているscreenセッションに"attach"してください。 

{{RootCmd|screen -x gentoo}}

仮にscreenが使用できなくても、別の方法でターミナルから離れることができます。通常のインストール手順の中で長時間のコンパイルが始まる場合（例えば<code>./scripts/bootstrap.sh</code>の実行時）、<code>nohup</code>を使えばあなたがログアウトしてもコンパイルを継続できます。このとき、忘れずにコンパイルコマンドの末尾に"&"を付けてください。そうしないとコンパイルコマンドはバックグラウンドで実行されません！ここで、あなたが現在どのディレクトリにいるのか（これは<code>pwd</code>コマンドでわかります）を覚えておいてください。これは後の手順で必要です。 

{{RootCmd|pwd|output=<pre>
/usr/portage
</pre>}}

{{RootCmd|nohup ./scripts/bootstrap.sh &}}

これでchroot環境とインストールCDのセッションから出ることができます（<code>exit</code>）。コンパイルはバックグラウンドで実行されます。 

コンパイル結果を確認する場合は、（インストールCDで）rootとしてログインし、chroot環境に戻ります。そしてあなたが最後にいたディレクトリに戻ってください。 

{{RootCmd|chroot /mnt/gentoo /bin/bash
|env-update && source /etc/profile
|cd /usr/portage}}

ここで、そのディレクトリに作られているであろう{{Path|nohup.out}}ファイルを<code>less</code>コマンドで見てください。コンパイル結果が{{Path|nohup.out}}ファイルに追加されているでしょう。そのため、もしコンパイルの進捗を随時確認したい場合は、<code>less nohup.out</code>を実行後、<code>F</code>を入力してログの追加を随時反映させましょう。 

もし、変更をフォローすることに疲れた場合、{{Key|Ctrl}}と{{Key|C}}を押した後に、{{Key|q}}を押してください。この場合、コンパイルプロセスは終了せず、単に<code>less</code>が終了するだけです。 

== エラー/問題の解決 ==

=== ディスクの詳細テスト ===

If you think your disk needs to be thoroughly checked for consistency (bad sectors and such), you can use the <code>-c</code> (that's lowercase c) option while placing the ext2/ext3/ext4 filesystem on it (using <code>mke2fs</code>). This will format, perform a read-test and mark all bad blocks as such. If you are really paranoid, use <code>-c -c</code> to format your disk and perform an extensive read/write test. 

{{RootCmd|mke2fs -j -c /dev/sda3}}

=== インストールに失敗したときの復旧方法 ===

なんらかの理由でGentooのインストールに失敗した場合でも、全てのインストール作業を最初からやり直す必要はありません。あなたがミスをしたと思われる時点まで（もしくは手順に不備があると考える時点まで）安全に戻ることができ、その時点から違うアプローチでインストールを続けることができます。 

まず最初に、chrootしたGentoo Linux環境から抜け出す必要があります。しかしすべての手順を再度実行する必要はありません。例えばパーティションが既に作成されているのであれば、パーティション作成はスキップすることができます。その場合、すぐにそのパーティションを{{Path|/mnt/gentoo}}にマウントできます。また、ステージの展開や{{Path|make.conf}}の修正もスキップできるでしょう。せっかく作ったファイルを上書きしたくありませんよね。 

一旦、Gentoo Linux環境にchrootした後は、異なるアプローチを取りたいポイントまですぐに進みましょう。例えばそれ自身が間違いでない限り、通常の手順でブートストラップのような処理が求められていたとしても、それを再度実行する必要はありません。 

もしあなたが間違って{{Path|grub.conf}}を設定したと考えているのであれば、すぐにエディタを起動して{{Path|/boot/grub/grub.conf}}を更新しましょう。 

起こっている問題に対して一旦異なるアプローチを取った場合、いくつの後続ステップの再実行を検討しなければなりません。具体的には、後続ステップがあなたの変更に依存していれば、それらをやり直す必要があります。 

例えば、 

* {{Path|make.conf}}の変数を変更した場合、この変数に依存している全てのコンパイルを再実行しなければなりません。 
* {{Path|/boot/grub/grub.conf}}を変更した場合、chroot環境から出てリブートします。理由は{{Path|grub.conf}}に依存する後続のステップを正常に実行するためです。 
* カーネルをリコンパイルした場合、ブートローダーがそのカーネルイメージを正しくブートできるようにしなければなりません（{{Path|/boot}}をマウントしていることを再確認しましょう）。そしてchroot環境を出て、リブートしてください。
* {{Path|/etc/fstab}}を変更した場合、chroot環境を出て、リブートしなければなりません。

ほとんどのリカバリ操作ですぐにリブートが必要になることがわかるでしょう。そのまま後続のインストールステップをやり直さなければならないのは特定のケースだけです。

[[Category:Server and Security]] {{Migrated|originalauthors=Xavier Neys, nightmorph}}
