<languages />


{{Metadata|abstract=Gentooはフレキシブル、かつさまざまなインストール方法をサポートしています。 それら個々のインストール手順に、すべてのヒントとトリックを記載することはほぼ不可能です。そのため本ドキュメントでは、リファレンスを目的として、これまでに投稿されたすべてのヒントとトリックを扱うことに挑戦します。}}

Gentooはフレキシブル、かつさまざまなインストール方法をサポートしています。 それら個々のインストール手順に、すべてのヒントとトリックを記載することはほぼ不可能です。そのため本ドキュメントでは、リファレンスを目的として、これまでに投稿されたすべてのヒントとトリックを扱うことに挑戦します。


== はじめに ==

=== 未完成です ===

このドキュメントはGentoo/x86のインストールに関して、さまざまなヒントとトリックを含んでいます。それらの多くはこれまで十分に議論されてきたものであり、インストール手順を補足できますが、置き換えるものではありません。 

== 高度なインストール方法 ==

=== ソフトウェアRAID ===

{{Note/ja|もし、あなたがソフトウェアRAIDそのものに詳しくない場合、[https://raid.wiki.kernel.org/index.php/Linux_Raid Software-RAID-HOWTO]を読んでください。}}

{{Note/ja|より詳細な手順については、[https://gentoo-handbook.lugons.org/doc/en/gentoo-x86+raid+lvm2-quickinstall.xml  Software Raid and LVM2 x86 Quick Install Guide]を参照してください。}}

インストールCDからブートした場合、適切なRAIDモジュールをロードしてください。例えば、RAID-1を使う場合は以下を実行します。 

{{RootCmd|modprobe raid1}}

ここで、対象となるディスクのパーティションタイプが<code>83</code> (Linux native)ではなく、<code>fd</code> (Linux raid autodetect)となっていることを確認してください。パーティションタイプは<code>fdisk</code>の<code>t</code>コマンドで変更できます。 

また、RAIDアレイを構成する前に、メタデバイスノードを作成する必要があります。 

{{RootCmd|mknod /dev/md1 b 9 1
|mknod /dev/md2 b 9 2
|mknod /dev/md3 b 9 3}}

パーティション作成後、[http://www.linuxdevcenter.com/pub/a/linux/2002/12/05/RAID.html RAID management]のためのより進んだツールである<code>mdadm</code>コマンドで{{Path|/etc/mdadm.conf}}ファイルを作成します（もちろん、インストールCDでブートした場合でも作成します）。例えば、{{Path|/dev/sda}}と{{Path|/dev/sdb}}を使ったRAID-1でミラーされたboot、swap、rootパーティションを作成する場合は、以下のようにします。 

{{RootCmd|mdadm --create --verbose /dev/md1 --level{{=}}1 --raid-devices{{=}}2 --metadata{{=}}0.90 /dev/sda1 /dev/sdb1
|mdadm --create --verbose /dev/md2 --level{{=}}1 --raid-devices{{=}}2 --metadata{{=}}0.90 /dev/sda2 /dev/sdb2
|mdadm --create --verbose /dev/md3 --level{{=}}1 --raid-devices{{=}}2 --metadata{{=}}0.90 /dev/sda3 /dev/sdb3}}

{{Important/ja|ブートをするパーティションに対しては、RAID-0やRAID-5のようなストライピングをするRAIDは使用できません。また、<code>--metadata{{=}}0.90</code>はこれらクリティカルなファイルシステムのみに必要です。他のファイルシステムに対しては、より最近のメタデータフォーマットを使用できます。}}

LinuxのソフトウェアRAIDドライバーは、まずメタデバイスを作成します。この進行状況は{{Path|/proc/mdstat}}に見ることができます。まずはメタデバイスが完全に生成されるまで待ちましょう。 

{{RootCmd|mdadm --detail --scan > /etc/mdadm.conf}}

ここから先は、bootパーティションに{{Path|/dev/md1}}、swapパーティションに{{Path|/dev/md2}}、rootパーティションに{{Path|/dev/md3}}を使います。 

chrootを実行する直前に、{{Path|/etc/mdadm.conf}}全体を{{Path|/mnt/gentoo/etc}}にコピーすることを忘れないでください。 

カーネルを再コンフィグレーションするときは、適切なRAIDサポートをモジュールではなく、カーネルに"組み込む"必要があります。 

追加のツールをインストールする場合、<code>mdadm</code>もemergeしましょう。ここで気をつけなければならないのは、<code>mdadm</code>はすべてのインストールCDで利用可能とは限らないことです。ネットワークを使わないインストールでは、ソフトウェアRAID上にGentooをインストールすることはできないかもしれません。 

ブートローダーの設定時、もしミラーリングを使っている場合は、ミラーリング対象のすべてのディスクのMBRにインストールしなければなりません。

=== 2.4カーネルを使用したATA RAID ===

まず、インストールCDを<code>doataraid</code>オプション付きでブートしてください。ブート後、{{Path|/dev/ataraid}}の内容を確認してください。ATA RAIDで使用可能なハードディスクそれぞれに対して、{{Path|disc*}}ディレクトリが存在するはずです。ここでディスク全体は{{Path|disc}}と表示され、パーティションは{{Path|part*}}と表示されます。 

Gentooをインストールしたい{{Path|/dev/ataraid/disc*/*}}デバイスファイルを書き写しておいてください。後で、インストール例の{{Path|/dev/sda}}を書き写したパスで置き換えなければならないためです。 

chrootする前に、新しい環境側に{{Path|/dev}}をbindオプション付きでマウントしておかなければなりません。 

{{RootCmd|mount --rbind /dev /mnt/gentoo/dev}}

カーネル設定時、ATA RAIDチップセットといくつかのオプションをサポートする必要があります。ポピュラーなATA RAIDシステムは、''Promise FastTrack built-in RAID''で、この場合は<code>Promise FastTrack Options</code>を組み込む必要があります。 

GRUBを設定する時は、まずGRUBのブートディスクを生成しなければなりません。これはあなたが想像するほど難しい作業ではありません。まずは普段どおりGRUBをインストールしますが、GRUBを実際にMBRに書き込むときは以下の手順を実行します。 

{{RootCmd|cd /boot/grub
|dd if{{=}}stage1 of{{=}}/dev/fd0 bs{{=}}512 count{{=}}1
|dd if{{=}}stage2 of{{=}}/dev/fd0 bs{{=}}512 seek{{=}}1}}

{{Path|grub.conf}}の設定も必要です。これは通常のインストール手順と変わりありません。ただ、ATA RAIDデバイスを<code>root=</code>で確実に指定してください。 

インストール完了後、GRUBのブートディスクからブートすると、GRUBのプロンプトが表示されるでしょう。ここでATA RAIDデバイスからブートするように設定します。 

{{Cmd|root (hd0,x)|prompt=grub> 
|setup (hd0)
|quit}}

ここでリブートします（同時にGRUBのブートフロッピーは取り出します）。 

LILOのユーザについては、インストール手順通りに安全にインストールできます。 

=== インストールCDのカーネルを使用する ===

もし、カーネルをあなた自身でコンパイルしたくない場合、インストールCDのカーネルを使用し、かつそれをあなたのシステムにコピーすることができます。インストール手順中、カーネルをコンパイルする箇所に辿り着いた時、別のターミナル（{{Key|Alt}}と{{Key|F2}}を同時押し）からインストールの最初に指定したrootのパスワードでログインしてください。 

カーネルとモジュールをあなたのGentooにコピーしてください。 

{{Note/ja|${KN}はカーネルの名前で、通常は'gentoo'や'smp'のような名前になります。}}

{{RootCmd|cp /mnt/cdrom/isolinux/${KN} /mnt/cdrom/isolinux/${KN}.igz /mnt/gentoo/boot
|mkdir -p /mnt/gentoo/lib/modules
|cp -Rp /lib/modules/`uname -r` /mnt/gentoo/lib/modules}}

Gentooのブートアップ中に（インストールCDから）ロードされ、現在動作しているすべてのモジュールを得るには、chrootした環境で以下のコマンドを実行してください。 

{{RootCmd|printf "modules\"" >> /etc/conf.d/modules
|cat /proc/modules | cut -d ' ' -f 1 >> /etc/conf.d/modules
|printf "\"\n" >> /etc/conf.d/modules}}

{{Path|/etc/conf.d/modules}}の内容が適切に更新されたことを確認しましょう。 

== インストールを簡単に ==

=== ターミナルから離れる ===

多くの場合、コンパイル中はシステムから離れたいものです。しかし、特定のケースではこれは難しくなります。例えば公衆の環境のように、すべての人を信用できない中でインストールをする場合です。このようなケースでは、コンパイルをバックグラウンドで実行し、すべてのターミナルからログオフしたくなるでしょう。 

これを実現するためのいくつかの手段があります。まず最初の方法は<code>screen</code>を使うことです。インストールCDからブート後、rootパスワードを設定して、screenセッションを開始してください。 

{{Note/ja|すべてのインストールCDがscreenを提供しているわけではありません。その場合、この節に記載している他の方法を使わなければならないでしょう。}}

{{RootCmd|screen -S gentoo}}

一旦、screenセッションに入った後は、すべてのインストール作業をそこで行えます。ターミナルを離れたくなった時は、{{Key|Ctrl}}と{{Key|a}}を同時に押した後、{{Key|d}}を押してください。これでscreenセッションからターミナルを"切り離す"ことができます。これで安全にログアウトできます。 

To regain access to your terminal, log in as root again and ''attach'' to the running screen session: 

{{RootCmd|screen -x gentoo}}

If you can't use screen, there is still a way to leave your terminal. Follow the installation instructions, but when you come to the point where a long-term compilation would be started (for instance the <code>./scripts/bootstrap.sh</code> step), use <code>nohup</code> which allows for a process to continue even when you log out. Don't forget the trailing "&", otherwise the process won't be placed in the background! Remember where you are (the <code>pwd</code> command will show you that) as you will need to know this later on. 

{{RootCmd|pwd|output=<pre>
/usr/portage
</pre>}}

{{RootCmd|nohup ./scripts/bootstrap.sh &}}

Now exit the chrooted environment (<code>exit</code>) and the Installation CD session. Your compilation will continue in the background. 

When you want to check the compilation, log in as root (on the Installation CD) and chroot back into your environment and go to the directory where you left off: 

{{RootCmd|chroot /mnt/gentoo /bin/bash
|env-update && source /etc/profile
|cd /usr/portage}}

Now use the <code>less</code> command on the {{Path|nohup.out}} file that is situated inside that directory. The compilation will append its output to that file, so if you want to follow the compilation progress, run <code>less nohup.out</code> and press <code>F</code> to follow the changes. When the compilation is finished, you can continue with the next step of the installation instructions. 

If you ever get tired of following the changes, press {{Key|Ctrl}} + {{Key|C}} followed by a {{Key|q}}. This won't stop the compilation process, only the <code>less</code> process. 

== Fixing Errors/Issues ==

=== Extensive Testing of your Disks ===

If you think your disk needs to be thoroughly checked for consistency (bad sectors and such), you can use the <code>-c</code> (that's lowercase c) option while placing the ext2 or ext3 filesystem on it (using <code>mke2fs</code>). This will format, perform a read-test and mark all bad blocks as such. If you are really paranoid, use <code>-c -c</code> to format your disk and perform an extensive read/write test. 

{{RootCmd|mke2fs -j -c /dev/sda3}}

=== Recovering from a malfunctioning installation ===

If for some reason your Gentoo installation fails, you don't have to redo the installation all over again. Instead, you can safely "go" to the point where you think you made a mistake (or where you think the instructions are flawed) and try a different approach. 

First of all you need to chroot back into your Gentoo Linux environment. Follow the instructions again, but ignore the partitioning steps as your partitions are already created and even populated. You can therefore immediately mount those partitions at {{Path|/mnt/gentoo}}. You should also ignore the steps about stage extraction and modifying {{Path|make.conf}} - you don't want to overwrite your files do you? 

Once chrooted inside your Gentoo Linux environment, immediately go to the step where you think you should try a different approach. Don't redo all the steps like bootstrapping and such unless that is the place where you think things went wrong. 

For instance, if you believe that you have a wrongly configured {{Path|grub.conf}}, you can immediately fire up your editor to update {{Path|/boot/grub/grub.conf}}. 

Once you have tried a different approach for your situation, you should consider how much of the subsequent steps you need to perform again. If the subsequent steps are depending on your change, you will need to redo those. 

例えば、 

* if you have changed a variable inside {{Path|make.conf}} you will need to do all subsequent compiling since those depend on the settings inside {{Path|make.conf}} 
* if you have altered {{Path|/boot/grub/grub.conf}} you can immediately exit the chrooted environment and reboot as no subsequent steps are depending on {{Path|grub.conf}} 
* if you have recompiled your kernel you only need to make sure that your bootloader configuration points to the correct kernel image (double-check that you mounted your {{Path|/boot}}!), then you can exit the chrooted environment and reboot
* if you have altered {{Path|/etc/fstab}} you can exit the chrooted environment and reboot

As you can see, for most recovery operations you can immediately reboot. Only in certain cases will you need to redo the subsequent installation steps.

[[Category:Server and Security]] {{Migrated|originalauthors=Sven Vermeulen, Xavier Neys, nightmorph}}
