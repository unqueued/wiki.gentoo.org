==Introduction==

This page is aimed to introduce the GSoC 2012 project: Cross Container Support.

I will document the progress of my project here.

==Running Qemu-user on Chroot==

This section updates the [http://www.gentoo.org/proj/en/base/embedded/handbook/index.xml?part=1&chap=5 qemu-user] and describes how to build a chroot with qemu-user on x86 machine.

===Host Configuration===

====Qemu-user Installation====
In order to take advantage of qemu-user mode we need to do a few things. First we need to merge the main package we are going to need. Note the use of the static use flag.
Python is needed during qemu-user compiling.

{{RootCmd|echo "{{=}}app-emulation/qemu-user-1.0 ~x86" >> /etc/portage/package.keywords
|eselect python set python2.7
|USE{{=}}"static" emerge -b1 app-emulation/qemu-user
}}

====Binfmt_misc Configuration====

First you need to build the kernel module binfmt_misc. 
Add this to your kernel .config: CONFIG_BINFMT_MISC=m or CONFIG_BINFMT_MISC=y. 
If this module is not built already, then the devel host will require a reboot after the kernel update and modules_install.
The complete list of relevant kernel options (tested on 3.2.1-gentoo-r2) is as follows.

{{kernel|3.2.1-gentoo-r2|<pre>
Executable file formats / Emulations  --->
 [*] Kernel support for MISC binaries 
</pre>}}

Mount the binfmt_misc handler if it's not already, then we need to register our format with the kernel via the procfs.

{{RootCmd|[ -d /proc/sys/fs/binfmt_misc ] {{!}}{{!}} modprobe binfmt_misc
|[ -f /proc/sys/fs/binfmt_misc/register ] {{!}}{{!}} mount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc
}}

Next, register qemu-user-arch to the binfmt_misc module. Be noted that do not register a handler that matches the host machine.

{{RootCmd|echo ':arm:M::\x7fELF\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x28\x00:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff:/usr/bin/qemu-static-arm:' > /proc/sys/fs/binfmt_misc/register
|echo ':armeb:M::\x7fELF\x01\x02\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x28:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff:/usr/bin/qemu-static-armeb:' > /proc/sys/fs/binfmt_misc/register
|echo ':alpha:M::\x7fELF\x02\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x26\x90:\xff\xff\xff\xff\xff\xfe\xfe\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff:/usr/bin/qemu-static-alpha:' > /proc/sys/fs/binfmt_misc/register
|echo ':mips:M::\x7fELF\x01\x02\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x08:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff:/usr/bin/qemu-static-mips:' > /proc/sys/fs/binfmt_misc/register
|echo ':mipsel:M::\x7fELF\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x08\x00:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff:/usr/bin/qemu-static-mipsel:' > /proc/sys/fs/binfmt_misc/register
}}
{{RootCmd|echo ':ppc:M::\x7fELF\x01\x02\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x14:\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff:/usr/bin/qemu-static-ppc:' > /proc/sys/fs/binfmt_misc/register
|echo ':sh4:M::\x7fELF\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x2a\x00:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfb\xff\xff\xff:/usr/bin/qemu-static-sh4:' >/proc/sys/fs/binfmt_misc/register
|echo ':sh4eb:M::\x7fELF\x01\x02\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x2a:\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff:/usr/bin/qemu-static-sh4eb:' >/proc/sys/fs/binfmt_misc/register
|echo ':sparc:M::\x7fELF\x01\x02\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x02:\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff:/usr/bin/qemu-static-sparc:' > /proc/sys/fs/binfmt_misc/register
}}


===Enter/Exit the Chroot===
