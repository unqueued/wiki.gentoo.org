==Introduction==

This page is aimed to introduce the GSoC 2012 project: Cross Container Support.

I will document the progress of my project here.

==Running Qemu-user on Chroot==

This section updates the [http://www.gentoo.org/proj/en/base/embedded/handbook/index.xml?part=1&chap=5 qemu-user] and describes how to build a chroot with qemu-user on x86 machine.

===Host Configuration===

====Qemu-user Installation====
In order to take advantage of qemu-user mode we need to do a few things. First we need to merge the main package we are going to need. Note the use of the static use flag.
Python is needed during qemu-user compiling.

{{RootCmd|echo "{{=}}app-emulation/qemu-user-1.0 ~x86" >> /etc/portage/package.keywords
|eselect python set python2.7
|USE{{=}}"static" emerge -b1 app-emulation/qemu-user
}}

====Binfmt_misc Configuration====

First you need to build the kernel module binfmt_misc. 
Add this to your kernel .config: CONFIG_BINFMT_MISC=m or CONFIG_BINFMT_MISC=y. 
If this module is not built already, then the devel host will require a reboot after the kernel update and modules_install.
The complete list of relevant kernel options (tested on 3.2.1-gentoo-r2) is as follows.

{{kernel|3.2.1-gentoo-r2|<pre>
Executable file formats / Emulations  --->
 [*] Kernel support for MISC binaries 
</pre>}}

Mount the binfmt_misc handler if it's not already, then we need to register our format with the kernel via the procfs.

{{RootCmd|[ -d /proc/sys/fs/binfmt_misc ] {{!}}{{!}} modprobe binfmt_misc
|[ -f /proc/sys/fs/binfmt_misc/register ] {{!}}{{!}} mount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc
}}

Next, register qemu-user-arch to the binfmt_misc module. You don't need to add them one by one and Luca has provided a initscript to get the bin formats registered.
You can use it:
{{RootCmd| /etc/init.d/qemu-binfmt start}}

or start the service on bootstrap:
{{RootCmd| rc-update add qemu-binfmt default}}

You could learn more detail of registering bin formats through /usr/portage/app-emulation/qemu-user/files/qemu-binfmt.initd.

===Enter/Exit the Chroot===

Firstly, you should chose and download a stage3 tarball from [http://www.gentoo.org/main/en/where.xml installation media].
We take arm arch as an example to show how to enter/exit the chroot.

*Download and unpack arm stage tarball
:{{RootCmd|mkdir arm-chroot && cd arm-chroot|wget http:// stage3-armv7a-date.tar.bz2|tar -xvf stage3-armv7a-date.tar.bz2}}
*Install the static qemu-user into the chroot
:{{RootCmd| ROOT{{=}}$PWD/ emerge -K qemu-user}}
*Mount the required directories
:{{RootCmd|mkdir -p usr/portage| mount --bind /usr/portage usr/portage | mount --bind /proc proc | mount --bind /sys sys}}
*Chroot into the environment
:{{RootCmd|chroot . /bin/busybox mdev -s | chroot . /bin/bash --login}}
*Unmount stuff when not in use
:{{RootCmd|umount usr/portage | umount sys | umount proc}}
