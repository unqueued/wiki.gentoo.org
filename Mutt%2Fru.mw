<languages />


{{Metadata|abstract=Данная статья покажет вам, как начать использование мощного текстового клиента электронной почты mutt.}}

Данная статья покажет вам, как начать использование мощного текстового клиента электронной почты mutt.

== Клиент электронной почты Mutt ==

Если вы не являетесь фанатом клиентов электронной почты с красивыми графическими интерфейсами пользователя, либо хотите быстро прочитать какую-то почту через соединение SSH, то консольные почтовые клиенты могут вам подойти. 

Mutt является одним из консольных клиентов электронной почты, который все еще активно разрабатывается и у которого есть множество активных разработчиков (и пользователей). Он мощный, широко настраиваемый, маленький и эффективный. 

Хотя изначально Mutt был разработан, чтобы читать почту из локального почтового ящика (например,  {{Path|/var/spool/mail/}} ), сегодня у него есть полная поддержка каталогов Maildir, удаленного подключения к серверам POP3, и полная поддержка аккаунтов IMAP. Для полного описания того, что может делать Mutt, пожалуйста, прочитайте его документацию, и посетите его веб-сайт по адресу [http://www.mutt.org/ http://www.mutt.org/] . 

== Получение Mutt ==

Чтобы начать ваше приключение с Mutt, вам нужно просто установить его. Однако у Mutt есть много различных опций, которые включают или выключают различные его возможности. Ниже мы кратко обсудим большинство важных USE флагов, которые вы можете захотеть включить, в зависимости от того, как вы собираетесь использовать Mutt. Заметьте, что включение большинства из них не повредит данной программе, но заставить делать ее больше, чем может захотеть опытный пользователь Mutt. 

{{RootCmd|emerge -pv mutt|output=<pre>
[ebuild     N ] mail-client/mutt-1.5.21-r1 USE="gdbm gpg imap mbox nls nntp \
                  sidebar smime smtp ssl -berkdb -crypt -debug -doc -gnutls \
                  -idn -pop -qdbm -sasl -tokyocabinet"
</pre>
}}

Прежде всего, для новичков, USE флаг <code>imap</code>, наверное, является самым важным. Если вы его включите, ничего не сломается, поэтому если вы не уверены, какой аккаунт вы будете использовать с Mutt, просто включите его. Большинство провайдеров электронной почты, даже бесплатные, вроде GMail, сегодня используют IMAP, так как это самый удобный способ сохранять почту, к которой обращаются из нескольких клиентов в одно и то же время и/или из разных мест. Так как IMAP хранит всю почту на сервере, Mutt просто скачивает те сообщения, которые вы хотите видеть. 

Часто вам нужно прочитать несколько сообщений несколько раз практически друг за другом, что приведет к тому, что придется скачивать те же самые сообщения снова и снова. Так как это просто пустая трата, Mutt использует штуку, которая называется "кэш заголовков" (hcache), чтобы хранить наиболее важные части сообщений для своих нужд. Данный hcache сохраняется с помощью библиотеки базы данных, из которых поддерживаются четыре: <code>gdbm</code> , <code>berkdb</code> , <code>qdbm</code> и <code>tokyocabinet</code>. Если вы не знаете, какая для вас лучше, выберите gdbm, либо berkdb. Скорее всего, обе из них уже установлены на вашей системе. Если включить USE флаги для более чем одной системы hcache, то Mutt выберет ту, которая ему понравится больше. Он всегда будет использовать только одну (либо вообще ни одной) системы. 

Хотя IMAP важен для чтения почты, для отправки почты необходим почтовый сервер. Mutt может общаться с почтовым сервером, если он есть на локальной системе, но часто это не вариант, либо просто не очень хорошее решения, например для ноутбуков, которые часто перемещаются. В Mutt есть поддержка SMTP, которая включается USE флагом <code>smtp</code> USE-flag. Опять же, включив этот флаг, если вы не уверены в нем, вы не повредите вашу систему. Поддержка SMTP в Mutt просто позволяет вам отправить почту через почтовый сервер по вашему выбору, обычно это тот, который даст вам ваш провайдер электронной почты. 

Сегодня как IMAP, так и SMTP в основном передаются через защищенные каналы, поэтому если вы еще не включили ни одного из таких флагов, будет разумным включить либо USE-флаг <code>ssl</code>, либо <code>gnutls</code>. Оба из них добавляют безопасные варианты (imaps и smtps) к списку поддерживаемых Mutt протоколов, используя либо реализацию OpenSSL, либо GNUTLS. Если у вас нет строгого предубеждения на этот счет, просто выберите <code>ssl</code> . Скорее всего, он уже есть в ваших глобальных USE флагах в любом случае. Если вы хотите аутентифицировать себя при передаче почты, также добавьте к вашим USE флагам <code>sasl</code>, так как это необходимо для данного действия. 

Последнее, но не менее важное, существует USE-флаг <code>sidebar</code>. Он включает расширение Mutt, чтобы он мог показывать панель навигации из существующих почтовых ящиков в левой части экрана. Хотя это не рекомендуется для полных новичков (данная возможность нигде не описана в официальной документации, так как она не является официальной), более продвинутые пользователи могут захотеть воспользоваться данной функциональностью. К счастью, если вы просто включите USE флаг, вы не заметите никакой разницы в том смысле, что вы даже не заметите, что он включен. 

== Настройка Mutt ==

После того, как вы установили Mutt с выбранным набором USE флагов, далее необходимо создать файл {{Path|.muttrc}} в домашнем каталоге вашего пользователя. Примеры Muttrc-файлов можно найти во многих местах Интернета, а также в документации по Mutt. В каталоге {{Path|/usr/share/doc/mutt-<version>/samples}} вы можете найти некоторые примеры файлов muttrc из официальной поставки. Мы обсудим очень маленький файл {{Path|.muttrc}} для аккаунта с использованием протокола IMAP и доставкой почты по SMTP ниже. 

{{File|~/.muttrc|Пример файла .muttrc|<pre>
# Кодовая страница для отправляемых нами сообщений
set send_charset="utf-8"
# Если для входящих сообщений не задано кодовой страницы, то, скорее всего, это windows
set assumed_charset="iso-8859-1"
  
# Удостоверьтесь что Vim знает о том, что mutt это почтовый клиент и укажем ему, что создаем сообщений в UTF-8
set editor="vim -c 'set syntax=mail ft=mail enc=utf-8'"
  
# Скроллинг по одной строке, а не по странице
set menu_scroll=yes
  
# Мы хотим смотреть некоторые MIME-типы не выходя из программы, смотри ниже (после этого листинга кода) объяснения
auto_view application/msword
auto_view application/pdf
  
# Шаблон по умолчанию для поиска в To, Cc и Subject
set simple_search="~f %s | ~C %s | ~s %s"
  
# Настройки потоков, сортировать по потокам
set sort=threads
set strict_threads=yes
  
# Показываем очки спама (только из SpamAssassin) при чтении сообщения
spam "X-Spam-Score: ([0-9\\.]+).*" "SA: %1"
set pager_format = " %C - %[%H:%M] %.20v, %s%* %?H? [%H] ?"
  
# Не показывать все заголовки, только некоторые
ignore          *
unignore        From To Cc Bcc Date Subject
# в таком порядке
unhdr_order     *
hdr_order       From: To: Cc: Bcc: Date: Subject:
  
# Раскрасим все цветами, для примеров раскраски смотри сайт
# http://aperiodic.net/phil/configs/mutt/colors
color normal      white          black
color hdrdefault  green          default
color quoted      green          default
color quoted1     yellow         default
color quoted2     red            default
color signature   cyan           default
color indicator   brightyellow   red
color error       brightred      default
color status      brightwhite    blue
color tree        brightmagenta  black
color tilde       blue           default
color attachment  brightyellow   default
color markers     brightred      default
color message     white          black
color search      brightwhite    magenta
color bold        brightyellow   default
# Если вы не любите черный прогрессбар внизу экрана,
# закомментируйте следующую строку
color progress    white          black
  
# Настройки пользователя
set realname = "Andrew Dalziel"
set from = "andy@mail.server"
alternates "andrew@mail.server|andrew.dalziel@mail.server"
# Данный файл должен существовать, и в нем должна быть ваша подпись. Закомментируйте его, если вы 
# не хотите использовать подпись
set signature = ~/.signature
  
# Алиасы (что-то вроде адресной книги)
source ~/.aliases
  
# Настройки соединения IMAP
set mail_check=60
set imap_keepalive=300
  
# Настройки аккаунта IMAP
set folder=imaps://andy@imap.mail.server/
set spoolfile=imaps://andy@imap.mail.server/
set record=imaps://andy@imap.mail.server/Sent
set postponed=imaps://andy@imap.mail.server/Drafts
  
# Использовать headercache для IMAP (проверьте, что это каталог для большего быстродействия!)
set header_cache=/var/tmp/.mutt
  
# Почтовые ящики для проверки на новую почту
mailboxes "="
mailboxes "=Lists"
  
# Почтовые рассылки, на которые мы подписаны (используются регулярные выражения!)
subscribe "gentoo-.*@gentoo\\.org"
  
# Конфигурация SMTP для отправки почты
set smtp_url=smtp://mail.server/
</pre>
}}

{{Note/ru|Будет хорошей практикой разобраться со всеми настройками из примера выше. Есть гораздо больше настроек, а некоторые настройки могут не совпадать с вашими. Помните это, когда сначала вам покажется, что Mutt работает не так, как вам хочется.}}

Пример {{Path|.muttrc}}, показанный выше, настраивает ваш аккаунт IMAP, использует SMTP сервер для передачи почты, сохраняет ее в кэше в {{Path|/var/tmp/.mutt}} , читает известные алиасы адресов (думайте об этом как об адресной книге) из файла {{Path|~/.aliases}} и добавляет подпись из {{Path|~/.signature}} при создании новой почты. Для серверов IMAP может быть необходимо изменить каталоги для отправляемой, полученной и задержанной почты, так как каталоги {{Path|Sent}} и {{Path|Drafts}} могут находиться внутри каталога, называемого {{Path|INBOX}} . Просто попробовав Mutt, вы без труда определите, так ли это в вашем случае. 

Как только вы настроили ваш {{Path|.muttrc}}, вы готовы запустить Mutt, просто набрав <code>mutt</code> . Если вы ввели правильный адрес для сервера IMAP, Mutt запросит ваш пароль, а затем загрузит для вас сообщения. Заметьте, что в первый раз вход в ваш почтовый ящик может занять много времени, если у вас есть много сообщений, так как кэш заголовков Mutt пока пуст. Если все получится, то вы окажетесь в вашем почтовом ящике IMAP, готовом к работе. 

Navigation is intuitive, as is reading messages by just pressing the enter key or space bar. Mutt is quite Vim alike in that it uses key strokes to perform most of its actions. You best read Mutt's manual on the web to get yourself known with all existing functions (or press ? in Mutt) and what key they are bound to, or better, what key you like it to be bound to. Some essential keys are <code>m</code> (for message) to start composing a new message, <code>q</code> for quit, <code>r</code> for reply, <code>s</code> for save and <code>p</code> for print. 

One of the features that Mutt has that is still not in today's most savvy email clients is the ability to display attachments inline through some viewer. The auto_view directive in the .muttrc file tells Mutt which attachments (based on their MIME-type) it should view inline. To figure out how to do that, Mutt uses mailcap files to lookup how to display a certain MIME-type. Usually the system wide mailcap file isn't sufficient here, so you better start a {{Path|~/.mailcap}} file to put items in there for <code>copiousoutput</code> that Mutt can display inline. 

In the example {{Path|.muttrc}} above <code>auto_view</code> is enabled for <code>application/msword</code> and <code>application/pdf</code> files. These two show the extreme usefulness of this capability, because it means meeting notes sent as doc file now are perfectly fine readable without having to save the attachment and open it in LibreOffice. Instead the text just shows up in the message reader, that is, if you have a matching entry in your {{Path|~/.mailcap}} file.

{{File|~/.mailcap|Example .mailcap file|<pre>
application/msword; antiword '%s'; copiousoutput; description=Word Document;
nametemplate=%s.doc
application/pdf; pdftotext '%s' -; copiousoutput; description=PDF Document;
nametemplate=%s.pdf
</pre>
}}

The above {{Path|.mailcap}} example tells mutt what to do to "view" <code>msword</code> and <code>pdf</code> files. For the former it should run a program called <code>antiword</code> (emerge <code>app-text/antiword</code> ), for the latter the program <code>pdftotext</code> (emerge <code>app-text/poppler</code> ). You can go wild with these to for example display rendered HTML (give <code>app-text/vilistextum</code> a try), render vcards, or show ASCII representation of attached images. All you need to do is define how to call the program in your {{Path|.mailcap}} , and tell Mutt to try to view it inline using the <code>auto_view</code> directive. 

== Заключение ==

Mutt is a very versatile console email client. If you like the concept, Mutt can be altered to behave in nearly any way through its configuration. Search the web to find others explaining how they did "it", or find one of the many patches that exist to make Mutt do even more. Gentoo applies a couple of very popular patches to Mutt, so make sure to check <code>mutt -v</code> if you want something more to make sure it is not yet already at your disposal. While learning Mutt is not necessarily easy, once it is in your fingers, it can make your mail experience much faster and efficient than with other clients. Searching for example is quite powerful if you know how to hit the right flags and know which regular expression narrows your search down. Enjoy Mutting! 

== Благодарности ==

Мы хотели бы поблагодарить следующих авторов и редакторов за их вклад в это руководство:


* Fabian Groffen

[[Category:Server and Security]]
