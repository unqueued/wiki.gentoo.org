<languages />


{{Metadata|abstract=Данная статья - это пошаговая инструкция по установке технологий по борьбе со спамом для Postfix. Среди них мы рассмотрим Amavisd-new с использованием Spamassassin и ClamAV, грейлистинг и SPF.}}

Данная статья - это пошаговая инструкция по установке технологий по борьбе со спамом для Postfix. Среди них мы рассмотрим Amavisd-new с использованием Spamassassin и ClamAV, грейлистинг и SPF.

== Введение ==

Данная статья описывает пошаговую инструкцию по установке шлюза по фильтрации почты на спам и вирусы. Если у вас всего один сервер, вы можете легко адаптировать информацию данной статьи под него. 

=== Общая картина ===

Данный документ описывает, как настроить шлюз для фильтрации спама в почтовом трафике со множеством доменов. Такой сервер можно запускать перед настоящими почтовыми серверами, например, Microsoft Exchange или Lotus Notes. 

Для данной статьи были выбраны приложения с читаемой конфигурацией и хорошими отзывами о безопасности. Почтовый сервер - Postfix, который достаточно безопасен и который можно достаточно просто правильно настроить. Обычно Postfix проверяет входящую почту на порту 25. При получении, он будет перенаправлять ее Amavisd-new на порт 10024. Amavisd-new затем будет отфильтровывать почту через различные фильтры, а затем отправит ее обратно Postfix по порту 10025, после чего Postfix перенаправить почту следующему почтовому серверу. 

Amavisd-new это фреймворк по фильтрации содержимого, использующий приложения-помощники для фильтрации на вирусы и фильтрации на спам. В данной настройке мы будем использовать два приложения-помощника - ClamAV для отфильтровывания писем с вирусами и Spamassassin для отфильтровывания спама. Spamassassin сам по себе может служить еще одним слоем фильтрации содержимого, и использовать приложения-помощники, как-то Vipul's Razor2 и DCC. 

В отличие от многих других технологий борьбы со спамом, вроде RBL, Spamassassin не просто принимает или отбрасывает данное письмо, судя по одному единственному тесту. Он использует множество внутренних тестов и внешних приложений-помощников, чтобы вычислить очки спама для каждого проходящего письма. Эти очки основаны на следующих тестах: 

* Байесова фильтрация
* Статические правила на основе регулярных выражений
* Распределенные сети:
** RBLs
** Razor2
** Pyzor
** DCC

Первая часть (с 1 по 4 главу) данной статьи опишет базовую настройку почтового шлюза с фильтрацией. Следующие главы могут реализовываться по отдельности, без зависимости между главами. Эти главы опишут, как 

* настроить специальные папки IMAP для обучения фильтра Байеса, а также для доставки ложных срабатываний
* настроить грейлистинг в Postfix
* настроить Amavisd-new для использования MySQL в качестве бэкенда для пользовательских настроек
* настроить Spamassasin для использования MySQL в качестве бэкенда для данных AWL и Байеса

{{Note/ru|Папки IMAP будут использоваться в формате maildir. Иметь каждый почтовый ящик в отдельном файле гораздо проще. Если вы используете mbox, я предлагаю попробовать maildir. Если вы еще не используете maildir, установите необходимые программы с помощью <code>emerge courier-imap</code> .}}

Планируемая пятая часть будет содержать различные подсказки по поводу быстродействию, и всяким вещам, которые вы можете захотеть узнать (запуск в изолированном окружении, ограничения Postfix, и так далее). 

{{Note/ru|Перенос ответственности на третью сторону тоже имеет свои риски. Вы должны знать и доверять этим третьим лицам. В данной настройке только решение о карантине почты с вирусами будет основано на решении третьих лиц. Использование системы оценивания Spamassassin для блокирования почты со спамом не делается одной программой, кроме, возможно, собственных статических правил Spamassassin.}}

{{Warning/ru|При отбрасывании почты со спамом на уровне MTA, вы должны быть очень осторожны при выборе RBL которые вы хотите использовать. Например, SpamCop это плохой RBL для использования на уровне MTA, так как у вас будет много ложных срабатываний, из-за того, что иногда их листинг чересчур агрессивен. Большее количество информации можно найти в статье [http://www.geekcomix.com/cgi-bin/classnotes/wiki.pl?UNIX03/Realtime_Blackhole_Lists_Are_Bad Realtime Blackhole Lists плохие] и [http://theory.whirlycott.com/~phil/antispam/rbl-bad/rbl-bad.html Проблема спама: Двигаемся дальше чем RBL]}}

=== Приготовления ===

Перед тем, как вы начнете, проверьте, что у вас есть рабочая установка Postfix, куда вы можете посылать, и откуда вы можете получать почту. Также вам понадобится почтовый сервер, куда вы будете отправлять почту далее. Если вы не умеете настраивать Postfix, то процесс может быстро стать чересчур сложным, если вы все делаете за один раз. Если вам нужна помощь, вы можете найти ее в отличной статье [https://wiki.gentoo.org/wiki/Complete_Virtual_Mail_Server полный виртуальный почтовый сервер] в Gentoo Wiki. 

== Установка необходимых программ ==

Мы начнем с установки самых важных программ: Amavisd-new, Spamassassin и ClamAV. 

{{RootCmd|emerge amavisd-new spamassassin clamav}}

{{Note/ru|Как было замечено ранее, у вас уже должна быть рабочая установка <code>postfix</code>. Если кратко, это сводится к <code>emerge postfix</code> ''и'' базовому пониманию того, как работает Postfix.}}

=== Настройка DNS ===

{{Note|Если вы не устанавливаете сервер шлюза, а будете иметь почтовые ящики на этом же сервере, вам нужно создать только запись MX.}}

Пока программы устанавливаются, запустите еще одну оболочку, и создайте необходимые записи DNS. 

Начните с создания записи <code>MX</code> для почтового шлюза и записи <code>A</code> для следующего пункта назначения. 

{{Code|Настройка DNS|<pre>
(Создайте запись MX для сервера шлюза)
                MX      10      mailgateway.mydomain.tld.
(Создайте запись A для сервера шлюза)
mailgateway     A       почтовыйшлюз.ip.добавьте.сюда
(Создайте запись A для следующего почтового сервера)
mail            A       почтовыйсервер.ip.добавьте.сюда
</pre>
}}


{{Note/ru|Некоторые провайдеры ADSL могут блокировать порт 25 и заставлять вас передавать почту через один из их серверов. Обычно вам нужно создать вторичную запись MX, вроде <code>MX 20 backup-mx.some-isp.tld</code>}}


=== Открываем файрвол ===

Кроме разрешения на прохождение нормального почтового трафика, вам нужно разрешить некоторым сервисам прохождение через ваш файрвол, чтобы позволить сетевым проверкам взаимодействовать с серверами. 

{| class="wikitable" style="text-align: left;" 
|- 
! Приложение
! Протокол
! Порт
|- 
| DCC
| UDP
| 6277
|- 
| Razor(исходящий ping)
| TCP
| 7
|- 
| Razor
| TCP
| 2703
|-
|}

Razor использует пинги, чтобы определить ближайшие сервера. 

=== Конфигурация Postfix ===

Сначала нам нужно сказать <code>postfix</code>, чтобы он прослушивал порт 10025, и мы уберем большинство ограничений, так как они уже были применены экземпляром <code>postfix</code>, который прослушивает порт 25. Также мы убедимся, что на порту 10025 он прослушивает только локальные соединения. Чтобы этого достичь, нам нужно добавить следующие строки в конце файла {{Path|/etc/postfix/master.cf}}  

{{Code|Изменяем файл master.cf|<pre>
smtp-amavis     unix -        -       n     -       2  smtp
  -o smtp_data_done_timeout=1200
  -o smtp_send_xforward_command=yes
#Либо эквивалентно, при использовании lmtp:
#lmtp-amavis    unix -        -       n     -       2  lmtp
#   -o lmtp_data_done_timeout=1200
#   -o lmtp_send_xforward_command=yes
  
127.0.0.1:10025 inet n        -       n     -       -  smtpd
  -o content_filter=
  -o local_recipient_maps=
  -o relay_recipient_maps=
  -o smtpd_restriction_classes=
  -o smtpd_client_restrictions=
  -o smtpd_helo_restrictions=
  -o smtpd_sender_restrictions=
  -o smtpd_recipient_restrictions=permit_mynetworks,reject
  -o mynetworks=127.0.0.0/8
  -o strict_rfc821_envelopes=yes
  -o smtpd_error_sleep_time=0
  -o smtpd_soft_error_limit=1001
  -o smtpd_hard_error_limit=1000
  
#Если вы вместо этого хотите использовать прокси-фильтрацию
#smtp            inet n         -       n      -       8 smtpd
# -o smtpd_proxy_filter=127.0.0.1:10024
# -o smtpd_client_connection_count_limit=4
#Если вы не хотите сканировать исходящую почту, используйте это
#10.0.0.2:smtp   inet n         -       n       -      - smtpd
#-o content_filter=
</pre>
}}

{{Note/ru|Строка <code>smtp-amavis</code> определяет, что максимум два процесса могут быть запущены в любой момент времени. Если вам нужно большее число процессов, измените это число так, как вам нужно. Помните, что число должно соответствовать числу <code>$max_servers</code> в {{Path|amavisd.conf}} . Помните, что <code>amavisd-new</code> очень требователен к памяти, поэтому повышение количества процессов <code>amavisd-new</code> может легко привести к исчерпанию памяти и большому использованию свопа, что приведет к катастрофическому падению производительности.}}

{{Note/ru|Если вы хотите отбрасывать спам в самом начале процесса, вы можете использовать метод Before-Queue (proxy) вместо метода filter. Если вы раскомментируете три строки, вам нужно будет настроить <code>content_filter{{=}}</code> в {{Path|main.cf}} . Это не рекомендуется делать для высоконагруженных по трафику серверов, так как число одновременных соединений ограничено числом экземпляров amavisd.}}

{{Warning/ru|Метод Before-Queue(proxy) все еще не был тщательно проверен.}}

{{Note/ru|Если вы, по какой-либо причине, хотите посылать почту с этого компьютера, и не хотите, чтобы она сканировалась, добавьте еще один экземпляр Postfix, раскомментировав последние две строки, и подставив нужный IP.}}

Файл {{Path|master.cf}} сообщает программе master из состава postfix, как запускать каждый индивидуальный процесс postfix. Более подробную информацию можно получить по команде <code>man 8 master</code> . 

Далее нам нужно, чтобы главный экземпляр <code>postfix</code>, слушающий порт 25, фильтровал почту через <code>amavisd-new</code>, который слушает порт 10024. 

Также нам надо установить, куда нужно отправлять почту далее. Скажите Postfix фильтровать всю почту через внешний фильтр содержимого, и включите явный выбор маршрута, чтобы Postfix знал, куда направлять почту. 

{{File|/etc/postfix/main.cf||<pre>
biff = no
empty_address_recipient = MAILER-DAEMON
queue_minfree = 120000000
  
content_filter = smtp-amavis:[127.0.0.1]:10024
#Equivalently when using lmtp:
#content_filter = lmtp-amavis:[127.0.0.1]:10024
  
# Карта транспорта
#
# Вставьте текст из sample-transport.cf если вам нужен явный маршрут.
transport_maps = hash:/etc/postfix/transport
  
relay_domains = $transport_maps
</pre>
}}

У Postfix есть множество установленных опций в {{Path|main.cf}} . Для более детального объяснения данного файла просмотрите <code>man 5 postconf</code>, либо то же самое онлайн [http://www.postfix.org/postconf.5.html Параметры Конфигурации Postfix] . 

Файл {{Path|transport}} это обычный файл хэша Postfix. Направьте почту на домен в левой части, и она будет перенаправлена в пункт назначения в правой части. 

{{File|/etc/postfix/transport||<pre>
mydomain.tld                          smtp:mail.mydomain.tld
</pre>
}}

После того, как мы отредактировали файл, нам нужно запустить команду <code>postmap</code>. Postfix не будет читать данный файл, пока мы не преобразуем его в нужный формат с помощью команды <code>postmap /etc/postfix/transport</code> . Тогда будет создан файл {{Path|/etc/postfix/transport.db}} . Нет необходимости перезагружать Postfix, так как он увидит изменения автоматически. 

{{Note/ru|Если следующий почтовый сервер не слушает на стандартном порту SMTP 25, вы можете задать Postfix нужный номер порта, например <code>smtp:mail.mydomain.tld:25000</code> .}}

Если ваши первые попытки послать почту привели к ошибкам, скорее всего где-то вы допустили ошибки в конфигурации. Пока вы работаете с ошибками конфигурации, попробуйте временно разрешить <code>soft_bounce</code>. Это не даст Postfix отбрасывать письма при ошибках доставки, и Postfix будет считать такие ошибки временными. Он будет оставлять письма в почтовой очереди, пока <code>soft_bounce</code> не будет отключен, либо убран. 

{{RootCmd|postconf -e "soft_bounce {{=}} yes"
|/etc/init.d/postfix reload}}

Как только вы закончили создавать рабочую конфигурацию, удостоверьтесь, что вы отключили или убрали <code>soft_bounce</code> и перезагрузили Postfix.

=== Конфигурация Amavisd-new ===

Amavisd-new используется для работы по фильтрацию, и позволяет вам легко соединить несколько различных технологий. При получении почтового сообщения, он извлечет письмо, профильтрует его через некоторые фильтры, с поддержкой белых и черных списков, отфильтрует почту с использованием различных вирусных сканеров, и, в конце концов, отфильтрует почту с использованием SpamAssassin. 

Amavisd-new и сам имеет некоторое число дополнительных возможностей: 

* он определяет опасные файлы в приложениях к письму, и у него есть политики для их обработки
* политики (для каждого пользователя, для каждого домена, для всей системы) для:
** белых списков
** черных списков
** границы оценок для спама
** политики в части вирусов и спама

Кроме <code>postfix</code> и <code>freshclam</code>, все приложения мы будем запускать под пользователем <code>amavis</code> . 

Отредактируйте следующие строки в {{Path|/etc/amavisd.conf}}  

{{File|/etc/amavisd.conf||<pre>
# (Вставьте какой домен проверять)
$mydomain = 'example.com';
# (Работать только на интерфейсе-петле)
$inet_socket_bind = '127.0.0.1';
# (Передавать Postfix на порту 10025)
$forward_method = 'smtp:127.0.0.1:10025';
$notify_method = $forward_method;
# (Определить аккаунт, куда посылать письма с вирусами)
$virus_admin = "virusalert\@$mydomain";
# (Всегда добавлять заголовки относительно проверки на спам)
$sa_tag_level_deflt  = -100;
# (Добавлять заголовок обнаружения спама, вроде такого X-Spam-Status: Yes)
$sa_tag2_level_deflt = 5;
# (Включать какие-либо действия при таком уровне спама)
$sa_kill_level_deflt = $sa_tag2_level_deflt;
# (Не отсылать статус получения отправителю. Это не влияет на получение спама.
#  Чтобы сделать это, используйте kill_level)
$sa_dsn_cutoff_level = 10;
# Не отбрасывать письма, а помещать их в карантин
$final_virus_destiny      = D_DISCARD;  # (по умолчанию D_DISCARD)
$final_banned_destiny     = D_DISCARD;  # (по умолчанию D_BOUNCE)
$final_spam_destiny       = D_DISCARD;  # (по умолчанию D_BOUNCE)
</pre>
}}

{{Note/ru|Строка <code>$sa_tag2_level_deflt {{=}} 5;</code> устанавливает границу определения письма как спам в 5 баллов. Это немного низкое значение. Как вы могли заметить, по умолчанию Amavisd-new задает <code>6.3</code> . Если вы не хотите видеть ни одного письма со спамом в вашем почтовом ящике, выбирайте <code>5</code> , однако если вы не хотите разбираться с ложными срабатываниями, выбирайте <code>6.3</code> .}}

Создайте каталог для карантина вирусных писем, так как мы не хотим, чтобы они попадали к нашим пользователям. 

{{RootCmd|mkdir /var/amavis/virusmails
|chown amavis:amavis /var/amavis/virusmails
|chmod 750 /var/amavis/virusmails}}

{{Note/ru|Amavisd-new может более точно определять политику, используя банки политик.}}

=== Конфигурация ClamAV ===

Мы будем использовать ClamAV в качестве вирусного сканера, так как у него неплохой процент детектирования, сравнимый с коммерческими предложениями,он очень быстр, и у него открытый исходный код. Мы с вами любим файлы логов, поэтому создайте лог <code>clamd</code>, используя <code>syslog</code> и включите дополнительное логгирование. Кроме того, не запускайте <code>clamd</code> от пользователя <code>root</code> . Теперь отредактируйте {{Path|/etc/clamd.conf}}  

{{File|/etc/clamd.conf||<pre>
# (Детальные логи с использованием syslog)
LogSyslog
LogVerbose
LogFacility LOG_MAIL
# (Измените положение pid файла)
PidFile /var/run/amavis/clamd.pid
# (Установите сокет clamav)
LocalSocket /var/amavis/clamd
# (Закрыть соединение, когда данный лимит будет превышен)
StreamMaxLength 10M
# (Не запускать clamd от пользователя)
User amavis
# (Более новые версии требуют, чтобы это было раскомментировано)
ScanMail
ScanArchive
</pre>
}}

{{Note/ru|Также помните, что нужно удалить директиву Example, чтобы ClamAV заработал}}

В пакете программ ClamAV есть демон <code>freshclam</code>, который периодически проверяет обновления вирусных сигнатур. Вместо того, чтобы обновлять вирусные сигнатуры дважды в день, заставим <code>freshclam</code> обновлять вирусные сигнатуры каждые два часа. 

{{File|/etc/freshclam.conf||<pre>
# (Логи с использованием Syslog)
LogSyslog
# (Детальные логи)
LogVerbose
# (Явно уберем привилегии root)
DatabaseOwner clamav
# (Проверять обновления каждые 2 часа. Это официальная рекомендация)
Checks 12
# (Используйте зеркало, которое ближе всего к вам. Замените XY на код вашей страны)
DatabaseMirror db.XY.clamav.net
</pre>
}}

Запустите <code>clamd</code> м <code>freshclam</code>, используя инициализационные скрипты, изменив {{Path|/etc/conf.d/clamd}} . 

{{File|/etc/conf.d/clamd||<pre>
START_CLAMD=yes
FRESHCLAM_OPTS="-d"
</pre>
}}

В конце, укажите в файле {{Path|amavisd.conf}} новое положение сокета. 

{{File|/etc/amavisd.conf||<pre>
# (Раскомментируйте сканер clamav и измените месторасположение сокета)
['ClamAV-clamd',
\&ask_daemon, ["CONTSCAN {}\n", "/var/amavis/clamd"],
  qr/\bOK$/, qr/\bFOUND$/,
  qr/^.*?: (?!Infected Archive)(.*) FOUND$/ ],
</pre>
}}

{{Warning/ru|НЕ изменяйте <code>$unix_socketname</code>, если только вы не понимаете, что вы делаете.}}

=== Конфигурация Vipul's Razor ===

Razor2 это распределенная сеть контрольных сумм писем со спамом. Установите ее с помощью команды <code>emerge razor</code> и создайте необходимые файлы конфигурации. Делайте это от пользователя <code>amavis</code>, выполнив команду <code>su - amavis</code>, а за ней <code>razor-admin -create</code> . 

{{RootCmd|emerge razor}}

Временно установим оболочку amavis в bash:

{{RootCmd|usermod -s /bin/bash amavis
|su - amavis}}

{{Cmd|razor-admin -create
|exit}}

Сбросим оболочку на /bin/false:

{{RootCmd|usermod -s /bin/false amavis}}

=== Конфигурация Distributed Checksum Clearinghouse (dcc) ===

Как и Razor2, dcc это сеть контрольной суммы спама, являющаяся распределенной и управляемая сообществом. Ее философия состоит в том, чтобы подсчитать число получателей данного письма, идентифицировав каждое письмо некоторой контрольной суммой. 

{{RootCmd|emerge dcc}}

=== Конфигурация Spamassassin ===

Amavis сам использует библиотеки Perl для Spamassassin, поэтому нет необходимости запускать сервис. Кроме того, это создает некоторую путаницу в конфигурации, так как некоторые настройки Spamassassin конфигурируются в файле {{Path|/etc/mail/spamassassin/local.cf}}, но, потом, перенастраиваются в {{Path|/etc/amavisd.conf}} . 

{{File|/etc/mail/spamassassin/local.cf||<pre>
# Включить систему Байеса
use_bayes               1
  
# Включить все сетевые проверки
skip_rbl_checks         0
  
# Письма на таких языках не будут маркироваться
# как возможный спам на иностранном языке
# - датский, английский, норвежский, шведский
ok_languages            da en no sv

# Письма с такими локалями не будут маркироваться
# как возможный спам на иностранном языке
ok_locales              en
  
# Использовать такой путь к фильтру Байеса
bayes_path              /var/amavis/.spamassassin/bayes
</pre>
}}


{{Note/ru|Со Spamassassin версии 3.1 вам нужно включить DCC и Razor2 раскомментировав соответствующие строки в файле {{Path|v310.pre}} .}}

{{Note/ru|Вы можете получить вдохновение для создания вашего файла {{Path|local.cf}}, попробовав [http://www.yrex.com/spam/spamconfig.php Генератор Конфигурации SpamAssassin] .}}

{{Note/ru|Вы также, скорее всего, захотите изменить <code>ok_languages</code> и <code>ok_locales</code> .}}

== У каждого хорошего правила есть и хорошие исключения ==

Как только почта по настоящему начнет проходить через данный почтовый шлюз, вы, скорее всего, выясните, что вышеприведенная настройка несовершенна. Может быть каким-то из ваших клиентов нравится получать письма, которые не нравятся другим. Вы можете достаточно просто создать белые и черные списки для отправителей. Раскомментируйте следующую строку в {{Path|amavisd.conf}} . 

{{File|amavisd.conf|Общесайтовые очки|<pre>
read_hash("/var/amavis/sender_scores_sitewide"),
</pre>
}}

В файле {{Path|sender_scores_sitewide}} вы помещаете полные адреса электронной почты, либо только их доменные части, а затем указываете положительное/отрицательное количество очков, которое нужно добавить к очкам спама. 

{{File|whitelist_sender|Пример|<pre>
# (Занести в белый список все письма с конкретного адреса электронной почты)
postmaster@example.net                -3.0
# (Занести в белый список всю почту с example.net, за исключением поддоменов)
.example.net                          1.0
</pre>
}}


{{Note/ru|Для других примеров смотри файл {{Path|/etc/amavisd.conf}}.}}

{{Note/ru|Размещение этих адресов вне файла {{Path|amavisd.conf}} это более правильное и безопасное решение.}}

{{Note/ru|Кроме того, это можно сделать в конфигурационном файле Spamassassin {{Path|/etc/mail/spamassassin/local.cf}}, но, я думаю, будет лучше сделать это в {{Path|/etc/amavisd.conf}} .}}

{{Note/ru|В следующих главах я покажу, как реализовать отдельные политики для каждого пользователя с использованием MySQL.}}

В поисках более хорошего метода, пока вы можете добавить следующее в файл {{Path|amavisd.conf}}, чтобы не выполнять проверки на спам для почтовых ящиков <code>postmaster</code> и <code>abuse</code>. 

{{Code|Не проверять с помощью спам-фильтров почту с ящиков postmaster и abuse|<pre>
map { $bypass_spam_checks{lc($_)}=1 } (qw(
        postmaster@
        abuse@
));
</pre>
}}

{{Important/ru|''Никогда'' не следует автоматически отбрасывать письма к аккаунтам <code>postmaster</code> или <code>abuse</code>. Смотрите [http://www.ietf.org/rfc/rfc2142.txt RFC 2142 ИМЕНА ПОЧТОВЫХ ЯЩИКОВ ДЛЯ ЧАСТОИСПОЛЬЗУЕМЫХ СЕРВИСОВ, РОЛЕЙ И ФУНКЦИЙ] . В противном случае, ваши домены могут попасть в какие-то из списков плохих хостов на [http://www.rfc-ignorant.org/ rfc-ignorant.org] .}}

== Добавляем больше правил ==

Если вы хотите использовать больше правил, разработанных ниндзями по борьбе со спамом из SARE [http://www.rulesemporium.com/ (SpamAssassin Rules Emporium)], вы можете легко добавлять и удалять их путем механизма <code>sa-update</code>, включенного в Spamassassin. 

Краткое описание использования наборов правил SARE совместно с <code>sa-update</code> может быть найдено [http://daryl.dostech.ca/sa-update/sare/sare-sa-update-howto.txt здесь] . 

== Тестируем и запускаем ==

=== Тестирование установки ===

Теперь, перед запуском <code>freshclam</code> можно проверить вручную, что все работает. 

{{RootCmd|freshclam|output=<pre>
ClamAV update process started at Sun May  2 09:13:41 2004
Reading CVD header (main.cvd): OK
Downloading main.cvd [*]
main.cvd updated (version: 22, sigs: 20229, f-level: 1, builder: tkojm)
Reading CVD header (daily.cvd): OK
Downloading daily.cvd [*]
daily.cvd updated (version: 298, sigs: 1141, f-level: 2, builder: diego)
Database updated (21370 signatures) from database.clamav.net (193.1.219.100).
</pre>
}}

Теперь вы обновили определения вирусов, и вы знаете, что {{Path|freshclam.conf}} правильно работает. 

Проверьте freshclam и amavisd из командной строки, используя тестовые письма amavisd. Запустите <code>clamd</code> и <code>amavis</code> следующими командами: 

{{RootCmd|/etc/init.d/clamd start
|/etc/init.d/amavisd start
|/etc/init.d/postfix reload}}

Если все пройдет хорошо, то <code>postfix</code> теперь должен слушать входящую почту на порту 25, и копии проверенных писем на порту 10024. Для проверки этого, просмотрите ваш файл логов. 

{{RootCmd|tail -f /var/log/mail.log}}

{{Note/ru|В зависимости от настроек ваших логов, вполне может быть, что вам нужен файл {{Path|/var/log/messages}} .}}

Теперь, если в файле логов не появилось никаких странных сообщений, то пришло время нового теста. 

Используйте <code>netcat</code> чтобы вручную соединиться с <code>amavisd</code> на порту 10024 и с <code>postfix</code> на порту 10025. 

{{Note/ru|Netcat можно использовать как расширенную замену программы <code>telnet</code> . Установите ее с помощью <code>emerge netcat</code> .}}

{{Note/ru|Если по какой-то неизвестной причине вы не можете выполнить ручную передачу почты <code>amavisd</code> с помощью, используйте вместо нее <code>telnet</code> .}}

{{RootCmd|nc localhost 10024|output=<pre>
220 [127.0.0.1] ESMTP amavisd-new service ready
</pre>}}

{{RootCmd|nc localhost 10025|output=<pre>
220 example.com ESMTP Postfix
</pre>
}}


{{Note/ru|Если вы хотите получить полный лог от amavisd-new, запустите <code>amavisd debug-sa</code> под пользователем <code>amavis</code> и пошлите письмо. Чтобы это сработало, вам может понадобиться изменить оболочку по умолчанию в файле {{Path|/etc/passwd}} .}}

Добавьте <code>amavisd</code> и <code>clamd</code> к уровню запуска <code>default</code> (по умолчанию). 

{{RootCmd|rc-update add clamd default
|rc-update add amavisd default}}

{{Note/ru|Мы не добавляем <code>spamd</code> к уровню запуска по умолчанию, так как <code>amavisd</code> использует Perl-библиотеки Spamassassin явно.}}

{{Note/ru|Вы можете заметить строки <code>Net::Server: Couldn't POSIX::setuid to ... []</code> в вашем файле логов. Согласно [http://www.ijs.si/software/amavisd/README.chroot Описанию amavis chroot] , если процесс UID равен 0 ( пользователь <code>root</code> ), то программа будет завершена, в противном случае вы можете считать это сообщение просто информационным. Это происходит потому, что <code>POSIX::setuid()</code> возвращает строку <code>0 but true</code> .}}

{{Important/ru|Если вы разрешили логин для пользователя amavis, поменяйте оболочку для логина в файле {{Path|/etc/passwd}} обратно на <code>/bin/false</code> .}}

== Автоматическое обучение, и перенаправление почты ==

=== Создаем пользователя spamtrap (ловушка для спама) ===

Создайте аккаунт и каталоги spamtrap. 

{{RootCmd|useradd -m spamtrap
|maildirmake /home/spamtrap/.maildir
|chown -R spamtrap:spamtrap /home/spamtrap/.maildir}}

Дайте пользователю spamtrap какой-либо пароль.

{{RootCmd|passwd spamtrap}}

Если вы хотите вручную проверять некоторые письма, чтобы удостовериться, что не произошло ложных срабатываний, вы можете использовать следующую конфигурацию <code>procmail</code> для перенаправления найденного спама в другие каталоги почты. 

=== Создаем .procmailrc ===

{{File|/home/spamtrap/.procmailrc||<pre>
#Некоторые переменные по умолчанию
MAILDIR=$HOME/.maildir
  
SPAM_FOLDER=$MAILDIR/.spam-found/
  
LIKELY_SPAM_FOLDER=$MAILDIR/.likely-spam-found/
  
#Письма с очками спама 7+ в каталог со спамом
:0:
* ^X-Spam-Status: Yes
* ^X-Spam-Level: \*\*\*\*\*\*\*
$SPAM_FOLDER
  
#Письма с очками спама между 5 и 7 в папку "скорее всего спам"
:0:
* ^X-Spam-Status: Yes
$LIKELY_SPAM_FOLDER
  
#Остальные письма во входящие
:0
*
./
</pre>
}}

{{Warning/ru|Если ваш почтовый сервер будет высоконагруженным, вы НЕ должны использовать папку для "возможного спама". Вместо этого установите <code>$sa_tag2_level_deflt</code> в достаточно большое значение, чтобы избежать ложных срабатываний, и направляйте письма прямо в <code>$SPAM_FOLDER</code> .}}

{{Note/ru|Если вы уже не установили <code>procmail</code>, сделайте это с помощью команды <code>emerge procmail</code> .}}

Проверьте, что Postfix использует <code>procmail</code> для доставки почты. 

{{File|/etc/postfix/main.cf||<pre>
mailbox_command = /usr/bin/procmail -a "DOMAIN"
</pre>
}}

=== Создаем каталоги для почты ===

Теперь мы создадим папки для хорошей почты (ham) и плохой почты (spam). 

{{RootCmd|maildirmake /var/amavis/.maildir
|maildirmake -S /var/amavis/.maildir/Bayes
|maildirmake -s write -f spam /var/amavis/.maildir/Bayes
|maildirmake -s write -f ham /var/amavis/.maildir/Bayes
|maildirmake -s write -f redeliver /var/amavis/.maildir/Bayes}}

Amavisd-new должен иметь возможность читать эти файлы, как и все почтовые пользователи. Поэтому мы добавим всех необходимых пользователей в группу mailuser вместе с amavis. 

{{RootCmd|groupadd mailusers
|usermod -G mailusers spamtrap
|chown -R amavis:mailusers /var/amavis/.maildir/
|chown amavis:mailusers /var/amavis/
|chmod -R 1733 /var/amavis/.maildir/Bayes/
|chmod g+rx /var/amavis/.maildir/
|chmod g+rx /var/amavis/.maildir/Bayes/}}

{{Warning/ru|Это даст членам группы <code>mailusers</code> доступ к почте <code>amavis</code>.}}

Это сделает папки spam и ham доступными для записи, но не для чтения. Поэтому пользователи смогут спокойно отправлять свои хорошие письма без боязни, что кто-то еще их прочитает. 

Затем запустите следующую команду от пользователя <code>spamtrap</code>: 

{{Cmd|maildirmake --add Bayes{{=}}/var/amavis/.maildir/Bayes $HOME/.maildir}}

{{Note/ru|Нам нужно дать права чтения на группу для каталога {{Path|Bayes}}, чтобы почтовый клиент мог видеть подкаталоги, используемые IMAP.}}

=== Добавляем задачи cron ===

Теперь запустите <code>crontab -u amavis -e</code>, чтобы отредактировать crontab пользователя amavis, чтобы разрешить автоматическое обучение фильтра Байеса каждый час. 

{{File|crontab|для пользователя amavis|<pre>
#Auto learn
0 * * * *          /usr/bin/sa-learn --spam /var/amavis/.maildir/Bayes/.spam/{cur,new} \
                    > /dev/null 2>&1
0 * * * *          /usr/bin/sa-learn --ham /var/amavis/.maildir/Bayes/.ham/{cur,new} > \
                   /dev/null 2>&1
</pre>
}}

{{Note/ru|Пользователь <code>amavis</code> должен быть членом группы <code>cron</code> чтобы он имел право запускать задачи.}}

{{Note/ru|Похоже, что папки maildir с общим доступом приводят к тому, что <code>sa-learn</code> изучает каждое сообщение два раза. Это не является особой проблемой. Судя по сообщениям, вы также увидите, что число сообщений, по которым происходило обучение равно половине, или еще немного меньше, чем число изученных сообщений.}}

=== Изменяем amavisd.conf ===

Теперь измените amavis, чтобы он перенаправлял письма со спамом на аккаунт <code>spamtrap</code>, при этом сохраняя заголовки спама. 

{{File|/etc/amavisd.conf||<pre>
# (Определить аккаунт, куда нужно посылать вирусную почту со спамом)
$spam_quarantine_to = "spamtrap\@$myhostname";
</pre>
}}

=== Очистка ===

Мы не хотим хранить почту вечно, поэтому будем использовать <code>tmpwatch</code>, чтобы регулярно ее очищать. Установите эту программу командой <code>emerge tmpwatch</code> . Только <code>root</code> может запустить <code>tmpwatch</code>, так что нам нужно отредактировать файл crontab пользователя <code>root</code>. 

{{File|crontab|Пользователь root|<pre>
# Очистка
# Хранить письма с вирусами неделю (24*7 часов)
15 0 * * *      /usr/sbin/tmpwatch -c -f -d --quiet 168 /var/amavis/virusmails/
# Удалять письма spam и ham, по которым происходило обучение, через неделю
15 0 * * *      /usr/sbin/tmpwatch -c -f -d --quiet 168 /var/amavis/.maildir/Bayes/
</pre>
}}

== Грейлистинг ==

=== Введение ===

Грейлистинг - это одно из новых моделей оружия в арсенале борьбы со спамом. Как видно из имени, метод очень похож на белые списки (англ. whitelisting, вайтлистинг) и черные списки (англ. blacklisting, блэклистинг). Каждый раз, когда неизвестный почтовый сервер пытается доставить почту, эта почта отклоняется с сообщением ''try again later'' (попробуйте позже). Это означает, что письмо задерживается, но тупые боты, занимающиеся рассылкой спама, которые не полностью реализуют протокол по стандарту RFC, больше не будут пытаться доставить спам, и никогда не будут повторять попыток. Со временем, скорее всего, спам-боты приспособятся к такой защите, но к тому времени появятся другие технологии для определения спама. 

{{Note/ru|Если ваш провайдер блокирует входящий трафик на порту 25, и перенаправляет всю почту, которая идет к вам, на свой почтовый сервер, то грейлистинг не будет работать.}}

Postfix 2.1 поставляется с простым сервером политик грейлистинга на Perl, который реализует такую схему. Однако его использование приводит к непредсказуемым результатам, если раздел, на котором находится база данных грейлистинга, переполняется. Существует улучшенная версия, не страдающая от этой проблемы. Сначала я покажу, как установить встроенную поддержку грейлистинга, которая поставляется с Postfix, а затем покажу, как сконфигурировать улучшенную версию. 

{{Note/ru|Существуют и другие сервера политик грейлистинга для Postfix (такие как  [http://www.gasmi.net/gld.html Gld], который есть в Portage, или [http://sqlgrey.sourceforge.net/ SQLgrey]). Некоторые из них поддерживают базы данных в качестве бэкендов, автозанесение в белый список, а также другие приятные возможности.}}

=== Простой грейлистинг ===

{{Note/ru|Если вы предпочитаете использовать улучшенный грейлистинг с использованием postgrey, вы можете спокойно пропустить данный раздел.}}

Нам нужен файл {{Path|greylist.pl}}, но ebuild по умолчанию его не устанавливает. 

{{RootCmd|cp /usr/portage/distfiles/postfix-your-version-here.tar.gz /root/
|tar xzf postfix-your-version-here.tar.gz
|cp postfix-2.1.0/examples/smtpd-policy/greylist.pl /usr/bin/}}

Теперь файлы на месте, и нам нужно создать каталог, в котором будет база данных серых списков: 

{{RootCmd|mkdir /var/mta
|chown nobody /var/mta}}

{{Warning/ru|Не создавайте каталог базы данных серых списков на разделе, на котором может кончится место. Хотя postfix может восстанавливаться из ситуаций нет-больше-места для почтовых очередей и почтовых ящиков, это не работает с базой данных серых списков. Если этот файл станет поврежден, вы вообще не сможете получать почту, пока вручную не удалите файл.}}

=== Настройка грейлистинга ===

Теперь, когда все это готово, все что нам остается сделать, это добавить серые списки к конфигурации postfix. Сначала добавим необходимую информацию к {{Path|master.cf}} : 

{{Code|Изменяем master.cf для использования грейлистинга|<pre>
policy-greylist  unix  -       n       n       -       -       spawn
   user=nobody argv=/usr/bin/perl /usr/bin/greylist.pl
</pre>
}}

Обычно демон spawn программы postfix убивает своих потомков через 1000 секунд, но это слишком мало для процесса работы с серыми списками, поэтому мы увеличим лимит времени в {{Path|main.cf}} : 

{{File|main.cf|используем серые списки|<pre>
policy-greylist_time_limit = 3600
# (Под smtpd_recipient_restrictions добавьте:)
check_sender_access hash:/etc/postfix/sender_access
# (Добавьте попозже:)
restriction_classes = greylist
greylist = check_policy_service unix:private/policy-greylist
</pre>
}}

{{Warning/ru|Проверьте, что вы указали <code>check_sender_access</code> ПОСЛЕ <code>reject_unauth_destination</code>, иначе ваша система может стать открытым почтовым ретранслятором.}}

{{Note/ru|База данных серых списков быстро засоряется ненужными адресами. Может помочь ограничение поисков в серых списках при использовании других ограничивающих методов, которые отбрасывают неизвестных отправителей и/или получателей.}}

Мы не хотим использовать серые списки для всех доменов, а только для тех, которые часто эксплуатируются спамерами. В конце концов, это будет задерживать доставку почты. Список недавно подделанных доменов MAIL FROM можно найти [http://www.monkeys.com/anti-spam/filtering/sender-domain-validate.in онлайн] . Добавьте домены, с которых вы получаете много спама к {{Path|/etc/postfix/sender_access}} : 

{{Code|Формат файла sender_access|<pre>
aol.com     greylist
hotmail.com greylist
bigfoot.com greylist
</pre>
}}

Если вы хотите более сложный список: 

{{RootCmd|wget http://www.monkeys.com/anti-spam/filtering/sender-domain-validate.in
|cat sender-domain-validate.in {{!}} sort {{!}} awk {'print $1 "\t\t greylist"'} > /etc/postfix/sender_access}}

Теперь осталось только инициализировать базу данных {{Path|sender_access}}: 

{{RootCmd|postmap /etc/postfix/sender_access}}

Настройка простых серых списков окончена. 

{{Warning/ru|Я пытался сделать это на компьютере, принимающем тысячи писем в день, и результаты были полным разочарованием. Через четыре дня компьютер перестал работать из-за сотен старых процессов <code>greylist.pl</code>.}}

=== Конфигурация улучшенного грейлистинга с помощью postgrey ===

Вы можете установить улучшенную политику серых списков с помощью простой команды <code>emerge</code> : 

{{RootCmd|emerge postgrey}}

После установки <code>postgrey</code> нам нужно отредактировать файл {{Path|main.cf}} . Изменения почти те же самые, как мы делали при настройке серых списков. 

{{File|main.cf|используем серые списки|<pre>
# (Добавьте под smtpd_recipient_restrictions:)
check_sender_access hash:/etc/postfix/sender_access
# (Добавьте попозже:)
smtpd_restriction_classes = greylist
greylist = check_policy_service inet:127.0.0.1:10030
</pre>
}}

{{Note/ru|Только SMTPD_POLICY_README программы Postfix использует <code>restriction_classes</code>, однако похоже это не работает.}}

{{Note/ru|Если вы хотите использовать серые списки везде, добавьте <code>check_policy_service inet:127.0.0.1:10030</code> .}}

Наконец, запустите сервер и добавьте его к нужному уровню запуска. 

{{RootCmd|/etc/init.d/postgrey start
|rc-update add postgrey default}}

{{Note/ru|Некоторые люди хотят получать почту быстро, и тогда серые списки бесполезны. Однако если вы создадите почтовый сервер для хранения почты, вы запросто можете настроить на нем серые списки. Мой ограниченный опыт говорит мне, что это может задержать до трети получаемого спама.}}

== SPF (Sender Policy Framework) ==

=== Введение ===

SPF allows domain owners to state in their DNS records which IP addressess should be allowed to send mails from their domain. This will prevent spammers from spoofing the <code>Return-Path</code>. 

{{Note/ru|Если ваш провайдер блокирует входящий трафик на порту 25, и перенаправляет всю почту, которая идет к вам, на свой почтовый сервер, то SPF не будет работать.}}

First domain owners have to create a special <code>TXT</code> DNS record. Then an SPF-enabled MTA can read this and if the mail originates from a server that is not described in the SPF record the mail can be rejected. An example entry could look like this: 

{{Code|Пример записи SPF|<pre>
example.com.  IN TXT  "v=spf1 a mx ptr -all"
</pre>
}}

The <code>-all</code> means to reject all mail by default but allow mail from the <code>A</code>( <code>a</code> ), <code>MX</code>( <code>mx</code> ) and <code>PTR</code>( <code>ptr</code> ) DNS records. For more info consult further resources below. 

{{Note/ru|Если вы перенаправляете всю исходящую почту через вашего провайдера, вам нужно добавить: <code>include:вашпровайдер.com</code> .}}

В Spamassassin 3.0 есть поддержка SPF, но она не включена по умолчанию. Кроме того, новый демон политик в Postfix также поддерживает SPF, так что давайте установим поддержку SPF для Postfix. 

{{Note|If you want to use SPF with Spamassassin instead simply <code>emergeÂ dev-perl/Mail-SPF-Query</code> and restart Amavisd-new.}}

=== Приготовления ===

First you have to install Postfix 2.1 as described above. When you have fetched the source grab the {{Path|spf.pl}} with: 

{{RootCmd|cp postfix-<version>/examples/smtpd-policy/spf.pl /usr/local/bin/}}

{{Note|The {{Path|spf.pl}} coming with Postfix is slightly buggy so find and uncomment the following line: <code>push @HANDLERS, "sender_permitted_from"; use Mail::SPF::Query;</code> . Furthermore in about line 199 substitute <code>comemnt</code> with <code>comment</code> . Alternatively you can download a [http://spf.pobox.com/postfix-policyd.txt development version] .}}

This Perl script also needs some Perl libraries that are not in portage but it is still quite simple to install them: 

{{RootCmd|emerge Mail-SPF-Query Net-CIDR-Lite Sys-Hostname-Long}}

Now that we have everything in place all we need is to configure Postfix to use this new policy. 

{{File|master.cf|use SPF|<pre>
policy-spf  unix  -       n       n       -       -       spawn
   user=nobody argv=/usr/bin/perl /usr/local/bin/spf.pl
</pre>
}}

Now add the SPF check in {{Path|main.cf}} . Properly configured SPF should do no harm so we could check SPF for all domains: 

{{File|main.cf|use SPF|<pre>
# (Under smtpd_recipient_restrictions add:)
check_policy_service unix:private/policy-spf
</pre>
}}

{{Note|If you're experiencing problems with SPF, e.g. when using <code>fetchmail</code> , you might want to enable SPF for certain domains only.}}

== Конфигурация amavisd-new для использования MySQL ==

=== Настройка MySQL ===

{{Note|This has not been tested on versions higher than 2.2. Feedback is welcome :)}}

For large domains the default values you can set in {{Path|amavisd.conf}} might not suit all users. If you configure amavisd-new with MySQL support you can have individual settings for users or groups of users. 

{{Cmd|mysql -u root -p mysql|output=<pre>
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 78 to server version: 4.0.18-log
  
Type 'help;' or '\h' for help. Type '\c' to clear the buffer.
</pre>}}

{{Cmd|Создаем базу данных maildb;|prompt=mysql> 
|GRANT INSERT,UPDATE,DELETE,SELECT ON maildb.* TO 'mail'@'localhost' IDENTIFIED BY 'very_secret_password';
|use maildb;}}

Now that the database is created we'll need to create the necessary tables. You can cut and paste the following into the mysql prompt: 

{{Code|MySQL table layout|<pre>
CREATE TABLE users (
    id         int unsigned NOT NULL auto_increment,
    priority   int          NOT NULL DEFAULT '7',  -- 0 is low priority
    policy_id  int unsigned NOT NULL DEFAULT '1',
    email      varchar(255) NOT NULL,
    fullname   varchar(255) DEFAULT NULL,    -- not used by amavisd-new
    local      char(1),     -- Y/N  (optional field, see note further down)
    PRIMARY KEY (id),
    KEY email (email)
    );
CREATE UNIQUE INDEX users_idx_email ON users(email);
  
# (any e-mail address, external or local, used as senders in wblist)
CREATE TABLE mailaddr (
   id         int unsigned NOT NULL auto_increment,
   priority   int          NOT NULL DEFAULT '7',  -- 0 is low priority
   email      varchar(255) NOT NULL,
   PRIMARY KEY (id),
   KEY email (email)
   );
CREATE UNIQUE INDEX mailaddr_idx_email ON mailaddr(email);
  
# (-- per-recipient whitelist and/or blacklist,
# -- puts sender and recipient in relation wb)
# (white or blacklisted sender)
CREATE TABLE wblist (
   rid        int unsigned NOT NULL,     -- recipient: users.id
   sid        int unsigned NOT NULL,     -- sender:    mailaddr.id
   wb         char(1) NOT NULL, -- W or Y / B or N / space=neutral
   PRIMARY KEY (rid,sid)
   );
  
CREATE TABLE policy (
   id               int unsigned NOT NULL auto_increment,
   policy_name      varchar(32),     -- not used by amavisd-new
   virus_lover          char(1),     -- Y/N
   spam_lover           char(1),     -- Y/N  (optional field)
   banned_files_lover   char(1),     -- Y/N  (optional field)
   bad_header_lover     char(1),     -- Y/N  (optional field)
   bypass_virus_checks  char(1),     -- Y/N
   bypass_spam_checks   char(1),     -- Y/N
   bypass_banned_checks char(1),     -- Y/N  (optional field)
   bypass_header_checks char(1),     -- Y/N (optional field)
   spam_modifies_subj   char(1),     -- Y/N (optional field)
   spam_quarantine_to   varchar(64) DEFAULT NULL, -- (optional field)
   spam_tag_level  float,  -- higher score inserts spam info headers
   spam_tag2_level float DEFAULT NULL,  -- higher score inserts
               -- 'declared spam' info header fields
   spam_kill_level float,  -- higher score activates evasive actions, e.g.
               -- reject/drop, quarantine, ...
               -- (subject to final_spam_destiny setting)
   PRIMARY KEY (id)
  );
</pre>
}}

{{Note|If you have problems using copy/paste you might have to copy this somewhere else and clean out the unneeded characters.}}

{{Note|Lookups trying to match email are done with raw (rfc2821-unquoted and unbracketed) addresses as a key, i.e.: <code>John "Funny" Smith@example.com</code>}}

{{Note|Lookups are performed in the following order: <code>SQL</code> , <code>LDAP</code> , <code>hash</code> , <code>ACL</code> , <code>regexp</code> , <code>constant</code> . The first that returns a definitive answer (not <code>undef/NULL</code> ) stops the search.}}

If you wish to use whitelisting and blacklisting you must add the sender and receiver to <code>mailadr</code> after which you create the relation between the two e-mail addresses in <code>wblist</code> and state if it is whitelisting ( <code>W</code> ) or blacklisting ( <code>B</code> ). 

Now that we have created the tables let's insert a test user and a test policy: 

{{Code|Create test user and test policy|<pre>
INSERT INTO users
   SET
      id         =1,
      priority   =9,
      policy_id  =1,
      email      ="johndoe@example.com",
      fullname   ="John Doe",
      local      ="Y";
  
INSERT INTO policy
   SET
      id                     =1,
      policy_name            ="Test policy 1",
      virus_lover            ="N",
      spam_lover             ="N",
      banned_files_lover     ="N",
      bad_header_lover       ="N",
      bypass_virus_checks    ="N",
      bypass_spam_checks     ="N",
      bypass_banned_checks   ="N",
      bypass_header_checks   ="N",
      spam_modifies_subj     ="N",
      spam_quarantine_to     =NULL,
      spam_tag_level         =-50.0,
      spam_tag2_level        =7.0,
      spam_kill_level        =10.0;
</pre>
}}

{{Note|Copy this to somewhere else and adjust to suit your own environment.}}

{{Note|<code>local</code> should be set to<code>Y</code> otherwise the mail will not be scanned for spam.}}

This inserts a test user and a Test policy. Adjust these examples to fit your needs. Further explanation of the configuration names can be found in {{Path|amavisd.conf}} . 

=== Конфигурация amavisd для использования MySQL ===

Now that MySQL is ready we need to tell amavis to use it: 

{{File|amavisd.conf|Update to use MySQL|<pre>
@lookup_sql_dsn =
   ( ['DBI:mysql:maildb:host1', 'mail', 'very_secret_password']  );
  
# (For clarity uncomment the default)
$sql_select_policy = 'SELECT *,users.id FROM users,policy'.
   ' WHERE (users.policy_id=policy.id) AND (users.email IN (%k))'.
   ' ORDER BY users.priority DESC';
  
# (If you want sender white/blacklisting)
   $sql_select_white_black_list = 'SELECT wb FROM wblist,mailaddr'.
     ' WHERE (wblist.rid=?) AND (wblist.sid=mailaddr.id)'.
     '   AND (mailaddr.email IN (%k))'.
     ' ORDER BY mailaddr.priority DESC';
</pre>
}}

== Конфигурация Spamassassin для использования MySQL ==

As of Spamassassin 3.0 it is possible to store the Bayes and AWL data in a MySQL database. We will use MySQL as the backend as it can generally outperform other databases. Also, using MySQL for both sets of data makes system management much easier. Here I will show how to easily accomplish this. 

First start out by creating the new MySQL user and then create the needed tables. 

{{RootCmd|mysql -u root -p mysql|output=<pre>
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 78 to server version: 4.0.18-log
  
Type 'help;' or '\h' for help. Type '\c' to clear the buffer.
</pre>}}

{{Cmd|Создаем базу данных dbname;|prompt=mysql> 
|GRANT INSERT,UPDATE,DELETE,SELECT ON dbname.* TO 'dbuser'@'localhost' IDENTIFIED BY 'another_very_secret_password';
|use dbname;}}

Now that the database is created we'll create the necessary tables. You can cut and paste the following into the mysql prompt: 

{{Code|MySQL table layout|<pre>
      CREATE TABLE bayes_expire (
          id                    int(11)         NOT NULL default '0',
          runtime               int(11)         NOT NULL default '0',
          KEY bayes_expire_idx1 (id)
          ) TYPE=MyISAM;
  
      CREATE TABLE bayes_global_vars (
          variable              varchar(30)     NOT NULL default '',
          value                 varchar(200)    NOT NULL default '',
          PRIMARY KEY           (variable)
          ) TYPE=MyISAM;
  
      INSERT INTO bayes_global_vars VALUES ('VERSION','3');
  
      CREATE TABLE bayes_seen (
          id                    int(11)         NOT NULL default '0',
          msgid                 varchar(200) binary NOT NULL default '',
          flag                  char(1)         NOT NULL default '',
          PRIMARY KEY           (id,msgid)
          ) TYPE=MyISAM;
  
      CREATE TABLE bayes_token (
          id                    int(11)         NOT NULL default '0',
          token                 char(5)         NOT NULL default '',
          spam_count            int(11)         NOT NULL default '0',
          ham_count             int(11)         NOT NULL default '0',
          atime                 int(11)         NOT NULL default '0',
          PRIMARY KEY           (id, token),
          INDEX (id, atime)
          ) TYPE=MyISAM;
  
      CREATE TABLE bayes_vars (
          id                    int(11)         NOT NULL AUTO_INCREMENT,
          username              varchar(200)    NOT NULL default '',
          spam_count            int(11)         NOT NULL default '0',
          ham_count             int(11)         NOT NULL default '0',
          token_count           int(11)         NOT NULL default '0',
          last_expire           int(11)         NOT NULL default '0',
          last_atime_delta      int(11)         NOT NULL default '0',
          last_expire_reduce    int(11)         NOT NULL default '0',
          oldest_token_age      int(11)         NOT NULL default '2147483647',
          newest_token_age      int(11)         NOT NULL default '0',
          PRIMARY KEY           (id),
          UNIQUE bayes_vars_idx1 (username)
          ) TYPE=MyISAM;
  
      CREATE TABLE awl (
          username              varchar(100)    NOT NULL default '',
          email                 varchar(200)    NOT NULL default '',
          ip                    varchar(10)     NOT NULL default '',
          count                 int(11)         default '0',
          totscore              float           default '0',
          PRIMARY KEY           (username,email,ip)
          ) TYPE=MyISAM;
</pre>
}}

{{Important|The <code>INSERT</code> line is needed otherwise Spamassassin will not work.}}

{{Note|This is also available in the source tarball in the files {{Path|awl_mysql.sql}} and {{Path|bayes_mysql.sql}} .}}

=== Конфигурация Spamassassin для использования MySQL ===

If you have an old Bayes database in the DBM database and want to keep it follow these instructions: 

{{RootCmd|su - amavis}}

{{Cmd|sa-learn --sync
|sa-learn --backup > backup.txt
|sa-learn --restore backup.txt}}

{{Note|Note that the last step should only be performed after the MySQL database and {{Path|secrets.cf}} have been updated.}}

Now give Spamassassin the required info: 

{{File|/etc/mail/spamassassin/secrets.cf||<pre>
# (Tell Spamassassin to use MySQL for bayes data
bayes_store_module              Mail::SpamAssassin::BayesStore::SQL
bayes_sql_dsn                   DBI:mysql:sa_bayes:localhost:3306
bayes_sql_username              db_name
bayes_sql_password              another_very_secret_password
  
# (Tell Spamassassin to use MySQL for AWL data
auto_whitelist_factory          Mail::SpamAssassin::SQLBasedAddrList
user_awl_dsn                    DBI:mysql:sa_bayes:localhost:3306
user_awl_sql_username           db_name
user_awl_sql_password           another_very_secret_password
</pre>
}}

Next, change its permissions for proper security: 

{{RootCmd|chmod 400 /etc/mail/spamassassin/secrets.cf}}

{{Note|To create a very secret password use <code>emerge app-admin/makepasswd</code> and <code>makepasswd -chars{{=}}8</code>}}

Now all you have to do is <code>/etc/init.d/amavisd restart</code> .

== Устранение проблем ==

=== Amavisd-new ===

To troubleshoot Amavisd-new start out by stopping it with <code>/etc/init.d/amavisd stop</code> and then start it manually in the foreground with <code>amavisd debug</code> and watch it for anomalies in the output. 

=== Spamassassin ===

To troubleshoot Spamassassin you can filter an email through it with <code>spamassassin -D < mail</code> . To ensure that the headers are intact you can move it from another machine with IMAP. 

{{Note|If you need to troubleshoot you have to enable login for the user <code>amavis</code> by changing the login shell in {{Path|/etc/passwd}} to {{Path|/bin/bash}} .}}

If you want you can make get the same information and more with Amavisd-new using <code>amavisd debug-sa</code> . 

=== Повторяющиеся действия после установки ===

Некоторые из действий, описанных в данной статье нужно повторять после обновлений. Например, команду <code>chown -R amavis:mailusers</code> из раздела [[#doc_chap6]] нужно повторять после каждого обновления amavisd-new. 

К счастью, Gentoo дает вам способ сделать это автоматически. В главе [http://www.gentoo.org/doc/ru/handbook/handbook-amd64.xml?part=3&chap=6#doc_chap3 вмешиваемся в процесс установки] , настольная книга Gentoo объясняет, как выполнять задачи после установки конкретного пакета, вроде такого: 

{{Code|Пример bashrc для запуска вышеописанного chown|<pre>
if [ "${PN}" == "amavisd-new" ] &&
   [ "${EBUILD_PHASE}" == "postinst" ]; 
then
  chown -R amavis:mailusers /var/amavis/.maildir
fi
</pre>
}}

=== Получение помощи ===

Если вам нужна помощь, то можете зайти в список рассылки amavis-user. Перед тем, как вы зададите вопрос, попробуйте поискать в [http://marc.theaimsgroup.com/?l=amavis-user архиве списка рассылки Amavis User] . Если вы не найдете там ответа, вы можете подписаться на [https://lists.sourceforge.net/lists/listinfo/amavis-user список рассылки Amavis User] 

Если ваш вопрос конкретно относится к SpamAssassin, DCC, Razor или Postfix, зайдите на их домашние страницы, описанные ниже. 

== Источники ==

=== Для более детальной информации ===

* [http://www.ijs.si/software/amavisd/INSTALL Установка Amavisd-new] 
* [http://www.ijs.si/software/amavisd/README.postfix Документация по использованию Amavisd-new с Postfix] 
* [http://www.ijs.si/software/amavisd/amavisd-new-docs.html#pbanks Документация по банку политик Amavisd-new] 
* [http://spamassassin.apache.org/full/3.0.x/dist/sql/README Документация по SQL в Spamassassin] 
* [http://www.greylisting.org Грейлистинг] 
* [http://www.postfix.org/FILTER_README.html Политики SMTPD для Postfix] 
* [http://www.unixwiz.net/techtips/postfix-HELO.html Блокирование спамеров с помощью контроля HELO Postfix] 
* [http://www.linuxjournal.com/article.php?sid=7327 Обзор] 
* [http://jimsun.linxnet.com/misc/postfix-anti-UCE.txt Подсказки от Jim Seymour по поводу Postfix Anti-UCE] 

=== Общие источники ===

* [http://www.spamassassin.org Spamassassin]
* [http://www.ijs.si/software/amavisd/ Amavisd-new]
* [http://www.ijs.si/software/amavisd/amavisd-new-docs.html Кусочки документации по Amavisd-new] 
* [http://razor.sourceforge.net/ Vipuls's Razor]
* [http://pyzor.sourceforge.net/ Pyzor]
* [http://www.rhyolite.com/anti-spam/dcc/ Distributed Checksum Clearinghouse] 
* [http://www.renaissoft.com/projects/maia/ Maia Mailguard] 

=== Другая документация ===

* [http://www.flakshack.com/anti-spam/ Достаточно защищенный анти-спам шлюз с использованием OpenBSD, Postfix, Amavisd-new, SpamAssassin, Razor и DCC] 

== Благодарности ==

Мы хотели бы поблагодарить следующих авторов и редакторов за их вклад в это руководство:


* Sune Kloppenborg Jeppesen
* Jens Hilligs
* Joshua Saddler

[[Category:Server and Security]]
