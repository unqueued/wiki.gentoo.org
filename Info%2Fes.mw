<languages />

Está guía muestra cómo navegar a través de las páginas info utilizando la orden info.

== Introducción ==

=== ¿Qué es info? ===

La mayoría de usuarios deberían estar familiarizados con el sistema de documentación <code>man</code>. Aunque man es una buena herramienta para buscar rápidamente algunos términos adolece de la estructura de enlazar las páqinas estre sí. Aquí es donde aparece <code>info</code>. Las páginas info se construyen utilizando las herramientas <code>texinfo</code> que pueden enlazar con otras páginas, crear menús y, en general, facilitar la navegación. La siguientes sección repasa la disposición de las páginas info. 

=== Disposición de las páginas info ===

Las páginas principales de info se almacenan en {{Path|/usr/share/info}}. Al contrario que en el estilo en el que disponen los directorios de man {{Path|/usr/share/info}} contiene una vasta y extensa colección de ficheros. Estos ficheros tienen el siguiente formato: 

{{CodeBox|title=info file format|1=
pagename.info[-node].gz
}}

<code>pagename</code> es el nombre de la página (por ejemplo: <code>wget</code>). <code>[-node]</code> es una construcción opcional que designa otro nivel de nodos (normalmente se referencian por el nivel más alto del documento info en cuestión). Para ahorrar espacio, estas páginas info se comprimen utilizando el formato de compresión <code>gzip</code>. Se pueden listar páginas info adicionales con la variable de entorno <code>INFOPATH</code> (normalmente se define en varios ficheros en {{Path|/etc/env.d/}} files). Para comenzar, es importante conocer el fichero {{Path|/usr/share/info/dir}}. Este fichero especial se utiliza cuando info se lanza sin argumentos. Contiene un listado de todas las páginas info disponibles para que los usuarios las puedan visualizar. Para comenzar a navegar a través de infor comenzaremos lanzándolo sin argumentos: 

{{Cmd|info}}

Ahora en el siguiente capítulo echaremos un vistazo a cómo se realiza la navigación básica en info.

== Trabajar con páginas info ==

=== Navegar con menús ===

Ahora que se ha lanzado info, se muestra una pantalla similar a ésta: 

{{CodeBox|title=Pantalla ejemplo de info|1=
File: dir,      Node: Top       This is the top of the INFO tree
 
  This (the Directory node) gives a menu of major topics.
  Typing "q" exits, "?" lists all Info commands, "d" returns here,
  "h" gives a primer for first-timers,
  "mEmacs<Return>" visits the Emacs manual, etc.
 
  In Emacs, you can click mouse button 2 on a menu item or cross reference
  to select it.
 
* Menu:
 
User Interface Toolkit
* GDK: (gdk).           The General Drawing Kit
* GTK: (gtk).           The GIMP Toolkit
 
GNU programming tools
* Autoconf v2.1: (autoconf).         Create source code configuration scripts.
}}

Ahora hay un puñado de entradas con un asterisco delante. Se trata de elementos de menú para navegar a través de distintos niveles. Hay dos formas de seleccionar menús. Hablaremos de la primera ahora y de la segunda más tarde. En primer lugar eche un vistazo a la página info de <code>wget</code>. Para hacer esto utilice la flecha de movimiento hacia abajo hasta que alcance la línea para wget: 

{{CodeBox|title=Navegación hacia la entrada de menú infor de wget|1=
Network Applications
* GnuTLS: (gnutls).                     Package for Transport Layer Security.
* Wget: (wget).         The non-interactive network downloader.
* certtool: (gnutls)Invoking certtool.  Manipulate certificates and keys.
* gnutls-cli: (gnutls)Invoking gnutls-cli.      GNU TLS test client.
* gnutls-cli-debug: (gnutls)Invoking gnutls-cli-debug.  GNU TLS debug client.
* gnutls-serv: (gnutls)Invoking gnutls-serv.    GNU TLS test server.
* srptool: (gnutls)Invoking srptool.    Simple SRP password tool.
}}

Once you get to this line, hit the {{Key|Enter}} key to select the menu item. This will bring up the info page for <code>wget</code> : 

{{CodeBox|title=La página info de wget|1=
File: wget.info,  Node: Top,  Next: Overview,  Up: (dir)
 
Wget 1.10.2
***********
 
This manual documents version 1.10.2 of GNU Wget, the freely available
utility for network downloads.
 
   Copyright (C) 1996-2005 Free Software Foundation, Inc.
 
* Menu:
 
* Overview::            Features of Wget.
* Invoking::            Wget command-line arguments.
* Recursive Download::  Downloading interlinked pages.
* Following Links::     The available methods of chasing links.
* Time-Stamping::       Mirroring according to time-stamps.
* Startup File::        Wget's initialization file.
}}

Now that we have an info page up, the next section will look at basic navigation.

=== Basic navigation ===

In terms of nodes, this is considered the <code>Top</code> node for the wget page. Consider the <code>Top</code> node to be the same as the table of contents for that particular info page. Now to navigate the actual page itself, you have a couple of different methods. First off is the standard info method. This is using the {{Key|Space}} key to move forward a page and the {{Key|Backspace}}/{{Key|Delete}} keys to move back a page. This is the recommended method as it automatically advances/retreats to the appropriate node in the document. This allows for a somewhat linear browsing for those used to man pages. Another way is through the {{Key|Page up}}/{{Key|Page down}} keys. These work, but they will not advance/retreat like {{Key|Space}}/{{Key|Backspace}}/{{Key|Delete}} will. If you want to skip entire nodes without using {{Key|Space}}/{{Key|Backspace}}/{{Key|Delete}}, you can also use the {{Key|[}} (advance backwards) and {{Key|]}} (advance forwards) keys. 

As mentioned earlier, there are 2 ways of navigating menus. The other way will now be described here. The numbers <code>1-9</code> can be used to reference to the first-ninth menu entries in a document. This can be used to quickly peruse through documents. For example, we'll use {{Key|3}} to reach the <code>Recursive Download</code> menu entry. So press {{Key|3}} and it will bring up the <code>Recursive Download</code> screen: 

{{CodeBox|title=Resulting Recursive Download screen|1=
File: wget.info,  Node: Recursive Download,  Next: Following Links,  Prev: Invoking,  Up: Top
 
3 Recursive Download
********************
 
GNU Wget is capable of traversing parts of the Web (or a single HTTP or
FTP server), following links and directory structure.  We refer to this
as to "recursive retrieval", or "recursion".
}}

Now we're at the <code>Recursive Download</code> screen. Here is a good time to note a few things. First off the top header section. This header shows the navigation capable from this particular screen. The page indicated by <code>Next:</code> can be accessed by pressing the {{Key|n}} key, and the page indicated by <code>Prev:</code> can be accessed by pressing the {{Key|p}} key. Please note that this will only work for the same level. If overused you could round up in totally unrelated content. It's better to use {{Key|Space}}/{{Key|Backspace}}/{{Key|Delete}}/{{Key|[}}/{{Key|]}} to navigate in a linear fashion. 

If for some reason you get lost, there are a few ways to get out. First is the {{Key|t}} key. This will take you straight to the toplevel (table of contents) for the particular info page you're browsing. If you want to return to the last page you looked out, you can do so with the {{Key|l}} key. If you want to go to the above level, you can do so with the {{Key|u}} key. Now that you have some idea of navigating a page, the next chapter will look at searching for content.

== Searching through info ==

=== Navigating to other info pages ===

Now that you can navigate an individual info page, it's important to look at accessing other info pages. The first obvious way is to go to the info page through the <code>dir</code> index listing of info pages. To get to the <code>dir</code> index from deep within a document, simply press the {{Key|d}} key. From there you can search for the appropriate page you want. However, if you know the actual page, there is an easier way through the <code>Goto node ({{Key|g}} key)</code> command. To go to an info page by name, type {{Key|g}} to bring up the prompt and enter the name of the page in parentheses: 

{{CodeBox|title=Going to an info page by name|1=
* Startup File::        Wget's initialization file.
* Examples::            Examples of usage.
* Various::             The stuff that doesn't fit anywhere else.
* Appendices::          Some useful references.
* Copying::             You may give out copies of Wget and of this manual.
--zz-Info: (wget.info.gz)Top, 24 lines --Top-------------------------------
Goto node: (libc)
}}

This will bring up the libc page as shown here: 

{{CodeBox|title=Result of the Goto node command|1=
File: libc.info,  Node: Top,  Next: Introduction,  Prev: (dir),  Up: (dir)
 
Main Menu
*********
 
This is Edition 0.10, last updated 2001-07-06, of `The GNU C Library
Reference Manual', for Version 2.3.x of the GNU C Library.
 
* Menu:
 
* Introduction::                 Purpose of the GNU C Library.
}}

Now that we know how to go to info pages by name, the next section will look at searching for pieces of information using the info page's index.

=== Searching using an index ===

In this example we'll see how to lookup the <code>printf</code> function of the c library using the <code>libc</code> info page's index. You should still be at the libc info page from the last section, and if not, use the Goto node command to do so. To utilize the index search, hit the {{Key|i}} key to bring up the prompt, then enter your search term. We'll do so for <code>printf</code> below: 

{{CodeBox|title=Entering an index search query|1=
* Character Set Handling::       Support for extended character sets.
* Locales::                      The country and language can affect the
                                   behavior of library functions.
* Message Translation::          How to make the program speak the user's
                                   language.
--zz-Info: (libc.info.gz)Top, 1291 lines --Top-- Subfile: libc.info-1.gz-----
Index entry: printf
}}

After pressing enter upon completion of our query, we're brought to the <code>libc</code> definition for <code>printf</code>: 

{{CodeBox|title=Result of the index search query|1=
File: libc.info,  Node: Formatted Output Functions,  Next: Dynamic Output,  Prev: Other Output Conversions,  Up: Formatted Output
 
12.12.7 Formatted Output Functions
----------------------------------
 
This section describes how to call `printf' and related functions.
Prototypes for these functions are in the header file `stdio.h'.
Because these functions take a variable number of arguments, you _must_
declare prototypes for them before using them.  Of course, the easiest
way to make sure you have all the right prototypes is to just include
}}

We've now successfully performed a search using the <code>libc</code> info page index. However, sometimes what we want is in the page itself. The next section will look at performing searches within the page.

=== Searching using the search command ===

Starting from the previous location at the <code>Formatted Output Functions</code> node, we'll look at searching for the <code>sprintf</code> variation of the <code>printf</code> function. To perform a search, press the {{Key|s}} key to bring up the search prompt, and then enter the query (sprintf in this case): 

{{CodeBox|title=Entering a search query|1=
 -- Function: int wprintf (const wchar_t *TEMPLATE, ...)
     The `wprintf' function prints the optional arguments under the
     control of the wide template string TEMPLATE to the stream
     `stdout'.  It returns the number of wide characters printed, or a
--zz-Info: (libc.info.gz)Formatted Output Functions, 127 lines --Top-- Subfile: libc.info-3.gz--
Search for string []: sprintf
}}

Hit {{Key|Enter}} and it will show the result of the query: 

{{CodeBox|title=Result of the search query|1=
-- Function: int sprintf (char *S, const char *TEMPLATE, ...)
     This is like `printf', except that the output is stored in the
     character array S instead of written to a stream.  A null
     character is written to mark the end of the string.
 
     The `sprintf' function returns the number of characters stored in
     the array S, not including the terminating null character.
}}

And we have the function we need.

== Conclusion ==

This concludes the overview of using info to view info pages. As always comments are both welcome and appreciated.

=== Additional Program Resources ===

In order to make things easier for those that wish to browse info pages through a more friendly graphical interface, the following are available: 

* {{Package|app-text/info2html}} - Convert info pages to a browse-able HTML format
* {{Package|app-text/pinfo}} - <code>ncurses</code> based info viewer
* {{Package|app-text/tkinfo}} - a <code>tcl/tk</code> based info browser
* {{Package|app-vim/info}} - a <code>vim</code> based info browser

The <code>KDE</code> browser <code>Konqueror</code> also allows you to browse info pages through the <code>info:</code> URI.

{{Migrated|originalauthors=Chris White}}
