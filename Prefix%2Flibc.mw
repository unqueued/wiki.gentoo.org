This is a project to support libc inside a [[Project:Prefix|Prefix]], so called "RAP" (Rap Ain't Prefix). See also [[Project:Android]]. A general use case is for Prefix on RHEL 5 (CentOS 5 ans SL 5), where the host glibc-2.5 is too old to support modern features as fortify ({{Bug|289757}}).

Classical Prefix is based on rpath. The differences are summerized in this table.

{| class="wikitable" style="text-align: center"
!
! Prefix-rpath
! Prefix/libc (sysroot method, official)
! Prefix/libc (native paths method, experimental)
|-
| feature name || prefix-rpath || prefix-standalone ||
|-
| linux profile || prefix/linux || prefix/linux-standalone ||
|-
| linux keyword || ~ARCH-linux || ARCH ~ARCH ||
|-
| portage tree || [https://gitweb.gentoo.org/repo/proj/prefix.git prefix.git] || [https://gitweb.gentoo.org/repo/gentoo.git/ gentoo.git] overlaied with [https://gitweb.gentoo.org/proj/android.git/ android.git] ||
|-
| {{Package|sys-devel/gcc}} || || EXTRA_ECONF+=(--with-sysroot=$EPREFIX) but donot pass --sysroot to ld, prefix dynamic loader || change NATIVE_SYSTEM_HEADER_DIR, STANDARD_STARTFILE_PREFIX, prefix dynamic loader
|-
| {{Package|sys-devel/binutils}} || || Prefix NATIVE_LIB_DIRS || --with-lib-path=${EPREFIX}/usr/lib:${EPREFIX}/lib
|-
| {{Package|sys-devel/binutils-config}} || inject -rpath and -R ||
|-
| {{Package|sys-libs/glibc}} || {{No}} || {{Yes}} Prefix hardcoded /etc,/usr,/var,/bin || {{Yes}}
|}

== Installation ==

Download the Gentoo RAP [http://dev.gentoo.org/~heroxbd/bootstrap-rap.sh bootstrap-rap.sh]. You can use various ways to obtain the script and get it to a place where you can execute it. Once in position, preform the following commands:
{{Cmd| chmod 755 bootstrap-rap.sh | ./bootstrap-rap.sh | output=<pre>
(follow the instructions)</pre>
}}

That's all! The script will guide you through the full process, and tells you how to start your freshly bootstrapped Gentoo RAP system if it successfully runs up till the end. In normal cases, you don't need any more than just this.

== Tested Distributions ==
At the moment, RAP supports Linux distributions only.  The following tables tracks the tested distributions with the script. Feel free to add your own.

{| class="table sortable table-striped table-condensed"
|-
! Distribution !! Version !! ARCH !! linux !! glibc !! gcc !! binutils !! Tester !! Works till !! ARCH of RAP !! Last tried
|-
| CentOS || 7.2 || amd64 || 4.3.0 || 2.17 || 4.8.5 || 2.23.52 || [[User:heroxbd|heroxbd]] || {{Yes|the end}} || amd64 || 20160608
|-
| CentOS || 6.8 || amd64 || 2.6.32 || 2.12 || 4.4.7 || 2.20.51 || [[User:heroxbd|heroxbd]] || {{Yes|the end}} || amd64 || 20160604
|-
| CentOS || 6.8 || amd64 || 2.6.32 || 2.12 || 4.4.6 || 2.20.51 || [[User:xdej|xdej]] || {{Yes|the end}} || amd64 || 20160606
|-
| CentOS || 5.6 || x86 || 2.6.18 || 2.5 || 4.1.2 || 2.17.50 || [[User:xdej|xdej]] || {{Yes|the end}} || x86 || 20160606
|-
| Debian || sid || amd64 || 4.3.0 || 2.22 || 5.3.1 || 2.26 || [[User:heroxbd|heroxbd]] || {{Yes|the end}} || amd64 || 20160603
|-
| Debian || 7.10 || amd64 || 3.16.0 || 2.13 || 4.7.2 || 2.22 || [[User:heroxbd|heroxbd]] || {{Yes|the end}} || amd64 || 20160615
|-
| Debian || 7.10 || amd64 || 3.16.0 || 2.13 || 4.7.2 || 2.22 || [[User:heroxbd|heroxbd]] || {{Yes|the end}} || x86 || 20160608
|-
| Debian || 7.11 || x86 || 3.16.0 || 2.13 || 4.7.2 || 2.22 || [[User:heroxbd|heroxbd]] || {{Yes|the end}} || x86 || 20160608
|-
| Debian || 8.4 || amd64 || 3.16.0 || 2.19 || 4.9.2 || 2.25 || [[User:heroxbd|heroxbd]] || {{Yes|the end}} || amd64 || 20160607
|-
| Fedora || 10 || x86 || 2.6.27 || 2.9 || 4.3.2 || 2.18.50 || [[User:heroxbd|heroxbd]] ||{{Yes|the end}}|| x86 || 20160604
|-
| Gentoo || ~ || amd64 || 4.3.0 || 2.20 || 5.3.0 || 2.26 || [[User:heroxbd|heroxbd]] || {{Yes|the end}} || amd64 || 20160605
|-
| Gentoo || 13.0 || amd64 || 3.8.13 || 2.15 || 4.6.3 || 2.23.1 || [[User:heroxbd|heroxbd]] || {{Yes|the end}} || amd64 || 20160608
|-
| RHEL || 6.4 || amd64 || 2.6.32 || 2.12 || 4.4.7 || 2.20.51 || [[User:heroxbd|heroxbd]] || {{Yes|the end}} || amd64 || 20160615
|-
| RHEL || 5.10 || amd64 || 2.6.18 || 2.5 || 4.1.2 || 2.17.50 || [[User:heroxbd|heroxbd]] || {{Yes|the end}} || amd64 || 20160615
|-
| Ubuntu || 14.04 || amd64 || 3.13.0 || 2.19 || 4.8.4 || 2.24 || [[User:heroxbd|heroxbd]] || {{Yes|the end}} || amd64 || 20160604
|-
| Arch ||  2016.06.01 || amd64 || 4.5.4 || 2.23 || 6.1.1 || 2.26.0 || yangsheng6810 || {{Yes|the end}} || amd64 || 20160615
|}

== Tips ==
=== Synchronize with the RAP repository ===
The [https://gitweb.gentoo.org/proj/android.git/ RAP repository] is meant to hold the patches that will be quickly merged into the [https://gitweb.gentoo.org/repo/gentoo.git main gentoo repository].  There is no need to update it.  However, in reality some patches that are not yet accepted by the main gentoo lands in RAP.  To synchronize with the RAP repository,
{{Cmd|emerge dev-vcs/git # needed for sync|[ -d ${EPREFIX}/usr/portage-stage/.git ] {{!}}{{!}} rm -rf ${EPREFIX}/usr/portage-stage|emaint  sync -r rap|}}

=== Compile Inside Memory ===
On a cluster node with large memory and shared network filesystem, compiling in a memory tmpfs can be significantly faster.  /dev/shm is mounted as tmpfs by many distributions. For example:
{{FileBox|filename=EPREFIX/etc/portage/make.conf|1=
PORTAGE_TMPDIR=/dev/shm
}}
Before calling bootstrap-rap.sh, it can be done with
{{Cmd|export PORTAGE_TMPDIR{{=}}/dev/shm}}

=== Add an en_US.UTF-8 locale ===
We are having our own libc, the locales should be generated in Prefix.  Add an entry to EPREFIX/etc/locale.gen
{{FileBox|filename=EPREFIX/etc/locale.gen|1=
...
en_US.UTF-8 UTF-8
...
}}
Then generate the locale by
{{Cmd|locale-gen|output=<pre>
 * Using locale.gen from ROOT /auto/external/buffalo/data02a/gentoo/etc/
 * Generating locale-archive: forcing # of jobs to 1
 * Generating 1 locales (this might take a while) with 1 jobs
 *  (1/1) Generating en_US.UTF-8
 * Generation complete
</pre>}}

For more details, refer to the [[Handbook:Parts/Installation/Base#Configure_locales|handbook]].

=== Use a nearby mirror ===
The bootstrap script needs to download quite a bit.  It can be accelerated by using a Gentoo mirror nearby.  To use a mirror, GENTOO_MIRRORS should be set both in the environment
{{Cmd|export GENTOO_MIRRORS{{=}}http://mirrors.tuna.tsinghua.edu.cn/gentoo|./bootstrap-rap.sh}}
and make.conf:
{{FileBox|filename=EPREFIX/etc/portage/make.conf EPREFIX/tmp/etc/portage/make.conf|1=
...
GENTOO_MIRRORS{{=}}http://mirrors.tuna.tsinghua.edu.cn/gentoo
}}
Replace http://mirrors.tuna.tsinghua.edu.cn/gentoo with your favorite mirror.
For more details, refer to [[GENTOO_MIRRORS]].

The rsync mirror is set in repos.conf
{{FileBox|filename=EPREFIX/etc/portage/repos.conf|1=
...
[gentoo]
...
sync-type = rsync
sync-uri = rsync://mirrors.tuna.tsinghua.edu.cn/gentoo-portage
}}
Replace rsync://mirrors.tuna.tsinghua.edu.cn/gentoo-portage with your favorite mirror.  Refer to [https://wiki.gentoo.org/wiki//etc/portage/repos.conf repos.conf] for details.

== FAQ ==
=== In stage3, why should binutils be installed before glibc? ===
glibc has strict version dependence on binutils. Otherwise we get this error:
{{FileBox|filename=config.log|1=
configure:4896: checking for nm
configure:4912: found /usr/bin/nm
configure:4923: result: nm
configure:5016: error: 
*** These critical programs are missing or too old: as ld
*** Check the INSTALL file for required versions.
}}

== Trouble Shooting ==
RAP is expected to run on a wild variety of environments.  Let's document here the problems met during the bootstrap and the solutions made.
It is very funny to see how many host systems are badly crewed.
=== /bin/tar exists but does not work. The working one is in /usr/local/bin ===
{{Cmd|/bin/tar|strace /bin/tar|output=<pre>
bash: /bin/tar: Permission denied
execve("/bin/tar", ["/bin/tar"], [/* 142 vars */]) = -1 EACCES (Permission denied)</pre>}}

Solution: edit the script to prepend /usr/local/bin to PATH.

{{FileBox|filename=bootstrap-rap.sh|1=
        # the standard path we want to start with, override anything from
        # the user on purpose
-       PATH="/usr/bin:/bin"
+       PATH="/usr/local/bin:/usr/bin:bin"
}}
=== glibc in stage3 cannot be compiled ===
{{Cmd|./bootstrap-rap.sh|output=<pre>
...
gconv_conf.c: Assembler messages:
gconv_conf.c:443: Error: CFI instruction used without previous .cfi_startproc
gconv_conf.c:446: Error: CFI instruction used without previous .cfi_startproc
gconv_conf.c:541: Error: CFI instruction used without previous .cfi_startproc
gconv_conf.c:544: Error: CFI instruction used without previous .cfi_startproc
...</pre>}}

gcc-4.7.4 built in stage2 is bogus.  It does not generate [https://sourceware.org/binutils/docs/as/CFI-directives.html cfi assembly] correctly.

No fix to this bug is known.

=== Username becomes invalid inside RAP ===
RAP has its own glibc, which performs independent name service from the host.  The bootstrap script first tries to generate ''passwd'' and ''group'' from getent and links host /etc/{passwd,group} as fallback,
{{Cmd|getent passwd > ${EPREFIX}/etc/passwd {{!}}{{!}} ln -s /etc/passwd ${EPREFIX}/etc/passwd |getent group > ${EPREFIX}/etc/group {{!}}{{!}} ln -s /etc/group ${EPREFIX}/etc/group }} 

If usernames are provided by LDAP, sometimes it is configured so that a normal user cannot query the entire passwd or group by getent.  In that case portage breaks, will not be able to resolve the username and group.   An quick fix is to show yourself to Prefix by specifying who you are,
{{Cmd|alias id{{=}}$(which -a id {{!}} tail -n1) # use host id|alias getent{{=}}$(which -a getent {{!}} tail -n1) # use host getent|getent passwd $(id -u) > "${EPREFIX}/etc/passwd"|getent group $(id -g) > "${EPREFIX}/etc/group"}}
But other uses on the host cannot be resolved.  To get a fair sample of all users on the system, enumerate the /home directory,
{{Cmd|alias getent{{=}}$(which -a getent {{!}} tail -n1) # use host getent|alias stat{{=}}$(which -a stat {{!}} tail -n1) # use host stat|for d in /home/*; do stat -c '%u' $d; done {{!}} sort -u {{!}} xargs getent passwd > "${EPREFIX}/etc/passwd"|for d in /home/*; do stat -c '%g' $d; done {{!}} sort -u {{!}} xargs getent group > "${EPREFIX}/etc/group"}}

Another solution is to install nss_ldap in RAP.  Host nss_ldap library may be too old to be loaded by new glibc.  ''nss'' is part of glibc, which resolves uid/gid.
{{Cmd|emerge sys-auth/nss_ldap}}
Then copy the host ldap configurations (e.g. /etc/openldap) to RAP.  But this does not work if LDAP server requires a paraphrase to bind.

== See Also ==
A similar project, [http://sourceforge.net/projects/gentooandroid/ Gentoo On Unrooted Android]
