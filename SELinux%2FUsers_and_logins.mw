In an SELinux context, the first part is called the ''SELinux user''. The purpose of a SELinux user is to have an ''immutable'' part in a context (i.e. one that the user cannot change himself) both to assist in auditing (who did what) as well as access controls (users cannot work around SELinux user based restrictions). But a SELinux user is not the same as a Linux account. For that, ''user mappings'' are put in place that map a Linux user to a SELinux user.

== Introduction ==

The relation between SELinux users, Linux accounts, SELinux roles and the supported domains is shown in the following drawing.

[[File:SELinux_users.png|link=]]

=== SELinux users ===

A SELinux user is an identifier that administrators can use to limit which SELinux roles can be used. A Linux account is mapped to one (and only one) SELinux user, whereas a SELinux user can be linked to multiple roles.

As shown in the drawing above, SELinux users define which roles can be used. As roles define the privileges of a user, this is effectively used to limit the ability of users to run or execute particular applications.
* The <code>user_u</code> SELinux user linked with the <code>user_r</code> role. This role is allowed to run non-administrative applications (the set of supported SELinux domains). 
* The <code>staff_u</code> SELinux user on the other hand is linked with both the <code>staff_r</code> role and <code>sysadm_r</code> role. That means that users mapped to the <code>staff_u</code> SELinux user can switch between those two roles.
One of the supported domains, <code>newrole_t</code>, is meant for the <code>newrole</code> application which allows users to switch roles. As the <code>user_u</code> SELinux user does not need to switch roles, the <code>user_r</code> role is not allowed to use the <code>newrole_t</code> domain.

Let's take a look at the set of SELinux users enabled by default.

{| class="wikitable"
|- style="vertical-align: top; white-space: nowrap;"
! SELinux user
! Description
! Used for
|-
| unconfined_u
| SELinux user meant for unrestricted users. Unconfined users have hardly any restrictions in a SELinux context and are meant for systems where only Internet-facing services should run confined (i.e. the ''targeted'' SELinux policy store).
| All users on a targeted system
|-
| root
| The SELinux user meant for the root account
| The Linux root account
|-
| sysadm_u
| SELinux user with direct system administrative role assigned
| Linux accounts that only perform administrative tasks
|-
| staff_u
| SELinux user for operators that need to run both non-administrative commands (through the <code>staff_r</code> role) and administrative commands (through the <code>sysadm_r</code> role).
| Linux accounts used for both end user usage as well as administrative tasks
|-
| user_u
| SELinux user for non-privileged accounts
| Unprivileged Linux accounts
|-
| system_u
| Special SELinux user meant for system services
| Not used directly
|}

=== SELinux login mappings ===

SELinux login mappings allow for the Linux administrator to map a Linux account to a SELinux user. When a Linux user logs in, a specific user table is consulted which contains the mappings of users to SELinux users. Based on that information, the initial context is set up for the user (which also contains the SELinux role and user domain).

Unlike SELinux users, which can be linked with multiple SELinux roles, user mappings map a user to one (and only one) SELinux user. Multiple Linux users can be mapped to the same SELinux user though.

On a targeted system, all users are mapped to the <code>unconfined_u</code> SELinux user. Otherwise, administrative users are mapped to either <code>staff_u</code> or <code>sysadm_u</code> whereas unprivileged users are mapped to <code>user_u</code>.

== Managing login mappings ==

== Managing SELinux users ==
