The Asus C201 is a pretty fast and lightweight ARMv7-A (Cortex-A17) based chromebook. Its most distinguishing feature is that it is one of only a few devices already supported by Libreboot<ref>[https://libreboot.org/docs/hardware/#list-of-supported-hardware List of supported hardware], [https://libreboot.org Libreboot]. Retrieved on June 21st, 2019</ref>. Thus the factory firmware can optionally be replaced with entirely libre firmware. Instructions on how to do this can be found on the [https://libreboot.org/docs/install/c201.html Libreboot website].

== Hardware ==

{| class="table table-condensed table-striped" style="width: 100%;"
! scope="col" width="15%" |
! scope="col" width="35%" | Make/model
! scope="col" width="50%" | Notes
|-
| Board
| Veyron-Speedy
| filename of device tree binary: {{Path|rk3288-veyron-speedy.dtb}}
|-
| SoC
| Rockchip RK3288
|
|-
| RAM
| 4GB
| 2GB version available, DDR3
|-
| Firmware
| [https://coreboot.org/ Coreboot] with [https://chromium.googlesource.com/chromiumos/platform/depthcharge depthcharge] payload<ref>[https://www.coreboot.org/Payloads#Depthcharge Depthcharge payload], [https://doc.coreboot.org/payloads.html Coreboot payloads]. Retrieved on June 21st, 2019</ref>
| physical write-protection (screw), [https://libreboot.org Libreboot] supported
|-
| Boot media
| eMMC, SDXC or USB
|
|}

=== SoC (RK3288) ===

{| class="table table-condensed table-striped" style="width: auto;"
! scope="col" width="15%" | Component
! scope="col" width="20%" | Make/model
! scope="col" width="10%" | Status
! scope="col" width="15%" | Kernel driver(s)
! scope="col" width="10%" | Kernel version
! scope="col" width="30%" | Notes
|-
| CPU
| 4 x ARM Cortex-A17
| {{Yes|Works}}
|
| 4.15
| max @1,8GHz
|-
| GPU
| Mali-T764
| {{Partial|WIP}}
| Panfrost
| 5.2
| [https://gitlab.freedesktop.org/panfrost Status]
|-
| USB 2.0
| 
| {{Yes|Works}}
|
| 4.15
| 2 * USB-A
|-
| HDMI
|
| {{Partial|Untested}}
| dwhdmi
|
|
|-
| Analog Audio
| Rockchip I2S
| {{Yes|Works}}
| N/A
| 5.2
|
|}

=== Peripherals ===

{| class="table table-condensed table-striped" style="width: auto;"
! scope="col" width="15%" | Component
! scope="col" width="20%" | Make/model
! scope="col" width="10%" | Status
! scope="col" width="15%" | Kernel driver(s)
! scope="col" width="10%" | Kernel version
! scope="col" width="30%" | Notes
|-
| Display
| 11.6" @ 1366x768
| {{Yes|Works}}
|
| 4.15
| xorg-server via fbdev works
|-
| WiFi
| Broadcom
| {{Partial|Works}}
| brcmfmac
| 4.15
| works with [[#Built-in_wifi|proprietary blobs]]
|-
| Touchpad
| Elan I2C
| {{Yes|Works}}
| elan_i2c
| 4.15
|
|-
| Bluetooth
|
| {{Partial|Untested}}
|
|
|
|-
| Embedded controller
| Google
| {{Yes|Works}}
| cros_ec
| 4.15
|
|}

Mainline support is close to complete<ref>[http://opensource.rock-chips.com/wiki_Status_Matrix Status Matrix], [http://opensource.rock-chips.com/wiki_Main_Page Rockchip open source Document]. Retrieved on February 26th, 2019</ref>, so using {{Package|sys-kernel/gentoo-sources}} should yield the best overall experience of all options.

== Obtaining installation media ==

[[Creating_bootable_media_for_depthcharge_based_devices|Create the installation media]] manually. Alternatively have a look at [https://notabug.org/dimkr/devsus Devsus].

== Installing Gentoo ==

Consult [[Asus Chromebook C201/Installing Gentoo]] for instructions on how to install Gentoo on the Asus Chromebook C201.

== Built-in wifi ==

Built-in wifi requires the proprietary binary firmware blob {{c|brcmfmac4354-sdio.bin}}, provided by {{Package|sys-kernel/linux-firmware}}:

{{RootCmd
|emerge --ask sys-kernel/linux-firmware
}}

Furthermore the aforementioned binary expects a nvram, {{Path|/lib/firmware/brcm/brcmfmac4354-sdio.txt}}. Create it with the content provided by the ChromiumOS project: https://chromium.googlesource.com/chromiumos/overlays/board-overlays/+/master/overlay-veyron/chromeos-base/chromeos-bsp-veyron/files/firmware/brcmfmac4354-sdio.txt

The ChromiumOS project considers this file belonging to the BSP (Board Support Package) and considers upstreaming the file to {{Package|sys-kernel/linux-firmware}} as being pointless.<ref>[https://chromium.googlesource.com/chromiumos/third_party/linux-firmware/+/08b6ec4d1cac8dbac24addd2c6b36e5cf4f13923 ChromiumOS Git at Google]. Retrieved on February 25th, 2019</ref>

For additional background information regarding this nvram, consult the [https://wireless.wiki.kernel.org/en/users/drivers/brcm80211#firmware_installation1 Linux Wireless wiki].

== Example configurations ==

=== make.conf ===

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
CFLAGS="-O2 -pipe -march=armv7-a -mtune=cortex-a17 -mfpu=neon -mfloat-abi=hard -pipe -fomit-frame-pointer -fstack-protector-strong"
CXXFLAGS="${CFLAGS}"
CHOST="armv7a-unknown-linux-gnueabihf"
INPUT_DEVICES="libinput"
VIDEO_CARDS="fbdev"
}}

=== ACPI ===

{{FileBox|filename=/etc/acpi/default.sh|lang=bash|1=
#!/bin/sh
# /etc/acpi/default.sh
# Default acpi script that takes an entry for all actions

set $*

group=${1%%/*}
action=${1#*/}
device=$2
id=$3
value=$4

log_unhandled() {
	logger "ACPI event unhandled: $*"
}

case "$group" in
	jack)
		case "$id" in
			'plug')
				amixer -D hw:0 cset name='Left Speaker Mixer Left DAC Switch' off
				amixer -D hw:0 cset name='Right Speaker Mixer Right DAC Switch' off
				amixer -D hw:0 cset name='Headphone Switch Left' on
                                amixer -D hw:0 cset name='Headphone Switch Right' on
				;;
			'unplug')
				amixer -D hw:0 cset name='Left Speaker Mixer Left DAC Switch' on
                                amixer -D hw:0 cset name='Right Speaker Mixer Right DAC Switch' on
				amixer -D hw:0 cset name='Headphone Switch Left' off
                                amixer -D hw:0 cset name='Headphone Switch Right' off
				;;
			*) uhd $+;;
		esac
		log_unhandled $*
	;;
	button)
		case "$action" in
			#power)
					#pm-suspend
			#		log_unhandled $*
			#	;;

			lid)
				case "$id" in
					close) if [ $(cat /sys/class/power_supply/gpio-charger/online) -eq 0 ]; then
                                                        pm-suspend
                                                fi;;
					open) :;;
					*) uhd $*;;
				esac
				log_unhandled $*
				;;

			*)	log_unhandled $* ;;
		esac
		;;

	*)	log_unhandled $* ;;
esac
}}

This handles alternating between speaker and headphone jack when one is plugged in, as well as lid suspend when the charger is unplugged. Power button support can be added if desired, though keep in mind the device will simply turn on again when the lid is closed.
{{Note|It seems some mixer control names changed from 3.x to 4.x (i.e. Right Headphone Switch vs. Headphone Switch Right). If using a 3.x kernel, and this isn't working properly, ensure the names match up to what amixer says they should be.}}

=== Pulseaudio configuration ===

Add the following if using Pulseaudio:

{{FileBox|filename=/etc/pulse/default.pa|lang=bash|1=
load-module module-alsa-sink device=sysdefault
load-module module-alsa-source device=sysdefault
}}

See [https://wiki.debian.org/InstallingDebianOn/Asus/C201#Audio InstallingDebianOn/Asus/C201#Audio] for further information. VEYRON-I2S shipped with alsa, so it's unlikely to need to add Google's UCM files.

HDMI is not tested. It appeared under 3.14 as RockchipHDMI, but is missing under 4.13. Possibly a kernel config or UCM issue.

=== Keybinds ===

xbacklight doesn't work, however, a backlight device exists. This script can be used in tandem with xbindkeys as a replacement for xbacklight:

{{FileBox|filename=c201_backlight.sh|lang=bash|1=
#!/bin/bash
if [ "$(($(cat /sys/devices/platform/backlight/backlight/backlight/brightness)+$1))" -gt "255" ];then
        echo 255 > /sys/devices/platform/backlight/backlight/backlight/brightness
        exit
fi
if [ "$(($(cat /sys/devices/platform/backlight/backlight/backlight/brightness)+$1))" -lt "0" ]; then
        echo 0 > /sys/devices/platform/backlight/backlight/backlight/brightness
        exit
fi

echo $(($(cat /sys/devices/platform/backlight/backlight/backlight/brightness)+$1)) > /sys/devices/platform/backlight/backlight/backlight/brightness
}}

Provide the delta for the backlight as an argument, positive or negative.

This file is read-only by default, add this script to the local service if desired:

{{FileBox|filename=/etc/local.d/backlight-permissions.start|lang=bash|1=
chmod 666 /sys/devices/platform/backlight/backlight/backlight/brightness}}

This script needs to be marked executable by doing {{c|chmod +x}}

If reassigning the function keys for another purpose is desired, edit the /usr/share/X11/xkb/symbols/pc file.

In the following example, the search key (LWIN) has been remapped to Caps and set some of the function keys to much-needed movement keys. Also, the power button was remapped to the Delete key:

{{FileBox|filename=/usr/share/X11/xkb/symbols/pc|title=keys added to "pc105" xkb_symbols
|    key <LWIN>   {      [ Caps_Lock             ]       };
    key <FK01>   {      [ Home                  ]       };
    key <FK02>   {      [ End                   ]       };
    key <FK03>   {      [ Page_Up               ]       };
    key <FK04>   {      [ Page_Down             ]       };}}
{{FileBox|filename=/usr/share/X11/xkb/symbols/inet|title=replaced items
|    key <POWR>   {      [ Delete                ]       };
}}

Restart X for these changes to take effect.

To remove old files in /var/lib/xkb:

{{RootCmd|rm -rf /var/lib/xkb/*}}

== Tips and tricks ==

* There is only 16GB of internal storage space available. Consider using an SD card for /home and to compile larger packages on.
* Backing up the ChromeOS partition (mmcblk0) is highly recommended, however it is not difficult restore ChromeOS after a failure. Create a restore USB medium through desktop Chrome or download the files manually to write to a USB drive.
* Do '''not''' disable cros' developer mode! If the kernel fails to boot, the machine will not be able to boot from the install medium and will be forced to "powerwash" the Chromebook. Even if the kernel boots, crossystem/mosys is needed to change these flags. [https://lists.gnu.org/archive/html/libreboot/2016-06/msg00023.html This] is the solution if this happens on Libreboot, though wait for partition 5 to complete instead.

== Known issues ==

If the bluetooth module is loaded at any time and the system is suspended, both the bluetooth and wireless driver will stop working. A temporary fix is to blacklist the btsdio module:

{{RootCmd|echo "blacklist btsdio" > /etc/modprobe.d/blacklist-btsdio.conf}}

{{Package|sys-apps/lm_sensors}} does not work here. Query /sys/devices/virtual/thermal/thermal_zoneX/temp to get temperatures.
This will average the two CPU sensors up and output in a sane format:

{{Cmd|echo "$((($(cat /sys/devices/virtual/thermal/thermal_zone1/temp)+$(cat /sys/devices/virtual/thermal/thermal_zone2/temp))/2000))"}}

{{Package|sys-power/acpi}} does not display the correct discharge time. This can be obtained through upower:

{{Cmd|upower -i /org/freedesktop/UPower/devices/battery_sbs_20_000b}}

== External resources ==

* https://notabug.org/dimkr/devsus
* https://github.com/Miouyouyou/RockMyy
* http://www.synkhronix.com/journal/gentoo-chromebook
* http://www.galexander.org/chromebook
* https://wiki.debian.org/InstallingDebianOn/Asus/C201
* https://libreboot.org/docs/hardware/c201.html

== References ==

[[Category:Laptops]]
[[Category:Embedded systems]]
