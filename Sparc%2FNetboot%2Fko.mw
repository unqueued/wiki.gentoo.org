<languages />


{{Metadata|abstract=이 글은 젠투/SPARC netboot 설치 이미지 활용을 위해 네트워크 부팅 서버 설정을 안내합니다.}}

이 글은 젠투/SPARC netboot 설치 이미지 활용을 위해 네트워크 부팅 서버 설정을 안내합니다.

== 도입부 ==

{{Note|이 안내서는 현재 상당히 SPARC 중심적이며 기존의 젠투 리눅스 머신에 네트워크 부팅 서버를 설정하려는 여러분들을 위해 준비한 문서입니다.}}

이 문서는 썬 마이크로 시스템즈 SPARC 또는 울트라 스팍 기반 컴퓨터용 네트워크 부팅 환경 설정 방법을 설명합니다. 이 문서는 여러분이 네트워크 부팅 서버로 가동할 젠투 리눅스 컴퓨터를 이미 갖추고 있다고 가정합니다. 

넷부트 서버와 클라이언트는 동일한 서브넷에 있어야 하는데 ARP 프로토콜이 보통 다른 네트워크 서브넷으로 전달하지 못하기 때문입니다. 

네트워크 부팅 과정에서 일어나는 일의 대략적인 내용은 다음과 같습니다:

# 클라이언트 머신은 IP 주소를 요청하기 위해 역방향 ARP(RARP) 요청을 보냅니다.
# 서버 머신은 IP 주소를 클라이언트에 응답으로 반환합니다.
# 클라이언트에서 TFTP 프로토콜을 이용하여 RARP 서버에서 부팅 이미지 다운로드를 시도합니다.
# 이미지를 다운로드하고 나면 네트워크 부팅 클라이언트에서 이미지로 부팅합니다.

이 개요 내용에 따라 역방향 ARP 데몬과 TFTP 데몬 프로그램을 설치해야합니다. 

== 프로그램 설치 및 설정 ==

=== 역방향 ARP 데몬 ===

역방향 ARP 데몬은 이미 시스템에 설치되어 있습니다. {{Package|net-misc/iputils}} 꾸러미의 일부입니다.

'''rarpd 일반 요소 설정''' : {{Path|/etc/ethers}}  

{{Path|/etc/ethers}} 파일을 설정해야합니다. 이 파일에는 어떤 호스트가 요청했을 경우 {{c|rarpd}}에서 응답해야 하는지, 어떤 주소로 응답해야 하는지 나타냅니다. 

{{Path|/etc/ethers}} 형식읜 NIC의 MAC 주소이며 머신은 네트워크 부팅을 수행하고 이 언급한 호스트 이름을 부여받습니다. 공백은 MAC 주소를 호스트 이름과 구분하며 각 항목은 한 줄에 기입합니다. 다음은 sparc-netboot.gentoo.org 이름을 가진 호스트에 대한 예제입니다: 

{{FileBox|filename=/etc/ethers|1=
08:00:20:77:1f:3e  sparc-netboot.gentoo.org
}}

{{Note|16진수가 0으로 시작하거나 0인 경우 첫번째 0은 생략할 수 있습니다(예를 들면 08:00:20:77:1f:3e 은 8:0:20:77:1f:3e이 됩니다).}}

{{Path|/etc/ethers}}에 호스트를 추가하려 한다면, 요청을 받을 때마다 파일을 점검하므로 {{c|rarpd}} 서비스를 다시 시작할 필요가 없습니다. 

'''호스트 이름 해석''' : {{Path|/etc/hosts}}  

{{Path|/etc/ethers}}에 있는 각 항목에 호스트 이름이 붙어있다면 네트워크 부팅 서버에서는 각 호스트 이름을 IP 주소로 해석할 수 있어야합니다. 두가지 방법으로 해결할 수 있는데, {{Path|/etc/hosts}} 파일을 쓰거나 네트워크 부팅 서버에서 사용하는 이름 서버를 활용하는 방법입니다. 

호스트 이름을 해석하는 {{Path|/etc/hosts}} 항목은 네트워크 부팅 서버에 젠투를 설치했을때 이미 본 것과 매우 유사해보입니다. 우리 예제에서는 sparc-netboot.gentoo.org 호스트의 IP 주소가 10.0.1.15라고 가정하며 {{Path|/etc/hosts}} 항목의 모습은 다음과 같습니다:

{{FileBox|filename=/etc/hosts|1=
10.0.1.15  sparc-netboot.gentoo.org
}}

{{Note|환경에 따라 네트워크 관리자에게 적당한 IP 주소 또는 네트워크 부팅을 처리할 호스트의 주소를 달라고 요청해야 할 수도 있습니다.}}

이름 서버를 활용한다면 DNS 서버 관리자는 호스트 이름에 대한 레코드를 등록해야합니다. sparc-netboot.gentoo.org의 경우 적당한 IP 주소를 가리키려면 DNS 서버 관리자에게 문의하거나 DNS 서버의 DNS 프로그램 문서를 찾아 엔트리에 추가하는 방법을 알아보십시오. 

{{Note|{{Path|/etc/hosts}} 와 이름 서버 둘 다 호스트에 대한 항목을 네트워크 부팅 처리한다면 {{Path|/etc/hosts}} 을 먼저 활용합니다({{Path|/etc/nsswitch.conf}}에 나타난 승인 순서는 기본으로, 바뀌지 않습니다).}}

'''rarpd 설정''' 

우선 {{c|rarpd}}에 사용할 옵션을 결정해야합니다. 우리가 다룰 옵션 외에 다른 옵션도 있지만, {{c|rarpd}} 에 대한 {{Path|init.d}} 스크립트가 현재 없으면 {{c|rarpd}} 서비스를 부팅할 때마다 활성화하려는 경우 {{Path|/etc/conf.d/local.start}}에 추가해야 하기 때문에, 여기서 다룰 옵션으로 시작합니다. 예제 설정 항목은 다음과 같습니다: 

{{FileBox|filename=/etc/conf.d/local.start|1=
/usr/sbin/rarpd -v -e eth0
}}

위의  {{c|rarpd}} 옵션에 대한 설명은 다음과 같습니다(맨 페이지에서 가져온 그대로입니다): 

* <code>-v</code> 자세하게 뿌림.
* <code>-e</code> 부팅 이미지가 있는지 여부는 확인하지 말고 {{Path|/etc/ethers}} 데이터베이스와 DNS를 활용하여 MAC 주소를 유효한 IP 주소로 변환할 경우에 응답할 것.
* eth0은 {{c|rarpd}}에서 바인딩해야 할 인더페이스를 나타냄.

더 많은 옵션은 {{c|man 8 rarpd}}를 참고하십시오.

=== tftpd 데몬 ===

TFTP 데몬에 대해 두 가지 선택지가 있는데, 하나는 {{Package|net-ftp/atftp}}, 다른 하나는 {{Package|net-ftp/tftp-hpa}}입니다. 제대로 된 기능을 사용하려면 이 중 하나를 설치해야합니다. 

'''tftpd 일반 요소 설정''' 

각 TFTP 데몬은 tftp 클라이언트에 내용물을 전달할 디렉터리가 필요합니다. 우리가 이 설명서에서 언급한 목적으로 사용할 디렉터리는 {{Path|/tftpboot}} 입니다. 이 디렉터리는 클라이언트 입장에서 요청에 대한 응답을 받을 때 루트 ({{Path|/}}) 디렉터리처럼 나타납니다. 또한 TFTP 데몬을 ''nobody'' 사용자 및 그룹으로 실행하도록 설정하겠습니다. 

현재 없는 디렉터리를 선택했다면 {{c|mkdir}} 명령으로 디렉터리를 만들어야 합니다. {{Path|/tftpboot}} 디렉터리를 만드는 예제 명령은: 

{{RootCmd|/bin/mkdir /tftpboot}}

다음 {{Path|/tftpboot}}의 소유주를 바꾸어 소유 사용자와 소유 그룹을 ''nobody''로 설정해야합니다: 

{{RootCmd|chown nobody:nobody /tftpboot}}

=== atftp 데몬 ===

우선 다음과 같이 {{Package|net-ftp/atftp}} 꾸러미를 설치하십시오; 

{{Emerge|net-ftp/atftp}}

atftp를 설치하고 나면 설정해야합니다. tftpd 서비스를 부팅할 때 시작하려 한다면 {{Path|init.d}}, {{Path|inetd}}, {{Path|xinetd}} 자체에 {{Path|atftp}}가 없으니 추가해야합니다. tftpd 서비스를 관리할 때 {{Path|inetd}} 또는 {{Path|xinetd}}를 이용하려 한다면 관련 맨 페이지를 참조하십시오. 

하단 내용은 {{Path|/etc/conf.d/local.start}}에 있는 atftpd의 항목 예제입니다. 

{{FileBox|filename=/etc/conf.d/local.start|1=
/usr/sbin/in.tftpd -v --daemon /tftpboot
}}

위에 대한 설명은 다음과 같습니다(맨 페이지에서 가져온 그대로입니다): 

*  <code>-v</code> 는 로깅 수준을 설정하거나 끌어올립니다. 인자를 붙이지 않으면 현지 값을 1로 증가합니다. 기본은 LOG_NOTICE입니다. 로그 레벨 옵션은 syslog(3)을 참고하십시오 현재 값 범위는 0 (LOG_EMERG) 부터 7 (LOG_DEBUG)까지입니다.
* <code>--daemon</code>은 데몬으로 실행하도록 하는 옵션입니다. atftpd를 inetd 기반으로 실행하는 경우에는 이 옵션을 사용하지 마십시오.

더 많은 옵션은 {{c|man 8 atftpd}}를 참고하십시오. 

=== tftp-hpa 데몬 ===

우선 {{Package|net-ftp/tftp-hpa}} 꾸러미를 설치하십시오: 

{{Emerge|net-ftp/tftp-hpa}}

tftp-hpa는 {{Path|/etc/init.d}} 스크립트와 관련 {{Path|/etc/conf.d}}  설정 파일이 딸려옵니다. {{Path|/etc/conf.d/in.tftpd}}에서 <var>INTFTPD_PATH</var> 변수와 <var>INTFTP_OPTS</var> 변수 값이 아래와 일치하는지 확인하십시오: 

{{FileBox|filename=/etc/conf.d/in.tftpd|1=
INTFTPD_PATH="/tftpboot"
INTFTPD_OPTS="-s -v -l ${INTFTPD_PATH}"
}}

TFTP 데몬은 {{Path|init.d}} 스크립트로 시작할 수 있습니다: 

{{RootCmd|/etc/init.d/in.tftpd start}}

더 많은 옵션은 {{c|man 8 tftpd}}를 참고하십시오. 

== 클라이언트에서 활용할 tftpboot 이미지 준비 ==

네트워크 부팅에 사용할 이미지를 가지고 있는지 확인하십시오. 적당한 이미지를 받을[https://www.gentoo.org/downloads/mirrors/ 로컬] 젠투 [http://distfiles.gentoo.org/experimental/sparc/tftpboot/sparc64/ 배포 파일 미러]를 확인하십시오. {{Path|gentoo-sparc64-20100128.tftpboot}} 이미지를 활용하여 부팅해보겠습니다. 

이미지를 받았으면 {{Path|/tftpboot}}에 복사하십시오: 

{{RootCmd|cp gentoo-sparc64-20100128.tftpboot /tftpboot
|chmod 644 /tftpboot/gentoo-sparc64-20100128.tftpboot}}

이제 클라이언트에서 TFTP에 네트워크 부팅을 요청할 때, 현재 IP 주소를 16진수로 나타낸, 그리고 {{Path|.ARCH}} 플랫폼 이름이 붙은 파일을 찾습니다. 16진수는 ''대문자''로 사용하십시오. 

여기 예제에서 10.0.1.15 IP 주소 대신 동일한 16진수 표기를 살펴보도록 하겠습니다: 

{{Cmd|printf "%.2X%.2X%.2X%.2X\n" 10 0 1 15}}

{{CodeBox|title=IP 주소 예제|1=
decimal       10  0   1   15
hexadecimal   0A  00  01  0F
}}

So for the example netboot client, it would look for a file named {{Path|0A00010F}} when it tftpboots. 

Iif you are really, really lazy (like me), you can netboot the host to get the filename the client is looking for from the netboot server logs. 

Make sure that both the {{c|rarpd}} and TFTP daemon you've chosen are currently running, then boot the host as described below in [[#netbootingclient]]. 

The client will appear to hang after the boot net command is issued. Then on the netboot server, check the system logs for an entry for <code>in.tftpd</code>. 

An example entry from a netboot server running {{c|sysklogd}} and {{c|tftp-hpa}} looks like: 

{{CodeBox|title=netboot 서버의 기록 항목|1=
Jan  3 22:48:59 stargazer in.tftpd[8368]: RRQ from 10.0.1.15 filename 0A00010F
}}

The filename is shown above after "filename" in the log entry, which in this case is {{Path|0A00010F}}. 

As a way to keep track of what netboot image you are using, and to allow multiple machines to use the same netboot image, you can use a soft link to create the file with the hexadecimal value. To create this using our sample sparc64 host and the {{Path|gentoo-sparc64-20100128.tftpboot}}, use the following command: 

{{RootCmd|/bin/ln -s /tftpboot/gentoo-sparc64-20100128.tftpboot /tftpboot/0A00010F}}

이제 네트워크 부팅 준비가 다 되었습니다! 

== 클라이언트 넷부팅 ==

SPARC의 OpenBoot PROM(OBP)에서 다음 명령을 입력하십시오: 

{{Cmd|boot net|prompt=ok }}

이런 머신에서 다른 방법이 있다면: 

{{Cmd|boot net-tpe|prompt=ok }}

{{Note|If your system doesn't present you with an OBP at boot time, you will either need to press the {{Key|Stop}} and {{Key|A}} key, or send a break signal via serial console before the system boots an OS. If the system cannot find an OS, it should either try to boot via the network interface (which is what we want), or leave you at an OBP prompt.}}

This will initiate the networking booting process. A constantly changing string of hexadecimal digits should appear. When the image has finished loading, the kernel will take over and start the OS booting process. In the case of our sparc64 install image, you will be left at a shell prompt from which you can begin the install process. 

== 문제 해결 ==

'''Building the prerequisite software''' 

If the netboot server is a Gentoo Linux system and experiences problems after installing the rarpd and tftpd packages, please search the [http://forums.gentoo.org Gentoo Forums] and [http://bugs.gentoo.org Gentoo Bugzilla] to see if this problem has been encountered by anyone else. If it has not, or the solutions found do not work, then please open a new bug. 

'''I've issued the boot net command but it appears to hang.''' 

This is presumably because the file your system is trying to load from the tftpboot server is not available. On a SPARC system, you would probably see the following: 

{{CodeBox|title=대기 상태에 걸린 부팅 과정|1=
Rebooting with command: boot
Boot device: net  File and args:
}}

Double check that the file the client needs does exist in {{Path|/tftpboot}}. You can confirm the filename it is requesting by looking in the system logs. Also, once this file exists, the client will try to load it. Sometimes, when the file is missing originally, it will freeze downloading the file once it appears. To resolve this, just get back to an OBP prompt, and issue the "boot net" command again. The host should then start downloading the tftpboot image and boot the OS. 

'''I'm trying to netboot, but all I see are "Timeout waiting for ARP/RARP packet" messages.''' 

This could be due to a few different problems:

# Make sure the entry in {{Path|/etc/ethers}} exists for the client in question. If the MAC address is incorrect and/or the netboot server cannot resolve the hostname for the client, it cannot respond with the needed information.
# Verify that the network hub or switch the netboot server and client are connected to allow RARP traffic to flow freely. If the client's request cannot reach the server, or vice versa, the host will be unable to continue.
# No one is responding to the RARPD request because no services are listening. Verify that the {{c|rarpd}} service is up and running.
# The client does not think its NIC has a link to the network hub/switch it is plugged into. Check to see if the NIC and the port on the network hub or switch has a link light. If the link light is on, check to see what the setting of tpe-link-test? is in OBP with the command; <code>printenv tpe-link-test?</code>. You should receive something like {{Path|tpe-link-test? false true}}. The first column represents the parameter name, the second column shows the current value for the the parameter, and the third column shows the default value for the parameter. In the example above, we can see that the current value is false, which means that the client is not checking to see if the client and network hub or switch can establish a link before issuing its RARP request. Often times this can cause the problem.

To change the value of tpe-link-test? from an OBP prompt, issue the following command: 

{{Cmd|setenv tpe-link-test? true|prompt=ok |output=<pre>
tpe-link-test? =      true
</pre>
}}

이 부분에서 tpe-link-test 값이 보입니까? 그럼 이제 됐습니다. 클라이언트의 네트워크 부팅을 다시 시도해보세요. 

[[Category:Server and Security]] {{Migrated|originalauthors=weeve, nightmorph}}
