{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://btrfs.wiki.kernel.org|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox ohloh}}
}}
'''Btrfs''' is a new copy on write (CoW) [[filesystem]] for Linux aimed at implementing advanced features while focusing on fault tolerance, repair and easy administration. Jointly developed at Oracle, Red Hat, Fujitsu, Intel, SUSE, STRATO and many others, Btrfs is licensed under the [[GPL]] and open for contribution from anyone.

== Reasons to Use Btrfs ==
Ext4 is safe and stable and can handle large filesystems with extents so why switch?  While it's true that btrfs is still considered experimental and unstable, the time is nearing when btrfs will become the default filesystem instead of ext4.  Some Linux distros have begun to switch to it with their current release.  It has a number of advanced features in common with zfs that have made that filesystem so popular with BSD distros and NAS devices.

* Copy on Write and snapshotting - make incremental backups painless even from a "hot" filesystem or VM
* File level checksum - metadata for each file includes a checksum that can be used to detect/repair errors
* Transparent compression - Files may be compressed/decompressed on the fly to speed up read performance
* autodefrag - The filesystems may be tuned by a background thread while they are being used
* subvolumes - Filesystems can share a single pool of space instead of being put into their own partitions
* raid - btrfs does its own raid implementations so doesn't require lvm or mdadm partitions
* partitions optional - while it can be given partitions to work with, btrfs can use raw devices as well
* de-dupe (upcoming) - There is limited dedupe support already but this will become a standard feature.

Down the road, new clustered filesystems will readily take advantage of btrfs and its copy on write and other advanced features for their object stores.  [http://ceph.com/ ceph] is one such example of a clustered filesystem that looks very promising, and it knows how to take advantage of btrfs.

== Installation ==
=== Kernel ===
You need to activate the following kernel option:
{{Kernel||<pre>
File systems  --->
    <*> Btrfs filesystem
</pre>}}

=== Software ===
The package {{Package|sys-fs/btrfs-progs}} contains the utilities to work with the filesystem.

== Usage ==
=== Creation ===
{{Warning|The <code>mkfs.btrfs</code> command irreversibly destroys any content of the partition it is told to format. Please be sure to select the right partition.}}

To create an btrfs filesystem on the {{Path|/dev/sdXY}} partition:
{{RootCmd|mkfs.btrfs /dev/sdXY}}
Please replace Y with the partition and X with the disk number you want to format.

{{Path|/boot}} requires 280 megs or more.

{{Important|
fstab's last number column should be 0 for all btrfs partitions.  fsck.btrfs & btrfsck should not be run.}}

=== Mount ===
You can mount the filesystems in several ways:
* [[mount]] - Manual mount.
* [[fstab]] - Automatic mount at boot time.
* [[removable media]] - Automatic mount at demand.
* [[AutoFS]] - Automatic mount on access.
* [[Btrfs system root]] - Use the filesystem as a collection of volumes including one as a system root

[[Category:Filesystems]]
