{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://btrfs.wiki.kernel.org|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox ohloh}}
}}

'''Btrfs''' is a new copy on write (CoW) [[filesystem]] for Linux aimed at implementing advanced features while focusing on fault tolerance, repair and easy administration. Jointly developed at Oracle, Red Hat, Fujitsu, Intel, SUSE, STRATO and many others, Btrfs is licensed under the [https://en.wikipedia.org/wiki/GNU_General_Public_License GPL] and open for contribution from anyone.

== Features ==

Ext4 is safe and stable and can handle large filesystems with extents, but why switch?  While it is true that Btrfs is still considered experimental and unstable, the time is nearing when Btrfs will become the default filesystem for Linux systems. Some Linux distributions have already begun to switch to it with their current releases. Btrfs has a number of advanced features in common with zfs, which is what made the zfs filesystem popular with BSD distributions and NAS devices.

* '''Copy on Write (CoW) and snapshotting''' - Make incremental backups painless even from a "hot" filesystem or virtual machine (VM).
* '''File level checksums''' - Metadata for each file includes a checksum that can be used to detect and repair errors.
* '''[[Btrfs#Compression|Compression]]''' - Files may be compressed and decompressed on the fly, which speeds up read performance.
* '''Autodefrag''' - The filesystems may be tuned by a background thread ''while'' they are being used.
* '''Sub-volumes''' - Filesystems can share a single pool of space instead of being put into their own partitions.
* '''[[Btrfs#RAID|RAID]]''' - Btrfs does its own RAID implementations so LVM or <tt>mdadm</tt> are not required in order to have RAID. Currently RAID 0 and 1 are support; RAID 5 and 6 are upcoming.
* '''Partitions are optional''' - While it can be given partitions to work with, Btrfs has the potential to use raw devices (/dev/<device>).
* '''Data Deduplication (upcoming)''' - There is limited data deduplication support, however deduplication will eventually become a standard feature in Btrfs. This enables Btrfs to save space by comparing files via binary diffs.

Down the road, new clustered filesystems will readily take advantage of Btrfs with its copy on write and other advanced features for their object stores. [http://ceph.com/ ceph] is one example of a clustered filesystem that looks very promising, and it knows how to take advantage of Btrfs.

== Installation ==

=== Kernel ===

Activate the following kernel option to enable Btrfs support:
{{KernelBox|title=Activate btrfs in the kernel|1=
File systems  --->
    <*> Btrfs filesystem
}}

=== Emerge ===

The package {{Package|sys-fs/btrfs-progs}} contains the utilities necessary to work with the Btrfs filesystem.

{{Emerge|sys-fs/btrfs-progs}}

== Usage ==

=== Creation ===

{{Warning|The <tt>mkfs.btrfs</tt> command irreversibly destroys any content of the partition it is told to format. Please be sure the right partition is selected ''before'' running any <tt>mkfs</tt> command!}}

To create an Btrfs filesystem on the {{Path|/dev/sdXN}} partition:

{{RootCmd|mkfs.btrfs /dev/sdXN}}

In the example above, replace <code>N</code> with the partition number and <code>X</code> with the disk letter that is to be formatted. For example, if the third partition of the first drive in the system was to be formatted to Btrfs, run:

{{RootCmd|mkfs.btrfs /dev/sda3}}

{{Path|/boot}} requires 280 megs or more.

{{Important|The last number column in {{Path|/etc/fstab}} should be <code>0</code> for all Btrfs partitions. <tt>fsck.btrfs</tt> and <tt>btrfsck</tt> should not be ran during each system boot.}}

=== Mount ===

After creation, filesystems can be mounted in several ways:

* <tt>[[mount]]</tt> - Manual mount.
* {{Path|[[fstab]]}} - Defining mount points in {{Path|/etc/fstab}} enables automatic mounts on system boot.
* [[Removable media]] - Automatic mounts on demand (useful for USB drives).
* [[AutoFS]] - Automatic mount on filesystem access.
* [[Btrfs system root]] - Use the filesystem as a collection of volumes including one as a system root

== Advanced features ==

=== Compression ===

Btrfs supports transparent compression using the zlib and lzo algorithms.

Is possible to compress specific files using the file system attributes.

{{Cmd|chattr +c}}

The <code>compress</code> mount option set the default behavior to compress all the newly created files. In order to re-compress the whole file system, run the following command:

{{RootCmd|btrfs filesystem defragment -r -v -clzo / }}

Depending on the CPU and Disk capabilities, using lzo compression could improve the overall throughput.

=== RAID ===

Creating RAIDs in btrfs is much easier than creating RAIDs using <tt>[[mdadm]]</tt>.

The simplest method is to use the entire device to create a RAID:

{{RootCmd|mkfs.btrfs --m raid1 /dev/device1 /dev/device2 -d raid1 /dev/device1 /dev/device2}}


=== Converting from ext4 ===

==== Non-root ====

This section only supports the conversion of a non-root filesystem. First, unmount the mountpoint:

{{RootCmd|umount /dev/mounted_device}}

Check the integrity of non-root filesystem using the appropriate <tt>fsck</tt> tool. In this case the filesystem is ext4:

{{RootCmd|fsck.ext4 -f /dev/unmounted_device}}

Use the <tt>btrfs-convert</tt> utility to convert the ext4 formatted device into a btrfs formatted device:

{{RootCmd|btrfs-convert /dev/unmounted_device}}

Be sure to edit {{Path|/etc/fstab}} after the device has been formatting in order to change the filesystem column from ext4 to btrfs:

{{FileBox|file=/etc/fstab|title=Changing ext4 to btrfs|1=<pre>
/dev/device               /mnt/mountpoint          btrfs    defaults  0 0
</pre>}}

== See also ==

* [[Ext4]] - The default filesystem for most Linux distributions.

== External resources ==


[[Category:Filesystems]]
