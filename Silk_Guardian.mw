{{InfoBox stack
|{{InfoBox homepage|https://github.com/NateBrune/silk-guardian/|header=true}}
}}

Silk Guardian is [[Article description::a Linux kernel module kill switch that upon detecting changes to USB ports, wipes the RAM, securely deletes user specified files, and then shuts down the system.]]

== Installation ==

=== Software ===

Silk Guardian needs to be built manually since it can only be configured by modifying the source code prior to being built.

Install the required dependencies:

{{Emerge
|dev-vcs/git
|params+=--noreplace
}}

Clone the Silk Guardian [[Git]] repository:

{{RootCmd|git clone <nowiki>https://github.com/NateBrune/silk-guardian.git</nowiki> /usr/local/src/silk-guardian}}

Silk Guardian activation can be prevented by adding known USB devices to a whitelist. The whitelist format is <code>{ USB_DEVICE(0x<vendor-id>, 0x<product-id>) },</code>, where <code><vendor-id></code> and <code><product-id></code> are 4 digit hexadecimal numbers returned by {{c|lsusb}}. For example, to whitelist a Logitech G105 keyboard, add its vendor ID (<code>046d</code>) and product ID (<code>c248</code>) to the <var>whitelist_table</var> array in {{Path|config.h}}:

{{FileBox|filename=/usr/local/src/silk-guardian/config.h|lang=c|1=
static const struct usb_device_id whitelist_table[] = {
	{ USB_DEVICE(0x046d, 0xc248) },
};
}}

When activated, Silk Guardian will securely delete user specified files with {{c|shred}}. This feature is particularly useful when sensitive files are stored on the system. For example, to securely delete the user Larry's SSH and GnuPG private keys, add the following to the <var>remove_files</var> array in {{Path|config.h}}:

{{FileBox|filename=/usr/local/src/silk-guardian/config.h|lang=c|1=
static char *remove_files[] = {
	"/home/larry/.ssh/id_rsa",
	"/home/larry/.gnupg/private-keys-v1.d/<keygrip>.key",
	NULL,	/* Must be NULL terminated */
};
}}

Build and install Silk Guardian:

{{RootCmd
|cd /usr/local/src/silk-guardian
|make && make install
}}

{{Note|The Silk Guardian kernel module will need to be built and installed every time a new kernel is installed.}}

== Configuration ==

=== Kernel module ===

The Silk Guardian kernel module can be loaded manually by the {{c|modprobe}} command:

{{RootCmd|modprobe silk}}

To manually remove the Silk Guardian kernel module:

{{RootCmd|modprobe -r silk}}

The Silk Guardian kernel module can also be loaded automatically at boot:

{{FileBox|filename=/etc/modules-load.d/silk-guardian.conf|1=
silk
}}

== Usage ==

* Silk Guardian can be activated when an unknown USB device is plugged into the system. This could be useful in stopping a malicious USB device from installing malware or a backdoor onto the system.

* Silk Guardian can be activated by unplugging a known USB device from the system that has not been whitelisted. In this case, the known USB device needs to be plugged into the system prior to loading the Silk Guardian kernel module. This is useful when the system needs to be quickly secured, especially when [[Dm-crypt|disk encryption]] is utilized. 

== Removal ==

To uninstall Silk Guardian:

{{RootCmd
|modprobe -r silk
|rm -i /lib/modules/$(uname -r)/extra/silk.ko
|depmod -a
}}

== See also ==

* {{See also|Allow only known usb devices}}

== External resources ==

* [https://usbguard.github.io/ USBGuard] - A software framework that protects against rogue USB devices.

[[Category:Security]]
