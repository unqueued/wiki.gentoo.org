<languages />

{{Metadata|abstract=nginx это надежный, маленький и очень производительный веб сервер и обратный прокси сервер. Это хорошая альтернатива популярным веб серверам, таким как Apache и lighttpd.}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://nginx.org/en/|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox odoc|http://nginx.org/en/docs/}}
}}

'''nginx''' - это надежный, маленький и очень производительный [[:Category:Web Servers|веб сервер]] и обратный прокси сервер. Это хорошая альтернатива популярным веб серверам, таким как [[Apache/ru|Apache]] и [[lighttpd]].

== Установка ==

Перед непосредственной установкой пакета {{Package|www-servers/nginx}}, сначала прочитайте про USE флаги для Nginx.

=== Дополнительные USE флаги ===

Nginx использует модули с целью расширить свои возможности. Для более простого сопровождения такого модульного подхода, ebuild для nginx поддерживает расширенные USE (<code>[[USE_EXPAND]]</code>) флаги для обозначения нужных компонентов.

* Модули поддержки HTTP могут быть выбраны через переменную <var>NGINX_MODULES_HTTP</var>
* Модули поддержки почтовых функций могут быть выбраны через переменную <var>NGINX_MODULES_MAIL</var>
* Дополнительные модули могут быть выбраны через переменную <var>NGINX_ADD_MODULES</var>

Эти переменные нужно установить в {{Path|/etc/portage/make.conf}}. Их описание можно найти в {{Path|[http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/profiles/desc/nginx_modules_http.desc /usr/portage/profiles/desc/nginx_modules_http.desc]}} и {{Path|[http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/profiles/desc/nginx_modules_mail.desc /usr/portage/profiles/desc/nginx_modules_mail.desc]}}.

Например, для включения модуля <code>fastcgi</code>:

{{FileBox|filename=/etc/portage/make.conf|title=Nginx expanded USE flags example|lang=bash|1=
NGINX_ADD_HTTP="fastcgi"
}}

=== USE флаги ===

{{USEflag|package=www-servers/nginx}}

=== Emerge ===

После настройки USE флагов установите {{Package|www-servers/nginx}}:

{{Emerge|www-servers/nginx}}

=== Проверка установки ===

Пакет nginx включает в себя скрипты для остановки, запуска и перезапуска службы веб-сервера. Для запуска сервиса запустите следующую команду:

{{RootCmd|/etc/init.d/nginx start}}

Чтобы проверить, что nginx запущен должным образом, в вашем веб-браузере перейдите на [http://localhost http://localhost], либо используйте один из веб-клиентов для командной строки (например, {{c|curl}}):

{{Cmd|curl http://localhost}}

== Конфигурация ==

Конфигурация nginx находится в файле {{Path|/etc/nginx/nginx.conf}}.

=== Доступ к одному сайту ===

Следующий пример показывает конфигурацию для доступа к одному сайту без динамических возможностей (таких как [[PHP]]).

{{FileBox|filename=/etc/nginx/nginx.conf|title=Конфигурация Gentoo по умолчанию|1=
user nginx nginx;
worker_processes 1;
  
error_log /var/log/nginx/error_log info;
  
events {
        worker_connections 1024;
        use epoll;
}
  
http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
  
        log_format main
                '$remote_addr - $remote_user [$time_local] '
                '"$request" $status $bytes_sent '
                '"$http_referer" "$http_user_agent" '
                '"$gzip_ratio"';
  
        client_header_timeout 10m;
        client_body_timeout 10m;
        send_timeout 10m;
  
        connection_pool_size 256;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 2k;
        request_pool_size 4k;
  
        gzip on;
        gzip_min_length 1100;
        gzip_buffers 4 8k;
        gzip_types text/plain;
  
        output_buffers 1 32k;
        postpone_output 1460;
  
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
  
        keepalive_timeout 75 20;
  
        ignore_invalid_headers on;
  
        index index.html;
  
        server {
                listen 127.0.0.1;
                server_name localhost;
  
                access_log /var/log/nginx/localhost.access_log main;
                error_log /var/log/nginx/localhost.error_log info;
  
                root /var/www/localhost/htdocs;
        }
}
}}

=== Доступ к нескольким сайтам ===

Через директиву <code>include</code> возможно использовать конфигурации из разных файлов:

{{FileBox|filename=/etc/nginx/nginx.conf|title=Конфигурация для нескольких сайтов|1=
user nginx nginx;
worker_processes 1;
   
error_log /var/log/nginx/error_log info;
  
events {
        worker_connections 1024;
        use epoll;
}
http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
  
        log_format main
                '$remote_addr - $remote_user [$time_local] '
                '"$request" $status $bytes_sent '
                '"$http_referer" "$http_user_agent" '
                '"$gzip_ratio"';
  
        client_header_timeout 10m;
        client_body_timeout 10m;
        send_timeout 10m;
  
        connection_pool_size 256;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 2k;
        request_pool_size 4k;
  
        gzip on;
        gzip_min_length 1100;
        gzip_buffers 4 8k;
        gzip_types text/plain;
  
        output_buffers 1 32k;
        postpone_output 1460;
  
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
  
        keepalive_timeout 75 20;
  
        ignore_invalid_headers on;
  
        index index.html;
 
        include /etc/nginx/conf.d/*.conf;
}
}}

{{FileBox|filename=/etc/nginx/conf.d/local.conf|title=Простой хост|1=
server {
        listen 127.0.0.1;
        server_name localhost;
  
        access_log /var/log/nginx/localhost.access_log main;
        error_log /var/log/nginx/localhost.error_log info;
  
        root /var/www/localhost/htdocs;
}
}}

{{FileBox|filename=/etc/nginx/conf.d/local-ssl.conf|title=Простой SSL хост|1=
server {
    listen 443 ssl;
    server_name host.tld;
    ssl_certificate /etc/ssl/nginx/host.tld.pem;
    ssl_certificate_key /etc/ssl/nginx/host.tld.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:AES128:AES256:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK;
    ssl_dhparam /etc/ssl/nginx/host.tld.dh4096.pem;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:50m;
}
}}

=== Поддержка PHP ===

Добавьте следующие строки в конфигурацию nginx для включения поддержки PHP. В данном примере nginx обменивается информацией с процессом PHP через сокет UNIX.

{{FileBox|filename=/etc/nginx/nginx.conf|title=Поддержка PHP|1=
...
http {
...
    server { 
    ...
            location ~ \.php$ {
                       # Проверка на несуществующие скрипты или ошибку 404
                       # Без этой строки nginx будет сразу отправлять любые запросы, оканчивающиеся на .php, в php-frm
                       try_files $uri =404;
                       include /etc/nginx/fastcgi.conf;
                       fastcgi_pass unix:/run/php-fpm.socket;
           }
    }
}
}}

Для поддержки такой настройки, PHP нужно собрать с поддержкой менеджера процессов FastCGI ({{Package|dev-lang/php}}), что обрабатывается через USE флаг <code>fpm</code>:

{{RootCmd|echo "dev-lang/php fpm" >> /etc/portage/package.use}}

Пересоберите PHP с новым включенным <code>fpm</code> USE флагом:

{{Emerge|dev-lang/php}}
 
{{Note/ru|Использование связи через сокет UNIX это предпочтительная и рекомендуемая конфигурация}}

Просмотрите конфигурацию в файле {{Path|/etc/php/fpm-php5.5/php-fpm.conf}} и добавьте следующую строку:

{{FileBox|filename=/etc/php/fpm-php5.4/php-fpm.conf|title=Запуск PHP с поддержкой сокетов UNIX|lang=ini|1=
listen = /run/php-fpm.socket
listen.owner = nginx
}}

Установите часовой пояс в php-frm (файл {{Path|php.ini}}). Замените <code><PUT_TIMEZONE_HERE></code> на подходящее значение:

{{FileBox|filename=/etc/php/fpm-php5.5/php.ini|title=Настройка часового пояса в php.ini|lang=ini|1=
date.timezone = <введите часовой пояс здесь>
}}

Запуск демона {{c|php-fpm}}:

{{RootCmd|/etc/init.d/php-fpm start}}

Добавьте {{c|php-fpm}} к уровню запуска по умолчанию:

{{RootCmd|rc-update add php-fpm default}}

Перезагрузите {{c|nginx}} с измененной конфигурацией:

{{RootCmd|/etc/init.d/nginx reload}}

=== Списка доступа по IP адресам ===

Следующий пример демонстрирует получение доступа по конкретному URL (в данном случае {{Path|/nginx_status}}):

* конкретные хосты (например ''192.0.2.1 127.0.0.1'')
* и IP сети (например ''198.51.100.0/24'')

{{FileBox|filename=/etc/nginx/nginx.conf|Включение и настройка списков доступа по IP для страницы /nginx_status|1=
http {
    server { 
            location /nginx_status {
                     stub_status on;
                     allow 127.0.0.1/32;
                     allow 192.0.2.1/32;
                     allow 198.51.100.0/24;
                     deny all;
             }
     }
}
}}

=== Базовая аутентификация ===

nginx разрешает ограниченный доступ к ресурсам через проверку по имени пользователя и паролю.

{{FileBox|filename=/etc/nginx/nginx.conf|title=Активация и настройка аутентификации пользователя для корня файловой системы|1=
http {
    server { 
            location / {
                   auth_basic           "Authentication failed";
                   auth_basic_user_file conf/htpasswd;
             }
     }
}
}}
 
Файл {{Path|htpasswd}} может быть сгенерирован следующим образом:

{{Cmd|openssl passwd}}

=== Поддержка TLS ===

Это предложено для поддержки только TLS и исключения известных небезопасных шифров.

{{FileBox|filename=/etc/nginx/nginx.conf|title=Поддержка SSL|1=
server {
    listen 443;
    server_name host.tld;
    ssl on;
    ssl_certificate /etc/ssl/nginx/host.tld.pem;
    ssl_certificate_key /etc/ssl/nginx/host.tld.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:AES128:AES256:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK;
    ssl_dhparam /etc/ssl/nginx/host.tld.dh4096.pem;
}
}}

ebuild включает в себя набор самозаверенных сертификатов в {{Path|/etc/ssl/nginx/}}

Передовая приватность

Сертификат по протоколу Диффи-Хеллмана может быть создан при помощи {{c|openssl}}:

{{Cmd|openssl dhparam -out dh4096.pem 4096}}

=== Сторонние модули ===

Загрузите исходные тексты сторонних модулей и переместите их в каталог {{Path|/usr/src}}. Вручную скомпилируйте выбранные Nginx-модули, после чего добавьте следующую строку в {{Path|/etc/portage/make.conf}}:

{{FileBox|filename=/etc/portage/make.conf|title=Добавление сторонних модулей|1=
NGINX_ADD_MODULES="/usr/src/nginxmodule"}}

Пересоберите nginx с поддержкой сторонних модулей:

{{Emerge|www-servers/nginx}}

== Использование ==

Управление службой

==== OpenRC ====

Запуск nginx:

{{RootCmd|/etc/init.d/nginx start}}

Остановка nginx:

{{RootCmd|/etc/init.d/nginx stop}}

Добавление nginx в уровень исполнения по умолчанию:

{{RootCmd|rc-update add nginx default}}

Перезапуск nginx сервиса: 

{{RootCmd|/etc/init.d/nginx restart}}

== Устранение проблем ==

В случае проблем следующие команды могут помочь вам найти ошибки.

=== Проверка конфигурации ===

Проверьте, что запущенная конфигурация nginx не содержит ошибок.

{{RootCmd|/usr/sbin/nginx -t|output=<pre>
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
</pre>}}

Запустив {{c|nginx}} с опцией <code>-t</code>, он проверит синтаксис файла конфигурации без самого старта демона {{c|nginx}}.

=== Проверка запущенных процессов ===

Проверьте, запущены ли процессы {{c|nginx}}:

{{Cmd|ps aux {{!}} egrep 'nginx{{!}}PID'|output=<pre>
  PID TTY      STAT   TIME COMMAND
26092 ?        Ss     0:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf
26093 ?        S      0:00 nginx: worker proces
</pre>}}

=== Проверьте адрес привязки и порты ===

Проверьте, что демон nginx прослушивает правильный TCP порт (например, 80 для HTTP или 443 для HTTPS):

{{RootCmd|netstat -tulpen {{!}} grep :80|output=<pre>
tcp        0      0 127.0.0.1:80            0.0.0.0:*               LISTEN      0          12336835   -26092/nginx: master
</pre>}}

== Смотрите также ==

* [[Apache]] - Самый популярный HTTP сервер в сети Интернет.
* [[Lighttpd]] - Быстрый, легковесный веб-сервер.

== Ссылки ==

* http://nginx.org/en/docs/beginners_guide.html - Гайд по {{c|nginx}} для новичков. Весьма полезен для тех, кто мало что знает о {{c|nginx}}.
* http://nginx.com/resources/admin-guide/ - Продвинутый гайд по {{c|ngnix}}. Информативен для сетевых администраторов, работающих «в поле».
* http://wiki.nginx.org/Main - nginx вики.
* https://github.com/h5bp/server-configs-nginx - H5BP конфигурации для nginx.

[[Category:Web Servers]]
