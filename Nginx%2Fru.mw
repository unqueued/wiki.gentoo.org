<languages />

{{Metadata|abstract=nginx — это надежный, маленький и очень производительный веб-сервер и обратный прокси-сервер. Это хорошая альтернатива популярным веб-серверам, таким как Apache и lighttpd.}}

{{InfoBox stack
|{{InfoBox homepage|https://nginx.org/en/|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox odoc|https://nginx.org/en/docs/}}
}}

'''nginx''' — это [[Article description::надежный, маленький и очень производительный [[:Category:Web Servers|веб-сервер]] и обратный прокси-сервер.]] Это хорошая альтернатива популярным веб серверам, таким как [[Apache/ru|Apache]] и [[lighttpd]].

== Установка ==

Перед непосредственной установкой пакета {{Package|www-servers/nginx}}, сначала будет неплохо взглянуть на USE-флаги Nginx.

=== Расширенные USE-флаги ===

Nginx использует модули для расширения своих возможностей. Для более простого сопровождения такого модульного подхода, ebuild для nginx поддерживает расширенные (<var>[[USE_EXPAND]]</var>) USE-флаги для обозначения какие модули должны быть установлены.

* Модули HTTP включаются через переменную <var>NGINX_MODULES_HTTP</var>
* Почтовые модули включаются через переменную <var>NGINX_MODULES_MAIL</var>
* Дополнительные модули включаются через переменную <var>NGINX_ADD_MODULES</var>

Эти переменные необходимо настроить в {{Path|/etc/portage/make.conf}}. Их описание можно найти в {{Path|[https://gitweb.gentoo.org/repo/gentoo.git/plain/profiles/desc/nginx_modules_http.desc /var/db/repos/gentoo/profiles/desc/nginx_modules_http.desc]}} и {{Path|[https://gitweb.gentoo.org/repo/gentoo.git/plain/profiles/desc/nginx_modules_mail.desc /var/db/repos/gentoo/profiles/desc/nginx_modules_mail.desc]}}.

Например, для включения модуля <code>fastcgi</code>:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
NGINX_MODULES_HTTP="fastcgi"
}}

Вышеописанное переопределяет стандартное значение <var>NGINX_MODULES_HTTP</var> значением <code>fastcgi</code>. Для включения модуля <code>fastcgi</code> без переопределения <var>NGINX_MODULES_HTTP</var> можно указать следующую запись в {{Path|[[:/etc/portage/package.use]]}}:

{{FileBox|filename=/etc/portage/package.use|lang=bash|1=
www-servers/nginx NGINX_MODULES_HTTP: fastcgi
}}

=== USE-флаги ===

{{USEflag|package=www-servers/nginx}}

=== Emerge ===

После настройки USE-флагов установите {{Package|www-servers/nginx}}:

{{Emerge|www-servers/nginx}}

=== Проверка установки ===

Стандартная конфигурация nginx определяет виртуальный сервер с корневым каталогом в {{Path|/var/www/localhost/htdocs}}. Однако в связи с {{Bug|449136}}, ebuild nginx'а создает только каталог {{Path|/var/www/localhost}}, без индексного файла. Для получения рабочей стандартной конфигурации создайте каталог {{Path|/var/www/localhost/htdocs}} и простой индексный файл:

{{RootCmd
|mkdir /var/www/localhost/htdocs
|echo 'Hello, world!' > /var/www/localhost/htdocs/index.html
}}

Пакет nginx включает в себя init-скрипт, позволяющий останавливать, запуска и перезапускать службу веб-сервера. Для запуска службы nginx запустите следующую команду:

{{RootCmd|/etc/init.d/nginx start}}

Чтобы проверить, что nginx запущен должным образом, перейдите в своем веб-браузере на адрес [http://localhost http://localhost], либо используйте один из веб-клиентов для командной строки (например, {{c|curl}}):

{{Cmd|curl <nowiki>http://localhost</nowiki>}}

== Конфигурация ==

Конфигурация nginx находится в файле {{Path|/etc/nginx/nginx.conf}}.

=== Доступ к одному сайту ===

Следующий пример показывает конфигурацию для доступа к одному сайту без динамических возможностей (таких как [[PHP/ru|PHP]]).

{{FileBox|filename=/etc/nginx/nginx.conf|title=Конфигурация Gentoo по умолчанию|1=
user nginx nginx;
worker_processes 1;
 
error_log /var/log/nginx/error_log info;
 
events {
	worker_connections 1024;
	use epoll;
}
 
http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;
 
	log_format main
		'$remote_addr - $remote_user [$time_local] '
		'"$request" $status $bytes_sent '
		'"$http_referer" "$http_user_agent" '
		'"$gzip_ratio"';
 
	client_header_timeout 10m;
	client_body_timeout 10m;
	send_timeout 10m;
 
	connection_pool_size 256;
	client_header_buffer_size 1k;
	large_client_header_buffers 4 2k;
	request_pool_size 4k;
 
	gzip off;
 
	output_buffers 1 32k;
	postpone_output 1460;
 
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
 
	keepalive_timeout 75 20;
 
	ignore_invalid_headers on;
 
	index index.html;
 
	server {
		listen 127.0.0.1;
		server_name localhost;
 
		access_log /var/log/nginx/localhost.access_log main;
		error_log /var/log/nginx/localhost.error_log info;
 
		root /var/www/localhost/htdocs;
	}
}
}}

=== Доступ к нескольким сайтам ===

Через директиву <code>include</code> возможно использовать конфигурации из разных файлов:

{{FileBox|filename=/etc/nginx/nginx.conf|title=Конфигурация для нескольких сайтов|1=
user nginx nginx;
worker_processes 1;
 
error_log /var/log/nginx/error_log info;
 
events {
	worker_connections 1024;
	use epoll;
}
 
http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;
 
	log_format main
		'$remote_addr - $remote_user [$time_local] '
		'"$request" $status $bytes_sent '
		'"$http_referer" "$http_user_agent" '
		'"$gzip_ratio"';
 
	client_header_timeout 10m;
	client_body_timeout 10m;
	send_timeout 10m;
 
	connection_pool_size 256;
	client_header_buffer_size 1k;
	large_client_header_buffers 4 2k;
	request_pool_size 4k;
 
	gzip off;
 
	output_buffers 1 32k;
	postpone_output 1460;
 
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
 
	keepalive_timeout 75 20;
 
	ignore_invalid_headers on;
 
	index index.html;
 
	include /etc/nginx/conf.d/*.conf;
}
}}

{{FileBox|filename=/etc/nginx/conf.d/local.conf|title=Простой хост|1=
server {
        listen 127.0.0.1;
        server_name localhost;
  
        access_log /var/log/nginx/localhost.access_log main;
        error_log /var/log/nginx/localhost.error_log info;
  
        root /var/www/localhost/htdocs;
}
}}

{{FileBox|filename=/etc/nginx/conf.d/local-ssl.conf|title=Простой SSL хост|1=
server {
    listen 443 ssl;
    server_name host.tld;
    ssl_certificate /etc/ssl/nginx/host.tld.pem;
    ssl_certificate_key /etc/ssl/nginx/host.tld.key;
}
}}

=== Поддержка PHP ===

Добавьте следующие строки в конфигурацию nginx для включения поддержки PHP. В данном примере nginx обменивается информацией с процессом PHP через UNIX-сокет.

{{FileBox|filename=/etc/nginx/nginx.conf|title=Поддержка PHP|1=
...
http {
...
    server { 
    ...
            location ~ \.php$ {
                       # Проверка на несуществующие скрипты или ошибку 404
                       # Без этой строки nginx будет сразу отправлять любые запросы, оканчивающиеся на .php, в php-frm
                       try_files $uri =404;
                       include /etc/nginx/fastcgi.conf;
                       fastcgi_pass unix:/run/php-fpm.socket;
           }
    }
}
}}

Для такой конфигурации необходимо собрать PHP с поддержкой менеджера процессов FastCGI ({{Package|dev-lang/php}}), включив USE-флаг <code>fpm</code>:

{{RootCmd|echo "dev-lang/php fpm" >> /etc/portage/package.use}}

Пересоберите PHP с включенным <code>fpm</code> USE-флагом:

{{Emerge|dev-lang/php}}
 
{{Note|Использование UNIX-сокета для взаимодействия является предпочтительной и рекомендуемой конфигурацией}}

Просмотрите конфигурацию в файле {{Path|/etc/php/fpm-php5.5/php-fpm.conf}} и добавьте следующую строку:

{{FileBox|filename=/etc/php/fpm-php5.5/php-fpm.conf|title=Запуск PHP с поддержкой UNIX-сокета|lang=ini|1=
listen = /run/php-fpm.socket
listen.owner = nginx
}}

Для PHP 7.0 и более новых версий конфигурационные файлы выглядят немного иначе:

{{FileBox|filename=/etc/php/fpm-php7.1/fpm.d/www.conf|title=Запуск PHP поддержкой UNIX-сокета|lang=ini|1=
listen = /run/php-fpm.socket
listen.owner = nginx
}}

Установите часовой пояс в php-frm (файл {{Path|php.ini}}). Замените <code><PUT_TIMEZONE_HERE></code> на подходящее значение:

{{FileBox|filename=/etc/php/fpm-php5.5/php.ini|title=Настройка часового пояса в php.ini|lang=ini|1=
date.timezone = <введите часовой пояс здесь>
}}

Запуск демона {{c|php-fpm}}:

{{RootCmd|/etc/init.d/php-fpm start}}

Добавьте {{c|php-fpm}} в уровень запуска default:

{{RootCmd|rc-update add php-fpm default}}

Перезагрузите {{c|nginx}} с измененной конфигурацией:

{{RootCmd|/etc/init.d/nginx reload}}

=== Список доступа по IP-адресам ===

Следующий пример демонстрирует получение доступа по конкретному URL (в данном случае {{Path|/nginx_status}}):

* конкретные хосты (например ''192.0.2.1 127.0.0.1'')
* и IP-сети (например ''198.51.100.0/24'')

{{FileBox|filename=/etc/nginx/nginx.conf|title=Включение и настройка списков доступа по IP-адресу для страницы /nginx_status|1=
http {
    server { 
            location /nginx_status {
                     stub_status on;
                     allow 127.0.0.1/32;
                     allow 192.0.2.1/32;
                     allow 198.51.100.0/24;
                     deny all;
             }
     }
}
}}

=== Базовая аутентификация ===

nginx может ограничить доступ к ресурсам с помощью проверки имя пользователя и пароля:

{{FileBox|filename=/etc/nginx/nginx.conf|title=Включение и настройка аутентификации пользователя для / |1=
http {
    server { 
            location / {
                   auth_basic           "Authentication failed";
                   auth_basic_user_file conf/htpasswd;
             }
     }
}
}}
 
Файл {{Path|htpasswd}} может быть сгенерирован следующим образом:

{{Cmd|openssl passwd}}

=== Сторонние модули ===

Скачайте исходные тексты сторонних модулей и поместите их в каталог {{Path|/usr/src}}. Вручную скомпилируйте выбранный модуль Nginx, после чего добавьте соответствующие строки в {{Path|/etc/portage/make.conf}}:

{{FileBox|filename=/etc/portage/make.conf|title=Добавление сторонних модулей|1=
NGINX_ADD_MODULES="/usr/src/nginxmodule"}}

Пересоберите nginx с поддержкой сторонних модулей:

{{Emerge|www-servers/nginx}}

== Использование ==

=== Управление службой ===

==== OpenRC ====

Запуск nginx веб-сервера:

{{RootCmd|rc-service nginx start}}

Остановка nginx веб-сервера:

<div class="mw-translate-fuzzy">
{{RootCmd|/etc/init.d/nginx stop}}
</div>

<div class="mw-translate-fuzzy">
Добавление nginx в уровень запуска default:
</div>

{{RootCmd|rc-update add nginx default}}

Reload nginx configuration without dropping connections:

{{RootCmd|rc-service nginx reload}}

Перезапуск nginx сервиса: 

<div class="mw-translate-fuzzy">
{{RootCmd|/etc/init.d/nginx restart}}
</div>

==== systemd ====

Start nginx web server:

{{RootCmd|systemctl start nginx}}

Stop nginx web server:

{{RootCmd|systemctl stop nginx}}

Check the status of the service:

{{RootCmd|systemctl status nginx}}

Enable service to start automatically on system reboot:

{{RootCmd|systemctl enable nginx}}

Reload nginx configuration without dropping connections:

{{RootCmd|systemctl reload nginx}}

Restart the nginx service: 

{{RootCmd|systemctl restart nginx}}

== Устранение проблем ==

В случае проблем следующие команды помогут найти ошибки.

=== Проверка конфигурации ===

Проверьте, что запущенная конфигурация nginx не содержит ошибок.

{{RootCmd|/usr/sbin/nginx -t|output=<pre>
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
</pre>}}

<div class="mw-translate-fuzzy">
При запуске {{c|nginx}} с параметром <code>-t</code> будет произведена проверка синтаксиса файла конфигурации без запуска самого демона {{c|nginx}}.
</div>

=== Проверка запущенных процессов ===

Проверьте, запущены ли процессы {{c|nginx}}:

{{Cmd|ps aux {{!}} egrep 'nginx{{!}}PID'|output=<pre>
  PID TTY      STAT   TIME COMMAND
26092 ?        Ss     0:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf
26093 ?        S      0:00 nginx: worker proces
</pre>}}

=== Проверка адреса привязки и портов ===

Проверьте, что демон nginx прослушивает правильный TCP-порт (например, 80 для HTTP или 443 для HTTPS):

{{RootCmd|netstat -tulpen {{!}} grep :80|output=<pre>
tcp        0      0 127.0.0.1:80            0.0.0.0:*               LISTEN      0          12336835   -26092/nginx: master
</pre>}}

== Смотрите также ==

<div class="mw-translate-fuzzy">
* [[Apache/ru|Apache]] - самый популярный HTTP-сервер, используемый в Интернете.
* [[Lighttpd]] - быстрый, легковесный веб-сервер.
</div>

== Внешние ресурсы ==

* https://nginx.org/en/docs/beginners_guide.html — руководство по {{c|nginx}} для новичков. Весьма полезено для тех, кто мало что знает о {{c|nginx}}.
* https://nginx.com/resources/admin-guide/ — продвинутое руководство по {{c|ngnix}}. Информативно для «практикующих» сетевых администраторов.
* http://wiki.nginx.org/Main — Вики nginx.
* https://github.com/h5bp/server-configs-nginx — конфигурации от H5BP для nginx.

[[Category:Web Servers]]
