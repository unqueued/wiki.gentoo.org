<languages />
<translate>

<!--T:1-->
This article describes the steps to upgrade to a new [[kernel]].

== Installation == <!--T:2-->

<!--T:3-->
A kernel upgrade get necessary, when because of [[emerge#Updating the system|updating the system]] new kernel sources get installed or when you yourself installs new kernel sources.

== Configuration == <!--T:4-->

<!--T:5-->
The configuration parallels that of the [[Kernel/Configuration|manual configuration]], since only the config file is reused. All steps are for the sake of completeness again here mentioned, for a more verbose explanation see the other article.

=== Set symlink === <!--T:6-->

<!--T:7-->
First set the <tt>/usr/src/linux</tt> symlink, so it points to the new kernel:
{{RootCmd|eselect kernel list
|eselect kernel set NEW_NUMBER}}

=== Copy previous kernel configuration === <!--T:8-->
You can copy the configuration from currently running kernel to the new one. You can find it in several places:

<!--T:9-->
* In the [[procfs]] [[filesystem]], if the kernel option ''Kernel .config support'' was activated in your present kernel:
: {{RootCmd|zcat /proc/config.gz > /usr/src/linux/.config}}

<!--T:10-->
* In the <tt>/boot</tt> folder, if you installed the config file there:
: {{RootCmd|cp /boot/config-$(uname -r) /usr/src/linux/.config}}

<!--T:11-->
* In the kernel folder of your present kernel:
: {{RootCmd|cp /usr/src/linux-$(uname -r)/.config /usr/src/linux/}}

=== make oldconfig === <!--T:12-->
Now update the previous config file for your new kernel:
{{RootCmd|cd /usr/src/linux
|make oldconfig}}

<!--T:14-->
The following configuration parallels that of the text based configuration with '''make config'''. For every difference between the kernel versions you ask, if you want to activate the driver or feature. An example:
{{RootCmd|make oldconfig
|output=Anticipatory I/O scheduler (IOSCHED_AS) [Y/n/m/?] (NEW)
}}

<!--T:15-->
The string ''(NEW)'' at the end of the line marks this option as new. Left to the string in square brackets are the possible answers: ''Y''es, ''n''o, ''m''odul or ''?'' to show the help. The recommend answer is capitalized (here ''Y''). The help explains the option or driver.

<!--T:16-->
Unfortunately '''make oldconfig''' doesn't show - next to the help - a lot more information for each option, like the context, so that it is sometimes difficult to give the right answer. In this case you should remember the option, answer with ''n''o and have a look at the option afterwards in '''make menuconfig''':
{{RootCmd|make oldconfig
|output=...}}
{{RootCmd|make menuconfig}}

== Reinstall external kernel modules == <!--T:17-->

<!--T:21-->
If the kernel hasn't been built yet, you have to prepare it for the building of the external kernel modules:
{{RootCmd|make modules_prepare}}

<!--T:18-->
You have to rebuild external kernel modules like the proprietary graphics drivers [[nvidia]] and [[fglrx]] for each new kernel. You can rebuild the packages using the ''@module-rebuild'' set of portage-2.2:

{{RootCmd|emerge -1 @module-rebuild}}

If you don't have new enough portage, you can use the deprecated {{Package|sys-kernel/module-rebuild}} tool:
{{RootCmd|emerge module-rebuild}}

<!--T:19-->
After the installation you let '''module-rebuild''' search for external kernel modules and add it to its list:
{{RootCmd|module-rebuild populate}}

<!--T:20-->
'''module-rebuild''' keeps this list, so this step is only necessary after installing of new external kernel modules or removing them.

<!--T:22-->
The following command reinstalls the external kernel modules then:
{{RootCmd|module-rebuild rebuild}}

== Build == <!--T:23-->

<!--T:24-->
Since here you can following the steps in the [[Kernel/Configuration#Build|manual configuration]] article.

== Removing old kernels == <!--T:25-->

<!--T:26-->
See the [[Kernel/Removal|kernel removing]] article. 

<!--T:27-->
[[Category:Kernel]]
</translate>
