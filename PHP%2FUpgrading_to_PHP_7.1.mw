== Compatibility check ==

PHP 7 has some major changes from the previous 5.x versions.  All scripts should be checked before upgrading.

[https://github.com/sstalle/php7cc/releases PHP 7 Compatiblity Checker] is a wonderful tool to do this automatically.

== PHP Targets ==

To upgrade a system to PHP 7.1, first set the <var>PHP_TARGETS</var> variable in {{Path|make.conf}}:

{{FileBox|filename=/etc/portage/make.conf|title=Setting the target PHP version|lang=cfg|1=
PHP_TARGETS="php7-1"
}}

== Installation ==

Install PHP 7.1:

{{Emerge|dev-lang/php:7.1}}

== Replace APC ==

To build with the <code>opcache</code> USE flag (the default) while allowing the use of APC userland functions such as <code>apc_fetch()</code>, install APCu, which emulates APC but only has user caching functions. This may be necessary for older projects that rely on APC for caching.

Install APCu:

{{Emerge|dev-php/pecl-apcu}}

The PHP 7 versions of pecl-apcu have a new syntax which need changes to support.
Fortunately, there is a compatibility package, {{Package|dev-php/pecl-apcu_bc}}:

{{Emerge|dev-php/pecl-apcu_bc}}

== Switch to PHP 7.1 ==

Switch to it using {{c|eselect}} for all SAPIs:

{{RootCmd
|eselect php set cli php7.1
|eselect php set fpm php7.1
}}

When other SAPIs are in  use, be sure to run {{c|eselect}} for those as well.

== Re-install compatible extensions ==

Since changing <var>PHP_TARGETS</var> is technically a USE flag change, it suffices to simply {{c|emerge @world}} with flags checking for new USE flags and all extensions should re-build.

{{Emerge|params+=--changed-use --deep|@world}}

== Migrate the configuration files ==

The different slots have different configuration paths. Please take care to migrate the configuration files before making use of a new slot.

== Uninstall old PHP versions ==

For example, to remove PHP 5.6:

{{Emerge|params+=-vc|dev-lang/php:5.6}}

== Restart PHP-FPM ==

Restart PHP-FPM if applicable:

{{RootCmd|/etc/init.d/php-fpm restart}}
