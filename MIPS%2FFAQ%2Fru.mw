<languages />


{{Metadata|abstract=Данные ЧаВо предназначены, чтобы ответить на некоторые из наиболее часто задаваемых вопросов, касающихся Gentoo/MIPS и Linux/MIPS в целом.}}

Данные ЧаВо предназначены, чтобы ответить на некоторые из наиболее часто задаваемых вопросов, касающихся Gentoo/MIPS и Linux/MIPS в целом.

=== Введение ===

Данные ЧаВо предназначены, чтобы ответить на часто задаваемые вопросы о Gentoo/MIPS и Linux/MIPS, которые мы получаем от различных пользователей. Статья в равной мере рассчитана как на новых, так и на опытных пользователей. Для упрощения навигации ЧаВо были разделены на несколько категорий. 

Если вы бы хотели внести вклад в ЧаВо, или после прочтения этого руководства у вас остались нерешённые вопросы, не стесняйтесь [[Project:MIPS|писать нам]]. 

== О проекте Gentoo/MIPS ==

=== Что такое Gentoo/MIPS? ===

Gentoo/MIPS – это небольшой проект, отвечающий за обслуживание Gentoo Linux на архитектуре MIPS. 

=== Зачем устанавливать Gentoo Linux на MIPS? ===

Хорошо, безусловно, некоторые компьютеры MIPS не самые быстрые в наши дни. Однако, несмотря на возраст некоторых из этих зверей, на их основе до сих пор могут быть созданы очень функциональные и полезные устройства. На базе Cobalt Qube 2 можно сделать очень хороший маршрутизатор широкополосного интернета, способный размещать web-сайты, email, IRC и выполнять множество других задач. Существует ряд причин, по которым вам бы захотелось установить Linux на оборудование такого типа. 

* Вы можете многое узнать об оборудовании компьютера за счёт альтернативной системы взглядов.

* Вы можете превратить то, что могло бы в противном случае быть бесполезным хламом, в очень функциональную систему.

* Символ статуса: Linux на x86 – слишком обыденное явление в наши дни, это не прикольно. Но Linux на MIPS намного менее популярен и вполне может являться темой для разговоров.

=== Почему вы не переносите Gentoo на NetBSD/MIPS или IRIX? ===

Эй, классная идея. К несчастью, многие из команды Gentoo/MIPS, как и другие заинтересованные люди, уже по уши заняты обслуживанием Linux/MIPS. Подобный проект будет частью [[Project:Prefix|проекта Gentoo Prefix]]. Было проведено ряд работ для IRIX, остальное можно найти в [https://bugs.gentoo.org/buglist.cgi?quicksearch=irix bugzilla]. 

== ЧаВо об аппаратном обеспечении MIPS ==

=== Что такое MIPS? ===

[http://www.mips.com MIPS Technologies] – это компания, которая производит ряд центральных процессоров RISC, которые реализуют [https://ru.wikipedia.org/wiki/MIPS_(архитектура) архитектуру MIPS]. Эти процессоры  фигурируют во всех видах оборудования от маленьких встраиваемых устройств до огромных серверов. 

Также, это случайно оказалось акронимом; '''M''' illions of '''I''' nstructions '''P''' er '''S''' econd.

=== Какие виды оборудования используют процессоры MIPS? ===

Вкратце... многие. Процессоры MIPS используются во всех видах оборудования, начиная с маленьких КПК (таких как ранние КПК Casio на Windows CE), X терминалов (например, Tektronix TekXPress XP330 series) и заканчивая рабочими станциями, такими как Silicon Graphics Indy и O2, и даже высокопроизводительными серверами, такими как Silicon Graphics Origin 2000. 

Полный список может быть найден на [http://www.linux-mips.org/wiki/index.php/Systems web-сайте Linux/MIPS] 

... и это не вдаваясь в подробности. Эти компьютеры очень разнообразны. Многие из них в настоящее время не работают на Linux. Из тех, которые работают, мы поддерживаем лишь некоторые, хотя вы тоже можете приспособить Gentoo/MIPS к любому компьютеру MIPS, если так хотите. Некоторые из таких устройств как Linksys WRT54G также поддерживаются [[Project:Embedded|проектом Embedded Gentoo]]. 

=== Поддерживается ли моё устройство? ===

Для начала, простой способ узнать это – посмотреть на [[MIPS/Hardware_Requirements|странице аппаратных требований Gentoo/MIPS]] 

Если вы не нашли свой компьютер среди перечисленных, вы можете посмотреть на [http://www.linux-mips.org/wiki/index.php/Systems web-сайте Linux/MIPS], чтобы найти его там. Однако, процесс установки может быть непростым, т.к. реальный процесс создания ядра и подходящего загрузочного устройства будет произведён преимущественно вами. Хотя, естественно мы попытаемся помочь, где сможем. 

=== Why don't you support machine X? ===

If you've looked at the Gentoo/MIPS Hardware Requirements page, you've probably noticed there are a lot of machines we don't support. In the case of SGI hardware, very little is known about some of them, not enough to successfully port Linux to them. 

If you managed to get Linux working on a box currently listed as ''unsupported'' however, please tell us. We'd be interested to know. 

== ЧаВо о программном обеспечении MIPS ==

=== Который из stage-архивов мне использовать? ===

Это будет зависеть от типа ЦП, установленного в вашей системе. Имена файлов stage формируются следующим образом: 

{{CodeBox|title=Схема наименования Stage-архивов|1=
  stage3-mipsel4_multilib-20110627.tar.bz2
\____/ \_____/ \______/ \______/
   {{!}}      {{!}}       {{!}}        {{!}}
   {{!}}      {{!}}       {{!}}        `-- Gentoo Release (дата создания)
   {{!}}      {{!}}       {{!}}
   {{!}}      {{!}}       `--- ABI: multilib, n32, n64 (ничего для o32)
   {{!}}      {{!}}
   {{!}}      `----------- Порядок байтов и уровень ISA
   {{!}}                     mips   ==> Big Endian
   {{!}}                     mipsel ==> Little Endian
   {{!}}
   `------------------ Тип Stage-архива: 1, 2 or 3.
}}

For R4000-class CPUs, use a <code>mips3</code> or <code>mipsel3</code> stage tarball. 

For R5000-class or later CPUs, use a <code>mips4</code> or <code>mipsel4</code> stage tarball. 

=== I got an "Illegal Instruction" or "Cannot Execute Binary File" error message when chrooting.  What did I do wrong? ===

This is generally caused by using the wrong stage tarball. If you try to run a <code>mips4</code> userland on a <code>mips3</code> CPU, you'll get an ''illegal instruction'' error message. Likewise, if you have a Big Endian CPU and you try to run Little Endian code on it, you'll get ''cannot execute binary file'' . 

The fix is simple: clean out your partition, then unpack the correct tarball. 

== Silicon Graphics Specific FAQs ==

=== Why doesn't my SGI machine netboot? ===

This could be for any number of reasons, ranging from cabling issues, through to issues on the server. The best way to troubleshoot any problem is a step-by-step approach... 

#  '''Have you got the SGI machine (and server) plugged into the right network ports?'''<br /> Make sure the network is cabled correctly. Also note that some machines have special needs. For instance the Challenge S cannot obtain network connectivity under Linux via its UTP port, you need to use the AUI port via a transceiver.
#  '''Are there any firewalls in use?'''<br />Make sure your firewall is not blocking DHCP/BOOTP requests (ports 67 and 68 on UDP) or TFTP (port 69 on UDP). <code>iptables -I INPUT 1 -p udp --dport 67:69 -j ACCEPT</code> should get things rolling.
#  '''Have you disabled packet MTU discovery and set the port range?'''<br />SGI boxes require {{Path|/proc/sys/net/ipv4/ip_no_pmtu_disc}} = 1 and {{Path|/proc/sys/net/ipv4/ip_local_port_range}} = "2048 32767". See [[Handbook:MIPS/Installation/Media#Netbooting_on_SGI_stations|the Gentoo/MIPS handbook]]. {{Note|Only required for IP22/IP28 systems.  Other SGI systems can netboot without these two tweaks.}}
#  '''Is the server giving out the correct details via BOOTP?'''<br />Double check your {{Path|/etc/dhcp/dhcpd.conf}} . ISC's dhcpd won't dish out addressing information via BOOTP unless the machine has been statically defined with a fixed address.
#  '''Which TFTP server are you using?'''<br /><code>tftp-hpa</code> is known to work. <code>atftp</code> is a lot more advanced, this can cause problems. If in doubt, try installing <code>tftp-hpa</code> and see if the problem clears up.
#  '''Are the daemons running?''' <br /><code>dhcpd</code> should show up when typing <code>ps ax</code> . As for TFTP, it'll largely depend on whether its a standalone server, or if its running from <code>(x)inetd</code> . <code>tftp-hpa</code> runs as a process called <code>in.tftpd</code> . Look for that in the <code>ps ax</code> output and start any services not currently running.
#  '''Does the kernel exist in {{Path|/tftpboot}} ?'''<br />Make sure you place the kernel image to be booted in this directory and that it is world-readable. ( <code>chmod 644 /tftpboot/foo</code> ) Also, in your {{Path|/etc/dhcp/dhcpd.conf}} , note that the path to the kernel will be relative to the {{Path|/tftpboot}} directory if you're using <code>tftp-hpa</code> .
#  '''Have you unset the <code>netaddr</code> and <code>dlserver</code> PROM variables?'''<br />Try running <code>unsetenv netaddr</code> and <code>unsetenv dlserver</code> .

=== The machine downloads the kernel, but then "hangs" (using a monitor and keyboard not serial console) ===

Unfortunately, not all graphics frame buffers are supported under Linux yet. This doesn't mean you can't use the machine... it just means you'll need a null-modem serial cable to interact with it. It is quite possible that the machine is in fact running, however, the system is outputting to the serial console rather than the screen.  Try using a default serial connection of '''''9600 8N1''''', with a null modem adapter.

== Cobalt Specific FAQs ==

=== Why won't my Cobalt machine boot? ===

This could be for a number of reasons. Our easiest bet however is to run through a checklist and make sure everything is correct. 

#  '''Have you got the Cobalt machine (and server) plugged into the right network ports?'''<br />Make sure the network is cabled correctly. Please note, the Cobalt firmware will only boot via the Primary network port.
#  '''Are there any firewalls in use?'''<br />Make sure your firewall is not blocking DHCP/BOOTP requests (ports 67 and 68 on UDP) or RPC/Portmap (port 111 on UDP and TCP). The following firewall rules should get things rolling: {{RootCmd|iptables -I INPUT 1 -p udp --dport 67:68 -j ACCEPT|iptables -I INPUT 1 -p udp --dport 111 -j ACCEPT|iptables -I INPUT 1 -p tcp --dport 111 -j ACCEPT}}
#  '''Is the server giving out the correct details via BOOTP?'''<br />Double check your {{Path|/etc/dhcp/dhcpd.conf}} . ISCs dhcpd won't dish out addressing information via BOOTP unless the machine has been statically defined with a fixed address.
#  '''Are you exporting {{Path|/nfsroot}} in your {{Path|/etc/exports}} ?'''<br />Make sure you are exporting that to the Cobalt machine. It only needs read-only access. Also remember to run <code>exportfs -av</code> after you edit the file.
#  '''Are the daemons running?'''<br /><code>dhcpd</code> should show up when typing <code>ps ax</code> . Likewise with <code>portmap</code> and the other RPC daemons. The following commands should look after this for you: <code>/etc/init.d/dhcp start</code>  <code>/etc/init.d/nfs start</code> 
#  '''Does the kernel exist in {{Path|/nfsroot}} ?'''<br />Make sure you place the kernel image to be booted in this directory and that it is world-readable. ( <code>chmod 644 /nfsroot/foo</code> )

=== Why don't you support the Qube 2700? ===

The Qube 2700 was the first of the Cobalt servers. While they are very nice machines, unfortunately, they lack a serial port. In other words, any interaction with the machine has to be done through a network. At present, our netboot images do not support this. 

[[Category:Core system]] {{Migrated|originalauthors=Stuart Longland, Matt Turner}}
