{{InfoBox stack
|{{InfoBox homepage|https://www.musicpd.org/|header=true}}
|{{InfoBox package|media-sound/mpd}}
|{{InfoBox odoc|https://www.musicpd.org/doc/html/user.html}}
|{{InfoBox wikipedia|Music Player Daemon}}
|{{InfoBox ohloh}}
}}

'''MPD''' ('''M'''usic '''P'''layer '''D'''aemon) is [[Article description::a flexible, server-side application for playing music.]] Through plugins and libraries it can play a variety of sound files while being controlled by a network protocol.

== Installation ==

Install {{Package|media-sound/mpd}}. Following minimal USE flags set is needed to be able to play most known audio file formats, and to listen to audio streams. For more features review the USE flags. 

{{USEflag|package=media-sound/mpd}}

Note that a number of these flags are added by the desktop profile.

{{Emerge|media-sound/mpd}}

== Configuration ==

After finished installation MPD should be working with the Gentoo shipped default configuration. 

=== Basic configuration ===

Below an example of a simple configuration:

{{FileBox|filename=/etc/mpd.conf|1=
music_directory      "/var/lib/mpd/music"
playlist_directory   "/var/lib/mpd/playlists"
db_file              "/var/lib/mpd/database"
log_file             "/var/lib/mpd/log"
state_file           "/var/lib/mpd/state"

user                 "mpd"

bind_to_address      "localhost"
bind_to_address      "/var/lib/mpd/socket"

input {
        plugin "curl"
}
}}

At this point MPD should be able to run as a system daemon with its own user called {{C|mpd}}, which is the default setting of MPD.

=== Service ===

You can now start MPD:

{{RootCmd|rc-service mpd start}}

To start MPD at boot time, add it your default runlevel:

{{RootCmd|rc-update add mpd default}}

=== PulseAudio (optional) ===

If MPD was build with [[PulseAudio]] support (<code>pulseaudio</code> USE flag), add a dedicated <var>audio_output</var> section to your {{Path|/etc/mpd.conf}}:

{{FileBox|filename=/etc/mpd.conf|1=
audio_output {
        type            "pulse"
        name            "Pulse Output"
        mixer_control   "Master"
}
}}

{{Note|It may be a good practice to [[#Running as a specific user (optional)|run both PulseAudio and MPD under X11 user instead]].}}

=== Built-in HTTP streaming server (optional) ===

If MPD was build with <code>network</code> USE flag, add a dedicated <var>audio_output</var> section to your {{Path|/etc/mpd.conf}}:

{{FileBox|filename=/etc/mpd.conf|1=
audio_output {    
        type            "httpd"
        name            "HTTP Stream"
        encoder         "vorbis"                # optional, vorbis(OGG) or lame(MP3)
        port            "8000"
        bitrate         "192"                   # do not define if quality is defined      
        format          "44100:16:1"
}

bind_to_address "0.0.0.0"
}}

Replace <code>localhost</code> with <code>0.0.0.0</code> or a specific interface IP. Bind to address <code>0.0.0.0</code> means here: stream on all local found IP interfaces. You could change it to a specific interface IP address like e.g. <code>192.168.1.2</code> then the streaming server is bound to that interface IP only. 

{{Note|Some players require to specify the file format in the URL to be able to connect to the stream. Example: <tt><nowiki>http://192.168.1.2:8000/mpd.ogg</nowiki></tt>}}

=== Running as a specific user (optional) ===

[[#PulseAudio|Sometimes]] it may be handy to run MPD as a specific user.

Start with copying {{Path|/etc/mpd.conf}} to {{Path|~/.mpdconf}}. There are some changes that you will have to change in order to run MPD as a user, most importantly {{C|user}} and {{C|group}}, also make sure the various path settings are correct:

{{FileBox|filename=~/.mpdconf|title=user definition|1=
user    "YOUR_USER"
group   "YOUR_USER"
}}

Make sure your user has read access to the directory you specify in <var>music_directory</var>.

{{Note|If your [[cron]] program supports {{C|@reboot}} you can create a cronjob that has {{Path|/usr/bin/mpd}} start at boot in place of the init script.}}

=== Bluetooth Headset (optional) ===

Setup a bluetooth headset first, according to the [[Bluetooth Headset]] article.

==== ALSA (non-PulseAudio) setup with BlueZ 5 ====

Put a user level {{Path|~/.asoundrc}} file in MPD's <var>$HOME</var> directory, which is {{Path|/var/lib/mpd}} by default. MPD will be able to control the volume of the headset.

{{FileBox|filename=/var/lib/mpd/.asoundrc|1=
# Specify the parameters of the Bluetooth connection
defaults.bluealsa {
     interface "hci0"            # host Bluetooth adapter
     device "XX:XX:XX:XX:XX:XX"  # Bluetooth headset MAC address
     profile "a2dp"
}
}}

To be able to switch between the Bluetooth headset and the default sound card, add these lines to the <var>audio_output</var> section in {{Path|/etc/mpd.conf}}:

{{FileBox|filename=/etc/mpd.conf|1=
audio_output {
        type            "alsa"
        name            "My ALSA Device"
}

audio_output {
        type            "alsa"
        name            "ALSA Bluetooth Headset"
        device          "bluealsa"
        mixer_type    "software"
}
}}

MPD might crash when switching output _while_ playing (if so, pause before switching).

If you experience some issues while trying to play AAC or other files, like:

{{Cmd|mpd --no-daemon --stderr|output=<pre>...
alsa_output: Failed to open "My ALSA Device" [alsa]: Error opening ALSA device "bluealsa" (snd_pcm_hw_params): Invalid argument
...</pre>
}}

Then add this line to your <var>audio_output</var>:

{{FileBox|filename=/etc/mpd.conf|1=
<pre>        format          "44100:16:2"</pre>
}}

==== ALSA (non-PulseAudio) setup with BlueZ 4 (deprecated) ====

Put a user level {{Path|~/.asoundrc}} file in MPD's <var>$HOME</var> directory, which is {{Path|/var/lib/mpd}} by default. The following example creates an extra "Bluetooth" slider in any mixer application, and enables MPD to control the volume of the headset:

{{FileBox|filename=/var/lib/mpd/.asoundrc|1=
# Change device to the MAC address of your headset
pcm.btheadset {
   type plug
   slave {
      pcm {
         type bluetooth
         device "XX:XX:XX:XX:XX:XX"
         profile "auto"
      }
   }
   hint {
      show on
      description "Bluetooth Headset"
   }
}

ctl.btheadset {
   type bluetooth
}

pcm.btheadset_softvol {
   type softvol
   slave.pcm "btheadset"
   control.name "Bluetooth"
   control.card 0
}

# Using bluetooth as default:
#pcm.!default {
#   type plug
#   slave.pcm "btheadset_softvol"
#}
}}

To be able to switch between the Bluetooth headset and the default sound card, add these lines to the <var>audio_output</var> section in {{Path|/etc/mpd.conf}}:

{{FileBox|filename=/etc/mpd.conf|1=
audio_output {
        type            "alsa"
        name            "My ALSA Device"
}

audio_output {
        type            "alsa"
        name            "ALSA Bluetooth Headset"
        device          "btheadset_softvol"
        mixer_type      "software"
}
}}

MPD might go crazy when switching output _while_ playing, and fill its log (if so, pause before switching).

If you experience some issues while trying to play AAC or other files, like:

{{Cmd|mpd --no-daemon --stderr|output=<pre>...
alsa_output: Failed to open "My ALSA Device" [alsa]: Error opening ALSA device "bluealsa" (snd_pcm_hw_params): Invalid argument
...</pre>
}}

Then add this line to your <var>audio_output</var>:

{{FileBox|filename=/etc/mpd.conf|1=
<pre>        format          "44100:16:2"</pre>
}}

== Clients ==

* [https://www.musicpd.org/clients/ Sorted List of MPD clients]

=== Commandline/Console ===

* {{Package|media-sound/mpc}} — [https://www.musicpd.org/clients/mpc/ A commandline client for Music Player Daemon (media-sound/mpd)] (useful for key-bindings)
* {{Package|media-sound/ncmpc}} — [https://www.musicpd.org/clients/ncmpc/ An ncurses client for the Music Player Daemon (MPD)]
* {{Package|media-sound/ncmpcpp}} — [https://rybczak.net/ncmpcpp/ An ncurses mpd client, ncmpc clone with some new features, written in C++]
* {{Package|media-sound/pms}} — [https://kimtore.no/pms/ Practical Music Search, another ncurses based mpd client with vi like keys, written in Golang]
* {{Package|media-sound/vimpc}} — [https://github.com/boysetsfrog/vimpc An ncurses based mpd client with vi like key bindings]
* [https://elpa.gnu.org/packages/ampc.html Ampc] — Asynchronous Music Player Controller for [[Emacs]]
* [https://github.com/carnager/clerk clerk] — mpd client, based on rofi/fzf, written in Perl
* [https://hackage.haskell.org/package/vimus vimus] — An MPD client with vim-like key bindings, written in Haskell

=== Graphical (GTK+) ===

* {{Package|media-sound/ario}}
* {{Package|media-sound/gimmix}}
* {{Package|media-sound/glurp}}
* {{Package|media-sound/gmpc}}
* {{Package|media-sound/guimup}}
* {{Package|media-sound/pympd}}
* {{Package|media-sound/sonata}}
* {{Package|media-sound/xfmpc}}

=== Graphical (Qt) ===

* {{Package|media-sound/cantata}}
* {{Package|media-sound/qmpdclient}}
* {{Package|media-sound/qtmpc}}
* {{Package|media-sound/quimup}}

=== Web ===

* [https://www.ympd.org/ ympd] — MPD Web GUI - written in C, utilizing Websockets and Bootstrap/JS

=== Scrobblers ===

Scrobblers are clients that submit to [http://www.audioscrobbler.net/ Audioscrobbler] — compatible services (eg. [http://libre.fm libre.fm] or [http://last.fm last.fm])
* {{Package|media-sound/mpdas}}
* {{Package|media-sound/mpdscribble}}
* {{Package|media-sound/scmpc}}

== Troubleshooting ==

For general troubleshooting refer to the [https://www.musicpd.org/doc/html/user.html#chapter-8-troubleshooting MPD user manual troubleshooting section]

== See also ==

* {{See also|Upmpdcli}}

== External resources ==

* [https://forum.musicpd.org/ MPD Forum]
* [https://sourceforge.net/projects/musicpd/ MPD on Sourceforge]
* [https://wiki.archlinux.org/index.php/Music_Player_Daemon MPD at Arch Wiki]

[[Category:Multimedia]]
[[Category:Daemons]]
