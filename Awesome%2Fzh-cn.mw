<languages />
{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://awesome.naquadah.org|header=true}}
|{{InfoBox wikipedia|awesome (window manager)}}
}}

"awesome"是一个高度可定制的用于X的下一代窗口管理器框架。它主要定位于顶级用户、开发者、每天都要与计算任务打交道的人以及那些想要很好的控制他们图形界面环境的人。

== 安装 ==

=== USE 标志 ===

{{USEflag|package=x11-wm/awesome}}

=== 安装 ===

安装 {{Package|x11-wm/awesome}}:

{{Emerge|x11-wm/awesome}}

== 配置 ==

== 启动 ==

通过一个 [[display manager]] 或者按键 {{c|startx}}来启动 '''awesome'''.

使用  {{c|startx}}启用 [[ConsoleKit]] 支持, 设置 [[ConsoleKit]] 创建如下文件:

{{FileBox|filename=~/.xinitrc|lang=bash|1=
exec ck-launch-session dbus-launch --sh-syntax --exit-with-session awesome
}}

== 配置文件 ==

Awesome的默认配置文件位于 {{Path|~/.config/awesome/rc.lua}}. 如果该文件不存在，那么你需要创建一个。{{c|awesome}}安装好带有一个默认的配置文件位于 {{Path|/etc/xdg/awesome/rc.lua}}. 将该文件复制到用户的主目录中。

第一步，创建目录 {{Path|awesome/}} :

{{Cmd|mkdir -p ~/.config/awesome/}}

接着，复制配置文件 {{Path|rc.lua}} :

{{Cmd|cp /etc/xdg/awesome/rc.lua ~/.config/awesome/rc.lua}}

If {{Package|x11-terms/xterm}} is not installed, either install it or change the default terminal emulator to the terminal emulator available on the system. Below, the default terminal emulator is set to {{c|konsole}}, part of {{Package|kde-apps/konsole}}.

{{FileBox|filename=~/.config/awesome/rc.lua|lang=lua|1=
-- This is used later as the default terminal and editor to run.
terminal = "konsole"
}}

作好更改后，检查配置文件是否有错误是非常有用的：

{{Cmd|awesome -k|output=<pre>
✔ Configuration file syntax OK
</pre>}}

通过软件包{{Package|media-gfx/feh}} 添加壁纸支持:

{{Emerge|media-gfx/feh}}

For instance, to use {{c|awsetbg}} to set the wallpaper, edit {{Path|~/.config/awesome/theme/theme.lua}}:

{{FileBox|filename=~/.config/awesome/theme/theme.lua|title=使用awsetbg设置指定的背景|lang=lua|1=
theme.wallpaper_cmd = { "awsetbg -f .config/awesome/themes/awesome-wallpaper.png" }
}}

=== 标签 ===

In {{c|awesome}}, tags are the name given to virtual desktops under which one or more applications are running. It is possible to assign custom symbols to these tags:

{{FileBox|filename=~/.config/awesome/rc.lua|1=
-- {{{ Tags
tags = {}
for s = 1, screen.count() do
    tags[s] = awful.tag({ "➊", "➋", "➌", "➍" }, s, layouts[1])
end
-- }}}
}}

=== 菜单 ===

Below is an example of a custom {{c|awesome}} menu:

{{FileBox|filename=~/.config/awesome/rc.lua|1=
-- {{{ Menu
myawesomemenu = {
   { "manual", terminal .. " -e man awesome" },
   { "edit config", editor_cmd .. " " .. awesome.conffile },
   { "reload", awesome.restart },
   { "quit", awesome.quit },
   { "reboot", "reboot" },
   { "shutdown", "shutdown" }
}
 
appsmenu = {
   { "urxvt", "urxvt" },
   { "sakura", "sakura" },
   { "ncmpcpp", terminal .. " -e ncmpcpp" },
   { "luakit", "luakit" },
   { "uzbl", "uzbl-browser" },
   { "firefox", "firefox" },
   { "chromium", "chromium" },
   { "thunar", "thunar" },
   { "ranger", terminal .. " -e ranger" },
   { "gvim", "gvim" },
   { "leafpad", "leafpad" },
   { "htop", terminal .. " -e htop" },
   { "sysmonitor", "gnome-system-monitor" }
}
 
gamesmenu = {
   { "warsow", "warsow" },
   { "nexuiz", "nexuiz" },
   { "xonotic", "xonotic" },
   { "openarena", "openarena" },
   { "alienarena", "alienarena" },
   { "teeworlds", "teeworlds" },
   { "frozen-bubble", "frozen-bubble" },
   { "warzone2100", "warzone2100" },
   { "wesnoth", "wesnoth" },
   { "supertuxkart", "supertuxkart" },
   { "xmoto" , "xmoto" },
   { "flightgear", "flightgear" },
   { "snes9x" , "snes9x" }
}
 
mymainmenu = awful.menu({ items = { { "awesome", myawesomemenu },
                                    { "apps", appsmenu },
				    { "games", gamesmenu },
                                    { "terminal", terminal },
				    { "web browser", browser },
				    { "text editor", geditor }
                                  }
                        })
 
mylauncher = awful.widget.launcher({ image = image(beautiful.awesome_icon),
                                     menu = mymainmenu })
-- }}}
}}

=== 日期 ===

下面是一个定制日期格式的例子，使用的是<code>%d.%m %H:%M</code>格式。第二个选项，<code>60</code>，指定多少秒更新一次。

{{FileBox|filename=~/.config/awesome/rc.lua|title=Creating a text-clock widget|1=
-- {{{ Wibox
-- Create a text-clock widget
mytextclock = awful.widget.textclock({ align = "right" }," %d.%m %H:%M ", 60)
-- }}}
}}

{{Note|For more information about the format options run {{c|date --help}}}}

=== 音量控制 ===

{{Package|media-sound/volumeicon}} 可用来用于自动处理音量键，并且通过托盘图标显示音量。

{{Emerge|media-sound/volumeicon}}

Autostart {{c|volumeicon}} from within {{Path|~/.xinitrc}}:

{{FileBox|filename=~/.xinitrc|title=在启动 X 的时候后台启动 volumeicon|lang=bash|1=
volumeicon &
exec ck-launch-session dbus-launch awesome
}}

Alternatively, a lightweight method is to add volume keys straight into the {{c|awesome}} configuration:

{{FileBox|filename=~/.config/awesome/rc.lua|title=Volume keys|1=
awful.key({ }, "XF86AudioLowerVolume", function () awful.util.spawn("amixer -q sset Master 2dB-") end)
awful.key({ }, "XF86AudioRaiseVolume", function () awful.util.spawn("amixer -q sset Master 2dB+") end)
}}

=== MPD 多媒体键 ===

安装 {{Package|media-sound/mpc}} 给 [[MPD]] 添加多媒体键绑定：

{{Emerge|media-sound/mpc}}

Next update the {{c|awesome}} configuration to assign the multimedia keys to the proper command:

{{FileBox|filename=~/.config/awesome/rc.lua|title=Volume key bindings|1=
awful.key({ }, "XF86AudioNext",function () awful.util.spawn( "mpc next" ) end),
awful.key({ }, "XF86AudioPrev",function () awful.util.spawn( "mpc prev" ) end),
awful.key({ }, "XF86AudioPlay",function () awful.util.spawn( "mpc play" ) end),
awful.key({ }, "XF86AudioStop",function () awful.util.spawn( "mpc pause" ) end),
}}

=== 使用 Xephyr 调试配置 ===

Xephyr 是一个非常有用的调试新配置文件的工具，它会在一个客户端窗口中创建一个X服务器的实例：

{{Cmd|Xephyr -ac -nolisten tcp -br -noreset -screen 800x600 :1}}

这将打开一个800x600的窗口。在其中打开终端，执行下面的命令运行 awesome：

{{Cmd|DISPLAY{{=}}:1.0 awesome}}

这将在窗口中运行 awesome。

== 快捷键 ==

这些是最有用的默认的快捷键：

* {{Key|mod4}}+{{Key|mouse1}} = 使用鼠标移动客户端
* {{Key|mod4}}+{{Key|mouse2}} = 使用鼠标缩放客户端

* {{Key|mod4}}+{{Key|enter}} = 打开终端
* {{Key|mod4}}+{{Key|r}} = 运行命令
* {{Key|mod4}}+{{Key|shift}}+{{Key|c}} = kill
* {{Key|mod4}}+{{Key|m}} = 最大化
* {{Key|mod4}}+{{Key|n}} = 最小化
* {{Key|mod4}}+{{Key|ctrl}}+{{Key|n}} = 回复最小化的客户端
* {{Key|mod4}}+{{Key|f}} = 全屏
* {{Key|mod4}}+{{Key|tab}} = 切换到前一个客户端
* {{Key|mod4}}+{{Key|ctrl}}+{{Key|space}} = float

* {{Key|mod4}}+{{Key|j}} = highlight left client
* {{Key|mod4}}+{{Key|k}} = highlight right client
* {{Key|mod4}}+{{Key|shift}}+{{Key|j}} = move client right
* {{Key|mod4}}+{{Key|shift}}+{{Key|k}} = move client left

* {{Key|mod4}}+{{Key|l}} = resize tiled client
* {{Key|mod4}}+{{Key|h}} = resize tiled client

* {{Key|mod4}}+{{Key|left / right}} = change tag
* {{Key|mod4}}+{{Key|1-9}} = change tag
* {{Key|mod4}}+{{Key|shift}}+{{Key|1-9}} = send client to tag

Custom key bindings, like {{Key|Alt}}+{{Key|Tab}}, can be mapped to make the {{c|awesome}} experience even better. For instance, to use {{Key|Alt}}+{{Key|Tab}} to switch to the previous window:

{{FileBox|filename=~/.config/awesome/rc.lua|title=Alt-TAB key binding|1=
-- {{{ Key bindings
globalkeys = awful.util.table.join(
...
    -- alt + tab
    awful.key({ "Mod1", }, "Tab",
        function ()
            awful.client.focus.history.previous()
            if client.focus then
                client.focus:raise()
            end
        end),
-- }}}
}}

== 外部资源 ==

* awesome wiki 上的[http://awesome.naquadah.org/wiki/User_Configuration_Files 用户配置文件]


[[Category:Window manager]]
