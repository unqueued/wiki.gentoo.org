<languages />

{{Metadata|abstract=В этом документе подробно рассказывается, как превратить старый компьютер с системой Gentoo в маршрутизатор для соединения домашней сети с интернетом.}}

В этом документе подробно рассказывается, как превратить старый компьютер с системой Gentoo в маршрутизатор для соединения домашней сети с интернетом.

== Введение ==

Создание собственного маршрутизатора из старых компонентов имеет массу преимуществ по сравнению с покупкой уже собранного и запечатанного на заводе: скажем, Linksys. Самое главное — управление соединением. Остальные преимущества вы сами можете придумать и воплотить в жизнь. Возможно сделать буквально все что угодно в случае собственного маршрутизатора, дело лишь в том, действительно ли вам это нужно. 

В руководстве рассказывается, как настроить преобразование сетевых адресов (NAT) на маршрутизаторе (ядро и iptables), как добавить и настроить распространённые службы (вроде системы доменных имён (DNS) с помощью dnsmasq, DHCP через dhcpcd, ADSL через ppp). Статья завершается более сложными и интересными вещами, которые можно настроить (port forwarding, шейпинг (traffic shaping), прокси/кэширование и т.д.). 

Before getting started, please review the list of basic requirements:
# A computer that has at least 2 Network Interface Cards (NICs) installed.
# The configuration settings for an Internet connection (may include things like IP/DNS/Gateway/username/password).
# (Optionally) a Wi-Fi card that supports master mode. Master mode is recommended to avoid NICs with a bypass feature since some NICs require proprietary drivers. Without access to the proprietary driver the card will remain in bypass mode permanently and will not be usable.
# A bit of spare time and Gentoo loving in order to successfully follow this guide and implement a well functioning home router.

В руководстве используются следующие оговорки: 

* eth0 - NIC connected to the Local Area Network (LAN) or network bridge consisting of multiple NICs
* eth1 - NIC connected to the Wide Area Network (WAN)
* LAN utilizes the private 192.168.0.xxx network
* Router is hardcoded to the standard 192.168.0.1 IP address
* Router is running Linux 2.4 or 2.6; other versions of the kernel are not supported by this guide).

{{Important/ru|Из соображений безопасности, я вам настоятельно рекомендую остановить все ненужные службы на маршрутизаторе, пока у нас не будет возможности запустить межсетевой экран и rolling. Для отображения текущих запущенных служб, просто выполните <code>rc-status</code>.}}

== Настройка ядра (сначала познай себя) ==

Ядру необходимы работающие драйверы для обоих сетевых плат. Возможно, сетевые платы уже настроены — чтобы проверить это, просто выполните <code>ifconfig</code>. Вывод может немного отличаться от нашего, ничего страшного. Самое главное, присутствует ли интерфейс в списке. 

{{RootCmd|ifconfig -a|output=<pre>
eth0      Link encap:Ethernet  HWaddr 00:60:F5:07:07:B8
          BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
          Interrupt:11 Base address:0x9800
  
eth1      Link encap:Ethernet  HWaddr 00:60:F5:07:07:B9
          BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
          Interrupt:10 Base address:0x9400
</pre>
}}

Если вы не видите обе свои платы, и не уверены, какого типа платы у вас установлены, попробуйте запустить <code>lspci | grep Ethernet</code>. Вы получите такой вывод от <code>emerge pciutils</code>. Как только вы получили эту информацию, зайдите в настройки ядра и включите поддержку нужных драйверов.

Once the make(s)/model(s) of the NIC(s) has been obtained, configure the kernel with support for the correct drivers. For more information on kernel configuration see the [[Kernel/Gentoo_Kernel_Configuration_Guide|Kernel Configuration Guide]].

Далее, вам необходима поддержка iptables и NAT (а также, по желанию, шейпинга (packet shaping)). Нижеследующий список разделён на всегда необходимое (*), нужное только для adsl через PPPoE (a), предлагаемое для всех (x), и только для shaping'a (s). Не имеет значения, встраиваете ли вы функцию в ядро, или компилируете как модуль, когда нужна какая-либо функция, нужные модули загружаются автоматически (тем не менее, загрузка модулей оставлена читателю как веселое упражнение). 

{{KernelBox|title=Network Options|<pre>
Networking options  --->
   [*] TCP/IP networking
      [*] IP: advanced router
   [*] Network packet filtering (replaces ipchains)
</pre>}}

When using a 2.4.x kernel, the following must be enabled for DHCP:

{{KernelBox|title=Network Options|<pre>
   [*] Socket Filtering
  
   IP: Netfilter Configuration  --->
      [*] Connection tracking (required for masq/NAT)
         [x] FTP protocol support
         [x] IRC protocol support
      [*] IP tables support (required for filtering/masq/NAT)
         [*] IP range match support
         [x] MAC address match support
         [*] Multiple port match support
         [*] Packet filtering
            [*] REJECT target support
            [x] REDIRECT target support
         [*] Full NAT
            [*] MASQUERADE target support
         [s] Packet mangling
            [s] MARK target support
         [x] LOG target support
  
   QoS and/or fair queueing  --->
      [s] QoS and/or fair queueing
         [s] HTB packet scheduler
         [s] Ingress Qdisc
  
   [a] PPP (point-to-point protocol) support
      [a] PPP filtering
      [a] PPP support for async serial ports
      [a] PPP support for sync tty ports
      [a] PPP Deflate compression
      [a] PPP BSD-Compress compression
      [a] PPP over Ethernet
</pre>}}

{{Note/ru|Кое-что может немного отличаться в настройке ядра 2.4 от 2.6, но, по-идее, вы должны разобраться <!--(-->:). Даже среди ядер версии 2.6 параметры имеют склонность менять местонахождение. Удачи!}}

== Поближе к WAN (он же Интернет) ==

=== Введение ===

Существует настолько много способов соединения с интернетом, что я просто опишу некоторые, в которых разбираюсь. Таким образом, мы остались с ADSL (PPPoE) и кабельными модемами (статическими/динамическими). Если там есть другие способы, не стесняйтесь написать рекламку, и сообщить мне по эл. почте. Не бойтесь пропустить любой из разделов этой главы,  который к вам не относится. Эта глава просто про подключение маршрутизатора к интернету через плату eth1. 

=== ADSL и PPPoE ===

Всевозможное программное обеспечение PPPoE, которое обеспечивалось пакетом rp-pppoe ([http://www.roaringpenguin.com/ Roaring Penguin]) было включено в [http://samba.org/ppp/ стандартный пакет PPP]. Просто выполните <code>emerge ppp</code>, и вы будете на пути к успеху. Помните как я сказал, что вам понадобится логин и пароль? Я тогда не соврал, и теперь надеюсь, у вас они есть! Откройте файл {{Path|/etc/conf.d/net}} в вашем любимом редакторе, и настройте его. 

Замените «vla9h924» в следующем примере своим именем пользователя, и «boogie» - паролем.

{{FileBox|filename=/etc/conf.d/net|title=Use ADSL over eth1 for ppp0|lang=bash|1=
config_ppp0="ppp"
link_ppp0="eth1"
plugins_ppp0="pppoe"
pppd_ppp0="
  defaultroute
  usepeerdns
"
username_ppp0="<username>"
password_ppp0="<user_password>"
}}

{{RootCmd|ln -s net.lo /etc/init.d/net.ppp0
|rc-update add net.ppp0 default
|/etc/init.d/net.ppp0 start}}

{{Warning/ru|Когда активируется интерфейс DSL, он создаст ppp0. Несмотря на то, что ваша сетевая плата называется eth1, IP-адрес на самом деле привязан к ppp0. Начиная отсюда, когда вы видите в примерах «eth1», подставьте вместо этого «ppp0».}}

{{Warning/ru|Убедитесь, что вы настроили доступ к файлу {{Path|/etc/conf.d/net}} так, что только администратор может производить чтение/запись с того момента, как там содержится ваш логин и пароль.}}

{{Warning/ru|Если вы переходите с пакета <code>rp-pppoe</code>, или если вам повезло со странными обрывами соединения, смотрите раздел MTU во главе Устранение неполадок.}}

=== Cable and/or dynamic/static IP ===

Если у вас статический IP, потребуется немного больше информации, чем если бы у вас был динамический IP. Вам потребуются IP, шлюз (gateway) и DNS-сервера. 

Пользователи с динамическим IP:

{{Emerge|dhcpcd}}

{{FileBox|filename=/etc/conf.d/net|title=Dynamic IP addresses|lang=bash|1=
config_eth1="dhcp"
}}

Пользователи со статическим IP:

{{FileBox|filename=/etc/conf.d/net|title=Static IP address configuration|lang=bash|1=
config_eth1="66.92.78.102/24 brd 66.92.78.255"
routes_eth1="default via 66.92.78.1"
}}

{{FileBox|filename=/etc/resolv.conf|title=Adding DNS information|1=
nameserver 123.123.123.123
}}

Как для динамического, так и для статического варианта:

{{RootCmd|ln -s net.lo /etc/init.d/net.eth1
|rc-update add net.eth1 default
|/etc/init.d/net.eth1 start}}

Вы все настроили для старта. 

== Настройка LAN (приведем своих друзей) ==

This step is a breeze compared to the previous one. To use ''more'' than two devices (more than the one for LAN and the one for WAN), a [[Network bridge]] will need to be setup between all NICs using the LAN. This will allow multiple NICs to be reached by the same IP address. 

If a network bridge will be necessary, follow [[Network bridge|the instructions to set up a Network bridge]]. The name of the bridge (default br0) will then replace eth0 for the LAN device in the steps in this wiki. If a large number of network devices in the home router, consider renaming them via udev to make administration easier. Setting up a bridge and renaming devices is completely optional but recommended for larger home networks. 

When creating a Wi-Fi access point make sure the Wi-Fi card supports master mode and set up [[Hostapd]].

{{FileBox|filename=/etc/conf.d/net|lang=bash|1=
config_eth0="192.168.0.1/24 brd 192.168.0.255"
}}

{{RootCmd|rc-update add net.eth0 default
|/etc/init.d/net.eth0 start}}

== Сервисы LAN (мы же хорошие ребята) ==

=== Сервер DHCP ===

Я уверен, было бы отлично, если любой желающий в доме просто бы мог подключить свои компьютеры к сети, после чего всё сразу бы заработало. Без необходимости помнить сбивающие с толку данные, или заставлять пялиться на запутанные окна настройки. Жизнь была бы прекрасна, не так ли? Познакомьтесь с протоколом динамической настройки узла (DHCP), и с тем, почему о нём действительно стоит позаботиться.

DHCP — вещь, соответствующая своему названию. Это протокол, который позволяет вам настраивать другие узлы автоматически, прямо во время работы. Вы запускаете DHCP-сервер на маршрутизаторе, снабжаете его данными о своей сети (правильные IP, сервера DNS, шлюзы и т. п.), и как только другие компьютеры включаются, они запускают DHCP-клиент, чтобы автоматически настроиться. Ни забот, ни хлопот! За дополнительными сведениями о DHCP всегда можно обратиться к [[Wikipedia:DHCP|Википедии]]. 

This HowTo article will use the {{Package|net-dns/dnsmasq}} package which will provide both DHCP and DNS services. For now lets focus on the DHCP aspect. Note: to run a different DHCP server, another example can be found in the Fun Things chapter below. Also, to tinker with the DHCP server settings read the comments in the {{Path|/etc/dnsmasq.conf}} file. 

{{Emerge|dnsmasq}}

{{FileBox|filename=/etc/dnsmasq.conf|1=
dhcp-range=192.168.0.100,192.168.0.250,72h
interface=eth0
}}

{{RootCmd|rc-update add dnsmasq default
|/etc/init.d/dnsmasq start}}

Setting the interface is very important. Using default dnsmasq settings will open the router to DNS amplification attacks which could create some scary email from the ISP providing the connection. Check to make sure the router is not allowing for DNS amplification attacks by using [http://openresolver.com].

Now the little router is a bona-fide DHCP server. Plug in those computers and watch them work! With Windows systems navigate to the {{Path|TCP/IP Properties}} and select the {{Path|Obtain an IP address automatically}} and {{Path|Obtain DNS server address automatically}} options. Sometimes the changes are not instantaneous, so opening a command prompt and running <tt>ipconfig /release</tt> and <tt>ipconfig /renew</tt> might be necessary. Enough about Windows, time to get back to everyone's favorite penguin!

=== Сервер DNS ===

Когда человек хочет посетить адрес в интернете, он помнит его название, но не строку страшных цифр. Действительно, что легче запомнить, vk.com, или 87.240.131.99? Именно в этом замешан DNS. Сервера DNS работают по всему интернету, и когда кто-то хочет посетить «vk.com», эти сервера преобразовывают «vk.com» (что нам понятно) в «87.240.131.99» (что понятно нашим компьютерам). За дополнительными сведенями о DNS вы всегда можете обратиться к [[Wikipedia:DNS|Википедии]]. 

Как только мы начали использовать dnsmasq для нашего DHCP-сервера, к іому же пакет включает и DNS-сервер, вам просто больше нечего делать! Ваш маленький маршрутизатор уже обеспечивает DNS для своих DHCP-клиентов. Держу пари, вам бы хотелось, чтобы <i>всё</i> было так просто. 

Вы всегда можете выбрать другие DNS-сервера, если с ними вам удобнее; но причина, по которой dnsmasq великолепен — что он разработан чтобы делать именно то, что мы хотим, не более. Это маленький кэширующий/перенаправляющий DNS-сервер для локальных сетей. Здесь мы не пытаемся поднять DNS на собственном домене, а просто предоставляем простые услуги DNS для каждого в нашей локальной сети. 

=== NAT (или IP-маскарадинг) ===

На данном этапе люди в сети могут общаться друг с другом, и могут просматривать имена узлов через DNS, но до сих пор не в состоянии соединиться с интернетом. Пока вы думаете, что все круто (желаю побольше пропускной способности!), уверен, они не очень счастливы. 

Здесь вступает в игру преобразователь сетевых адресов (NAT). Это способ соединения нескольких компьютеров в частной сети к интернету, при малом количестве доступных публичных IP-адресов. Как правило, провайдер выделяет вам 1 IP, но вам нужно подключить целое здание к интернету. NAT — та магия, делающая это возможным. За дополнительной информацией о NAT всегда можно обратиться к [[Wikipedia:NAT|Википедии]]. 

{{Note/ru|Перед тем как начать, удостоверьтесь, что установили iptables в вашей системе. Не смотря на то, что обычно этот пакет предустановлен, у вас его может не быть. Если у вас нет, просто выполните <code>emerge iptables</code>.}}

After IPtables is installed, flush the current rules:

{{RootCmd|iptables -F
|iptables -t nat -F}}

Setup default policies to handle unmatched traffic:

{{RootCmd|iptables -P INPUT ACCEPT
|iptables -P OUTPUT ACCEPT
|iptables -P FORWARD DROP}}

Скопируйте эти примеры...

{{RootCmd|export LAN{{=}}eth0
|export WAN{{=}}eth1}}

Теперь мы заблокируем наши службы, чтобы они были доступны только из локальной сети.

{{RootCmd|iptables -I INPUT 1 -i ${LAN} -j ACCEPT
|iptables -I INPUT 1 -i lo -j ACCEPT
|iptables -A INPUT -p UDP --dport bootps ! -i ${LAN} -j REJECT
|iptables -A INPUT -p UDP --dport domain ! -i ${LAN} -j REJECT}}

(Необязательно) Разрешите доступ к нашему серверу ssh из WAN:

{{RootCmd|iptables -A INPUT -p TCP --dport ssh -i ${WAN} -j ACCEPT}}

Drop TCP / UDP packets to privileged ports:

{{RootCmd|iptables -A INPUT -p TCP ! -i ${LAN} -d 0/0 --dport 0:1023 -j DROP
|iptables -A INPUT -p UDP ! -i ${LAN} -d 0/0 --dport 0:1023 -j DROP}}

Наконец, мы добавим правила для NAT:

{{RootCmd|iptables -I FORWARD -i ${LAN} -d 192.168.0.0/255.255.0.0 -j DROP
|iptables -A FORWARD -i ${LAN} -s 192.168.0.0/255.255.0.0 -j ACCEPT
|iptables -A FORWARD -i ${WAN} -d 192.168.0.0/255.255.0.0 -j ACCEPT
|iptables -t nat -A POSTROUTING -o ${WAN} -j MASQUERADE}}

Уведомим ядро, что ip-форвардинг настроен:

{{RootCmd|echo 1 > /proc/sys/net/ipv4/ip_forward}}

{{RootCmd|for f in /proc/sys/net/ipv4/conf/*/rp_filter ; do echo 1 > $f ; done}}

Теперь после загрузки нам не нужно вручную задействовать правила.

{{RootCmd|/etc/init.d/iptables save
|rc-update add iptables default}}

{{FileBox|filename=/etc/sysctl.conf|lang=ini|1=
net.ipv4.ip_forward = 1
net.ipv4.conf.default.rp_filter = 1
}}

Если у вас динамический IP-адрес, возможно вы захотите активировать следующее:

{{FileBox|filename=/etc/sysctl.conf|lang=ini|1=
net.ipv4.ip_dynaddr = 1
}}

Как только вы все это написали, остальные пользователи сети должны получить возможность использовать интернет так, как будто сами подключились напрямую. 

The <code>ip_dynaddr</code> option is useful for dial on demand systems or when the ISP gives out dynamic addresses. This works around the problem where a connection is attempted before the Internet interface is fully setup. This provides a smoother network experience for users behind the router. 

== Прикольные вещи (для дождливого дня) ==

=== Введение ===

Верите ли, или нет, но вы закончили <!--(-->:). В этом разделе я опишу некоторые часто используемые возможности, которые могут вас заинтересовать. Чтение всего, что содержится в разделе, необязательно.

=== Переадресация портов (Port Forwarding) ===

Sometimes users need to be able to host services on a computer behind the router, or need to be able to connect remotely to a computer behind the router. Perhaps a FTP, HTTP, SSH, or VNC server is needed on one or more machines behind the router and outsiders need to connect to them all. The only caveat to Port Forwarding is only one service/machine combo can be established per port. For example, there is no practical way to setup three FTP servers behind the router and connect to them all through port 21; only one system can be on port 21 while the others would need to be on other ports (port 123 and port 567 would be fine options). 

All the port forwarding rules are of the form <code>iptables -t nat -A PREROUTING [-p protocol] --dport [external port on router] -i ${WAN} -j DNAT --to [ip/port to forward to]</code>. Unfortunately, iptables does not accept hostnames when port forwarding. When forwarding an external port to the same port on the internal machine, omit the destination port. See the iptables(8) man page for more information. 

{{RootCmd|export LAN{{=}}eth0
|export WAN{{=}}eth1}}

Forward port 2 to ssh on an internal host:

{{RootCmd|iptables -t nat -A PREROUTING -p tcp --dport 2 -i ${WAN} -j DNAT --to 192.168.0.2:22}}

FTP forwarding to an internal host:

{{RootCmd|iptables -t nat -A PREROUTING -p tcp --dport 21 -i ${WAN} -j DNAT --to 192.168.0.56}}

HTTP forwarding to an internal host:

{{RootCmd|iptables -t nat -A PREROUTING -p tcp --dport 80 -i ${WAN} -j DNAT --to 192.168.0.56}}

VNC forwarding for internal hosts:

{{RootCmd|iptables -t nat -I PREROUTING -p tcp --dport 5900 -i ${WAN} -j DNAT --to 192.168.0.2
|iptables -t nat -I PREROUTING -p tcp --dport 5901 -i ${WAN} -j DNAT --to 192.168.0.3:5900}}

To VNC in to 192.168.0.3, then add <code>:1</code> to the router's hostname.

SAMBA forwarding to an internal host (excess ports to cover Windows):

{{RootCmd|iptables -t nat -I PREROUTING -p tcp --dport 135 -i ${WAN} -j DNAT --to 192.168.0.2
|iptables -t nat -I PREROUTING -p tcp --dport 139 -i ${WAN} -j DNAT --to 192.168.0.2
|iptables -t nat -I PREROUTING -p tcp --dport 445 -i ${WAN} -j DNAT --to 192.168.0.2
|iptables -t nat -I PREROUTING -p udp --dport 137:138 -i ${WAN} -j DNAT --to 192.168.0.2
|iptables -t nat -I PREROUTING -p udp --dport 445 -i ${WAN} -j DNAT --to 192.168.0.2}}

Bittorrent forwarding:

{{RootCmd|iptables -t nat -A PREROUTING -p tcp --dport 6881:6889 -i ${WAN} -j DNAT --to 192.168.0.2}}

eDonkey/eMule forwarding:

{{RootCmd|iptables -t nat -A PREROUTING -p tcp --dport 4662 -i ${WAN} -j DNAT --to 192.168.0.55}}

Game Cube Warp Pipe support:

{{RootCmd|iptables -t nat -A PREROUTING -p udp --dport 4000 -i ${WAN} -j DNAT --to 192.168.0.56}}

Playstation 2 Online support:

{{RootCmd|iptables -t nat -A PREROUTING -p tcp --dport 10070:10080 -i ${WAN} -j DNAT --to 192.168.0.11
|iptables -t nat -A PREROUTING -p udp --dport 10070:10080 -i ${WAN} -j DNAT --to 192.168.0.11}}

Xbox Live:

{{RootCmd|iptables -t nat -A PREROUTING -p tcp --dport 3074 -i ${WAN} -j DNAT --to 192.168.0.69
|iptables -t nat -A PREROUTING -p udp --dport 3074 -i ${WAN} -j DNAT --to 192.168.0.69
|iptables -t nat -A PREROUTING -p udp --dport 88 -i ${WAN} -j DNAT --to 192.168.0.69
}}

=== Identd (для IRC) ===

Internet Relay Chat utilizes the ident service pretty heavily. Now that the IRC clients are behind the router, a way to host ident for both the router and the clients is needed. A server has been created for this purpose. It is called {{Package|net-misc/midentd}}. 

{{RootCmd|emerge midentd
|rc-update add midentd default
|/etc/init.d/midentd start
}}

There are a few other ident servers in the Portage tree. Other viable options are {{Package|net-misc/oidentd}} and {{Package|net-misc/fakeidentd}}. 

=== Сервер времени (Time Server) ===

Забота о точности установленного времени необходима для поддержки работающей системы. Самый распространенный способ достигнуть этого — использовать Network Time Protocol (NTP), и пакет ntp (который включает в себя как серверную, так и клиентскую реализации). 

У многих запущен ntp-клиент на компьютере. Очевидно, что чем больше пользователей, тем большую нагрузку должны выдерживать ntp-сервера. Однако в случаях, подобных домашней сети, мы можем снизить нагрузку на публичные сервера, продолжая при этом обеспечивать все компьютеры точным временем. Тем самым мы получаем еще один бонус: наши пользователи будут быстрее обновлять время через локальную сеть! Все что нужно — запустить ntp-сервер на нашем маршрутизаторе, который синхронизирует сам себя с публичными серверами в интернете, при этом передавая время остальным компьютерам в сети. Начните с команды <code>emerge ntp</code> на маршрутизаторе, и отредактируйте файл {{Path|/etc/conf.d/ntp-client}} по своему вкусу.

{{RootCmd|rc-update add ntp-client default}}

{{FileBox|filename=/etc/ntp.conf|1=
restrict default ignore
restrict 192.168.0.0 mask 255.255.255.0 notrust nomodify notrap
}}

Это позволит использовать ваш ntp-сервер лишь тем ntp-клиентам, IP-адрес которых находится в пределах 192.168.0.xxx.

{{RootCmd|rc-update add ntpd default
|/etc/init.d/ntp-client start
|/etc/init.d/ntpd start}}

{{Note/ru|Вам следует убедиться, что вы разрешили входящие и исходящие соединения для порта ntp (123/udp) когда настраивали сервер. Для ntp-клиента нужно разрешить только исходящие соединения для порта 123 (UDP).}}

Теперь запустите <code>emerge ntp</code> и на ваших клиентских компьютерах. На них мы просто запустим ntp-клиент, поэтому настройка будет намного проще. 

В файле {{Path|/etc/conf.d/ntp-client}} измените значение переменной NTPCLIENT_OPTS с 'pool.ntp.org' на '192.168.0.1'.

{{RootCmd|rc-update add ntp-client default
|/etc/init.d/ntp-client start}}

=== Сервер Rsync ===

For those who run multiple Gentoo boxes on the same LAN, it is wise to prevent every machine running <tt>emerge --sync</tt> with remote servers. By setting up a ''local'' rsync, both personal bandwidth and the Gentoo rsync servers' bandwidth is saved. The process is relatively simple.

{{Note|For a much more in-depth rsync guide, please see the official [[Project:Infrastructure/Rsync|rsync guide]].}}

Since every Gentoo machine requires rsync, there is no need to emerge it. Edit the default {{Path|/etc/rsyncd.conf}} config file, uncomment the <code>[gentoo-portage]</code> section, and make sure to add an <code>address</code> option. All other defaults should be already set correctly.

{{FileBox|filename=/etc/rsyncd.conf|1=
pid file = /var/run/rsyncd.pid
use chroot = yes
read only = yes
address = 192.168.0.1
  
[gentoo-portage]
  path = /mnt/space/portage
  comment = Gentoo Linux Portage tree
  exclude = /distfiles /packages
}}

The service then needs to be started (again, the defaults are OK). 

{{RootCmd|/etc/init.d/rsyncd start
|rc-update add rsyncd default}}

Only thing left is to set tell the clients to sync against the router. 

{{FileBox|filename=/etc/portage/make.conf|title=Setup SYNC variable to new rsync server|lang=bash|1=
SYNC="rsync://192.168.0.1/gentoo-portage"
}}

=== Почтовый сервер ===

Sometimes it is nice to run a Simple Mail Transfer Protocol (SMTP) server on the router. Each user may have their own reason for wanting to do so, however one advantage to running SMTP on the router is the users see mail as being sent instantly and the work of retrying/routing is left up to the mail server. Some ISPs do not allow for mail relaying for accounts that are not part of their network (like Verizon). Also, throttling the delivery of mail may be needed so that large attachments will not seriously lag the Internet connection. 

{{Emerge|netqmail}}

Убедитесь, что вывод «hostname» правильный.

{{RootCmd|emerge --config netqmail}}

{{RootCmd|iptables -I INPUT -p tcp --dport smtp ! -i ${LAN} -j REJECT
|ln -s /var/qmail/supervise/qmail-send /service/qmail-send
|ln -s /var/qmail/supervise/qmail-smtpd /service/qmail-smtpd
|cd /etc/tcprules.d}}

Edit {{Path|tcp.qmail-smtp}} and add an entry like so to the allow section:

{{FileBox|filename=niltcp.qmail-smtp|1=
192.168.0.:allow,RELAYCLIENT=""
}}

{{RootCmd|make
|rc-update add svscan default
|/etc/init.d/svscan start}}

When e-mail is setup on the hosts in the network, tell them the SMTP server is 192.168.0.1. Visit the [http://netqmail.org/ netqmail homepage] for more documentation on netqmail usage.

=== Улучшенный сервер DHCP ===

Ранее мы использовали dnsmasq для обеспечения работы клиентских служб DHCP. Для большинства пользователей с небольшой сетью LAN это идеально подходит. Но вам могут понадобиться дополнительные возможности - поэтому мы превратим наш сервер в полнофункциональный, как, например, у ребят из [http://www.isc.org/products/DHCP ISC].

{{Emerge|dhcp}}

{{FileBox|filename=/etc/dhcp/dhcpd.conf|title=Here is a simple configuration file|1=
authoritative;
ddns-update-style interim;
subnet 192.168.0.0 netmask 255.255.255.0 {
    range 192.168.0.100 192.168.0.250;
    default-lease-time 259200;
    max-lease-time 518400;
    option subnet-mask 255.255.255.0;
    option broadcast-address 192.168.0.255;
    option routers 192.168.0.1;
    option domain-name-servers 192.168.0.1;
}
</pre>}}

В {{Path|/etc/conf.d/dhcpd}} установите значение <code>IFACE</code> равным "eth0".

{{RootCmd|rc-update add dhcpd default
|/etc/init.d/dhcpd start}}

Это минимальная настройка, необходимая для замены функциональности DHCP, ранее предоставляемой dnsmasq. Кстати, не забыли ли вы отключить функции DHCP в dnsmasq? В противном случае сделайте это сейчас (просто закомментируйте настройку <code>dhcp-range</code> в {{Path|/etc/dnsmasq.conf}} и перезапустите службу).

=== Присоединение другой LAN (или двух, или трёх, или...) ===

Иногда необходимо соединить маршрутизатор с другой LAN. Может, вы хотите на время подключить нескольких друзей, или вы помешаны на аккуратности, и хотите отделить разные группы компьютеров, или вам просто очень скучно. Какая бы ни была причина, добавить в зону доступа маршрутизатора другие локальные сети довольно просто. В следующих примерах я буду считать, что эта новая сеть подключена к третьей сетевой карте <code>eth2</code>. 

First configure the interface. Take the instructions in [[Hug_the_LAN_.28bring_along_some_friends.29|this section]] and replace <code>eth0</code> with <code>eth2</code> and <code>192.168.0</code> with <code>192.168.1</code>.

Tweak dnsmasq to service the new interface. Edit the {{Path|/etc/conf.d/dnsmasq}} file again and append <code>-i eth2</code> to <code>DNSMASQ_OPTS</code>; using -i multiple times is OK. Then edit {{Path|/etc/dnsmasq.conf}} and add another line like the dhcp-range line in [[#LAN_Services_.28because_we.27re_nice_people.29|this section]], replacing <code>192.168.0</code> with <code>192.168.1</code>. Having multiple dhcp-range lines is OK too. 

Finally, see the rules in [[#LAN_Services_.28because_we.27re_nice_people.29|this section]] and duplicate the rules that have <code>-i ${LAN}</code> in them. Another variable may need to be created, say <code>LAN2</code>, to make things easier.

== Устранение неполадок ==

=== Полезные инструменты ===

When having trouble getting computers to communicate try out the following tools (they can all be found in the net-analyzer Portage category): 

{| class="wikitable" style="text-align: left;" 
|- 
! Utility
! Description
|- 
| wireshark
| GUI tool to view all raw network data according to filters
|- 
| tcpdump
| Console tool to dump all raw network data according to filters
|- 
| iptraf
| ncurses based IP LAN monitor
|- 
| ettercap
| ncurses based network monitor/control
|-
|}

=== DHCP не запускается ===

При первом запуске сценарий init.d для dhcp может завершиться с ошибкой, не предоставив никакой полезной информации. 

{{RootCmd|/etc/init.d/dhcp start|output=<pre>
 * Setting ownership on dhcp.leases ...          [ ok ]
 * Starting dhcpd ...                            [ !! ]
</pre>
}}

Фокус в том, чтобы знать, куда dhcpd направляет вывод. Просто перейдите в {{Path|/var/log}} и прочитайте файлы журналов. Если какой-то файл журнала зависит от пакета, который используется вами в качестве syslog, попробуйте запустить <code>grep -Rl dhcpd /var/log</code>, чтобы сузить круг поиска. Скорее всего, вы опечатались в конфигурационном файле. Вы также можете запустить <code>dhcpd -d -f</code> (сокращенно debug / foreground) и найти ошибку, основываясь на выводе программы. 

=== Неправильное значение MTU ===

Если у вас случаются странные ошибки (вроде невозможности доступа к некоторым веб-страницам, когда остальные прекрасно загружаются), возможно, проблема в Path MTU Discovery. Быстрий способ проверить, так ли это, заключается в этих коммандах iptables: 

{{RootCmd|iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu}}

This will affect all new connections; refresh the problematic website in order to test the fix. In case it helps, the standard MTU value for 100mbit ethernet connections is <code>1500</code>; this value also applies to PPPoA. For PPPoE connections it is <code>1492</code>. For more info, read Chapter 15 of the [http://lartc.org/howto/ Linux Advanced Routing & Traffic Control HOWTO]. 

If the above command does not work, consider putting the rule into the mangle table. Simply add <tt>-t mangle</tt> to the command. 

=== Невозможно соединить два компьютера напрямую ===

Если (по какой-либо причине) вам нужно напрямую соединить два компьютера, без использования концентратора (хаба) или коммутатора, скорее всего не получится сделать это обычным Ethernet-кабелем, если только у вас нет сетевой платы с поддержкой Auto MDI/MDI-X (т. н. автоопределение). Вам также понадобится перекрёстный (crossover) кабель. На странице [[Wikipedia:Ethernet_crossover_cable|Wikipedia]] содержится подробная низкоуровневая информация.

== Завершающие заметки ==

У меня нет завершающих заметок. Если у вас появятся проблемы со статьей, напишите пользователю {{Mail|vapier}} (обратите внимание, что он знает только английский язык - прим. перев.), либо оформите баг на [https://bugs.gentoo.org/ багтрекере Gentoo] (опять же, на английском языке, прим. перев.). Если у вас есть некоторая информация, которая может улучшить данную статью, сразу же присылайте ее мне для включения.

[[Category:Server and Security]] {{Migrated|originalauthors={{Mail|vapier}}}}
