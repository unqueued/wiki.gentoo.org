<languages/>
<translate>

== Sponsor ==
[https://www.teu.ac.jp/ 東京工科大学] - server sponsor

{{InfoBox stack
| {{InfoBox github|gentoo/elivepatch-client|header=true|text=elivepatch-client}}
| {{InfoBox github|gentoo/elivepatch-server|text=elivepatch-server}}
| {{InfoBox github|aliceinwire/elivepatch-server-docker|text=elivepatch-server-docker}}
}}

== Introduction ==

Flexible Distributed Linux Kernel Live Patching

[https://www.kernel.org/doc/Documentation/livepatch/livepatch.txt livepatch] is a Linux Kernel facility that allows to build a kernel module to update a running kernel without requiring a reboot.

'''Elivepatch''' is a client-server infrastructure to automate the creation and distribution of those modules.

[[File:ZDzIl3CEP1L6U6XI-B43E4.png|thumbnail|elivepatch diagram]]

=== Use Cases ===

* Resource-constrained updates
** Distributed live patch building
** Incremental live patch (You can build live patch over the previous one)
* Automatic no-reboot updates for [https://github.com/nluedtke/linux_kernel_cves security CVE]

== Setup ==
The software is mainly two components:
* '''elivepatch-client''': Client to be run on the machines to be updated.
* '''elivepatch-server''': Server in charge of building the livepatch modules.

The two use a RESTful API for receiving the kernel ''configuration'' and a source 'diff' and generate a ''livepatch'' module out of it using [[kpatch]]

=== Server setup ===
{{RootCmd|emerge --ask elivepatch-server}}

This will install the init.d file under /etc/init.d/elivepatch and the conf.d under /etc/conf.d/elivepatch.<br>
From the conf.d file you can change the elivepatch daemon user and permission (by default is root).<br>
You can start elivepatch-server on machine startup with:<br>
{{RootCmd|rc-config add elivepatch-server default}}

The machine will need to have enough space to build several kernels and the toolchains used to build the original kernel.

=== Client setup ===
{{RootCmd|emerge --ask elivepatch-client}}

The client is as well a python program.

== Usage examples ==

=== One time livepatch build ===
{{RootCmd|elivepatch  --config <file.config> --patch <example.patch> --url <elivepatch-server_url:elivepatch-server_port>}}

The '''example.patch''' is a diff from the original kernel sources the '''file.config''' belongs to (the elivepatch-client figures out the kernel version from it).

The command will contact the elivepatch server and request a livepatch module matching the patch provided.

=== CVE livepatch ===
{{RootCmd|elivepatch  --cve --kernel <kernel_version> --url <elivepatch-server-url:port>}}

It will automatically produce a '''cve.patch''' from the cve advisories for the current running kernel and request a ''livepatch'' module.

It could be used as a cronjob command to keep an always-on machine up to date security-wise.

== Limitations ==
=== Patch creation ===
''elivepatch'' uses '''kpatch''' under the hood and the system has the following limitations:
* [https://github.com/dynup/kpatch/blob/master/doc/patch-author-guide.md#change-the-code-which-uses-the-data-structure Patch that change data structure]
* [https://github.com/dynup/kpatch/blob/master/doc/patch-author-guide.md#use-a-kpatch-load-hook Change content of existing variable]
* [https://github.com/dynup/kpatch/blob/master/doc/patch-author-guide.md#use-a-shadow-variable Add field to existing data structure]
* Init code changes are incompatible with kpatch
* [https://github.com/dynup/kpatch/blob/master/doc/patch-author-guide.md#header-file-changes Header file changes]
* [https://github.com/dynup/kpatch/blob/master/doc/patch-author-guide.md#dealing-with-unexpected-changed-functions Dealing with unexpected changed functions]
* [https://github.com/dynup/kpatch/blob/master/doc/patch-author-guide.md#removing-references-to-static-local-variables Removing references to static local variables]
* [https://github.com/dynup/kpatch/blob/master/doc/patch-author-guide.md#code-removal Code removal]

=== Toolchain pinning ===
The '''livepatch''' generation process needs a toolchain matching the one used to build the original kernel. Depending on the number of system to serve, this will require a large collection of gcc.

=== Security concerns ===
Automated live patching creation needs to trust the '''diff''' provided. It is advised to keep the process containerized.
For this purpose [[Docker]] images are being worked on.

== Background ==

This project is part of GSoC 2017 and the code is written by [[User:Alicef]] mentored by [[User:Gokturk]]

Written code:<br>
* [https://github.com/aliceinwire/elivepatch kpatch ebuild merged in the Gentoo official repository]
* [https://github.com/aliceinwire/elivepatch-client elivepatch client]
* [https://github.com/aliceinwire/elivepatch-server elivepatch server]
* [https://github.com/gentoo/gentoo/pull/5608 Official Gentoo repository elivepatch merge pull-request]
Reports:
* [http://dev.gentoo.org/~alicef/elivepatch.pdf half term report]
* [https://docs.google.com/presentation/d/1a4FPoBCopH0VmSZ0to73EO3eX01A4tHnpeirwylwUJ0/edit?usp=sharing half term presentation]
* [http://aliceinwire.net/tag/tags/GSoC_2017/ Some public reports]
</translate>
