<languages />

{{Metadata|abstract=Xorg - это сервер оконной системы X Window, который позволяет пользователю организовать для себя графическую рабочую среду. Это руководство объясняет что такое Xorg, как его установить и за что отвечают различные параметры конфигурации.}}

Xorg - это сервер оконной системы [[X server|X Window server]], который позволяет пользователю организовать для себя графическую рабочую среду. Это руководство объясняет что такое Xorg, как его установить и за что отвечают различные параметры конфигурации.

== Что такое сервер оконной системы X Window? ==

=== Графический интерфейс против командной строки ===

Среднестатистический пользователь может быть встревожен мыслью о том, что ему придётся вводить команды. Почему бы ему не щёлкать мышью с той свободой, какую предоставляет Gentoo (и вообще Linux)? Конечно же, это возможно! Linux предлагает широкий выбор бросающихся в глаза пользовательских интерфейсов и сред, которые можно установить поверх существующей установки. 

Это один из огромных сюрпризов для новых пользователей: графический интерфейс ничего более, чем приложение, запущенное на их системе. Это не часть ядра Linux и вообще не внутренняя часть системы. Это мощное средство для полной поддержки графических возможностей рабочей станции. 

Стандарты важны, и стандарт для отрисовки и перемещения окон на экране, взаимодействующий с мышью, клавиатурой и другим оборудованием, а также включающий иные важные аспекты, был создан и назван ''X Window System'', обычно сокращенный до ''X11'' или просто ''X''. Он используется на Unix, Linux и Unix-подобных операционных системах по всему миру. 

Приложением, которое дает возможность пользователям Linux запускать графический интерфейс и использующее стандарт X11, является Xorg-X11, форк проекта XFree86. В XFree86 используется не совместимая с GPL лицензия; следовательно, рекомендуется использовать Xorg. Официальное дерево Portage больше не предоставляет пакет XFree86.

=== Проект X.org ===

Проект [http://www.x.org X.org] создан и поддерживается как свободно распространяемая реализация системы X11 с открытым исходным кодом. А также это основанная на X11 инфраструктура рабочего стола. 

Xorg обеспечивает интерфейс между вашим аппаратным обеспечением и графическим программным обеспечением, которое вы хотите запустить. Помимо этого, Xorg умеет работать в сети, что позволяет запускать программу на одной системе, а смотреть на другой. 

== Установка ==

До того, как вы установите Xorg, вам необходимо подготовить систему к этому. Во-первых, настроим ядро для поддержки устройств ввода и видеокарт. Затем, мы подготовим {{Path|[[:/etc/portage/make.conf]]}} так, чтобы нужные драйверы и Xorg пакеты были собраны и установлены. 

=== Поддержка устройств ввода ===

По умолчанию, Xorg использует <code>[[evdev]]</code>, общий драйвер для устройств ввода. Вам нужно включить поддержку для <code>evdev</code> путем внесения изменений в вашу конфигурацию ядра. Смотрите [[Kernel/Gentoo_Kernel_Configuration_Guide/ru|руководство по конфигурации ядра]], если вы не знаете как настроить ваше ядро. 

{{KernelBox|title=Включение поддержки evdev в ядре|<pre>
Device Drivers --->
  Input device support --->
  <*>  Event interface
</pre>
}}

=== Установка режима в ядре ===

Современные видео драйверы с открытым исходным кодом зависят от KMS. KMS предоставляет улучшенную графическую загрузку с меньшим мерцанием, более быстрым переключением пользователей, встроенной в кадровый буфер консолью, плавным переключением из консоли в Xorg и другие возможности.

{{Important|KMS конфликтует со старыми драйверами кадрового буфера, которые должны оставаться в состоянии '''disabled''' в настройке ядра.}}

Начальная подготовка ядра для KMS. На этом шаге не имеет значения, какой видео-драйвер будет использоваться. 

{{KernelBox|title=Отключение поддержки старого кадрового буффера и включение вместо него поддержки базовой консоли|<pre>
Device Drivers --->
   Graphics support --->
      Frame Buffer Devices --->
         <*> Support for frame buffer devices --->
         ## (Отключите все драйвера, включая VGA, Intel, nVidia и ATI, подключайте поддержку кадрового буфера EFI только если вы используете UEFI)
 
    ## (Дальше, подключите базовую консоль. Её использует KMS.)
    Console display driver support --->
      <*>  Framebuffer Console Support
</pre>
}}

Далее настройте ядро для использования правильного KMS драйвера для видеокарты. Intel, nVidia и AMD/ATI подойдут для большинства используемых карт, следуйте коду ниже. 

Для видеокарт Intel смотрите [[Intel#Kernel|kernel section of the Intel article]].

Для видеокарт nVidia: 

{{KernelBox|title=Настройки nVidia|<pre>
Device Drivers --->
   Graphics support --->
      Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
         <*>  Nouveau (nVidia) cards
</pre>
}}

Для новых AMD/ATI карт ([[ATI_FAQ|RadeonHD 2000 and up]]), установите пакет {{Package|x11-drivers/radeon-ucode}} или {{Package|sys-kernel/linux-firmware}}. Когда один из этих пакетов будет установлен, настройте ядро как написано в [[Radeon#Firmware|firmware section]] из [[Radeon|Radeon article]]: 

{{KernelBox|title=Настройка AMD/ATI|<pre>
## (Установка ядра на использование прошивки radeon-ucode)
Device Drivers --->
   Generic Driver Options --->
   [*]  Include in-kernel firmware blobs in kernel binary
  ## # Только для карт ATI, (см. страницу Radeon для детализации включенных в прошивку файлов)
   (radeon/<CARD-MODEL>.bin ...)
  ## # Определение корневой директории
   (/lib/firmware/) External firmware blobs to build into the kernel binary
 
## (Включить поддержку Radeon в KMS)
Device Drivers --->
   Graphics support --->
   <*>  Direct Rendering Manager --->
   <*>    ATI Radeon
   [*]      Enable modesetting on radeon by default
   [ ]      Enable userspace modesetting on radeon (DEPRECATED)
</pre>
}}

{{Note|Old Radeon cards (X1900 series and older) do not need the {{Package|x11-drivers/radeon-ucode}} package or any firmware configuration.  For them simply enable the Direct Rendering Manager (DRM) and ATI Radeon modesetting.}}

{{Note|Linux kernel >{{=}} 3.9 does not have the ''Enable modesetting on radeon by default'' since it is already implied by default. Do not be alarmed if you find this option missing in new kernels.}}

Exit the kernel configuration, [[Kernel/Rebuild|rebuild the kernel, and reboot]].

Now that KMS has been set up, continue preparing {{Path|[[:/etc/portage/make.conf]]}} in the next section.

=== make.conf configuration ===

Now that the kernel is prepared, two important variables in the {{Path|[[:/etc/portage/make.conf]]}} file must be configured before installing Xorg. 

The first variable is <var>[[:/etc/portage/make.conf#VIDEO_CARDS|VIDEO_CARDS]]</var>. This is used to set the video drivers that you intend to use and is usually based on the kind of video card you have. The most common settings are <code>nouveau</code> for nVidia cards or <code>radeon</code> for ATI cards. Both have actively developed, well-supported open-source drivers. 

{{Note|You may also try the proprietary drivers from nVidia and AMD/ATI, <code>nvidia</code> and <code>fglrx</code> respectively. However, setting up the proprietary drivers is beyond the scope of this guide. Please read the [[NVidia/nvidia-drivers|Gentoo Linux nVidia Guide]] and [[ATI_FAQ|Gentoo Linux ATI FAQ]]. If you don't know which drivers you should choose, refer to these guides for more information.}}

The <code>intel</code> driver may be used for desktops or laptops with common Intel integrated graphics chipsets. 

{{Note|The <var>VIDEO_CARDS</var> variable may contain more than one value as long as each value is separated by a space.}}

The second variable is <var>INPUT_DEVICES</var> and is used to determine which drivers are to be built for input devices. In most cases setting it to <code>[[evdev]]</code> should work just fine. If you use alternative input devices, such as a Synaptics touchpad for a laptop, be sure to add it to <var>INPUT_DEVICES</var>. 

Decide which drivers will be used and add necessary settings to the {{Path|[[:/etc/portage/make.conf]]}} file: 

{{CodeBox|title=Sample make.conf entries|lang=bash|1=
## (For mouse, keyboard, and Synaptics touchpad support)
INPUT_DEVICES="evdev synaptics"
## (For nVidia cards)
VIDEO_CARDS="nouveau"
## (For AMD/ATI cards)
VIDEO_CARDS="radeon"
}}

If the suggested settings does not work emerge the {{Package|x11-base/xorg-drivers}} package(see the step below). Check all the options available and choose those which apply to the system. This example is for a system with a keyboard, mouse, Synaptics touchpad, and a Radeon video card. 

{{Emerge|x11-base/xorg-drivers|params+=--verbose|output=<pre>
 
These are the packages that would be merged, in order:
 
Calculating dependencies... done!
[ebuild   R   ]  x11-base/xorg-drivers-1.9  INPUT_DEVICES="evdev synaptics
-acecad -aiptek -elographics% -fpit% -joystick -keyboard -mouse -penmount -tslib
-virtualbox -vmmouse -void -wacom"
VIDEO_CARDS="radeon -apm -ark -ast -chips -cirrus -dummy -epson -fbdev -fglrx
(-geode) -glint -i128 (-i740) (-impact) -intel -mach64 -mga -neomagic (-newport)
-nouveau -nv -nvidia -r128 -rendition -s3 -s3virge -savage -siliconmotion -sis
-sisusb (-sunbw2) (-suncg14) (-suncg3) (-suncg6) (-sunffb) (-sunleo) (-suntcx)
-tdfx -tga -trident -tseng -v4l -vesa -via -virtualbox -vmware (-voodoo) (-xgi)"
0 kB
</pre>
}}

After setting all the necessary variables Xorg can be installed:

{{Emerge|x11-base/xorg-server}}

{{Note|The {{Package|x11-base/xorg-x11}} meta-package could be installed instead of the more lightweight {{Package|x11-base/xorg-server}}. Functionally {{Package|x11-base/xorg-x11}} and {{Package|x11-base/xorg-server}} are the same, however {{Package|x11-base/xorg-x11}} brings in many more packages that most systems will probably not require. Additional packages include a large assortment of fonts in many languages. They are not necessary for a working X11 framework.}}

When the installation is finished, some environment variables will need to re-initialized before continuing. Source the profile with this command:

{{RootCmd
|env-update
|source /etc/profile
}}

=== NVidia users ===

For NVidia users it might be beneficial to run {{c|nvidia-xconfig}} in order to generate a working {{Path|xorg.conf}} file for the selected graphics card. Without this step the {{Path|xorg.conf}} file will need to be created manually as described below. Missing the {{Path|xorg.conf}} will sometimes generate a "No screens found" error to the terminal when attempting to {{c|startx}}.

Also the NVidia driver will only work after a reboot, so be sure to restart the system after running {{c|nvidia-xconfig}}.

{{RootCmd|nvidia-xconfig}}

It is both possible and recommended to set the OpenGL renderer to the hardware renderer instead of a software renderer:

{{RootCmd|eselect opengl set nvidia}}

== Конфигурация ==

The [[X server]] is designed to work out-of-the-box, with no need to manually edit Xorg's configuration files. It ''should'' detect and configure devices such as displays, keyboards, and mice.

Try [[#Using_startx|using startx]] without editing any configuration files. If Xorg will not start, or there is some other problem, then manual configuration of Xorg will be needed. This is explained in the following section. 

{{Note|If changes have been made to the kernel, do not forget to '''restart the system''' ''before'' using {{c|startx}} in order to be using the newly built kernel. If the kernel was updated to a newer version in the process this will most likely require the bootloader's configuration files to be updated as well.}}

=== Каталог {{Path|xorg.conf.d}} ===

{{Important|Configuring files in {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|xorg.conf.d]]}} should be seen as a last resort option. If possible it is desirable to run Xorg without any special configuration.}}

Most of the configuration files for Xorg are stored in {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|/etc/X11/xorg.conf.d/]]}}. Each file is given a unique name and ends in {{Path|.conf}}. The file names in Xorg's configuration directory will be read in alpha numeric order. For example, {{Path|10-evdev.conf}} will be read before {{Path|20-synaptics.conf}}; {{Path|a-evdev.conf}} will be read before {{Path|b-synaptics.conf}}, and so on. The files in this directory are not required to be numbered, but doing so will help to keep them organized. Organization is helpful when debugging faulty configuration files.

{{Note|Xorg provides example configurations in {{Path|/usr/share/doc/xorg-server-${version}/xorg.conf.example.bz2}}. These can be used to create custom configuration files in {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|/etc/X11/xorg.conf.d/]]}}. The examples are heavily commented, but if more documentation regarding the syntax is needed, {{c|man xorg.conf}} is always available. Other examples can be found in the section [[#Other_resources|Other resources]] at the end of this guide.}}

=== Использование startx ===

Try {{c|startx}} to start up the [[X server]]. {{c|startx}} is a script (it's installed by {{Package|x11-apps/xinit}}) that executes an ''X session''; that is, it starts the [[X server]] and some graphical applications on top of it. It decides which applications to run using the following logic: 

* If a file named {{Path|.xinitrc}} exists in the home directory, it will execute the commands listed there.

*  Otherwise, it will read the value of the <var>XSESSION</var> variable from the {{Path|/etc/env.d/90xsession}} file and execute the relevant session accordingly. Values for <var>XSESSION</var> are available in {{Path|/etc/X11/Sessions/}}. To set a system wide default session run:

: {{RootCmd|echo XSESSION{{=}}"Xfce4" > /etc/env.d/90xsession}}

: This will create the {{Path|90xsession}} file and set the default X session to [[Xfce/Guide|Xfce]]. Remember to run {{c|env-update}} after making changes to {{Path|90xsession}}.

{{Cmd|startx}}

If no window manager has been installed a solid black screen will appear. Since this can also be a sign that something is wrong, the {{Package|x11-wm/twm}} and {{Package|x11-terms/xterm}} packages can be installed only to test X. 

Once the programs are installed, run {{c|startx}} again. A few {{c|xterm}} windows should appear, making it easy to verify the [[X server]] is working correctly. Once satisfied with the results, unmerge {{Package|x11-wm/twm}} and {{Package|x11-terms/xterm}} if installed in the step above to remove the testing packages. They will not be needed to setup a proper desktop environment.

The session (program to start) could also be given as an argument to {{c|startx}}:

{{Cmd|startx /usr/bin/startfluxbox}}

You can also pass X11 server options, by preceding them with a double dash:

{{Cmd|startx -- vt7}}

=== Tweaking X settings ===

==== Setting the screen resolution ====

If the screen resolution looks to be wrong, you will need to check two sections in your {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|xorg.conf.d]]}} configuration. First of all, you have the ''Screen'' section which lists the resolutions that your [[X server]] will run at. This section might not list any resolutions at all. If this is the case, Xorg will estimate the resolutions based on the information in the second section, ''Monitor''. 

Now let us change the resolution. In the next example from {{Path|/etc/X11/xorg.conf.d/40-monitor.conf}} we add the <code>PreferredMode</code> line so that our [[X server]] starts at 1440x900 by default. The <code>Option</code> in the <code>Device</code> section must match the name of your monitor (<code>DVI-0</code>), which can be obtained by running {{c|xrandr}}. Install {{c|xrandr}} ({{c|emerge xrandr}}) just long enough to get this information. The argument after the monitor name (in the <code>Device</code> section) must match the <code>Identifier</code> in the <code>Monitor</code> section. 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier  "RadeonHD 4550"
  Option      "Monitor-DVI-0" "DVI screen"
EndSection
Section "Monitor"
  Identifier  "DVI screen"
  Option      "PreferredMode" "1440x900"
EndSection
</pre>
}}

Run X ({{c|startx}}) to discover it uses the desired resolution.

==== Multiple monitors ====

More than one monitor in can be established in {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|/etc/X11/xorg.conf.d/]]}}. Give each monitor a unique identifier, then list its physical position, such as "RightOf" or "Above" another monitor. The following example shows how to configure a DVI and a VGA monitor, with the VGA monitor as the right-hand screen: 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier "RadeonHD 4550"
  Option     "Monitor-DVI-0" "DVI screen"
  Option     "Monitor-VGA-0" "VGA screen"
EndSection
Section "Monitor"
  Identifier "DVI screen"
EndSection
Section "Monitor"
  Identifier "VGA screen"
  Option     "RightOf" "DVI screen"
EndSection
</pre>
}}

==== Configuring the keyboard ====

To setup X to use an international keyboard create the appropriate config file in {{Path|[[Xorg.conf#xorg.conf.d.2C_xorg.conf|/etc/X11/xorg.conf.d/]]}}. This example features a Czech keyboard layout: 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/30-keyboard.conf|output=<pre>
Section "InputClass"
        Identifier "keyboard-all"
        Driver "evdev"
        Option "XkbLayout" "us,cz"
        Option "XkbModel" "logitech_g15"
        Option "XkbRules" "xorg"
        Option "XkbOptions" "grp:alt_shift_toggle,grp:switch,grp_led:scroll,compose:rwin,terminate:ctrl_alt_bksp"
        Option "XkbVariant" ",qwerty"
        MatchIsKeyboard "on"
EndSection
</pre>
}}

For methods of switching the keyboard layout see the [[Keyboard_layout_switching#X11|Keyboard layout switching]] article.

The "terminate" command (<code>terminate:ctrl_alt_bksp</code>) lets users kill the X session by using the {{Key|Ctrl}}+{{Key|Alt}}+{{Key|Backspace}} key combination. This will, however, make X exit disgracefully -- something that users might want to avoid. It can be useful when programs have frozen the display entirely, or when configuring and tweaking the Xorg environment. Be careful when killing the desktop with this key combination - most programs really do not like it when they are ended this way. Some, if not all, of the information that has not been written to the disk (information stored in "open documents") will be lost.

==== Finishing up ====

Run {{c|startx}} and be happy about the result. Congratulations, you now (hopefully) have a working Xorg! The next step is to install a useful window manager or desktop environment such as [[KDE]], [[GNOME]], or [[Xfce]]. Information on installing these desktop environments can be found here on the wiki.

== Смотрите также ==

* [[Wayland]] - The next generation window manager for Linux.

== Ссылки ==

=== Creating and editing config files ===

First of all, {{c|man xorg.conf}} and {{c|man evdev}} provide quick yet complete references about the syntax used by these configuration files. Be sure to have them open on a terminal when editing Xorg configuration files! 

There are also many online resources on editing config files in {{Path|/etc/X11/}}. Only a few are listed here; use a choice favorite search engine to find more.

=== Другие ресурсы ===

More information about installing and configuring various graphical desktop environments and applications can be found in the [[Category:Desktop|Gentoo desktop resources]] section of our documentation. 

When upgrading to xorg-server 1.9 or higher, be sure to read the [[X_server/upgrade|migration guide]]. 

X.org provides many [http://www.x.org/wiki/FAQ FAQs] on their website, in addition to their other documentation.

{{Migrated|originalauthors=swift, nightmorph}}
[[Category:X.Org]]
