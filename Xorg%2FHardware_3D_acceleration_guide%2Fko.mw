<languages />


{{Metadata|abstract=이 문서는 젠투 리눅스에서 Xorg와 DRM을 사용하여 3D 가속을 동작하게 하도록 하는 과정을 안내합니다.}}

이 문서는 젠투 리눅스에서 Xorg와 DRM을 사용하여 3D 가속을 동작하게 하도록 하는 과정을 안내합니다.

== 도입부 ==

=== 하드웨어 3D 가속은 무엇이며 왜 필요한가요? ===��������������

하드웨어 3D 가속을 할때 3D �표현은 3D 이미지를 표현하는데 값진 CPU 자원을 다루는 대신 비디오 카드의 그래픽 프로세서를 사용합니다. 하드웨어 3D 가속을 하지 않으면 CPU는, 좀 더 많은 프로세싱 성능을 수반하는 Mesa 소프트웨어 렌더링 라이브러리를 사용하여 모든 3D 영상을 그리도록 강제하므로 "소프트웨어 가속" 대신 "하드웨어 가속"으로 많이 참조합니다. Xorg가 보통 2D 하드웨어 가속을 지원하는데 반해 하드웨어 3D 가속에 대해 종종 무언가가 빠져있습니다. 3D 하드웨어 가속은 게임이나 3D 캐드, 모델링과 같은 3D 객체를 표현할 필요가 있는 상황에서 빛을 발합니다. 

=== 어떻게 하드웨어 3D 가속 기능을 동작시키죠? ===

대부분의 경우, 바이너리와 오픈소스 드라이버가 있습니다. 오픈소스 드라이버는 리눅스를 사용할 때부터 이미 마련되어 있으며 오픈소스는 근본적인 밑바탕 중 하나입니다. 가끔은 특히 그래픽 카드가 상당히 최근에 나와서 해당 기능을 지원하도록 오픈 소스 드라이버를  작성이 안되었을 경우 바이너리 드라이버가 유일한 선택이 될 수 있습니다. 바이너리 드라이버는 nVidia 드라이버용으로 {{Package|x11-drivers/nvidia-drivers}}가 있고 AMD/ATi 카드용으로 {{Package|x11-drivers/ati-drivers}}가 있습니다. 

== DRI란 무엇인가요? ==

The [http://dri.freedesktop.org/wiki/ Direct Rendering Infrastructure], also known as the DRI, is a framework for allowing direct access to graphics hardware in a safe and efficient manner. It includes changes to the X server, to several client libraries and to the kernel. The first major use for the DRI is to create fast OpenGL implementations. 

=== What is the DRM and how does it relate to regular Xorg? ===

The DRM (Direct Rendering Manager) is an ''enhancement'' to Xorg that adds 3D acceleration for cards by adding the kernel module necessary for direct rendering. 

=== Purpose ===

This guide is for people who can't get direct rendering working with just Xorg. The DRM works for the following drivers: 

* 3dfx
* intel
* matrox
* nouveau
* rage128
* radeon
* mach64
* sis300
* via

See the [http://dri.freedesktop.org/ DRI homepage] for more info and documentation. 

== Xorg 설치 및 커널 설정 ==

=== Install Xorg ===

Please read our [https://wiki.gentoo.org/wiki/Xorg/Configuration Xorg Configuration Guide] to get Xorg up and running. 

=== Configure your kernel ===

Probe for your chipset and enable just that one. 

{{Emerge|pciutils}}

{{RootCmd|lspci {{!}} grep AGP|output=<pre>
# 00:01.0 PCI bridge: Intel Corp. 440BX/ZX/DX - 82443BX/ZX/DX AGP bridge (rev 03)
</pre>
}}

Your output may not match the above due to different hardware.

If your chipset is not supported by the kernel you might have some success by passing <code>agp=try_unsupported</code> as a kernel parameter. This will use Intel's generic routines for AGP support. To add this parameter, edit your bootloader configuration file! 

Most, if not all, kernels should have these options. This was configured using a standard {{Package|sys-kernel/gentoo-sources}} kernel.

{{RootCmd|ls -l /usr/src/linux |output=<pre>
lrwxrwxrwx 1 root root 22 2007-02-14 20:12 /usr/src/linux -> linux-2.6.18-gentoo-r4
</pre>}}

Make sure /usr/src/linux links to your current kernel.

{{RootCmd|cd /usr/src/linux
|make menuconfig}}

{{Kernel|Hardware 3D acceleration options|<pre>
Processor type and features --->
<*> MTRR (Memory Type Range Register) support
Device drivers --->
   Graphics support --->
   <M> /dev/agpgart (AGP Support) --->
      (The agpgart option is not present on 64-bit kernels; just choose your chipset support.)
      <M> Intel 440LX/BX/GX, I8xx and E7x05 support
      (Enable your chipset instead of the above.)
   <M> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
      <M> (Select your graphics card from the list)
</pre>
}}

=== Compile and install your kernel ===

{{RootCmd|make && make modules_install}}

Don't forget to set up {{Path|grub.conf}} or {{Path|lilo.conf}} and run <code>/sbin/lilo</code> if you use LILO. 

=== Add your user to the video group ===

Next, add your user(s) to the video group, as explained in the [http://www.gentoo.org/doc/en/handbook handbook]: 

{{RootCmd|gpasswd -a username video}}

== Configure direct rendering ==

=== Configure Xorg ===

Hopefully just adding your user to the <code>video</code> group is sufficient to enable direct rendering. However, you may also need to create a file in {{Path|/etc/X11/xorg.conf.d/}}. You can name it anything you like; just make sure it ends in {{Path|.conf}}. Open up your favorite text editor and create a file with this inside it: 

{{File|/etc/X11/xorg.conf.d/10-dri.conf||<pre>
Section "Device"
  Driver "radeon"
EndSection
Section "dri"
  Mode 0666
EndSection
</pre>
}}

Replace radeon with the name of your driver.

=== Changes to /etc/conf.d/modules ===

You will need to add the module name that your card uses to {{Path|/etc/conf.d/modules}} to ensure that the module is loaded automatically when the system starts up. 

{{File|/etc/conf.d/modules||<pre>
modules="intel-agp" # Substitute with your driver
</pre>
}}

{{Note|If you compiled <code>agpgart</code> as a module, you will also need to add it to {{Path|/etc/conf.d/modules}}.}}

== Test 3D acceleration ==

=== Reboot to the new kernel ===

Reboot your computer to your new kernel and login as a normal user. It's time to see if you have direct rendering and how good it is. <code>glxinfo</code> and <code>glxgears</code> are part of the {{Package|x11-apps/mesa-progs}} package, so make sure it is installed before you attempt to run these commands.

{{Cmd|startx}}

No need to load modules for your driver or agpgart, even if you compiled them as a module. They will be loaded automatically.

{{Cmd|glxinfo {{!}} grep rendering|output=<pre>
direct rendering: Yes
</pre>}}

If it says "No", you don't have 3D acceleration.

{{Cmd|glxgears}}

Test your frames per second (FPS) at the default size. The number should be significantly higher than before configuring DRM. Do this while the CPU is as idle as possible.

{{Note|FPS may be limited by your screen's refresh rate, so keep this in mind if <code>glxgears</code> reports only about 70-100 FPS. {{Package|games-fps/ut2004-demo}} or other 3D games are better benchmarking tools, as they give you real-world performance results.}}

=== Get the most out of direct rendering ===

If you want to set more features, for performance or other reasons, check out the [http://dri.freedesktop.org/wiki/FeatureMatrix feature matrix] on the DRI web site or the [http://dri.sourceforge.net/doc/dri_driver_features.phtml features listing] on Sourceforge. 

== Troubleshooting ==

=== It doesn't work. I don't have rendering, and I can't tell why. ===

Try <code>modprobe radeon</code> before you start the X server (replace <code>radeon</code> with the name of your driver). Also, try building agpgart into the kernel instead of as a module. 

=== When I startx, I get this error: "[drm] failed to load kernel module agpgart" ===

That's because you compiled agpgart into the kernel instead of as a module. Ignore it unless you're having problems. 

=== I have a Radeon, and I want TV-Out. ===

The drivers originally developed by the [http://gatos.sf.net GATOS] project have been merged into Xorg's codebase. You don't need anything special for TV-Out; {{Package|x11-drivers/xf86-video-ati}} will work just fine.

=== It doesn't work. My card is so incredibly new and cool that it isn't supported at all. ===

Try out the binary drivers. For AMD cards, use <code>ati-drivers</code>; a listing is at [http://support.amd.com/us/gpudownload/Pages/index.aspx http://support.amd.com/us/gpudownload/Pages/index.aspx]. If those don't support it, use fbdev. It's slow, but it works.

=== I have a PCI card and it doesn't work.  Help! ===

Create a config file in {{Path|/etc/X11/xorg.conf.d/}}; name it anything you want as long as it ends in {{Path|.conf}}. Add the following to it: 

{{File|/etc/X11/xorg.conf.x/10-pcimode.conf|Adding ForcePCI Mode|<pre>
Section "Device"
  Option "ForcePCIMode" "True"
EndSection
</pre>
}}

== References ==

* [https://forums.gentoo.org/viewtopic.php?t=46681 https://forums.gentoo.org/viewtopic.php?t=46681]
* [https://forums.gentoo.org/viewtopic.php?t=29264 https://forums.gentoo.org/viewtopic.php?t=29264]
* [http://dri.freedesktop.org/ http://dri.freedesktop.org/]

== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:


* dberkholz
* peesh
* nightmorph

[[Category:X.Org]]
