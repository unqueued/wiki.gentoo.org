{{stub}}
{{InfoBox stack
    |{{InfoBox todo|header=true
        |Make the installation work
        |Complete the article
        |Wikify the article
        |Translate the article
    }}
    |{{InfoBox wikify}}
}}

{{Lowercase title}}

{{InfoBox stack
    |{{InfoBox homepage|http://way-cooler.org/|header=true}}
    |{{InfoBox github|way-cooler}}
    |{{InfoBox|info=[https://crates.io/crates/way-cooler crates.io]}}
}}

{{warning|way-cooler is currently '''under heavy development!'''}}

{{warning|The result of the installation steps will give you a binary, called ''way-cooler'', '''which does not work''' on Gentoo somehow. These steps have to be reworked.}}

"'''Way Cooler''' is the spiritual successor of [https://awesomewm.org/ AwesomeWM] for [https://wayland.freedesktop.org/ Wayland]. It is a customizable Wayland compositor (window manager) which uses [https://github.com/swaywm/wlroots wlroots]. Way Cooler is written in [https://www.rust-lang.org/ Rust] and C."<ref>https://github.com/way-cooler/way-cooler/commit/875a31de661e75d6ae3b27378d1b64ea00e6ef5e?short_path=04c6e90#diff-04c6e90faac2675aa89e2176d2eec7d8</ref>

== Prerequisites ==

=== Profile ===

Choose the appropriate desktop profile to set a number of global and package-specific USE flags:
{{RootCmd|eselect profile list|output=<pre>
  [...]
  [16]  default/linux/amd64/17.0/desktop (stable)
  [17]  default/linux/amd64/17.0/desktop/gnome (stable)
  [18]  default/linux/amd64/17.0/desktop/gnome/systemd (stable)
  [19]  default/linux/amd64/17.0/desktop/plasma (stable)
  [20]  default/linux/amd64/17.0/desktop/plasma/systemd (stable)
  [...]
</pre>}}

{{RootCmd|eselect profile set 16}}

The selection will be indicated by an asterisk (*):

{{RootCmd|eselect profile list|output=<pre>
  [...]
  [16]  default/linux/amd64/17.0/desktop (stable) *
  [17]  default/linux/amd64/17.0/desktop/gnome (stable)
  [18]  default/linux/amd64/17.0/desktop/gnome/systemd (stable)
  [19]  default/linux/amd64/17.0/desktop/plasma (stable)
  [20]  default/linux/amd64/17.0/desktop/plasma/systemd (stable)
  [...]
</pre>}}

=== Packages ===

# wayland: including the server and client libraries
# dbus: an interprocess communication (IPC) system for software applications
# [https://github.com/Cloudef/wlc wlc]: a high-level Wayland compositor library (deprecated, use {{Package|gui-libs/wlroots}} in the future instead)
# lua 5.3.x: a powerful, efficient, lightweight, embeddable scripting language
# rust/cargo: the package manager / build system used by rust
# cairo: a vector graphics library with cross-device output support
# gdk-pixbuf: a library for image loading and manipulation
# libxcb: a replacement for Xlib

==== Optional ====

# weston: the init file defaults to using weston-terminal as the default terminal emulator
# way-cooler-bg: a background client
# wc-grab: a screenshot client
# wc-lock: a lockscreen client

== Installation ==

Currently there is neither an official Gentoo package nor an overlay package of ''way-cooler'' available. Therefore the "build from source" method will be used which is stated on the [https://crates.io/crates/way-cooler#build-from-source way-cooler's crates.io page].

{{USEflag|package=gui-wm/way-cooler}}

=== Preparation ===

==== Install Wayland ====

First of all install ''Wayland'' which represents the base. Add the USE flags <code>wayland</code> and <code>-X</code> to {{Path|/etc/portage/make.conf}}:
{{FileBox|filename=/etc/portage/make.conf|lang=ini|1=
USE="[...] wayland -X"
}}

Make sure to recompile all installed packages:
{{Emerge|params+=--changed-use --deep|@world}}

Then, mark wayland into the world file:
{{Emerge|params=--noreplace|dev-libs/wayland}}

==== Install dbus ====

{{Package|sys-apps/dbus}} is necessary to ensure the communication between programs and the desktop:

The <code>dbus</code> USE flag is automatically enabled when one of the desktop profiles is chosen as in the example above.

If this USE was previously disabled in {{Path|/etc/portage/make.conf}} or {{Path|/etc/portage/package.use}}, remove any such disabling entries.
If a desktop profile was not chosen, add the <code>dbus</code> USE to make.conf.

Recompile all packages which might depend on {{Package|sys-apps/dbus}}:
{{Emerge|params+=--changed-use --deep|@world}}

Start the daemon:
{{RootCmd|/etc/init.d/dbus start}}

Make sure to always start ''dbus'' at the '''default runlevel''':
{{RootCmd|rc-update add dbus default}}

==== Install wlc ====

Since there is no stable package of {{Package|dev-libs/wlc}} available yet, add the following accepted keywords to ''/etc/portage/package.accept_keywords'':

{{FileBox|filename=/etc/portage/package.accept_keywords|1=
=dev-libs/wlc-0.0.11
}}

Install the Wayland Compositor Library {{Package|dev-libs/wlc}}:
{{Emerge|dev-libs/wlc}}

==== Install Lua ====

Add the following accepted keywords to ''/etc/portage/package.accept_keywords'':

{{FileBox|filename=/etc/portage/package.accept_keywords|1=
dev-lang/lua:5.3
app-eselect/eselect-lua
}}

Also add the following lines to ''unmask'' the package {{Package|dev-lang/lua}} slot 5.3:

{{FileBox|filename=/etc/portage/package.accept_keywords|1=
app-eselect/eselect-lua
dev-lang/lua:5.3
}}

Finally, install the package:
{{Emerge|dev-lang/lua:5.3}}

==== Install Rust ====

In order to install ''way-cooler'' from source, the package {{Package|dev-lang/rust}} must be installed with the USE flag <code>cargo</code>. Add the following USE flag to {{Path|/etc/portage/package.use/rust}}:
{{FileBox|filename=/etc/portage/package.use/rust|1=
dev-lang/rust cargo
}}

Now, Install the package:
{{Emerge|dev-lang/rust}}

After that the command ''cargo'' should be available.

==== Install cairo ====

In order to display images, the package {{Package|x11-libs/cairo}} must be installed:
{{Emerge|x11-libs/cairo}}

=== Install way-cooler ===

By default, {{c|cargo}} will install Rust binaries in ''~/.cargo''. To specify an alternative installation directory, export the following environment variables:
{{RootCmd
|export CARGO_HOME{{=}}"/usr/local/src/rust/cargo"
|export RUSTUP_HOME{{=}}"/usr/local/src/rust/multirust"
}}

Make them persistent by creating a file in ''/etc/profile.d/'':
{{FileBox|filename=/etc/profile.d/rust_install_path.sh|lang=sh|1=
export CARGO_HOME="/usr/local/src/rust/cargo"
export RUSTUP_HOME="/usr/local/src/rust/multirust"
}}

Create the corresponding directories and set owner and group permissions:
{{RootCmd
|mkdir --parents /usr/local/src/rust/{cargo,multirust}
|chown --recursive larry:larry /usr/local/src/rust
}}

Finally compile and install ''way-cooler''. This will download necessary packages to ''/usr/local/src/rust/cargo/'':
{{Cmd|cargo install way-cooler}}

Instead of adding the path ''/usr/local/src/rust/cargo/bin'' to the ''PATH'' environment variable, we will link the file ''way-cooler'' to ''/usr/local/bin/'':
{{RootCmd|ln -sr /usr/local/src/rust/cargo/bin/way-cooler /usr/local/bin}}

== Start way-cooler (does not work) ==

At this point ''way-cooler'' should be able to start, but it just outputs environment variables and then exits:
{{Cmd|way-cooler}}

== Troubleshooting ==

=== error: failed to run custom build command for `dbus v0.4.1` ===

{{CodeBox|title=error: failed to run custom build command for `dbus v0.4.1`|1=
process didn't exit successfully: `/tmp/cargo-install5VscCb/release/build/dbus-988c7d5f73621c46/build-script-build` (exit code: 101)
--- stderr
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: "`\"pkg-config\" \"--libs\" \"--cflags\" \"dbus-1\"` did not exit successfully: exit code: 1\n--- stderr\nPackage dbus-1 was not found in the pkg-config se
arch path.\nPerhaps you should add the directory containing `dbus-1.pc\'\nto the PKG_CONFIG_PATH environment variable\nNo package \'dbus-1\' found\n"', libcore/result.rs:945:5
note: Run with `RUST_BACKTRACE=1` for a backtrace.

warning: build failed, waiting for other jobs to finish...
error: failed to compile `way-cooler v0.8.1`, intermediate artifacts can be found at `/tmp/cargo-install5VscCb`

Caused by:
  build failed
}}

==== Solution ====

Install {{Package|sys-apps/dbus}} properly; take a look at the installation instructions of [[D-Bus]].

=== error: failed to run custom build command for `gdk-pixbuf-sys v0.4.0` ===

{{CodeBox|title=error: failed to run custom build command for `gdk-pixbuf-sys v0.4.0`|1=
process didn't exit successfully: `/tmp/cargo-install09iaye/release/build/gdk-pixbuf-sys-b18f670937a0cd5f/build-script-build` (exit code: 1)
--- stderr
`"pkg-config" "--libs" "--cflags" "gdk-pixbuf-2.0 >= 2.26"` did not exit successfully: exit code: 1
--- stderr
Package gdk-pixbuf-2.0 was not found in the pkg-config search path.
Perhaps you should add the directory containing `gdk-pixbuf-2.0.pc'
to the PKG_CONFIG_PATH environment variable
No package 'gdk-pixbuf-2.0' found


warning: build failed, waiting for other jobs to finish...
error: failed to compile `way-cooler v0.8.1`, intermediate artifacts can be found at `/tmp/cargo-install09iaye`
}}

==== Solution ====

Install {{Package|x11-libs/gdk-pixbuf}} properly:
{{Emerge|x11-libs/gdk-pixbuf}}

===== cannot find -lxcb-xkb =====

Use the command {{c|equery files <package_name> | grep "include"}} to make sure that the '''C header files''' are available. For example (''cannot find -lxcb-xkb''):
{{Invocation|equery files libxcb {{!}} grep "include"|output=<pre>
/usr/include
/usr/include/xcb
/usr/include/xcb/bigreq.h
/usr/include/xcb/composite.h
/usr/include/xcb/damage.h
/usr/include/xcb/dpms.h
/usr/include/xcb/dri2.h
/usr/include/xcb/dri3.h
/usr/include/xcb/ge.h
/usr/include/xcb/glx.h
/usr/include/xcb/present.h
/usr/include/xcb/randr.h
/usr/include/xcb/record.h
/usr/include/xcb/render.h
/usr/include/xcb/res.h
/usr/include/xcb/screensaver.h
/usr/include/xcb/shape.h
/usr/include/xcb/shm.h
/usr/include/xcb/sync.h
/usr/include/xcb/xc_misc.h
/usr/include/xcb/xcb.h        <----
/usr/include/xcb/xcbext.h
/usr/include/xcb/xevie.h
/usr/include/xcb/xf86dri.h
/usr/include/xcb/xfixes.h
/usr/include/xcb/xinerama.h
/usr/include/xcb/xinput.h
/usr/include/xcb/xkb.h        <----
/usr/include/xcb/xprint.h
/usr/include/xcb/xproto.h
/usr/include/xcb/xselinux.h
/usr/include/xcb/xtest.h
/usr/include/xcb/xv.h
/usr/include/xcb/xvmc.h
</pre>}}

Make sure that the USE flag <code>xkb</code> is set:

{{FileBox|filename=/etc/portage/package.use/libxcb|lang=ini|1=
x11-libs/libxcb xkb
}}

Make sure the package is installed and compiled with the USE flag:
{{Emerge|params+=--changed-use --deep|@world}}

===== cannot find -llua5.3 =====

Install the package {{Package|dev-lang/lua}} properly; see [[way-cooler#Install_Lua|Install Lua]].

===== cannot find -lwlc =====

Install the package {{Package|dev-libs/wlc}} properly; see [[way-cooler#Install_wlc|Install wlc]].

=== warning: redundant linker flag specified for library `dbus-1` ===

Could be important when debugging...

==== Solution ====

There is no solution yet!

=== way-cooler does not start but just outputs environment variables ===

{{Cmd|way-cooler|output=<pre>
    Launching way-cooler...
     INFO [way_cooler] src/main.rs:215 Logger initialized, setting wlc handlers.
     INFO [way_cooler] src/main.rs:220 TERM: screen-256color
     ....
     INFO [way_cooler] src/main.rs:220 _: /usr/local/bin/way-cooler
</pre>}}

==== Solution ====

There is no solution yet!

== See also ==

== External links ==
