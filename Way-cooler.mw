{{InfoBox stack
    |{{InfoBox todo|header=true
        |Make the installation work
        |Complete the article
        |Wikify the article
        |Translate the article
    }}
    |{{InfoBox wikify}}
}}

{{Lowercase title}}

{{InfoBox stack
    |{{InfoBox homepage|http://way-cooler.org/|header=true}}
    |{{InfoBox github|way-cooler}}
    |{{InfoBox|info=[https://crates.io/crates/way-cooler crates.io]}}
}}

{{warning|way-cooler is currently '''under heavy development!'''}}

{{warning|The result of the installation steps will give you a binary, called ''way-cooler'' '''which does not work''' on Gentoo somehow. These steps have to be reworked.}}

"'''Way Cooler''' is the spiritual successor of [https://awesomewm.org/ AwesomeWM] for [https://wayland.freedesktop.org/ Wayland]. It is a customizable Wayland compositor (window manager) which uses [https://github.com/swaywm/wlroots wlroots]. Way Cooler is written in [https://www.rust-lang.org/ Rust] and C."

__TOC__

== Prerequisites ==

=== Profile ===

Choose the appropiate desktop profile to set a number of global and package-specific USE flags:
{{RootCmd|eselect profile list|output=<pre>
  [...]
  [16]  default/linux/amd64/17.0/desktop (stable)
  [17]  default/linux/amd64/17.0/desktop/gnome (stable)
  [18]  default/linux/amd64/17.0/desktop/gnome/systemd (stable)
  [19]  default/linux/amd64/17.0/desktop/plasma (stable)
  [20]  default/linux/amd64/17.0/desktop/plasma/systemd (stable)
  [...]
</pre>}}

{{RootCmd|eselect profile set 16}}

The selection will be indicated by an asterisk (*):

{{RootCmd|eselect profile list|output=<pre>
  [...]
  [16]  default/linux/amd64/17.0/desktop (stable) *
  [17]  default/linux/amd64/17.0/desktop/gnome (stable)
  [18]  default/linux/amd64/17.0/desktop/gnome/systemd (stable)
  [19]  default/linux/amd64/17.0/desktop/plasma (stable)
  [20]  default/linux/amd64/17.0/desktop/plasma/systemd (stable)
  [...]
</pre>}}

=== Packages ===

# wayland: including the server and client libraries
# dbus: an interprocess communication (IPC) system for software applications
# [https://github.com/Cloudef/wlc wlc]: a high-level Wayland compositor library (deprecated, use '''wlroots''' in the future instead)
# rust/cargo: the package manager / build system used by rust
# cairo: a vector graphics library with cross-device output support
# gdk-pixbuf: a library for image loading and manipulation
# lua 5.3.x: a powerful, efficient, lightweight, embeddable scripting language
# libxcb: a replacement for Xlib

==== Optional ====

# weston: the init file defaults to using weston-terminal as the default terminal emulator
# way-cooler-bg: a background client
# wc-grab: a screenshot client
# wc-lock: a lockscreen client

== Installation ==

Currently there is neither an official Gentoo package nor an overlay package of ''way-cooler'' available. Therefore the "build from source" method will be used which is stated on the [https://crates.io/crates/way-cooler#build-from-source way-cooler's crates.io page].

{{USEflag|package=gui-wm/way-cooler|desc=}}

=== Preparation ===

==== Install Wayland ====

First of all install ''Wayland'' which represents the base. Add the global USE flags <code>wayland</code> and <code>-X</code> to ''/etc/portage/make.conf'':
{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
USE="[...] wayland -X"
}}

Install the package {{Package|dev-libs/wayland}}:
{{RootInvocation|emerge --ask dev-libs/wayland|output=<pre>
These are the packages that would be merged, in order:

Calculating dependencies... done!
[ebuild  N     ] dev-libs/wayland-1.16.0  USE="-doc -static-libs"

Would you like to merge these packages? [Yes/No]
</pre>}}

==== Install dbus ====

Install the package {{Package|sys-apps/dbus}} to ensure the communication between programs and the desktop:
Make sure to add the global USE flag <code>dbus</code>:
{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
USE="[...] dbus"
}}

Recompile all packages which might depend on {{Package|sys-apps/dbus}}:
{{RootCmd|emerge --ask --changed-use --deep @world}}

Install the package {{Package|sys-apps/dbus}} itself:
{{RootInvocation|emerge --ask sys-apps/dbus|output=<pre>
These are the packages that would be merged, in order:

Calculating dependencies... done!
[ebuild  NS    ] app-text/docbook-xml-dtd-4.4-r2 [4.1.2-r6, 4.2-r2, 4.5-r1]
[ebuild  N     ] sys-apps/dbus-1.12.12-r1  USE="-X -debug -doc -elogind (-selinux) -static-libs -systemd -test -user-session"
</pre>}}

Start the daemon:
{{RootCmd|/etc/init.d/dbus start}}

Make sure to always start ''dbus'' at the '''default runlevel''':
{{RootCmd|rc-update add dbus default}}

==== Install wlc ====

Add the following accepted keywords to ''/etc/portage/package.accept_keywords'':

{{FileBox|filename=/etc/portage/package.accept_keywords|lang=bash|1=
# required by =dev-libs/wlc-0.0.11 (argument)
=dev-libs/wlc-0.0.11 ~amd64
}}

Install the Wayland Compositor Library {{Package dev-libs/wlc}}:
{{RootInvocation|emerge --ask dev-libs/wlc|output=<pre>
These are the packages that would be merged, in order:
Calculating dependencies... done!
[ebuild  N     ] x11-misc/xbitmaps-1.1.2-r1
[ebuild  N     ] x11-libs/xcb-util-wm-0.4.1-r2  USE="-doc -static-libs -test"
[ebuild  N     ] x11-libs/libxkbfile-1.0.9-r2  USE="-static-libs"
[ebuild  N     ] x11-libs/libXmu-1.1.2-r1  USE="ipv6 -doc -static-libs"
[ebuild  N     ] x11-libs/xcb-util-renderutil-0.3.9-r2  USE="-doc -static-libs -test"
[ebuild  N     ] x11-apps/iceauth-1.0.8
[ebuild  N     ] x11-apps/rgb-1.0.6
[ebuild  N     ] media-libs/libepoxy-1.5.3  USE="X -test"
[ebuild  N     ] x11-libs/libXScrnSaver-1.2.3  USE="-static-libs"
[ebuild  N     ] x11-libs/libfontenc-1.1.3-r1  USE="-static-libs"
[ebuild  N     ] x11-libs/xcb-util-keysyms-0.4.0-r1  USE="-doc -static-libs -test"
[ebuild  N     ] x11-apps/xauth-1.0.10  USE="ipv6 -test"
[ebuild  N     ] x11-apps/xkbcomp-1.4.2
[ebuild  N     ] x11-libs/libXfont2-2.0.3-r1  USE="bzip2 ipv6 -doc -static-libs -truetype"
[ebuild  N     ] x11-apps/xrdb-1.1.1
[ebuild  N     ] x11-apps/xinit-1.4.0-r1  USE="minimal"
[ebuild  N     ] x11-base/xorg-server-1.20.3  USE="glamor ipv6 suid udev wayland xorg -debug -dmx -doc -kdrive -libressl -minimal (-selinux) -static-libs -systemd -unwind -xcsecurity -xephyr -xnest -xvfb"
[ebuild  N     ] x11-base/xorg-drivers-1.20  INPUT_DEVICES="keyboard libinput mouse -elographics -evdev -joystick -synaptics -vmmouse -void -wacom" VIDEO_CARDS="amdgpu dummy fbdev intel nouveau radeon radeonsi vesa -ast (-free$reno) (-geode) -glint -i915 -i965 -mga -nv -nvidia (-omap) -qxl -r128 -siliconmotion (-tegra) (-vc4) -via -virtualbox -vmware"
[ebuild  N     ] x11-drivers/xf86-video-intel-2.99.917_p20180214-r2  USE="dri sna udev -debug -dri3 -tools -uxa -xvmc"
[ebuild  N     ] x11-drivers/xf86-input-keyboard-1.9.0
[ebuild  N     ] x11-drivers/xf86-video-dummy-0.3.8  USE="-dga"
[ebuild  N     ] x11-drivers/xf86-video-vesa-2.4.0
[ebuild  N     ] x11-drivers/xf86-video-ati-18.1.0  USE="glamor -udev"
[ebuild  N     ] x11-drivers/xf86-video-nouveau-1.0.15-r1
[ebuild  N     ] x11-drivers/xf86-input-libinput-0.28.2
[ebuild  N     ] x11-drivers/xf86-input-mouse-1.9.3
[ebuild  N     ] x11-drivers/xf86-video-amdgpu-18.1.0  USE="-udev"
[ebuild  N     ] x11-drivers/xf86-video-fbdev-0.5.0
[ebuild  N     ] x11-libs/xcb-util-0.4.0-r1  USE="-doc -static-libs -test"
[ebuild  N     ] x11-libs/xcb-util-image-0.4.0-r1  USE="-doc -static-libs -test"
[ebuild  N     ] x11-libs/xcb-util-cursor-0.1.3-r2  USE="-doc -static-libs -test"
[ebuild  N    ~] dev-libs/wlc-0.0.11  USE="xwayland"
</pre>}}
