{{InfoBox stack
|{{InfoBox homepage|http://store.steampowered.com|header=true}}
|{{InfoBox wikipedia|Steam (software)}}
}}

'''''Steam''' is an Internet-based digital distribution, digital rights management (DRM), multiplayer, and social networking platform developed by Valve Corporation. Steam provides the user with installation and automatic updating of games on multiple computers, and community features such as friends lists and groups, cloud saving, and in-game voice and chat functionality.'' - Wikipedia, the free encyclopedia

== Games ==

* Official Steam Linux [http://store.steampowered.com/search/?term=&sort_by=_ASC&os=linux&page=1 games list].
* SteamDB Linux [http://steamdb.info/linux/ games list].

== Prerequisites ==

=== Dependencies ===

{{Note|This section can be skipped when using the <tt>steam-launcher</tt> ebuild from an [[Steam#Overlay|overlay]].}}

Create a [[:/etc/portage/sets|set]] to conveniently manage and update the Steam dependencies without changing the [[world]] set.

{{Note|The following lists may be outdated and require verification. Several libraries may be provided by the Steam runtime, in which case the system library will ''not'' be used.}}

{{FileBox|filename=/etc/portage/sets/steam|1=
dev-libs/glib:2
dev-libs/libgcrypt
dev-libs/nspr
dev-libs/nss
media-libs/alsa-lib
media-libs/fontconfig
media-libs/freetype:2
media-libs/libjpeg-turbo
media-libs/libogg
media-libs/libpng:1.2
media-libs/libsdl
media-libs/libtheora
media-libs/libvorbis
media-libs/openal
media-sound/pulseaudio
net-misc/curl
net-print/cups
sys-apps/dbus
>=sys-devel/gcc-4.6.0
>=sys-libs/glibc-2.15
>=sys-libs/zlib-1.2.4
virtual/opengl
x11-libs/cairo
x11-libs/gdk-pixbuf
x11-libs/gtk+:2
>=x11-libs/libX11-1.5
x11-libs/libXext
x11-libs/libXfixes
x11-libs/libXi
x11-libs/libXrandr
x11-libs/libXrender
x11-libs/pango
>=x11-libs/pixman-0.24.4
}}

==== amd64 ====

{{Note|Steam is a 32-bit application and requires a [[multilib]] [[profile]] on amd64, ''unless'' a [[Steam#Chroot|chroot]] is used.}}
{{FileBox|filename=/etc/portage/package.use/steam|1=
dev-libs/expat abi_x86_32
dev-libs/libffi abi_x86_32
dev-libs/libpthread-stubs abi_x86_32
media-libs/mesa abi_x86_32
sys-devel/llvm abi_x86_32
sys-libs/zlib abi_x86_32
virtual/libffi abi_x86_32
virtual/opengl abi_x86_32
x11-libs/libdrm abi_x86_32
x11-libs/libpciaccess abi_x86_32
x11-libs/libX11 abi_x86_32
x11-libs/libXau abi_x86_32
x11-libs/libxcb abi_x86_32
x11-libs/libXdamage abi_x86_32
x11-libs/libXdmcp abi_x86_32
x11-libs/libXext abi_x86_32
x11-libs/libXfixes abi_x86_32
x11-libs/libxshmfence abi_x86_32
x11-libs/libXxf86vm abi_x86_32
x11-proto/damageproto abi_x86_32
x11-proto/dri2proto abi_x86_32
x11-proto/dri3proto abi_x86_32
x11-proto/fixesproto abi_x86_32
x11-proto/glproto abi_x86_32
x11-proto/inputproto abi_x86_32
x11-proto/kbproto abi_x86_32
x11-proto/presentproto abi_x86_32
x11-proto/xcb-proto abi_x86_32
x11-proto/xextproto abi_x86_32
x11-proto/xf86bigfontproto abi_x86_32
x11-proto/xf86driproto abi_x86_32
x11-proto/xf86vidmodeproto abi_x86_32
x11-proto/xproto abi_x86_32
}}

==== Texture compression ====

Certain games, such as those that use the [[Wikipedia:Source (game engine)|Source]] engine, require [[Wikipedia:S3 Texture Compression|S3 Texture Compression (S3TC)]] support.
{{FileBox|filename=/etc/portage/sets/steam|1=
media-libs/libtxc_dxtn
}}

Next, install the set:
{{Emerge|@steam}}

=== Kernel ===

Steam expects that {{Path|/dev/shm}}, which requires kernel [[tmpfs]] support, is mounted prior to being started. {{Path|/dev/shm}} should be mounted automatically by [[OpenRC]] and [[systemd]] during boot, but can also be explicitly mounted via {{Path|/etc/fstab}}:
{{FileBox|filename=/etc/fstab|1=
# to limit the size add e.g. size=768M to opts (default is 50%)

#<fs>      <mountpoint>    <type>	<opts>		     <dump/pass>
shm        /dev/shm        tmpfs        nodev,nosuid,noexec  0 0
}}

== Installation ==

{{Note|Currently Steam only supports [[Wikipedia:Ubuntu (operating system)|Ubuntu]] 12.04+. Attempting to run Steam on any other distribution may cause issues. Refer to Steam [[Steam#Client_troubleshooting|client]] and [[Steam#Games_troubleshooting|games]] troubleshooting for details.}}

The Steam installer downloads and installs the Steam client to the users home directory. This prevents Portage from managing the Steam client updates or the software installed by it. The Steam client is solely responsible for managing software installation and updates.

=== Manual ===

Fetch and extract the Steam installer:
{{Cmd
|wget http://repo.steampowered.com/steam/archive/precise/steam_latest.tar.gz
|tar -xvzpf steam_latest.tar.gz
}}

Run the Steam installer:
{{Cmd
|cd steam
|./steam}}

Steam can be started with:
{{Cmd|~/steam/steam}}

{{Note|The following is recommend with a dedicated Steam user account, to prevent Steam (or the software it depends on) from interfering with the regular user account.}}
To avoid restarting or running two X servers in parallel, <tt>su</tt> to the Steam user, and use {{Package|x11-apps/xauth}} to give the Steam user access to the running X server. Refer to [https://github.com/jappeace/bash-steam-launcher bash-steam-launcher] for details.

=== Manual with alternative installer script ===
{{Note|The following instructions are almost the same as the [[Steam#Manual|manual]] instructions, except that an alternative Steam installer script is used.}}
Fetch the Steam installer and extract the required files:
{{Cmd
|wget http://repo.steampowered.com/steam/archive/precise/steam_latest.tar.gz
|tar -xvzf steam_latest.tar.gz steam/bootstraplinux_ubuntu12_32.tar.xz
|tar -xvzf steam_latest.tar.gz steam/steam.desktop
}}

Fetch and run [https://gist.github.com/hasufell Julian Ospald's (hasufell)] Steam installer script:
{{Cmd
|cd ~/steam
|wget https://gist.githubusercontent.com/hasufell/d02a93eccbe35be7a803/raw/987ea287dc81a60d2eb5fa1bb188eae0a5f1049f/steam
|chmod +x steam
|./steam
}}

=== Overlay ===

The <tt>steam-launcher</tt> ebuild is available from the Gentoo [https://cgit.gentoo.org/proj/gamerlay.git Gamers overlay] or anyc's [https://github.com/anyc/steam-overlay Steam overlay].

=== Chroot ===

It is possible to run Steam in a 32-bit [[chroot]] on amd64 without relying on multilib, or the emul-linux-x86-* packages (which are masked and set for removal<ref>Michał Górny. [https://www.gentoo.org/support/news-items/2015-03-28-true-multilib.html True multilib support on amd64], [https://www.gentoo.org/ Gentoo], March 28th, 2015. Retrieved on May 25th, 2015.</ref>).

Create the chroot directory:
{{RootCmd
|mkdir /usr/local/steam32
|cd /usr/local/steam32
}}

Fetch and extract the stage tarball:
{{RootCmd
|wget http://distfiles.gentoo.org/releases/x86/autobuilds/current-stage3-i686/stage3-i686-20150519.tar.bz2
|tar -xvjpf stage3*.tar.bz2
}}

Copy DNS information:
{{RootCmd
|cp -L /etc/resolv.conf etc
}}

Create the Portage directory:
{{RootCmd
|mkdir usr/portage
}}

Mount the necessary filesystems:
{{RootCmd
|mount -R /dev dev
|mount -R /sys sys
|mount -t proc proc proc
|mount -R /usr/portage usr/portage
}}

Chroot with <tt>linux32</tt>, which is provided by the {{Package|sys-apps/util-linux}} package, and reload the environment:

{{RootCmd
|linux32 chroot .
|source /etc/profile && env-update
}}

Create the Steam user:
{{RootCmd
|useradd -m -G audio,video steam
}}

Next, install Steam from one of the above installation methods. When complete, create the following wrapper script to setup the chroot, <tt>su</tt> to the Steam user, and run Steam.

{{FileBox|filename=/usr/local/bin/steam32|lang=bash|1=
#!/bin/sh

CHROOT_DIR=/usr/local/steam32

mount -R /dev "${CHROOT_DIR}/dev"
mount -R /sys "${CHROOT_DIR}/sys"
mount -t proc proc "${CHROOT_DIR}/proc"
mount -R /usr/portage "${CHROOT_DIR}/usr/portage"

[ -f $CHROOT_DIR/var/run/dbus.pid ] {{!}}{{!}} chroot "${CHROOT_DIR}" dbus-launch --system
chroot "${CHROOT_DIR}" su steam -c "dbus-launch steam"

umount -l "${CHROOT_DIR}/dev"
umount -l "${CHROOT_DIR}/sys"
umount -l "${CHROOT_DIR}/proc"
umount -l "${CHROOT_DIR}/usr/portage"
}}

Although the above script uses [[D-Bus]], it is possible to run Steam without it, but a manual method is required to connect the X server from within the chroot.

== Client troubleshooting ==

=== Video drivers ===

* [[nVidia/nvidia-drivers|nvidia-drivers]]: You will need to unmask latest {{Package|x11-drivers/nvidia-drivers}}.
* If S3TC support is missing, install {{Package|media-libs/libtxc_dxtn}}.
* Starting some games (TF, CS:S) on legacy ATI drivers will give this error: "Required OpenGL extension "GL_EXT_texture_sRGB_decode" is not supported. Please update your OpenGL driver." Workaround is [http://steamcommunity.com/app/221410/discussions/0/846938351012409765/ here].

===  OpenGL GLX context is not using direct rendering ===

If steam is complaining about a lack of 3D capability and you do have a 3D drivers, libraries ('''eselect opengl list''') all setup ('''glxinfo | grep "direct rendering" # direct rendering: Yes'''), steam is accessing the wrong libGL. This was caused by a recent update of {{Package|app-eselect/eselect-opengl}} to version 1.3.0. Temporary workaround:
* Nvidia
{{Cmd|LD_LIBRARY_PATH{{=}}"$LD_LIBRARY_PATH:/usr/lib32/opengl/nvidia/lib" ~/.local/share/Steam/steam.sh}}
* ATI
{{Cmd|LD_LIBRARY_PATH{{=}}"$LD_LIBRARY_PATH:/usr/lib32/opengl/ati/lib" ~/.local/share/Steam/steam.sh}}

=== Fonts ===

Some people seem to have problems with missing fonts. A user reported it being solved by emerging {{Package|media-fonts/font-bitstream-100dpi}}.

Sometimes Xorg does not recognize the new fonts installed. To fix this temp. run:
{{Cmd
|xset +fp /usr/share/fonts/100dpi/
|./steam.sh
}}

You may also need {{Package|media-fonts/corefonts}} if fonts don't appear to be rendering correctly.

The game [http://www.stealthbastard.com/ Stealth Bastard Deluxe] will segfault if {{Package|media-fonts/font-misc-misc}} is not installed [http://steamcommunity.com/app/209190/discussions/0/810923580565231302/], specifically the game will request the fonts "9x15"/"9x15b", so check with {{Package|x11-apps/xlsfonts}} if those are available, otherwise add them to the fontpath and possibly add an alias in e.g. {{Path|/usr/share/fonts/misc/fonts.alias}}:
{{FileBox|filename=/usr/share/fonts/misc/fonts.alias|title=Aliases for misc fonts|1=
9x15  -misc-fixed-medium-r-normal--15-140-75-75-c-90-iso10646-1
9x15B -misc-fixed-bold-r-normal--15-140-75-75-c-90-iso10646-1
}}

=== Mouse cursor ===

If your WM/DE does not set a mouse pointer theme, then Steam will overwrite the default X11 cursor theme, often resulting in a reversed pointer from left to right.

To fix this, just install and enable a compatible cursor theme via your WM/DE (e.g. {{Package|x11-themes/vanilla-dmz-xcursors}}).

You can also enable the installed theme manually with the following method:
{{Cmd
|mkdir ~/.icons
|ln -s /usr/share/cursors/xorg-x11/Vanilla-DMZ ~/.icons/default
}}
{{Note|This fix will not work if you will try to symlink a KDE cursor theme (eg: Oxygen_White).}}
If the mouse cursor gets stuck pointing in the wrong direction after exiting steam you can work around that via:
{{Cmd|xsetroot -cursor_name left_ptr}}

=== Flashplayer on amd64 ===

Get the [http://get.adobe.com/flashplayer/completion/?installer=Flash_Player_11.2_for_other_Linux_(.tar.gz)_32-bit 32bit flashplayer from adobe] and extract {{Path|libflashplayer.so}} to your current working dir. Now run:
{{Cmd
|mkdir <path-to-steam-installation>/ubuntu12_32/plugins
|mv libflashplayer.so <path-to-steam-installation>/ubuntu12_32/plugins/
|chmod +x <path-to-steam-installation>/ubuntu12_32/plugins/libflashplayer.so
}}
Typically the path located in {{Path|~/.local/share/Steam}}.
Alternatively emerge {{Package|www-plugins/adobe-flash}} with <code>abi_x86_32</code> option enabled and run:
{{Cmd
|mkdir <path-to-steam-installation>/ubuntu12_32/plugins
|ln -s /usr/lib32/nsbrowser/plugins/libflashplayer.so <path-to-steam-installation>/ubuntu12_32/plugins/
}}

=== Memory corruption on startup ===

You might get an error like this:
{{Cmd|steam|output=<pre>
*** glibc detected *** zenity: malloc(): memory corruption: 0x00000000016cf020 ***
</pre>}}
Try to emerge {{Package|x11-libs/libXi}} and it should work.

=== Hardened Gentoo ===

It looks like the steam binary has rwx bits in it. You will need to mark the binary with the following to get it working on a hardened system.
{{Cmd|paxctl-ng -m ~/.local/share/Steam/ubuntu12_32/steam}}

Binaries of most games also should be paxmarked, for ex.:
{{Cmd|paxctl-ng -m ~/.local/share/Steam/SteamApps/common/"World of Goo/WorldOfGoo"}}
{{Cmd|paxctl-ng -m ~/.local/share/Steam/SteamApps/common/Uplink/uplink.bin.x86_64}}
{{Cmd|paxctl-ng -m ~/.local/share/Steam/steamapps/common/Team\ Fortress\ 2/hl2_linux}}
Failure to perform these paxmarkings will result in the game failing to run with little information given. You can check if the game needs to be paxmarked by running the game's startup script or binary file (found under {{Path|~/.local/share/Steam/steamapps}} or {{Path|~/.local/share/Steam/steamapps/common}}) under a debugger. This can be accomplished with some of Valve's provided startup scripts by passing in gdb in a <code>GAME_DEBUGGER</code> environment variable, for ex.:
{{Cmd|env GAME_DEBUGGER{{=}}gdb ./hl2.sh}}
If the binary needs to be paxmarked, gdb should output something similar to "warning: Cannot call inferior functions, Linux kernel PaX protection forbids return to non-executable pages!" and/or "Cannot access memory at address 0x80486c6."

After latest update (around Jul 2013) steam also need paxmarked sh when the openGL libraries require RWX markings or it fail to run games from steam client (see https://github.com/ValveSoftware/steam-for-linux/issues/254 for details):
{{Cmd|sudo paxctl-ng -m /bin/bash}}
However, this causes bash to not run. Also as it is a security issue you are strongly encouraged to try without paxmarking it. If it works for you when using proprietary nvidia drivers please report it back.

=== Steam runtime ===

By default, Valve bundles their own libraries with the steam package and uses them instead of installed system libraries. This behavior can be changed by setting the environment variable <code>STEAM_RUNTIME=0</code>.
{{Warning|
It is not recommended to deactivate Steam runtime. This can lead to numerous problems, including runtime and missing 32-bit libraries.
}}

=== Steam reset ===

If you want to wipe out your current steam installation which includes your installed games and reinstall steam without losing their data, you can use the <code>--reset</code> command line option:
{{Cmd|steam --reset}}

=== Steam without D-Bus ===

When running Steam without D-Bus, do ''not'' select the <code>Remember my password</code> option at the Steam login dialog, otherwise Steam will segfault the next time it is run <ref>Shished. [https://github.com/ValveSoftware/steam-for-linux/issues/3415 Steam segfaults when "remember my password" is checked], [https://github.com/ValveSoftware/steam-for-linux Steam for Linux], July 28th, 2014. Retrieved on May 25th, 2015.</ref>. If Steam is segfaulting as a result of this option being selected, run the following to fix the issue:
{{Cmd|rm -fr ~/.local/share/Steam/config}}

=== Taskbar buttons persist when Steam is minimzed to the system tray ===

Depending on your DE, you might have a taskbar button showing for Steam all the time, even when the main window is closed or minimized to the systray. To stop this behavior, add this to {{Path|/etc/environment}}.
{{FileBox|filename=/etc/environment|title=Basic Environment Variables for all Processes|1=
STEAM_FRAME_FORCE_CLOSE=1}}
You will need to logout and back in to enact the changes.

== Games troubleshooting ==

If you have problems on 64 bit, it's because emul-linux-x86-* are typically very out of date. 

You can try using a 32-bit chroot.

=== Dota 2 ===

If you notice [https://github.com/ValveSoftware/Dota-2/issues/683 lots of black textures], it's because the mesa driver is out of date, until version 9.1.6 or higher is released as part of emul-linux-x86-opengl, you will have to resort to using a 32 bit chroot.

If you are seeing the issues from above [lots of black textures] but are using multi-lib and, therefore, aren't using an old 32-bit mesa, you may try building mesa with USE -bindist like talked about here: https://github.com/ValveSoftware/Dota-2/issues/1434.

If you notice [https://github.com/ValveSoftware/Dota-2/issues/1061 red screen], it's the libtxc_dxtn (again). (Look for it along this page.)

For the red textures in gentoo 64 bits emerge the package sys-libs/glibc with the line >=media-libs/libtxc_dxtn-1.0.1-r1 abi_x86_32 in /etc/portage/package.use 

=== Left 4 Dead 2 ===

If you experience black textures, you are missing S3TC texture (de)compression, add the following to package.use<br />
<code>
media-libs/libtxc_dxtn abi_x86_32<br />
</code>
and then emerge libtxc_dxtn

=== Rust (legacy) ===

After setting launch options in the configuration menu and clicking ok, if Rust fails to launch, then add the following Steam launch options to force Rust to use the correct binaries<br />
<code>
LD_LIBRARY_PATH="/usr/lib:$LD_LIBRARY_PATH" %command%<br />
</code>

=== Starbound ===

Starbound's launcher may fail with the following error:
<pre>
This application failed to start because it could not find or load the Qt platform plugin "xcb".

Available platform plugins are: xcb.

Reinstalling the application may fix this problem.
</pre>
You may be able to work around this problem by entering this into Starbound's launch options:
<code>$(dirname %command%)/starbound</code>

=== Team Fortress 2 ===

If you only get a black screen for 1-2 seconds, try adding "-nojoy" to Game->Properties->"Set Launch Options".

=== X<sup>3</sup> Terran Conflict and Albion Prelude ===

If you are unable to start the launcher, make sure that media-libs/libtxc_dxtn is installed. See the official [http://forum.egosoft.com/viewtopic.php?t=335500 Linux Support Thread].

=== This system does not support the OpenGL extension <tt>GL_EXT_texture_compression_s3tc</tt> ===

Install helper library for S3TC texture (de)compression. <br />
<code>
echo ">=media-libs/libtxc_dxtn-1.0.1-r1 abi_x86_32" >> /etc/portage/package.use <br />
emerge libtxc_dxtn -j3 <br />
</code>

Restart graphic system and examine if GL extension is available. <br />
<code>glxinfo | grep GL_EXT_texture_compression_s3tc</code>

If there is no GL_EXT_texture_compression_s3tc try to update driver.
If you are using radeon open driver, set correct value to VIDEO_CARDS variable in make.conf.
For example value VIDEO_CARDS="r600" is valid for HD6310. [https://wiki.gentoo.org/wiki/Radeon More info about radeon cards].

If GL extension is here, but error still raises, suppress it by next command. <br />
<code>
export force_s3tc_enable=true <br />
~/.steam/root/steam.sh <br />
</code>

01:32, 30 May 2014 (UTC) had to emerge x11-libs/gtkglarea for s3tc errors to go away under nouveau.

== Further help ==
Before you ask anywhere else, refer to the [https://forums.gentoo.org/viewtopic-t-930354.html Gentoo forum thread]. Post your solutions and update this wiki page if someone confirms. Please don't remove content without [[Talk:Steam|Discussion]] unless it's wrong content.

== External resources ==

* [https://forums.gentoo.org/viewtopic-t-930354.html Forum thread]
* [https://bugs.gentoo.org/show_bug.cgi?id=442176 Ebuild request for steam-installer]
* [http://blogs.valvesoftware.com/linux Valve Linux blog]
* [http://steamcommunity.com/linux Steam for Linux community]
* [https://github.com/ValveSoftware/steam-for-linux/issues Bugtracker]
* [https://wiki.archlinux.org/index.php/Steam#Native_Steam_on_Linux Steam entry in ArchLinux wiki]
* [http://fusionmy.net/forum/forum_posts.asp?TID=1541&PID=47081 Common Steam Problems & Fixes (team fusion)]

== References ==

{{reflist}}

[[Category:Games]]
