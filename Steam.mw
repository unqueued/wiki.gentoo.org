{{InfoBox stack
|{{InfoBox homepage|http://store.steampowered.com}}
}}

Valve has released a native (currently x86-only) Linux client for their [https://steampowered.com Steam platform] as part of a closed beta.

== Notice == 
This is '''beta''' software. The .deb released by Valve is actually only an installer that pulls the actual steam version from their servers and places it as well as the games into ~/Steam/. So, the official package manager cannot be involved in managing games and steam updates.

== Games ==
* Official Valve Linux Games [http://store.steampowered.com/search/?snr=1_4_4__12&term=#sort_by=&sort_order=ASC&os=linux List]
* CDR [http://marlamin.com/cdr/search.php?s=linux&searchby=os List] (includes future (beta) releases for Linux)

== Installation ==
Download the .deb archive and put the following files into the same directory:
* bootstraplinux_ubuntu12_32.tar.xz (from the .deb archive)
* steam.desktop (from the .deb archive)
* steam (get the script [http://slexy.org/view/s2iz51l62y here])
Make '''steam''' executable and run it. There are also a few icons in the .deb archive.
{{Note|Alternatively you can use the steam-installer ebuild from [https://bugs.gentoo.org/show_bug.cgi?id{{=}}442176 bug 442176].}}

== Prerequisites ==
Things you need in order to run steam.
=== Dependencies ===
If you don't use the ebuild then you can create a '''set''' to conveniently manage and update the steam dependencies without changing your world file.
After you have created the file ''/etc/portage/sets/steam'' as shown below, run: {{Emerge|@steam}}
==== x86 ====
{{File|/etc/portage/sets/steam|dependencies for '''x86'''|<pre>
dev-libs/glib:2
dev-libs/libgcrypt
dev-libs/nspr
dev-libs/nss
media-libs/alsa-lib
media-libs/fontconfig
media-libs/freetype:2
media-libs/libjpeg-turbo
media-libs/libogg
media-libs/libpng:1.2
media-libs/libsdl
media-libs/libtheora
media-libs/libvorbis
media-libs/openal
media-sound/pulseaudio
net-misc/curl
net-print/cups
sys-apps/dbus
>=sys-devel/gcc-4.6.0
>=sys-libs/glibc-2.15
>=sys-libs/zlib-1.2.4
virtual/opengl
x11-libs/cairo
x11-libs/gdk-pixbuf
x11-libs/gtk+:2
>=x11-libs/libX11-1.5
x11-libs/libXext
x11-libs/libXfixes
x11-libs/libXi
x11-libs/libXrandr
x11-libs/libXrender
x11-libs/pango
>=x11-libs/pixman-0.24.4</pre>}}
==== amd64 ====
{{File|/etc/portage/sets/steam|dependencies for '''amd64'''|<pre>
>=app-emulation/emul-linux-x86-baselibs-20121028
>=app-emulation/emul-linux-x86-gtklibs-20121028
>=app-emulation/emul-linux-x86-opengl-20121028
>=app-emulation/emul-linux-x86-sdl-20121028
>=app-emulation/emul-linux-x86-soundlibs-20121028
>=app-emulation/emul-linux-x86-xlibs-20121028
>=sys-devel/gcc-4.6.0[multilib]
>=sys-libs/glibc-2.15[multilib]
virtual/opengl</pre>
}}

=== Kernel ===
You need [https://www.kernel.org/doc/Documentation/filesystems/tmpfs.txt tmpfs] activated in your kernel and ''/dev/shm'' mounted.
{{Kernel|tmpfs support|<pre>
File Systems --->
  Pseudo Filesystems --->
    [*] Tmpfs virtual memory file system support (former shm fs)
</pre>}}
{{Note|/dev/shm should be automatically mounted by the devfs initscript, however you can do so explicitly and with additional options via fstab.}}
{{File|/etc/fstab||<pre>
# to limit the size add e.g. size=768M to opts (default is 50%)

#<fs>      <mountpoint>    <type>	<opts>		     <dump/pass>
shm        /dev/shm        tmpfs        nodev,nosuid,noexec  0 0
</pre>}}

== Troubleshooting ==
A few tricks to get things working.
=== Video drivers ===
* '''Nvidia''': You will need to unmask latest {{Package|x11-drivers/nvidia-drivers}}.
* If you are using open-source drivers that are based on mesa (e.g., nouveau, radeon), you need to unmask >=mesa-9.0, see {{Package|media-libs/mesa}}.
*:Note: If you are on AMD64 you have to compile mesa yourself for x86, as it is not included in emul-*-20121028 packages. An easy way to do this is to install the "media-libs/mesa-32bit" package from the [https://github.com/FireBurn/Overlay FireBurn overlay] via [[Layman]].

=== Fonts ===
Some people seem to have problems with missing fonts. A user reported it being solved by emerging {{Package|media-fonts/font-bitstream-100dpi}}.

Sometimes Xorg does not recognise the new fonts installed. To fix this temp. run:
{{Cmd
|xset +fp /usr/share/fonts/100dpi/
|./steam.sh
}}

=== Flashplayer on amd64 ===
Get the [http://get.adobe.com/flashplayer/completion/?installer=Flash_Player_11.2_for_other_Linux_(.tar.gz)_32-bit 32bit flashplayer from adobe] and extract ''libflashplayer.so'' to your current working dir. Now run:
{{RootCmd
|mkdir -p /usr/lib/browser-plugins
|mv libflashplayer.so /usr/lib/browser-plugins/
|chmod +x /usr/lib/browser-plugins/libflashplayer.so
}}
Alternatively emerge {{Package|www-plugins/adobe-flash}} with '''32bit''' useflag and run:
{{RootCmd
|mkdir -p /usr/lib/browser-plugins
|ln -s /opt/Adobe/flash-player32/libflashplayer.so /usr/lib/browser-plugins/
}}
Currently no known side-effects or interference with regular browsers. They should still load the 64bit flashplayer.

== Running non-native games ==
Non-native games can be "piped" through wine via ''binfmt''. See [http://steamcommunity.com/app/221410/discussions/0/882965239658551856/ here] and [https://wiki.archlinux.org/index.php/Wine#Using_Wine_as_an_interpreter_for_Win16.2FWin32_binaries here]. This currently works only for games which have OS-check disabled.

== Further help ==
Before you ask anywhere else, refer to the [https://forums.gentoo.org/viewtopic-t-930354.html gentoo forum thread]. Post your solutions and update this wiki page if someone confirms. Please don't remove content without [[Talk:Steam|Discussion]] unless it's wrong content.

== External resources ==
* [https://forums.gentoo.org/viewtopic-t-930354.html forum thread]
* [https://bugs.gentoo.org/show_bug.cgi?id=442176 Ebuild request for steam-installer]
* [http://blogs.valvesoftware.com/linux valve linux blog]
* [http://steamcommunity.com/linux steam linux community]
* [https://wiki.archlinux.org/index.php/Steam#Native_Steam_on_Linux Steam entry in ArchLinux wiki]

[[Category:Software]]
