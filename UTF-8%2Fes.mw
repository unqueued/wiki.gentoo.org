<languages />

{{Metadata|abstract=UTF-8 es una codificación de caracteres de longitud variable, lo que significa en este caso que se utilizan de uno a cuatro bytes para codificar cada símbolo. De esta forma, el primer byte UTF-8 se usa para codificar ASCII, dándole a este carácter total compatibilidad regresiva con el sistema de codificación ASCII. UTF-8 indica que los caracteres ASCII y Latin se puede utilizar indistintamente con un pequeño incremento en  el tamaño de los datos, ya que solo se utiliza el primer byte. Los usuarios de alfabetos del este como el japonés, a los que se les ha asignado un mayor rango de bytes, no están contentos con esto ya que obtienen cerca de un 50% de redundancia en sus datos.}}

UTF-8 es una codificación de caracteres de longitud variable, lo que implica que utiliza de 1 a 4 bytes para codificar cada símbolo. Por tanto, el primer byte UTF-8 se utiliza para codificar ASCII. UTF-8 significa que los caracteres ASCII y Latín se pueden intercambiar con un pequeño incremento en el tamaño de los datos, ya que únicamente se utiliza el primer byte. Los usuarios de alfabetos del este como el japonés, a los cuales se les ha asignado un rango más alto de los bytes no les gusta mucho esto, ya que esto implica un 50% mayor de redundancia en sus datos. 

== Codificaciones de Caracteres ==

=== ¿Qué es la Codificación de Caracteres? ===

Los ordenadores no comprenden el texto por ellos mismos. En lugar de esto, cada carácter se representa mediante un número. Tradicionalmente, cada conjunto de números se utilizó para representar alfabetos y caracteres (conocidos como sistema de codificación, codificación o conjunto de caracteres) estuvo limitado en el tamaño debido a limitaciones del hardware de los ordenadores. 

=== La Historia de los Caracteres de Codificación ===

El más común (o al menos el más aceptado) conjunto de caracteres es '''ASCII''' (Código Estándar Americano para el Intercambio de Información). Es ampliamente aceptado de que ASCII es el estándar de software más exitoso de todos los tiempos. El ASCII actual se estandarizó en 1986 (ANSI X3.4, RFC 20, ISO/IEC 646:1991, ECMA-6) por el Instituto Nacional Americano de Estándares. 

ASCII es una codificación estrictamente de siete bits, lo que significa que utiliza patrones representables con siete dígitos binarios, lo que proporciona una gama de 0 a 127 en decimal. Estos incluyen 32 caracteres de control no visibles, la mayoría entre 0 y 31, con el carácter de control final, DEL o de eliminación en el 127. Los caracteres del 32 al 126 son visibles: un espacio, marcas de puntuación, letras latinas y números. 

El octavo bit en ASCII se utilizó originalmente como un bit de paridad para el control de errores. Si no se desea esta utilización, se deja como 0. Esto significa que, con ASCII, cada carácter se representa mediante un único byte. 

A pesar de que ASCII era suficiente para comunicarse en inglés moderno, las cosas no eran tan fáciles en otras lenguas europeas que incluyen caracteres acentuados. Los estándares ISO 8859 se desarrollaron para satisfacer estas necesidades. Estos estándares eran compatibles con ASCII, pero en lugar de dejar el octavo bit en blanco, lo utilizaron para permitir otros 127 caracteres en cada codificación. Las limitaciones de los estándares ISO 8859 aparecieron pronto y actualmente hay 15 variantes del estándar ISO 8859 (del 8859-1 al 8859-15). Fuera del rango de bytes compatible con ASCII de estos conjuntos de caracteres hay a menudo conflicto entre las letras representadas por cada byte. Para complicar aún más la interoperabilidad entre las codificaciones de caracteres, en algunas versiones de Windows de Microsoft se utiliza la codificación Windows-1252 en lugar de los idiomas de Europa del oeste. Esto es un superconjunto de la codificación ISO 8859-1. Sin embargo, es diferente en algunos aspectos. Estos conjuntos no conservan completamente la compatibilidad con ASCII. 

El desarrollo necesario de codificaciones de un solo byte completamente diferentes para alfabetos no latinos, como EUC (Codificación de Unix Extendido) que se utiliza para el japonés y el coreano (y en menor medida para el chino) creó aún más confusión, mientras otros sistemas operativos todavía utilizaban conjuntos de caracteres para los mismos idiomas, por ejemplo, Shift-JIS e ISO-2022-JP. Los usuarios que deseaban ver glifos cirílicos tenían que elegir entre KOI8-R para el ruso y el búlgaro o KOI8-U para el ucraniano, y así para las demás codificaciones cirílicas como el poco exitoso ISO 8859-5 o el común Windows-1251. Todos estos conjuntos de caracteres rompían en mayor o menor medida la compatibilidad con ASCII (a pesar de que las codificaciones KOI8 colocaban los caracteres cirílicos en el orden de los latinos, por lo que en el caso de que se eliminara el octavo bit, es texto se podía mostrar en un terminal ASCII a través de una transliteración inversa de mayúsculas). 

Esto ha llevado a muchas confusiones y también a una discapacidad casi total para la comunicación multilingüe, especialmente entre alfabetos diferentes. Entramos en Unicode. 

=== ¿Qué es Unicode? ===

Unicode prescinde de utilizar un solo byte, el límite tradicional de los conjuntos de caracteres. Utiliza 17 "planos" de 65,536 puntos de código para describir un máximo de 1,114,112 caracteres. Como el primer plano, también conocido como "Plano Multilingüe Básico" o BMP, contiene casi todo lo que normalmente se utiliza, mucha gente piensa erróneamente que Unicode es un conjunto de caracteres de 16 bits. 

Unicode se ha mapeado de muchas formas diferentes, pero las dos más comunes son '''UTF''' (Formato de Transformación Unicode) y '''UCS''' (Conjunto Universal de Caracteres). El número a continuación de las siglas UTF indica el número de bits en una unidad, por el contrario, el número a continuación de las siglas UCS indica el número de bytes. UTF-8 ha sido la forma más extendida de intercambiar texto Unicode debido a su naturaleza limpia de ocho bits y es el motivo de este documento. 

=== ¿Qué Puede Hacer Unicode por Nosotros? ===

UTF-8 le permite trabajar en un entorno que cumple los estándares y que es aceptado internacionalmente, con una redundancia de datos relativamente baja. UTF-8 es la forma preferida para transmitir caracteres que no son ASCII a través de Internet, mediante correo electrónico, IRC o casi cualquier otro medio. A pesar de esto, mucha gente piensa que la comunicación en línea de UTF-8 es abusiva. Es mejor conocer la actitud hacia UTF-8 en un canal en particular, en una lista de correo o grupo Usenet antes de utilizar UTF-8 ''no ASCII''. 

== Configurar UTF-8 en Gentoo Linux ==

=== Buscar o Crear Localizaciones UTF-8 ===

Ahora que comprende los principios que hay detrás de Unicode, puede comenzar a utilizar UTF-8 en su sistema. 

El requisito preliminar para UTF-8 es tener una versión de glibc instalada que tenga soporte para el idioma nacional. La forma recomendada de hacer esto es el fichero {{Path|/etc/locale.gen}}. Sin embargo, explicar el uso de este fichero está más allá del alcance de este documento. Esto se explica en la [https://wiki.gentoo.org/wiki/Localization/HOWTO Guía de Localización de Gentoo]. 

A continuación, necesitaremos decidir si una localización UTF-8 está disponible para nuestro idioma, o si necesitamos crear una. 

{{Cmd|locale -a {{!}} grep 'es_ES'|output=<pre>
es_ES
es_ES.UTF-8
</pre>
}}

De la salida de esta línea de órdenes,  necesitamos tomar el resultado con un sufijo similar a <code>.UTF-8</code>. Si no hay ningún resultado con un sufijo similar a <code>.UTF-8</code>,  necesitaremos crear una localización compatible UTF-8. 


{{Note/es|Ejecute el siguiente listado de código si no tiene una localización UTF-8 disponible en su idioma.}}

Reemplace "en_GB" por el ajuste de localización deseado:
{{RootCmd|localedef -i en_GB -f UTF-8 en_GB.UTF-8}}

Otra forma de incluir una localización UTF-8 es añadirla al fichero {{Path|/etc/locale.gen}} y generar las localizaciones necesarias con la orden <code>locale-gen</code>. 

{{Code|Línea en /etc/locale.gen|<pre>
es_ES.UTF-8 UTF-8
</pre>
}}

=== Configurar la Localización ===

Hay una variable de entorno que necesitará definir para utilizar nuestras nuevas localizaciones UTF-8: <code>LC_CTYPE</code> (u opcionalmente <code>LANG</code>, si también quiere cambiar el idioma del sistema). Hay distintas formas de ajustar este valor, algunas personas prefieren tener únicamente un entorno UTF-8 para un usuario específico, en cuyo caso se definen en su {{Path|/.profile}} (si  utilizan <code>/bin/sh</code>), {{Path|/.bash_profile}} o {{Path|/.bashrc}} (si utilizan <code>/bin/bash</code>). Se pueden encontrar más detalles y buenas prácticas en nuestra [https://wiki.gentoo.org/wiki/Localization/HOWTO Guía de Localización]. 

Otros prefieren definir la localización de forma global. Una circunstancia específica en la que el autor recomienda hacer esto es cuando se utiliza {{Path|/etc/init.d/xdm}} ya que este guión inicio arranca el gestor de pantalla y el escritorio antes de que ninguno de los ficheros del intérprete de comandos anteriormente citados se ejecuten y, por tanto, antes de que las variables estén definidas en el entorno. 

La localización de forma global se debe definir utilizando {{Path|/etc/env.d/02locale}}. Este fichero debería parecerse al siguiente: 

{{Code|Demostración /etc/env.d/02locale|<pre>
## (Como de costumbre, cambie "es_ES.UTF-8" a su localización)
LANG="es_ES.UTF-8"
</pre>
}}

{{Note/es|Puede también sustituir <code>LC_CTYPE</code> por <code>LANG</code>. Para más información sobre las categorías afectadas por el uso de <code>LC_CTYPE</code>, por favor, lea la [http://www.gnu.org/software/libc/manual/html_node/Locale-Categories.html#Locale-Categories página de localizaciones de GNU].}}

A continuación se debe actualizar el entorno para reflejar el cambio. 

{{RootCmd|env-update|output=<pre>
>>> Regenerating /etc/ld.so.cache...
 * Caching service dependencies ...
</pre>}}
{{RootCmd|source /etc/profile}}

Ahora ejecute <code>locale</code> sin argumentos para ver si tenemos las variables correctas en nuestro entorno: 

{{RootCmd|locale|output=<pre>
LANG=es_ES.UTF-8
LC_CTYPE="es_ES.UTF-8"
LC_NUMERIC="es_ES.UTF-8"
LC_TIME="es_ES.UTF-8"
LC_COLLATE="es_ES.UTF-8"
LC_MONETARY="es_ES.UTF-8"
LC_MESSAGES="es_ES.UTF-8"
LC_PAPER="es_ES.UTF-8"
LC_NAME="es_ES.UTF-8"
LC_ADDRESS="es_ES.UTF-8"
LC_TELEPHONE="es_ES.UTF-8"
LC_MEASUREMENT="es_ES.UTF-8"
LC_IDENTIFICATION="es_ES.UTF-8"
LC_ALL=
</pre>
}}

Eso es todo. Ahora está utilizando localizaciones UTF-8. El siguiente obstáculo es la configuración de las aplicaciones que utiliza diariamente. 

== Soporte a Aplicaciones ==

Cuándo Unicode comenzó a ganar popularidad en el mundo del software, los conjuntos de caracteres multibyte no eran apropiados para lenguajes de programación como C en el que se escriben muchos de los programas que la gente usa a diario. Incluso hoy, algunos programas no pueden manejar UTF-8 correctamente. Afortunadamente, ¡La mayoría puede hacerlo! 

=== Nombres de Ficheros, NTFS y FAT ===

Hay varias opciones NLS en el menú de configuración del núcleo Linux, pero, ¡Es importante no confundirse!. En la mayoría de las situaciones, lo único que necesita hacer es construir el soporte NLS UTF-8 en su núcleo y cambiar la opción NLS por defecto a utf8. 

{{Kernel/es|Configuración del núcleo para UTF-8 NLS|<pre>
File Systems -->
 Native Language Support -->
  (utf8) Default NLS Option
  <*> NLS UTF8
  ## (También debe <*> otros conjuntos de caracteres que se utilicen en sus sistemas de ficheros FAT o Joilet CD-ROMs.)
</pre>
}}

Si va a montar particiones NTFS, puede necesitar especificar una opción <code>nls=</code> para la orden mount. Si va a montar particiones FAT, puede que necesite especificar una opción <code>codepage=</code> para la orden mount. Opcionalmente puede también definir una página de códigos (codepage) para FAT por defecto en la configuración del núcleo. Observe que la opción <code>codepage</code> de la orden mount pasará por alto los ajustes realizados en el núcleo. 

{{Kernel/es|Ajustes FAT en la configuración del núcleo|<pre>
File Systems -->
 DOS/FAT/NT Filesystems -->
  (437) Default codepage for fat
</pre>
}}

Debe evitar definir <code>Default iocharset for fat</code> (Conjunto de caracteres de E/S por defecto para FAT) a UTF-8, ya que no está recomendado. En lugar de esto, puede que quiera pasar la opción utf8=true cuando monte sus particiones FAT. Para más información, consulte <code>man mount</code> y la documentación del núcleo en {{Path|/usr/src/linux/Documentation/filesystems/vfat.txt}} . 

Para cambiar la codificación de los nombres de los ficheros, se puede utilizar <code>app-text/convmv</code>. 

{{Emerge|app-text/convmv}}

A continuación se muestra el formato de la orden <code>convmv</code>:

{{RootCmd|convmv -f &lt;codificación-actual&gt; -t utf-8 &lt;nombre-de-fichero&gt;}}

Sustituya iso-8859-1 por el conjunto de caracteres desde el que está convirtiendo:

{{RootCmd|convmv -f iso-8859-1 -t utf-8 nombre-de-fichero}}

Para cambiar el ''contenido'' de los ficheros, se puede emplear la utilidad <code>iconv</code> que está incluida en <code>glibc</code>. Sustituya iso-8859-1 por el conjunto de caracteres desde el que está convirtiendo y compruebe que la salida es correcta.

{{RootCmd|iconv -f iso-8859-1 -t utf-8 nombre-de-fichero}}

Para convertir un fichero, deberá crear otro fichero:

{{RootCmd|iconv -f iso-8859-1 -t utf-8 nombre-de-fichero &gt; nuevo-fichero}}

{{Package|app-text/recode}} se puede utilizar también para este propósito.

=== La Consola del Sistema ===

{{Important/es|Necesita sys-apps/baselayout-1.11.9 o superior para tener Unicode en la consola.}}

Para habilitar UTF-8 en la consola, debe editar {{Path|/etc/rc.conf}} y definir <code>unicode="yes"</code>, y también leer los comentarios en ese fichero. Es importante tener una fuente que tenga un buen rango de caracteres si pretende obtener el máximo de Unicode. Para que esto funcione, asegúrese de que ha creado una localización Unicode de forma correcta. 

La variable <code>keymap</code> definida en {{Path|/etc/conf.d/keymaps}} debería especificar un mapa de teclado Unicode. 

{{Code|Fragmento ejemplo de /etc/conf.d/keymaps|<pre>
## (Cambie "es" por su disposición local)
keymap="es"
</pre>
}}

=== Ncurses y Slang ===

{{Note/es|Ignore cualquier mención de Slang en esta sección si no lo tiene instalado o no lo utiliza.}}

Es sensato añadir <code>unicode</code> a sus opciones USE globales en {{Path|/etc/portage/make.conf}}, y hacer de nuevo emerge de <code>sys-libs/ncurses</code> y <code>sys-libs/slang</code> si procede. Portage hará esto de forma automática cuando actualice su sistema. 

{{RootCmd|emerge --update --deep --newuse world}}

También necesitamos reconstruir los paquetes que enlazan a éstos, ahora se han aplicado los cambios a USE. La herramienta que utilizamos (<code>revdep-rebuild</code>) es parte del paquete <code>gentoolkit</code>. 

{{RootCmd|revdep-rebuild --soname libncurses.so.5 |revdep-rebuild --soname libslang.so.1}}

=== KDE, GNOME y Xfce ===

Todos los entornos de escritorio de mayor uso tienen soporte completo para Unicode y no requieren de configuraciones adicionales que ya se hayan comentado en esta guía. Esto es debido a que las herramientas gráficas (Qt o GTK+2) ya son compatibles con UTF-8. Por tanto, todas las aplicaciones que corran sobre estas herramientas deberían ser compatibles UTF-8. 

Las excepciones a esta regla son Xlib y GTK+1. GTK+1 requiere un FontSpec iso-10646-1 en el fichero /.*gtkrc, por ejemplo <code>-misc-fixed-*-*-*-*-*-*-*-*-*-*-iso10646-1</code>. También, las aplicaciones que utilizan Xlib o Xaw necesitarán tener un FontSpec similar, de lo contrario no funcionarán. 

{{Note/es|Si tiene una versión del centro de control de gnome1, utilícelo en su lugar. Elija cualquier fuente iso10646-1.}}

{{Code|Ejemplo de fichero ~/.gtkrc (para GTK+1) que define una fuente compatible con Unicode|<pre>
style "user-font"
{
 fontset="-misc-fixed-*-*-*-*-*-*-*-*-*-*-iso10646-1"
}
widget_class "*" style "user-font"
</pre>
}}

Si una aplicación tiene soporte para las interfaces gráficas Qt y GTK+2, la interfaz gráfica GTK+2 normalmente ofrecerá mejores resultados con Unicode. 

=== X11 y Fuentes ===

Las fuentes TrueType tienen soporte para Unicode, y la mayoría de las fuentes que se entregan con Xorg tiene un soporte de carácter impresionante, aunque, obviamente, no todos los glifos disponibles en Unicode se han creado para todas las fuentes. Para construir fuentes (incluyendo el conjunto Bitstream Vera) con soporte para letras del este de Asia con X, asegúrese de que tiene definida la opción USE <code>cjk</code>. Muchas otras aplicaciones utilizan esta opción, por lo que merece la pena añadirla como una opción USE permanente. 

También, varios paquetes de fuentes en Portage son compatibles con Unicode. 

{{Emerge|terminus-font intlfonts freefonts corefonts}}

=== Gestores de Ventanas y Emuladores de Terminal ===

Los gestores de ventanas que no se han construido con GTK o Qt generalmente tienen muy buen soporte para Unicode, ya que a menudo utilizan la biblioteca Xft para el manejo de fuentes. Si su gestor de ventanas no utiliza Xft para las fuentes, puede utilizar FontSpec mencionado en la sección anterior como una fuente Unicode. 

Los emuladores de terminal que utilicen Xft y tengan soporte unicode son más difíciles de encontrar. Aparte de Konsole y gnome-terminal, las mejores opciones en Portage son <code>x11-terms/rxvt-unicode</code> , <code>x11-terms/xfce4-terminal</code> , <code>gnustep-apps/terminal</code> , <code>x11-terms/mlterm</code> , o el plano <code>x11-terms/xterm</code> cuando se construye con la opción USE <code>unicode</code> y se invoca como <code>uxterm</code>. <code>app-misc/screen</code> también ofrece soporte para UTF-8 cuando se invoca como <code>screen -U</code> o se incluye lo siguiente en el fichero {{Path|~/.screenrc}} : 

{{Code|~/.screenrc para UTF-8|<pre>
defutf8 on
</pre>
}}

=== Vim, Emacs, Xemacs y Nano ===

Vim ofrece soporte completo para UTF-8 support y también la detección automática de ficheros codificados con UTF-8. Para más información, dentro de Vim, utilice <code>:help mbyte.txt</code>. 

[[GNU Emacs]] Desde la versión 23 y [[XEmacs]] desde la versión 21.5 tiene soporte completo para UTF-8. GNU Emacs 24 también tiene soporte para la edición de texto bidireccional. 

Nano proporciona soporte UTF-8 completo desde la versión 1.3.6.

=== Intérpretes de Comandos ===

Actualmente <code>bash</code> ofrece soporte completi Unicode a través de la librería GNU readline. Z Shell (<code>zsh</code>) ofrece soporte Unicode mediante la opción USE <code>unicode</code>. 

Los interpretes de comandos C, <code>tcsh</code> y <code>ksh</code> no ofrecen ningún tipo de soporte UTF-8. 

=== Irssi ===

Irssi ofrece soporte completo de UTF-8, aunque requiere que el usuario active una opción. 

{{Cmd|set term_charset UTF-8|prompt=[irssi] }}

Para canales en los que se intercambian con frecuencia caracteres que no son ASCII mediante conjuntos de caracteres que no son UTF-8, la orden <code>/recode</code> se puede utilizar para convertir caracteres. Teclee <code>/help recode</code> para obtener más información. 

=== Mutt ===

El agente de correo de usuario Mutt tiene muy buen soporte para Unicode. Para utilizar UTF-8 con Mutt, no necesitará poner nada en su fichero de configuración. Mutt funcionará en un entorno unicode si ninguna modificación si todos los ficheros de configuración (incluida la firma) están codificados con UTF-8. 

{{Note/es|Puede que todavía observe '?' en el correo que lea con Mutt. Esto es debido a que hay personas que utilizan un cliente de correo que no indica el conjunto de caracteres usado. No puede hacer mucho respecto a esto más que pedirles que configuren sus clientes de correo correctamente.}}

Hay más información en el [http://wiki.mutt.org/index.cgi?MuttFaq/Charset Wiki de Mutt]. 

=== Man ===

Las páginas del manual (man) son parte integral de una máquina Linux. Para asegurarse de que cualquier unicode en las páginas del manual se muestra correctamente, edite {{Path|/etc/man.conf}} y cambien la línea que se muestra abajo. 

{{Code|Cambios en man.conf para soporte Unicode|<pre>
## (Esta es la línea antigua)
NROFF /usr/bin/nroff -Tascii -c -mandoc
## (Cambie la línea de arriba por esta)
NROFF /usr/bin/nroff -mandoc -c
</pre>
}}

=== elinks y links ===

Estos son navegadores en modo texto comúnmente usados, y debemos ver como podemos habilitar el soporte UTF-8 en ellos. En <code>elinks</code> y <code>links</code>, hay dos formas de hacer esto, una es utilizando la opción de configuración dentro del navegador y otra es editar el fichero de configuración. Para activar la opción dentro del navegador, abra un sitio con <code>elinks</code> o <code>links</code> y presione <code>Alt+S</code> para entrar en le menú de configuración. A continuación seleccione las opciones del terminal, o presione <code>T</code>. Desplácese hacia abajo y seleccione la última opción <code>UTF-8 I/O</code> presionando Intro. Luego guarde y salga del menú. En <code>links</code> puede que tenga que repetir <code>Alt+S</code> y luego presionar <code>S</code> para guardar. La opción del fichero de configuración se muestra abajo. 

{{Code/es|Habilitar UTF-8 para elinks o links|<pre>
## (Para elinks, edite /etc/elinks/elinks.conf o /.elinks/elinks.conf y añada la siguiente línea)
set terminal.linux.utf_8_*io = 1
## (Para links, edite /.links/links.cfg y añada la siguiente línea)
terminal "*xterm" 0 1 0 *us-*ascii *utf-8
</pre>
}}

&nbsp; <!-- Translated in previous message -->

=== Samba ===

Samba es una suite de software que implementa el protocolo SMB (Bloque de Mensajes del Servidor) para sistemas UNIX como Macs, Linux y FreeBSD. A este protocolo también se le llama Sistema de Ficheros Común de Internet (CIFS). Samba también incluye el sistema NetBIOS, utilizado para compartir ficheros en redes con sistemas Windows. 

añada lo siguiente bajo la sección [global]: {{RootCmd|nano -w /etc/samba/smb.conf|output=<pre>
dos charset = 1255
unix charset = UTF-8
display charset = UTF-8
</pre>
}}

=== Probarlo todo ===

Hay varios sitios Web de prueba para UTF-8. <code>net-www/w3m</code> , <code>net-www/links</code> , <code>net-www/elinks</code> , <code>net-www/lynx</code> y todos los navegadores basados en Mozilla (incluyendo Firefox) ofrecen soporta para UTF-8. Konqueror y Opera también ofrecen soporte completo para UTF-8. 

Cuándo se utiliza un navegador en modo texto, asegúrese bien de que lo está utilizando desde un terminal que es compatible con Unicode. 

Si observa ciertos caracteres mostrados como pequeñas cajas con letras o números dentro, significa que su fuente no tiene un carácter para el símbolo o glifo que demanda UTF-8. En lugar de ello, se muestra una caja con el código hexadecimal del símbolo UTF-8. 

*  [http://www.w3.org/2001/06/utf-8-test/utf-8-demo.html Una página de prueba UTF-8 de W3C]
*  [http://titus.uni-frankfurt.de/indexe.htm?/unicode/unitest.htm Una página de prueba UTF-8 ofrecida por la Universidad de Fráncfort] 

=== Métodos de Entrada ===

Se pueden utilizar las ''teclas muertas'' para introducir caracteres en el sistema X que no está presentes en su teclado. Esto funciona presionando a la vez la tecla Alt de la derecha (o en algunos países, AltGr) y opcionalmente una tecla de la sección no alfabética del teclado a la izquierda de la tecla Intro, soltando ambas y pulsando una letra. La tecla muerta debería modificarla. La entrada se puede modificar más tarde utilizando la tecla Mayúsculas al mismo que tiempo que se pulsa la tecla AltGr y el modificador. 

Para habilitar las teclas muertas en el sistema X, se necesita una disposición que lo soporte. La mayoría de las disposiciones europeas ya incorporan teclas muertas con la variante por defecto. Sin embargo, esto no es así para las disposiciones norteamericanas. Aunque hay cierto grado de inconsistencia entre disposiciones, la forma más fácil parece utilizar una disposición de la forma "en_US" en lugar de "us", por ejemplo. El diseño se define en {{Path|/etc/X11/xorg.conf}} de esta forma: 

{{Code/es|Fragmento de /etc/X11/xorg.conf|<pre>
Section "InputDevice"
 Identifier "Keyboard0"
 Driver "kbd"
 Option "XkbLayout" "en_US" ## # En lugar de solo "us"
 ## (Otras opciones Xkb van aquí)
EndSection
</pre>
}}

{{Note/es|Se necesita aplicar el cambio anterior solo si está utilizando una disposición norteamericana, u otra en la que las teclas muertas no parecen funcionar. Los usuarios Europeos deberían tener teclas muertas.}}

Este cambio tendrá efecto cuando reinicie su servidor X. Para aplicar el cambio en este momento, utilice la herramienta <code>setxkbmap</code>, por ejemplo <code>setxkbmap es_ES</code>. 

Probablemente las teclas muertas se describen de forma más fácil con ejemplos. Aunque los resultados dependen de la localización, los conceptos deben ser los mismos independientemente de la localización. Los ejemplos contienen UTF-8, por lo tanto, para verlos necesita indicarle a su navegador que vea las páginas como UTF-8, o tener una localización UTF-8 ya configurada. 

Cuando se presiona la tecla AltGr y &#91; a la vez y se sueltan ambas, y a continuación se presiona a, se obtiene el carácter 'ä'. Cuando se presiona AltGr y &#91; a la vez y a continuación se presiona e, se obtiene el carácter 'ë'. Cuando se presiona AltGr y ; a la vez, se obtiene el carácter 'á' y cuando se presiona AltGr y ; a la vez, se sueltan y se presiona e, se obtiene el carácter 'é'. 

Presionando a la vez AltGr, Mayúsculas y &#91;, soltándolas, y presionando a, se obtiene un carácter escandinavo 'å'. De modo similar, cuando se presiona AltGr, Mayúsculas y &#91; a la vez, se suelta "solo" la tecla &#91; y se presiona de nuevo, se produce el carácter '°'. Aunque parece un solo carácter, éste (U+02DA) no es el mismo que el símbolo utilizado para indicar grados (U+00B0).

Se puede utilizar AltGr únicamente con teclas alfabéticas. Por ejemplo, AltGr y m producen el carácter griego mu minúscula. AltGr y s producen una 
s scharfes o esszet, etc. Muchos usuarios europeos deberían esperar (porque está marcado en su teclado) que AltGr y 4 (o E dependiendo de la disposición del teclado) producen el símbolo del Euro, '€'. 

=== Recursos ===

*  [http://es.wikipedia.org/wiki/unicode La entrada en Wikipedia para Unicode]
*  [http://es.wikipedia.org/wiki/utf-8 La entrada en Wikipedia para *UTF-8]
*  [http://www.unicode.org Unicode.org]
*  [http://www.utf-8.com Utf-8.com]
*  [http://www.ietf.org/rfc/rfc3629.txt RFC 3629]
*  [http://www.ietf.org/rfc/rfc2277.txt RFC 2277]
*  [http://www.tbray.org/ongoing/when/200x/2003/04/26/UTF Caracteres vs. Bytes] 

== Cuestiones o Problemas Reportados ==

=== Ficheros de Configuración del Sistema (en /etc) ===

La mayoría de los ficheros de configuración del sistema, como {{Path|/etc/fstab}}, no ofrecen soporte para UTF-8. Se recomienda ajustarse al conjunto de caracteres ASCII cuando se editen estos ficheros. 

== Agradecimientos ==

Nos gustarían dar las gracias a los siguientes autores y editores por sus contribuciones a esta guía:

* Thomas Martin
* Alexander Simonov
* Shyam Mani
* nightmorph
