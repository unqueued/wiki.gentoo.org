<languages />

{{Metadata|abstract=O Apache HTTP Server é um servidor web eficiente e extensível. É um dos mais populares servidores web usados na internet.}}

{{InfoBox stack
|{{InfoBox homepage|http://httpd.apache.org|header=true}}
|{{InfoBox wikipedia|Apache HTTP Server}}
|{{InfoBox gdoc|Apache}}
|{{InfoBox github|apache/httpd}}
}}

O '''Apache HTTP Server''' é um [[:Category:Web Servers|servidor web]] eficiente e extensível. É um dos mais populares servidores web usados na Internet.

== Instalação ==

{{Note|Ao atualizar uma versão do Apache, veja o [[Project:Apache/Upgrading|Guia de Atualização]].}}

=== USE flags ===

{{USEflag|package=www-servers/apache|desc=Possible USE flags for {{Package|www-servers/apache}}:
|debug
|doc
|ldap
|ssl+yes
|static
|suexec
|threads
|APACHE2_MODULES+++See {{Path|[http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/profiles/desc/apache2_modules.desc /usr/portage/profiles/desc/apache2_modules.desc]}}. Enable in {{Path|/etc/portage/make.conf}}.
|APACHE2_MPMS+++See {{Path|[http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/profiles/desc/apache2_mpms.desc /usr/portage/profiles/desc/apache2_mpms.desc]}}. Enable in {{Path|/etc/portage/make.conf}}.
}}

=== Emerge ===

{{Emerge|{{Package|www-servers/apache}}}}

=== Suporte global ===

Habilitar a USE flag global <code>apache2</code> fornece suporte ao Apache em outros pacotes. Isto deve fazer com que {{Package|www-servers/apache}} seja instalado automaticamente se um pacote dependente do Apache foi instalado.
 		 
{{FileBox|filename=/etc/portage/make.conf|title|Adicionando o Apache às USE flags do sistema|lang=bash|1=
USE="apache2"
}}

Após configurar as variáveis USE, atualize o sistema para que as mudanças tenham efeito:

{{Emerge|params+=--changed-use --deep|@world}}

== Configuração ==

=== Arquivos ===

Há dois arquivos principais que configuram o comportamento do Apache2 no sistema: 

* Arquivo de configuração do script de inicialização do Apache2 no Gentoo {{Path|/etc/conf.d/apache2 }}

* Arquivo convencional de configuração do servidor Apache2 {{path|/etc/apache2/httpd.conf}}

==== {{Path|/etc/conf.d/apache2}} ====

O arquivo do {{Path|apache2}} em {{Path|/etc/conf.d}} é o arquivo de configuração do script de inicialização do Gentoo. A única linha ativa neste arquivo é a linha <code>APACHE2_OPTS</code>:

{{FileBox|filename=/etc/conf.d/apache2|lang=bash|1=
APACHE2_OPTS="-D DEFAULT_VHOST -D INFO -D SSL -D SSL_DEFAULT_VHOST -D LANGUAGE"
}}

Esta linha define opções que serão interpretadas por vários arquivos de configuração usando a expressão <code><IfDefine option-name></code> para ativar ou desativar alguma parte da configuração toda. Isto será retornado mais tarde no artigo.

==== {{Path|/etc/apache2/httpd.conf}} ====

O arquivo {{Path|httpd.conf}} é o arquivo convencional de configuração do Apache. De fato este arquivo é apenas um '''ponto de entrada''' para a configuração. O arquivo todo é dividido em vários outros no diretório {{Path|/etc/apache2/}}, os quais são reunidos usando a diretiva <code>Include</code>. Por exemplo, a expressão <code>Include /etc/apache2/modules.d/*.conf</code>, em {{Path|httpd.conf}}, visa incluir todos os arquivos em {{Path|/etc/apache2/modules.d/}} cujo nome termine em {{Path|.conf}}. 

Levando em conta o que foi dito na subseção acima, e como arquivos de configuração de módulos (arquivos em {{Path|/etc/apache2/modules.d}}) quase sempre começam com <code><IfDefine module-name></code>, o conteúdo de um arquivo em {{Path|/ect/apache2/modules.d}}, será anexado ao resto da configuração APENAS se a opção correspondente está definida usando uma flag <code>-D module-name</code> na variável <code>APACHE2_OPTS</code> no arquivo {{Path|/etc/conf.d/apache2 }}. O arquivo de configuração {{Path|00_default_settings.conf}} é uma exceção à esta regra, já que ele não inicia com uma expressão <code>IfDefine</code> e portanto é sempre incluído na configuração resultante.

=== Padrões ===

Após a instalação limpa de um servidor Apache, a configuração resultante da junção dos diferentes arquivos de configuração é como a seguir. Comece com o ponto de entrada {{Path|/etc/apache2/httpd.conf}}.

{{Warning| Isto é dado ''apenas'' para referência rápida e uma visão geral. Usuários são fortemente convidados a revisar os comentários inclusos nos diversos arquivos para entender os prós e contras da configuração. Por favor confira também o manual do Apache para um entendimento mais profundo da configuração do servidor Apache.}}

{{FileBox|filename=/etc/apache2/httpd.conf|lang=apache|1=
ServerRoot "/usr/lib64/apache2"
  
#Module loaded unconditionally, assuming the USE flag is no unset in
# /etc/portage/make.conf or in /etc/portage/package.use
LoadModule actions_modulemodules/mod_actions.so
...
#other modules loaded that way : alias_module, auth_basic_module, authn_alias_module,
# authn_anon_module, authn_dbm_module, authn_default_module, authn_file_module, 
# authz_dbm_module, authz_default_module, authz_groupfile_module, authz_host_module, 
# authz_owner_module, authz_user_module, autoindex_module,  cgi_module,  cgid_module, 
# deflate_module, dir_module, env_module, expires_module, ext_filter_module, filter_module,
#  headers_module, include_module,  log_config_module, logio_module, mime_module,  
# mime_magic_module, negotiation_module, rewrite_module, setenvif_module, 
# speling_module,ssl_module, status_module, unique_id_module, usertrack_module, host_alias_module
  
  
#Modules loaded conditionally, assuming matching USE flag is not unset in
# /etc/portage/make.conf or in /etc/portage/package.use (flag to be set in )
<IfDefine AUTHNZ_LDAP>
LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
</IfDefine>
#other modules loaded that way : cache_module, dav_module, dav_fs_module,
# dav_lock_module,disk_cache_module,  file_cache_module, info_module, ldap_module,
# mem_cache_module, userdir_module
  
  
User apache
Group apache
  
# Supplemental configuration
#**************************************************************************************vvv
#this part is included via Include /etc/apache2/modules.d/*.conf 
  
#included from /etc/apache2/modules.d/00_default_settings.conf-------------v
#this is always included as there is not option to deactivate it.
Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 15
UseCanonicalName Off
AccessFileName .htaccess
ServerTokens Prod
TraceEnable off
ServerSignature On 
HostnameLookups Off
EnableMMAP On
EnableSendfile On
FileEtag INode MTime Size
ContentDigest Off
ErrorLog /var/log/apache2/error_log
LogLevel warn
  
<Directory />
	Options FollowSymLinks
	AllowOverride None
	Order deny,allow
	Deny from all
</Directory>
  
<IfModule dir_module>
	DirectoryIndex index.html index.html.var
</IfModule>
<FilesMatch "^\.ht">
	Order allow,deny
	Deny from all
</FilesMatch>
#--------------------------------------------------------------------------^
  
#included from 00_mod_info.conf--------------------------------------------v
<IfDefine INFO>
<Location /server-info>
	SetHandler server-info
	Order deny,allow
	Deny from all
	Allow from 127.0.0.1
</Location>
</IfDefine>
#--------------------------------------------------------------------------^
  
#--------------------------------------------------------------------------v
#included from 00_languages.conf
# Settings for hosting different languages.
<IfDefine LANGUAGE>
  
	AddLanguage ca .ca
	...
	AddLanguage zh-TW .zh-tw
  
	LanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn no pl pt pt-BR ru sv zh-CN zh-TW
  
	ForceLanguagePriority Prefer Fallback
  
	AddCharset us-ascii.ascii	.us-ascii
	AddCharset <nowiki>ISO-8859-1		.iso8859-1 .latin1</nowiki>
	...
	AddCharset shift_jis		.shift_jis .sjis
</IfDefine>
#---------------------------------------------------------------------------^
#**************************************************************************************^^^
  
  
#***************************************************************************************vvv
#this part is included via Include /etc/apache2/vhosts.d/*.conf 
#from 00_default_ssl_vhost.conf-----------------------------------------------------vv
<IfDefine SSL>
	<IfDefine SSL_DEFAULT_VHOST>
		<IfModule ssl_module>
			Listen 443
  
			<VirtualHost _default_:443>
				ServerName localhost
                                #------------------------------------------v
				# this part is included via Include /etc/apache2/vhosts.d/default_vhost.include
				ServerAdmin root@localhost
				DocumentRoot "/var/www/localhost/htdocs"
  
  	
				<Directory "/var/www/localhost/htdocs">
	   				Options Indexes FollowSymLinks
	   				AllowOverride All
	   				Order allow,deny
	   				Allow from all
				</Directory>
  
				<IfModule alias_module>
	   				ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
				</IfModule>
  
				<Directory "/var/www/localhost/cgi-bin">
	   				AllowOverride None
	   				Options None
	   				Order allow,deny
	   				Allow from all
				</Directory>
        			#end of Include ---------------------------^
  	
				ErrorLog /var/log/apache2/ssl_error_log
  
				<IfModule log_config_module>
					TransferLog /var/log/apache2/ssl_access_log
				</IfModule>
				SSLEngine on
				SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
				SSLCertificateFile /etc/ssl/apache2/server.crt
				SSLCertificateKeyFile /etc/ssl/apache2/server.key
  
				<FilesMatch "\.(cgi{{!}}shtml{{!}}phtml{{!}}php)$">
					SSLOptions +StdEnvVars
				</FilesMatch>
  
				<Directory "/var/www/localhost/cgi-bin">
					SSLOptions +StdEnvVars
				</Directory>
  
				<IfModule setenvif_module>
					BrowserMatch ".*MSIE.*" \
					nokeepalive ssl-unclean-shutdown \
					downgrade-1.0 force-response-1.0
				</IfModule>
  
  
				<IfModule log_config_module>
					CustomLog /var/log/apache2/ssl_request_log \
					"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
					</IfModule>
			</VirtualHost>
		</IfModule>
	</IfDefine>
</IfDefine>
#---------------------------------------------------------------------------------^^
#from 00_default_vhost.conf-------------------------------------------------------vv
<IfDefine DEFAULT_VHOST>
	Listen 80
	NameVirtualHost *:80
  
	<VirtualHost *:80>
		ServerName localhost
  
		#---------------------------------------------------------------v
		# this part is included via Include /etc/apache2/vhosts.d/default_vhost.include
		ServerAdmin root@localhost
		DocumentRoot "/var/www/localhost/htdocs"
  
  	
		<Directory "/var/www/localhost/htdocs">
	   		Options Indexes FollowSymLinks
	   		AllowOverride All
	   		Order allow,deny
	   		Allow from all
		</Directory>
  
		<IfModule alias_module>
	   		ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
		</IfModule>
  
		<Directory "/var/www/localhost/cgi-bin">
	   		AllowOverride None
	   		Options None
	   		Order allow,deny
	   		Allow from all
		</Directory>
        	#end of Include -----------------------------------------------^
  
		<IfModule mpm_peruser_module>
			ServerEnvironment apache apache
		</IfModule>
	</VirtualHost>
</IfDefine>
#-----------------------------------------------------------------------------------^^
# end of include ****************************************************************************************^^^
}}

=== Primeiro sinal de vida ===

Como visto na configuração inicial acima, o diretório do <code>DocumentRoot</code> do host virtual pré-instalado é {{Path|/var/www/localhost/htdocs}} e seu nome de servidor é ''localhost''. Além disso um arquivo index.html é fornecido na pasta <code>DocumentRoot</code>, sendo assim, para checarmos se tudo está corretamente instalado ou não, aponte um navegador para [http://localhost/ http://localhost/].

Uma mensagem de "It works!" deve ser exibida na página.

{{Warning|Fora da caixa, [[Firefox]] possui uma funcionalidade desenhada para ajudar os usuários que comumente erram URL's na barra de endereços. Se uma URL falha na resolução, o Firefox tenta algumas alterações da URL para encontrar o que o usuário 'quis dizer' de fato, anexando um <code>.com</code> ou prefixando um <code>www.</code> à URL para ver se isso resolve.
 
Esta funcionalidade, a qual foi introduzida nas primeiras versões do Firefox, é um tanto chata para desenvolvedores. Ela significa que quando um servidor rodando no localhost falha ao responder, o Firefox decide tentar <code>localhost.com</code> ou <code>www.localhost.com</code>. Isto frequentemente resulta em um erro 404.
 
Para desabilitar esta funcionalidade:
 
# Digite <code>about:config</code> na barra de endereços e pressionte Enter
# Clique em "Serei cuidadoso, prometo!" (ou "I'll be careful") e entre na página de configurações especiais
# Digite <code>browser.fixup.alternate.enabled</code> na bara de pesquisa e pressione Enter
# Clique com o botão direito em <code>browser.fixup.alternate.enabled</code> e mude seu valor para false.
}}

=== Habilitando mod_security ===

Instale {{Package|www-apache/mod_security}}:

{{Emerge|www-apache/mod_security}}

Habilite o módulo <code>SECURITY</code> na variável <code>APACHE2_OPTS</code> do arquivo {{Path|apache2}}:

{{FileBox|filename=/etc/conf.d/apache2|title=Habilitando o módulo de segurança|lang=bash|1=
APACHE2_OPTS="... -D SECURITY"
}}

Controle este módulo editando os arquivos {{Path|/etc/apache2/modules.d/79_modsecurity.conf}} e {{Path|/etc/apache2/modules.d/80_modsecurity-crs.conf}}, e então reinicie o Apache.

=== Habilitando suporte a PHP ===

Instale o [[PHP]] com a USE flag <code>apache2</code> e habilite o módulo:

{{FileBox|filename=/etc/conf.d/apache2|title=Habilitando o módulo PHP|lang=bash|1=
APACHE2_OPTS="... -D PHP5"
}}

Antes de testar se o módulo PHP funciona, verifique se o arquivo {{Path|/etc/apache2/modules.d/70_mod_php5.conf}} existe e contém a seguinte definição:

{{FileBox|filename=/etc/apache2/modules.d/70_mod_php5.conf|title=Verifying the PHP module will be loaded|lang=apache|1=
<IfDefine PHP5> 
        # Load the module first 
        <IfModule !mod_php5.c> 
                LoadModule php5_module    modules/libphp5.so 
        </IfModule> 
  
        # Set it to handle the files 
        <IfModule mod_mime.c> 
                AddHandler application/x-httpd-php .php .php5 .phtml 
                AddHandler application/x-httpd-php-source .phps 
        </IfModule> 
  
        DirectoryIndex index.php index.phtml 
</IfDefine>
}}

Se ele não existir, crie-o.

Para verificar se o módulo PHP funciona, crie uma página de teste:

{{FileBox|filename=/var/www/localhost/htdocs/index.php|title=PHP test page|lang=php|1=
<html>
 <body>
  <?php phpinfo(); ?>
 </body>
</html>
}}

Agora, omita ou renomeie {{Path|/var/www/localhost/htdocs/index.html}} e abra a página de teste: http://localhost/

Uma tabela descrevendo as configurações do PHP deve estar visível.

====Modificar versões do PHP ==== 

Para alterar a versão do PHP manipulada pelo Apache, primeiro liste as versões disponíveis para a interface SAPI (Server Application Programming Interface) do <code>apache2</code>:

{{RootCmd|eselect php list apache2|output=<pre>
 [1]   php5.3
 [2]   php5.4 *
 [3]   php5.5
</pre>}}

Altere para a versão de sua escolha:

{{RootCmd|eselect php set apache2 N}}

Substitua <code>N</code> no exemplo acima pelo número solicitado na saída do comando <tt>eselect php list apache2</tt> como exibido anteriormente.

=== Hosts virtuais ===

Para cada host virtual, forneça um diretório <code>DocumentRoot</code> alcançável e acessível pelo daemon do Apache. Adicione um arquivo de configuração de host vitual ({{Path|VirtualHost.conf}}) na pasta {{Path|/etc/apache2/vhosts.d}}, a qual usa este <code>DocumentRoot</code> e o nome de servidor do host virtual. Não esqueça de adicionar uma entrada para este nome de domínio em {{Path|/etc/hosts}}.

Para atribuir a propriedade de usuário/grupo para o apache nos arquivos de host virtuais, use <tt>chown</tt> como no exemplo a seguir:

{{RootCmd|chown apache:apache /var/www/sitename}}

Abaixo estão dois exemplos de definição de host virtual, uma para domainname1.com e outra para domainname2.com. Repare as diferentes diretivas de <code>DocumentRoot</code> e <code>ServerName</code> mesmo que o host em si (<code>*:80</code>) permaneça o mesmo:

{{CodeBox|title=Exemplo de definições de host virtual|lang=apache|1=
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website1
    ServerName domainname1.com
</VirtualHost>
  
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website2
    ServerName domainname2.com
</VirtualHost>
}}

It is recommended to provide an IP based virtual host definition as well. This allows the administrator to put up a message for users that try to reach a site through its IP address:

{{CodeBox|title=host virtual baseado em IP|lang=apache|1=
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/html
    ServerName xxx.xxx.xxx.xxx
</VirtualHost>
}}

Após inserir os hosts virtuais, o servidor precisa ser (graciosamente) reiniciado para os novos sites se tornarem ativos.

=== Habilitando PHP por fcgid ===

Instale {{Package|www-apache/mod_fcgid}} e {{Package|dev-lang/php}}. O pacote PHP requer a USE flag <code>cgi</code> definida:

{{Emerge|www-apache/mod_fcgid dev-lang/php}}

Edite o arquivo {{Path|mod_fcgid.conf}}:

{{FileBox|filename=/etc/apache2/modules.d/20_mod_fcgid.conf|lang=apache|1=
<IfDefine FCGID>
LoadModule fcgid_module modules/mod_fcgid.so
SocketPath /var/run/fcgidsock
SharememPath /var/run/fcgid_shm
  
AddHandler php-fcgid .php
AddType application/x-httpd-php .php
Action php-fcgid /fcgid-bin/php-fcgid-wrapper
# max request 128mb
FcgidMaxRequestLen 134217728
<Location /fcgid-bin/>
        SetHandler fcgid-script
        Options +ExecCGI
</Location>
</IfDefine>
}}

Crie a pasta necessária: 

{{RootCmd|mkdir /var/www/localhost/htdocs/fcgid-bin}}

Crie um link simbólico para o wrapper do PHP:

{{RootCmd|ln -s /usr/bin/php-cgi /var/www/localhost/htdocs/fcgid-bin/php-fcgid-wrapper}}

Habilite o módulo fcgid:

{{FileBox|filename=/etc/conf.d/apache2|title=Habilitando o módulo fcgid|lang=bash|1=
APACHE2_OPTS="... -D FCGID"
}}

Por fim reinicie o Apache e verifique o site <code>phpinfo()</code> criado anteriormente. O valor de <code>Server API</code> deve ser ''CGI/FastCGI''

=== Habilitando PHP-FPM pelo mod_proxy_fcgi no Apache 2.4 ===

Com PHP 5.3 e acima, PHP suporta um modo adicional, FastCGI Process Manager, ou FPM.

O método a seguir confia na diretiva FilesMatch e é colocado dentro da configuração principal do servidor ou hosts virtuais. A localização do socket UNIX é determinado pela diretiva listen em {{Path|php-fpm.conf}}, permitindo especificar pools separados por site or função.

In the following example, it is placed within the PHP module config file of Apache:

{{FileBox|filename=/etc/apache2/modules.d/70_mod_php5.conf|title=Using PHP-FPM|lang=apache|1=
 <IfDefine PHP5>
        <FilesMatch "\.php$">
                SetHandler "proxy:unix:///var/run/php-fpm/www.sock{{!}}fcgi://localhost/"
        </FilesMatch>
  
	# Set it to handle the files
	<IfModule mod_mime.c>
		AddHandler application/x-httpd-php .php .php5 .phtml
		AddHandler application/x-httpd-php-source .phps
	</IfModule>
  
	DirectoryIndex index.php index.phtml
 </IfDefine>
}}

By default the <code>listen</code> directive is not set to a socket. First create the directory for the socket file:

{{RootCmd|mkdir /var/run/php-fpm}}

Next, update the {{Path|php-fpm.conf}} file as follows:

{{FileBox|filename=php-fpm.conf|title=Updating listen directive|lang=apache|1=
; Set permissions for unix socket, if one is used. In Linux, read/write
; permissions must be set in order to allow connections from a web server. Many
; BSD-derived systems allow connections regardless of permissions.
; Default Values: user and group are set as the running user
;                 mode is set to 0666
listen.owner = nobody
listen.group = nobody
;listen.mode = 0666
 
 ; The address on which to accept FastCGI requests.
 ; Valid syntaxes are:
 ;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific address on
 ;                            a specific port;
 ;   'port'                 - to listen on a TCP socket to all addresses on a
 ;                            specific port;
 ;   '/path/to/unix/socket' - to listen on a unix socket.
 ; Note: This value is mandatory.
 ;listen = 127.0.0.1:9000
listen = /var/run/php-fpm/www.sock
}}

Then enable both the PHP and proxy modules:

{{FileBox|filename=/etc/conf.d/apache2|title=Enabling PHP and proxy modules|lang=bash|1=
APACHE2_OPTS="... -D PHP5 -D PROXY"
}}

== Usage ==

=== Services ===

==== OpenRC ====

Start the Apache server:

{{RootCmd|/etc/init.d/apache2 start}}

Add Apache to the default runlevel:

{{RootCmd|rc-update add apache2 default}}

Restart the Apache service:

{{RootCmd|/etc/init.d/apache2 restart}}

Reload Apache configuration files:

{{RootCmd|/etc/init.d/apache2 reload}}

==== systemd ====

Start the Apache server:

{{RootCmd|systemctl start apache2}}

Add Apache to the default runlevel: 

{{RootCmd|systemctl enable apache2}}

Restart the Apache service: 

{{RootCmd|systemctl restart apache2}}

== Troubleshooting ==

=== Resources ===

The Apache server can be difficult to configure properly. Below are some resources that may be helpful when issues occur:

* [[Project:Apache/Troubleshooting|Troubleshooting guide]]
* {{Bug|www-servers/apache|search=package}}

=== Testing ===

Verifying IP interfaces and ports on which Apache2 is running on and listening to:

{{RootCmd|netstat -tulpen {{!}} grep apache|output=<pre>
tcp     0     0 0.0.0.0:80      0.0.0.0:*     LISTEN     0     10932720     4544/apache2        
tcp     0     0 0.0.0.0:443     0.0.0.0:*     LISTEN     0     10932716     4544/apache2        
</pre>}}

Testing if a connection to a Apache server is working on localhost:

{{Cmd|telnet localhost 80|output=<pre>
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
</pre>}}

Interrupt the connection test with {{Key|Ctrl}}+{{Key|c}} and {{Key|Enter}}.

=== apr_sockaddr_info_get() failed for <System_Hostname> ===

'''Error:'''

<pre>apache2: apr_sockaddr_info_get() failed for System_Hostname</pre>

'''Resolution:'''

When this occurs, add the host name to the {{Path|/etc/hosts}} file:

{{FileBox|filename=/etc/hosts|title=Adding a Hostname for Apache|1=
127.0.0.1 localhost System_Hostname
}}

== See also ==

* [[Lighttpd]] - A fast, lightweight web server.
* [[Nginx]] - A small, robust, and high-performance HTTP server and reverse proxy.

== External resources ==

* [http://articles.slicehost.com/2010/12/2/installing-apache-on-gentoo Slicehost article: Installing Apache on Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-files-on-gentoo Slicehost article: Apache configuration files on Gentoo]
* [http://articles.slicehost.com/2010/12/3/configuring-the-apache-mpm-on-gentoo Slicehost article: Configuring the Apache MPM on Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-on-gentoo-part-1 Slicehost article: Apache configuration on Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-virtual-hosts-on-gentoo-part-1 Slicehost article: Apache Virtual Hosts on Gentoo]
* [http://articles.slicehost.com/2010/12/3/enabling-and-using-apache-s-mod_status-on-gentoo Slicehost article: Enabling and using apache's mod_status on Gentoo]
* [http://httpd.apache.org/docs/ apache.org documentation]
* [http://gentoo-en.vfose.ru/wiki/Apache2_mod_pagespeed Apache2 mod_pagespeed]


[[Category:Web Servers]]
