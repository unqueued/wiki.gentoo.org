<languages/>

{{Metadata|abstract=La aplicación efibootmgr interactúa con el firmware UEFI del sistema, y ​​es una herramienta popular que sirve para manipular la configuración de EFI a fin de crear y gestionar entradas de arranque, capaces de arrancar Línux (u otros sistemas operativos).}}

La aplicación <tt>efibootmgr</tt> interactúa con el firmware UEFI del sistema, y ​​es una herramienta popular que sirve para manipular la configuración de EFI a fin de crear y gestionar entradas de arranque, capaces de arrancar Línux (u otros sistemas operativos).

{{InfoBox stack
|{{InfoBox homepage|https://github.com/vathpela/efibootmgr|header=true}}
}}

== EFIbootmgr no es un gestor de arranque ==

La aplicación {{Package|sys-boot/efibootmgr}} no es propiamente un gestor de arranque. Es una herramienta que interactúa con el firmware EFI del sistema, que a su vez actúa como un gestor de arranque. Con la aplicación <tt>efibootmgr</tt> podemos crear, remodelar y actualizar entradas de arranque.

== Configuración ==

La aplicación {{Package|sys-boot/efibootmgr}} no requiere ninguna configuración. Todo lo que se necesita es instalarla.

{{Emerge|sys-boot/efibootmgr}}

However, in order to successfully use the <tt>efibootmgr</tt> application, the EFI variables file system must be accessible. This requires that the system is already booted with EFI (and not through the BIOS) as otherwise the EFI variables themselves are not accessible.

{{RootCmd|mount {{!}} grep efivars|output=<pre>
efivarfs on /sys/firmware/efi/efivars type efivarfs (rw,nosuid,nodev,noexec,relatime)
</pre>}}

If it is not mounted yet (it should be mounted through the {{Path|sysfs}} init script), it is possible to manually mount it like so:

{{RootCmd|mount -t efivars efivars /sys/firmware/efi/efivars}}

== Managing EFI boot entries ==

=== Listing boot entries ===

To list the current boot entries, just use <tt>efibootmgr</tt>. Use the <code>--verbose (-v)</code> option to get some additional information:

{{RootCmd|efibootmgr -v|output=<pre>
BootCurrent: 0002
Timeout: 3 seconds
BootOrder: 0003,0003,0002,0000,0004
Boot0000* CD/DVD Drive  BIOS(3,0,00)
Boot0001* Hard Drive    BIOS(2,0,00)
Boot0002* Gentoo        HD(1,800,61800,6d98f360-cb3e-4727-8fed-5ce0c040365d)File(\EFI\boot\bootx64.efi)
Boot0003* Hard Drive    BIOS(2,0,00)P0: ST1500DM003-9YN16G
</pre>}}

=== Creating a boot entry ===

To create an EFI boot entry, a couple of arguments are passed to <tt>efibootmgr</tt>:

* <code>--create (-c)</code> to create a new entry;
* <code>--part (-p)</code> followed by the partition number on which the EFI System Partition is hosted;
* <code>--disk (-d)</code> followed by the disk on which the EFI System Partition is hosted;
* <code>--label (-L)</code> followed by the label to use as the boot entry;
* <code>--loader (-l)</code> followed by the path of the EFI image to boot

{{Important|The path of the EFI image to boot ''must'' use {{Key|\}} (backslash) instead of {{Key|/}} (forward slash) as path separator.}}

For instance:

{{RootCmd|efibootmgr -c -d /dev/sda -p 2 -L "Gentoo" -l "\efi\boot\bootx64.efi"}}

=== Deleting a boot entry ===

Before deleting an entry, first figure out what ID the entry has.

To delete the Gentoo entry as shown above (which has ''Boot0002'' as the identifier), ask <tt>efibootmgr</tt> to delete the entry with id 2, passing the arguments <code>--bootnum (-b)</code> with the identifier, and <code>--delete-bootnum (-B)</code> to delete the entry:

{{RootCmd|efibootmgr -b 2 -B}}

== See also ==

* [[EFI_stub_kernel|EFI stub kernel]], este artículo explica cómo configurar el kérnel de Línux para poder ser arrancado desde EFI directamente.
