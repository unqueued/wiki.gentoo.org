==Introduction==

Lxc was initially created by IBM, available in the mainline Linux kernel.
It uses cgroups and in concept is similar to Solaris Zones and FreeBSD Jails.
As the previously named technologies it aims to provide an higher level of segregation than a simple chroot.

==Concepts==

===Virtualization concepts===

This section is a basic overview of how lxc fits in to the virtualization world, the type of approach it uses, and the benefits and limitations thereof.
If you are trying to figure out if lxc is for you, or it's your first time setting up virtualization under Linux, then you should at least skim this section. 
If you are already familiar with virtualization feel free to skip forward to ###

Roughly speaking there are two types of virtualization in use today, container-based virtualization and full virtualization.

===Virtualization concepts===
This section is a basic overview of how lxc fits in to the virtualization world, the type of approach it uses, and the benefits and limitations thereof.
If you are trying to figure out if lxc is for you, or it's your first time setting up virtualization under Linux, then you should at least skim this section. 

Roughly speaking there are two types of virtualization in use today, container-based virtualization and full virtualization.

====Container-based Virtualization (lxc)====

Container based virtualization is very fast and efficient.  It's based on the premise that an OS kernel provides different views of the system to different running processes.  This sort of segregation or compartmentalisation (sometimes called "thick sandboxing") can be useful for ensuring guaranteed access to hardware resources such as CPU and IO bandwidth, whilst maintaining security and efficiency.

On the unix family of operating systems, it is said that container based virtualization has its roots in the 1982 release of the [http://en.wikipedia.org/wiki/Chroot ''chroot''] tool, a filesystem subsystem specific container-based virtualization tool that was written by Sun Microsystems founder Bill Joy and published as part of 4.2BSD.

Since this early tool, which has become a mainstay of the unix world, a large number of unix developers have worked to mature more powerful container based virtualization solutions.  Some examples:
* Solaris Zones
* FreeBSD Jails
* Linux VServer
* OpenVZ

On Linux, historically the major two techniques have been Linux-VServer (open source / community driven) and OpenVZ (a free spinoff of a commercial product).

However, neither of these will be accepted in to the Linux kernel.  Instead Linus has opted for a more flexible, longer-term approach to achieving similar goals, using various new kernel features.  lxc is the next-generation container-based virtualization solution that uses these new features.

Conceptually, lxc can be seen as a further development of the existing 'chroot' technique with extra dimensions added. Where 'chroot'-ing only offers isolation at the file system level, lxc offers complete logical isolation from a container to the host and all other containers. In fact, installing a new Gentoo container from scratch is pretty much the same as for any normal Gentoo installation. 

Some of the most notably differences are: 
* each container will share the kernel with the host (and other containers). No kernel need to be present and/or mounted on the containers /boot directory;
* devices and filesystem will be (more or less) 'inherited' from the host, and need not be configured as would apply for a normal installation;
* if the host is using the openrc system for bootstrapping, such configuration items will "automagically" be omitted (i.e. filesystem mounts from fstab).

The last point is important to keep lxc based installation as much as simple and the same as for normal installations (no exceptions).
