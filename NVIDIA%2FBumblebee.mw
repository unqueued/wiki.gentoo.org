{{InfoBox stack
|{{InfoBox homepage|https://bumblebee-project.org/|header=true}}
|{{InfoBox github|Bumblebee-Project/Bumblebee}}
}}

Bumblebee is [[Article description::an open source implementation of [[NVIDIA/Optimus|NVIDIA Optimus]].]]

This is a guide to configuring a Gentoo system to make use of Hybrid Graphics using:

* The proprietary NVIDIA graphics drivers
* The Intel iGPU drivers
* Bumblebee
* bbswitch for hardware switching
* Primus for bridging

This configuration prefers Primus over Optirun/VGL.

== Pre Installation ==

=== NVIDIA Optimus support ===

This is pretty much straightforward. If you have an Intel processor (2nd Gen +) and a NVIDIA GPU, then you probably have Optimus on your laptop. To check for sure, run

{{RootCmd|lspci -k {{!}} grep -i -e vga -e nvidia|output=<pre>
00:02.0 VGA compatible controller: Intel Corporation Device 591b (rev 04)
01:00.0 3D controller: NVIDIA Corporation GM107GLM [Quadro M1200 Mobile] (rev a2)
</pre>}}

and look for VGA or 3D controllers to see your present GPUs.
If you don't have an Optimus system, this guide will do nothing for you.

== Installation ==

=== NVIDIA drivers ===

First configure your system to use [[NVIDIA/nvidia-drivers|NVIDIA's proprietary drivers]] instead of the [[Nouveau|open source Nouveau drivers]] and install the drivers. This is already detailed elsewhere on the wiki and is not repeated here.

{{Note|It may be useful to set the <code>-kms</code> and <code>-uvm</code> USE Flags '''''before''''' installing the NVIDIA drivers}}

=== Intel drivers ===

Also configure and install the Intel drivers according to [[Intel|the wiki]]. DDX or modesetting both ought to work.

=== Kernel ===

Ensure that you system can load and unload modules:

{{KernelBox|title=Linux kernel 4.3.3+|1=
CONFIG_MODULES=y
CONFIG_MODULE_UNLOAD=y
}}

=== Configuring /etc/portage/make.conf ===

==== Video cards ====

Set your video card variables like so:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
...
VIDEO_CARDS="intel i965 nvidia"
...
}}

{{Note|People with older Intel cards may need to use <code>i915</code> instead of <code>i965</code>}}

==== USE flags ====

In order to allow easy enabling and disabling of the NVIDIA drivers, we need to disable the <code>kms</code> and <code>uvm</code> USE flags for the NVIDIA drivers:

{{FileBox|filename=/etc/portage/package.use|1=
x11-drivers/nvidia-drivers -kms -uvm
}}

{{Note|See links for USE flag descriptions: [https://packages.gentoo.org/packages/x11-drivers/nvidia-drivers nvidia-drivers], [https://packages.gentoo.org/packages/x11-misc/bumblebee bumblebee], [https://packages.gentoo.org/packages/x11-drivers/xf86-video-intel xf86-video-intel].
Recommended USE flags by DotSlashLinux are:
* nvidia-drivers: <code>+X</code>, <code>+acpi</code>, <code>+compat</code>, <code>driver</code>, <code>gtk3</code>, <code>+tools</code>, <code>-kms</code>, <code>-pax_kernel</code>, <code>-static-libs</code>, <code>-uvm</code>, <code>-wayland</code>
* xf86-video-intel: <code>+dri</code>, <code>+dri3</code>, <code>+sna</code>, <code>+udev</code>, <code>+xvmc</code>, <code>-debug</code>, <code>-tools</code>, <code>-uxa</code>
* bumblebee: <code>+bbswitch</code>, <code>+video_cards_nvidia</code>, <code>-video_cards_nouveau</code>
}}

{{Note|It is possible to use KMS and UVM with Bumblebee, see the item in the [https://wiki.gentoo.org/wiki/NVIDIA/Bumblebee#Troubleshooting troubleshooting] section}}

Now update your {{c|@world}} set:

{{Emerge
|@world
|params+=--update --deep --newuse
}}

Then reboot your system

{{RootCmd|shutdown -r now}}

=== Installing Bumblebee, bbswitch, Primus ===

Emerge the packages:

{{Emerge|sys-power/bbswitch x11-misc/bumblebee x11-misc/primus}}

== Configuration ==

=== User access to Bumblebee ===

Make sure to add your user to the {{c|video}} and {{c|bumblebee}} groups to allow use of bumblebee:

{{RootCmd|usermod -a -G video,bumblebee USER}}

(Replacing USER with your username)

=== Configuring /etc/init.d/bumblebee ===

By default, the OpenRC bumblebee module is set to depend on VGL and XDM. We are using primus over VGL. The XDM dependency can cause problems if this configuration is being setup prior to the X server. Remove the following lines (which should be near the start of the file):

{{FileBox|filename=/etc/init.d/bumblebee|lang=bash|1=
...
depend() {
    need xdm
    need vgl
}
...
}}

Your final file should look something like this:

{{FileBox|filename=/etc/init.d/bumblebee|lang=bash|1=

PIDFILE="${PIDFILE:-/var/run/bumblebee.pid}"

start() {
    ebegin "Starting BumbleBee Daemon"
        start-stop-daemon -S -p "${PIDFILE}" -x /usr/sbin/bumblebeed -- -D ${BUMBLEBEE_EXTRA_OPTS} --pidfile "${PIDFILE}"
    eend $?
}

stop() {
    ebegin "Stopping BumbleBee Daemon"
        start-stop-daemon -K -p "${PIDFILE}" -R SIGTERM/10
    eend $?
}
}}

The important part is that it no longer has any dependencies.

=== Configuring /etc/bumblebee/bumblebee.conf ===

The following settings need to be present in the {{Path|/etc/bumblebee/bumblebee.conf}} file.

{{FileBox|filename=/etc/bumblebee/bumblebee.conf|1=
[bumblebeed]
...
KeepUnusedXServer=false
...
Driver=nvidia
...

[optirun]
...
Bridge=primus
...
VGLTransport=rgb
...

[driver-nvidia]
...
KernelDriver=nvidia
...
PMMethod=bbswitch
...
}}

{{Note|The VGLTransport setting is only needed if the reader is attempting to configure bumblebee to work with VGL instead of Primus. It does no harm to set it anyway.}}

=== OpenRC ===

Now enable Bumblebe to load at runlevel <code>default</code>

{{RootCmd|rc-update add bumblebee default}}

And once again, reboot the system:

{{RootCmd|shutdown -r now}}

=== Configuring /etc/modprobe.d/nvidia-rmmod.conf ===

Earlier, we disabled the <code>kms</code> and <code>uvm</code> USE flags for the NVIDIA drivers. This means we should only have the module <code>nvidia</code> present and not <code>nvidia-uvm</code>, <code>nvidia-drm</code>, or <code>nvidia-modeset</code>.
In order that {{c|modprobe -r nvidia}} functions correctly, we need it to remove only <code>nvidia</code> and nothing else. Remove all other modules from {{Path|/etc/modprobe.d/nvidia-rmmod.conf}} so that it changes from looking like this:

{{FileBox|filename=/etc/modprobe.d/nvidia-rmmod.conf|1=
remove nvidia modprobe -r --ignore-remove nvidia-drm nvidia-modeset nvidia-uvm nvidia
}}

to this:

{{FileBox|filename=/etc/modprobe.d/nvidia-rmmod.conf|1=
remove nvidia modprobe -r --ignore-remove nvidia
}}

=== OpenGL ===

We need to ensure OpenGL is set to use <code>xorg-x11</code> instead of <code>nvidia</code>:

{{RootCmd|eselect opengl list|output=<pre>
[1] nvidia
[2] xorg-x11 *
</pre>}}

{{RootCmd|eselect opengl set 2}}

== Post installation ==

=== Check if Bumblebee is working ===

==== Using glxgears ====

Install the {{Package|x11-apps/mesa-progs}} package to access {{c|glxgears}}:

{{Emerge|x11-apps/mesa-progs}}

Before we run our test, make sure the <code>nvidia</code> module is '''''not''''' loaded:

{{RootCmd|lsmod|output=<pre>
Module    Size   Used by
bbswitch  5461   0
</pre>}}

And check the status of bbswitch using:

{{RootCmd|cat /proc/acpi/bbswitch|output=<pre>
0000:01:00.0 OFF
</pre>}}

As you can see:

* bbswitch is loaded
* The <code>nvidia</code> module is '''''not''''' loaded
* The NVIDIA GPU (at PCI location 01:00.0) is '''''off'''''

Now let’s check if the NVIDIA card will be switched '''''on''''' and the <code>nvidia</code> module will be loaded once {{c|optirun}}/{{c|primusrun}} are executed, and if it’ll switch '''''off''''' and the <code>nvidia</code> module will be unloaded once {{c|optirun}}/{{c|primusrun}} finish executing.

From within an Xorg Session:

{{Cmd|optirun glxgears}}

or (but not both at once):

{{Cmd|primusrun glxgears}}

{{Note|{{c|primusrun}} reputedly gives better performance than {{c|optirun}}}}

A window showing {{c|glxgears}} should open. While it's running, check:

{{RootCmd|lsmod|output=<pre>
Module        Size   Used by
nvidia    10652360   51
bbswitch      5461   0
</pre>}}

{{RootCmd|cat /proc/acpi/bbswitch|output=<pre>
0000:01:00.0 ON
</pre>}}

This shows that the NVIDIA GPU is now on, its module loaded, and OpenGL is using it as expected. Once you end the {{c|optirun}} or {{c|primusrun}} command and exit {{c|glxgears}}, the previous checks run again should show the GPU off and the module unloaded.

{{Note| If your card did '''''not''''' turn off when {{c|glxgears}} exited, try the following:
{{RootCmd|rmmod nvidia && echo "OFF" >> /proc/acpi/bbswitch}}
}}

==== Using glxinfo ====

Alternatively, {{C|glxinfo}} can be used to see if bumblebee is working:

{{RootCmd|glxinfo {{!}} grep OpenGL|output=<pre>
OpenGL vendor string: Intel Open Source Technology Center
OpenGL renderer string: Intel Mesa DRI (R) Skylake Halo GT2
OpenGL core profile version string: 3.3 (Core Profile) Mesa 11.0.6
OpenGL core profile shading language version string: 3.30
OpenGL core profile context flags: (none)
OpenGL core profile profile mask: core profile
OpenGL core profile extensions:
OpenGL version string: 3.0 Mesa 11.0.6
OpenGL shading language version string: 1.30
</pre>}}

{{RootCmd|primusrun glxinfo {{!}} grep OpenGL|output=<pre>
OpenGL vendor string: NVIDIA Corporation
OpenGL renderer string: GeForce GTX 960M / PCIe / SSE2
OpenGL core profile version string: 4.4.0 NVIDIA 361.28
OpenGL core profile shading language version string: 4.40 NVIDIA via Cg compiler
OpenGL core profile context flags: (none)
OpenGL core profile profile mask: core profile
OpenGL core profile extensions:
OpenGL version string: 4.5.0 NVIDIA 361.28
OpenGL shading language version string: 4.50 NVIDIA
</pre>}}

As you can see, running the command without {{c|primusrun}} runs with the iGPU but with {{c|primusrun}} runs with the NVIDIA GPU.

== Building with KMS and UVM ==

Users who want to use CUDA or offloading with their NVIDIA GPU will want to use KMS and UVM. To do this, first follow the guide above to install without KMS and UVM. This provides a good starting point because if it doesn't work with that setup, it will not work with this one.

First, stop the Bumblebee daemon:

{{RootCmd|killall bumblebeed}}

Then unmount the {{c|bbswitch}} module and remount {{c|nvidia}} module:

{{RootCmd|modprobe -r bbswitch|modprobe nvidia}}

Next, change your use flags to include <code>kms</code> and <code>uvm</code>:

{{FileBox|filename=/etc/portage/package.use|1=
x11-drivers/nvidia-drivers kms uvm
}}

and update your {{c|@world}} set:

{{Emerge
|@world
|params+=--update --deep --newuse
}}

Next, enable the {{c|seden}} overlay with {{c|eselect repository}} or {{c|layman}}:

{{RootCmd
|eselect repository enable seden
|emerge --sync seden
}}

or

{{RootCmd|layman -a seden}}

and install the patched version of bumblebee (which is capable of removing all of the NVIDIA drivers):

{{Emerge|x11-misc/bumblebee::seden}}

Edit the {{Path|nvida-rmmod.conf}} to unload the relevant drivers in the right order:

{{FileBox|filename=/etc/modprobe.d/nvidia-rmmod.conf|1=
remove nvidia modprobe -r --ignore-remove nvidia-drm nvidia-modeset nvidia-uvm nvidia-drm nvidia
}}

Change your kernel module parameter in your {{Path|bumblebee.conf}} file to {{c|nvidia-uvm}}

{{FileBox|filename=/etc/bumblebee/bumblebee.conf|1=
[driver-nvidia]
...
KernelDriver=nvidia-uvm
...
}}

Now reboot your system.

== Using Bumblebee with Steam games ==

In order to run a [[Steam]] game with {{c|optirun}} or {{c|primusrun}}, you need to
* right click on the game within steam
* select "properties"
* "Set Launch Options"
* add either <code>optirun %command%</code> or <code>primusrun %command%</code> to the text field.

== Using the Bumblebee overlay ==

Some users cannot get this configuration to work and it is suggested to use the Bumblebee Overlay to emerge Bumblebee and Primus.

{{Note|The last commit on the Bumblebee overlay GitHub was in 2016, while the last update of x11-misc/bumblebee was in 2018.}}

{{Note|Alternatively, some users recommend the [https://gitweb.gentoo.org/user/seden.git/ Seden Overlay], see Yamakuzure's post on [https://forums.gentoo.org/viewtopic-t-1036754.html this thread]. This has support for <code>kms</code> and <code>uvm</code>.}}

First add the bumblebee overlay via [[Eselect/Repository|eselect repository]] or layman:

{{RootCmd
|eselect repository enable bumblebee
|emerge --sync bumblebee
}}

or

{{RootCmd|layman -a bumblebee}}

Then unmask Bumblebee and Primus:

{{RootCmd|echo "{{=}} x11-misc / bumblebee-9999 ~ amd64" >> /etc/portage/package.accept_keywords/bumblebee|echo "{{=}} x11-misc / primus-9999 ~ amd64" >> /etc/portage/package.accept_keywords/bumblebee 
}}

And mask the official Portage tree:

{{RootCmd|echo "x11-misc / bumblebee :: gentoo" >> /etc/portage/package.mask/bumblebee.gentoo}}

Then emerge Primus:

{{Emerge|x11-misc/primus}}

== Configuring Xorg ==

Some systems require Xorg to be configured to use the Intel drivers. Do this according to the [[Intel|Gentoo Intel Wiki Page]].

== Troubleshooting ==

=== bbswitch refuses to turn off card ===

Try adding:

{{RootCmd|"acpi_osi{{=}}!Windows\x202013" acpi_osi{{=}}Linux nogpumanager i915.enable_hd_vgaarb{{=}}1 enable_hd_vgaarb{{=}}1}}

to your kernel command-line (this has worked for a couple of users, especially those with Thinkpads and Lenovo laptops).

=== Manual unloading ===

If the NVIDIA drivers are built with <code>kms</code> and/or <code>uvm</code> and a patched version of bumblebee then the bumblebee module will not be able to unload the <code>nvidia</code> module as it will be in use by the <code>nvidia-modeset</code> module which is itself in use by the <code>nvidia-drm</code> module. However, the modules cat be unloaded manually (using {{c|modprobe -r}}) and the relevant changes to {{Path|/etc/modprobe.d/rmmod-nvidia.conf}}. The GPU can then be turned off using {{c|tee /proc/acpi/bbswitch<<<OFFF}}. Some users have these two commands in a script accessible through a key command in their WM.

=== System freezes when starting Xorg server ===

On some systems, it may be necessary to start Xorg with the <code>nvidia</code> module loaded and the discrete GPU turned on or else the system will hang. The module can then be unloaded and the GPU switched off.
In order to manually load the module, add <code>nvidia</code> to your modules configuration file:

{{FileBox|filename=/etc/modules-load.d/video.conf|1=
nvidia
}}

The <code>nvidia</code> module must not be blacklisted.

=== Bumblebee daemon doesn't start on boot ===

First check that bumblebee is configured in OpenRC:
Now enable Bumblebee to load at runlevel <code>default</code>

{{RootCmd|rc-update add bumblebee default}}

If you still get errors indicating that the Bumblebee Daemon is not running when you attempt {{c|optirun}} and {{c|primusrun}} commands, it may be necessary to start the daemon manually on log-in. Put <code>exec bumblebee --daemon</code> into a suitable configuration file so that it will be automatically run when you start your X server. This might be in your {{Path|.xinitrc}} or window manager (such as i3) config file depending on your setup.

=== GPU doesn't automatically turn off for the first time ===

Some users may experience their bumblebee setup working in every respect except for that the GPU remains on until the first time a {{c|primusrun}} or {{c|optirun}} command is run. A workaround for this is to add <code>primusrun glxinfo</code> to your {{Path|.xinitrc}} or other initializing config file (like your i3 config file).

=== System hangs on any PCI call when the GPU is off ===

Some users may find that their setup works well but will experience random kernel crashes characterized by a complete system hang with no errors in any log files generated. If this is the case, it may be necessary to trick the acpi kernel module into thinking that the system is an earlier version of Windows by editing your grub configuration:

{{FileBox|filename=/etc/default/grub|1=
GRUB_CMDLINE_LINUX_DEFAULT='acpi_rev_override=5 acpi_osi="Windows 2009"'
}}

{{Important|Your grub config file may use double ({{c|"}}) or single ({{c|'}}) quotes. Either will work, but ensure that the other is used for the <code>Windows 2009</code> string else you will terminate the kernel command line prematurely.}}

The parameters <code>modprobe.blacklist=nvidia</code>, <code>nvidia.modeset=0</code>, and <code>pcie_port_pm=off</code> may also be necessary.

Then regenerate your grub config file:

{{RootCmd|grub-mkconfig -o /boot/grub/grub.cfg}}

=== Blacklisting the NVIDIA modules ===

On some systems it may be necessary to blacklist the <code>nvidia</code> modules. Edit your blacklist file as necessary:

{{FileBox|filename=/etc/modprobe.d/blacklist.conf|1=
blacklist nvidia
blacklist nvidia-modeset
blacklist nvidia-drm
blacklist nvidia-uvm
}}

=== Could not load GPU driver ===

If you tested with {{c|glxgears}} to see if Bumblebee is working and got the following output:

{{Cmd|glxinfo {{!}} grep OpenGL|output=<pre>
primus: fatal: Bumblebee daemon reported: error: Could not load GPU driver
</pre>}}

Restarting the GUI by using {{c|killall X && startx}} should fix the issue.

=== Cannot access secondary GPU ===

If you run the {{c|optirun}} or {{c|primusrun}} and see the error <code>[ERROR] Cannot access secondary GPU - error: [XORG] (EE) /dev/dri/card0: failed to set DRM interface version 1.4: Permission denied</code>, include the following piece of configuration in the Bumblebee's {{Path|xorg.conf.nvidia}}.

{{FileBox|filename=/etc/bumblebee/xorg.conf.nvidia|lang=xorg.conf|1=
Section "Screen"
    Identifier "Default Screen"
    Device "DiscreteNvidia"
EndSection
}}

You may need to restart the bumblebee service for this change to take effect

=== libGL error: failed to load driver: swrast ===

If you get the following error when you run {{c|optirun}}:

{{RootCmd|optirun glxinfo |output=<pre>
libGL error: No matching fbConfigs or visuals found
libGL error: failed to load driver: swrast
X Error of failed request:  GLXBadContext
  Major opcode of failed request:  150 (GLX)
  Minor opcode of failed request:  6 (X_GLXIsDirect)
  Serial number of failed request:  49
  Current serial number in output stream:  48
</pre>}}

The issue could be that Bumblebee cant find the NVIDIA libraries. Changing the <code>LibraryPath</code> in {{Path|/etc/bumblebee.conf}} can fix the issue.

{{FileBox|filename=/etc/bumblebee/bumblebee.conf|1=
[driver-nvidia]
...
LibraryPath=/usr/lib64/opengl/nvidia/lib/
...
}}

== Specific use cases ==

The following Wiki Pages make reference to Bumblebee and/or Bumblebee configurations:

* [[Lenovo ThinkPad T440s]]
* [[Clevo P650HS-G]]
* [[Dell XPS 15z]]
* [[Toshiba Satellite P70-A]]
* [[Dell XPS 15 9560]]

== See also ==

* {{See also|NVIDIA}}
* {{See also|NVIDIA/nvidia-drivers}}
* {{See also|NVIDIA/Optimus}}

== External resources ==

* [https://web.archive.org/web/20180226135955/https://www.dotslashlinux.com/post/setting-up-bumblebee-on-gentoo-linux/ DotSlashLinux's Guide (On the way back machine as link was dead)]
* [https://forums.gentoo.org/viewtopic-t-1044954.html Fedeliallalinea's Guide on the Gentoo Forum (Italian)]
* [https://wiki.archlinux.org/index.php/bumblebee Arch Wiki article on Bumblebee]
* [https://github.com/Bumblebee-Project/bbswitch The bbswitch Github]
* [https://github.com/primus/primus The Primus Github]

[[Category:Graphics Adapters]]
[[Category:Binary kernel modules]]
[[Category:NVIDIA]]
