<languages />

{{Metadata|abstract=Данная статья описывает шаги, необходимые для перехода на новое ядро.}}

Эта статья описывает шаги необходимые для обновления [[kernel/ru|ядра]].

== Установка ==

Обновление ядра может потребоваться когда после обновления системы установлены новые исходные тексты ядра, или в случае если Вы сами их установили.

== Конфигурация ==

Конфигурация повторяет шаги описанные в [[Kernel/Configuration/ru|конфигурации ядра вручную]], так как используется заново только конфигурационный файл. Все шаги упоминаются здесь снова для полноты, для более подробного описания смотри другую статью.

=== Установка символьной ссылки ===

Символьная ссылка {{Path|/usr/src/linux}} всегда должна указывать на исходные коды используемого в настоящий момент ядра. Это может быть сделано одним из трех способов:

;1. Установка исходных кодов ядра с активным [[USE flag|USE-флагом]] "symlink"
:Это заставит {{Path|/usr/src/linux}} указывать на исходный код заново устанавливаемого ядра. Если необходимо, символьная ссылка может быть изменена позже двумя следующими методами:

;2. Настройка символьной ссылки с помощью '''eselect''':

: {{RootCmd| eselect kernel list |
  |output=Available kernel symlink targets:<br /> &nbsp; [1] linux-3.14.14-gentoo *<br /> &nbsp; [2]   linux-3.16.3-gentoo}}

:Эта команда выводит доступные исходные коды ядра. Звездочкой отмечены выбранные исходные коды. Для того чтобы изменить исходные коды ядра, например выбрать второй пункт, сделайте следующее:

: {{RootCmd|eselect kernel set 2}}

;3. Установка символьной ссылки вручную:

: {{RootCmd|ln -sf /usr/src/linux-3.16.3 /usr/src/linux |
  |ls -l /usr/src/linux |
  |output=lrwxrwxrwx 1 root root 19 Oct  4 10:21 /usr/src/linux -> linux-3.16.3-gentoo}}

=== Очистка исходных кодов ===

If you are experiencing build problems while rebuilding the current kernel, it might help to sanitize the kernel sources. Make sure you backup the {{Path|.config}} file first, as the operation will remove it. Make sure not to use a <code>.bak</code> or <code>~</code> suffix as backup as <code>make distclean</code> will clean those up as well.

{{RootCmd|cp .config /usr/src/kernel_config_bk
|make distclean
|mv /usr/src/kernel_config_bk .config}}

=== Копирование предыдущей конфигурации ядра ===
Конфигурацию работающего в данный момент ядра необходимо скопировать в новую. Ее можно найти в нескольких местах:

* В файловой системе [[procfs]], если параметр ядра ''Enable access to .config through /proc/config.gz'' был включен в ядре работающем в данный момент.

: {{RootCmd|zcat /proc/config.gz > /usr/src/linux/.config}}

* В каталоге {{Path|/boot}}, если Вы установили файл конфигурации туда:

: {{RootCmd|cp /boot/config-3.14.14-gentoo /usr/src/linux/.config}}

* В каталоге ядра, которое работает в данный момент:

: {{RootCmd|cp /usr/src/linux-3.14.14-gentoo/.config /usr/src/linux/}}

=== make oldconfig ===
Теперь обновите предыдущий файл конфигурации для нового ядра:

{{RootCmd|cd /usr/src/linux
|make silentoldconfig}}

Следующая настройка повторяет конфигурацию с помощью текста в '''make config'''. Для каждого различия между версиями ядра, спрашивается хотите ли Вы включить драйвер или параметр. Например:

{{RootCmd|make oldconfig
|output=Anticipatory I/O scheduler (IOSCHED_AS) [Y/n/m/?] (NEW)
}}

Метка ''(NEW)'' в конце строки отмечает параметр как новый. Слева метки в квадратных скобках даны возможные ответы: ''Y''es, ''n''o, ''m''odule или ''?'' для того чтобы вызвать помощь. Рекомендуемый ответ выделен заглавными буквами (в данном случае ''Y''). Помощь описывает параметр или драйвер.

К сожалению, '''make oldconfig''' не показывает - рядом с помощью - гораздо большее количество информации для каждого параметра. В этом случае лучшим способом будет запомнить название параметра и рассмотреть его позже с помощью одного из [[Kernel/Configuration/ru#.D0.98.D0.BD.D1.81.D1.82.D1.80.D1.83.D0.BC.D0.B5.D0.BD.D1.82.D1.8B_.D0.BA.D0.BE.D0.BD.D1.84.D0.B8.D0.B3.D1.83.D1.80.D0.B0.D1.86.D0.B8.D0.B8|графических инструментов конфигурации ядра]].

== Переустановка внешних модулей ядра ==

Все внешние модули ядра, такие как [[:Category:Binary kernel modules|binary kernel modules]], необходимо перекомпилировать для каждого нового ядра. Если ядро еще не собрано, оно должно сперва быть подготовлено для компиляции его внешних модулей:

{{RootCmd|make modules_prepare}}

Вы можете собрать пакеты заново, используя набор ''@module-rebuild''

{{Emerge|@module-rebuild}}

== Компиляция ==

На этом шаге следуйте инструкциям статьи [[Kernel/Configuration/ru#.D0.9A.D0.BE.D0.BC.D0.BF.D0.B8.D0.BB.D1.8F.D1.86.D0.B8.D1.8F|ручная конфигурация]].

== Удаление старых ядер ==

Смотри статью [[Kernel/Removal/ru|удаление ядра]]. 

== Внешние источники ==

* [http://kernelnewbies.org/LinuxChanges kernel changelog with some explanations of new features]

[[Category:Kernel]]
