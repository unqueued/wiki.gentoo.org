<languages />
{{InfoBox stack
|{{InfoBox project|Overlays|header=true}}
}}

An ebuild repository, historically known as ''overlay'', is [[Article description::a structure of directories and files used to add and extend packages available to the system's package manager.]] Ebuild repositories are also used by Gentoo developers as training ground and staging area for new ebuilds. Ebuild repositories can contain ebuilds of one or more [[EAPI]]s.

Systems that have Gentoo installed typically have a single ebuild repository available on the system. This main repository, known as the [https://gitweb.gentoo.org/repo/gentoo.git/tree/ Gentoo ebuild repository], contains [[ebuild]]s maintained by official Gentoo developers and members of the community (through the [[Project:Proxy Maintainers|Proxy Maintainers]] project). System administrators can add additional ebuild repositories to the system using various utilities and methods described below.

== 저장소 ==

Ebuild repositories are nothing more (or less) than a [[Repository format|set of files]] (ebuilds, metadata files, ...). These can be pulled in from public repositories ([[Project:Portage/Sync#Portage_configuration|git, CVS, SVN ...]]) or downloaded as tarballs and extracted manually onto the system. It is advised to use managed repositories by [https://repos.gentoo.org trusted] third parties; any installed ebuild repository will cause Portage to look through the overlaid files when deciding which software to install. If compromised code is in the ebuild repository, then compromised packages could be installed on the system.

현재는 포티지 관련 여러 위치 저장소를 {{Path|[[:/etc/portage/repos.conf]]}} 파일에서 처리하는 접근 방식이 기본이며, 언급한 경로는 디렉터리가 될 수도 있습니다.

{{Path|/etc/portage/repos.conf/}}의 저장소 정의를 통해 저장소를 업데이트할 수 있을지 어떻게 업데이트할 수 있을지 포티지에 알려주기도 합니다. {{c|emerge --sync}}를 호출하면 저장소도 마찬가지로 자동으로 업데이트합니다.

오래됐지만 여전히 지원하는 방식은 {{Path|/etc/portage/make.conf}}에서 <var>PORTDIR_OVERLAY</var> 변수를 사용하는 방법입니다. 이 변수는 저장소(정보)가 있는 파일 시스템에 있는 하나 이상의 추가 위치를 가리킬 수 있습니다. {{Path|[[:/etc/portage/repos.conf]]}} 디렉터리 사용을 가장 선호합니다.

더 많은 정보는 [[:/etc/portage/repos.conf|/etc/portage/repos.conf]]와 [[Project:Portage/Sync#Operation|Portage/Sync 게시글]]을 참고하십시오.

=== 우선순위 ===

각각의 ebuild 저장소에는 유일의 우선순위가 있습니다. 여러 ebuild 저장소에 특정 버전을 발견했을 경우 확인하며, 해결 방법은 혼란스럽지 않습니다. 높은 우선순위 번호 값(예: 60)을 지닌 ebuild 저장소의 이빌드는 낮은 우선순위(예: 50)를 가진 ebuild 저장소의 이빌드보다 우선합니다.

우선순위가 붙은 ebuild 저장소 목록은 (''Repositories'' 문자열로 찾아서) 다음 출력 목록으로 볼 수 있습니다:

{{Cmd|emerge --info --verbose}}

{{Cmd|portageq repos_config /}}

기본 젠투 포티지 트리는 -1000 우선순위를 갖습니다. 이는 다른 ebuild 저장소에 보통 할당하는 우선순위보다 훨씬 높은 우선순위를 배당한다는 의미입니다. ebuild 저장소를 포티지 트리 "위에 얹어놓은" 방식으로 설계했기 때문에 이런 동작은 기본입니다.

== 가용 프로그램 ==

ebuild 저장소를 지원하거나 오버레이에 붙는 도구는 여러가지가 있습니다.

=== Layman ===

{{c|layman}} 프로그램은 여러 추가 ebuild 저장소를 쉽게 관리하고 업데이트할 수 있게 합니다. 공개 ebuild 저장소를 조회하고, 가입하거나, 탈퇴하며, 이들 저장소를 업데이트할 수 있는 명령줄 프로그램입니다. 

{{Path|[[Layman#make.conf_method_.28force_old_method.29|make.conf]]}} 방식과 {{Path|[[Layman#repos.conf_method_.28default.29|repos.conf]]}} 방식을 모두 지원합니다.
* {{Path|[[Layman#make.conf_method_.28force_old_method.29|make.conf]]}} 방식을 활용할 때는, {{c|layman}} 에서 {{Path|make.conf}}에 위치 지정한 설정 파일을 관리합니다.
* {{Path|[[Layman#repos.conf_method_.28default.29|repos.conf]]}} 방식을 활용할 때는, {{c|layman}} 에서 {{Path|[[Layman#repos.conf_method_.28default.29|/etc/portage/repos.conf/layman.conf]]}} 파일을 직접 관리합니다

더 많은 정보는 [[Layman]]<sup style="color: #ff0077">en</sup>과 [[Project:Portage/Sync#Layman_configuration|Layman 설정]]<sup style="color: #ff0077">en</sup>을 참고하십시오

=== emaint ===

[[Project:Portage/Sync#Operation|동기화(포티지 프로젝트)]]<sup style="color:#ff0077">en</sup>게시글과 {{c|man 1 emaint}}를 참고하십시오.

=== eix ===

{{c|eix-sync}}는 {{c|eix-update}}를 연달아 실행할 {{c|emerge --sync}}를 시작({{c|emaint sync --auto}} 시작)하는 래퍼입니다. 더 자세한 내용은 [[Eix]] 글과 {{c|man 1 eix}}를 참고하십시오.

== 사용법 ==

=== 중복 꾸러미 이머징 ===

ebuild 저장소를 다룰 때 제각기 다른 ebuild 저장소에서 여러 버전의 동일한 꾸러미가 있을 수 있습니다. <code>::</code> 표기법을 활용하여 특정 ebuild 저장소의 특정 꾸러미를 설치하도록 [[Portage]]에 지시하십시오:

{{Emerge|category/atom::ebuild repository-name}}

The same notation can be used for different emerge instructions, including uninstalling a package through <code>--depclean</code>.

== 모범 사례 ==

=== 캐시 만들기 ===

큰 ebuild 저장소를 설치하면, 포티지에서 의존성 확인과 같은 작업을 처리하는데 오랜 시간이 걸릴 수 있습니다. 보통 ebuild 저장소에서 메타데이터 캐시를 보유하고 있지 않기 때문입니다.

ebuild 저장소를 동기화 한 후 {{c|emerge --regen}} 을 실행하여 로컬 메타데이터 캐시를 만들어야합니다:

{{RootCmd
|layman -S
|( ulimit -n 4096 && emerge --regen )}}

{{c|emerge --regen}} 작업은 오랜 시간이 걸리니 주의하십시오. rsync 사용자(대부분의 포티지 사용자)라면 서버측 캐시를 활용하여 rsync 업데이트를 수행하므로 추천하지 않습니다. rsync 사용자는 간단하게 {{c|emerge --sync}} 명령(또는 {{c|eix-sync}})을 실행하여 캐시를 다시 만들면 됩니다. 대규모 ebuild 저장소 사용자에 한해서만 {{c|emerge --regen}} 을 시도하시면 되겠습니다.

=== Masking installed but unsafe ebuild repositories ===

알 수 없는 저질의 대규모 ebuild 저장소를 활용한다면 전체 ebuild 저장소에 영구 마스크를 지정하는 것이 좋은 방법입니다.

{{FileBox|filename=/etc/portage/package.mask|title=ebuild 저장소의 모든 꾸러미에 마스크 설정|lang=bash|1=
*/*::ebuild repository-name
}}

그 다음 설치할 꾸러미의 마스크를 해제하십시오.

{{FileBox|filename=/etc/portage/package.unmask|title=ebuild 저장소의 별도 꾸러미 마스크 해제|lang=bash|1=
foo/bar::ebuild repository-name
}}

== 추가 참조 ==

* [[Project:Overlays|Overlays project]] - The official Gentoo project for ebuild repositories' support.
* [[Project:Overlays/Overlays guide|Overlays guide (Overlay project)]] - A user guide written by the Overlay project.
* [[Project:Overlays/Old Dev Guide|Developer's guide to Gentoo overlays]] - This document is kept only for historical purposes. The current guide is maintained as [[Project:Overlays/Overlays guide]].
* [[Handbook:Parts/Portage/CustomTree#Defining_a_custom_repository|Defining a custom repository]] - Section in the Gentoo Handbook

== 외부 자료 ==

* https://repos.gentoo.org
* https://github.com/gentoo/
* https://gpo.zugaina.org/Overlays


[[Category:Portage]]
