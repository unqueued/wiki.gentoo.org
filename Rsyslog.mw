{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://www.rsyslog.com|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox gdoc|security/security-handbook.xml?part{{=}}1&chap{{=}}3#doc_chap2}}
}}
From Wikipedia, the free encyclopedia:

''Rsyslog is an open source software used on UNIX and Unix-like computer systems for forwarding log messages in an IP network. It implements the basic syslog protocol, extends it with content-based filtering, rich filtering capabilities, flexible configuration options and adds important features such as using TCP for transport.''

== Installation ==
{{Note|It is a bad idea to run several system loggers on one physical host. You should remove or at least disable other local loggers.}}

Install {{Package|app-admin/rsyslog}}:
{{USEflag|package=app-admin/rsyslog
|dbi
|debug
|doc
|extras
|kerberos
|mysql
|oracle
|postgres
|relp
|snmp
|static-libs
|zeromq
|ssl+yes
|zlib+yes
}}

{{Emerge|rsyslog}}

Add rsyslog to default startup level
{{RootCmd|rc-update add rsyslog default}}

After emerge has finished, rsyslog should work out of the box with the shipped default configuration, at least for local logging.
Start rsyslog
{{RootCmd|/etc/init.d/rsyslog start}}

Check file {{Path|/var/log/messages}} for syslog entries:
{{RootCmd|tail -f /var/log/messages|output=<pre>
2011-07-24T00:31:06.268926+02:00 server kernel: imklog 5.8.1, log source = /proc/kmsg started.
2011-07-24T00:31:06.269053+02:00 server rsyslogd: [origin software="rsyslogd" swVersion="5.8.1" x-pid="19116" x-info="http://www.rsyslog.com"] start
</pre>}}

== Configuration ==
Basic rsyslog configuration:
{{File|/etc/rsyslog.conf||<pre>
# Support for Local System Logging
$ModLoad imuxsock.so
$IncludeConfig /etc/rsyslog.d/*
*.info;mail.none;authpriv.none;cron.none                -/var/log/messages
authpriv.*                                              /var/log/secure
mail.*                                                  -/var/log/maillog
cron.*                                                  -/var/log/cron
*.emerg                                                 *
uucp,news.crit                                          -/var/log/spooler
local7.*                                                /var/log/boot.log
</pre>
}}
Typically messages are logged to files, the file has to be specified with full pathname.
Rsyslog uses a simple syntax to filter incoming messages.
Syslog messages are classified by facility and severity.
According to [http://www.ietf.org/rfc/rfc5424.txt RFC5424] following severity groups have been defined:

=== Severity ===
{|class="wikitable sortable"
|+ Severity
|-
!Numerical Code
!Severity
!Description
|- 
| 0 || style="background: Magenta"| emerg || system is unusable
|-
| 1 ||style="background: Maroon"| alert || action must be taken immediately
|-
| 2 || style="background: red"| crit || critical conditions
|-
| 3 || style="background: orange"| error || error conditions
|-
| 4 || style="background: yellow"| warning || warning conditions
|-
| 5 || style="background: limegreen"| notice || normal but significant condition
|-
| 6 || style="background: LightSkyBlue "| info || informational messages
|-
| 7 || style="background: White"| debug || debug-level messages
|}

=== Facility ===
List of facilities used by rsyslog. Most facilities names are self explanatory.
Facilities local0 - local7 common usage is f.e. as network logs facilities for nodes and network equipment.
Generally it depends on the situation how to classify logs and put them to facilities. See facilities more as a tool rather than a directive to follow.

You can adjust facilities to your own needs.
{|class="wikitable sortable"
|+ Facility
|-
!Numerical Code
!Facility
!Description
|- 
| 0  || kern || kernel messages
|-
| 1  || user || user-level messages
|-
| 2  || mail || mail system
|-
| 3  || daemon || system daemons
|-
| 4  || auth || security/authorization messages
|-
| 5  || syslog || messages generated internally by syslogd
|-
| 6  || lpr || line printer subsystem
|-
| 7  || news || network news subsystem
|-
| 8  || uucp || UUCP subsystem
|-
| 9  || cron || clock daemon
|-
| 10 || security || security/authorization messages
|-
| 11 || ftp || FTP daemon
|-
| 12 || ntp || NTP subsystem
|-
| 13 || logaudit || log audit
|-
| 14 || logalert || log alert
|-
| 15 || clock || clock daemon (note 2)
|-
| 16 || local0 || local use 0  (local0)
|-
| 17 || local1 || local use 1  (local1)
|-
| 18 || local2 || local use 2  (local2)
|-
| 19 || local3 || local use 3  (local3)
|-
| 20 || local4 || local use 4  (local4)
|-
| 21 || local5 || local use 5  (local5)
|-
| 22 || local6 || local use 6  (local6)
|-
| 23 || local7 || local use 7  (local7)
|-
|}

=== Filtering ===
List of filtering examples
* Redirect all incoming messages from all facilities and with all severeties to {{Path|/var/log/syslog}}
''*.* -/var/log/syslog''
* Filter out messages with severity critical and save to file {{Path|/var/log/critical}}
''*.crit -/var/log/critical''
* Do NOT redirect facilities mail, authentication and cron and mail to {{Path|/var/log/messages}}, look for the keyword '''none'''
''mail.none;authpriv.none;cron.none -/var/log/messages''

=== Local Logging ===
Enable local logging from all facilities, to see local events at all.
''$ModLoad imuxsock.so''

=== Remote Logging ===
To use remote logging to a syslog server you need to specify a client to log to a specific server or servers. And a server to receive messages sent by clients. Before configuring you have to chose the protocol. Syslog messages can be sent with UDP or with TCP. UDP is the default protocol and supported on most platforms. Not all platforms support TCP for syslog.

==== Client ====
To enable syslog UDP messages sending add following line to your {{Path|/etc/rsyslog.conf}} file.
In this example rsyslog sends all facilities and all priorities ''*.*'' using protocol UDP ''@'' to remote server ''192.168.20.254''

''*.*       @192.168.20.254''

To enable TCP support for syslog messages, put following line to the rsyslog configuraton file, TCP is enabled by adding ''@@''.

''*.*       @@192.168.20.254''

You can use also a hostname instead of a IP address.
{{Important|Substitute '''192.168.20.254''' with the IP address of your own rsyslog server}}
Below a example syslog client configuration to send syslog messages to a remote server via TCP.
{{File|/etc/rsyslog.conf||<pre>
$ModLoad imuxsock.so
*.*   @@192.168.20.254:10514
*.info;mail.none;authpriv.none;cron.none      /var/log/messages
authpriv.*                                    /var/log/secure
mail.*                                        /var/log/maillog
cron.*                                        /var/log/cron
*.emerg                                       *
uucp,news.crit                                /var/log/spooler
local7.*                                      /var/log/boot.log
</pre>
}}

==== Server ====
To Provide UDP log reception and run the server on port 514.
Running syslog with UDP is the default configuration.

''$ModLoad imudp''
''$UDPServerRun 514''

UDP is not a reliable protocol, you could run the server with TCP logging support.

''$ModLoad imtcp''
''$InputTCPServerRun 10514''

A simple configuration would look like this one:
{{File|/etc/rsyslog.conf||<pre>
$ModLoad imuxsock.so
$ModLoad imtcp.so
$InputTCPServerRun 10514
$ModLoad imudp.so
$UDPServerRun 514
*.info;mail.none;authpriv.none;cron.none      /var/log/messages
authpriv.*                                    /var/log/secure
mail.*                                        /var/log/maillog
cron.*                                        /var/log/cron
*.emerg                                       *
uucp,news.crit                                /var/log/spooler
local7.*                                      /var/log/boot.log
</pre>
}}

=== Database Logging ===
Rsyslog supports logging to following databases:

* [[MariaDB]]
* [[MySQL]]
* [[PostgreSQL]]
* Oracle

After choosing the database logs will be stored to a proper USE flag needs to be enabled and rsyslog has to be rebuild before continuing. This example uses a MySQL database.
{{Note|Next steps assume a working MySQL database server running on localhost, for installation details follow the [[MySQL]] article.}}

The package ships a SQL script named createDB.sql to create the database layout.
{{File|/usr/share/doc/rsyslog-5.8.1/scripts/mysql/createDB.sql||<pre>
CREATE DATABASE Syslog;
USE Syslog;
CREATE TABLE SystemEvents
(
        ID int unsigned not null auto_increment primary key,
        CustomerID bigint,
        ReceivedAt datetime NULL,
        DeviceReportedTime datetime NULL,
        Facility smallint NULL,
        Priority smallint NULL,
        FromHost varchar(60) NULL,
        Message text,
        NTSeverity int NULL,
        Importance int NULL,
        EventSource varchar(60),
        EventUser varchar(60) NULL,
        EventCategory int NULL,
        EventID int NULL,
        EventBinaryData text NULL,
        MaxAvailable int NULL,
        CurrUsage int NULL,
        MinUsage int NULL,
        MaxUsage int NULL,
        InfoUnitID int NULL ,
        SysLogTag varchar(60),
        EventLogType varchar(60),
        GenericFileName VarChar(60),
        SystemID int NULL
);
CREATE TABLE SystemEventsProperties
(
        ID int unsigned not null auto_increment primary key,
        SystemEventID int NULL ,
        ParamName varchar(255) NULL ,
        ParamValue text NULL
);
</pre>}}

Import the {{Path|/usr/share/doc/rsyslog-5.8.1/scripts/mysql/createDB.sql}} file to create the "Syslog" database.
{{Cmd|mysql -u root -p <  /usr/share/doc/rsyslog-5.8.1/scripts/mysql/createDB.sql}}
Create a datebase user for the Syslog database:
<pre>mysql> grant ALL ON Syslog.* to rsyslog-user@localhost identified by - 'MySecretPassword'; flush privileges;</pre>

To provide SQL database logging support, enable the needed module in {{Path|/etc/rsyslog.conf}}

''$ModLoad ommysql.so''

Tell rsyslog to forward all data to the database, add following to the end of the {{Path|/etc/rsyslog.conf}} file:

''*.* :ommysql:localhost,Syslog,rsyslog-user,MySecretPassword''

Finally Restart the rsyslog server to adapt new settings
{{RootCmd|/etc/init.d/rsyslog restart}}

== Templates ==
If your network equipment logs into a central rsyslog server you will notice many vendors format its syslog messages differently. So it will be difficult after some time to for you filter the syslog server messages for a certain 
* Date
* Facility
* Severity
* Host
* Syslogtag
* ProcessID
* MessageType
* Message
as they arrive at your own syslog server.

To unify syslog messages to a certain or preferred format, Rsyslog uses templates which parse arriving messages and "rewrites" them to the desired format.

To maintain a simple and modular configuration, templates are stored within the {{Path|/etc/rsyslog.d/}} directory.
To include files stored within the rsyslog.d directory add following line to {{Path|/etc/rsyslog.conf}} file:

''$IncludeConfig /etc/rsyslog.d/*.conf''

Templates should be stored to the {{Path|/etc/rsyslog.d/}} directory.

{{RootCmd|cd /etc/rsyslog.d/}}

{{Important|Following templates are working very good, but are not perfect.}}

Here a simple template for a cisco IOS host which logs to rsyslogd:
{{File|/etc/rsyslog.d/template_cisco.conf||<pre>
$template mysql_cisco, "insert into SystemEvents (Message, Facility, FromHost, Priority, DeviceReportedTime, ReceivedAt, InfoUnitID, SysLogTag) values ('%msg:R,ERE,1,DFLT:%[A-Z0-9_-]+: (.*)--end%', %syslogfacility%, '%fromhost%', %syslog
priority%, '%timereported:::date-mysql%', '%timegenerated:::date-mysql%', %iut%, '%msg:R,ERE,0,DFLT:%[A-Z0-9_-]+:--end%')",SQL
</pre>}}

Here a simple template for a ScreenOS host which logs to rsyslogd: 
{{File|/etc/rsyslog.d/template_netscreen.conf||<pre>
$template mysql_netscreen, "insert into SystemEvents (Message, Facility, FromHost, Priority, DeviceReportedTime, ReceivedAt, InfoUnitID, SysLogTag) values ('%msg:R,ERE,1,DFLT:[a-zA-Z0-9-]+: (.*)--end%', %syslogfacility%, '%fromhost%', %s
yslogpriority%, '%timereported:::date-mysql%', '%timegenerated:::date-mysql%', %iut%, '%msg:R,ERE,0,DFLT:[a-zA-Z0-9-]+:--end%')",SQL
</pre>}}

Here a simple template for Linux host which logs to rsyslogd:
{{File|/etc/rsyslog.d/template_linux.conf||<pre>
$template mysql_linux,"insert into SystemEvents (Message, Facility, FromHost, Priority, DeviceReportedTime, ReceivedAt, InfoUnitID, SysLogTag, ProcessID) values ('%msg%', %syslogfacility%, '%HOSTNAME%',%syslogpriority%, '%timereported:::
date-mysql%', '%timegenerated:::date-mysql%', %iut%, '%syslogtag:R,ERE,1,FIELD:(.+)(\[[0-9]{1,5}\]).*--end%', '%syslogtag:R,ERE,1,BLANK:\[([0-9]{1,5})\]--end%')",SQL
</pre>}}

Configure rsyslogd which predefined template to apply to which facility, add following template references to the end of the {{Path|/etc/rsyslog.conf}} file:
*All messages arriving at facility '''local4''', are Cisco IOS messages:
''local4.* :ommysql:localhost,Syslog,rsyslog-user,MySecretPassword;mysql_cisco''
*All messages arriving at facility '''local5''' , are ScreenOS messages:
''local5.* :ommysql:localhost,Syslog,rsyslog-user,MySecretPassword;mysql_netscreen''
*All messages arriving at syslog consider as Linux messages, and ignore '''local4''' and '''local5''' facilities which have their own templates.
''*.*;local4.none;local5.none :ommysql:localhost,Syslog,rsyslog-user,MySecretPassword;mysql_linux''

Example how the {{Path|/etc/rsyslog.conf}} file could look on your own syslog '''server''' with working templates:
{{File|/etc/rsyslog.conf||<pre>
$ModLoad imudp
$UDPServerRun 514
$ModLoad ommysql.so
$IncludeConfig /etc/rsyslog.d/*.conf

*.info;mail.none;authpriv.none;cron.none	-/var/log/messages
authpriv.*					/var/log/secure
mail.*						-/var/log/maillog
cron.*						-/var/log/cron
*.emerg						*
uucp,news.crit					-/var/log/spooler
local7.*					/var/log/boot.log

local4.* :ommysql:localhost,Syslog,rsyslog-user,MySecretPassword;mysql_cisco
local5.* :ommysql:localhost,Syslog,rsyslog-user,MySecretPassword;mysql_netscreen
*.*;local4.none;local5.none :ommysql:localhost,Syslog,rsyslog-user,MySecretPassword;mysql_linux
</pre>}}

Reload rsyslog server to apply new changes.
{{RootCmd|/etc/init.d/rsyslog reload}}

Further examples can be found [http://www.rsyslog.com/doc/rsyslog_conf_templates.html here].

== Troubleshooting ==
Check if a syslog process is running 
{{RootCmd|ps ux {{!}} grep rsyslog|output=<pre>
root     9161  0.0  0.0 1323652  3424 ?        Sl   00:51   0:00 /usr/sbin/rsyslogd -c5 -i /var/run/rsyslogd.pid -f /etc/rsyslog.conf
</pre>}}

Verify network configuration 
{{RootCmd|netstat -tulpen {{!}} grep rsyslog||output=<pre>
udp        0      0 0.0.0.0:514             0.0.0.0:*                           0          33472286   9161/rsyslogd
udp6       0      0 :::514                  :::*                                0          33472287   9161/rsyslogd
</pre>}}

Verify with the command logger, if messages are arriving in at the syslogserver
{{Cmd|logger -t test my syslog-test-message}}
Following message should appear in the {{Path|/var/log/messages}} file if rsyslog is working properly:
{{RootCmd|tail /var/log/messages|output=<pre>
...
2011-11-23T00:47:05+01:00 Rsyslogserver test: my syslog-test-message
</pre>}}

== External resources ==
* [http://www.rsyslog.com/doc/rsyslog_conf_templates.html Rsyslog Templates HOWTO]
* [http://freecode.com/projects/rsyslog Rsyslog page on Freecode]
* [http://wiki.rsyslog.com/index.php/Configuration_Samples Rsyslog configuration samples]
* [http://www.ietf.org/rfc/rfc5424.txt RFC 5424]

[[Category:Server]]
[[Category:Software]]
[[Category:Daemons]]
