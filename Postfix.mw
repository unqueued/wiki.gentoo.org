Over the years, Postfix has become the new de facto standard amongst ''Mail Transfer Agents'' (MTA). It has beaten qmail which in turn had taken down sendmail from the throne. This document describes how to setup and test a basic Postfix server.

== Pre-installation ==
As only one MTA can be installed at the same time on a system, you might be required to unmerge all other installed MTAs like {{Package|mail-mta/ssmtp}}, {{Package|mail-mta/exim}}, {{Package|mail-mta/sendmail}}, or any of the <tt>qmail</tt> packages.
The package manager will report a block when another MTA is still installed. You can resolve this block by manually unmerging the old mail server. For example you can remove <tt>ssmtp</tt> (which might have been installed as the default when a program requested a mail server to be installed) with this command:
{{RootCmd|emerge -C ssmtp}}

== Installation ==
Postfix has several USE flags that may be desired for certain bigger setups. As this article aims at installing and configuring a ''basic'' Postfix setup, none of them will be required initially.

{{USEflag|package=mail-mta/postfix
|hardened++yes
|ipv6++yes
|ldap
|ldap-bind
|pam
|postgres++yes
|sasl++yes
|sqlite
|ssl++yes
|vda++yes
|cdb
|doc
|dovecot-sasl
|mbox
|mysql
|nis
}}

{{Emerge|mail-mta/postfix}}

== Configuration ==
=== Fully Qualified Domain Name (FQDN) ===
Though not entirely related, for a MTA to function properly, it is imperative that its hostname is set up correctly. Under Gentoo '''/etc/conf.d/hostname''' and '''/etc/conf.d/net''' are the files responsible for this. In this example, the mail server is named <tt>foo</tt> on the domain <tt>example.com</tt>.

{{File|/etc/conf.d/net|Setup domain name|<pre>dns_domain_lo="example.com"</pre>}}
{{File|/etc/conf.d/hostname|Setup hostname|<pre>HOSTNAME="foo"</pre>}}

{{Note|Do not use <tt>mail.example.com</tt> just because it may be externally known as such. Use the actual name of the system.}}

Verifying that the FQDN is setup properly for the domain.
{{Cmd|hostname --fqdn|output=foo.example.com}}

If for any reason the FQDN cannot be set properly, Postfix needs to be told what its FQDN is. Otherwise leave it at its commented out default.
{{File|/etc/postfix/main.cf|Inform Postfix of its FQDN|<pre>
# INTERNET HOST AND DOMAIN NAMES
#
myhostname = foo.example.com
#
mydomain = example.com
</pre>}}

=== Trust and Relay ===
This one is a really important thing to get right. By default, a Postfix installation is pretty tight, only allowing users on the same subnet as the mail server to relay email through Postfix. If this gets messed around with, it can potentially open the door to all users from anywhere. This is called an ''open relay'' and is begging for abuse by spam merchants, likely resulting in your domain to be quickly blacklisted. This defeats the purpose of setting up a personal mail server, if nobody will talk or listen to it.

There are means and ways, like SMTP Authentication, that allow you to secure access to your mail server even further. Depending on the trustworthiness of the users connected to the local network, it might be beneficiary to restrict access even for machines within the own subnet. This also has the benefit of not letting potentially compromised machines in the local network abuse the mail system, but entails additional configuration.
To only allow the mail server itself to relay email without authentication, make a change to <tt>main.cf</tt>
{{File|/etc/postfix/main.cf|Trust no-one|<pre>
# TRUST AND RELAY CONTROL
mynetworks_style = host
</pre>}}
{{Note|Internal servers of course don't have to to use this server to relay, they can still use <tt>ssmtp</tt> to send monitoring information if needed.}}

=== Address extensions ===
Address extensions allow you to encode additional information besides the recipient in a valid email address. The recipient is separated from the additional information usually by a <tt>+</tt> character, but it is configurable. To enable support for address extensions, edit your <tt>main.cf</tt>:

{{File|/etc/postfix/main.cf|Set a delimiter to enable address extensions|<pre>
# ADDRESS EXTENSIONS (e.g., user+foo)
recipient_delimiter = +
</pre>}}

The way this works is, when trying to deliver a message to <tt>testuser+spam@example.com</tt>, Postfix will try to deliver the message to <tt>testuser+spam</tt> first, if no such user is found, it will be delivered to <tt>testuser</tt>, the part of the email address before the delimiter. This feature can be quite useful for sites that require email address registration. Signing up with <tt>testuser+somesite@example.com</tt> allows to easily filter and trace where a message originated from. If for example some unsolicited mail was delivered to that address, it likely comes from ''somesite''. Even better filtering of unsolicited email can be achieved by using Spamassassin or AMaViS.

=== Miscellaneous configuration ===
==== maildir ====
When Postfix completes merging and the <tt>mailbox</tt> USE flag is set, a <tt>home_mailbox</tt>  directive is added at the bottom of the file. To make future updates easier, it's a good idea to move the <tt>home_mailbox = .maildir/</tt> to its appropriate location in the file.

For testing purposes, the following two features can be temporarily enabled:

==== Soft bounce ====
Soft bounce decreases the chances of endless bounce loops caused by an invalid email setup. To enable soft bouncing, add this to your <tt>main.cf</tt>:
{{File|/etc/postfix/main.cf|Soft Bounce|<pre>soft_bounce = yes</pre>}}

==== Verbose SMTP ====
Before testing the basic mail server setup, the verbose flag of the smtp server should be enabled by adding a <tt>-v</tt> to the smtp daemon invocation in <tt>master.cf</tt>:
{{File|/etc/postfix/master.cf|Verbose smtpd|<pre>
# ==========================================================================
# service type  private unpriv  chroot  wakeup  maxproc command + args
#               (yes)   (yes)   (yes)   (never) (100)
# ==========================================================================
smtp      inet  n       -       n       -       -       smtpd -v
</pre>}}

That rounds up basic configuration. Postfix offers a vast amount of other features, including virtual domains and users, that exceed the current scope of this article.

== Starting Postfix ==
Before starting Postfix for the first time, the local alias database has to be compiled. If this is not done, Postfix may appear to have started normally, but won't work and the log (usually found in <tt>/var/log/mail.log</tt>) will be spammed with errors:
<pre>Mar 16 11:40:32 foo postfix/smtpd[18923]: fatal: open database /etc/mail/aliases.db: No such file or directory</pre>

The <tt>alias</tt> database contains default local accounts required by various RFCs and common internet practice, as well as some pseudo accounts. Simply run the <tt>newaliases</tt> command to generate the database:
{{RootCmd|newaliases}}

Now it is time to start postfix for the very first time.
{{RootCmd|/etc/init.d/postfix start}}

It can be very useful to monitor the mail log file using <tt>tail -f</tt>. A successful start looks like this:
<pre>
Nov 23 15:26:42 foo postfix/postfix-script[13433]: starting the Postfix mail system
Nov 23 15:26:42 foo postfix/master[13434]: daemon started -- version 2.8.4, configuration /etc/postfix
</pre>

== Testing Postfix ==
Now that Postfix is running properly, it should accept  connections on port 25, the default SMTP port, and send email anywhere in the world.
As SMTP is a simple plain-text protocol, you can easily send email manually using a <tt>telnet</tt> client. Replace the example address <tt>&lt;(username)@(validdomain).(tld)&gt;</tt> with a real email address to see it work. This is an example SMTP conversation with the parts the client (in this case that is you) sends are {{Highlight|highlighted}} in blue color:

{{Cmd|telnet foo.example.com 25|output=Trying foo.example.com...<br />
Connected to foo.example.com.<br />
Escape character is '^]'.<br />
220 foo.example.com ESMTP Postfix<br />
{{Highlight|HELO localhost}}<br />
250 foo.example.com<br />
{{Highlight|MAIL FROM: <me@somewhere.com>}}<br />
250 2.1.0 Ok<br />
{{Highlight|RCPT TO: <(username)@(validdomain).(tld)>}}<br />
250 2.1.5 Ok<br />
{{Highlight|DATA}}<br />
354 End data with <CR><LF>.<CR><LF><br />
{{Highlight|Subject: Test email<br />
<br />
Testmail to ensure Postfix is working.<br />
.<br />}}
250 2.0.0 Ok: queued as 6705C20E32<br />
{{Highlight|QUIT}}<br />
221 2.0.0 Bye<br />
Connection closed by foreign host.}}

Looking at /var/log/mail.log it can be verified that the message got properly relayed:
<pre>
Nov 23 16:13:02 foo postfix/smtpd[28494]: connect from foo.example.com[127.0.0.1]
Nov 23 16:13:49 foo postfix/smtpd[28494]: 6705C20E32: client=foo.example.com[127.0.0.1]
Nov 23 16:13:51 foo postfix/cleanup[28508]: 6705C20E32: message-id=<20111123151349.6705C20E32@foo.example.com>
Nov 23 16:13:51 foo postfix/qmgr[28490]: 6705C20E32: from=<me@somewhere.com>, size=314, nrcpt=1 (queue active)
Nov 23 16:13:52 foo postfix/smtp[28510]: 6705C20E32: to=<(username)@(validdomain).(tld)>, relay=mail.(validdomain)(.tld)[5.6.7.8]:25, ‚èé
delay=19, delays=18/0.02/0.37/0.32, dsn=2.0.0, status=sent (250 2.0.0 Ok: queued as 469A684F8)
Nov 23 16:13:52 foo postfix/qmgr[28490]: 6705C20E32: removed
Nov 23 16:13:54 foo postfix/smtpd[28494]: disconnect from foo.example.com[127.0.0.1]
</pre>

Performing the same test from a different host should fail, as it is untrusted:
{{Cmd|telnet foo.example.com 25|output=Trying foo.example.com...<br />
Connected to foo.example.com.<br />
Escape character is '^]'.<br />
220 foo.example.com ESMTP Postfix<br />
{{Highlight|HELO localhost}}<br />
250 foo.example.com<br />
{{Highlight|MAIL FROM: <me@somewhere.com>}}<br />
250 2.1.0 Ok<br />
{{Highlight|RCPT TO: <(username)@(validdomain).(tld)>}}<br />
454 4.7.1 <(username)@(validdomain).(tld)>: Relay access denied<br />
{{Highlight|QUIT}}<br />
221 2.0.0 Bye<br />
Connection closed by foreign host.}}

[[Category:Software]]
[[Category:Server]]
[[Category:Security]]
