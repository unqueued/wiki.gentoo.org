<languages />
{{InfoBox stack
|{{InfoBox homepage|http://www.php.net|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox ohloh}}
}}

'''PHP''' — это язык сценариев общего назначения, предназначенный для создания сценариев на стороне сервера с целью динамического создания веб-страниц.

== Установка ==

=== USE-флаги ===

Существует глобальный USE-флаг <code>php</code> для включения поддержки PHP в других пакетах. Включение этого USE-флага автоматически установит пакет {{Package|dev-lang/php}} после обновления глубоких зависимостей в наборе @world. Сначала установите глобальный USE-флаг в {{Path|/etc/portage/make.conf}}:

{{FileBox|filename=/etc/portage/make.conf|title=Объявление php в качестве глобального USE-флага|lang=bash|1=
USE="php"
}}

Наиболее важные USE-флаги пакета PHP, USE-флаги SAPI (Server API), это {{c|apache2}}, {{c|cgi}} и {{c|fpm}}. Помимо этих USE-флагов, существует множество других USE-флагов, предназначенных для включения различных возможностей интерпретатора PHP:

{{USEflag|package=dev-lang/php}}

По умолчанию ebuild устанавливает development версию {{Path|php.ini}}. Для того, чтобы установить production версию, у которой более строгие настройки безопасности, но с помощью которой может быть сложнее отлаживать приложения, добавьте следующее в файл {{Path|make.conf}}:

{{FileBox|filename=/etc/portage/make.conf|title=Установка production версии файла php.ini|lang=bash|1=
PHP_INI_VERSION="production"
}}

Обе версии {{Path|php.ini}} можно найти в {{Path|/usr/share/doc/php-*}}.

После изменения предпочтительной версии {{Path|php.ini}} следует переустановить PHP с помощью команды, приведенной ниже, в [[#Emerge|разделе Emerge]].

=== Расширения ===

Чтобы установить расширения, прежде всего определите, для каких версий PHP их следует скомпилировать. Это реализуется посредством установки переменной <var>PHP_TARGETS</var>:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PHP_TARGETS="php5-6"
}}

Можно указать более одной версии; просто добавьте дополнительные версии, разделенные пробелами. Обратите внимание, что слот php называется "5.6", а соответствующее значение <var>PHP_TARGETS</var> — <code>php5-6</code>. Причина этого — в текущих ограничениях имен USE.

=== Emerge ===

После настройки USE-флагов, как показано выше, необходимо обновить систему, чтобы изменения вступили в силу:

{{Emerge|params+=--update --changed-use --deep|@world}}

== Запуск нескольких версий PHP ==

Одно из больших преимуществ использования Gentoo для разработки PHP — слотирование версий. Переключаться между несколькими версиями PHP очень просто, также как одновременно запускать несколько версий. Все это осуществляется с помощью команды {{c|eselect}}, предоставляемой пакетом {{Package|app-eselect/eselect-php}}, который должен автоматически устанавливаться при установке PHP. Например, выбор нескольких версий PHP позволяет системе использовать PHP 7.0 для cli SAPI и PHP 5.6 для веб-сервера. Это также позволяет быстро протестировать приложение на разных версиях PHP.

Чтобы вывести доступные версии для '''cli''' SAPI, используйте команду:

{{RootCmd|eselect php list cli|output=<pre>
 [1]   php5.5 
 [2]   php5.6 *   
 [3]   php7.0
</pre>}}

Версия, отмеченная символом <code>*</code>, является текущей активной версией. Чтобы посмотреть другие SAPI, замените <code>cli</code> на <code>fpm</code>, <code>cgi</code> или <code>apache2</code>.

Чтобы переключить версию:

{{RootCmd|eselect php set cli 3}}

Номер <code>3</code> в этом примере соответствует номеру из вывода суб-команды <code>list</code>, приведенной выше. PHP версии 7.0 теперь используется для командной строки:

{{RootCmd|php -v|output=<pre>
PHP 7.0.10-pl0-gentoo (cli) (built: Aug 23 2016 12:38:44) ( NTS )
</pre>}}

== Конфигурация ==

Конфигурация PHP находится в каталоге {{Path|/etc/php}}, который содержит один подкаталог для каждого SAPI и для каждой версии PHP. Например, конфигурационные файлы для PHP-5.6 apache2 SAPI устанавливаются в {{Path|/etc/php/apache2-php5.6}}.

=== Веб-серверы ===

Чтобы использовать PHP на стороне сервера, веб-сервер должен быть установлен и настроен для использования PHP. Далее кратко рассматривается несколько популярных веб-серверов.

==== Nginx ====

Просто скомпилируйте [[Nginx/ru|nginx]], чтобы установить его:

{{Emerge|www-servers/nginx}}

{{Important|Если пользовательские установки <var>NGINX_MODULES_HTTP</var> установлены в {{Path|make.conf}}, убедитесь, что модуль <code>fastcgi</code> включен.}}

После установки Nginx измените раздел server в {{Path|/etc/nginx/nginx.conf}} примерно таким образом: 

{{FileBox|filename=/etc/nginx/nginx.conf|title=Часть конфигурации nginx, в которой настраивается работа PHP через FastCGI|1=
        server {
                listen 127.0.0.1;
                server_name localhost;
 
                access_log /var/log/nginx/localhost.access_log main;
                error_log /var/log/nginx/localhost.error_log info;
 
                root /var/www/localhost/htdocs;
 
                location ~ .php$ {
                        fastcgi_pass 127.0.0.1:9000;
                        include fastcgi.conf;
                }
        }
}}

Теперь запустите соответствующие сервисы, чтобы получить рабочий сайт. Сценарий инициализации {{Path|php-fpm}} запускает PHP FastCGI Process Manager. FastCGI позволяет веб-серверам передавать вычисления PHP этому менеджеру процессов.

{{RootCmd
|service nginx start
|service php-fpm start
}}

==== lighttpd ====

{{Warning|Не включайте USE-флаг <code>php</code> для {{Package|www-servers/lighttpd}}. Это может сломать сборку.}}

Убедитесь в том, что lighttpd собран с поддержкой <code>fastcgi</code> и USE-флаг <code>php</code> выключен:

{{FileBox|filename=/etc/portage/package.use|1=
www-servers/lighttpd fastcgi -php
}}

Lighttpd устанавливает конфигурационный файл FastCGI по умолчанию, но, к сожалению, он работает только со старым PHP FCGI SAPI, а не с общей установкой FCGI. Поскольку USE-флаг <code>php</code> был выключен, этот файл не будет установлен. Тем не менее, он является хорошей основой для конфигурационного файла, который можно использовать с FPM. 

Отредактируйте {{Path|/etc/lighttpd/mod_fastcgi.conf}}: 

{{FileBox|filename=/etc/lighttpd/mod_fastcgi.conf|title=Включение FastCGI в lighttpd|lang=lua|1=
server.modules += ("mod_fastcgi")
fastcgi.server = ( ".php" =>
  ( "localhost" =>
    (
      "host" => "127.0.0.1",
      "port" => "9000"
    )
  )
)
}}

Обратите внимание на строки <code>host</code> и <code>port</code>. 

Поскольку в Gentoo входит рабочий файл {{Path|php-fpm.ini}}, находящийся в {{Path|/etc/php/fpm-php5/php-fpm.ini}}, и сценарий инициализации, все, что требуется, это запустить сервисы: 

{{RootCmd
|/etc/init.d/php-fpm start
|/etc/init.d/lighttpd start
}}

==== Apache (mod_php) ====

Чтобы Apache загружал модуль PHP5 (mod_php), добавьте <code>-D PHP</code> в переменную <var>APACHE2_OPTS</var> в {{Path|/etc/conf.d/apache2}}. Возможно, пользователи помнят, что раньше было необходимо также добавлять версию PHP (например, <code>-D PHP5</code>). Однако начиная с {{Package|app-eselect/eselect-php}} версии 0.8.1 переменная была изменена на <code>-D PHP</code>, чтобы упростить интеграцию будущих крупных версий.

{{FileBox|filename=/etc/conf.d/apache2|title=Настройка Apache для загрузки mod_php|lang=bash|1=
## (settings for PHP5 and above)
APACHE2_OPTS="-D PHP"
}}

Убедитесь в том, что PHP собран с USE-флагом <code>apache2</code>.

Если по какой-либо причине в системе отсутствует файл интеграции модуля PHP {{Path|/etc/apache2/modules.d/70_mod_php.conf}}, в настоящее время предоставляемый пакетом {{Package|app-eselect/eselect-php}}, если он установлен с USE-флагом <code>apache2</code>, добавьте его вручную. Ниже показано его текущее содержимое.

{{FileBox|filename=/etc/apache2/modules.d/70_mod_php.conf|lang=apache|1=
<IfDefine PHP>
	# The mod_php.so symlink is controlled by
	# eselect-php. However, the module name changed from
	# php5_module to php7_module so we can't blindly load whatever
	# is there. Instead we let eselect-php manage a small
	# configuration file that loads the appropriate module.
	#
	# This is relative to ServerRoot (see httpd.conf).
	Include ../../../var/lib/eselect-php/mod_php.conf
 
	# Tell apache that mod_php should handle PHP files.
	#
	# NOTE: Avoiding AddHandler/AddType for security (bug
	# #538822). Please read the related news item!
	<FilesMatch "\.(php{{!}}php[57]{{!}}phtml)$">
		SetHandler application/x-httpd-php
	</FilesMatch>
 
	# PHP source files which are meant to be displayed as
	# syntax-highlighted source code.
	<FilesMatch "\.phps$">
		SetHandler application/x-httpd-php-source
	</FilesMatch>
 
	DirectoryIndex index.php index.phtml
</IfDefine>}}

Хотя в системе может быть установлено несколько версий PHP, Apache может использовать только одну версию PHP. Команда {{c|eselect php}} используется для переключения активных версий PHP.

== Смотрите также ==

* [[PHP/Upgrading_to_PHP_5.6|Upgrading to PHP 5.6]], руководство по обновлению старых установок до версии 5.6
* [[Apache/ru#Включение поддержки PHP|Включение поддержки PHP]] в статье Apache

[[Category:Programming language]]
