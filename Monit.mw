<languages />

<translate>

{{InfoBox stack
|{{InfoBox homepage|http://mmonit.com/monit/|header=true}}
|{{InfoBox wikipedia|Monit}}
|{{InfoBox ohloh}}
}}

{{Package|app-admin/monit}} is a utility for managing and monitoring processes, programs, files, directories and filesystems on a UNIX system. 

== Configuration ==

=== Installing monit ===

The {{Package|app-admin/monit}} application has two USE flags: 

{{USEflag
|package=app-admin/monit
|pam++yes
|ssl++yes
}}

Once the USE flags are properly determined, install {{Package|app-admin/monit}} through <kbd>emerge</kbd>:

{{Emerge|app-admin/monit}}

=== Monit configuration files ===

The Monit application uses {{Path|/etc/monitrc}} as its configuration file.

To make adding and removing monitoring definitions easy, <tt>monit</tt> supports including files inside a specified directory (usually {{Path|/etc/monit.d}}. To enable this, edit {{Path|/etc/monitrc}} like so:

{{FileBox|filename=/etc/monitrc|Allowing flexible configuration entries|1=
## It is possible to include additional configuration parts from other files or
## directories.
include /etc/monit.d/*
}}

When a Monit related configuration file is altered, tell <tt>monit</tt> to reread its configuration settings:

{{RootCmd|monit reload}}

=== Automatically starting monit at boot ===

It is recommended to start <tt>monit</tt> through the {{Path|/etc/inittab}} so that <tt>init</tt> itself launches the <tt>monit</tt> application, and will automatically relaunch it when <tt>monit</tt> would suddenly die. Starting <tt>monit</tt> through an init script would not provide this functionality.

{{FileBox|filename=/etc/inittab|title=Auto restart monit in case of failure|1=
# Run monit in standard runlevels
mo:2345:respawn:/usr/bin/monit -Ic /etc/monitrc
}}

After updating {{Path|/etc/inittab}}, <tt>monit</tt> can be immediately started through <kbd>telinit q</kbd>.

=== User management ===

Users added to the <tt>monit</tt> or <tt>users</tt> group will be able to manipulate <tt>monit</tt> through its web interface.

To add users to one of these groups, use <kbd>gpasswd</kbd>:

{{RootCmd|gpasswd -a $USER monit
|gpasswd -a $USER users}}

Inside the {{Path|/etc/monitrc}} file, the <code>allow</code> statement should refer to these groups, like so:

{{FileBox|filename=/etc/monitrc|Granting groups access to the web interface|1=
set httpd port 2812
  allow @monit
  allow @users
}}

It is also possible to hard-code usernames and passwords in the {{Path|monitrc}} file, but this is not recommended. Check the {{Path|monitrc}} file for default passwords and remove those, or alter them to use a strong, unique password. The syntax used then is <code>allow &lt;username&gt;:&lt;password&gt;</code>.

=== Monit web interface ===

The default location of the web interface is at [http://localhost:2812 localhost:2812], with <tt>admin</tt> as admin username and <tt>monit</tt> as default password. Make sure to change this!

== Monitoring applications through monit ==

The Monit application uses PID file checks to see if an application is still running or not. That implies that a PID file ''must'' be available for an application, otherwise <tt>monit</tt> cannot guard it. If a daemon does not create a PID file, use a [http://mmonit.com/wiki/Monit/FAQ#pidfile wrapper] to create one.

{{Note|The use of PID files (and validating PIDs from tools like <tt>ps</tt>) for monitoring is often said to be broken<ref>Greg Wooledge. [http://mywiki.wooledge.org/ProcessManagement Process management], Retrieved on January 1st, 2015</ref>. Monit does try to overcome this weakness by checking the PID file frequently enough to be reliable.}}

Through using the {{Path|/etc/monit.d/}} location, it is easy to add in additional monitoring rules.

For instance, to automatically restart [[MySQL]] when it would die:

{{FileBox|filename=/etc/monit.d/mysql|title=Auto restart mysql|1=
check process mysql with pidfile /var/run/mysqld/mysqld.pid
    start program = "/bin/bash -c 'rc-service mysql start'"
    stop program  = "/bin/bash -c 'rc-service mysql stop'"
}}

Another example is to manage the memory usage of a process and create an alert when it grows beyond a certain threshold:

{{FileBox|filename=/etc/monit.d/squid|title=Check squid and alert on memory consumption bigger than 512 MByte|1=
 check process squid with pidfile /run/squid.pid
   start program = "/bin/bash -c 'rc-service squid start'"
   stop  program = "/bin/bash -c 'rc-service squid stop'"
   if totalmem > 512 MB then alert
}}

== Debugging monit ==

=== Running monit in the foreground ===

To run <tt>monit</tt> in the foreground and provide feedback on everything it is detecting, use the <kbd>-Ivv</kbd> option:

{{RootCmd|monit -Ivv|output=<pre>
...
'squid' total mem amount of 525748kB matches resource limit [total mem amount>524288kB]
</pre>}}

== External resources ==

For more information about Monit, the following resources can help out.

* [http://mmonit.com/monit/documentation/monit.html Monit official documentation]
* [http://mmonit.com/wiki/Main/HomePage Monit Wiki]
* [https://wiki.amahi.org/index.php/Monit Configuring Monit for Avahi]

== References ==

{{reflist}}

</translate>

[[Category:Monitoring]]
