<languages />
{{Metadata|abstract=Monit is a utility for managing and monitoring processes, programs, files, directories and filesystems on a UNIX system.}}
<translate>
<!--T:1-->
{{InfoBox stack
|{{InfoBox homepage|http://mmonit.com/monit/|header=true}}
|{{InfoBox wikipedia|Monit}}
|{{InfoBox ohloh}}
}}

<!--T:2-->
{{Package|app-admin/monit}} is a utility for managing and monitoring processes, programs, files, directories and filesystems on a UNIX system. 

== Configuration == <!--T:3-->

=== Installing monit === <!--T:4-->

<!--T:5-->
The {{Package|app-admin/monit}} application has two USE flags: 

<!--T:6-->
{{USEflag
|package=app-admin/monit
|pam++yes
|ssl++yes
}}

<!--T:7-->
Once the USE flags are properly determined, install {{Package|app-admin/monit}} through <kbd>emerge</kbd>:

<!--T:8-->
{{Emerge|app-admin/monit}}

=== Monit configuration files === <!--T:9-->

<!--T:10-->
The Monit application uses {{Path|/etc/monitrc}} as its configuration file.

<!--T:11-->
To make adding and removing monitoring definitions easy, <tt>monit</tt> supports including files inside a specified directory (usually {{Path|/etc/monit.d}}. To enable this, edit {{Path|/etc/monitrc}} like so:

<!--T:12-->
{{FileBox|filename=/etc/monitrc|Allowing flexible configuration entries|1=
## It is possible to include additional configuration parts from other files or
## directories.
include /etc/monit.d/*
}}

<!--T:13-->
When a Monit related configuration file is altered, tell <tt>monit</tt> to reread its configuration settings:

<!--T:14-->
{{RootCmd|monit reload}}

=== Automatically starting monit at boot === <!--T:15-->

<!--T:16-->
It is recommended to start <tt>monit</tt> through the {{Path|/etc/inittab}} so that <tt>init</tt> itself launches the <tt>monit</tt> application, and will automatically relaunch it when <tt>monit</tt> would suddenly die. Starting <tt>monit</tt> through an init script would not provide this functionality.

<!--T:17-->
{{FileBox|filename=/etc/inittab|title=Auto restart monit in case of failure|1=
# Run monit in standard runlevels
mo:2345:respawn:/usr/bin/monit -Ic /etc/monitrc
}}

<!--T:18-->
After updating {{Path|/etc/inittab}}, <tt>monit</tt> can be immediately started through <kbd>telinit q</kbd>.

=== User management === <!--T:19-->

<!--T:20-->
Users added to the <tt>monit</tt> or <tt>users</tt> group will be able to manipulate <tt>monit</tt> through its web interface.

<!--T:21-->
To add users to one of these groups, use <kbd>gpasswd</kbd>:

<!--T:22-->
{{RootCmd|gpasswd -a $USER monit
|gpasswd -a $USER users}}

<!--T:23-->
Inside the {{Path|/etc/monitrc}} file, the <code>allow</code> statement should refer to these groups, like so:

<!--T:24-->
{{FileBox|filename=/etc/monitrc|Granting groups access to the web interface|1=
set httpd port 2812
  allow @monit
  allow @users
}}

<!--T:25-->
It is also possible to hard-code usernames and passwords in the {{Path|monitrc}} file, but this is not recommended. Check the {{Path|monitrc}} file for default passwords and remove those, or alter them to use a strong, unique password. The syntax used then is <code>allow &lt;username&gt;:&lt;password&gt;</code>.

=== Monit web interface === <!--T:26-->

<!--T:27-->
The default location of the web interface is at [http://localhost:2812 localhost:2812], with <tt>admin</tt> as admin username and <tt>monit</tt> as default password. Make sure to change this!

== Monitoring applications through monit == <!--T:28-->

<!--T:29-->
The Monit application uses PID file checks to see if an application is still running or not. That implies that a PID file ''must'' be available for an application, otherwise <tt>monit</tt> cannot guard it. If a daemon does not create a PID file, use a [http://mmonit.com/wiki/Monit/FAQ#pidfile wrapper] to create one.

<!--T:30-->
{{Note|The use of PID files (and validating PIDs from tools like <tt>ps</tt>) for monitoring is often said to be broken<ref>Greg Wooledge. [http://mywiki.wooledge.org/ProcessManagement Process management], Retrieved on January 1st, 2015</ref>. Monit does try to overcome this weakness by checking the PID file frequently enough to be reliable.}}

<!--T:31-->
Through using the {{Path|/etc/monit.d/}} location, it is easy to add in additional monitoring rules.

<!--T:32-->
For instance, to automatically restart [[MySQL]] when it would die:

<!--T:33-->
{{FileBox|filename=/etc/monit.d/mysql|title=Auto restart mysql|1=
check process mysql with pidfile /var/run/mysqld/mysqld.pid
    start program = "/bin/bash -c 'rc-service mysql start'"
    stop program  = "/bin/bash -c 'rc-service mysql stop'"
}}

<!--T:34-->
Another example is to manage the memory usage of a process and create an alert when it grows beyond a certain threshold:

<!--T:35-->
{{FileBox|filename=/etc/monit.d/squid|title=Check squid and alert on memory consumption bigger than 512 MByte|1=
 check process squid with pidfile /run/squid.pid
   start program = "/bin/bash -c 'rc-service squid start'"
   stop  program = "/bin/bash -c 'rc-service squid stop'"
   if totalmem > 512 MB then alert
}}

== Debugging monit == <!--T:36-->

=== Running monit in the foreground === <!--T:37-->

<!--T:38-->
To run <tt>monit</tt> in the foreground and provide feedback on everything it is detecting, use the <kbd>-Ivv</kbd> option:

<!--T:39-->
{{RootCmd|monit -Ivv|output=<pre>
...
'squid' total mem amount of 525748kB matches resource limit [total mem amount>524288kB]
</pre>}}

== External resources == <!--T:40-->

<!--T:41-->
For more information about Monit, the following resources can help out.

<!--T:42-->
* [http://mmonit.com/monit/documentation/monit.html Monit official documentation]
* [http://mmonit.com/wiki/Main/HomePage Monit Wiki]
* [https://wiki.amahi.org/index.php/Monit Configuring Monit for Avahi]

== References == <!--T:43-->

<!--T:44-->
{{reflist}}

</translate>

[[Category:Monitoring]]
