<languages/>

== 도입부 ==

오늘날 보안과 개인정보 처리는 점점 중요한 문제가 되기에, 서버 보안에 SSL을 활용하는건 쉬워 보입니다. Apache, Courier-imap, postfix 모두 SSL로 보안처리할 수 있습니다.

== SSL 설치 ==

SSL은 의존 대상이며 대부분 꾸러미에 대한 컴파일 옵션입니다. {{Package|dev-libs/openssl}} 꾸러미는 핵심 요소이며, <code>ssl</code> USE 플래그를 활용하면 끌어옵니다. 만약 활성화하고 업데이트 하기 전에 설정하지 않았다면 이 플래그를 모든 꾸러미에서 사용합니다:

{{Emerge|params=--newuse|@world}}

== SNI ==

단일 IP에서 다중 도메인을 활용할 때 몇가지 문제가 일어납니다. Apache는 단일 IP 상에서 여러 인증서를 보유할 수 있게 하는 [http://wiki.apache.org/httpd/NameBasedSSLVHostsWithSNI SNI] 를 활용하여 문제를 해결합니다. 하지만 브라우저와 서버 양측에서 이 기능을 지원해야합니다. IMAP(과 POP3) 와 SMTP 그 어느 수단에서도 실제로는 지원하지 않습니다. 단지 단일 IP상의 다중 호스트를 대상으로 인증서를 지원하는 방법은 모든 도메인을 대상으로 하는  인증서를 사용하는 방법입니다. 매력적이진 않지만 동작할 수 있습니다.

== SSL 인증서 취득 ==

현재 SSL 인증서를 가져오는 방법에는 두가지 이상의 약간의 방법이 있습니다. [[Wikipedia:DigiNotar#Issuance of fraudulent certificates|평판이 좋은]] 인증서 제공자에게 인증서를 구매하는건 선택지 중 하나입니다. 사용자 클라이언트에 경고를 띄우는 방식이긴 하지만 사용자 자체 서명 방식 인증서도 가능합니다. 나머지 절반의 선택지는 인증서를 구매하지 않을 경우 [http://cacert.org cacert.org]에서 발급한 인증서를 활용하는 추천 방식입니다. 메인 브라우저와 운영체제에 인증서를 넣는 방법은 쉽지 않지만, 자유로운데다 꽁짜입니다.

=== 자체 서명 ===

대부분 프로그램에서는 자체 서명 인증서를 미리 만들어두고 {{Path|/etc/ssl}}에 설치합니다. 새로 자체 서명한 인증서는 OpenSSL로 쉽게 만들 수 있습니다:

{{RootCmd|mkdir -p /etc/ssl/postfix/|cd /etc/ssl/postfix/|/etc/ssl/misc/CA.pl -newca|/etc/ssl/misc/CA.pl -newreq-nodes|/etc/ssl/misc/CA.pl -sign}}

이 과정에서 {{Path|/etc/ssl/postfix/newkey.pem}}, {{Path|/etc/ssl/postfix/newreq.pem}}, {{Path|/etc/ssl/postfix/newcert.pem}} 파일 세가지를 만들어야하며, 관련 CA 루트 인증서 {{Path|/etc/ssl/postfix/demoCA/cacert.pem}} 파일도 만들어야합니다. 파일 이름이 말이 되게 하려면 이름을 바꿔두는것이 좋겠습니다.

=== CACert.org 서명 ===

CACert.org에서는 SSL 인증서 생성을 돕는 간단한 스크립트를 제공합니다. [http://wiki.cacert.org/CSRGenerator csr] 스크립트를 다운로드하고 실행하면 됩니다. 이 예제에서 IMAP 메일 서버는 mail, pop, pop3, pop3s, imap, foo 등의 이름을 지닌 DNS 별칭을 보유합니다. 물론 용도에 따라 더 추가할 수 있습니다. foo를 추가한 이유는 imap 서비스를 제공하는 시스템의 이름이기 때문입니다 :P postfix, 웹 또는 다른 서버에 foo라는 이름이 붙으면 foo라는 이름을 붙이지 않습니다.

{{Cmd|sh csr|output=<pre>
Private Key and Certificate Signing Request Generator
This script was designed to suit the request format needed by
the CAcert Certificate Authority. www.CAcert.org
 
Short Hostname (ie. imap big_srv www2): foo
FQDN/CommonName (ie. www.example.com) : foo.example.com
Type SubjectAltNames for the certificate, one per line. Enter a blank line to finish
SubjectAltName: DNS:mail.example.com
SubjectAltName: DNS:smtp.example.com
SubjectAltName: DNS:smtps.example.com
SubjectAltName: DNS:imap.example.com
SubjectAltName: DNS:imaps.example.com
SubjectAltName: DNS:pop.example.com
SubjectAltName: DNS:pop3.example.com
SubjectAltName: DNS:pop3s.example.com
SubjectAltName: DNS:mail.example.net
SubjectAltName: DNS:imap.example.net
SubjectAltName: DNS:imaps.example.net
SubjectAltName: DNS:pop.example.net
SubjectAltName: DNS:pop3.example.net
SubjectAltName: DNS:pop3s.example.net
SubjectAltName: DNS:
Running OpenSSL...
Generating a 2048 bit RSA private key
.................+++
..................................+++
writing new private key to '/root/imap.example.com_privatekey.pem'
-----
Copy the following Certificate Request and paste into CAcert website to obtain a Certificate.
When you receive your certificate, you 'should' name it something like foo.example.com_server.pem
 
-----BEGIN CERTIFICATE REQUEST-----
MIIDHTsdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfsdfasdf
<snip>
asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfpyqT
-----END CERTIFICATE REQUEST-----
 
 
The Certificate request is also available in /root/foo_csr.pem
The Private Key is stored in /root/foo_privatekey.pem
</pre>}}

CACert.org 전용이 아닌 어떤 루트 인증 기관에서든 사용할 수 있는 ''인증서 서명 요청''을 만들었습니다. 허나, CACert.org에서는 ''Server Certificates''에서 ''New''라는 링크가 있는데, 여기로 들어가면 위에서 언급한 인증서 요청을 여는 편집 상자를 엽니다. <code>-----BEGIN CERTIFICATE REQUEST-----</code>부터  <code>-----END CERTIFICATE REQUEST-----</code>를 포함하는 부분까지 편집 창에 붙여넣어야하며 submit 단추를 눌러 제출해야합니다. 서버넌 요청을 검증하고 요청에 따른 인증서를 만듭니다. 다음 인증서를 복사하여 붙여넣어야 하는데, 인증서의 내용에는 <code>BEGIN</code> 과 <code>END</code> 마커도 새 {{Path|foo.example.com_crt.pem}} 파일에 포함해야합니다. 인증서 링크는 ca-cert.org 계정에 연결한 전자메일 주소로 보낼 수 있습니다.

{{RootCmd|cat > foo.example.com_crt.pem|output=<pre>
-----BEGIN CERTIFICATE-----
MIIGhzClkjhlkjhlkjhkljhkljhkljhkljhkljhkljhlkjhkljhkljhlkjhkljhk
<snip>
kljhlkjhkljhlkjhlkjhlkjhkljhkljhlkjhlkjhkljhk==
-----END CERTIFICATE-----
</pre>}}

여기서 {{Path|foo.example.com_&#91;privatekey, csr, crt&#93;.pem}} 파일 3개가 나옵니다. 앞으로 이 문서의 다음 절차를 따라 이름을 짓습니다.

{{Note|인증서를 요청하기 전에 [http://www.cacert.org/index.php CAcert 웹사이트]에서 계정을 만들어야합니다. 로그인을 하고 나면 인증서의 도메인 이름을 등록해야합니다. 등록이 끝나면 인증서 요청을 Server Certificates (New) 페이지에 붙여넣을 수 있습니다.}}

== Apache ==

[[Apache/ko|Apache]] 설정은 다른 곳에 충분히 설명했으며, 웹서버에서 SSL이 동작하도록 합니다. postfixadmin을 외부에서 사용한다면, 이상적으로 https를 통해서만 사용하도록 보호해야합니다. 일반적으로 Roundcube 또는 웹 메일을 SSL을 통해 보안처리를 하도록 설정할 수 있지만, 일반 HTTP로 열어둘 수도 있습니다.

하지만 Roundcube는 HTTPS로 모든 요청을 받을 수 있도록 강제로 설정할 수 있는 멋진 선택이 되겠습니다. 이는 사용자가 http://webmail.example.com을 연다면 https://webmail.example.com으로 요청 대상을 즉시 바꾸어 응답을 받는다는 의미입니다. 만약 적당한 SSL 인증서를 사용한다면 강력히 추천합니다. 자체 서명 인증서를 사용하거나 모든 사용자에게 설치한 루트가 없는 CA-cert.org 인증서를 활용한다면, 그 자체로 두어야합니다.

{{FileBox|filename=/var/www/webmail.example.com/htdocs/roundcube/config/main.inc.php|title=https 강제|lang=php|1=
$rcmail_config['force_https'] = true;
}}

== Courier-imap ==

차라리 SSL로 IMAP의 보안을 강화하는 편을 더욱 추천합니다. IMAP에서 보안 연결을 활용한다는건 곧 암호를 일반 텍스트로 보낸다고 했을 때 보안 IMAP망 연결을 통해 보안 처리를 하므로 어떤 보안 문제도 일어나지 않음을 의미합니다.

=== 자체 서명 인증서 만들기 ===

Courier-imap에는 SSL 자체 서명을 만드는 {{c|mkpop3dcert}} 와 {{c|mkimapdcert}} 두가지 간단한 스크립트가 있습니다. 이 스크립트는 각각 {{Path|/etc/courier-imap/pop3d.cnf}} 파일과 {{Path|/etc/courier-imap/imapd.cnf}} 파일을 해석합니다. 자체 서명 인증서를 처음 사용하는 개념일 것이며, 서명한 인증서와 바꿔치기하여 시험과정을 진행하기 더욱 쉽게 합니다. 자체 서명 인증서를 써야한다면 앞서 언급한 파일을 편집하시고, 그렇지 않으면 기본으로도 충분합니다.

{{RootCmd|mkpop3dcert|mkimapdcert}}

{{Warning| 현재, [https://bugs.gentoo.org/show_bug.cgi?id&#61;251047 &#35;251047] 젠투 버그에서 언급한 바와 같이, 설정 파일의 형식이 잘못되어 있어 오류가 나타납니다. 자세한 내용은 버그 보고서에서 확인하십시오.}}

{{Note|만들어놓은 인증서는 {{Path|/etc/courier-imap/pop3d.pem}} 과 {{Path|/etc/courier-imap/imapd.pem}}입니다. 자체 서명 인증서를 고집한다면, 이 파일을 가리키는 설정 파일 기본 경로를 아래에 언급한 바와 같이 확인해야합니다.}}

=== CACert.org  서명 인증서 만들기 ===

{{c|mkimapdcert}} 스크립트는 자체 서명 인증서를 만들며, 다른 프로그램에서 동작하고 특별한 형식을 갖췄기에, Courier-imap에서 실제로 파일 세개를 다루지 않으므로 하나의 파일로 합칩니다.

파일은 개인키로 시작합니다.

{{Note|{{Path|/etc/ssl}}에 courier-imap 디렉터리가 없다면, 직접 만들어야합니다.
{{RootCmd|mkdir -p /etc/ssl/courier-imap/}}
}}

{{RootCmd|cat foo.example.com_privatekey.pem > /etc/ssl/courier-imap/foo.example.com.pem}}

그 다음 서명 인증서를 따릅니다:

{{RootCmd|cat foo.example.com_crt.pem >> /etc/ssl/courier-imap/foo.example.com.pem}}

마지막으로 Diffie-Hellman 매개변수를 추가했습니다:

{{RootCmd|openssl gendh 1024 >> /etc/ssl/courier-imap/foo.example.com.pem}}

결과는 다음과 같아야합니다:

{{FileBox|filename=/etc/ssl/courier-imap/foo.example.com.pem|title=imap 인증서|1=
-----BEGIN PRIVATE KEY-----
MIIEvaasdfasdfSfasdfadfasdfasdfasdfasdfasdfasdfasdfasdsahdahhgfh
<snip>
asdfasdfasdfsdfsdf
-----BEGIN CERTIFICATE REQUEST-----
MIIDHTsdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfsdfasdf
<snip>
asdfasdfasdfasdfaswYEdpa+rdFfs=
-----END PRIVATE KEY-----
-----END CERTIFICATE REQUEST-----
-----BEGIN CERTIFICATE-----
MIIGhzClkjhlkjhlkjhkljhkljhkljhkljhkljhkljhlkjhkljhkljhlkjhkljhk
<snip>
kljhlkjhkljhlkjhlkjhlkjhkljhkljhlkjhlkjhkljhk==
-----END CERTIFICATE-----
-----BEGIN DH PARAMETERS-----
MIGHAoGBAPF7fJnfw+VPPev9FAkf2XJNFimn4ik+zkXXuHD5t9Oke1Yx224WTocq
KJ+Zv9onecK0MPYRUj8PPqqy+Q00pScW9+qPSr9T2sEG/meKjLqqA3XQf4Gwzqco
SUG0PEjiYNNfe966p9E1vp6yN5+gSyu6zv9Vn+cfYY2q7d3a4x9rAgEC
-----END DH PARAMETERS-----
}}

=== SSL 설정 ===

As noted above, the certificate entails both pop3 as imap hostnames and it is thus assumed pop3 and imap are running on the same IP/host. This is not required however, pop3 could be very well a different machine with the same (not advised) or its own certificate.

==== POP3 ====

{{FileBox|filename=/etc/courier-imap/pop3d-ssl|title=인증서 설정|1=
##NAME: POP3DSSLSTART:0
POP3DSSLSTART=YES
 
##NAME: TLS_CERTFILE:0
TLS_CERTFILE=/etc/ssl/courier-imap/foo.example.com.pem
}}

서버를 시작할 때 SSL에서 pop3를 동작하게 해야합니다:

{{RootCmd|/etc/init.d/courier-pop3-ssl restart}}

==== IMAP ====

{{FileBox|filename=/etc/courier-imap/imapd-ssl|title=인증서 설정|1=
##NAME: IMAPDSSLSTART:0
IMAPDSSLSTART=YES
 
##NAME: TLS_CERTFILE:0
TLS_CERTFILE=/etc/ssl/courier-imap/foo.example.com.pem
}}

서버를 시작할 때 IMAP이 SSL에서 동작하도록 해야합니다:

{{RootCmd|/etc/init.d/courier-imapd-ssl restart}}

=== SSL 시험 ===

Testing becomes more difficult, as telnet can not be used anymore. The best option is to start up a mail-client such as thunderbird, configure a normal connection first to verify everything works, which should as telnet worked properly before and then enable the SSL option for the account and see if it is still working. The default imap-ssl port is 993. <code>STARTTLS</code> can be checked whether it is enabled only, via telnet, by checking for the STARTTLS Capability.

{{Note|Some email clients are not complete in the TLS implementation, to help these clients out you can change the value of <code>TLS_STARTTLS_PROTOCOL</code> in {{Path|/etc/courier-imap/imapd-ssl}} from TLS1 to SSL3.}}

기대하던대로 SSL 보안 서비스가 동작한다면 기본 런레벨에 추가할 수 있습니다:

{{RootCmd|rc-update add courier-pop3d-ssl default|rc-update add courier-imapd-ssl default}}

{{Note | 이전에 언급한바와 같이 정말 필요한 경우에만 pop3를 추가하십시오.}}

== SSL로 SMTP 보안 처리 ==

The certificates for use with postfix should be stored in {{Path|/etc/ssl/postfix/}} or if using the same certificates as with courier-imap they should be stored in {{Path|/etc/ssl/postfix/}}. If using CACert.org, then its root certificate needs to be used. Gentoo pre-installs the CACert.org root certificate and should be used.

{{FileBox|filename=/etc/postfix/main.cf|title=SMTP 인증서 설정|1=
# SSL Authentication
smtpd_tls_security_level = may
smtpd_tls_auth_only = no
smtpd_tls_loglevel = 3
smtpd_tls_key_file = /etc/ssl/postfix/foo.example.com_privatekey.pem
smtpd_tls_cert_file = /etc/ssl/postfix/foo.example.com_crt.pem
smtpd_tls_CAfile = /etc/ssl/certs/cacert.org_root.pem
smtpd_tls_received_header = yes
smtpd_tls_session_cache_timeout = 3600s
tls_random_source = dev:/dev/urandom
}}

{{Note|For debugging purposes <code>smtpd_tls_loglevel</code> has been increased to ''3''. Also <code>smtpd_tls_auth_only &#35; no</code> means users (and webmail) can still log in insecurely. Putting this option to yes forces all clients to use only authenticated connections.}}

{{Note|The CaCert file is renamed in {{Path|/etc/ssl/certs/cacert.org_root.pem}}, it used to be named as {{Path|/etc/ssl/certs/cacert.org.pem}}.}}

이제 STARTTLS는 포트 25번을 통해 인증 연결을 활용할 수 있습니다. 하지만, ''465''(smtp'''s''')번 포트의 '''SSL/TLS'''지원도 마찬가지로 활성화해야 합니다. Courier-imap은 자동으로 처리합니다만 postfix는 {{Path|master.cf}} 내용을 바꾸어야합니다:

{{FileBox|filename=/etc/postfix/master.cf|title=smtps 지원 활성화|1=
smtps     inet  n       -       n       -       -       smtpd
  -o smtpd_tls_wrappermode=yes
}}

SSL로 보안 처리한 데몬을 시작하려면 postfix를 다시 시작하십시오:

{{RootCmd|/etc/init.d/postfix restart}}

== 시험 ==

텔넷은 간단한 시험 용도만으로 활용할 수 있습니다. 실제로는 지원 옵션을 확인하는 용도로만 사용할 수 있습니다. ''STARTTLS''는 지원 옵션중 하나로 떠야합니다.

{{Cmd|telnet foo.example.com 25|output=<pre>
220 foo.example.com ESMTP Postfix
EHLO example.com
250-mail.example.com
250-PIPELINING
250-SIZE 10240000
250-VRFY
250-ETRN
250-STARTTLS
250-AUTH LOGIN PLAIN
250-ENHANCEDSTATUSCODES
250-8BITMIME
250 DSN
quit
221 2.0.0 Bye
Connection closed by foreign host.
</pre>}}

To test if all connections work as wanted, a recent version of Thunderbird works best. When adding a new account, Thunderbird will try to connect using STARTTLS on the default port. If that would fail, or if a manual connection is tried, it's possible to use SSL/TLS via the 993 and 465 ports and hit the re-test button. This should allow the account to be created using secure connections.

== 서버간 연결 보안 ==

Postfix can try to use secure connections for sending mails to other SMTP servers. Although it may not be supported by all servers, it makes sense to activate it.

{{FileBox|filename=/etc/postfix/main.cf|title=전자메일 전송시 TLS 사용 시도|1=
# Enable TLS for sending mails if supported by other server
smtp_tls_security_level = may
smtp_tls_CApath = /etc/ssl/certs
smtp_tls_loglevel = 3
}}

{{Note|For debugging purposes <code>smtp_tls_loglevel</code> has been increased to ''3''. <code>smtp_tls_security_level</code> can be set to "encrypt" to only send mails over TLS connections. But this is not recommended, because many mail servers on the internet do not support TLS at all or are not compatible.}}

다음 postfix를 다시 시작하십시오:

{{RootCmd|/etc/init.d/postfix restart}}

동작하는지 시험하려면, TLS를 지원하는 서버의 주소로 메일을 보낼 수 있습니다. 기록에는 다음과 같은 내용이 있어야합니다:

{{Cmd|tail -n 10 /var/log/mail/mailinfo.log |output=<pre>
...
postfix/smtp[15209]: Trusted TLS connection established to mx.example.com[x.x.x.x]:25: TLSv1 with cipher AES256-SHA (256/256 bits)
...
</pre>}}

== 마무리 ==

모든 부분이 기대한대로 동작한다면, 기록을 꺼도 됩니다:

{{FileBox|filename=/etc/postfix/main.cf|title=로깅 비활성화|1=
smtpd_tls_loglevel = 0
smtp_tls_loglevel = 0
}}

[[Category:Mail Servers]]
