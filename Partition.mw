{{InfoBox stack
|{{InfoBox wikipedia|Disk partitioning|header=true}}
}}

== Master Boot Record (MBR) ==
Used for a long time to organize data, also called DOS-Partitions. Partition information is stored in the MBR of the device.
* Widely spread and support in nearly all operating systems.
* Very well documented.
* Maximum of 4 primary partitions per device.
* Maximum size of the device 2 TiB.
* Using one as extended partition (of the 4 primary), it is possible to create additional logical partitions to work around the problem of only 4 partitions.

=== Programs ===
The following programs can be used to create, alter, and remove MBR partitions:
{| class=wikitable
|-
! Program
! Package
! GUI
! Function
|-
| fdisk 
| {{Package|sys-apps/util-linux}}
| {{No}}
| Create, alter, and remove partitions.
|-
| parted
| {{Package|sys-block/parted}}
| {{No}}
| Create, alter, remove, check, copy partitions and file systems.
|-
| gparted
| {{Package|sys-block/gparted}}
| {{Yes|[[Qt]] / GTK+}}
| Gnome Partition Editor; create, alter, and remove partitions.
|}

=== Supported Operating Systems ===
* BSD (Mac OS X) - full support.
* DOS - full support.
* Linux - full support.
* Solaris - full support.
* Windows - full support.

== GUID Partition Table (GPT) ==
In GUID partition system a small amount of disk space at the beginning of the device is used to store the partition information. Its main advantage is the supported size of storage devices and it creates a backup of the partition table at the end of the device.

* Widely spread and support in most modern operating systems.
* Used to require the [[GRUB2]] bootloader, but the functionality was backported to earlier versions.
* Maximum of 128 primary partitions per , check, copydevice.
* Maximum size of the device 8 ZiB.

=== Programs ===
The following programs can be used to create, alter, and remove GPT partitions:
{| class=wikitable
|-
! Program
! GUI
! Function
|-
| gptfdisk
| {{Package|sys-apps/gptfdisk}}
| {{No}}
| Create, alter, remove, convert MBR to GPT, and recreate partition tables from backup.
|-
| parted
| {{Package|sys-block/parted}}
| {{No}}
| Create, alter, remove, check, copy partitions and file systems.
|-
| gparted
| {{Package|sys-block/gparted}}
| {{Yes|[[Qt]] / GTK+}}
| Gnome Partition Editor; create, alter, and remove partitions.
|}

=== Supported Operating Systems ===
* BSD (Mac OS X) - full support.
* Linux - full support.
* Windows - cannot boot itself, needs the EFI bootloader or Linux [[GRUB2]] with dualboot (Since Server 2008 or Vista SP1).

== Logical Volume Manager (LVM) ==
[[LVM]] is a complete suite to dynamically manage partitions, storage devices or other underlying systems as volumes.
* Widely spread and support in most modern operating systems.
* Needs [[GRUB2]] bootloader.
* Maximum size of the device depends on the underlying systems limitations.
* Maximum size of Logical Volumes is 8 EiB on 64-bit Linux and 16 TiB on 32-bit Linux.
* Storage devices, raid system, network storage (e.g. iSCSI) can be used as Physical Volumes (no need of partitioning).
* Provides basic forms of data redundancy (RAID 1, RAID 5) or stripset (RAID 0) for performance.
{{Note|To use features like dynamic resizing, the used filesystem should be resizeable as well.}}

=== Programs ===
The following programs come with {{Package|sys-fs/lvm2}}
{| class=wikitable
|-
! Program
! GUI
! Function
|-
| pvcreate
| {{No}}
| Create or remove Physical Volumes of storage devices/systems.
|-
| vgcreate
| {{No}}
| Groups PV as Volume Group.
|-
| lvcreate
| {{No}}
| Create, alter, and remove volumes.
|}

=== Supported Operating Systems ===
* BSD - cannot boot itself, needs Linux [[GRUB2]] with dualboot.
* Linux - full support.

{{Note|This is the Linux specific LVM implementation, other OS have their own systems, see [[Wikipedia:Logical Volume Management#Implementations|Logical volume management]].}}

== ZFS ==
[[ZFS]] is a complete suite to dynamically manage storage and file system.

* Support in Linux (via ZFSOnLinux), Solaris, FreeBSD.
* Needs [[GRUB2]] bootoader.
* Maximum size of a single zpool is 256 ZiB
* Storage devices can be used complete as vdev (no need of partitioning)
* Zpools are created once and cannot be resized afterwards. Every volume has access to the full capacity of the zpool, this can be reduced via quota.
* It provides forms of redundancy like RAID 1 (mirroring), and RAID 0 (striping) for performance. Also supports RAID 5, RAID 6, etc.
* Has its own filesystem with features like compression, copy on write, and deduplication.

=== Programs ===
The following programs come with {{Package|sys-fs/zfs}}
{| class=wikitable
|-
! Programraid1
! GUI
! Function
|-
| zpool
| {{No}}
| Manage and organize vdevs in zpools.
|-
| zfs
| {{No}}
| Create, alter (resize), and remove volumes.
|}

=== Supported Operating Systems ===
* BSD - full support.
* Linux - built as external module because of the CDDL and GPL licence conflict - mostly supported.
* Solaris - full support.

== See also ==
* [[Complete Handbook/Putting the minimal environment in place]]
* [[File System Security]]

[[Category:Core system]]
