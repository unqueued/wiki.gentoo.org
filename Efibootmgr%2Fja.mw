<languages/>
{{InfoBox stack
|{{InfoBox github|rhinstaller/efibootmgr|header=true}}
|{{InfoBox package|sys-boot/efibootmgr}}
|{{InfoBox odoc|https://github.com/rhboot/efibootmgr/blob/master/README.md|text=README}}
{{InfoBox manpage|https://linux.die.net/man/8/efibootmgr|text=EFIBOOTMGR(8)|raw=true}}
}}

{{Metadata|abstract=efibootmgr は、システム上の UEFI ファームウェアを操作します。Linux (およびそのほかの EFI 対応 OS)の起動を可能にするためのブートエントリを作成したり管理したりするために EFI の設定を操作するツールとして、広く知られています。}}

{{c|efibootmgr}} は、システム上の UEFI ファームウェアを操作します。Linux (およびそのほかの EFI 対応 OS)の起動を可能にするための[[Article description::ブートエントリを作成したり管理したりするために EFI の設定を操作するツール]]として、広く知られています。

{{Package|sys-boot/efibootmgr}} は、ブートローダでは'''ありません'''。ブートローダとして動作するのはシステムの EFI ファームウェアそれ自体です。{{c|efibootmgr}}は、これを操作するためのツールです。{{c|efibootmgr}} を用いることで、ブートエントリを作成したり順序を変えたり編集したり削除したりすることが可能になります。

== インストール ==

=== カーネル ===

<var>CONFIG_EFI_VARS</var> のサポートが有効になっている必要があります:

{{KernelBox|title=EFI 変数のサポートを有功にする|1=
Firmware Drivers  --->
   EFI (Extensible Firmware Interface) Support  --->
       <*> EFI Variable Support via sysfs
}}

=== Emerge ===

{{Package|sys-boot/efibootmgr}} には USE フラグがありませんから、ただ単にインストールすればよいです:

{{Emerge|sys-boot/efibootmgr}}

== 設定 ==

=== EFI 変数 ===

{{c|efibootmgr}} が正しく動作するには、 EFI 変数ファイルシステムにアクセス可能になっていなければなりません。そのためには、システムが（ファームウェア(BIOS)の MBR モードではなく）EFI モードでブートされている必要があります。そうでないと EFI 変数へのアクセス自体が不可能です。システムが MBR モードになっていたら、再起動して、システムのファームウェアに EFI モードで起動するように指示する必要があります。大概は、ファームウェアの設定オプションを変えたり、システムのブートメニューで EFI ブートエントリを選んだりすることで解決します。

システムが EFI モードに入ったら、以下のコマンドを実行すれば [[Filesystem#Disk_filesystems|efivarfs]] が存在するか調べられます:

{{RootCmd|mount {{!}} grep efivars|output=<pre>
efivarfs on /sys/firmware/efi/efivars type efivarfs (rw,nosuid,nodev,noexec,relatime)
</pre>}}

（{{Path|sysfs}} init スクリプトによってマウントされているべきなのですが）もしもマウントされていなかったら、次のコマンドでマウントすることが可能です。

{{RootCmd|mount -t efivarfs efivarfs /sys/firmware/efi/efivars}}

[https://github.com/OpenRC/openrc/commit/3fd3bfc76dccc3752f4af949ad4076dab26357fb#diff-8312ad0561ef661716b48d09478362f3R6 OpenRC-0.28 news] も参照。

== 前提条件 ==

EFI システムパーティション(ESP)が存在しない場合は作成する必要があります。[[EFI System Partition]] を参照してください。

== 使い方 ==

=== ブートエントリの一覧表示 ===

現在のブートエントリのリストを表示させるには <code>--verbose (-v)</code> オプションを使用します:

{{RootCmd|efibootmgr -v|output=<pre>
BootCurrent: 0002
Timeout: 3 seconds
BootOrder: 0003,0003,0002,0000,0004
Boot0000* CD/DVD Drive  BIOS(3,0,00)
Boot0001* Hard Drive    BIOS(2,0,00)
Boot0002* Gentoo        HD(1,800,61800,6d98f360-cb3e-4727-8fed-5ce0c040365d)File(\EFI\boot\bootx64.efi)
Boot0003* Hard Drive    BIOS(2,0,00)P0: ST1500DM003-9YN16G
</pre>}}

=== ブートエントリを作成する ===

EFI のブートエントリを作成するには、{{c|efibootmgr}} に対していくつかのオプションを与えます:

* <code>--create (-c)</code> 新しいエントリの作成;
* <code>--part (-p)</code> [[EFI System Partition|EFI システムパーティション(ESP)]]のあるパーティション番号;
* <code>--disk (-d)</code> EFI システムパーティション(ESP)のあるディスク名;
* <code>--label (-L)</code> ブートエントリに使用したいラベル名;
* <code>--loader (-l)</code> ブートする EFI イメージの置いてあるパス

{{Important/ja|EFI イメージのパスでは、{{Key|/}}(スラッシュ)ではなく ''{{Key|\}}(バックスラッシュ)を使用しなければなりません''。}}

例えば:

{{RootCmd|efibootmgr -c -d /dev/sda -p 2 -L "Gentoo" -l "\efi\boot\bootx64.efi"}}

必要に応じて、追加のカーネルをインストールして UEFI ファームウェアに登録しておくことができます。これは、より多くのカーネルをテストしたい場合やもう一つのオペレーションシステムとデュアルブートしたい場合に特に便利です。これらは通常、システムの初期化中の適切な時にキーボードのホットキーを押した後にブート選択ダイアログに表示されます。最後に追加したエントリが常に最も高いブート優先度を得るので、これがデフォルトになります。ホットキーの組み合わせがわからなければ、コンピューターの製造業者の公式ドキュメントを探してみてください。通常、この情報を探すのは難しいことではありません。

=== ブートエントリを削除する ===

エントリを削除するにはまず、そのエントリのID番号を見つけなければなりません。

例えば Gentoo のエントリが前記のようであれば（"Boot0002" がID であれば）、{{c|efibootmgr}} に対して <code>--bootnum (-b)</code> でID番号を指定し <code>--delete-bootnum (-B)</code> でエントリの削除を命令します。

{{RootCmd|efibootmgr -b 2 -B}}

== 削除 ==

=== Unmerge ===

{{Unmerge|sys-boot/efibootmgr}}

== 参考 ==

* {{See also|rEFInd}} 
* [[EFI_stub_kernel|EFI stub kernel]] explains how to configure the Linux kernel to be able to be booted from EFI directly
* [[Handbook:AMD64/Installation/Bootloader#Alternative_2:_efibootmgr|Alternative 2: efibootmgr]] in the Gentoo Handbook
