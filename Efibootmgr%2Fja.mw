<languages/>
{{InfoBox stack
|{{InfoBox github|rhinstaller/efibootmgr|header=true}}
}}

{{Metadata|abstract=The efibootmgr application interacts with the UEFI firmware on the system, and is a popular tool to manipulate the EFI settings in order to create and manage boot entries that are capable of booting Linux (or other operating systems).}}

{{c|efibootmgr}} は、システム上の UEFI ファームウェアを操作します。Linux (およびそのほかの EFI 対応 OS)の起動を可能にするためのブートエントリを作成したり管理したりするために EFI の設定を操作するツールとして、広く知られています。

{{Package|sys-boot/efibootmgr}} は、ブートローダでは'''ありません'''。ブートローダとして動作するのはシステムの EFI ファームウェアそれ自体です。{{c|efibootmgr}}は、これを操作するためのツールです。{{c|efibootmgr}} を用いることで、ブートエントリを作成したり順序を変えたり編集したり削除したりすることが可能になります。

== インストール ==

=== カーネル ===

カーネルを UEFI から直接ブートさせたいのなら、カーネルコンフィグレーションで <var>CONFIG_EFI</var> と <var>CONFIG_EFI_STUB</var> そして<var>CONFIG_EFI_VARS</var> のサポートが有効になっている必要があります:

{{KernelBox|title=Enable EFI stub support|1=
Processor type and features  --->
    [*] EFI runtime service support 
    [*]   EFI stub support
Firmware Drivers  --->
   EFI (Extensible Firmware Interface) Support  --->
       <*> EFI Variable Support via sysfs
}}

=== Emerge ===

{{Package|sys-boot/efibootmgr}} には USE フラグがありませんから、ただ単にインストールすればよいです:

{{Emerge|sys-boot/efibootmgr}}

== 設定 ==

=== EFI 変数 ===

In order to successfully use {{c|efibootmgr}} the EFI variables filesystem must be accessible. This requires that the system has been booted in EFI mode (and not through the firmware's MBR mode) as otherwise the EFI variables themselves cannot be accessed. If the system is in MBR mode, reboot and do what is necessary in order to tell the system firmware to boot in EFI mode. Usually this involved either changing an option in the firmware's settings or selecting an EFI boot entry in the system's boot menu.

When the system is in EFI mode, run the following command to check for the existence of efivarfs:

{{RootCmd|mount {{!}} grep efivars|output=<pre>
efivarfs on /sys/firmware/efi/efivars type efivarfs (rw,nosuid,nodev,noexec,relatime)
</pre>}}

If it is not mounted (it should be mounted through the {{Path|sysfs}} init script), it is possible to manually mount it using the following command:

{{RootCmd|mount -t efivars efivars /sys/firmware/efi/efivars}}

=== EFI ブートエントリを管理する ===

==== ブートエントリの一覧表示 ====

To list the current boot entries by using the <code>--verbose (-v)</code> option:

{{RootCmd|efibootmgr -v|output=<pre>
BootCurrent: 0002
Timeout: 3 seconds
BootOrder: 0003,0003,0002,0000,0004
Boot0000* CD/DVD Drive  BIOS(3,0,00)
Boot0001* Hard Drive    BIOS(2,0,00)
Boot0002* Gentoo        HD(1,800,61800,6d98f360-cb3e-4727-8fed-5ce0c040365d)File(\EFI\boot\bootx64.efi)
Boot0003* Hard Drive    BIOS(2,0,00)P0: ST1500DM003-9YN16G
</pre>}}

==== ブートエントリを作成する ====

EFI のブートエントリを作成するには、{{c|efibootmgr}} に対していくつかのオプションを与えます:

* <code>--create (-c)</code> 新しいエントリの作成;
* <code>--part (-p)</code> EFI システムパーティション(ESP)のあるパーティション番号;
* <code>--disk (-d)</code> EFI システムパーティション(ESP)のあるディスク名;
* <code>--label (-L)</code> ブートエントリに使用したいラベル名;
* <code>--loader (-l)</code> ブートする EFI イメージの置いてあるパス

{{Important|EFI イメージのパスでは、{{Key|/}}(スラッシュ)ではなく ''{{Key|\}}(バックスラッシュ)を使用しなければなりません''。}}

例えば:

{{RootCmd|efibootmgr -c -d /dev/sda -p 2 -L "Gentoo" -l "\efi\boot\bootx64.efi"}}

==== ブートエントリを削除する ====

エントリを削除するにはまず、そのエントリのID番号を見つけなければなりません。

例えば Gentoo のエントリが前記のようであれば（"Boot0002" がID であれば）、{{c|efibootmgr}} に対して <code>--bootnum (-b)</code> でID番号を指定し <code>--delete-bootnum (-B)</code> でエントリの削除を命令します。

{{RootCmd|efibootmgr -b 2 -B}}

== 削除 ==

=== Unmerge ===

{{Unmerge|sys-boot/efibootmgr}}

== 参考 ==

* [[EFI_stub_kernel|EFI stub kernel]] explains how to configure the Linux kernel to be able to be booted from EFI directly
* [[Handbook:AMD64/Installation/Bootloader#Alternative_2:_efibootmgr|Alternative 2: efibootmgr]] in the Gentoo Handbook
