{{InfoBox stack
|{{InfoBox homepage|https://github.com/gentoo/gentoo/pulls|header=true}}
}}

__NOTOC__

[[File:Cycle of usercontributions.png|300px|thumbnail|right|Workflow of a user contribution. The green arrows show the path of contribution. Grey arrows are optional, possible access directions.]]

=== Step 0 variant a: User configures the local repository ===

Clone the github mirror of the Gentoo repository under the remote name "upstream".
{{Cmd|git clone -o upstream git@github.com:gentoo/gentoo.git}}
Fork the [https://github.com/gentoo/gentoo Gentoo repository on GitHub] and then add it under the remote name "github" to your local repository. [[File:Github fork.png|frameless|right]]

{{Cmd|git remote add github <UrlOfYourFork.git>}}

=== Step 0 variant b: using git as the main portage tree ===

{{Warning|This setup is not fully functional since the plain developer repository as obtained from github lacks the metadata generated for the official tree.}}

{{RootCmd|mkdir /etc/portage/repos.conf/}}

Add the following to the file:

{{FileBox|filename=/etc/portage/repos.conf/gentoo.conf|lang=ini|1=
[gentoo]
    location = /var/db/repos/gentoo
    sync-type = git
    sync-uri = https://github.com/gentoo/gentoo.git
    auto-sync = yes
    sync-user = portage:portage
}}

Add the following, changing <dev_user_name>.

{{FileBox|filename=/etc/portage/repo.postsync.d/99-user-dev-perms|lang=bash|1=
#!/bin/bash
USER_NAME=<dev_user_name>
find /var/db/repos/gentoo/ -type d -exec setfacl -m u:$USER_NAME:rwx {} \;
find /var/db/repos/gentoo/ -type f -exec setfacl -m u:$USER_NAME:rw {} \;
find /var/db/repos/gentoo/.git -type d -exec setfacl -m u:$USER_NAME:rwx {} \;
find /var/db/repos/gentoo/.git -type f -exec setfacl -m u:$USER_NAME:rw {} \;
}}

{{RootCmd|chmod +x /etc/portage/repo.postsync.d/99-user-dev-perms}}

Then sync the repository.

{{RootCmd|emerge --sync}}

Fork the [https://github.com/gentoo/gentoo Gentoo repository on GitHub] and then add it under the remote name "github" to your local repository. [[File:Github fork.png|frameless|right]]

Add your remote fork you created under the remote name "github" to your local repository.

=== Step 1: set up the repo's config ===

{{Cmd
|cd <overlay_path>
|git remote add github <YOURURLHERE>
|git config --local user.name "Your Full Name"
|git config --local user.email "example@domain.tld"
|git config --local pull.ff only
|git config --local pull.rebase preserve
|git config --local push.default simple}}

=== Step 2: GPG Configuration ===

Add the following to dirmgr.conf and gpg.conf respectively:

{{FileBox|filename=~/.gnupg/dirmngr.conf|title=TLS Communication to the Keyserver|1=
hkp-cacert /usr/share/gnupg/sks-keyservers.netCA.pem
}}

{{FileBox|filename=~/.gnupg/gpg.conf|title=General GPG Setup|1=
keyserver hkps://hkps.pool.sks-keyservers.net
keyserver-options no-honor-keyserver-url
cert-digest-algo SHA512
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed
}}

Now to generate the key:

{{Cmd|gpg --full-generate-key}}
    Select the algorithm
    Set the key size
    Specify how long the key should be valid (No more then 5 years)
    Confirm the information is correct
    Set your name
    set your email
    Set your passphrase, and confirm it.
It might take some time if you've chosen a high bit length key.

Retrieve your GPG public keyID via the following command:

{{Cmd|gpg --list-public-keys --keyid-format 0xlong example@domain.tld}}

The key id is the portion after the <algorithm>/ on the line beginning with pub as shown in bold below. If you have more than one key with the specified UID you will need to select the correct key yourself from the list of returned keys.
     pub   rsa4096/'''0x000000000000000'''

Upload your key to the keyserver.

{{Cmd|gpg --keyserver pool.sks-keyservers.net --send-key example@domain.tld}}

Note that under some circumstances it may be necessary to provide a keyID to the '--send-key' flag. For example

{{Cmd|gpg --keyserver pool.sks-keyservers.net --send-key 0x000000000000000}}

Finally, configure git to use the target key for code signing:

{{Cmd|git config --local user.signingkey 0x000000000000000
|git config --local commit.gpgsign 1
|git config --local push.gpgsign 0}}

=== Step 3: User updates the local repository ===

[[File:Circular workflow step1.png|200px|frameless|right]]
Say you are making changes to package app-foo/bar.  Create a local branch with your changes:

{{Cmd|git checkout -b app-foo/bar master}}

Make your changes and make sure to run [[repoman]] to check for basic errors:

{{Cmd|repoman -dx full}}

Then commit your changes (if you're closing some bugs on Bugzilla, you can mention them here as suggested by [https://www.gentoo.org/glep/glep-0066.html#commit-messages GLEP66]):

{{Cmd|repoman ci}}

=== Step 4: User makes a pull request ===

[[File:Circular workflow step2.png|200px|frameless|right]]
Now that you've made your changes and updated your local branch, it's time to send it off to GitHub and make a PR (Pull Request) to the Gentoo Developers.

Start by pushing the branch with your changes to your GitHub repository:

{{Cmd|git push github app-foo/bar}}

Then [https://help.github.com/articles/creating-a-pull-request/ create a pull request] from your GitHub repository's local branch to the Gentoo repository's master branch. When your changes have been merged, you may delete your local repository's branch with:

{{Cmd|git branch -d app-foo/bar}}

=== Step 5 variant a: Developer fetches the PR and reviews manually ===

[[File:Circular workflow step3.png|200px|frameless|right]]

{{Cmd|curl -s -L "https://github.com/gentoo/gentoo/pull/1.patch" &#124; git am -S|prompt=dev $}}
{{Cmd|repoman full -x|prompt=dev $}}
{{Cmd| # tests|prompt=dev $}}

=== Step 5 variant b: Developer fetches the PR and reviews by means of the PRam tool ===
The PRam tool {{package|app-portage/pram}} helps developers to merge pull requests.

{{Cmd|pram # FIXME}}

=== Step 6: Developer merges to the tree ===

[[File:Circular workflow step4.png|200px|frameless|right]]

{{Cmd|git push --signed origin master|prompt=dev $}}

=== References ===

* [https://www.gentoo.org/glep/glep-0063.html GLEP 63]
* [https://www.gentoo.org/glep/glep-0066.html GLEP 66]
* {{See also|Gentoo git workflow}}
* {{See also|Gentoo GitHub}}
* {{See also| Project:GitHub/Pull requests}}
