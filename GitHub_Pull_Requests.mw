===GitHub pull requests for Users and Proxied Maintainers===
[[File:Cycle of usercontributions.png|300px|frameless|right]]
The most efficient way of submitting your contributions is through [https://github.com/gentoo/gentoo/pulls pull requests on our GitHub repository]. At the moment, it gives the best response time, the widest audience for reviews and some nice scripting (including CI) to help.

In order to submit a pull request, fork the repository, create a new branch and commit your changes there. Afterwards, [https://help.github.com/articles/creating-a-pull-request/ create a pull request].

{{Tip|Once you push your new branch, visit the GitHub page of your fork. GitHub will show you a banner suggesting creating a pull request. Using it, you can avoid the necessity of specifying the fork and branch manually.}}

Once the pull request is created, our tooling will automatically CC the relevant people (maintainers and/or proxy-maint team) and perform basic QA checks via [https://github.com/pkgcore/pkgcheck pkgcheck]. If any issues are reported, please fix them or explicitly ask for help. Our reviewers may skip pull requests which are marked as not passing CI.

Afterwards, follow the suggestions given by reviewers and push updates until the pull request is fully approved. If you do not receive a reply within a reasonable time, please make sure to ping us on the pull request. When it's ready and approved, we'll merge it.

It is recommended that you try to keep the same commit structure as you'd use when committing straight to Gentoo as a developer, and follow the best git practices (atomic changes, proper commit messages). For smaller changes, we can squash and reword the commits for you. However, if you're going to actively maintain multiple packages or submit larger changes, we will require you to squash, split and word your commits appropriately. Please see the git documentation on [https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History rewriting history]. Once you've got updated commit set, use <code>git push --force</code> to overwrite your previous commits on the pull request branch.

==== Step 1: User updates the local repository ====
[[File:Circular workflow step1.png|300px|frameless|right]]
==== Step 2: User makes a pull request ====
[[File:Circular workflow step2.png|300px|frameless|right]]
==== Step 3: Developer fetches the PR and reviews ====
[[File:Circular workflow step3.png|300px|frameless|right]]
==== Step 4: Developer merges to the tree ====
[[File:Circular workflow step4.png|300px|frameless|right]]
