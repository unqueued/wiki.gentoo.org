{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://www.gnu.org/software/ddrescue/ddrescue.html|header=true}}
|{{InfoBox gitweb|http://cvs.savannah.gnu.org/viewvc/?root{{=}}ddrescue|raw=true}}
}}

{{c|ddrescue}} is a tool provided by GNU to retrieve data from failing (block) storage devices like hard disk drives, cdrom or memory sticks etc. It uses a similar technique as [[dd]] and copies block by block, but has an intelligent algorithm to recover failed data.

== Installation ==

=== Emerge ===

Install {{Package|sys-fs/ddrescue}} using the following command:

{{Emerge|sys-fs/ddrescue}}

== Usage ==

The general purpose of {{c|ddrescue}} is to recover data from failing block devices. It can be also used as a general disk (or even file) copying tool with quite a good efficiency and a nice progress bar.

=== Copy data ===

{{c|ddrescue}} can use block devices or files as input and output. The main difference to other programs used to copy files, is that the destination needs to be specified:

{{Cmd|ddrescue /etc/portage/make.conf ~/make.conf}}

=== Rescue data ===

The strategy is to read and copy as much data as possible in the first round, since every access to the storage device could be the last one before it totally fails. Then try to copy the data off the failed/failing areas of the drive. Things to check before getting started:

* The exact device name of the drive to rescue and any other device involved.
* The health of the disk drive using [[smartmontools]].
* The drive should not be mounted during the process.
* Enough disk space for recovered data.
* Enough time, as the process may take a couple of hours.

=== Disk to image ===

In this scenario the hard disk drive {{Path|/dev/sdb}} is about to fail and we want to create an exact copy in the form of an image.

* First round, copy every block without read error and log the errors to {{Path|/root/rescue.log}}.

{{Note|This requires at least as much disk space as the size of the failing hard disk drive.}}

{{RootCmd|ddrescue -f -n /dev/sdb /root/sdb_rescue.img /root/rescue.log}}

<code>-f</code>: Force {{c|ddrescue}} to run even if the destination file already exists.
<br />
<code>-n</code>: Skip the splitting phase to avoid spending a lot of time trying to rescue the most difficult parts of a file.

* Second round, copy only the bad blocks and try 3 times to read from the source before giving up.

{{RootCmd|ddrescue -d -f -r3 /dev/sdb /root/sdb_rescue.img /root/rescue.log}}
<code>-d</code>: Use direct access to the drive and skip any cache.
<br />
<code>-rN</code>: Try <code>N</code> times to rescue the block.

* Now the image can be mounted as loop device and the file system checked for corruption.

=== Disk to disk ===

In this scenario the hard disk drive {{Path|/dev/sdb}} is about to fail and we want to create an exact copy on a new hard disk drive {{Path|/dev/sdc}}, which should be at least the same size as the source drive.

* First round, copy every block without read error and log the errors to {{Path|/root/rescue.log}}.

{{Warning|All data on {{Path|/dev/sdc}} will be lost, including the partitions and partition table.}}

{{RootCmd|ddrescue -f -n /dev/sdb /dev/sdc /root/rescue.log}}

* Second round, copy only the bad blocks and try 3 times to read from the source before giving up.

{{RootCmd|ddrescue -d -f -r3 /dev/sdb /dev/sdc /root/rescue.log}}

* Now the new drive could be mounted and the file system checked for corruption.

== See also ==

* [[dd]] - {{Package|sys-apps/coreutils}} - A basic data transfer tool.
* [[dcfldd]] - {{Package|sys-apps/dcfldd}} - A more advanced data transfer tool.
* [[pv]] - {{Package|sys-apps/pv}} - View piped data with verbose output.

[[Category:Software]]
