{{InfoBox stack
|{{InfoBox homepage|http://projects.gnome.org/NetworkManager/|header=true}}
|{{InfoBox wikipedia}}
}}
'''NetworkManager''' is a [[network management|network management software]] for Ethernet, Wifi, DSL, dialup, VPN, [[WiMAX]] and mobile broadband network connections.

{{Note|NetworkManager and other network management services typically don't work together. That includes a standalone instance of dhcpcd. Make sure only one network management service is running.}}

== Installation ==

NetworkManager requires an implementation of [[udev]] and [[D-Bus]]. On laptops and desktops, it is typically built with [[polkit]] to enable local users to configure it. It also optionally integrates with [[systemd]], [[upower]], [[consolekit]] and others.

It's a good idea to use dhclient from {{Package|net-misc/dhcp}} instead of {{Package|net-misc/dhcpcd}}. While dhcpcd in standalone mode provides some interesting features over dhclient, those will not be used by NetworkManager. Most upstream developers and most users of other distributions do use dhclient and it's therefore much better tested, works correctly with [[IPv6]] and is generally a better DHCP client to be used with NetworkManager.

{{RootCmd|euse -p net-misc/networkmanager -D dhcpcd && euse -p net-misc/networkmanager -E dhclient}}

Portage knows the global USE flag ''networkmanager'' for enabling support for NetworkManager in other packages. Enabling this USE flag will make those packages pull in {{Package|net-misc/networkmanager}} automatically:

{{RootCmd|euse -E networkmanager}}

=== USE flags ===
Possible USE flags for NetworkManager:
{{USEflag|package=net-misc/networkmanager
|avahi
|bluetooth+yes
|connection-sharing
|consolekit+yes
|dhclient
|dhcpcd+yes
|doc
|gnutls
|introspection+yes
|modemmanager
|nss+yes
|ppp+yes
|resolvconf
|vala
|wext+yes
|wimax
}}

After changing use flags run the following command to update the system so the changes take effect:
{{Emerge|params+=--changed-use --deep|@world}}

=== NetworkManager 0.9.8 ===

NetworkManager branch 0.9.8 is the stable version of NetworkManager in Gentoo.

{{Emerge|net-misc/networkmanager}}

=== NetworkManager 0.9.10 and 1.0 ===

NetworkManager releases 1.0.x and 0.9.10.x aren't yet in portage, although
there is a pre-release of 0.9.10. If you want to get releases from 1.0 and 0.9.10
branches, you will need to install from the
[http://gpo.zugaina.org/Overlays/ixit ixit] overlay.

The most convenient way is to add the overlay using [[Layman]].

{{RootCmd|layman -a ixit}}

Then you can install the desired NetworkManager release.

{{Emerge|--autounmask-write {{=}}net-misc/networkmanager-1.0.0}}

{{Emerge|--autounmask-write {{=}}net-misc/networkmanager-0.9.10}}

If anything goes wrong, contact [[User:Pavlix]]. Those are live ebuilds and therefore they can occasionally need updating. I'm also considering starting a separate overlay just for networking related tools, let me know if that would help you.

Known issues:

 * Full support for OpenRC needs to be recovered.
 * Support for building in consolekit and logind support needs to be backported.

=== NetworkManager live ebuild (future 1.2 release) ===

NetworkManager is changing substantially and its feature set is slowly moving
from a laptop oriented tool to a universal network management service configured
using all sorts of tools from [[nmcli]] through [[nmtui]] to GUI tools like
[[nm-applet]], [[nm-connection-editor]], Gnome Shell's network indicator, Gnome 3
control center, KDE plasma-nm and more.

Use the same procedure above as for 1.0.0 or 0.9.10, just change the version number to 9999.

{{RootCmd|layman -a ixit}}

{{Emerge|--autounmask-write {{=}}net-misc/networkmanager-9999}}

=== NetworkManager VPN plugins ===

* {{Package|net-misc/networkmanager-openconnect}} - VPN connection using [[OpenConnect]]
* {{Package|net-misc/networkmanager-openswan}} - VPN connection using {{Package|net-misc/openswan}} or {{Package|net-misc/libreswan}}
* {{Package|net-misc/networkmanager-openvpn}} - VPN connection using OpenVPN server
* {{Package|net-misc/networkmanager-pptp}} - VPN connection to a PPTP server
* {{Package|net-misc/networkmanager-sstp}} - VPN connection to a SSTP server
* {{Package|net-misc/networkmanager-vpnc}} - VPN connection using {{Package|net-misc/vpnc}}

=== NetworkManager split DNS and DNSSEC support using unbound and dnssec-trigger ===

This doesn't yet work well with upstream releases nor in portage. But you can use [[Layman]] to
add the [[http://gpo.zugaina.org/Overlays/ixit ixit] overlay and install
{{Package|net-misc/networkmanager}}, {{Package|net-dns/dnssec-trigger}} and
{{Package|net-dns/unbound}} live ebuilds from there.

{{RootCmd|layman -a ixit}}

Now you can install the live ebuilds.

{{Emerge|--autounmask-write {{=}}net-misc/networkmanager-9999 {{=}}net-dns/dnssec-trigger-9999 {{=}}net-dns/unbound-9999}}

The main difference from simple DNSSEC support like in the dnsmasq plugin is that dnssec-trigger does its best to ensure
that you get a working DNSSEC configuration even on your laptop roaming among third party networks with different
capabilities as well as to allow you to still access local resources and that you can choose to work without DNSSEC
when it cannot provide a working setup.

=== NetworkManager CLI and TUI ===

Those are included in the current versions of {{Package|net-misc/networkmanager}}.

=== NetworkManager GUI bits in GTK ===

The systray applet is in {{Package|gnome-extra/nm-applet}} and works in classic
Xembed based systrays. If you don't have one in your desktop environment, you
can use a standalone systray like [[stalonetray]]. The connection editor GUI
in the same package as the applet. Note that this package serves all sorts of
[[desktop environments]] and panels with systrays but it's no longer used by
[[Gnome]] which has its own implementations in [[Gnome Shell]] and [[Gnome
Control Center]].

{{Emerge|nm-applet}}

Also note that the current upstream version
[https://bugzilla.gnome.org/show_bug.cgi?id=740574 doesn't support the appindicator API]
and thus doesn't work in some systray implemenatation like that in current versions
of [[KDE]] and [[Unity]] or the development versions of [[Enlightenment]].

=== NetworkManager KDE GUIs ===

* {{Package|kde-misc/plasma-nm}} - [[KDE]] frontend
* {{Package|kde-misc/networkmanagement}} - [[KDE]] frontend

=== Kernel configuration ===

For Wifi devices enable also the following options:
{{KernelBox||1=
[*] Networking support  --->
        Networking options  --->
        <*> Packet socket
    [*] Wireless  --->
        <*>   cfg80211 - wireless configuration API
        [*]     cfg80211 wireless extensions compatibility
}}

Look at the [[udev]] page for kernel configuration needed for this NetworkManager dependency.

== Configuration ==

On Gentoo, NetworkManager uses the plugdev group, so add your user to plugdev.

{{RootCmd|gpasswd -a $USER plugdev}}

=== Starting and Enabling the Service ===

==== OpenRC ====

Remove any existing network management services (if installed):

{{RootCmd|for service in $(rc-update show default {{!}} grep 'net\.' {{!}} awk '{ print $1 }'); do rc-update del $service default; done}}
{{RootCmd|rc-update del dhcpcd default}}

You can now start NetworkManager:

{{RootCmd|/etc/init.d/NetworkManager start}}

To start NetworkManager at boot time, add it your default runlevel:

{{RootCmd|rc-update add NetworkManager default}}

==== Systemd ====

Start NetworkManager now.

{{RootCmd|systemctl start NetworkManager}}

Enable NetworkManager to be started at boot time.

{{RootCmd|systemctl enable NetworkManager}}

With NetworkManager older than 0.9.10 or when you have services that order themselves after <code>network.service</code> instead of <code>network-online.service</code>, you may want to enable the <code>NetworkManager-wait-online.service</code> for <code>multi-user.target</code>. Note that it extends the boot time even if you don't have any services that need to wait for network connections.

{{RootCmd|systemctl enable NetworkManager-wait-online.service}}

When writing your own systemd services, you can easily make them wait for NetworkManager to configure the boot time connections. With NetworkManager 0.9.10 and later it works even without explicitly enabling the network-online.service.

{{FileBox|filename=/etc/systemd/system/*.service|1=
[Unit]
After=network-online.service
Wants=network-online.service
}}

=== Setting a hostname ===

If you built NetworkManager with USE=dhclient, you can set a hostname like this:

{{fileBox|filename=/etc/dhcp/dhclient.conf|lang=bash|1=
send host-name "yourhostname";
}}

=== nm-applet and X session startup ===

To be able to get nm-applet started when starting your light X session or light [[desktop environment]], just put the following line in your {{Path|~/.xinitrc}} file:
{{FileBox|filename=~/.xinitrc|lang=bash|1=
dbus-launch nm-applet &
}}

For {{Package|gnome-base/gnome-keyring}} support, add the following lines before the previous line. This will ease password management for GnuPG, ssh and Wifi:
{{FileBox|filename=~/.xinitrc|lang=bash|1=
eval $(gnome-keyring-daemon --components=pkcs11,secrets,ssh,gpg)
export GNOME_KEYRING_PID
export GNOME_KEYRING_SOCKET
export SSH_AUTH_SOCK
export GPG_AGENT_INFO
}}

=== Dnsmasq ===

NetworkManager can be set up to use [[Dnsmasq]] as a local DNS server that passes the DNS queries on to your provider's DNS server. /etc/resolv.conf will be set to point to 127.0.0.1, where dnsmasq runs and processes the queries. This can be useful for example if an application chroots for security reasons and before doing so copies /etc/resolv.conf. Then it would never be informed about changes to the DNS servers as your laptop moves from Wifi to Wifi.

Setup of dnsmasq is simple:
{{FileBox|filename=/etc/NetworkManager/NetworkManager.conf|lang=bash|1=
[main]
plugins=keyfile
dns=dnsmasq
}}

Then restart NetworkManager.

'''DNSSEC'''

Dnsmasq can optionally validate DNSSEC data while passing through queries (must be compiled with the dnssec use flag). This can be accomplished by adding these lines to the NetworkManager dnsmasq config file:

{{FileBox|filename=/etc/NetworkManager/dnsmasq.d/dnssec|lang=bash|1=
# DNSSEC setup
dnssec
trust-anchor=.,19036,8,2,49AAC11D7B6F6446702E54A1607371607A1A41855200FD2CE1CDDE32F24E8FB5
dnssec-check-unsigned
}}

The trusted anchor can be found [https://data.iana.org/root-anchors/root-anchors.xml here]. After this change dnsmasq will return SERVFAIL and no DNS data if the validation fails. If the validation succeeds it sets the ad flag. In case the domain does not support DNSSEC dnsmasq behaves as before.

If your ISP's DNS server does not forward DNSSEC data then this will fail. In that case you can uncomment the last line, but it will defy the purpose of DNSSEC. Google's server 8.8.8.8 provise DNSSEC data.

== Troubleshotting ==
* {{Bug|net-misc/networkmanager|search=package}}
* [https://bugzilla.gnome.org/buglist.cgi?query_format=advanced;order=Importance;bug_status=UNCONFIRMED;bug_status=NEW;bug_status=ASSIGNED;bug_status=REOPENED;bug_status=NEEDINFO;classification=Platform;product=NetworkManager GNOME bugtracker: known bugs]
* [https://live.gnome.org/NetworkManager/Debugging GNOME Wiki]

[[Category:Network management]]
