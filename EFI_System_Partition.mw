<languages /><translate><!--T:1-->
{{InfoBox stack|{{InfoBox wikipedia|EFI system partition|header=true}}}}

<!--T:2-->
The '''EFI system partition (ESP)''' is a [[FAT]] formatted partition containing the [[bootloader|boot loader]]s or kernel images for all installed operating systems.

== Kernel == <!--T:3-->

<!--T:4-->
Advanced partition selection (<var>CONFIG_PARTITION_ADVANCED</var>) and EFI GUID Partition support (<var>CONFIG_EFI_PARTITION</var>) must be enabled:

<!--T:5-->
{{KernelBox|title=Enable support for GPT|1=
-*- Enable the block layer --->
   Partition Types --->
      [*] Advanced partition selection
      [*] EFI GUID Partition support
}}

<!--T:6-->
ISO8859-1 codepage must be enabled too, in order to mount the EFI partition:
{{KernelBox|title=Enable ISO8859-1 codepage|1=
-*- File Systems --->
   Native Language support --->
      [*] NLS ISO 8859-1  (Latin 1; Western European Languages)
}}

== Characteristics == <!--T:7-->

<!--T:8-->
{{c|parted}} ({{package|sys-block/parted}}) will show it with the '''boot, esp''' flags:

<!--T:9-->
{{RootCmd|parted /dev/sda print|output=<pre>Model: ATA SAMSUNG SSD SM84 (scsi)
Disk /dev/sda: 256GB
Sector size (logical/physical): 512B/512B
Partition Table: gpt
Disk Flags: 

<!--T:10-->
Number  Start   End     Size    File system  Name                          Flags
 1      1049kB  99.6MB  98.6MB  fat32        EFI System Partition          boot, esp
</pre>}}

<!--T:11-->
For creation instructions see [[Handbook:AMD64/Blocks/Disks#Default:_Using_parted_to_partition_the_disk|Handbook]]

<!--T:12-->
{{c|gdisk}} ({{package|sys-apps/gptfdisk}}) will show it with partition code '''EF00''':

<!--T:13-->
{{RootCmd|gdisk -l /dev/sda|output=<pre>GPT fdisk (gdisk) version 1.0.1

<!--T:14-->
Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

<!--T:15-->
Found valid GPT with protective MBR; using GPT.
Disk /dev/sda: 500118192 sectors, 238.5 GiB
Logical sector size: 512 bytes
Disk identifier (GUID): 1B59C2C8-8795-4625-9718-4D636B005AC1
Partition table holds up to 128 entries
First usable sector is 34, last usable sector is 500118158
Partitions will be aligned on 2048-sector boundaries
Total free space is 2669 sectors (1.3 MiB)

<!--T:16-->
Number  Start (sector)    End (sector)  Size       Code  Name
   1            2048          194559   94.0 MiB    EF00  EFI System Partition
</pre>}}

<!--T:17-->
{{Note|Having the ESP as '''{{path|/dev/sda1}}''' (Number 1) deviates from Gentoo Handbook where '''Boot/EFI system partition''' is [[Handbook:AMD64/Installation/Disks#Default_partitioning_scheme|{{path|/dev/sda2}}]].}}

== Size considerations == <!--T:18-->

<!--T:19-->
100 MB should be enough for some kernels, a boot manager and dual-booting Windows 10.

== Mount point == <!--T:20-->

<!--T:21-->
An entry in [[Handbook:AMD64/Installation/System#About_fstab|{{path|/etc/fstab}}]] is not needed for booting but might be useful for  manually [[EFI_stub_kernel#Installation|mounting the ESP]].

<!--T:22-->
{{FileBox|filename=/etc/fstab|title=Configuring the ESP mountpoint|lang=ini|1=
/dev/sda1              /boot             vfat              noauto,noatime             0    2
}}

== Standard layout == <!--T:23-->

<!--T:24-->
There is a standard layout for the ESP. Vendors and distributions are supposed to put their stuff into vendor specific directories.

<!--T:25-->
{{Cmd|tree -L 3 /boot|output=<pre>
 /boot
 └── EFI
     ├── Boot
     │   └── bootx64.efi
     ├── Gentoo
     │   └── vmlinuz-4.9.76-r1.efi
     └── Microsoft
         ├── Boot
         └── Recovery
</pre>}}

<!--T:26-->
Here the Microsoft subtree - and also the Boot subtree<ref>https://wiki.debian.org/UEFI#Force_grub-efi_installation_to_the_removable_media_path</ref> - was created by an earlier installation of Windows 10 Creators Update. The Boot subtree is the fallback directory. If UEFI can't find any vendor specific directories it will boot from here. In a multiboot environment with properly set up vendor specific subtrees the Boot subtree can be deleted.

== UEFI boot items == <!--T:27-->

<!--T:28-->
Computers with UEFI usually provide a boot menu and a [https://philipyip.files.wordpress.com/2016/07/uefi1.png configuration tool] for creating, sorting or deleting boot items. 
The content of the ESP is visible to these tools and creating a boot item is like choosing the medium from a given selection, then surfing through the ESP and selecting the item, e.g <var>vmlinuz-4.9.76-r1-gentoo.efi</var>.

<!--T:29-->
Alternatively, [[efibootmgr]] can be used for generating the UEFI boot items.

== See also == <!--T:30-->

<!--T:31-->
* [[Handbook:AMD64/Blocks/Disks#Using_UEFI]]
* [[EFI stub kernel]] — Linux kernel, able to boot without a boot manager
* {{See also|efibootmgr}}
* {{See also|EFI Shell}} The UEFI Shell is a shell/terminal for the firmware which allows launching uefi applications which include uefi bootloaders.
* {{See also|refind}}
* [[Handbook_Talk:AMD64/Full/Installation#improve_suggested_partitions_and_use_of_grub-install|Discussion page in Gentoo Handbook]] — how to use grub2 with ESP
* [[Property:Efi-system-partition]] — Gentoo handbook property using {{path|/dev/sda1}}
* [[Talk:GRUB2_Quick_Start#UEFI.2FGPT]]

== External resources == <!--T:32-->

<!--T:33-->
* [https://wiki.archlinux.org/index.php/EFI_System_Partition EFI System Partition on Arch wiki]
* [https://blog.uncooperative.org/blog/2014/02/06/the-efi-system-partition/ The EFI System Partition and the Default Boot Behavior]

== References == <!--T:34-->

</translate>

{{reflist}}

[[Category:UEFI]]
