<languages />
{{InfoBox stack
|{{InfoBox project|Overlays|header=true}}
}}

An '''ebuild repository''', colloquially known as an '''overlay''', is [[Article description::a structure of directories and files used to add and extend packages available to the system's package manager.]] Ebuild repositories are also used by Gentoo developers as training ground and staging area for new ebuilds. Ebuild repositories can contain ebuilds of one or more [[EAPI]]s.

Systems that have Gentoo installed typically have a single ebuild repository available on the system. This main repository, known as the [https://gitweb.gentoo.org/repo/gentoo.git/tree/ Gentoo ebuild repository], contains [[ebuild]]s maintained by official Gentoo developers and members of the community (through the [[Project:Proxy Maintainers|Proxy Maintainers]] project). System administrators can add additional ebuild repositories to the system using various utilities and methods described below.

== 版本库 ==

Ebuild repositories are nothing more (or less) than a [[Repository format|set of files]] (ebuilds, metadata files, ...). These can be pulled in from public repositories ([[Project:Portage/Sync#Portage_configuration|git, CVS, SVN ...]]) or downloaded as tarballs and extracted manually onto the system. It is advised to use managed repositories by [https://repos.gentoo.org trusted] third parties; any installed ebuild repository will cause Portage to look through the overlaid files when deciding which software to install. If compromised code is in the ebuild repository, then compromised packages could be installed on the system.

The now default approach for handling repositories is through {{Path|[[:/etc/portage/repos.conf]]}} which, like many other Portage related locations, can be a directory as well.

Repository definitions inside {{Path|/etc/portage/repos.conf/}} also inform Portage if and how the repository can be updated. With it, calling {{c|emerge --sync}} will automatically update the repositories as well.

A deprecated, yet still supported method is to use the <var>PORTDIR_OVERLAY</var> variable inside {{Path|/etc/portage/make.conf}}. This variable can point to one or more additional locations on the file system where repositories are available. The use of the {{Path|[[:/etc/portage/repos.conf]]/}} directory is highly preferred.

For more information, see [[:/etc/portage/repos.conf|/etc/portage/repos.conf]] and the [[Project:Portage/Sync#Operation|Portage/Sync article]].

=== 优先级 ===

Each ebuild repository has its unique priority. This makes sure that in the case of a specific version being found in several ebuild repositories, the resolution is unambiguous. Ebuilds from ebuild repositories with higher priority numbers (for example 60) take precedence over ebuilds from ebuild repositories with lower priorities (such as 50).

The list of ebuild repositories with their priorities can be obtained through the output of the following commands (look for the "Repositories" string):

{{Cmd|emerge --info --verbose}}

{{Cmd|portageq repos_config /}}

The Gentoo repository will have a priority of -1000. That means that all other ebuild repositories generally take precedence as they are assigned a higher priority. That is the default behavior, because ebuild repositories are designed to "lay over/on top" of the Gentoo repository.

== 工具支持 ==

A number of tools support or integrate with ebuild repositories.

=== layman ===

The {{c|layman}} application makes it easier to manage and update multiple additional ebuild repositories. It is a command-line application through which publicly available ebuild repositories can be listed, subscribed to and unsubscribed from, as well as update those repositories. 

It supports both the {{Path|[[Layman#make.conf_method_.28force_old_method.29|make.conf]]}} as well as {{Path|[[Layman#repos.conf_method_.28default.29|repos.conf]]}} method.
* When using the {{Path|[[Layman#make.conf_method_.28force_old_method.29|make.conf]]}} method, {{c|layman}} manages a dedicated configuration file which should be sourced in by {{Path|make.conf}}
* When using {{Path|[[Layman#repos.conf_method_.28default.29|repos.conf]]}}, {{c|layman}} manages the {{Path|[[Layman#repos.conf_method_.28default.29|/etc/portage/repos.conf/layman.conf]]}} file directly

For more information, see [[Layman]] and [[Project:Portage/Sync#Layman_configuration]].

=== emaint ===

See the [[Project:Portage/Sync#Operation|Sync (Portage project)]] article and {{c|man 1 emaint}}.

=== eix ===

{{c|eix-sync}} is a wrapper starting {{c|emerge --sync}} (which in turn starts {{c|emaint sync --auto}}) followed by {{c|eix-update}}.  For further details see the [[Eix]] article and {{c|man 1 eix}}.

== 使用 ==

=== Emerging a duplicate package ===

When working with ebuild repositories it is possible to encounter a situation where multiple versions of the same package are available from different ebuild repositories. Instruct [[Portage]] to install a specific package from a specific ebuild repository with the <code>::</code> notation:

{{Emerge|category/atom::repository-name}}

The same notation can be used for different emerge instructions, including uninstalling a package through <code>--depclean</code>.

== 最佳实践 ==

=== 生成缓存 ===

When large ebuild repositories are installed, Portage may take a long time to perform operations like dependency resolution. This is because ebuild repositories do not usually contain a metadata cache.

Generate a local metadata cache by running {{c|emerge --regen}} after syncing the ebuild repositories:

{{RootCmd
|layman -S
|( ulimit -n 4096 && emerge --regen )}}

Be careful, because {{c|emerge --regen}} takes a lot of time and it's not recommended for rsync users as rsync updates the cache using server-side caches (most of users of portage are rsync users). Rsync users should simply run {{c|emerge --sync}} (or {{c|eix-sync}}) to regenerate the cache. It's probably only users of very large ebuild repositories should try {{c|emerge --regen}}.

=== Masking installed but unsafe ebuild repositories ===

When using huge ebuild repositories or those with unknown/low quality it is best practice to hardmask the whole ebuild repository.

{{FileBox|filename=/etc/portage/package.mask|title=mask 一个 overlay 里的全部包|lang=bash|1=
*/*::overlay-name
}}

After that unmask the packages that will be installed.

{{FileBox|filename=/etc/portage/package.unmask|title=反 mask 一个 overlay 里的一个特定包|lang=bash|1=
foo/bar::overlay-name
}}

== 参考 ==

* [[Project:Overlays|Overlays project]] - Gentoo官方ebuild版本库项目支持。
* [[Project:Overlays/Overlays guide|Overlays guide (Overlay project)]] - Overlay项目的用户指南。
* [[Project:Overlays/Old Dev Guide|Developer's guide to Gentoo overlays]] - This document is kept only for historical purposes. The current guide is maintained as [[Project:Overlays/Overlays guide]].
* [[Handbook:Parts/Portage/CustomTree#Defining_a_custom_repository|Defining a custom repository]] - Section in the Gentoo Handbook

== 外部资源 ==

* https://repos.gentoo.org
* https://github.com/gentoo/
* https://gpo.zugaina.org/Overlays


[[Category:Portage]]
