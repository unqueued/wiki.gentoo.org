<languages />

{{Metadata|abstract=Xorg는 사용자들의 손 끝에 그래픽 환경을 전달해주는 X 윈도 서버입니다. 이 설명서에서는 Xorg가 무엇인지, 어떻게 설치하고 다양한 설정 옵션에는 어떤 것들이 있는지 설명하도록 하겠습니다.}}

Xorg는 사용자들의 손 끝에 그래픽 환경을 전달해주는 X 윈도 서버입니다. 이 설명서에서는 Xorg가 무엇인지, 어떻게 설치하고 다양한 설정 옵션에는 어떤 것들이 있는지 설명하도록 하겠습니다.

== X 서버가 무엇인가요? ==

=== 그래픽 vs 명령행 ===

보통 사용자는 명령을 입력하는데 공포감을 느낍니다. 젠투(그리고 보통 리눅스)가 제공하는 자유로움을 통해 가리켜서 마우스 버튼을 누를 수 있게 하는건 어떨까요? 글쎄요, 물론 이렇게 할 수 있습니다. 리눅스에서는 상당히 많은 뽀대나는 사용자 인터페이스와 설치 결과물의 위에서 설치할 수 있는 환경을 제공합니다. 

새로운 사용자들 사이에서 가장 놀라울 만한 한가지가 있습니다. 그래픽 사용자 인터페이스는 시스템에서 실행하는 프로그램만 있는 것이 아닙니다. 리눅스 커널 또는 다른 시스템의 내부로서의 일부도 "아닙니다". 워크스테이션에서 그래픽 기능을 완전히 가능케 하는 강력한 도구입니다. 

중요한 표준인만큼, 화면에 그리고, 창을 옮기며, 사용자와 마우스, 키보드 등의 기본적인 요소를 통해 상호작용하는 아직까지도 중요한 요소로 만들어지고 "X 윈도우 시스템"이라는 이름이 붙은 표준을 "X"가 아니라 "X11"이라는 이름으로 보통 함축합니다. 전세계 곳곳에서 유닉스, 리눅스를 포함한 유닉스 유사 운영체제 위에서 사용합니다. 

그래픽 사용자 인터페이스를 구동하는 능력을 지니도록 사용자에게 제공하는 프로그램과 X11 표준을 사용하는 요소는 XFree86 프로젝트에서 갈라져 나온 Xorg-X11입니다. XFree86은 GPL 라이선스와 호환되지 않는 라이선스를 사용하기로 결정하였습니다. 그렇기 때문에 Xorg의 사용을 추천합니다. 공식 포티지 트리에서는 XFree86 패키지를 더이상 지원하지 않습니다.

=== X.org 프로젝트 ===

[http://www.x.org X.org] 프로젝트는 자유롭게 재배포 가능한 X11 오픈소스 구현 시스템으로 만들었습니다. 오픈소스 X11 기반 데스크톱의 하부입니다. 

Xorg에서는 하드웨어와 여러분이 실행하려는 그래픽 소프트웨어사이의 인터페이스를 제공합니다. 이에 견주어 Xorg는 완전한 네트워크 지향 기능을 갖추고 있으며, 다른 머신에서 보고있는동안 하나의 시스템에서 프로그램을 실행할 수 있음을 의미합니다. 

== Xorg 설치 ==

Xorg를 설치할 수 있기 전에 시스템에 준비할 것이 있습니다. 먼저 커널에 입력 장치와 비디오 카드를 지원하도록 설정해야 합니다. 그 다음 {{Path|/etc/portage/make.conf}}를 준비하여 올바른 드라이버와 Xorg 패키지를 빌드하고 설치할 수 있도록 해야합니다. 

=== 입력 드라이버 지원 ===

기본적으로 Xorg에는 범용 입력 드라이버인 <code>evdev</code>를 사용합니다. 커널 설정을 바꾸어서 <code>evdev</code> 지원을 활성화 해야합니다. 커널 설정 방법을 모르겠다면 [http://www.gentoo.org//doc/en/kernel-config.xml 커널 설정 안내서]를 읽어보십시오. 

{{Kernel|커널에서 evdev 활성화|<pre>
Device Drivers --->
  Input device support --->
  <*>  Event interface
</pre>
}}

=== 커널 상태설정 ===

최신 오픈소스 비디오 드라이버는 커널 모드셋팅(KMS)에 의존합니다. KMS에서는 화면 깜빡임 감소, 빠른 사용자 전환, 내장 프레임버퍼 콘솔, 콘솔에서 Xorg로의 감쪽같은 전환 등 여러가지 기능으로 무장한 개선된 그래픽 부팅 기능을 지원합니다. KMS는 기존 프레임버퍼 드라이버와 충돌하므로 커널 설정에서 '''비활성화''' 된 상태로 두어야 합니다. 

먼저 KMS에 대한 커널을 준비합니다. 이 단계에서는 여러분이 사용하는 Xorg 비디오 드라이버가 무엇인지에 대해 상관 없이 이 조치를 취해야 합니다. 

{{Kernel|프레임버퍼 설정|<pre>
Device Drivers --->
  Graphics support --->
    Support for frame buffer devices --->
    ## (Disable all drivers, including VGA, Intel, nVidia, and ATI)
 
    ## (Further down, enable basic console support. KMS uses this.)
    Console display driver support --->
      <*>  Framebuffer Console Support
</pre>
}}

다음, 비디오카드에 맞는 적당한 KMS 드라이버를 사용하도록 커널을 설정하십시오. 인텔, 엔비디아, AMD/ATI가 일반적인 카드이므로, 여러분의 카드에 따라 적은 코드를 따라가시면 됩니다. 

인텔 카드의 경우: 

{{Kernel|인텔 설정|<pre>
Device Drivers --->
  Graphics support --->
    /dev/agpgart (AGP Support) --->
    <*>  Intel 440LX/BX/GX, I8xx and E7x05 chipset support
    Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
    <*>  Intel 8xx/9xx/G3x/G4x/HD Graphics
    [*]    Enable modesetting on intel by default
</pre>
}}

엔비디아의 경우: 

{{Kernel|엔비디아 설정|<pre>
Device Drivers --->
  Graphics support --->
    Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
    <*>    Nouveau (nVidia) cards
</pre>
}}

최신의 AMD/ATi 카드에서([http://www.gentoo.org//doc/en/ati-faq.xml RadeonHD 2000 이상]), <code>radeon-ucode</code> 또는 <code>linux-firmware</code>를 이머지해야 합니다. 두 꾸러미 중 하나를 설치하면 [https://wiki.gentoo.org/wiki/Radeon 라데온 페이지]의 [https://wiki.gentoo.org/wiki/Radeon#Firmware 펌웨어 섹션]에서 자세히 설명한대로 커널을 설정하십시오: 

{{Kernel|AMD/ATI 설정|<pre>
## (Setup the kernel to use the radeon-ucode firmware)
Device Drivers --->
  Generic Driver Options --->
  [*]  Include in-kernel firmware blobs in kernel binary
  ## # ATI card specific, (see Radeon page for details of firmware to include)
   (radeon/<YOUR-MODEL>.bin ...)
  ## # all:
   (/lib/firmware/) Firmware blobs root directory
 
## (Enable Radeon KMS support)
Device Drivers --->
  Graphics support --->
  <*>  Direct Rendering Manager --->
  <*>    ATI Radeon
  [*]      Enable modesetting on radeon by default
  [ ]      Enable userspace modesetting on radeon (DEPRECATED)
</pre>
}}

{{Note/ko|예전 라데온 카드(X1900 시리즈 이전)에서는 <code>radeon-ucode</code> 꾸러미를 설치하거나 다른 펌웨어 설정을 할 필요가 없습니다. 다이렉트 렌더링 관리자(DRM)과 ATI 라데온 모드셋팅을 활성화하시기만 하면 됩니다.}}

{{Note/ko| 리눅스 커널 3.9 이상에서는 "라데온용 모드셋팅을 기본으로 활성화(Enable modesetting on radeon by default)" 옵션이 더이상 존재하지 않으며 기본으로 설정하는 것으로 이미 암묵적으로 처리했습니다}}

이제 KMS 설정이 끝났으면, 다음 섹션에서 {{Path|/etc/portage/make.conf}}를 준비하는 것으로 계속 진행하십시오.

=== make.conf 설정 ===

이제 커널을 준비했고, Xorg를 설치할 수 있기 이전에 {{Path|/etc/portage/make.conf}} 파일의 중요한 두가지 변수를 설정해야 합니다. 

첫번째 변수는 <code>VIDEO_CARDS</code>입니다. 이 변수는 여러분이 사용하려는 비디오 드라이버를 설정하는데 사용하며 보통 여러분이 가진 그래픽 카드 종류를 기반으로 합니다. 대부분의 일반 설정은 엔비디아 카드에 대해서는<code>nouveau</code>, ATI  카드에 대해서는 <code>radeon</code>입니다. 둘 다 활발하게 개발되었고 잘 지원하는 오픈소스 드라이버입니다. 

{{Note/ko|아마도 엔비디아와 ATI에서 상업용 드라이버를 사용하려 할텐데 <code>nvidia</code> 와 <code>fglrx</code>가 있습니다. 그러나 상업용 드라이버의 설정은 이 안내서의 범위를 넘어섭니다. [https://wiki.gentoo.org/wiki/NVidia/nvidia-drivers 젠투 리눅스 엔비디아 안내서]와 [http://www.gentoo.org/doc/en/ati-faq.xml 젠투 리눅스 ATI 자주 묻는 질문]을 읽어보십시오. 어떤 드라이버를 선택해야 할지 모르겠다면, 더 많은 내용을 알아보기 위해 이 안내서를 참고하십시오.}}

<code>인텔</code> 드라이버는 일반적인 인텔 통합 그래픽 칩셋이 붙은 데스크톱이나 랩톱에서 사용합니다. 

{{Note/ko|<code>VIDEO_CARDS</code>는 공백으로 구분하여 하나 이상의 드라이버를 넣을 수 있습니다.}}

두번째 변수는 <code>INPUT_DEVICES</code> 이며 입력 장치에 대해 어떤 드라이버를 빌드할지를 판단하는데 사용합니다. 대부분 <code>evdev</code>로 설정하면 제대로 동작합니다. 랩톱용 감지식 터치패드 같은 다른 입력 장치를 사용한다면, <code>INPUT_DEVICES</code>에 꼭 넣으십시오. 

Now you should decide which drivers you will use and add necessary settings to the {{Path|/etc/portage/make.conf}} file: 

{{Code|Sample make.conf entries|<pre>
## (For mouse, keyboard, and Synaptics touchpad support)
INPUT_DEVICES="evdev synaptics"
## (For nVidia cards)
VIDEO_CARDS="nouveau"
## (For AMD/ATI cards)
VIDEO_CARDS="radeon"
</pre>
}}

If the suggested settings don't work for you, you should run <code>emerge -pv xorg-drivers</code> , check all the options available and choose those which apply to your system. This example is for a system with a keyboard, mouse, Synaptics touchpad, and a Radeon video card. 

{{RootCmd|emerge -pv xorg-drivers|output=<pre>
 
These are the packages that would be merged, in order:
 
Calculating dependencies... done!
[ebuild   R   ]  x11-base/xorg-drivers-1.9  INPUT_DEVICES="evdev synaptics
-acecad -aiptek -elographics% -fpit% -joystick -keyboard -mouse -penmount -tslib
-virtualbox -vmmouse -void -wacom"
VIDEO_CARDS="radeon -apm -ark -ast -chips -cirrus -dummy -epson -fbdev -fglrx
(-geode) -glint -i128 (-i740) (-impact) -intel -mach64 -mga -neomagic (-newport)
-nouveau -nv -nvidia -r128 -rendition -s3 -s3virge -savage -siliconmotion -sis
-sisusb (-sunbw2) (-suncg14) (-suncg3) (-suncg6) (-sunffb) (-sunleo) (-suntcx)
-tdfx -tga -trident -tseng -v4l -vesa -via -virtualbox -vmware (-voodoo) (-xgi)"
0 kB
</pre>
}}

필요한 모든 변수를 설정한 다음에는 Xorg 패키지를 설치할 수 있습니다. 

가장 먼저 USE 플래그에 udev를 넣었는지 확인하십시오:

{{RootCmd|echo "x11-base/xorg-server udev" &gt;&gt; /etc/portage/package.use}}

다음 Xorg를 설치하십시오:

{{Emerge|xorg-server}}

{{Note/ko|좀 더 가벼운 <code>xorg-server</code>보다는 <code>xorg-x11</code> 메타패키지를 설치할 수 있습니다. 기능적으로는 <code>xorg-x11</code>와 <code>xorg-server</code>는 동일합니다. 그러나, <code>xorg-x11</code>패키지는 다른언어에 대한 거대한 글꼴 모음 같은 필요하지 않은 패키지 마저도 끌고 올 수 있습니다. 동작하는 데스크톱에 필요한건 아닙니다.}}

설치가 끝나면, 계속하기 전에 일부 환경 변수를 다시 초기화해야 합니다: 

{{RootCmd|env-update
|source /etc/profile}}

== Xorg 설정 ==

X서버는 Xorg 설정 파일을 직접 편집할 필요 없이 특별하게 동작하도록 설계되었습니다. 화면 장치, 키보드, 마우스와 같은 장치를 감지하고 설정할 것입니다. 

먼저 어떤 설정 파일을 편집하지 않고도 [[#Using_startx|startx 사용하기]]를 시도해보셔야 합니다. Xorg가 시작하지 않거나 다른 문제가 있다면 다음 섹션에서 보시는 바와 같이 Xorg를 직접 설정해야 합니다. 

{{Note/ko|바뀐 내용으로 자리 잡았을 경우 새커널로 부팅하려면 startx를 사용하기 전에 시스템을 재시작하는것을 잊지 마십시오.}}

=== xorg.conf.d 디렉터리 ===

{{Note|Configuring files in {{Path|xorg.conf.d}} should be seen as a "last resort" option. It's really desirable to run without any special configuration if possible. If you still can't get a working configuration, then read on.}}

The configuration files of Xorg are stored in {{Path|/etc/X11/xorg.conf.d/}}. Each file is given a unique name and ends in {{Path|.conf}}. If the filenames start with a number, then Xorg will read the files in numeric order. {{Path|10-evdev.conf}} will be read before {{Path|20-synaptics.conf}}, and so on. You don't ''have'' to give them numbers, but it may help you organize them. 

{{Note|Xorg provides example configurations in {{Path|/usr/share/doc/xorg-server-${version}/xorg.conf.example.bz2}}. You can use these to create your own configuration files in {{Path|/etc/X11/xorg.conf.d/}}. The examples are heavily commented, but if you are in need of more documentation regarding the syntax, read <code>man xorg.conf</code>. Other examples can be found in the [[#Resources|Resources]] chapter at the end of this guide.}}

=== startx 사용하기 ===

Now try <code>startx</code> to start up your X server. <code>startx</code> is a script that executes an ''X session''; that is, it starts the X server and some graphical applications on top of it. It decides which applications to run using the following logic: 

* If a file named {{Path|.xinitrc}} exists in the home directory, it will execute the commands listed there.

* Otherwise, it will read the value of the XSESSION variable and will execute one of the sessions available in {{Path|/etc/X11/Sessions/}} accordingly. You can set the value of XSESSION in {{Path|/etc/env.d/90xsession}} to make it a default for all the users on the system. For example, as root, run <code>echo XSESSION="Xfce4" > /etc/env.d/90xsession</code>. This will create the {{Path|90xsession}} file and set the default X session to [http://www.gentoo.org/doc/en/xfce-config.xml Xfce]. Remember to run <code>env-update</code> after changing {{Path|90xsession}}.

{{Cmd|startx}}

If you haven't yet installed a window manager, all you'll see is a black screen. Since this can also be a sign that something's wrong, you may want to emerge <code>twm</code> and <code>xterm</code> ''only to test X''. 

Once those two programs are installed, run <code>startx</code> again. A few <code>xterm</code> windows should appear, making it easier to verify that X is working correctly. Once you're satisfied with the results, run <code>emerge --unmerge twm xterm</code> as root to get rid of the testing packages. You won't need them once you've setup a proper desktop environment.

== X 세밀하게 설정하기 ==

=== 해상도 설정===

If you feel that the screen resolution is wrong, you will need to check two sections in your {{Path|xorg.conf.d}} configuration. First of all, you have the ''Screen'' section which lists the resolutions that your X server will run at. This section might not list any resolutions at all. If this is the case, Xorg will estimate the resolutions based on the information in the second section, ''Monitor''. 

Now let us change the resolution. In the next example from {{Path|/etc/X11/xorg.conf.d/40-monitor.conf}} we add the <code>PreferredMode</code> line so that our X server starts at 1440x900 by default. The <code>Option</code> in the <code>Device</code> section must match the name of your monitor (<code>DVI-0</code>), which can be obtained by running <code>xrandr</code>. You'll need to <code>emerge xrandr</code> just long enough to get this information. The argument after the monitor name (in the <code>Device</code> section) must match the <code>Identifier</code> in the <code>Monitor</code> section. 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier  "RadeonHD 4550"
  Option      "Monitor-DVI-0" "DVI screen"
EndSection
Section "Monitor"
  Identifier  "DVI screen"
  Option      "PreferredMode" "1440x900"
EndSection
</pre>
}}

X(<code>startx</code>)를 실행하여 원하는 해상도를 찾으십시오.

=== 다중 모니터 ===

You can configure more than one monitor in {{Path|/etc/X11/xorg.conf.d/}}. All you have to do is give each monitor an identifer, then list its physical position, such as "RightOf" or "Above" another monitor. The following example shows how to configure a DVI and a VGA monitor, with the VGA monitor as the right-hand screen: 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier "RadeonHD 4550"
  Option     "Monitor-DVI-0" "DVI screen"
  Option     "Monitor-VGA-0" "VGA screen"
EndSection
Section "Monitor"
  Identifier "DVI screen"
EndSection
Section "Monitor"
  Identifier "VGA screen"
  Option     "RightOf" "DVI screen"
EndSection
</pre>
}}

=== 키보드 설정===

To setup X to use an international keyboard, you just have to create the appropriate config file in {{Path|/etc/X11/xorg.conf.d/}}. This example features a Czech keyboard layout: 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/30-keyboard.conf|output=<pre>
Section "InputClass"
        Identifier "keyboard-all"
        Driver "evdev"
        Option "XkbLayout" "us,cz"
        Option "XkbModel" "logitech_g15"
        Option "XkbRules" "xorg"
        Option "XkbOptions" "grp:alt_shift_toggle,grp:switch,grp_led:scroll,compose:rwin,terminate:ctrl_alt_bksp"
        Option "XkbVariant" ",qwerty"
        MatchIsKeyboard "on"
EndSection
</pre>
}}

The "terminate" command (<code>terminate:ctrl_alt_bksp</code>) lets you kill the X session by using the Ctrl-Alt-Backspace key combination. This will, however, make X exit disgracefully -- something that you might not always want. It can be useful when programs have frozen your display entirely, or when you're configuring and tweaking your Xorg environment. Be careful when killing your desktop with this key combination -- most programs really don't like it when you end them this way, and you may lose some (or all) of what you were working on.

=== 끝내기 ===

Run <code>startx</code> and be happy about the result. Congratulations, you now (hopefully) have a working Xorg on your system. The next step is to install a useful window manager or desktop environment such as KDE, GNOME, or Xfce, but that's not part of this guide. Information on installing these desktop environments can be found in our [http://www.gentoo.org/doc/en/?catid=desktop Gentoo Desktop Documentation Resources] .

== 자원 ==

=== 설정 파일 만들고 편집하기 ===

First of all, <code>man xorg.conf</code> and <code>man evdev</code> provide quick yet complete references about the syntax used by these configuration files. Be sure to have them open on a terminal when you edit your configuration files! 

There are also many online resources on editing config files in {{Path|/etc/X11/}} . We only list few of them here; be sure to [http://www.google.com Google] for more. 

=== 기타 자원 ===

More information about installing and configuring various graphical desktop environments and applications can be found in the [http://www.gentoo.org/doc/en/?catid=desktop Gentoo Desktop Documentation Resources] section of our documentation. 

If you're upgrading to <code>xorg-server</code> 1.9 from an earlier version, then be sure to read the [http://www.gentoo.org/proj/en/desktop/x/x11/xorg-server-1.9-upgrade-guide.xml migration guide] . 

X.org provides many [http://www.x.org/wiki/FAQ FAQs] on their website, in addition to their other documentation.

== 감사문 ==

이 안내서에 제공한 노고에 대해 다음 작성자와 편집자분들께 감사의 말을 전하고자 합니다:

* swift

* nightmorph


[[Category:X.Org]]
