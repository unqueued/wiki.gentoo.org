<languages />

{{Metadata|abstract=Xorg는 사용자들의 손 끝에 그래픽 환경을 전달해주는 X 윈도 서버입니다. 이 설명서에서는 Xorg가 무엇인지, 어떻게 설치하고 다양한 설정 옵션에는 어떤 것들이 있는지 설명하도록 하겠습니다.}}

Xorg는 사용자들의 손 끝에 그래픽 환경을 전달해주는 X 윈도 서버입니다. 이 설명서에서는 Xorg가 무엇인지, 어떻게 설치하고 다양한 설정 옵션에는 어떤 것들이 있는지 설명하도록 하겠습니다.

== X 서버가 무엇인가요? ==

=== 그래픽 vs 명령행 ===

보통 사용자는 명령을 입력하는데 공포감을 느낍니다. 젠투(그리고 보통 리눅스)가 제공하는 자유로움을 통해 가리켜서 마우스 버튼을 누를 수 있게 하는건 어떨까요? 글쎄요, 물론 이렇게 할 수 있습니다. 리눅스에서는 상당히 많은 뽀대나는 사용자 인터페이스와 설치 결과물의 위에서 설치할 수 있는 환경을 제공합니다. 

새로운 사용자들 사이에서 가장 놀라울 만한 한가지가 있습니다. 그래픽 사용자 인터페이스는 시스템에서 실행하는 프로그램만 있는 것이 아닙니다. 리눅스 커널 또는 다른 시스템의 내부로서의 일부도 "아닙니다". 워크스테이션에서 그래픽 기능을 완전히 가능케 하는 강력한 도구입니다. 

중요한 표준인만큼, 화면에 그리고, 창을 옮기며, 사용자와 마우스, 키보드 등의 기본적인 요소를 통해 상호작용하는 아직까지도 중요한 요소로 만들어지고 "X 윈도우 시스템"이라는 이름이 붙은 표준을 "X"가 아니라 "X11"이라는 이름으로 보통 함축합니다. 전세계 곳곳에서 유닉스, 리눅스를 포함한 유닉스 유사 운영체제 위에서 사용합니다. 

The application that provides Linux users with the ability to run graphical user interfaces and that uses the X11 standard is Xorg-X11, a fork of the XFree86 project. XFree86 has decided to use a license that might not be compatible with the GPL license; the use of Xorg is therefore recommended. The official Portage tree does not provide an XFree86 package anymore.

=== The X.org Project ===

The [http://www.x.org X.org] project created and maintains a freely redistributable, open-source implementation of the X11 system. It is an open source X11-based desktop infrastructure. 

Xorg provides an interface between your hardware and the graphical software you want to run. Besides that, Xorg is also fully network-aware, meaning you are able to run an application on one system while viewing it on a different one. 

== Xorg 설치 ==

Before you can install Xorg, you need to prepare your system for it. First, we'll set up the kernel to support input devices and video cards. Then we'll prepare {{Path|/etc/portage/make.conf}} so that the right drivers and Xorg packages are built and installed. 

=== 입력 드라이버 지원 ===

By default, Xorg uses <code>evdev</code>, a generic input driver. You'll need to activate support for <code>evdev</code> by making a change to your kernel configuration. Read the [http://www.gentoo.org//doc/en/kernel-config.xml Kernel Configuration Guide] if you don't know how to setup your kernel. 

{{Kernel|Enabling evdev in the kernel|<pre>
Device Drivers --->
  Input device support --->
  <*>  Event interface
</pre>
}}

=== 커널 상태설정 ===

Modern open-source video drivers rely on kernel modesetting (KMS). KMS provides an improved graphical boot with less flickering, faster user switching, a built-in framebuffer console, seamless switching from the console to Xorg, and other features. KMS conflicts with legacy framebuffer drivers, which must remain '''disabled''' in your kernel configuration. 

First, prepare your kernel for KMS. You need to do this step regardless of which Xorg video driver you're using. 

{{Kernel|프레임버퍼 설정|<pre>
Device Drivers --->
  Graphics support --->
    Support for frame buffer devices --->
    ## (Disable all drivers, including VGA, Intel, nVidia, and ATI)
 
    ## (Further down, enable basic console support. KMS uses this.)
    Console display driver support --->
      <*>  Framebuffer Console Support
</pre>
}}

Next, configure your kernel to use the proper KMS driver for your video card. Intel, nVidia, and AMD/ATI are the most common cards, so follow code listing for your card below. 

인텔 카드의 경우: 

{{Kernel|인텔 설정|<pre>
Device Drivers --->
  Graphics support --->
    /dev/agpgart (AGP Support) --->
    <*>  Intel 440LX/BX/GX, I8xx and E7x05 chipset support
    Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
    <*>  Intel 8xx/9xx/G3x/G4x/HD Graphics
    [*]    Enable modesetting on intel by default
</pre>
}}

엔비디아의 경우: 

{{Kernel|엔비디아 설정|<pre>
Device Drivers --->
  Graphics support --->
    Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
    <*>    Nouveau (nVidia) cards
</pre>
}}

For newer AMD/ATI cards ( [http://www.gentoo.org//doc/en/ati-faq.xml RadeonHD 2000 and up] ), you will need to emerge <code>radeon-ucode</code> or <code>linux-firmware</code> . Once you have installed one of these packages, configure your kernel as detailed in the [https://wiki.gentoo.org/wiki/Radeon#Firmware firmware section] of [https://wiki.gentoo.org/wiki/Radeon Radeon page]: 

{{Kernel|AMD/ATI 설정|<pre>
## (Setup the kernel to use the radeon-ucode firmware)
Device Drivers --->
  Generic Driver Options --->
  [*]  Include in-kernel firmware blobs in kernel binary
  ## # ATI card specific, (see Radeon page for details of firmware to include)
   (radeon/<YOUR-MODEL>.bin ...)
  ## # all:
   (/lib/firmware/) Firmware blobs root directory
 
## (Enable Radeon KMS support)
Device Drivers --->
  Graphics support --->
  <*>  Direct Rendering Manager --->
  <*>    ATI Radeon
  [*]      Enable modesetting on radeon by default
  [ ]      Enable userspace modesetting on radeon (DEPRECATED)
</pre>
}}

{{Note|Old Radeon cards (X1900 series and older) don't need the <code>radeon-ucode</code> package or any firmware configuration. Just enable the Direct Rendering Manager and ATI Radeon modesetting.}}

{{Note|Linux kernel >{{=}} 3.9 does not have the ''Enable modesetting on radeon by default'' anymore as it is already implied by default}}

Now that you're done setting up KMS, continue with preparing {{Path|/etc/portage/make.conf}} in the next section.

=== make.conf 설정 ===

Now that your kernel is prepared, you have to configure two important variables in the {{Path|/etc/portage/make.conf}} file before you can install Xorg. 

The first variable is <code>VIDEO_CARDS</code> . This is used to set the video drivers that you intend to use and is usually based on the kind of video card you have. The most common settings are <code>nouveau</code> for nVidia cards or <code>radeon</code> for ATI cards. Both have actively developed, well-supported open-source drivers. 

{{Note|You may also try the proprietary drivers from nVidia and AMD/ATI, <code>nvidia</code> and <code>fglrx</code> respectively. However, setting up the proprietary drivers is beyond the scope of this guide. Please read the [https://wiki.gentoo.org/wiki/NVidia/nvidia-drivers Gentoo Linux nVidia Guide] and [http://www.gentoo.org//doc/en/ati-faq.xml Gentoo Linux ATI FAQ] . If you don't know which drivers you should choose, refer to these guides for more information.}}

The <code>intel</code> driver may be used for desktops or laptops with common Intel integrated graphics chipsets. 

{{Note|<code>VIDEO_CARDS</code> may contain more than one driver, each separated with a space.}}

The second variable is <code>INPUT_DEVICES</code> and is used to determine which drivers are to be built for input devices. In most cases setting it to <code>evdev</code> should work just fine. If you use alternative input devices, such as a Synaptics touchpad for a laptop, be sure to add it to <code>INPUT_DEVICES</code> . 

Now you should decide which drivers you will use and add necessary settings to the {{Path|/etc/portage/make.conf}} file: 

{{Code|Sample make.conf entries|<pre>
## (For mouse, keyboard, and Synaptics touchpad support)
INPUT_DEVICES="evdev synaptics"
## (For nVidia cards)
VIDEO_CARDS="nouveau"
## (For AMD/ATI cards)
VIDEO_CARDS="radeon"
</pre>
}}

If the suggested settings don't work for you, you should run <code>emerge -pv xorg-drivers</code> , check all the options available and choose those which apply to your system. This example is for a system with a keyboard, mouse, Synaptics touchpad, and a Radeon video card. 

{{RootCmd|emerge -pv xorg-drivers|output=<pre>
 
These are the packages that would be merged, in order:
 
Calculating dependencies... done!
[ebuild   R   ]  x11-base/xorg-drivers-1.9  INPUT_DEVICES="evdev synaptics
-acecad -aiptek -elographics% -fpit% -joystick -keyboard -mouse -penmount -tslib
-virtualbox -vmmouse -void -wacom"
VIDEO_CARDS="radeon -apm -ark -ast -chips -cirrus -dummy -epson -fbdev -fglrx
(-geode) -glint -i128 (-i740) (-impact) -intel -mach64 -mga -neomagic (-newport)
-nouveau -nv -nvidia -r128 -rendition -s3 -s3virge -savage -siliconmotion -sis
-sisusb (-sunbw2) (-suncg14) (-suncg3) (-suncg6) (-sunffb) (-sunleo) (-suntcx)
-tdfx -tga -trident -tseng -v4l -vesa -via -virtualbox -vmware (-voodoo) (-xgi)"
0 kB
</pre>
}}

After setting all the necessary variables you can install the Xorg package. 

First of all, make sure udev is in your USE flags:

{{RootCmd|echo "x11-base/xorg-server udev" &gt;&gt; /etc/portage/package.use}}

다음 Xorg를 설치하십시오:

{{Emerge|xorg-server}}

{{Note|You could install the <code>xorg-x11</code> metapackage instead of the more lightweight <code>xorg-server</code> . Functionally, <code>xorg-x11</code> and <code>xorg-server</code> are the same. However, <code>xorg-x11</code> brings in many more packages that you probably don't need, such as a huge assortment of fonts in many different languages. They're not necessary for a working desktop.}}

When the installation is finished, you will need to re-initialise some environment variables before you continue: 

{{RootCmd|env-update
|source /etc/profile}}

== Xorg 설정 ==

The X server is designed to work out-of-the-box, with no need to manually edit Xorg's configuration files. It should detect and configure devices such as displays, keyboards, and mice. 

You should first try [[#Using_startx|using startx]] without editing any configuration files. If Xorg won't start, or there's some other problem, then you'll need to manually configure Xorg as shown in the next section. 

{{Note|Do not forget to restart the system before using startx in order to boot the new kernel if changes have been made to it.}}

=== xorg.conf.d 디렉터리 ===

{{Note|Configuring files in {{Path|xorg.conf.d}} should be seen as a "last resort" option. It's really desirable to run without any special configuration if possible. If you still can't get a working configuration, then read on.}}

The configuration files of Xorg are stored in {{Path|/etc/X11/xorg.conf.d/}}. Each file is given a unique name and ends in {{Path|.conf}}. If the filenames start with a number, then Xorg will read the files in numeric order. {{Path|10-evdev.conf}} will be read before {{Path|20-synaptics.conf}}, and so on. You don't ''have'' to give them numbers, but it may help you organize them. 

{{Note|Xorg provides example configurations in {{Path|/usr/share/doc/xorg-server-${version}/xorg.conf.example.bz2}}. You can use these to create your own configuration files in {{Path|/etc/X11/xorg.conf.d/}}. The examples are heavily commented, but if you are in need of more documentation regarding the syntax, read <code>man xorg.conf</code>. Other examples can be found in the [[#Resources|Resources]] chapter at the end of this guide.}}

=== startx 사용하기 ===

Now try <code>startx</code> to start up your X server. <code>startx</code> is a script that executes an ''X session''; that is, it starts the X server and some graphical applications on top of it. It decides which applications to run using the following logic: 

* If a file named {{Path|.xinitrc}} exists in the home directory, it will execute the commands listed there.

* Otherwise, it will read the value of the XSESSION variable and will execute one of the sessions available in {{Path|/etc/X11/Sessions/}} accordingly. You can set the value of XSESSION in {{Path|/etc/env.d/90xsession}} to make it a default for all the users on the system. For example, as root, run <code>echo XSESSION="Xfce4" > /etc/env.d/90xsession</code>. This will create the {{Path|90xsession}} file and set the default X session to [http://www.gentoo.org/doc/en/xfce-config.xml Xfce]. Remember to run <code>env-update</code> after changing {{Path|90xsession}}.

{{Cmd|startx}}

If you haven't yet installed a window manager, all you'll see is a black screen. Since this can also be a sign that something's wrong, you may want to emerge <code>twm</code> and <code>xterm</code> ''only to test X''. 

Once those two programs are installed, run <code>startx</code> again. A few <code>xterm</code> windows should appear, making it easier to verify that X is working correctly. Once you're satisfied with the results, run <code>emerge --unmerge twm xterm</code> as root to get rid of the testing packages. You won't need them once you've setup a proper desktop environment.

== X 세밀하게 설정하기 ==

=== 해상도 설정===

If you feel that the screen resolution is wrong, you will need to check two sections in your {{Path|xorg.conf.d}} configuration. First of all, you have the ''Screen'' section which lists the resolutions that your X server will run at. This section might not list any resolutions at all. If this is the case, Xorg will estimate the resolutions based on the information in the second section, ''Monitor''. 

Now let us change the resolution. In the next example from {{Path|/etc/X11/xorg.conf.d/40-monitor.conf}} we add the <code>PreferredMode</code> line so that our X server starts at 1440x900 by default. The <code>Option</code> in the <code>Device</code> section must match the name of your monitor (<code>DVI-0</code>), which can be obtained by running <code>xrandr</code>. You'll need to <code>emerge xrandr</code> just long enough to get this information. The argument after the monitor name (in the <code>Device</code> section) must match the <code>Identifier</code> in the <code>Monitor</code> section. 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier  "RadeonHD 4550"
  Option      "Monitor-DVI-0" "DVI screen"
EndSection
Section "Monitor"
  Identifier  "DVI screen"
  Option      "PreferredMode" "1440x900"
EndSection
</pre>
}}

X(<code>startx</code>)를 실행하여 원하는 해상도를 찾으십시오.

=== Multiple monitors ===

You can configure more than one monitor in {{Path|/etc/X11/xorg.conf.d/}}. All you have to do is give each monitor an identifer, then list its physical position, such as "RightOf" or "Above" another monitor. The following example shows how to configure a DVI and a VGA monitor, with the VGA monitor as the right-hand screen: 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/40-monitor.conf|output=<pre>
Section "Device"
  Identifier "RadeonHD 4550"
  Option     "Monitor-DVI-0" "DVI screen"
  Option     "Monitor-VGA-0" "VGA screen"
EndSection
Section "Monitor"
  Identifier "DVI screen"
EndSection
Section "Monitor"
  Identifier "VGA screen"
  Option     "RightOf" "DVI screen"
EndSection
</pre>
}}

=== Configuring your keyboard ===

To setup X to use an international keyboard, you just have to create the appropriate config file in {{Path|/etc/X11/xorg.conf.d/}}. This example features a Czech keyboard layout: 

{{RootCmd|nano -w /etc/X11/xorg.conf.d/30-keyboard.conf|output=<pre>
Section "InputClass"
        Identifier "keyboard-all"
        Driver "evdev"
        Option "XkbLayout" "us,cz"
        Option "XkbModel" "logitech_g15"
        Option "XkbRules" "xorg"
        Option "XkbOptions" "grp:alt_shift_toggle,grp:switch,grp_led:scroll,compose:rwin,terminate:ctrl_alt_bksp"
        Option "XkbVariant" ",qwerty"
        MatchIsKeyboard "on"
EndSection
</pre>
}}

The "terminate" command (<code>terminate:ctrl_alt_bksp</code>) lets you kill the X session by using the Ctrl-Alt-Backspace key combination. This will, however, make X exit disgracefully -- something that you might not always want. It can be useful when programs have frozen your display entirely, or when you're configuring and tweaking your Xorg environment. Be careful when killing your desktop with this key combination -- most programs really don't like it when you end them this way, and you may lose some (or all) of what you were working on.

=== Finishing up ===

Run <code>startx</code> and be happy about the result. Congratulations, you now (hopefully) have a working Xorg on your system. The next step is to install a useful window manager or desktop environment such as KDE, GNOME, or Xfce, but that's not part of this guide. Information on installing these desktop environments can be found in our [http://www.gentoo.org/doc/en/?catid=desktop Gentoo Desktop Documentation Resources] .

== Resources ==

=== Creating and editing config files ===

First of all, <code>man xorg.conf</code> and <code>man evdev</code> provide quick yet complete references about the syntax used by these configuration files. Be sure to have them open on a terminal when you edit your configuration files! 

There are also many online resources on editing config files in {{Path|/etc/X11/}} . We only list few of them here; be sure to [http://www.google.com Google] for more. 

=== Other resources ===

More information about installing and configuring various graphical desktop environments and applications can be found in the [http://www.gentoo.org/doc/en/?catid=desktop Gentoo Desktop Documentation Resources] section of our documentation. 

If you're upgrading to <code>xorg-server</code> 1.9 from an earlier version, then be sure to read the [http://www.gentoo.org/proj/en/desktop/x/x11/xorg-server-1.9-upgrade-guide.xml migration guide] . 

X.org provides many [http://www.x.org/wiki/FAQ FAQs] on their website, in addition to their other documentation.

== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:

* swift

* nightmorph


[[Category:X.Org]]
