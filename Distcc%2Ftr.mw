<languages />

Distcc, derleme görevlerini ağdaki istemcilere yayarak gerçekleştiren bir yazılımdır. Sunucu servisi <code>distccd</code>, istemci servisi <code>distcc</code>'dir. Ufak bir yapılandırma ile [http://ccache.samba.org ccache], Portage ve Automake ile uyumlu şekilde çalışabilir. 

Eğer distcc'yi yeni bir Gentoo kurulumunda (bootstrap) kullanmak istiyorsanız makalenin ilgili bölümünü okuduğunuza emin olun. 

== Yapılandırma ==

=== Bağımlılıklar ===

Distcc kullanabilmek için ağınızdaki tüm bilgisayarların yakın GCC sürümlerini kullanması gerekmektedir. Örneğin, 3.3.x (x değişebilir) sürümlerini birlikte kullanmanız problem oluşturmaz ancak 3.3.x ile 3.2.x sürümleri derleme veya derlenmiş programların çalışması sırasında problem '''oluşturabilir'''. 

=== Distcc Kurulumu ===

Distcc kurulumu yapmadan önce dikkat etmeniz gereken bazı noktalar var. 

Distcc giden görevlerin gösterilmesi için bir arayüze sahip. Eğer GNOME masaüstü kullanıyorsanız use bayraklarınıza "gnome" eklediğinize emin olun. Eğer GNOME kullanmıyor ve monitör arayüzünü istiyorsanız bayraklarınıza "gtk" ekleyin. 

{{Emerge|distcc}}

{{Important|Dahil edeceğiniz tüm bilgisayarlar distcc'yi kurmanız gerekmektedir.}}

=== Portage'ı Distcc Kullanmak için Ayarlama ===

Portage ile distcc kullanımı kolaydır. Aşağıdaki adımları uygulayarak paket kurulumlarında diğer bilgisayarlardan yardım alabilirsiniz: 

{{Emerge|distcc}}

Ardından <code>MAKEOPTS</code> ve <code>FEATURES</code> değişkenlerini düzenlemeniz gerek. <code>MAKEOPTS</code> için yapılandırmanıza uygun bir değer kullanmalısınız. Genelde bu değer işlem yapacak olan işlemci sayısı +1 olarak kullanılmaktadır.

{{RootCmd|nano -w /etc/portage/make.conf|output=<pre>
MAKEOPTS="-jN"
FEATURES="distcc"
</pre>
}}

=== Çalışacak İstemcileri Belirleme ===

Katılacak istemcileri ayarlamak için <code>distcc-config</code> komutunu kullanabilirsiniz. İşte örnek bir yapılandırma: 

{{Code|İstemci tanımlarına örnekler|<pre>
192.168.0.1          192.168.0.2                       192.168.0.3
192.168.0.1/2        192.168.0.2                       192.168.0.3/10
192.168.0.1:4000/2   192.168.0.2/1                     192.168.0.3:3632/4
@192.168.0.1         @192.168.0.2:/usr/bin/distccd     192.168.0.3
</pre>
}}

Daha farklı yöntemler kullanabilirsiniz. Distcc yardım (man) sayfalarına bakmanızı öneririz.

Bulunduğunuz bilgisayarı da derlemeye dahil etmek istiyorsanız listeye "localhost" da eklemeniz gerek. Yavaş bir bilgisayar ise, işlemin genelini yavaşlatacağı için bulundurmamayı seçebilirsiniz.

Karışık gibi görünebilir ancak çoğu durumda 1. veya 2. satırın düzenlenmiş hali işinizi görecektir. 

Çoğu kişi 3. veya 4. satırı kullanmayacağı için, detaylı bilgi için [http://distcc.samba.org/man/distcc_1.html distcc dökümanlarına] bakmanızı tavsiye ederiz, SSH üzerinden bağlantı sağlamayı da ilgili belgede bulabilirsiniz. 

Örneğin önceki listede verdiğimiz ilk satırı uygulamak için: 

{{RootCmd|/usr/bin/distcc-config --set-hosts "192.168.0.1 192.168.0.2 192.168.0.3"}}

{{Path|/etc/conf.d/distccd}} dosyasını ihtiyacınıza göre düzenleyin ve <code>--allow</code> izinlerini yalnızca güvendiğiniz istemcilere verin. Ek güvenlik önlemi olarak hangi istemcilerin dinleneceğini <code>--listen</code> ile belirleyebilirsiniz. Güvenlik kaygıları için lütfen [http://distcc.samba.org/security.html Distcc güvenlik belgesini] inceleyin. 

{{Important|--allow ve --listen'ın kullanım şekli önemlidir. Lütfen yardım sayfalarını incelediğinize emin olun.}}

Şimdi işlem yapacak tüm bilgisayarlarda distcc servisini başlatalım: 

{{RootCmd|rc-update add distccd default
|/etc/init.d/distccd start}}

=== Distcc'yi Automake ile Çalışması için Ayarlama ===

Bu işlem bazen Portage yapılandırmasından daha kolay. Yapmanız gereken şey <code>PATH</code> ortam değişkenine <code>gcc</code>'yi barındıran dizinden ( {{Path|/usr/bin}} ) önce {{Path|/usr/lib/distcc/bin}} eklemek. Ancak ccache kullanıyorsanız ccache bölümünün ardına yerleştirmeniz gerek: 

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

Bu komutu {{Path|~/.bashrc}} veya benzeri şekilde otomatik yüklenen bir dosyaya ekleyip her sisteme girdiğinizde çalışmasını sağlayabilirsiniz.

Ardından normalde <code>make</code> komutu ile iş yaparken, <code>make -jN</code> tarzında (buradaki N bir sayıdır) kullanabilirsiniz. N değeri ağınızın hızına ve işlemci sayınıza göre değişecektir. Size en uyumlu değeri bulmak için deneme yapmanızı tavsiye ederiz. 

== Cross-Compiling (Çapraz derleme) ==

Cross-compiling (çapraz derleme), derleme işlemini kullandığınız işlemci mimarisinden farklı bir mimaride çalışması için yaptığınız duruma verilen addır. Yani Athlon (i686) işlemci ile  K6-2 (i586) için veya Sparc işlemci ile ppc için derleme yapmak gibi. Bu konuya [http://www.gentoo.org//doc/en/cross-compiling-distcc.xml DistCC Cross-compiling Belgesinde] değinilmiştir. 

== Distcc'yi Kurulum (Bootstrap) için Kullanmak ==

=== Adım 1: Portage'ı Yapılandırın ===

Yeni bilgisayarı Gentoo Linux CD'si ile başlatıp [http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=1 kurulum dökümanlarındaki] adımlardan bootstrap'a kadar gelin. (Bootstrap için detaylı bilgiyi [http://www.gentoo.org//doc/en/faq.xml#stage12 buradan] bulabilirsiniz.) Ardından portage'ı distcc kullanmak için yapılandırın: 

{{RootCmd|nano -w /etc/portage/make.conf|output=<pre>
FEATURES="distcc"
MAKEOPTS="-jN"
</pre>
}}

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

=== Adım 2: Distcc Kurulumu ===

Distcc'yi kurun: 

{{RootCmd|USE{{=}}'-*' emerge --nodeps sys-devel/distcc}}

=== Adım 3: Distcc'yi Yapılandırın ===

Distcc'yi yapılandırmak için <code>distcc-config --install</code> komutunu çalıştırın. Aşağıdaki komutta <code>host</code> ile başlayan yerleri DistCC derlemesine katılan cihazların IP adresi veya hostname adresi ile değiştirin:

{{RootCmd|/usr/bin/distcc-config --set-hosts "localhost host1 host2 host3 ..."}}

DistCC artık bootstrap için kullanılabilir. Kuruluma normal olarak devam edin ve <code>emerge system</code> komutunun ardından distcc'yi tekrar kurmayı unutmayın. 

{{Note|<code>emerge system</code> komutu ile paketler kurulurken bazne distcc çalışmıyor görülebilir. Bunun sebebi bazı paketlerin distcc ile kurulumu problemli olduğu için bu paketler için pasif konuma getirilmiş olmasıdır.}}

== Olası Problemler ==

=== Bazı Paketler Distcc Kullanmıyor ===

Bazı paketleri derlerken işlemin dağıtılmadığını (distcc'nin kullanılmadığını) farkedebilirsiniz. Bunun sebebi paketin Makefile dosyasının paralel derlemeyi desteklememesi veya paket bakıcısının bilinen bir problemden dolayı distcc kullanımını pasif duruma getirmesi olabilir. 

Bazen de distcc bir paketin kurulumunda hataya sebep olabilir. Bu tür bir durum yaşarsanız lütfen bize [http://bugs.gentoo.org hata raporu] gönderin. 

=== Farklı GCC Sürümleri ===

Eğer cihazlarda farklı GCC sürümleri var ise, garip hatalar almanız muhtemeldir. Bunları aşmak için tüm cihazlarda aynı sürümü kullanmanız önerilir. 

Son yapılan güncellemeler Portage'ın <code>gcc</code> yerine <code>${CHOST}-gcc</code> kullanmasını sağlamakta. Bunun anlamı i686 mimarisini farklı mimariler ile (i386, i586 gibi) kullanıyorsanız problemler yaşanabilir. Çözüm olarak ortam değişkenlerine <code>export CC='gcc' CXX='c++'</code> ekleyebilir veya {{Path|/etc/portage/make.conf}} dosyasında bunu elle belirtebilirsiniz. 

{{Important|Bunu yapmak Portage'ın davranışını değiştireceğinden garip sorunlara yol açabilir. Yalnıca farklı CHOST değerlerini karıştırıyorsanız bu yöntemi kullanın.}}

=== -march=native ===

GCC 4.3.0 sürümünden itibaren derleyici <code>-march=native</code> parametresi ile işlemcinizin türünü ve kullanılması gereken derleme seçeneklerini otomatik olarak tanımlayabiliyor. Bu durum <code>distcc</code> gibi farklı işlemcileri aynı anda kullanan bir sistem için problem oluşturmakta. Bu sebeple <code>distcc</code> kullanırken <code>CFLAGS</code> veya <code>CXXFLAGS</code> değerlerinizde <code>-march=native</code> or <code>-mtune=native</code> '''kullanmayın'''.

To know the flags that GCC would enable when called with <code>-march=native</code>, execute the following:

{{Cmd|gcc -march{{=}}native -E -v - &lt;/dev/null 2&gt;&amp;1 {{!}} grep cc1|output=<pre>
/usr/libexec/gcc/x86_64-pc-linux-gnu/4.7.3/cc1 -E -quiet -v - -march=corei7-avx \
  -mcx16 -msahf -mno-movbe -mno-aes -mpclmul -mpopcnt -mno-abm -mno-lwp -mno-fma \
  -mno-fma4 -mno-xop -mno-bmi -mno-bmi2 -mno-tbm -mavx -mno-avx2 -msse4.2 -msse4.1 \
  -mno-lzcnt -mno-rdrnd -mno-f16c -mno-fsgsbase --param l1-cache-size=32 \
  --param l1-cache-line-size=64 --param l2-cache-size=6144 -mtune=corei7-avx
</pre>}}

== Distcc Ekstraları ==

=== Distcc İzleme Araçları ===

Distcc iki tane izleme aracı ile gelmekte. Bunlardan metin tabanlı olanı <code>distccmon-text</code>. İlk kez kullanıyorsanız biraz kafa karıştırıcı olabilir ancak kullanımı kolaydır. Eğer herhangi bir parametre vermezseniz bir defa, herhangi bir numara -örneğin N- verirseniz her N saniyede bir çalışacaktır. 

Diğer izleme aracı da <code>USE</code> bayraklarınızda <code>gtk</code> veya <code>gnome</code> açık durumda ise derlenecek olan, GTK+ temelli grafiksel arayüzdür. Diğer dağıtımlarda genellikle <code>distccmon-gnome</code> ismiyle bilinen bu arayüz Gentoo'da karışıklığa sebep olmamak için <code>distccmon-gui</code> ismindedir. 

{{RootCmd|distccmon-text N}}

veya <code>distccmon-gui</code> için:

{{RootCmd|distccmon-gui}}

Portage'ın distcc kullanımını görmek için aşağıdaki yöntemleri kullanabilirsiniz:
{{RootCmd|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-text N
|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-gui}}

{{Important|Eğer distcc dizininiz farklıysa, DISTCC_DIR değişkenini buna göre düzenlemeyi unutmayın.}}

== Bilgiler ==

Bu makalede emeği geçen kişilere teşekkürler:

* Lisa Seelye
* Mike Frysinger
* Erwin
* Sven Vermeulen
* Lars Weiler
* Tiemo Kieft
* nightmorph
* Gürkan Gür (TR çeviri)
