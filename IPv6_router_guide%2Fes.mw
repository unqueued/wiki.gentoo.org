<languages />


{{Metadata|abstract=Esta guía muestra como utilizar una configuración y enrutamiento IPv6 en un sistema Gentoo Linux.}}

== Cuestiones Preliminares ==

=== Configuración básica del núcleo ===

Cualquiera de los núcleos 2.6 disponibles en Gentoo tiene soporte para conexiones IPv6. La nueva pila USAGI para IPv6 está
integrada en el núcleo desde la versión Linux 2.6.0. 

{{Emerge|gentoo-sources}}

Ahora estamos listos para entrar en el directorio de las fuentes del núcleo y comenzar con su configuración. 

{{RootCmd|cd /usr/src/linux
|make menuconfig}}

{{Note/es|Aquí se asume que {{Path|/usr/src/linux}} apunta a los fuentes que está usando.}}

{{Kernel|Opciones 'make menuconfig'|<pre>
Networking support --->
  Networking options --->
    <*> The IPv6 protocol --->
## (Las opciones IPv6 bajo ésta pueden ser útiles para otras muchas aplicaciones,
## pero no deberían de ser necesarias para una configuración básica)

## (Esta opción solo es necesaria si está usando ptrtd para la conversión de IPv6 a IPv4)
Device Drivers --->
  Network device support --->
   <*> Universal TUN/TAP device driver support
</pre>
}}

=== Probar el soporte IPv6 ===

Después de activar las opciones recomendadas, recompile su núcleo y reinicie usando su nuevo núcleo con IPv6 activado. 

Si todavía no ha instalado '''iproute2''' instalado, le animamos a hacerlo ahora.  iproute2 es una suite de configuración de red que contiene <code>ip</code>, el famoso sustituto de <code>ifconfig</code>, <code>route</code>, <code>iptunnel</code> y otros ... 

{{Emerge|sys-apps/iproute2}}

{{Warning/es|El uso de ifconfig puede ocasionar serios dolores de cabeza si tiene múltiples dispositivos de túnel. Tiene que eliminar los túneles en orden inverso, lo que significa que el último que se creo debe ser el primero en ser eliminado ¡Queda avisado!}}

Si IPv6 funciona, el dispositivo de bucle debería mostrar una dirección IPv6: 

{{RootCmd|ip -6 addr show lo|output=<pre>
1: lo: <LOOPBACK,UP> mtu 16436
  inet6 ::1/128 scope host
   valid_lft forever preferred_lft forever
  ## (Las líneas de arriba nos indican que todo va bien)
</pre>
}}

Antes de proseguir, asegúrese de añadir "ipv6" a su lista de variables USE en {{Path|make.conf}}, de tal modo que las futuras instalaciones de paquetes incluyan soporte para IPv6.

== Configuración del Túnel ==

=== Configuración Básica ===

La mayoría de los proveedores de Internet todavía no ofrecen conexiones IPv6 de modo nativo. Para saltarse está limitación,
existen varios "gestores de túneles" en todo el mundo que ofrecen gratuitamente túneles IPv6. Esto le permite hacer un túnel para todas las conexiones IPv6 a través de una conexión IPv4. 

{| class="wikitable" style="text-align: left;"
|-
! Gestor
! Localización
|-
| [http://tunnelbroker.net/ Hurricane Electric]
| Norteamérica, Europa, Asia
|-
| [http://gogonet.gogo6.com/ Freenet6]
| Estados Unidos
|-
| [http://www.sixxs.net/ Sixxs]
| Europa
|-
| [http://tunnel-broker.singnet.com.sg/ Singnet]
| Singapur
|-
| [http://broker.aarnet.net.au/ Aarnet]
| Australia/Sur del Pacífico
|-
|}

A continuación se muestran dos ejemplos de configuración de un túnel IPv6 con dos proveedores populares de Norteamérica: Hurricane Electric (también se aplica a túneles de sixxs.net sin protocolo heartbeat) y Freenet6. 

=== Hurricane Electric ===

Hurricane Electric (HE de forma abreviada) ofrece túneles IPv6 gratuitos y le ofrece un bloque /64 de direcciones. También permite configurar un DNS inverso. Para conseguir un túnel de HE vaya a [https://www.tunnelbroker.net/ https://www.tunnelbroker.net/] y rellene el
formulario de una página. 

{{Note/es|El registro incluye una lista de datos personales como su dirección y número de teléfono.}}

Una vez el túnel se haya aprobado, y el hayan asignado un bloque /64, puede configurar su sistema Gentoo. HE proporciona configuraciones de ejemplo basadas en las utilidades ifconfig e iproute. Los dos ejemplos siguientes  asumen que tiene la siguiente configuración: 

{| class="wikitable" style="text-align: left;"
|-
| Dirección Local IPv4 (eth0)
| 68.36.91.195
|-
| Dirección IPv4 de HE
| 64.71.128.82
|-
| Dirección local del túnel IPv6
| 2001:470:1F00:FFFF::189
|-
| Bloque IPv6
| 2001:470:1F00:296::/64
|-
|}

Para utilizar el paquete iproute2 y la orden <code>ip</code>, haríamos lo siguiente:

Crear un túnel entre la IPv4 local (eth0) y la dirección IPv4 remota de HE:

{{RootCmd|ip tunnel add sixbone mode sit remote 64.71.128.82 local 68.36.91.195 ttl 64 dev eth0}}

Extraer la carga del túnel desde la MTU:

{{RootCmd|ip link set sixbone mtu 1280}}

Activar el túnel:

{{RootCmd|ip link set sixbone up}}

Asignarle la dirección IPv6:

{{RootCmd|ip addr add 2001:470:1F00:FFFF::189 dev sixbone}}

Enrutar todas las direcciones IPv6 globales de envío a un solo receptor (unicast) a través de nuestro dispositivo túnel 'sixbone':

{{RootCmd|ip route add 2000::/3 dev sixbone}}

=== Freenet6 ===

[http://gogonet.gogo6.com/ Freenet6] es otro proveedor de túneles gratuito. El registro opcional solo requiere un nombre de usuario y una dirección de correo electrónico válida. Han elegido realizar la gestión del túnel mediante una configuración cliente/servidor creando el cliente <code>gateway6</code>. Este cliente está disponible en Portage. Para instalarlo haga: 

{{Emerge|gateway6}}

Ahora, si elige conectarse con autenticación, necesitará configurar <code>gateway6</code> editando {{Path|/etc/gateway6/gw6c.conf}}. Solamente debería cambiar los campos "userid" y "passwd" para que concuerden con los asignados por Freenet6, además de cambiar el servidor que actúa como puerta de enlace. A continuación
se muestra un ejemplo de fichero configuración. 

{{Code|Ejemplo de fichero gw6c.conf|<pre>
auth_method=any
userid=anonymous
passwd=foobar
template=linux
server=broker.freenet6.net
</pre>
}}

=== Probar su Conexión ===

Ahora que el túnel está configurado, puede probar su conexión. La forma más sencilla es utilizar la herramienta <code>ping6</code> e intentando hacer ping a una máquina IPv6. 

{{Emerge|iputils}}

{{Cmd|ping6 www.kame.net|output=<pre>
PING www.kame.net(orange.kame.net) 56 data bytes
64 bytes from orange.kame.net: icmp_seq=1 ttl=52 time=290 ms
64 bytes from orange.kame.net: icmp_seq=2 ttl=52 time=277 ms
64 bytes from orange.kame.net: icmp_seq=3 ttl=52 time=280 ms
64 bytes from orange.kame.net: icmp_seq=4 ttl=52 time=279 ms
64 bytes from orange.kame.net: icmp_seq=5 ttl=52 time=277 ms

--- www.kame.net ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4038ms
rtt min/avg/max/mdev = 277.040/281.041/290.046/4.699 ms
</pre>
}}

Actualmente se está trabajando para añadir mejor soporte IPv6 a los guiones de inicio de red. Si desea conocer su estado u ofrecer
ayuda, escriba a {{Mail|latexer@gentoo.org}}.

== Soporte IPv6 en aplicaciones ==

== Hacer de nuevo emerge de los paquetes ==

A menos que ya tenga ''USE="ipv6"'' en su {{Path|/etc/portage/make.conf}}, probablemente necesitará hacer de nuevo emerge de unos cuantos paquetes con soporte IPv6. Para obtener una lista de todos los paquetes instalados que están afectados por
el cambio en las opciones USE, utilice la opción <code>--newuse</code> (<code>-N</code>) de Portage: 

{{Emerge|@world|params=-uDNav}}

Si ha cambiado muchas opciones USE, la lista puede que sea bastante larga. Se recomienda mantener el sistema actualizado para que no
sufra en caso de tener que recompilar todos los paquetes afectados. 

{{Note/es|Algunos paquetes detectan soporte IPv6 de forma mágica automáticamente y
por eso no requieren la opción ipv6 en las variables USE. Por eso, no todos los paquetes que deberían tener soporte IPv6, lo tendrán si lo compiló con IPv6 habilitado.}}

=== Paquetes Específicos IPv6 ===

Hay algunos paquetes que tratan específicamente con elementos IPv6. La mayoría se encuentran en {{Path|/usr/portage/net-misc}} . 

{| class="wikitable" style="text-align: left;"
|-
! Package
! Description
|-
| {{Package|net-misc/ipv6calc}}
| Convierte una dirección IPv6 a un formato comprimido
|-
| {{Package|net-misc/netcat6}}
| Versión de netcat que soporta tanto IPv6 como IPv4
|-
| {{Package|dev-perl/Socket6}}
|  La parte de socket.h de C relacionada con IPv6, definiciones y manipuladores de estructuras
|-
|}

== Configuración DNS ==

=== IPv6 y DNS ===

Así como los DNS para IPv4 utilizan registros A, los DNS para IPv6 usan registros AAAA. (Esto se debe a que IPv4 tiene un espacio de direcciones de 2^32 mientras que en IPv6 es de 2^128). Para el DNS
inverso, el estándar INT es obsoleto, pero es el más soportado. ARPA es el último estándar. El soporte para el formato ARPA se describe aquí. 

=== Configuración de BIND ===

Las versiones recientes de BIND incluyen un soporte excelente  de IPv6. Esta sección asume que tiene el conocimiento mínimo sobre la configuración y uso de BIND. Asumiremos que no está corriendo bind dentro de una jaula chroot. Si lo está haciendo, añada el prefijo chroot a la mayoría de las
rutas que se indican en la siguiente sección. 

Lo primero que necesita es añadir entradas tanto para la  resolución directa como para la resolución inversa en {{Path|/etc/bind/named.conf}}. 

{{Code|Entradas en named.conf|<pre>
## (Permitimos que bind escuche en direcciones IPv6.
## El uso de 'any' es la única forma de hacer esto antes de la versión bind-9.3)
options {
     [...]
     listen-on-v6 { any; }
     [...]
};
## (Esto proporcionará DNS directo para el dominio 'ipv6-rules.com':)
zone "ipv6-rules.com" IN {
     type master;
     file "pri/ipv6-rules.com";
};
## (El formato para DNS inverso está "orientado a bits". Se hace tomando el prefijo IPv6,
## invirtiendo el orden de los números y colocando un punto entre cada uno de ellos)
zone "6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa" {
     type master;
     file "pri/rev-ipv6-rules.com.arpa";
};
</pre>
}}

Ahora tenemos que crear esos archivos de zona y añadir entradas para todas nuestros equipos: 

{{Code|pri/ipv6-rules.com|<pre>
$TTL    2h
@       IN      SOA     ipv6-rules.com. webmaster.ipv6-rules.com. (
                                2003052501 ; Número de Serie
                                28800      ; Refresco
                                14400      ; Reintentos
                                3600000    ; Expiración
                                86400 )    ; Mínimo
                NS      ns1.ipv6-rules.com

        IN      AAAA    2001:470:1f00:296::1 ; dirección para ipv6-rules.com
host1   IN      AAAA    2001:470:1f00:296::2 ; dirección para host1.ipv6-rules.com
host2   IN      AAAA    2001:470:1f00:296::3:3 ; dirección para host2.ipv6-rules.com
</pre>
}}

{{Code|pri/rev-ipv6-rules.com.arpa|<pre>
$TTL 3d ; TTL por defecto (bind 8 lo necesita, bind 9 lo ignora)
@       IN SOA ipv6-rules.com. webmaster.ipv6-rules.com. (
                        2003052501      ; Número de serie (AAAAMMdd)
                        24h             ; Intervalo de refresco
                        30m             ; Intervalo de reintento
                        2d              ; Tiempo de expiración
                        3d )            ; TTL por defecto
        IN NS   ns1.ipv6-rules.com.
; Entradas PTR IPv6
$ORIGIN 6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa.

1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN PTR ipv6-rules.com.
2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN PTR host1.ipv6-rules.com.
3.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0 IN PTR host2.ipv6-rules.com.
</pre>
}}

=== Configuración DJBDNS ===

Actualmente hay algunos parches de terceros para DJBDNS disponibles en [http://www.gentoo.org/ http://www.fefe.de/dns/] que le permiten servir nombres en IPv6. Se puede instalar DJBDNS con estos parches haciendo emerge con "ipv6" en sus opciones USE. 

{{Warning/es|Todavía no todos los tipos de registro con estos parches tienen soporte. En particular, los registros NS y MX no están soportados.}}

{{Emerge|djbdns}}

Una vez instalado djbdns, se puede configurar corriendo <code>tinydns-setup</code> y respondiendo a algunas preguntas sobre las direcciones IP en las
que debe escuchar, donde instalar tinydns, etc. 

{{RootCmd|tinydns-setup}}

Asumiendo que hemos instalado <code>tinydns</code> en
{{Path|/var/tinydns}}, editamos
{{Path|/var/tinydns/root/data}}. Este fichero contiene todos los datos necesarios para conseguir que tinydns gestione los DNS para su delegación IPv6. 

{{Code|Ejemplo de fichero de datos|<pre>
## (*.ipv6-rules.com manejado de forma autoritaria por 192.168.0.1)
.ipv6-rules.com:192.168.0.1:a:259200
## (DNS inverso autoritario para 2001:470:1f00:296::/64) .6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa:192.168.0.1:a
## (Especifica las IPs para host1 y host2)
6host1.ipv6-rules.com:200104701f0002960000000000000001:86400
6host2.ipv6-rules.com:200104701f0002960000000000000002:86400
## (Apunta www hacia host1)
3www.ipv6-rules.com:200104701f0002960000000000000002:86400
</pre>
}}

Se creará un registro AAAA y uno PTR para las líneas que comienzan por <code>6</code>. Se creará solo un registro AAAA para aquéllas que comiencen por <code>3</code>. Aparte de editar manualmente el fichero {{Path|data}}, puede usar los guiones <code>add-host6</code> y <code>add-alias6</code> para añadir nuevas entradas. Una realizado los cambios al fichero {{Path|data}}, simplemente necesitará lanzar <code>make</code> desde {{Path|/var/tinydns/root}}. Así se creará
{{Path|/var/tinydns/root/data.cfb}}, usado por tinydns como su fuente de información para las peticiones DNS.

== Enrutador IPv6 ==

=== Configurar el enrutamiento ===

Si queremos que nuestro sistema funcione como enrutador para otros clientes que quieran conectarse al mundo exterior con IPv6, se necesita continuar con la configuración. Necesitamos activar el reenvío de paquetes IPv6. Podemos hacerlo de dos maneras. 

Bien definimos el valor 1 el el seudofichero de reenvíos: {{RootCmd|echo 1 > /proc/sys/net/ipv6/conf/all/forwarding}}

Bien usamos la orden <code>sysctl</code>:

{{RootCmd|sysctl -w net.ipv6.conf.all.forwarding{{=}}1}}

{{Warning/es|El guión de inicio <code>radvd</code>, explicado en el próximo capítulo, habilita (y deshabilita) el reenvío, haciendo innecesario el siguiente paso.}}

Para activar el reenvío en el inicio, necesitará editar {{Path|/etc/sysctl.conf}} y añadir la siguiente línea: 

{{Code|Adición a sysctl.conf|<pre>
## (Si va a usar radvd, este paso es innecesario)
net.ipv6.conf.default.forwarding=1
</pre>
}}

Ahora el tráfico debería ser reenviado desde esta máquina a través del túnel establecido con nuestro gestor. 

Para asignar direcciones IPv6 a los clientes, la especificación IPv6 permite tanto la asignación sin estado y con estado. La asignación sin estado usa un proceso llamado anuncio de enrutador (Router Advertisement) y permite a los clientes obtener una dirección IP y una ruta predeterminada simplemente habilitando el dispositivo de red. Se denomina "sin estado" porque no se guarda ningún registro del estado de las IPs asignadas ni de los equipos a las cuales se asignan. La asignación 'con estado' se gestiona mediante DHCPv6. Se llama "con estado" porque el servidor conserva el estado de los clientes que han solicitado direcciones IP y las que han obtenido. 

=== Configuración sin mantenimiento del estado ===

La configuración sin estado se lleva a cabo fácilmente utilizando el demonio de anuncio de enrutador (Router Advertisement Daemon), o <code>radvd</code>. 

{{Emerge|radvd}}

Después de hacer emerge de <code>radvd</code>, necesitamos crear {{Path|/etc/radvd/radvd.conf}} que contiene información acerca del bloque IP que se usará para asignar. Aquí tiene un ejemplo del
fichero {{Path|radvd.conf}} usando el prefijo que nos ha asignado nuestro gestor. 

{{Code|Ejemplo de fichero radvd.conf|<pre>
interface eth1
{
   ## (Envía mensajes de anuncio a otros equipos)
   AdvSendAdvert on;
   ## (La fragmentación es mala(tm))
   AdvLinkMTU 1280;
   MaxRtrAdvInterval 300;
   ## (El prefijo de subred IPv6 que nos ha  asignado nuestro PoP)
   prefix 2001:470:1F00:296::/64
   {
      AdvOnLink on;
      AdvAutonomous on;
   };
};
</pre>
}}

{{Warning/es|¡Asegúrese que la interfaz en la primera línea es la correcta para propagar los anuncios de enrutador hacia su intranet y no hacia su ISP!}}

Se puede obtener más información en <code>man radvd.conf</code>. Ahora podemos iniciar <code>radvd</code> y configurarlo para que se cargue al inicio. 

{{RootCmd|/etc/init.d/radvd start |rc-update add radvd default}}

=== Configuración para mantenimiento del estado ===

Si desea una configuración que mantenga el estado, debe instalar y configurar {{Package|net-misc/dibbler}}. 

{{Emerge|dibbler}}

Ahora debemos configurar el cliente dibbler modificando el archivo {{Path|/etc/dibbler/client.conf}}. 

{{Code|Ejemplo de configuración del cliente dibbler|<pre>
iface ppp0 {
     rapid-commit yes
     pd
     option dns-server
}
</pre>
}}

Ahora podemos arrancar el cliente dibbler y configurarlo para que se arranque en cada inicio. 

{{RootCmd|/etc/init.d/dibbler-client start |rc-update add dibbler-client default}}

== Clientes IPv6 ==

=== Usar radvd ===

Los clientes detrás de este enrutador deberían poder conectarse al resto a través de la red vía IPv6. Si está usando radvd, la configuración de las equipos debería ser tan sencillo como activar el dispositivo de red.
(Probablemente ya lo hayan hecho sus guiones de inicio net.ethX). 

{{RootCmd|ip link set eth0 up
|ip addr show eth0|output=<pre>
1: eth0: <BROADCAST,MULTICAST,UP> mtu 1400 qdisc pfifo_fast qlen 1000
    link/ether 00:01:03:2f:27:89 brd ff:ff:ff:ff:ff:ff
    inet6 2001:470:1f00:296:209:6bff:fe06:b7b4/128 scope global
       valid_lft forever preferred_lft forever
    inet6 fe80::209:6bff:fe06:b7b4/64 scope link
       valid_lft forever preferred_lft forever
    inet6 ff02::1/128 scope global
       valid_lft forever preferred_lft forever
</pre>
}}

== Otros Recursos ==
Hay muchos los recursos excelentes en línea acerca de IPv6. 



{| class="wikitable" style="text-align: left;"
|-
! Sitios Web
! Recursos
|-
| [http://www.ipv6.org/ www.ipv6.org]
| Información General sobre IPv6
|-
| [http://www.linux-ipv6.org/ www.linux-ipv6.org/]
| Proyecto USAGI
|-
| [http://www.deepspace6.net/ www.deepspace6.net]
| Sitio Linux/IPv6
|-
| [http://www.kame.net/ www.kame.net]
| Implementación BSD
|-
|}

En IRC, puede probar <code>#ipv6</code> en [http://www.freenode.net/ Freenode]. Puede conectarse a los servidores de Freenode mediante un cliente IPv6 a través de '''irc.ipv6.freenode.net'''. 


== Agradecimientos ==

Nos gustaría dar las gracias a los siguientes autores y editores por sus contribuciones a esta guía:


* Peter Johanson
* Jorge Paulo
* Sven Vermeulen
* Camille Huot
* Pasi Valminen
* nightmorph
* hwoarang

[[Category:Network management]]
