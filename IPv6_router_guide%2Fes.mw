<languages />

== Cuestiones Preliminares ==

=== Configuración básica del núcleo ===

Cualquiera de los núcleos 2.6 disponibles en Gentoo tiene soporte para conexiones IPv6. La nueva pila USAGI para IPv6 está
integrada en el núcleo desde la versión Linux 2.6.0. 

{{Emerge|gentoo-sources}}

Ahora estamos listos para entrar en el directorio de las fuentes del núcleo y comenzar con su configuración. 

{{RootCmd|cd /usr/src/linux
|make menuconfig}}

{{Note|Aquí se asume que {{Path|/usr/src/linux}} apunta a los fuentes que está usando.}}

{{Kernel|Opciones 'make menuconfig'|<pre>
Networking support --->
  Networking options --->
    <*> The IPv6 protocol --->
## (Las opciones IPv6 bajo ésta pueden ser útiles para otras muchas aplicaciones,
## pero no deberían de ser necesarias para una configuración básica)

## (Esta opción solo es necesaria si está usando ptrtd para la conversión de IPv6 a IPv4)
Device Drivers --->
  Network device support --->
   <*> Universal TUN/TAP device driver support
</pre>
}}

<!-- Translated above -->

=== Probar el Soport IPv6 ===

Después de activar las opciones recomendadas, recompile su núcleo y reinicie usando su nuevo núcleo con IPv6 activado. 

Si todavía no ha instalado '''iproute2''' instalado, le animamos a hacerlo ahora.  iproute2 es una suite de configuración de red que contiene <code>ip</code>, el famoso sustituto de <code>ifconfig</code>, <code>route</code>, <code>iptunnel</code> y otros ... 

{{Emerge|sys-apps/iproute2}}

{{Warning|El uso de ifconfig puede ocasionar serios dolores de cabeza si tiene múltiples dispositivos de túnel. Tiene que eliminar los túneles en orden inverso, lo que siginifica que el último que se creo debe ser el primero en ser eliminado ¡Queda avisado!}}

Si IPv6 funciona, el dispositivo de bucle debería mostrar una dirección IPv6: 

{{RootCmd|ip -6 addr show lo|output=<pre>
1: lo: <LOOPBACK,UP> mtu 16436
  inet6 ::1/128 scope host
   valid_lft forever preferred_lft forever
  ## (Las líneas de arriba nos indican que todo va bien)
</pre>
}}

Antes de proseguir, asegúrese de añadir "ipv6" a su lista de variables USE en {{Path|make.conf}}, de tal modo que las futuras instalaciones de paquetes incluyan soporte para IPv6.

== Configuración del Túnel ==

=== Configuración Básica ===

La mayoría de los proveedores de Internet todavía no ofrecen conexiones IPv6 de modo nativo. Para saltarse está limitación,
existen varios "gestores de túneles" en todo el mundo que ofrecen gratuitamente túneles IPv6. Esto le permite hacer un túnel para todas las conexiones IPv6 a través de una conexión IPv4. 

{| class="wikitable" style="text-align: left;"
|-
! Gestor
! Localización
|-
| [http://tunnelbroker.net/ Hurricane Electric]
| Norteamérica, Europa, Asia
|-
| [http://gogonet.gogo6.com/ Freenet6]
| Estados Unidos
|-
| [http://www.sixxs.net/ Sixxs]
| Europa
|-
| [http://tunnel-broker.singnet.com.sg/ Singnet]
| Singapur
|-
| [http://broker.aarnet.net.au/ Aarnet]
| Australia/Sur del Pacífico
|-
|}

A continuación se muestran dos ejemplos de configuración de un túnel IPv6 con dos proveedores populares de Norteamérica: Hurricane Electric (también se aplica a túneles de sixxs.net sin protocolo heartbeat) y Freenet6. 

=== Hurricane Electric ===

Hurricane Electric (HE de forma abreviada) ofrece túneles IPv6 gratuitos y le ofrece un bloque /64 de direcciones. También permite
configurar un DNS inverso. Para conseguir un túnel de HE vaya a [http://www.gentoo.org/ http://www.tunnelbroker.net/] y rellene el
formulario de una página. 

{{Note|El registro incluye una lista de datos personales como su dirección y número de teléfono.}}

Una vez el túnel se haya aprobado, y el hayan asignado un bloque /64, puede configurar su sistema Gentoo. HE proporciona configuraciones de ejemplo basadas en las utilidades ifconfig e iproute. Los dos ejemplos siguientes  asumen que tiene la siguiente configuración: 

{| class="wikitable" style="text-align: left;"
|-
| Dirección Local IPv4 (eth0)
| 68.36.91.195
|-
| Dirección IPv4 de HE
| 64.71.128.82
|-
| Dirección local del túnel IPv6
| 2001:470:1F00:FFFF::189
|-
| Bloque IPv6
| 2001:470:1F00:296::/64
|-
|}

Para utilizar el paquete iproute2 y la orden <code>ip</code>, haríamos lo siguiente:

Crear un túnel entre la IPv4 local (eth0) y la dirección IPv4 remota de HE:

{{RootCmd|ip tunnel add sixbone mode sit remote 64.71.128.82 local 68.36.91.195 ttl 64 dev eth0}}

Extraer la carga del túnel desde la MTU:

{{RootCmd|ip link set sixbone mtu 1280}}

Activar el túnel:

{{RootCmd|ip link set sixbone up}}

Asignarle la dirección IPv6:

{{RootCmd|ip addr add 2001:470:1F00:FFFF::189 dev sixbone}}

Enrutar todas las direcciones IPv6 globales de envío a un solo receptor (unicast) a través de nuestro dispositivo túnel 'sixbone':

{{RootCmd|ip route add 2000::/3 dev sixbone}}

=== Freenet6 ===

[http://gogonet.gogo6.com/ Freenet6] es otro proveedor de túneles gratuito. El registro opcional solo requiere un nombre de usuario y una dirección de correo electrónico válida. Han elegido realizar la gestión del túnel mediante una configuración cliente/servidor creando el cliente <code>gateway6</code>. Este cliente está disponible en Portage. Para instalarlo haga: 

{{Emerge|gateway6}}

Ahora, si elige conectarse con autenticación, necesitará configurar <code>gateway6</code> editando {{Path|/etc/gateway6/gw6c.conf}}. Solamente debería cambiar los campos "userid" y "passwd" para que concuerden con los asignados por Freenet6, además de cambiar el servidor que actúa como puerta de enlace. A continuación
se muestra un ejemplo de fichero configuración. 

{{Code|Ejemplo de fichero gw6c.conf|<pre>
auth_method=any
userid=anonymous
passwd=foobar
template=linux
server=broker.freenet6.net
</pre>
}}

=== Probar su Conexión ===

Ahora que el túnel está configurado, puede probar su conexión. La forma más sencilla es utilizar la herramienta <code>ping6</code> e intentando hacer ping a una máquina IPv6. 

{{Emerge|iputils}}

{{Cmd|ping6 www.kame.net|output=<pre>
PING www.kame.net(orange.kame.net) 56 data bytes
64 bytes from orange.kame.net: icmp_seq=1 ttl=52 time=290 ms
64 bytes from orange.kame.net: icmp_seq=2 ttl=52 time=277 ms
64 bytes from orange.kame.net: icmp_seq=3 ttl=52 time=280 ms
64 bytes from orange.kame.net: icmp_seq=4 ttl=52 time=279 ms
64 bytes from orange.kame.net: icmp_seq=5 ttl=52 time=277 ms

--- www.kame.net ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4038ms
rtt min/avg/max/mdev = 277.040/281.041/290.046/4.699 ms
</pre>
}}

&nbsp; <!-- Translated above -->

Actualmente se está trabajando para añadir mejor soporte IPv6 a los guiones de inicio de red. Si desea conocer su estado u ofrecer
ayuda, escriba a {{Mail|latexer@gentoo.org}}.

== Soporte IPv6 en aplicaciones ==

== Hacer de nuevo emerge de los paquetes ==

A menos que ya tenga ''USE="ipv6"'' en su {{Path|/etc/portage/make.conf}}, probablemente necesitará hacer de nuevo emerge de unos cuantos paquetes con soporte IPv6. Para obtener una lista de todos los paquetes instalados que están afectados por
el cambio en las opciones USE, utilice la opción <code>--newuse</code> (<code>-N</code>) de Portage: 

{{Emerge|world|params=-uDNav}}

Si ha cambiado muchas opciones USE, la lista puede que sea bastante larga. Se recomienda mantener el sistema actualizado para que no
sufra en caso de tener que recompilar todos los paquetes afectados. 

{{Note|Algunos paquetes detectan soporte IPv6 de forma mágica automáticamente y
por eso no requieren la opción ipv6 en las variables USE. Por eso, no todos los paquetes que deberían tener soporte IPv6, lo tendrán si lo compiló con IPv6 habilitado.}}

=== Paquetes Específicos IPv6 ===

There are a few packages which specifically deal with IPv6 items. Most of these are located in {{Path|/usr/portage/net-misc}} . 

{| class="wikitable" style="text-align: left;" 
|- 
! Package
! Description
|- 
| net-misc/ipv6calc
| Converts an IPv6 address to a compressed format
|- 
| net-misc/netcat6
| netcat version that supports IPv6 and IPv4
|- 
| dev-perl/Socket6
| IPv6 related part of the C socket.h defines and structure manipulators
|-
|}

== Configuración DNS ==

=== IPv6 y DNS ===

Just as DNS for IPv4 uses A records, DNS for IPv6 uses AAAA records. (This is because IPv4 is an address space of 2^32 while IPv6 is an address space of 2^128). For reverse DNS, the INT standard is deprecated but still widely supported. ARPA is the latest standard. Support for the ARPA format will be described here. 

=== Configuración de BIND ===

Recent versions of BIND include excellent IPv6 support. This section will assume you have at least minimal knowledge about the configuration and use of BIND. We will assume you are not running bind in a chroot. If you are, simply append the chroot prefix to most of the paths in the following section. 

First you need to add entries for both forward and reverse DNS zone files in {{Path|/etc/bind/named.conf}} . 

{{Code|Entradas en named.conf|<pre>
## (Permitimos que bind escuche en direcciones IPv6.
## El uso de 'any' es la única forma de hacer esto antes de la versión bind-9.3)
options {
     [...]
     listen-on-v6 { any; }
     [...]
};
## (Esto proporcionará DNS directo para el dominio 'ipv6-rules.com':)
zone "ipv6-rules.com" IN {
     type master;
     file "pri/ipv6-rules.com";
};
## (El formato para DNS inverso está "orientado a bits". Se hace tomando el prefijo IPv6,
## invirtiendo el orden de los números y colocando un punto entre cada uno de ellos)
zone "6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa" {
     type master;
     file "pri/rev-ipv6-rules.com.arpa";
};
</pre>
}}

Ahora tenemos que crear esos archivos de zona y añadir entradas para todas nuestros equipos: 

{{Code|pri/ipv6-rules.com|<pre>
$TTL 2h
@    IN   SOA   ipv6-rules.com. webmaster.ipv6-rules.com. (
                2003052501   ; Número de Serie
                28800        ; Refresco
                14400        ; Reintentos
                3600000      ; Expiración
                86400 )      ; Mínimo
          NS    ns1.ipv6-rules.com
          IN    AAAA 2001:470:1f00:296::1 ; dirección para ipv6-rules.com
host1     IN    AAAA 2001:470:1f00:296::2 ; dirección para host1.ipv6-rules.com
host2     IN    AAAA 2001:470:1f00:296::3:3 ; dirección para host2.ipv6-rules.com
</pre>
}}

        <!-- Translated above -->

{{Code|pri/rev-ipv6-rules.com.arpa|<pre>
$TTL 3d ; Default TTL (bind 8 needs this, bind 9 ignores it)
@       IN SOA ipv6-rules.com. webmaster.ipv6-rules.com. (
                        2003052501      ; Serial number (YYYYMMdd)
                        24h             ; Refresh time
                        30m             ; Retry time
                        2d              ; Expire time
                        3d )            ; Default TTL
        IN      NS     ns1.ipv6-rules.com.
; IPv6 PTR entries
$ORIGIN 6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa.

1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     ipv6-rules.com.
2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     host1.ipv6-rules.com.
3.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     host2.ipv6-rules.com.
</pre>
}}

=== DJBDNS configuration ===

There are currently some third-party patches to DJBDNS available at [http://www.gentoo.org/ http://www.fefe.de/dns/] that allow it to do IPv6 nameserving. DJBDNS can be installed with these patches by emerging it with ''ipv6'' in your USE variables. 

{{Warning|Not all record types are support yet with these patches. In particular, NS and MX records are not supported.}}

{{Emerge|djbdns}}

After djbdns is installed, it can be setup by running <code>tinydns-setup</code> and answering a few questions about which IP addresses to bind to, where to install tinydns, etc. 

{{RootCmd|tinydns-setup}}

Assuming we've installed <code>tinydns</code> into {{Path|/var/tinydns}} , we can now edit {{Path|/var/tinydns/root/data}} . This file will contain all the data needed to get tinydns handling DNS for your IPv6 delegation. 

{{Code|sample data file|<pre>
## (*.ipv6-rules.com is authoritatively handled by 192.168.0.1)
.ipv6-rules.com:192.168.0.1:a:259200
## (Authoritative reverse DNS for 2001:470:1f00:296::/64)
.6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa:192.168.0.1:a
## (Specify the IPs for host1 and host2)
6host1.ipv6-rules.com:200104701f0002960000000000000001:86400
6host2.ipv6-rules.com:200104701f0002960000000000000002:86400
## (Point www to host1)
3www.ipv6-rules.com:200104701f0002960000000000000002:86400
</pre>
}}

Lines prefixed with a <code>6</code> will have both an AAAA and a PTR record created. Those prefixed with a <code>3</code> will only have an AAAA record created. Besides manually editing the {{Path|data}} file, you can use the scripts <code>add-host6</code> and <code>add-alias6</code> to add new entries. After changes are made to the {{Path|data}} file, you simply need to run <code>make</code> from {{Path|/var/tinydns/root}} . This will create {{Path|/var/tinydns/root/data.cfb}} , which tinydns will use as its source of information for DNS requests.

== Enrutador IPv6 ==

=== Configure routing ===

Further configuration is required if we want to use our system as a router for other clients wishing to connect to the outside world with IPv6. We need to enable forwarding of IPv6 packets. We can do this in one of two ways. 

Or we set the value 1 in the forwarding pseudo-file:
{{RootCmd|echo 1 > /proc/sys/net/ipv6/conf/all/forwarding}}

Or we use the <code>sysctl</code> command:

{{RootCmd|sysctl -w net.ipv6.conf.all.forwarding{{=}}1}}

{{Warning|The <code>radvd</code> init script explained in the next chapter enables (and disables) forwarding, making the next step unnecessary.}}

To enable forwarding at boot, you'll need to edit {{Path|/etc/sysctl.conf}} and add the following line. 

{{Code|sysctl.conf addition|<pre>
## (If you will be using radvd, this step is unnecessary)
net.ipv6.conf.default.forwarding=1
</pre>
}}

Traffic should now be forwarded from this box through the tunnel we've established with our broker. 

To assign IPv6 addresses to clients, the IPv6 specification allows for both stateless and stateful IP assignment. Stateless assignment uses a process called Router Advertisement and allows clients to obtain an IP and a default route by simply bringing an interface up. It is called "stateless" because there is no record of IPs assigned and the host they are assigned to. Stateful assignment is handled by DHCPv6. It is "stateful" because the server keeps a state of the clients who've requested IPs and received them. 

=== Stateless Configuration ===

Stateless configuration is easily accomplished using the Router Advertisement Daemon, or <code>radvd</code> . 

{{Emerge|radvd}}

After having emerged <code>radvd</code> , we need to create {{Path|/etc/radvd/radvd.conf}} that contains information about what IP block to assign IPs from. Here is a sample {{Path|radvd.conf}} file using the prefix we've been assigned from our tunnel broker. 

{{Code|Sample radvd.conf|<pre>
interface eth1
{
        ## (Send advertisement messages to other hosts)
        AdvSendAdvert on;
        ## (Fragmentation is bad(tm))
        AdvLinkMTU 1280;
        MaxRtrAdvInterval 300;
        ## (IPv6 subnet prefix we've been assigned by our PoP)
        prefix 2001:470:1F00:296::/64
        {
                AdvOnLink on;
                AdvAutonomous on;
        };
};
</pre>
}}

{{Warning|Make sure the interface on the first line is correct so you broadcast router advertisement to your intranet and not to your ISP!}}

Further information is available in <code>man radvd.conf</code> . We can now start <code>radvd</code> and set it to start at boot. 

{{RootCmd|/etc/init.d/radvd start
|rc-update add radvd default}}

=== Stateful Configuration ===

If you'd like to have stateful configuration, you'll need to install and configure <code>net-misc/dibbler</code> . 

{{Emerge|dibbler}}

Now we must configure the dibbler client by editing {{Path|/etc/dibbler/client.conf}} . 

{{Code|Sample dibbler client configuration|<pre>
iface ppp0 {
	rapid-commit yes
	pd
	option dns-server
}
</pre>
}}

We can now start the dibbler client, and configure it to start at boot. 

{{RootCmd|/etc/init.d/dibbler-client start
|rc-update add dibbler-client default}}

== Clientes IPv6 ==

=== Usar radvd ===

Los clientes detrás de este enrutador deberían poder conectarse al resto a través de la red vía IPv6. Si está usando radvd, la configuración de las equipos debería ser tan sencillo como activar el dispositivo de red.
(Probablemente ya lo hayan hecho sus guiones de inicio net.ethX). 

{{RootCmd|ip link set eth0 up
|ip addr show eth0|output=<pre>
1: eth0: <BROADCAST,MULTICAST,UP> mtu 1400 qdisc pfifo_fast qlen 1000
    link/ether 00:01:03:2f:27:89 brd ff:ff:ff:ff:ff:ff
    inet6 2001:470:1f00:296:209:6bff:fe06:b7b4/128 scope global
       valid_lft forever preferred_lft forever
    inet6 fe80::209:6bff:fe06:b7b4/64 scope link
       valid_lft forever preferred_lft forever
    inet6 ff02::1/128 scope global
       valid_lft forever preferred_lft forever
</pre>
}}

== Otros Recursos ==
Hay muchos los recursos excelentes en línea acerca de IPv6. 



{| class="wikitable" style="text-align: left;"
|-
! Sitios Web
! Recursos
|-
| [http://www.ipv6.org/ www.ipv6.org]
| Información General sobre IPv6
|-
| [http://www.linux-ipv6.org/ www.linux-ipv6.org/]
| Proyecto USAGI
|-
| [http://www.deepspace6.net/ www.deepspace6.net]
| Sitio Linux/IPv6
|-
| [http://www.kame.net/ www.kame.net]
| Implementation BSD
|-
|}

En IRC, puede probar <code>#ipv6</code> en [http://www.freenode.net/ Freenode]. Puede conectarse a los servidores de Freenode mediante un cliente IPv6 a través de '''irc.ipv6.freenode.net'''. 


== Agradecimientos ==

Nos gustaría dar las gracias a los siguientes autores y editores por sus contribuciones a esta guía:


* Peter Johanson
* Jorge Paulo
* Sven Vermeulen
* Camille Huot
* Pasi Valminen
* nightmorph
* hwoarang

[[Category:Network management]]
