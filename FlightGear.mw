= About FlightGear =
The FlightGear flight simulator project is an open-source, multi-platform, cooperative flight simulator development project.

= Installing FlightGear =
{{RootCmd|emerge flightgear}}

= Starting FlightGear =
The simulation can be started using a Window Manager's menu, however it's likely more preferrable to start FlightGear via the command line as there is more control over the options.  (ie. Aircraft models likely cannot be chosen easily once the simulation has started.)
 
== Basic Commandline Usage ==
{{Cmd|fgfs}}

== Advanced Commandline Usage ==
Show help messages:
{{Cmd|<nowiki>fgfs --help --verbose | less</nowiki>}}

Show a listing of available aircraft:
{{Cmd|<nowiki>fgfs --show-aircraft</nowiki>}}

Basic commandline incanatation (which is used within the Win32 build), adding geometry (use your own screen resolution) and timeofday options.
{{Cmd|<nowiki>fgfs --fg-root=/usr/share/games/flightgear --fg-scenery=/usr/share/games/flightgear/Scenery --aircraft=c172p-canvas --control=joystick --disable-random-objects --prop:/sim/rendering/random-vegetation=false --disable-ai-models --disable-ai-traffic --disable-real-weather-fetch --enable-clouds3d --enable-fullscreen --prop:/sim/frame-rate-throttle-hz=60 --geometry=1680x1050 --bpp=32 --timeofday=noon</nowiki>}}

=== Addtional Aircraft ===
Users can download additional (unsupported) aircraft models.  Once downloaded, extract the tarballs and use the following option:
{{Cmd|<nowiki>fgfs --fg-aircraft="${HOME}/.fgfs/my-extracted-aircraft-2.12.0</nowiki>}}

=== Additional Scenery ===
Users can download additional scenery or utilize terrasync.

Take note, there is currently no {{Path|/usr/share/games/flightgear/Scenery}} folder as noted by the previous incanatation.

Download the tarball scenery and extract into a local folder and use the following option:
{{Cmd|<nowiki>fgfs --fg-scenery="${HOME}/.fgfs/my-extracted-scenery-2.12.0/:/usr/share/games/flightgear/Scenery:${HOME}/.fgfs/my-terrasync"-2.12.0</nowiki>}}

==== Terrasync ====
To enable Terrasync, use the following while remembering to add the folder to the <nowiki>--fg-scenery</nowiki> list of folders, as already specified above.  (Unknown if specifying the additional Terrasync folder within fg-scenery is necessary.)
{{Cmd|mkdir ${HOME}/.fgfs/my-terrasync-2.12.0}}
{{Cmd|<nowiki>fgfs --enable-terrasync --terrasync-dir=${HOME}/.fgfs/my-terrasync-2.12.0 --fg-scenery=${HOME}/.fgfs/my-terrasync"-2.12.0</nowiki>}}

== Scripting Command Line Options ==
After awhile, it becomes more desirable to automate much of these commands per scenario.  It's nice to already have script files for different scenarios, named such as {{Path|fgfs.sh}}, {{Path|fgfs-mp.sh}} and {{Path|fgfs-debug.sh}} to respectively start in single player, multiplayer or debug modes.

For example, to start a FlightGear multiplayer session more easily:
{{File|${HOME}/bin/fgfs-mp.sh||<pre>
#!/bin/bash
# Airports
# KPDX Portland Intl
# KLAX Los Angeles Intl
# PFAI Fairbanks Int
# KSFO San Fransisco, CA

# Aircraft
# 777-300
# c172p-canvas
# CitationX

/usr/games/bin/fgfs \
    --aircraft=c172p-canvas \
    --browser-app=/usr/bin/seamonkey \
    --callsign=BIGBIRD \
    --control=joystick \
    --disable-terrasync \
    --enable-game-mode \
    --enable-real-weather-fetch \
    --fg-root=/usr/share/games/flightgear \
    --multiplay=out,10,mpserver16.flightgear.org,5000 \
    --prop:/sim/rendering/multithreading-mode=AutomaticSelection \
    --prop:/sim/rendering/shaders/quality-level=0 \
    --prop:/sim/rendering/texture-compression=off \
    --log-level=alert \
    --units-feet
</pre>}}

Make the file executable and then easily run it whenever you want.  If you need to modify your options, you easily do so by editing the commented script file!
{{Cmd|<nowiki>chmod u+x ${HOME}/bin/fgfs-mp.sh</nowiki>}}
{{Cmd|./bin/fgfs-mp}}

(Omit the "./" if your "${HOME}/bin" is already within your $PATH.)

= TrackIR =
TrackIR is head tracking hardware and software for tracking slight head movements to extend your display within 3D environments.  This solution is most often utilized within flight simulation and definitely increases the experience of the simulation from my own experience.

Although TrackIR should have it's own Gentoo Wiki page, I'm going to initiate some of the TrackIR documentation here.  If I'm not mistaken, seems to coincide with the history of development of the TrackIR FlightGear plugin as well.

{{Note|I'm within the process of creating a linuxtrack Ebuild file for Gentoo.  If for some reason the process stalls, users shall have the information they need to continue or pursue on their own.}}

See Gentoo Bug [http://bugs.gentoo.org/show_bug.cgi?id=489324 489324].  Happy Head Tracking! ;-)

If you do not have a TrackIR device, the most current one sold is the "TrackIR 5".  All that is needed is a ballcap for the reflective clip device that accompanies the TrackIR device.  If you fly simulators quite often, it's a really nifty device even if you are pretty good at using a joystick hat for moving your view around.

== Install ==
TrackIR for Linux can be downloaded from http://linuxtrack.eu/repositories/universal/ or SVN at http://code.google.com/p/linux-track/source/checkout.  Compile and install locally, else wait for an Ebuild to be imported into Portage, and shortly I hope!

Basic compile time dependencies, of which "dev-libs/mini-xml" is missing for the QT GUI interface.  So make sure you have mini-xml installed before compiling the linuxtrack sources.  (Bug reported upstream and likely on the TODO list.)

== Configure ==
The TrackIR hardware first needs to have it's device firmware extracted from the Windows binaries and a configure file needs to be written before simply utilizing the ltr_pipe command line tool.

There is also a run-time dependency of using Wine to extract the firmware.  So make sure you have Wine preinstalled prior to running ltr_gui.  Once you have compiled & installed linuxtrack, start the ltr_gui and install your device firmware accordingly using the GUI frontend.  Once completed, initialize the device (start), save and exit.  Make sure all your settings are set to your liking, however default seems desirable for most applications.

== Using ltr_pipe ==
The following is all that is really needed to see output once you have performed the previous instructions.
{{Cmd|ltr_pipe}}

From here, read the linuxtrack/doc/README.ltr_pipe on how to further setup with FlightGear.

{{Note|The developer has just informed that he has linuxtrack working without even using Nasal.  An easier method?}}

= Known Problems =
== Poor Frame Rates Compared to Win32 Build's Frame Rates ==
The default "c172p" aircraft model seems to cause significant frame rate loss.  Choosing another aircraft model such as the 
"c172p-canvas" alleviates this problem.

{{Cmd|<nowiki>fgfs --aircraft=c172p-canvas</nowiki>}}
