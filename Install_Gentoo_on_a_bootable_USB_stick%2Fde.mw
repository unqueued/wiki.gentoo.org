<languages />
Das Booten von Gentoo auf einem USB Stick ist wirklich sehr einfach. Die Hauptherausforderung dabei ist, eine initiale Ramdisk zu erstellen und alle Treiber von den Geräten einzufügen, für welche man es verwenden möchte. Dieser Artikel soll beschreiben, wie man Gentoo auf einem USB Stick installieren kann, sodass es auf jedem Computer booten kann.
Diese Installation wird wie eine normale Desktopinstallation sein und Änderungen werden
bleiben.

== Vorbereitung ==

{{Note|Diese Anleitung nimmt an, dass die verwendete Plattform Gentoo Linux ist. Die meisten
Arbeitsschritte können allerdings bei jeder Distribution gemacht werden. Übersetze einfach die Art und Weise von Gentoo, bestimmte Dinge zu tuen, in die einer Anderen Distribution (wie z.B. das Installieren von Software)}}

Wir beginnen damit, einige notwendige Pakete zu installieren. Die wichtigsten von diesen sind
der Kernel und das {{package|sys-kernel/genkernel}} Paket.

{{emerge|sys-kernel/gentoo-sources sys-kernel/genkernel}}

Um Paket-spezifische Useflags hinzuzufügen, erstelle folgende Datei
{{path|/etc/portage/package.use/}}:

{{FileBox|filename=/etc/portage/package.use/sys-apps|1=
sys-apps/busybox static
}}

Als nächstes installiere {{Package|sys-apps/busybox}}:

{{emerge|sys-apps/busybox}}

Kompilierung des Kernels

Mache die notwendigen Änderungen am Kernel und compiliere ihn. 
Schaue bitte bei [[Handbook:AMD64/Installation/Kernel|Configuring the Linux kernel]]
und [[Kernel/Configuration|kernel configuration guide]] nach, für mehr Details.
Denke daran, dass eine generelle Kernel hier angebrachter ist, weil Gentoo dann auf mehr Maschinen booten wird.

Während der Konfiguration ist es möglich, Module zu compilieren und diese dann zu der
[[initramfs]] hinzuzufügen und sie dadurch beim booten zu laden.

{{RootCmd|mkdir /tmp/boot
|genkernel --firmware --busybox --disklabel --bootdir{{=}}/tmp/boot --no-symlink --all-ramdisk-modules --install all
}}

Dieser Befehl wird einige Zeit in Anspruch nehmen, weil er den Ausgangskernel baut,
eine Ramdisk erstellt und alle Dateien in {{path|/tmp/boot}} kopiert.

{{RootCmd|ls /tmp/boot/
|output=<pre>
initramfs-genkernel-x86_64-3.5.2-gentoo
kernel-genkernel-x86_64-3.5.2-gentoo
System.map-genkernel-x86_64-3.5.2-gentoo
</pre>}}

Vorbereiten des USB Sticks

Erstelle 2 Partitionen auf dem Stick (ausgehend davon, dass die Installation eine {{path|/boot}}
und eine {{path|/}}(root) Partition hat). Wir nehmen an, dass das USB Stick {{path|/dev/sdb}} ist (führe <tt>dmesg</tt> nach dem einstecken des USB Sticks aus, um zu sehen, welches Gerät verwendet wird) .

{{RootCmd|fdisk /dev/sdb|output=<pre>
Command (m for help): d
Selected partition 1
 
Command (m for help): n
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p): p
Partition number (1-4, default 1): 1
First sector (2048-4001759, default 2048): 
Using default value 2048
Last sector, +sectors or +size{K,M,G} (2048-4001759, default 4001759): +100M
 
Command (m for help): n
Partition type:
   p   primary (1 primary, 0 extended, 3 free)
   e   extended
Select (default p): p
Partition number (1-4, default 2):  
Using default value 2
First sector (206848-4001759, default 206848): 
Using default value 206848
Last sector, +sectors or +size{K,M,G} (206848-4001759, default 4001759): 
Using default value 4001759
 
Command (m for help): a
Partition number (1-4): 1
 
Command (m for help): p
 
Disk /dev/sdb: 2048 MB, 2048901120 bytes
255 heads, 63 sectors/track, 249 cylinders, total 4001760 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x001663df
 
   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1   *        2048      206847      102400   83  Linux
/dev/sdb2          206848     4001759     1897456   83  Linux
 
Command (m for help): w
The partition table has been altered!
 
Calling ioctl() to re-read partition table.
Syncing disks.
</pre>}}

Stelle sicher, dass die erste Partition bootfähig ist (ein Befehl wechselt das Bootflag)

Formatiere nun die neuen Partitionen. In diesem Beispiel nutzen wir das ext2 Dateisystem, aber
für die {{Path|/}} Partition kann auch ein anderes verwendet werden, sofern es vom Kernel unterstützt wird. Beachte, dass während der Formatierungsoperation, ein Label der Partition zugewiesen wurde. Das ist wichtig, weil es einstellt, wie das Rootdateisystem später ermittelt wird und das USB Stick auch auf Systemen booten kann, wo die Laufwerksbuchstabenzuweisung völlig anders ist.
Das ist so ähnlich wie die <code>--disklabel</code> Option von dem <tt>genkernel</tt> Befehl, welchen wir vorher hatten.

{{RootCmd|mkfs.ext2 -L GENTOO_USB_BOOT /dev/sdb1
|mkfs.ext2 -L GENTOO_USB_ROOT /dev/sdb2}}

Gentoo stage 3 Installation

Wenn nun der Kernel, die Ramdisk und das Dateisystem bereit sind, müssen wir die minimale Installation ausführen. Dazu gehört ein frisches stage3 als auch ein Portage tree snapshot.

* [http://distfiles.gentoo.org/releases/amd64/autobuilds/current-stage3-amd64/ current-stage3]
* [http://distfiles.gentoo.org/releases/snapshots/current/portage-latest.tar.xz portage-latest]

Für dieses Beispiel wird {{Path|stage3-amd64-20120621.tar.bz2}} und {{Path|portage-latest.tar.xz}} genutzt. Das nächste Stück ist das Selbe wie in dem Handbuch zur Gentooinstallation beschrieben.

{{RootCmd|mount /dev/sdb2 /mnt/gentoo
|cd /mnt/gentoo
|tar -xpf ~/Download/stage3-amd64-20120621.tar.bz2
|cd usr
|tar -xpf ~/Download/portage-latest.tar.xz
|mount /dev/sdb1 /mnt/gentoo/boot
|cp /tmp/boot/* /mnt/gentoo/boot}}

Der nächste Teil beinhaltet die Stücke einer Gentooinstallation, welche speziell für die Installation auf einem USB Stick sind. Es wird geraten, das [[Handbook:Main_Page|Gentoo handbook]]
zugleich mit dem beachten dieser Informationen zu nutzen.

Bootloader

Um das neue System zu booten, muss der Bootloader auf dem USB Stick installiert werden.

Die folgenden Abschnitte sind ein Beispiel für die Konfiguration von [[lilo]] und [[syslinux]].

Lilo

Emerge [[lilo]] (in der Chrootumgebung)

{{RootCmd|prompt=(chroot) #|emerge sys-boot/lilo}}

Bearbeite {{path|etc/lilo.conf}}, sodass es die richtigen Informationen enthält.

{{Warning|Diese Einstellungen sind sehr wichtig und werden nun Zeile für Zeile betrachtet.}}

{{FileBox|filename=/etc/lilo.conf|title=Configure lilo.conf|1=
boot=/dev/sdb              # The location of the USB Stick (currently)
lba32                      # use lba32 addressing (ignore)
compact                    # boot quickly by loading lots of blocks
                           # remove when there are problems with booting
prompt                     # Prompt for user input
timeout=20                 # Time to wait before default selection
default="Gentoo-352"       # Default selection after timeout
  
image=/boot/kernel-genkernel-x86_64-3.5.2-gentoo
	label="Gentoo-352"
	read-only
	root=/dev/ram0
	append="real_root=LABEL=GENTOO_USB_ROOT scandelay=5"
	initrd=/boot/initramfs-genkernel-x86_64-3.5.2-gentoo
}}

Die Zeilen nach image sind alle einfach, aber die angefügte Zeile enthält interessante Informationen.

* <code>real_root=LABEL=GENTOO_USB_ROOT</code> nutzt das Label der Partition 
statt {{path|/dev/sdb2}}. Das ist wichtig, weil die Gerätenummer sich ändert, je nachdem wie viele Geräte an den Computer angeschlossen sind. 
* Außerdem ist es wichtig, damit das USB bootet, dass die <code>scandelay</code> Option verwendet wird, weil das USB Stick etwas Zeit braucht, um von der Kernel erkannt zu werden.
Wenn viele Module verwendet werden, dauert es eine weile zum Booten, aber wenn es nur wenige sind, ist es wichtig, weil das System dann gebootet haben könnte, bevor die Kernel die das USB Stick erkennt. Außerdem ist es bei neueren Maschinen mit USB3 Controller nötig, dass der <tt>xhci_hcd</tt> Treiber hinzugefügt wird (in den Kernel eingebaut oder als Modul).

Now install LILO (with the configuration) on the USB stick:

{{RootCmd|prompt=(chroot) #|lilo|output=<pre>
Warning: /dev/sdb is not on the first disk
Warning: The initial RAM disk is too big to fit between the kernel and
   the 15M-16M memory hole.  It will be loaded in the highest memory as
   though the configuration file specified "large-memory" and it will
   be assumed that the BIOS supports memory moves above 16M.
Added Gentoo-352 ? *
2 warnings were issued.</pre>}}

The first warning is to be expected as we are not installing the boot loader onto the hard disk in the computer. The second warning will only cause a problem on machines that are old; if it is a problem try cutting down the kernel by removing modules.

==== syslinux ====

{{Warning|syslinux currently only works with ext{2,3,4}, btrfs, ntfs and fat filesystems.}}

{{RootCmd|prompt=(chroot) #|emerge syslinux}}

Put the boot sector onto the USB stick.

{{RootCmd|prompt=(chroot) #|dd bs{{=}}440 count{{=}}1 conv{{=}}notrunc if{{=}}/usr/share/syslinux/mbr.bin of{{=}}/dev/sdb}}

Now to configure the bootloader.

{{RootCmd|prompt=(chroot) #|mkdir /boot/syslinux|nano -w /boot/syslinux/syslinux.cfg}}

{{FileBox|filename=/boot/syslinux/syslinux.cfg|1=
PROMPT 1
TIMEOUT 50
DEFAULT gentoo
 
LABEL gentoo
        LINUX ../kernel-genkernel-x86_64-3.5.2-gentoo
        APPEND root=LABEL=GENTOO_USB_ROOT scandelay=3 ro
        INITRD ../initramfs-genkernel-x86_64-3.5.2-gentoo
}}

{{Note|The <code>ro</code> in the above <code>APPEND</code> line will cause the root partition to be mounted read-only (which is usually preferred on USB sticks). Replace <code>ro</code> with <code>rw</code> to allow the system to be modified from the boot onwards (instead of having the user mount the file system as read-write later).}}

Next install syslinux onto the USB stick. The <code>--device /dev/sdb1</code> option is not absolutely necessary though.

{{RootCmd|prompt=(chroot) #|extlinux --device /dev/sdb1 --install /boot/syslinux}}

=== fstab ===

{{FileBox|filename=/etc/fstab|title=Configure the fstab to work with labels|1=
LABEL=GENTOO_USB_BOOT   /boot           ext2            noauto,noatime  1 2
LABEL=GENTOO_USB_ROOT   /               ext2            noatime         0 1
/dev/SWAP               none            swap            sw              0 0
/dev/cdrom              /mnt/cdrom      auto            noauto,ro       0 0
/dev/fd0                /mnt/floppy     auto            noauto          0 0
}}

Tipps und Tricks

Although it is possible to use the system just made as a standard Gentoo system, it might be worthwhile to compile binary packages on a host and then installing them on the USB stick. Or if the system has enough memory just mount {{Path|/var/tmp}} to a tmpfs, as compilation will be much quicker that way anyway!


[[Category:Core system]]
