<languages />

<translate>

<!--T:76-->
{{Metadata|abstract=In recent years, power management has become one of the differentiating features in the quest for finding the perfect laptop. Yet, the operating system must support the various power saving functionalities too. In this guide, we cover how to setup a Gentoo installation so it manages power-hungry resources in a flexible yet automated manner.}}

<!--T:1-->
In recent years, power management has become one of the differentiating features in the quest for finding the perfect laptop. Yet, the operating system must support the various power saving functionalities too. In this guide, we cover how to setup a Gentoo installation so it manages power-hungry resources in a flexible yet automated manner.

== Introduction == <!--T:2-->

=== About this document... === <!--T:3-->

<!--T:4-->
This document describes the setup of power management features for laptops. Although some of the information in this guide can be applied to power management for servers, it is not the intention of this document to go that route. Please be careful when applying this on a non-laptop system. 

<!--T:5-->
Within this document, the primary focus will be on laptop mode tools since it offers a complete set of functionalities. However, we will also refer to other tools that might offer a more detailed approach on individual settings. In such cases, the feature from the laptop mode tools must be disabled so that both tools do not fight over the same resource control. 

=== About laptop_mode === <!--T:6-->

<!--T:7-->
The laptop_mode setting is an in-kernel configuration setting that optimizes I/O, allowing disks to spin down properly (and not be woken up immediately afterwards for queued operations). 

=== About laptop-mode-tools === <!--T:8-->

<!--T:9-->
The ''Laptop Mode Tools'' is a software package ({{Package|app-laptop/laptop-mode-tools}}) which allows the user to optimize power saving functions. It allows managing the laptop_mode setting in the Linux kernel, but has additional features that allow the tweaking of other power-related settings on the system.

== Linux kernel configuration == <!--T:10-->

=== Minimum kernel setup === <!--T:11-->

<!--T:12-->
There are different kernel sources in Portage. We recommend using {{Package|sys-kernel/gentoo-sources}}, but if advanced hibernation support is desired, {{Package|sys-kernel/tuxonice-sources}} might be needed. To enable proper power management features in the Linux kernel, enable the following settings: 

<!--T:13-->
{{KernelBox|title=Minimum kernel setup for Power Management|1=<pre>
Power management and ACPI options --->
  -*- Device power management core functionality
  [*] ACPI (Advanced Configuration and Power Interface) Support --->
    <*> AC Adapter
    <*> Battery
    -*- Button
    -*- Video
    <*> Fan
    <*> Processor
    <*> Thermal Zone
  
  [*] CPU Frequency scaling --->
        Default CPUFreq governor (ondemand)  --->
    -*- 'performance' governor
    <*> 'powersave' governor
    <*> 'userspace' governor for userspace frequency scaling
    -*- 'ondemand' cpufreq policy governor
    <*> 'conservative' cpufreq governor
    <*> ACPI Processor P-States driver
</pre>}}

<!--T:14-->
Do not forget to enable the CPU frequency scaling driver for the CPU. For the SandyBridge and higher Intel core series of processors, ''userspace'', ''ondemand'', and ''conservative'' governors are unnecessary; ''performance'' should be selected as the default, and ''Intel P state control'' should be selected instead of ''ACPI Processor P-States driver''. <ref>Dominik Brodowski. [https://www.kernel.org/doc/Documentation/cpu-freq/intel-pstate.txt Intel P-State driver], [https://www.kernel.org/doc/Documentation/cpu-freq/index.txt CPU frequency and voltage scaling code in the Linux(TM) kernel]. Retrieved 12 June 2016.</ref>

<!--T:78-->
For a more detailed description see the [[Power management/Processor#Kernel]] article.

<!--T:15-->
[[Kernel/Rebuild|Build and install]] the new kernel (if necessary) and reboot.

== Using Laptop Mode Tools == <!--T:16-->

=== Installation === <!--T:17-->

<!--T:18-->
It comes to no surprise that installation of the ''Laptop mode tools'' software is easily done via:

<!--T:81-->
{{Emerge|app-laptop/laptop-mode-tools}}

<!--T:82-->
However, this package takes on additional, optional settings through USE flag configuration. So let's first take a look at the supported USE flags and what they mean to the package. 

<!--T:19-->
{| class="table table-striped table-condensed" style="text-align: left;" 
|- 
! USE flag
! Description
! Suggested when...
|- 
| <code>acpi</code>
| Depend on {{Package|sys-power/acpid}} so that changes in the system are captured and power saving features are automatically enabled/disabled.
| the laptop is not too old (around year 2003 and later).
|- 
| <code>apm</code>
| Depend on {{Package|sys-apps/apmd}} so that changes in the system are captured and power saving features are automatically enabled/disabled.
| the laptop is very old.
|- 
| <code>bluetooth</code>
| Depend on {{Package|net-wireless/bluez}} , enabling laptop-mode-tools to manage bluetooth settings (enabling/disabling the service based on battery availability)
| the laptop (and kernel) support bluetooth.
|- 
| <code>scsi</code>
| Depend on {{Package|sys-apps/sdparm}} , enabling laptop-mode-tools to manage SCSI (''and not'' SATA) disk parameters.
| the laptop uses SCSI disks.
|-
|}

<!--T:20-->
Observe there are two USE flags that seem to collide: <code>acpi</code> and <code>apm</code>. So what is the deal? 

<!--T:21-->
* The <code>apm</code> USE enables support for ''Advanced Power Management'' , an older (before year 2000) standard for power management features within a system.
* The <code>acpi</code> USE enables support for ''Advanced Configuration and Power Interface'' , the successor of APM. All modern laptops support ACPI.

<!--T:22-->
Depending on the system, either <code>acpi</code> or <code>apm</code> will need to be set. In the remainder of this guide, it is assumed the laptop is recent enough to use ACPI. 

<!--T:23-->
So, with the USE flags set, install laptop-mode-tools:

<!--T:25-->
{{Emerge|laptop-mode-tools}}

=== Configuration === <!--T:26-->

<!--T:27-->
Having laptop-mode-tools installed on the system does not automatically enable the power management features that may be needed. To configure the package, first take a look at {{Path|/etc/laptop-mode/laptop-mode.conf}}. This is the main configuration file for the package and is pretty well described (through comments). 

<!--T:28-->
But it is not the only configuration file to work with. The laptop-mode-tools package supports plugins (or modules) which have their own configuration file(s). These files are located in {{Path|/etc/laptop-mode/conf.d}} and are named after the module they represent (such as {{Path|intel-sata-powermgmt.conf}}). 

<!--T:29-->
Now, one of the important settings in each configuration file is if the laptop-mode-tools package should govern a particular setting or not. This is important when combining laptop-mode-tools with other power management services such as {{c|cpufreqd}}. In this example case, <code>CONTROL_CPU_FREQUENCY=0</code> must be set: 

<!--T:30-->
{{FileBox|filename=/etc/laptop-mode/conf.d/cpufreq.conf|1=
CONTROL_CPU_FREQUENCY=0
}}

<!--T:31-->
The next few sections will help the user configure laptop-mode-tools to suit specific needs. When finished, start the laptop_mode service and make sure it is started upon system boot. 

<!--T:88-->
With OpenRC:

<!--T:32-->
{{RootCmd
|rc-service laptop_mode start
|rc-update add laptop_mode default
}}

<!--T:89-->
With systemd:

<!--T:90-->
{{RootCmd
|systemctl laptop-mode.service enable --now
}}

=== How does laptop-mode-tools work === <!--T:33-->

<!--T:34-->
When running the laptop_mode service, the software will check in which state the system is in. The states are defined as: 

<!--T:35-->
*  ''Battery'', which is active when the system is running on battery power; the configuration files use the <code>BATT_</code> prefix for settings related to this state;
*  ''AC'', which is active when the system is running on AC power; the configuration files use the <code>AC_</code> prefix for settings related to this state;
*  ''Laptop Mode'', which is active when ''laptop mode'' is enabled; the configuration files use the <code>LM_</code> prefix for settings related to this state;
*  ''No Laptop Mode'', which is active when ''laptop mode'' is disabled; the configuration files use the <code>NOLM_</code> prefix for settings related to this state.

<!--T:36-->
The <var>AC/BATT_</var> and <var>LM/NOLM_</var> prefixes can be combined to have a <var>AC_LM_</var> prefix. 

<!--T:37-->
When the laptop_mode service is started, it will switch modes based on events that occur (and of course based on the configuration settings). For instance, the setting <code>ENABLE_LAPTOP_MODE_ON_BATTERY=1</code> will make sure that the laptop mode tools switch to ''laptop mode'' when battery power is used. If that is the case, then the settings starting with <code>LM_</code>, <code>LM_BATT_</code>, <code>BATT_LM_</code>, and <code>BATT_</code> will be used. 

<!--T:38-->
To make sure settings do not collide, it is not allowed to have overlapping settings. In the next example, the first set (for <code>CPU_MAXFREQ</code>) is valid, but the second one (for <code>CPU_GOVERNOR</code>) is not. 

<!--T:39-->
{{CodeBox|title=Colliding settings|1=
## Valid set
BATT_CPU_MAXFREQ=fastest
LM_AC_CPU_MAXFREQ=fastest
NOLM_AC_CPU_MAXFREQ=fastest
  
## Invalid set
BATT_CPU_MINFREQ=fastest
LM_AC_CPU_MINFREQ=fastest
# The following includes AC and BATT, but BATT is already defined
NOLM_CPU_MINFREQ=fastest
}}

=== Configuring CPU frequency management === <!--T:40-->

<!--T:41-->
The support for CPU frequency management in the laptop mode tools allows switching frequencies. It supports setting the CPU frequency governor, minimum frequency and maximum frequency. The configuration file used here is {{Path|/etc/laptop-mode/conf.d/cpufreq.conf}}

<!--T:42-->
The ''CPU frequency governor'' is a kernel-level policy that defines how the kernel will select the CPU frequency. We already selected the governors we want to use in the kernel configuration earlier. Let's recap: 

<!--T:43-->
*  <code>performance</code> always picks the highest frequency;
*  <code>powersave</code> always picks the lowest frequency;
*  <code>userspace</code> does not pick anything, but lets the user decide (or any process that the user is running that will decide for the user);
*  <code>ondemand</code> will scale the CPU frequency up to the highest frequency when load is available;
*  <code>conservative</code> will scale the CPU frequency up gradually when load is available.

<!--T:44-->
When switching between AC or battery, or (no) laptop mode, the appropriate governor (as well as its minimum and maximum frequency) is selected. 

=== Configuring display brightness === <!--T:45-->

<!--T:46-->
With {{Path|/etc/laptop-mode/conf.d/lcd-brightness.conf}}, the laptop mode tools can govern the brightness of the LCD screen. 

<!--T:47-->
The file currently uses the {{Path|/proc/acpi/video/VID/LCD/brightness}} file ([https://bugs.gentoo.org/show_bug.cgi?id=499544 bug 499544]) to set brightness values. Recent kernels do not provide this anymore; it will need to adjust this to {{Path|/sys/class/backlight/acpi_video0/brightness}} instead. 

<!--T:48-->
The possible values that can be used are between 0 and the value in {{Path|/sys/class/backlight/acpi_video0/max_brightness}}, with 0 being the lowest brightness value.

=== Configuring other services === <!--T:49-->

<!--T:50-->
An interesting feature of laptop-mode-tools is to support reloading particular services (like the system logger) after switching its configuration file. This is handled through {{Path|/etc/laptop-mode/conf.d/configuration-file-control.conf}} 

<!--T:51-->
If enabled, the laptop_mode application will switch the configuration file(s) of the mentioned services with the same file, but suffixed with {{Path|-nolm-ac}} , {{Path|-lm-ac}} or {{Path|-batt}}. It will then signal or reload the appropriate services so they can use the new configuration file. 

== Using cpufreqd == <!--T:52-->

<!--T:77-->
{{Warning|Package {{Package|sys-power/cpufreqd}} is deprecated and has been removed from the Portage tree. {{Package|sys-power/ncpufreqd}} can still be used for [https://bitbucket.org/nelchael/ncpufreqd 2.6.x kernels].
}}

=== Installation === <!--T:53-->

<!--T:54-->
The {{c|cpufreqd}} application allows the user to manage CPU frequencies in a more granular approach than what laptop-mode-tools supports. But before we dive into the installation of {{c|cpufreqd}}, let us first look at the USE flags it supports. 

<!--T:55-->
{| class="table table-striped table-condensed" style="text-align: left;" 
|- 
! USE flag
! Description
! Suggested when...
|- 
| <code>acpi</code>
| Enable support for ACPI, allowing {{c|cpufreqd}} to be notified about specific events as well as govern power through the ACPI interface
| the laptop is not very old (around year 2003 and later)
|- 
| <code>apm</code>
| Enable support for APM, allowing {{c|cpufreqd}} to be notified about specific events as well as govern power through the APM interface
| the laptop is very old
|- 
| <code>lm_sensors</code>
| Enable support for the Linux hardware sensors (through {{Package|sys-apps/lm_sensors}}), allowing to switch profiles based on hardware sensor results
| using advanced events through lm_sensors
|- 
| <code>nforce2</code>
| Enable support for NForce, allowing {{c|cpufreqd}} to change the NForce FSB clock and video card frequency
| an NVidia graphics card based on the NForce chipset is present
|- 
| <code>nvidia</code>
| Enable support for NVidia graphical card configuration (through the NVidia ''nvclock'' interface), allowing {{c|cpufreqd}} to change the video card frequency of NVidia graphical cards
| an NVidia graphics card is present
|- 
| <code>pmu</code>
| Enable the Power Management Unit plug-in of {{c|cpufreqd}}. This allows the software to poll the Linux kernel Power Supply interface, getting more detailed information on battery charge
| the laptop does not support ACPI or APM
|-
|}

<!--T:56-->
The <code>acpi</code>, <code>apm</code>, and <code>pmu</code> USE overlap, so only one should be active. If the laptop is sufficiently recent, <code>acpi</code> is the best bet. If not, <code>apm</code> offers all that is needed. When even APM isn't supported, try using <code>pmu</code>. 

<!--T:57-->
With the USE flags configured, it is time to install {{c|cpufreqd}}. 

<!--T:58-->
{{Emerge|cpufreqd}}

=== Configuration === <!--T:59-->

<!--T:60-->
The {{c|cpufreqd}} application monitors the status of the system through several plugins. Based on the feedback it receives from those plugins, it will adjust the policy used to govern the CPU frequency. 

<!--T:61-->
{{c|cpufreqd}} can be configured by editing {{Path|/etc/cpufreqd.conf}}. It contains three different sections: 

<!--T:62-->
# The <code>[General]...[/General]</code> section contains general configuration information.
# The <code>[Profile]...[/Profile]</code> section defines the policies that the cpufreqd daemon can switch to. The section is very similar to the information used when manually setting the CPU frequency policy using cpufreq-set.
# The <code>[Rule]...[/Rule]</code> section is the work-horse of the cpufreqd daemon, defining when the daemon decides to switch to a different profile.

<!--T:63-->
Take a quick look at an example rule. 

<!--T:64-->
{{FileBox|filename=/etc/cpufreqd.conf|title=Sample cpufreqd rule|1=
[...]
  
[Profile]
name=On Demand High
minfreq=40%
maxfreq=100%
policy=ondemand
[/Profile]
  
[Rule]
name=AC Off - High Power
ac=off
battery_interval=70-100
profile=On Demand High
[/Rule]
  
[...]
}}

<!--T:65-->
In the above example, {{c|cpufreqd}} will switch the system to the ''On Demand High'' profile (also shown in the above excerpt). This profile by itself uses the ondemand governor with a minimum frequency of 40% (iow, a CPU of 2 GHz will have by this policy a minimum frequency of 800 MHz). 

<!--T:66-->
The {{c|cpufreqd}} application can offer a more granular approach on CPU frequency scaling. But not only that, but the CPU frequency scaling can be tweaked based on various other metrics available. The default configuration offers a sample rule: when a movie is watched, maximum performance is desired (unless the CPU temperature is getting too high). 

<!--T:67-->
When {{c|cpufreqd}} has been configured, it is time to start it (and make sure the service is loaded automatically). Make sure that CPU frequency handling by other tools (like laptop-mode-tools) is disabled! 

<!--T:68-->
{{RootCmd
|rc-update add cpufreqd default
|/etc/init.d/cpufreqd start
}}

== See also == <!--T:83-->

<!--T:84-->
* [[USB Power Saving]]

== External resources == <!--T:69-->

<!--T:85-->
*  [http://samwel.tk/laptop_mode/ Laptop Mode Tools Homepage], includes [http://samwel.tk/laptop_mode/laptop_mode About laptop mode].
*  [https://01.org/powertop PowerTOP], an interactive application helping users to find out which processes are forcing wakeups on the CPU most often.
* A ThinkWiki article on [http://www.thinkwiki.org/wiki/How_to_reduce_power_consumption How to reduce power consumption] (on Linux). This article offers an exhaustive list of measures one can take. However, it should be noted that the laptop mode tools implements the majority of these (if properly configured).

== References == <!--T:86-->

<!--T:87-->
{{reflist}}

</translate>

[[Category:Power management]]
