<languages />


<div class="mw-translate-fuzzy">
{{Metadata|abstract=この文書はGentoo LinuxのXorgでDRMを使用して3Dアクセラレーションを動作させるためのガイドです。}}
</div>

<div class="mw-translate-fuzzy">
この文書はGentoo LinuxのXorgでDRMを使用して3Dアクセラレーションを動作させるためのガイドです
</div>

== はじめに ==

=== ハードウェア3Dアクセラレーションとは何ですか、またどうしてそれが必要なのですか？ ===

<div class="mw-translate-fuzzy">
ハードウェア3Dアクセラレーションを利用すると3D画像の描画に貴重なCPU資源を奪う代わりにグラフィックカード上のGPUを使用して3Dレンダリングします。これはまた、ハードウェア3Dアクセラレーション無しではあなたのCPUは処理能力をかなり取り上げるMesaソフトウェアレンダリングライブラリを使用して描画することを強いられるため、ソフトウェアアクセラレーションの代わりにハードウェアアクセラレーションと呼ばれます。Xorgは2Dハードウェアアクセラレーションを一般的にサポートしていますが、3Dアクセラレーションはしばしば不足しています。3Dハードウェアアクセラレーションは3Dオブジェクトをレンダリングする必要があるゲーム、3D CAD、モデリングなどの状況で有用です。
</div> 

While Xorg typically supports 2D hardware acceleration, it often lacks hardware 3D acceleration. Three-dimensional hardware acceleration is valuable in situations requiring rendering of 3D objects such as games, 3D CAD, and modeling.

<div class="mw-translate-fuzzy">
=== どうすればハードウェア3Dアクセラレーションが動作しますか？ ===
</div>

<div class="mw-translate-fuzzy">
多くの場合、バイナリドライバとオープンソースドライバが存在します。オープンソースドライバは、私たちはLinuxを使っていてオープンソースであることはその根本原則の一つであるのでより望ましいです。時にはバイナリドライバが唯一の選択肢となる場合があります。特にあなたのグラフィックカードが新しく、そのカードの機能をサポートするオープンソースドライバが書かれていない場合などです。nVidiaのグラフィックカードのバイナリドライバは {{Package|x11-drivers/nvidia-drivers}} に、AMD/ATIのグラフィックカードのバイナリドライバは {{Package|x11-drivers/ati-drivers}} にあります。
</div>

=== DRIとは何ですか？ ===

<div class="mw-translate-fuzzy">
[http://dri.freedesktop.org/wiki/ ダイレクト・レンダリング・インフラストラクチャ]はDRIとして知られる、グラフィックハードウェアに安全、効率的に直接アクセスすることが出来るフレームワークです。それはXサーバ、いくつかのクライアントライブラリ、カーネルへの変更を含みます。DRIの一番主要な利用法は高速なOpenGLの実装の作成です。
</div> 

=== DRMとは何ですか？通常のXorgとどのように関連しますか？ ===

DRM (ダイレクト・レンダリング・マネージャ)は、ダイレクトレンダリングに必要なカーネルモジュールを追加することにより、グラフィックカードのための3Dアクセラレーションを追加するXorgの''付加機能''です。 

=== 目的 ===

このガイドはXorgのみでダイレクトレンダリングが動作しない人々のためのものです。DRMは以下のドライバで動作します。 

<div class="mw-translate-fuzzy">
* 3dfx
* intel
* matrox
* nouveau
* rage128
* radeon
* mach64
* sis300
* via
</div>

<div class="mw-translate-fuzzy">
より詳細な情報とドキュメントについては[http://dri.freedesktop.org/ DRI ホームページ]を見てください。
</div>

<div class="mw-translate-fuzzy">
== Xorgのインストールとカーネルの設定 ==
</div>

=== Xorgのインストール ===

Xorgを動作させるためには[https://wiki.gentoo.org/wiki/Xorg/Guide Xorg 設定ガイド]を見てください。 

<div class="mw-translate-fuzzy">
=== カーネルの設定 ===
</div>

<div class="mw-translate-fuzzy">
あなたのチップセットを調査して、有効にしてください。
</div> 

<div class="mw-translate-fuzzy">
{{Emerge|pciutils}}
</div>

{{RootCmd|lspci {{!}} grep AGP|output=<pre>
# 00:01.0 PCI bridge: Intel Corp. 440BX/ZX/DX - 82443BX/ZX/DX AGP bridge (rev 03)
</pre>
}}

<div class="mw-translate-fuzzy">
ハードウェアが異なることにより、上記の出力はあなたのものと一致するとは限りません。
</div>

If the chipset is not supported by the kernel, some success may be obtained by passing <code>agp=try_unsupported</code> as a kernel parameter. This will use Intel's generic routines for AGP support. To add this parameter, edit the bootloader's configuration file.

Most, if not all, kernels should have these options. This was configured using a standard {{Package|sys-kernel/gentoo-sources}} kernel.

{{RootCmd|ls -l /usr/src/linux |output=<pre>
lrwxrwxrwx 1 root root 22 2007-02-14 20:12 /usr/src/linux -> linux-2.6.18-gentoo-r4
</pre>}}

<div class="mw-translate-fuzzy">
{{Path|/usr/src/linux}}は最近のカーネルにリンクするを確認してください。
</div>

<div class="mw-translate-fuzzy">
{{RootCmd|cd /usr/src/linux
|make menuconfig}}
</div>


{{KernelBox|title=Hardware 3D acceleration options|
<pre>
Processor type and features --->
<*> MTRR (Memory Type Range Register) support
Device drivers --->
   Graphics support --->
   <M> /dev/agpgart (AGP Support) --->
      (The agpgart option is not present on 64-bit kernels;
      just choose the appropriate chipset support.)
      <M> Intel 440LX/BX/GX, I8xx and E7x05 support
      (Enable the appropriate chipset instead of the above.)
   <M> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
      <M> (Select the appropriate  graphics card from the list)
</pre>
}}

<div class="mw-translate-fuzzy">
=== カーネルのコンパイルとインストール ===
</div>

<div class="mw-translate-fuzzy">
{{RootCmd|make && make modules_install}}
</div>

<div class="mw-translate-fuzzy">
{{Path|grub.conf}} か {{Path|lilo.conf}}　かの設定してください。 設定終わったら、 <code>/sbin/lilo</code> を実効してください.
</div>

When using LILO, issue:

{{RootCmd|lilo}}

When using GRUB 2, run:

{{RootCmd|grub-mkconfig -o /boot/grub/grub.cfg}}

<div class="mw-translate-fuzzy">
=== videoグループへのユーザの追加 ===
</div>

Next, add the appropriate user(s) to the video group: 

{{RootCmd|gpasswd -a $USER video}}

== ダイレクトレンダリングの設定 ==

=== Xorgの設定 ===

Hopefully just adding the appropriate user to the <code>video</code> group is sufficient to enable direct rendering. However, Xorg may need some additional configuration via the {{Path|/etc/X11/xorg.conf.d/}} directory. New configuration files created in this directory may be named any alpha-numeric file name, as long as the file suffix ends in {{Path|.conf}}. Open up a favorite text editor and create a file with this inside it: 

{{FileBox|filename=/etc/X11/xorg.conf.d/10-dri.conf|1=
Section "Device"
  Driver "radeon"
EndSection
Section "dri"
  Mode 0666
EndSection
}}

Replace <code>radeon</code> with the name of the appropriate driver.

=== /etc/conf.d/modulesの変更 ===

You will need to add the module name that your card uses to {{Path|/etc/conf.d/modules}} to ensure that the module is loaded automatically when the system starts up. 

{{FileBox|filename=/etc/conf.d/modules|1=
modules="intel-agp" # Substitute with your driver
}}

{{Note|If you compiled <code>agpgart</code> as a module, you will also need to add it to {{Path|/etc/conf.d/modules}}.}}

== 3Dアクセラレーションのテスト ==

=== 新しいカーネルでリブート ===

Reboot your computer to your new kernel and login as a normal user. It's time to see if you have direct rendering and how good it is. <code>glxinfo</code> and <code>glxgears</code> are part of the {{Package|x11-apps/mesa-progs}} package, so make sure it is installed before you attempt to run these commands.

{{Cmd|startx}}

No need to load modules for your driver or agpgart, even if you compiled them as a module. They will be loaded automatically.

{{Cmd|glxinfo {{!}} grep rendering|output=<pre>
direct rendering: Yes
</pre>}}

If it outputs "No", you don't have 3D acceleration.

{{Cmd|glxgears}}

Test your frames per second (FPS) at the default size. The number should be significantly higher than before configuring DRM. Do this while the CPU is as idle as possible.

{{Note|FPS may be limited by your screen's refresh rate, so keep this in mind if <code>glxgears</code> reports only about 70-100 FPS. {{Package|games-fps/xonotic}} or other 3D games are better benchmarking tools, as they give you real-world performance results.}}

=== Get the most out of direct rendering ===

If you want to set more features, for performance or other reasons, check out the [https://dri.freedesktop.org/wiki/FeatureMatrix feature matrix] on the DRI web site or the [http://dri.sourceforge.net/doc/dri_driver_features.phtml features listing] on Sourceforge. 

== Troubleshooting ==

=== Problem with rendering ===

Try <code>modprobe radeon</code> before you start the X server (replace <code>radeon</code> with the name of your driver). Also, try building agpgart into the kernel instead of as a module.

=== Failed to load kernel module agpgart when running startx ===

error: "[drm] failed to load kernel module agpgart" after invoking `startx` is caused by presents of compiled agpgart in the kernel instead of as a module. Ignore it unless you're having problems.

=== TV-Out on Radeon GPU ===

The drivers originally developed by the [http://gatos.sourceforge.net/ GATOS] project have been merged into Xorg's codebase. You don't need anything special for TV-Out; {{Package|x11-drivers/xf86-video-ati}} will work just fine.

=== Compatibility for freshly released GPUs ===

Try out the binary drivers. For AMD cards, use <code>ati-drivers</code>. If those don't support it, use fbdev. It's slow, but it works.

=== PCI card doesn't work properly ===

Create a config file in {{Path|/etc/X11/xorg.conf.d/}}; name it anything you want as long as it ends in {{Path|.conf}}. Add the following to it: 

{{FileBox|filename=/etc/X11/xorg.conf.x/10-pcimode.conf|title=Adding ForcePCI Mode|1=
Section "Device"
  Option "ForcePCIMode" "True"
EndSection
}}

== 外部の情報 ==

* [https://forums.gentoo.org/viewtopic.php?t=46681 Direct rendering (DRI) using X11-DRM HOWTO] on the Gentoo forums
* [https://forums.gentoo.org/viewtopic.php?t=29264 Radeon 7000-9700 DRI CVS Install Guide] on the Gentoo forums
* [https://dri.freedesktop.org/ https://dri.freedesktop.org/]

[[Category:X.Org]] {{Migrated|originalauthors={{Dev|dberkholz}}, peesh, {{Dev|nightmorph}}}}
