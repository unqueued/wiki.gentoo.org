<languages />


{{Metadata|abstract=この文書はGentoo LinuxのXorgでDRMを使用して3Dアクセラレーションを動作させるためのガイドです。}}

この文書はGentoo LinuxのXorgでDRMを使用して3Dアクセラレーションを動作させるためのガイドです

== はじめに ==

=== ハードウェア3Dアクセラレーションとは何ですか、またどうしてそれが必要なのですか？ ===

With hardware 3D acceleration, three-dimensional rendering uses the graphics processor on your video card instead of taking up valuable CPU resources drawing 3D images. It's also referred to as "hardware acceleration" instead of "software acceleration" because without this 3D acceleration your CPU is forced to draw everything itself using the Mesa software rendering libraries, which takes up quite a bit of processing power. While Xorg typically supports 2D hardware acceleration, it often lacks hardware 3D acceleration. Three-dimensional hardware acceleration is valuable in situations requiring rendering of 3D objects such as games, 3D CAD and modeling. 

=== どうすればハードウェア3Dアクセラレーションが動作しますか？ ===

In many cases, both binary and open-source drivers exist. Open source drivers are preferable since we're using Linux and open source is one of its underlying principles. Sometimes, binary drivers are the only option, especially if your graphics card is so new that open source drivers have not yet been written to support its features. Binary drivers include {{Package|x11-drivers/nvidia-drivers}} for nVidia cards and {{Package|x11-drivers/ati-drivers}} for AMD/ATI cards. 

=== DRIとは何ですか？ ===

The [http://dri.freedesktop.org/wiki/ Direct Rendering Infrastructure], also known as the DRI, is a framework for allowing direct access to graphics hardware in a safe and efficient manner. It includes changes to the X server, to several client libraries and to the kernel. The first major use for the DRI is to create fast OpenGL implementations. 

=== What is the DRM and how does it relate to regular Xorg? ===

The DRM (Direct Rendering Manager) is an ''enhancement'' to Xorg that adds 3D acceleration for cards by adding the kernel module necessary for direct rendering. 

=== Purpose ===

This guide is for people who can't get direct rendering working with just Xorg. The DRM works for the following drivers: 

* 3dfx
* intel
* matrox
* nouveau
* rage128
* radeon
* mach64
* sis300
* via

See the [http://dri.freedesktop.org/ DRI homepage] for more info and documentation. 

== Install Xorg and configure your kernel ==

=== Install Xorg ===

Please read our [https://wiki.gentoo.org/wiki/Xorg/Configuration Xorg Configuration Guide] to get Xorg up and running. 

=== Configure your kernel ===

Probe for your chipset and enable just that one. 

{{Emerge|pciutils}}

{{RootCmd|lspci {{!}} grep AGP|output=<pre>
# 00:01.0 PCI bridge: Intel Corp. 440BX/ZX/DX - 82443BX/ZX/DX AGP bridge (rev 03)
</pre>
}}

Your output may not match the above due to different hardware.

If your chipset is not supported by the kernel you might have some success by passing <code>agp=try_unsupported</code> as a kernel parameter. This will use Intel's generic routines for AGP support. To add this parameter, edit your bootloader configuration file! 

Most, if not all, kernels should have these options. This was configured using a standard {{Package|sys-kernel/gentoo-sources}} kernel.

{{RootCmd|ls -l /usr/src/linux |output=<pre>
lrwxrwxrwx 1 root root 22 2007-02-14 20:12 /usr/src/linux -> linux-2.6.18-gentoo-r4
</pre>}}

Make sure /usr/src/linux links to your current kernel.

{{RootCmd|cd /usr/src/linux
|make menuconfig}}

{{Kernel|Hardware 3D acceleration options|<pre>
Processor type and features --->
<*> MTRR (Memory Type Range Register) support
Device drivers --->
   Graphics support --->
   <M> /dev/agpgart (AGP Support) --->
      (The agpgart option is not present on 64-bit kernels; just choose your chipset support.)
      <M> Intel 440LX/BX/GX, I8xx and E7x05 support
      (Enable your chipset instead of the above.)
   <M> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
      <M> (Select your graphics card from the list)
</pre>
}}

=== Compile and install your kernel ===

{{RootCmd|make && make modules_install}}

Don't forget to set up {{Path|grub.conf}} or {{Path|lilo.conf}} and run <code>/sbin/lilo</code> if you use LILO. 

=== Add your user to the video group ===

Next, add your user(s) to the video group, as explained in the [http://www.gentoo.org/doc/en/handbook handbook]: 

{{RootCmd|gpasswd -a username video}}

== Configure direct rendering ==

=== Configure Xorg ===

Hopefully just adding your user to the <code>video</code> group is sufficient to enable direct rendering. However, you may also need to create a file in {{Path|/etc/X11/xorg.conf.d/}}. You can name it anything you like; just make sure it ends in {{Path|.conf}}. Open up your favorite text editor and create a file with this inside it: 

{{File|/etc/X11/xorg.conf.d/10-dri.conf||<pre>
Section "Device"
  Driver "radeon"
EndSection
Section "dri"
  Mode 0666
EndSection
</pre>
}}

Replace radeon with the name of your driver.

=== Changes to /etc/conf.d/modules ===

You will need to add the module name that your card uses to {{Path|/etc/conf.d/modules}} to ensure that the module is loaded automatically when the system starts up. 

{{File|/etc/conf.d/modules||<pre>
modules="intel-agp" # Substitute with your driver
</pre>
}}

{{Note|If you compiled <code>agpgart</code> as a module, you will also need to add it to {{Path|/etc/conf.d/modules}}.}}

== Test 3D acceleration ==

=== Reboot to the new kernel ===

Reboot your computer to your new kernel and login as a normal user. It's time to see if you have direct rendering and how good it is. <code>glxinfo</code> and <code>glxgears</code> are part of the {{Package|x11-apps/mesa-progs}} package, so make sure it is installed before you attempt to run these commands.

{{Cmd|startx}}

No need to load modules for your driver or agpgart, even if you compiled them as a module. They will be loaded automatically.

{{Cmd|glxinfo {{!}} grep rendering|output=<pre>
direct rendering: Yes
</pre>}}

If it says "No", you don't have 3D acceleration.

{{Cmd|glxgears}}

Test your frames per second (FPS) at the default size. The number should be significantly higher than before configuring DRM. Do this while the CPU is as idle as possible.

{{Note|FPS may be limited by your screen's refresh rate, so keep this in mind if <code>glxgears</code> reports only about 70-100 FPS. {{Package|games-fps/ut2004-demo}} or other 3D games are better benchmarking tools, as they give you real-world performance results.}}

=== Get the most out of direct rendering ===

If you want to set more features, for performance or other reasons, check out the [http://dri.freedesktop.org/wiki/FeatureMatrix feature matrix] on the DRI web site or the [http://dri.sourceforge.net/doc/dri_driver_features.phtml features listing] on Sourceforge. 

== Troubleshooting ==

=== It doesn't work. I don't have rendering, and I can't tell why. ===

Try <code>modprobe radeon</code> before you start the X server (replace <code>radeon</code> with the name of your driver). Also, try building agpgart into the kernel instead of as a module. 

=== When I startx, I get this error: "[drm] failed to load kernel module agpgart" ===

That's because you compiled agpgart into the kernel instead of as a module. Ignore it unless you're having problems. 

=== I have a Radeon, and I want TV-Out. ===

The drivers originally developed by the [http://gatos.sf.net GATOS] project have been merged into Xorg's codebase. You don't need anything special for TV-Out; {{Package|x11-drivers/xf86-video-ati}} will work just fine.

=== It doesn't work. My card is so incredibly new and cool that it isn't supported at all. ===

Try out the binary drivers. For AMD cards, use <code>ati-drivers</code>; a listing is at [http://support.amd.com/us/gpudownload/Pages/index.aspx http://support.amd.com/us/gpudownload/Pages/index.aspx]. If those don't support it, use fbdev. It's slow, but it works.

=== I have a PCI card and it doesn't work.  Help! ===

Create a config file in {{Path|/etc/X11/xorg.conf.d/}}; name it anything you want as long as it ends in {{Path|.conf}}. Add the following to it: 

{{File|/etc/X11/xorg.conf.x/10-pcimode.conf|Adding ForcePCI Mode|<pre>
Section "Device"
  Option "ForcePCIMode" "True"
EndSection
</pre>
}}

== References ==

* [https://forums.gentoo.org/viewtopic.php?t=46681 https://forums.gentoo.org/viewtopic.php?t=46681]
* [https://forums.gentoo.org/viewtopic.php?t=29264 https://forums.gentoo.org/viewtopic.php?t=29264]
* [http://dri.freedesktop.org/ http://dri.freedesktop.org/]

== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:


* dberkholz
* peesh
* nightmorph

[[Category:X.Org]]
