<languages />

{{Metadata|abstract=Puppet은 루비로 작성한 설정 관리 시스템입니다. 머신 배포 자동화 용도로 활용할 수 있습니다.}}

{{InfoBox stack
|{{InfoBox wikipedia|Puppet (software)|header=true}}
|{{InfoBox ohloh}}
}}

'''Puppet'''은 [[Ruby|루비]]<sup style="color:#ff0077">en</sup>로 작성한 설정 관리 시스템입니다. 머신 배포 자동화 용도로 활용할 수 있습니다

== 설치 ==
Puppet은 {{Package|app-admin/puppet}} 젠투 꾸러미로 제공합니다.
현재는 서버와 클라이언트간 제한이 없어 기본 설치 과정은 동일합니다.

우선 {{c|emerge}}로 Puppet을 설치하십시오:
{{Emerge|puppet}}

== 설정 및 설치 ==
Puppet 은 주로 INI 방식의 형식을 지닌 {{Path|/etc/puppet/puppet.conf}} 파일로 설정합니다. 주석은 해시 기호 (<tt>#</tt>)로 표시합니다.
설정 파일은 몇가지 섹션 또는 블록으로 구분합니다:

* <tt>[main]</tt> 에는 다음 섹션에서 설정을 바꾸기 전까지는 Puppet이 기본적으로 동작하도록 하는 모든 부분에 대한 설정이 들어있습니다:
** <tt>[master]</tt> 는 Puppetmaster(<tt>puppet master</tt>), 또는 CA 도구 (<tt>puppet cert</tt>)에 적용하는 설정이 들어있습니다
** <tt>[agent]</tt> 는 Puppet agent (<tt>puppet agent</tt>)에 적용하는 설정이 들어있습니다

그 밖의 블록과 마찬가지로 더 많은 설명을 찾으신다면 [http://docs.puppetlabs.com/guides/configuring.html 공식 Puppet 문서]를 확인하십시오.
또한 [http://docs.puppetlabs.com/references/stable/configuration.html 모든 설정 목록] 을 통해 서버 또는 클라이언트에 적용할 설정 방식을 알아볼 수 있습니다.

=== 서버(Puppetmaster) 설정 ===

이빌드가 {{Path|puppet.conf}}에 넣은 기본 설정은 그대로 활용할 수 있습니다. Puppet 2.7.3에서는 다음과 같이 서버 관련 부분이 들어있습니다:

{{FileBox|filename=/etc/puppet/puppet.conf|title=서버 관련 기본 설정|lang=ini|1=
[main]
    # The Puppet log directory.
    # The default value is '$vardir/log'.
    logdir = /var/log/puppet
  
    # Where Puppet PID files are kept.
    # The default value is '$vardir/run'.
    rundir = /var/run/puppet
  
    # Where SSL certificates are kept.
    # The default value is '$confdir/ssl'.
    ssldir = $vardir/ssl
}}

==== 파일 서버 설정 ====
파일을 클라이언트에 보내려면, 파일 서버를 설정해야합니다. {{Path|/etc/puppet/fileserver.conf}}를 설정하시면 됩니다. 기본적으로 전달하는 파일은 없습니다.

{{FileBox|filename=/etc/puppet/fileserver.conf|title=<tt>files</tt> 공유 설정|lang=ini|1=
[files]
    path /var/lib/puppet/files
    allow 192.168.0.0/24
}}

The snippet above sets up a share called <tt>files</tt> (remember this identifier, as it will need to be referenced later), looking for files in {{Path|/var/lib/puppet/files}} and only available for hosts with an IP from the 192.168.0.0/24 network. You can use IP addresses, CIDR notation, and host names (including wildcards like <tt>*.domain.invalid</tt>) here. The <tt>deny</tt> command can be used to explicitly deny access to certain hosts or IP ranges.

==== Puppetmaster 데몬 시작 ====
{{Note|<tt>puppet</tt> 호스트 이름을 활용하는 클라이언트에서만 Puppetmaster에 접근할 수 있게 하는게 좋습니다. 그렇지 않으면, 그 동안 열심히 설정한 내용은 무시하고 이름을 중복 우선적용할 수 있습니다.}}

{{Important|이 시점에서 클라이언트에 나타나는 호스트 이름 <tt>hostname -f</tt>에서 나타나는 이름과 같아야 합니다. 조건을 만족하기 위해  {{Path|/etc/hosts}} 파일을 수정하거나  [[#.EC.9D.B8.EC.A6.9D.EC.84.9C_.EC.A7.81.EC.A0.91_.EB.B0.9C.EA.B8.89|하단에 설명]] 한대로 직접 인증서를 만들어야합니다.}}

초기 파일 서버 설정과 기본 설정이 끝나면 Puppetmaster 데몬을 초기화 스크립트로 시작할 수 있습니다.

처음 시작하는 동안 Puppet에서 Puppetmaster 호스트용으로 SSL 인증서를 생성하며 위에서 설정한대로 <tt>ssldir</tt>에 복사합니다.

8140/TCP 포트에서 대기하므로, 클라이언트의 접근을 방해하는 방화벽 규칙이 있는지 확인하십시오.

==== 간단한 매니페스트 ====
Puppet의 용어로 매니페스트가 있는데, 클라이언트 설정을 지정한 파일을 의미합니다.
문서를 찾아보시면 [http://docs.puppetlabs.com/guides/language_guide.html 활용 안내서]<sup style="color:#ff0077>en</sup>가 있는데 여기에 매니페스트 마크업 언어에 대한 설명이 있습니다.

간단한 예제로 ''오늘의 메시지(MOTD)''를 만들어보겠습니다. Puppetmaster에서 앞서 만든 <tt>files</tt> 공유 경로에 파일을 만드십시오:

{{FileBox|filename=/var/lib/puppet/files/motd|title=서버의 MOTD 파일|1=
Welcome to this Puppet-managed machine!
}}

그 다음 <tt>manifests</tt> 디렉터리에 주 manifest 파일을 만들겠습니다. 이 파일은  <tt>site.pp</tt> 입니다:

{{FileBox|filename=/etc/puppet/manifests/site.pp|title=서버의 주 매니페스트 파일|lang=ruby|1=
node default {
  file { '/etc/motd':
    source => 'puppet:///puppet/files/motd'
  }
}
}}

<tt>default</tt> ''node''(클라이언트 이름) 정의는 호스트에 별개의 <tt>node</tt> 구문이 없을 경우에 사용합니다.
<tt>file</tt> 자원을 사용하고, 클라이언트에서 {{Path|/etc/motd}}를 요청하여 호스트 <tt>puppet</tt>에서 공유하는 <tt>files</tt>의 <tt>motd</tt>파일과 동일한 파일을 지니도록 하겠습니다. Puppetmaster가 다른 호스트 이름을 사용했을 때 접속할 수 있다면 <tt>source</tt> URI을 적절하게 적용해야합니다.

=== 클라이언트 설정 ===
{{Important|클라이언트는 Puppetmaster와 '''동일한 주/부 버전'''을 보유해야합니다. Puppetmaster를 2.7.1로 클라이언트를 2.7.2를 쓰는건 괜찮지만, 서버가 2.6이고 클라이언트가 2.7이면 예기치 못한 문제가 나타납니다. }}

{{Note|Puppetmaster가 <tt>puppet</tt>에 도달하지 않으면 {{Path|/etc/puppet/puppet.conf}}의 <tt>[main]</tt> 섹션에  <tt>server{{=}}&lt;your hostname&gt;</tt>를 설정하십시오.}}

Puppet 에이전트를 처음 실행할 때 Puppetmaster가 서명한 인증서를 기다려야합니다. 인증서를 요청하려면 첫 설정을 실행하십시오:

{{RootCmd|puppet agent --test --waitforcert 60|prompt=root@client #
|output=<pre>
info: Creating a new certificate request for client
info: Creating a new SSL key at /var/lib/puppet/ssl/private_keys/client.pem
notice: Did not receive certificate
</pre>}}

Before the client can connect, you have to authorize the certificate request on the server. Our client should appear in the list of nodes requesting a certificate:
{{RootCmd|puppet cert --list
|prompt=root@server #
|output=client}}

Now, we grant the request:
{{RootCmd|puppet cert --sign client
|prompt=root@server #}}

The client will check every 60 seconds whether its certificate has already been issued. After that, it continues with the first configuration run:
{{GenericCmd|<pre>
info: Caching catalog for client
info: Applying configuration version '1317317379'
notice: /Stage[main]//Node[default]/File[/etc/motd]/ensure: defined content as '{md5}30ed97991ad6f591b9995ad749b20b00'
notice: Finished catalog run in 0.05 seconds
</pre>}}

이 메시지를 보았다면 모든 부분이 동작한다는 뜻입니다. 이제클라이언트에서 {{Path|/etc/motd}} 파일 내용을 확인해볼 수 있습니다:
{{Cmd|cat /etc/motd
|prompt=user@client $
|output=Welcome to this Puppet-managed machine!}}

이제 puppet 에이전트를 데몬으로 시작할 수 있으며 부팅할 때 실행합니다:
{{RootCmd|/etc/init.d/puppet start
|rc-update add puppet default
|prompt=root@client #}}

== 다른 주제 ==

=== 인증서 직접 발급 ===
인증서를 직접 생성한다면 {{c|puppet cert}} 유틸리티를 활용할 수 있습니다. 이 유틸리티는 생성한 인증서를 puppet 설정 디렉터리인 <tt>ssldir</tt>에 넣고 로컬 Puppet 인증서(CA)의 키에 서명합니다.

'''only one Common Name''' 인증서 생성의 쉬운 예를 들겠습니다.
{{RootCmd|puppet cert --generate host1}}

인증서상 유효한 '''다중 호스트 이름'''이 필요하다면, <tt>--certdnsnames</tt> 매개 변수를 활용하고 추가 호스트 이름을 콜론으로 구분하십시오:
{{RootCmd|puppet cert --generate --certdnsnames puppet:puppet.domain.invalid host1.domain.invalid}}

이 예제에서는 3가지 호스트 이름을 유효하다고 판단하는 인증서를 만듭니다.

=== Puppet에서 슬롯 관리하기 ===
Puppet의 기본 포티지 제공자에서 슬롯을 지원하지 않기 때문에 찾으려는 기능을 추가하는 모듈은 따로 존재합니다.
* [https://github.com/gentoo/puppet-portage puppet-portage]
* [https://github.com/whatbox/PortageGT PortageGT]

== 외부 자료 ==
* [http://puppetlabs.com/ 업스트림 웹사이트]
* [http://projects.puppetlabs.com/projects/puppet/wiki Puppet 위키]


[[Category:Server]]
[[Category:Security]]
