Catalyst is a release building tool, used by Gentoo Linux. With Catalyst, users are able to completely customize a Gentoo install by customizing the very tools that are used to install a system. Official Gentoo Linux release media is built using Catalyst.

Catalyst is capable of:

* Building installation stages;
* Building bootable LiveCDs;
* Building GRP (Gentoo Reference Platform) sets;
* Setting up a Tinderbox target for test building;
* Building netboot images.

__TOC__

== Installation ==

=== Emerge ===

To install Catalyst, run:

{{Emerge|dev-util/catalyst}}

=== USE flags ===

{{USEflag|package=dev-util/catalyst|desc=Optional USE flags for {{Package|dev-util/catalyst}}:
|ccache
|python_targets_python2_7+Yes++Build with Python 2.7
}}

== Configuration ==

After emerging Catalyst, the first (and probably only) configuration step is to edit {{Path|/etc/catalyst/catalyst.conf}}

== How to build simple stage3 ==

=== Seed tarball ===

For creating a stage3 we first need a seed tarball. The seed is needed because Catalyst will chroot onto it and emerge the packages for the new stages inside it, so it does not pollute the build system.

The seed tarball the following temporary directory created unless the temporary directory location was modified during the Catalyst configuration in the in the [[Catalyst#Configuration|configuration]] section above. If the temporary was modified put the seed in the specified directory, otherwise:

{{RootCmd|mkdir -p /var/tmp/catalyst/builds/default && cd /var/tmp/catalyst/builds/default}}

The seed tarball can be a current stage3 downloaded from one of the [http://www.gentoo.org/main/en/where.xml mirrors].

For example:

{{RootCmd|wget http://distfiles.gentoo.org/releases/x86/autobuilds/current-stage3/stage3-i686-20140304.tar.bz2}}

=== Snapshot ===

A snapshot of the Gentoo-x86 Portage tree is required. Catalyst can create a snapshot of the system's current {{Path|/usr/portage}} directory with the <tt>catalyst -s ${NAME}</tt> command.

The snapshot will be saved to {{Path|/var/tmp/catalyst/snapshots/portage-${NAME}.tar.bz2}}

For example:

{{RootCmd|catalyst -s 2008.0}}

Another option is to use one of the Portage Tree snapshots available on the mirrors.

=== Specs ===

Catalyst uses specs files for reading the parameters to create a stage. For building a stage3 a stage1 and stage2 must be built, then the stage3 will be created. Therefore we need a spec is needed for each of the stages.

You can find the specs we use for autobuilds in the releng repository: http://git.overlays.gentoo.org/gitweb/?p=proj/releng.git;a=tree;f=releases/weekly/specs;hb=HEAD

This article will use the specs for x86: http://git.overlays.gentoo.org/gitweb/?p=proj/releng.git;a=tree;f=releases/weekly/specs/x86;hb=HEAD

{{RootCmd
|wget -O stage1.spec "http://git.overlays.gentoo.org/gitweb/?p{{=}}proj/releng.git;a{{=}}blob_plain;f{{=}}releases/weekly/specs/x86/i686/stage1.spec;hb{{=}}HEAD"
|wget -O stage2.spec "http://git.overlays.gentoo.org/gitweb/?p{{=}}proj/releng.git;a{{=}}blob_plain;f{{=}}releases/weekly/specs/x86/i686/stage2.spec;hb{{=}}HEAD"
|wget -O stage3.spec "http://git.overlays.gentoo.org/gitweb/?p{{=}}proj/releng.git;a{{=}}blob_plain;f{{=}}releases/weekly/specs/x86/i686/stage3.spec;hb{{=}}HEAD"}}

Download the three files files above. These specs are really simple and the three of them contain the same parameters except some differences, lets check stage1.spec:

{{FileBox|filename=stage1.spec|title=i686 stage1 spec file example|1=
subarch: i686
target: stage1
version_stamp: 2008.0
rel_type: default
profile: default/linux/x86/13.0
snapshot: 2008.0
source_subpath: default/stage3-i686-latest
update_seed: yes
}}

* <code>subarch</code> - the subarchitecture we are building for, you can check the available subarchitectures in {{Path|/usr/lib/catalyst/arch/${ARCH}.py}}, <code>${ARCH}</code> being the arch we're building for. <code>subarch</code> simply sets the <code>CHOST</code> and <code>CFLAGS</code>/<code>CXXFLAGS</code> accordingly.

* <code>version_stamp</code> - The version of the stage we're building, on the autobuilds we use the date. This parameter will be used on the output tarball (stage1-${ARCH}-${version_stamp}.tar.bz2), temporary directories, etc...

* <code>target</code> - this is what makes one spec file differ from another, this specifies we'll build a stage1.

* <code>rel_type</code> - leaving default is fine, its simply used in case you want to differentiate the builds, for example if you were building hardened or uclibc stages. Changing it will change the subdirectory inside {{Path|/var/tmp/catalyst/builds}} from default to whatever you set here.

* <code>profile</code> - this is the profile it will use to build the new stage. It must be one of the profiles available on {{Path|/usr/portage/profiles}}

* <code>snapshot</code> - The snapshot of the portage tree it will use. See the chapter of creating an snapshot to see how you can create it. If you use 2008.0 like in the example, it will use the snapshot available on {{Path|/var/tmp/catalyst/snapshots/portage-2008.0.tar.bz2}}

* <code>source_subpath</code> - This is the relative path where the seed tarball is to be found. In the example, it will use {{Path|/var/tmp/catalyst/builds/default/stage3-sh4a-2008.0.tar.bz2}} as the seed tarball.

On stage2 and stage3, the source_subpath needs to be the stage1 and stage2 built respectively. An example: if we use 20100908 as version_stamp, the source_subpath for stage2 should be: default/stage1-sh4a-20100908, and the source_subpath for stage3 should be:  default/stage2-sh4a-20100908.

=== Running Catalyst ===

Once the specs have been reviewed, run catalyst will the following command:

{{RootCmd|catalyst -f stage1.spec && catalyst -f stage2.spec && catalyst -f stage3.spec}}

If everything went well a stage3 should be built in the {{Path|/var/tmp/catalyst/builds/default/}} directory.

== External resources ==

* [http://www.gentoo.org/proj/en/releng/catalyst/ Gentoo Release Engineer Catalyst project page]
* [http://www.gentoo.org/proj/en/releng/catalyst/faq.xml Gentoo Catalyst FAQ]
* [git://git.overlays.gentoo.org/proj/catalyst.git Official Gentoo Catalyst source code page (git)]
