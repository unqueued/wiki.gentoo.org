<languages />

{{Metadata|abstract=이 안내서는 사용자가 젠투 리눅스 배포판의 로캘을 임의의 유럽 로캘로 지역화 하는데 도움을 주고자 합니다. 독일 문서로부터 번역했으므로 사례로서 독일권을 들었습니다. 유로화 심볼 사용 내용이 설정 내용에 포함되어 있습니다.}}

== 시간대 ==

시간 속성을 유지하려면 시간대를 선택하여 시스템이 어디에 위치했는지를 알려야 합니다.

=== OpenRC ===

{{Path|/usr/share/zoneinfo}}에서 시간대 정보를 찾아보십시오. 기대대로의 지역 이름이 나타나지 않는 {{Path|/usr/share/zoneinfo/Etc/GMT*}} 시간대는 피하십시오. 예를 들어 {{Path|GMT-8}}는 실제로 GMT+8입니다.

브뤼셀 시간대를 사용한다고 가정해보겠습니다:

{{RootCmd|cp /usr/share/zoneinfo/Europe/Brussels /etc/localtime}}

이제 여러분의 시간대를 지정하겠습니다:

{{RootCmd|nano -w /etc/timezone|output=<pre>
Europe/Brussels
</pre>}}

{{RootCmd|date|output=<pre>
Wed Mar  8 00:46:05 CET 2006
</pre>
}}

{{Note/ko|시간대 이름(이 경우 "CET")은 여러분이 사는 지역에 맞는지 확인하십시오.}}

{{Note/ko|<code>TZ</code>값을 사용자측면 설정을 위해 쉘 rc 파일에 {{Path|/usr/share/zoneinfo}} 다음에 오는 모든 값으로 설정할 수 있습니다. 이 경우 <code>TZ{{=}}"Europe/Berlin"</code>입니다.}}

=== systemd ===

systemd를 사용한다면 <code>timedatectl</code> 명령을 사용하여 시간대를 설정해야 합니다. 먼저 시간대 이름이 존재하는지 확인하십시오:

{{RootCmd|timedatectl list-timezones}}

그 다음 시간대를 선택하십시오:

{{RootCmd|timedatectl set-timezone Europe/Brussels}}

마지막으로 <code>timedatectl</code> 명령을 인자 없이 실행하여 결과를 확인하십시오:

{{RootCmd|timedatectl}}

== 하드웨어 시계 ==

대부분의 젠투 리눅스 설치시, 하드웨어 클록을 UTC(또는 GMT, 그리니지 표준시)로 설정하고 실제 지역 시간을 결정하는 시간대를 계정에 부여합니다. 어떤 이류로 여러분의 하드웨어를 UTC로 설정하면 안될 수도 있는데 이 경우 {{Path|/etc/conf.d/hwclock}}를 편집해야 하고(또는 젠투 BSD를 사용한다면 {{Path|/etc/conf.d/adjkerntz}}), <code>clock</code> 값을 <code>UTC</code>에서 <code>local</code>로 바꾸어야 합니다. 

{{Code|/etc/conf.d/hwclock에서 UTC 시계 사용|<pre>
clock="UTC"</pre>}}

{{Code|/etc/conf.d/hwclock에서 지역 시간대 사용|<pre>
clock="local"</pre>}}

== 로캘 시스템 ==

=== 로케일이 무엇인가요? ===

A Locale is a set of information that most programs use for determining country and language specific settings. The locales and their data are part of the system library and can be found at {{Path|/usr/share/locale}} on most systems. A locale name is generally named <code>ab_CD</code> where <code>ab</code> is your two (or three) letter language code (as specified in ISO-639) and <code>CD</code> is your two letter country code (as specified in ISO-3166). Variants are often appended to locale names, e.g. <code>en_GB.UTF-8</code> or <code>de_DE@euro</code>. Please explore [http://en.wikipedia.org/wiki/Locale Wikipedia] to read more about locales and related articles. 

=== 로캘 환경 변수 ===

The variables controlling different aspects of locale settings are given in the table below. All of them take one name of a locale in <code>ab_CD</code> format given above. 

{| class="wikitable" style="text-align: left;" 
|- 
! Variable name
! Explanation
|- 
| LANG
| Defines all locale settings at once, while allowing further individual customization via the LC_* settings below.
|- 
| LC_COLLATE
| Define alphabetical ordering of strings. This affects e.g. output of sorted directory listing.
|- 
| LC_CTYPE
| Define the character handling properties for the system. This determines which characters are seen as part of alphabet, numeric and so on. This also determines the character set used, if applicable.
|- 
| LC_MESSAGES
| Programs' localizations for applications that use message based localization scheme (majority of Gnu programs, see next chapters for closer information which do, and how to get the programs, that don't, to work).
|- 
| LC_MONETARY
| Defines currency units and formatting of currency type numeric values.
|- 
| LC_NUMERIC
| Defines formatting of numeric values which aren't monetary. Affects things such as thousand separator and decimal separator.
|- 
| LC_TIME
| Defines formatting of dates and times.
|- 
| LC_PAPER
| Defines default paper size.
|- 
| LC_ALL
| A special variable for overriding all other settings.
|-
|}

{{Note|Some programs are written in such a way that they expect traditional English ordering of the alphabet, while some locales, most notably the Estonian one, use a different ordering. Therefore it's recommended to explicitly set LC_COLLATE to C when dealing with system-wide settings.}}

{{Warning|Using LC_ALL is strongly discouraged as it can't be overridden later on. Please use it only when testing and ''never'' set it in a startup file.}}

대부분의 사용자는 전세계 기반의 LANG 값을 설정합니다.

=== 특정 로캘 생성 ===

You will probably only use one or maybe two locales on your system. You can specify locales you will need in {{Path|/etc/locale.gen}}. 

{{Code|/etc/locale.gen에 로캘 추가|<pre>
en_GB ISO-8859-1
en_GB.UTF-8 UTF-8
de_DE ISO-8859-1
de_DE@euro ISO-8859-15
</pre>
}}

The next step is to run <code>locale-gen</code>. It will generate all the locales you have specified in the {{Path|/etc/locale.gen}} file. 

{{Note|<code>locale-gen</code> is available in <code>glibc-2.3.6-r4</code> and newer. If you have an older version of glibc, you should update it now.}}

<code>locale -a</code>를 실행하여 선택한 로캘이 존재하는지 확인할 수 있습니다.

=== 로캘 설정 ===

==== OpenRC ==== 

When using OpenRC locale settings are stored in environment variables. These are typically set in the {{Path|/etc/env.d/02locale}} (for system-wide settings) and {{Path|~/.bashrc}} (for user-specific settings) file, and can be managed through <code>eselect locale</code>. For instance, to set the <code>LANG</code> variable to the <code>C</code> value:

{{RootCmd|eselect locale list|output=<pre>
Available targets for the LANG variable:
  [1]   C 
  [2]   POSIX
  [3]   en_US
  [4]   en_US.iso885915
  [5]   en_US.utf8
  [ ]   (free form)
</pre>}}

{{RootCmd|eselect locale set 1}}

물론, 파일을 있는 그대로 편집할 수 있고, 로캘 변수 값을 다양하게 설정할 수 있습니다.

{{Code|/etc/env.d/02locale에 기본 시스템 로캘 설정|<pre>
LANG="de_DE.UTF-8"
LC_COLLATE="C"
</pre>
}}

{{Note/ko|비 UTF-8 기반 로캘에서 유로화 기호 (â‚¬)를 사용하려면 <code>de_DE@euro</code>를 LANG 값으로 사용하십시오.}}

가능한 일이며, 특히 전역 설정을 "<code>C</code>" 로캘로 바꾸지 않고 그대로 두는 것은 기존 UNIX 환경에서는 꽤 일반적입니다. 그래도 사용자는 자신의 쉘 RC을 통해 적당한 로캘을 설정할 수 있습니다: 

{{Code|~/.bashrc에 사용자 로캘 설정|<pre>
export LANG="de_DE.UTF-8"
export LC_COLLATE="C"
</pre>
}}

시스템을 설정하는 다른 방법은 기본 C 로캘을 벗어나는 것이지만 동시에 UTF-8 문자를 표시하기도 하는 방법입니다. 이 옵션은 {{Path|/etc/env.d/02locale}}의 다음 설정을 사용하면 해결할 수 있습니다: 

{{Code|UTF-8을 지정하는 동안 전통적인 C 로캘 사용하기|<pre>
LC_CTYPE=de_DE.UTF-8
</pre>
}}

위 코드 일부를 사용하면, 여러분이 선호 언어를 강제하지 않은 반면, 사용자들은 자신들의 지역화 파일 이름을 알맞게 볼 수 있습니다. 

올바른 로캘을 설정하고 나면, 시스템이 바뀐 내용을 인지하도록 환경 변수를 업데이트 했는지 확인하십시오.

시스템 범위 기본 로캘:

{{RootCmd|env-update && source /etc/profile}}

사용자 지정 로캘:

{{Cmd|source ~/.bashrc}}

그 다음 <code>Ctrl-Alt-Backspace</code> 키를 눌러 X 서버를 죽이고 로그아웃 한 다음 사용자로 로그인 해보십시오. 

이제, 설정한 내용이 제대로 바뀌었는지 확인해보겠습니다: 

{{Cmd|locale}}

==== systemd ====

systemd를 사용한다면 <code>localectl</code> 명령으로 로캘을 설정해야 합니다. 사용할 수 있는 로캘이 무엇이 있는지 다음과 같이 확인해보십시오:

{{RootCmd|localectl list-locales}}

그 다음 원하는 로캘을 선택하십시오:

{{RootCmd|<nowiki>localectl set-locale LANG=de_DE.utf8</nowiki>}}

마지막으로 결과가 괜찮은지 확인하십시오:

{{RootCmd|<nowiki>localectl | grep "System Locale"</nowiki>|output=<pre>
   System Locale: LANG=de_DE.utf8
</pre>}}

== 콘솔용 키보드 배치 ==

=== OpenRC ===

콘솔에서 사용하는 키보드 배치는 {{Path|/etc/conf.d/keymaps}} 파일에서 <code>keymap</code> 변수로 설정합니다. 유효한 값은 {{Path|/usr/share/keymaps/YOUR_ARCH/}}에서 찾을 수 있습니다. {{Path|i386}}에는 더 많은 하위 배치 분류가 있습니다({{Path|qwerty/}}, {{Path|azerty/}} 등). 어떤 언어는 다중 옵션을 가지고 있기 때문에 여러분이 필요로하는 어떤 방식이 적당하는지 결정하는데는 실험이 필요할지도 모릅니다. 

{{Code|콘솔 키맵 설정|<pre>
keymap="de"
#keymap="de-latin1"
#keymap="de-latin1-nodeadkeys"
</pre>
}}

=== systemd ===

systemd에서는 <code>localectl</code> 명령을 통해 사용하는 콘솔용 키맵 배치를 설정할 수 있습니다. 먼저 존재하는 키맵 배치가 무엇이 있는지 확인해보십시오:

{{RootCmd|localectl list-keymaps}}

다음 원하는 콘솔 키맵 배치를 설정하십시오:

{{RootCmd|localectl set-keymap it}}

마지막으로 콘솔 키맵 배치를 올바르게 설정했는지 확인하십시오:

{{RootCmd|<nowiki>localectl | grep "VC Keymap"</nowiki>|output=<pre>
       VC Keymap: it
</pre>}}

== X 서버용 키보드 배치 ==

X 서버에서 사용하는 키보드 배치는 {{Path|/etc/X11/xorg.conf}} 파일의 <code>XkbLayout</code> 옵션에서 지정합니다. 

{{Code|X 키맵 설정|<pre>
Section "InputClass"
	Identifier "keyboard-all"
	Driver "evdev"
	Option "XkbLayout" "de"
	#Option "XkbModel" "pc105"
	MatchIsKeyboard "on"
EndSection
</pre>
}}

국제 키보드 배치를 가지고 있다면, <code>XkbModel</code> 옵션을 <code>pc102</code>또는 <code>pc105</code>값으로, 특정 일부 추가키를 키보드에 매핑할 수 있도록 설정해야 합니다. 

데드키는 직접적으로 나타나지 않는 키입력을 가능케 하지만, 단일 문자로 나타날 다른 문자와 결합됩니다. <code>XkbVariant</code> 값을 <code>nodeadkeys</code> 값으로 설정하면 X 터미널에서 특수 문자를 입력할 수 있습니다. 

하나 이상의 키보드배치를 전환하려면(영어, 러시아어 전환), 해야 할 모든 일은 단지 바라던 배치와 단축 명령을 지정하는 {{Path|xorg.conf}} 에 몇줄만 추가하면 됩니다. 

{{Code|두 키보드 배치 전환|<pre>
Section "InputClass"
	Identifier "keyboard-all"
	Driver "evdev"
	Option "XkbLayout"    "us,ru"
	Option "XkbOptions"   "grp:alt_shift_toggle,grp_led:scroll"
	MatchIsKeyboard "on"
EndSection
</pre>
}}

여기서, <code>XkbOptions</code>은 간단하게 <code>Alt-Shift</code> 키를 눌러 키보드 배치를 전환할 수 있게 해줍니다. 또한 감사하게도 <code>grp_led:scroll</code> 옵션 덕분에 스크롤 록 불을 켜거나 끌 수 있도록 합니다. 이는 잠깐동안 어떤 키보드 배치를 사용하는지 나타내는 매우 간편한 표시기입니다.

=== systemd ===

systemd 에서 X11 서버용 키맵 배치는 <code>localectl</code> 명령으로 설정할 수 있습니다. 먼저 존재하는 X11 키맵 배치가 어떤 것들이 있는지 확인하십시오:

{{RootCmd|localectl list-x11-keymap-layouts}}

다음 원하는 X11 키맵 배치를 설정하십시오:

{{RootCmd|localectl set-x11-keymap it}}

마지막으로 X11 키맵 배치를 올바르기 설정했는지 확인하십시오:

{{RootCmd|<nowiki>localectl | grep "X11 Layout"</nowiki>|output=<pre>
      X11 Layout: it
</pre>}}

== KDE ==

KDE에서는 <code>kde-base/kde-l10n</code>과 <code>app-office/calligra-l10n</code>패키지를 설치해야 합니다. 이미 앞서 설명한 내용을 따라가시면 됩니다.

== 콘솔에서 유로 심볼 사용하기 ==

콘솔에서 유로화 기호를 표시하려면, {{Path|/usr/share/consolefonts/}} 에서 찾을 수 있도록 {{Path|/etc/conf.d/consolefont}}의 <code>consolefont</code> 파일을 설정해야 합니다. (<code>.psfu.gz</code> 제외). <code>lat9w-16</code>에 유로화 기호가 있습니다. 

{{Code|콘솔 글꼴 설정|<pre>
consolefont="lat9w-16"
</pre>
}}

<code>consolefont</code>가 부트 런레벨에 있는지 확인해야 합니다: 

{{RootCmd|rc-update -v show {{!}} grep consolefont}}

런레벨에 <code>consolefont</code>에 대해 표시된 내용이 없으면 적당한 레벨에 추가하십시오: 

{{RootCmd|rc-update add consolefont boot}}

== X에서의 유로 기호 ==

=== 대부분의 프로그램 ===

Getting the Euro symbol to work properly in X is a little bit tougher. The first thing you should do is change the <code>fixed</code> and <code>variable</code> definitions in {{Path|/usr/share/fonts/misc/fonts.alias}} to end in <code>iso8859-15</code> instead of <code>iso8859-1</code> . 

{{Code|기본 X 글꼴 설정|<pre>
fixed        -misc-fixed-medium-r-semicondensed--13-120-75-75-c-60-iso8859-15
variable     -*-helvetica-bold-r-normal-*-*-120-*-*-*-*-iso8859-15
</pre>
}}

Some applications use their own font, and you will have to tell them separately to use a font with the Euro symbol. You can do this at a user-specific level in {{Path|.Xdefaults}} (you can copy this file to {{Path|/etc/skel/}} for use by new users), or at a global level for any application with a resource file in {{Path|/usr/share/X11/app-defaults/}} (like xterm). In these files you generally have to change an existing line, rather than adding a new one. To change our xterm font, for instance: 

{{Cmd|echo 'XTerm*font: fixed' >> ~/.Xresources 
|xrdb -merge ~/.Xresources}}

=== (X)Emacs의 유로 기호 ===

(X)Emacs에서 유로 기호를 사용하려면, 다음 내용을 {{Path|.Xdefaults}}에 추가하십시오: 

{{Code|이맥스 글꼴 설정|<pre>
Emacs.default.attributeFont: -*-courier-medium-r-*-*-*-120-*-*-*-*-iso8859-15
</pre>
}}

XEmacs(Emacs 아님)에서는 해야 할 일이 조금 더 있습니다. {{Path|/home/user/.xemacs/init.el}} 에 추가하십시오: 

{{Code|xemacs 글꼴 설정|<pre>
(define-key global-map '(EuroSign) '[€])
</pre>
}}

=== 리버오피스 ===

<code>app-office/libreoffice</code>와 <code>app-office/libreoffice-bin</code>의 최신 안정 ebuild는 설치한 GUI 언어 팩 선택을 지원합니다. GUI 번역, 하이픈 표시, 철자 검사, 사용하는 언어에 대한 다른 지역화를 보려면 [https://translations.documentfoundation.org/ 리버오피스 번역 웹 사이트] 를 참고하십시오.

== NLS ==

메시지 기반 지역화를 지원하는 프로그램이 지역화가 동작하도록 하려면, <code>nls</code>(Native Language Support) USE 플래그 설정을 한 상태에서 프로그램을 컴파일 해야 합니다. nls를 사용하는 대부분의 프로그램은 지역화 메시지를 추출해서 사용할 gettext 라이브러리도 필요합니다. 물론, 포티지는 필요한 경우 자동으로 설치합니다.

<code>nls</code> USE 플래그를 활성화 하고 나면 일부 패키지를 다시 이머지 해야 합니다:

{{Emerge|params+=--newuse --deep --with-bdeps=y|@world}}

== LINGUAS ==

<code>LINGUAS</code>라고 하는 추가 지역화 변수가 있는데 이 변수는 gettext 기반 프로그램에 설치할 지역화 파일에 영향을 주며, <code>kde-base/kde-l10n</code> 그리고 <code>app-office/libreoffice</code>와 같은 일부 프로그램 패키지의 지역화를 결정합니다. 변수는 언어 코드를 "공백" 으로 구분한 목록을 지니며 {{Path|/etc/portage/make.conf}}에 변수값을 설정할 것을 권장합니다: 

{{RootCmd|nano -w /etc/portage/make.conf|output=<pre>
## (Add in the LINGUAS variable. For instance, for German, Finnish and English:)
LINGUAS="de fi en"
</pre>}}

사용할 수 있는 로캘 목록은 {{Path|/usr/portage/profiles/desc/linguas.desc}}로 제공합니다: 

{{Cmd|grep -i french /usr/portage/profiles/desc/linguas.desc|output=<pre>
fr - French locale
fr_CA - French locale for Canada
fr_FR - French locale for France
</pre>
}}

<code>LINGUAS</code> 환경 변수 설정이 끝나면 일부 패키지를 다시 이머지 해야 합니다.

{{Emerge|params+=--newuse --deep --with-bdeps=y|@world}}

=== 자원 ===

Xorg 자원: * [[Evdev]] 게시글의 [[Evdev#Keyboard_layout|키보드 배치]]

== 감사문 ==

이 안내서에 제공한 노고에 대해 다음 작성자와 편집자분들께 감사의 말을 전하고자 합니다:

* Alexander Holler
* Steven Lucy
* Benny Chuang
* Lars Weiler
* Tobias Scherbaum
* Flammie Pirinen
* nightmorph
* klondike
[[Category:Localization]]
