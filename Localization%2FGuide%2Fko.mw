<languages />

{{Metadata|abstract=이 안내서는 사용자가 젠투 리눅스 배포판의 로캘을 임의의 유럽 로캘로 지역화 하는데 도움을 주고자 합니다. 독일 문서로부터 번역했으므로 사례로서 독일권을 들었습니다. 유로화 심볼 사용 내용이 설정 내용에 포함되어 있습니다.}}

== 시간대 ==

시간 속성을 유지하려면 시간대를 선택하여 시스템이 어디에 위치했는지를 알려야 합니다.

=== OpenRC ===

{{Path|/usr/share/zoneinfo}}에서 시간대 정보를 찾아보십시오. 기대대로의 지역 이름이 나타나지 않는 {{Path|/usr/share/zoneinfo/Etc/GMT*}} 시간대는 피하십시오. 예를 들어 {{Path|GMT-8}}는 실제로 GMT+8입니다.

브뤼셀 시간대를 사용한다고 가정해보겠습니다, 다음과 같이 {{Path|/etc/timezone}}을 편집하십시오:

{{RootCmd|nano -w /etc/timezone|output=<pre>
Europe/Brussels
</pre>}}

{{Package|timezone-data}}를 이머지하면 {{Path|/etc/localtime}} 파일을 적절하게 업데이트합니다:

{{RootCmd|emerge --config timezone-data}}

새 시간대 정보를 확인하십시오:

{{RootCmd|date|output=<pre>
Wed Mar  8 00:46:05 CET 2006
</pre>
}}

{{Note/ko|시간대 이름(이 경우 "CET")이 여러분이 사는 지역에 맞는지 확인하십시오.}}

{{Note/ko|<code>TZ</code>값을 사용자측면 설정을 위해 쉘 rc 파일에 {{Path|/usr/share/zoneinfo}} 다음에 오는 모든 값으로 설정할 수 있습니다. 이 경우 <code>TZ{{=}}"Europe/Berlin"</code>입니다.}}

=== systemd ===

systemd를 사용한다면 <code>timedatectl</code> 명령을 사용하여 시간대를 설정해야 합니다. 먼저 시간대 이름이 존재하는지 확인하십시오:

{{RootCmd|timedatectl list-timezones}}

그 다음 시간대를 선택하십시오:

{{RootCmd|timedatectl set-timezone Europe/Brussels}}

마지막으로 <code>timedatectl</code> 명령을 인자 없이 실행하여 결과를 확인하십시오:

{{RootCmd|timedatectl}}

== 하드웨어 시계 ==

=== OpenRC ===

대부분의 젠투 리눅스 설치시, 하드웨어 클록을 UTC(또는 GMT, 그리니지 표준시)로 설정하고 실제 지역 시간을 결정하는 시간대를 계정에 부여합니다. 어떤 이유로 여러분의 하드웨어를 UTC로 설정하면 안될 수도 있는데 이 경우 {{Path|/etc/conf.d/hwclock}}를 편집해야 하고(또는 젠투 BSD를 사용한다면 {{Path|/etc/conf.d/adjkerntz}}), <code>clock</code> 값을 <code>UTC</code>에서 <code>local</code>로 바꾸어야 합니다. 

{{Code|/etc/conf.d/hwclock에서 UTC 시계 사용|<pre>
clock="UTC"</pre>}}

{{Code|/etc/conf.d/hwclock에서 지역 시간대 사용|<pre>
clock="local"</pre>}}

For more details like '''System clock''' see the [[System_time#System_clock|System time]] article.

== 로캘 시스템 ==

=== 로캘이 무엇인가요? ===

A locale is a set of information that most programs use for determining country and language specific settings. The locales and their data are part of the system library and can be found at {{Path|/usr/share/i18n/locales/}} on most systems. A locale name is generally named <code>ab_CD</code> where <code>ab</code> is your two (or three) letter language code (as specified in ISO-639) and <code>CD</code> is your two letter country code (as specified in ISO-3166). Variants are often appended to locale names, e.g. <code>en_GB.UTF-8</code> or <code>de_DE@euro</code>. Please explore [http://en.wikipedia.org/wiki/Locale Wikipedia] to read more about locales and related articles.

=== 로캘 환경 변수 ===

로캘 설정의 다른 양상을 다루는 변수는 아래 표에 주어져 있습니다. 각각의 변수는 위에 주어진 <code>ab_CD</code> 형식과 같은 로캘 이름을 갖습니다. 

{| class="wikitable" style="text-align: left;" 
|- 
! Variable name
! Explanation
|- 
| LANG
| Defines all locale settings at once, while allowing further individual customization via the LC_* settings below.
|- 
| LC_COLLATE
| Define alphabetical ordering of strings. This affects e.g. output of sorted directory listing.
|- 
| LC_CTYPE
| Define the character handling properties for the system. This determines which characters are seen as part of alphabet, numeric and so on. This also determines the character set used, if applicable.
|- 
| LC_MESSAGES
| Programs' localizations stored in {{Path|/usr/share/locale/}} for applications that use message based localization scheme (majority of Gnu programs, see next chapters for closer information which do, and how to get the programs, that don't, to work).
|- 
| LC_MONETARY
| Defines currency units and formatting of currency type numeric values.
|- 
| LC_NUMERIC
| Defines formatting of numeric values which aren't monetary. Affects things such as thousand separator and decimal separator.
|- 
| LC_TIME
| Defines formatting of dates and times.
|- 
| LC_PAPER
| Defines default paper size.
|- 
| LC_ALL
| A special variable for overriding all other settings.
|-
|}

{{Note/ko|에스토이아어권과 같은 일부 로캘의 경우 다른 정렬 기준을 사용하는데 반해, 어떤 프로그램은 기대하던 바대로의 기존의 영문 알파벳 정렬순서 방식으로 작성합니다. 따라서 시스템 범위 설정을 다룰 경우 LC_COLLATE 값을 C로 확실하게 설정하는것을 권장합니다.}}

{{Warning|Using LC_ALL is strongly discouraged as it automatically overrides all other LC_* variables (LANG is not affected). This means that changes made by other means will be hidden until LC_ALL is set to a null string. It is probably best not to set it in a startup file.}}

대부분의 사용자는 전세계 기반의 LANG 값을 설정합니다.

=== 특정 로캘 생성 ===

아마도 하나 또는 두가지 정도의 로캘만을 사용할지도 모릅니다. {{Path|/etc/locale.gen}}에서 필요한 로캘을 설정할 수 있습니다. 

{{Code|/etc/locale.gen에 로캘 추가|<pre>
en_GB ISO-8859-1
en_GB.UTF-8 UTF-8
de_DE ISO-8859-1
de_DE@euro ISO-8859-15
</pre>
}}

다음 단계에서 <code>locale-gen</code>을 실행하십시오. {{Path|/etc/locale.gen}}파일에 정의한 모든 로캘을 생성합니다. 

{{RootCmd|locale-gen|output=<pre>
 * Generating 4 locales (this might take a while) with 1 jobs
 *  (1/4) Generating en_GB.ISO-8859-1 ...                       [ ok ]
 *  (2/4) Generating en_GB.UTF-8 ...                            [ ok ]
 *  (3/4) Generating de_DE.ISO-8859-1 ...                       [ ok ]
 *  (4/4) Generating de_DE.ISO-8859-15@euro ...                 [ ok ]
 * Generation complete
</pre>}}

{{Note/ko|<code>locale-gen</code>은 <code>glibc-2.3.6-r4</code>이상의 버전에서 사용할 수 있습니다. 이전 버전의 glibc를 사용한다면 업데이트해야 합니다.}}

<code>locale -a</code>를 실행하여 선택한 로캘이 존재하는지 확인할 수 있습니다.

{{Cmd|locale -a|output=<pre>
C
POSIX
de_DE
de_DE.iso88591
de_DE.iso885915@euro
de_DE@euro
deutsch
en_GB
en_GB.iso88591
en_GB.utf8
german
</pre>}}

The {{Path|/usr/lib/locale/locale-archive}} file can be displayed using the strings command.

{{Cmd|strings /usr/lib/locale/locale-archive {{!}} less}}

=== 로캘 설정 ===

==== OpenRC ==== 

When using OpenRC locale settings are stored in environment variables. These are typically set in the {{Path|/etc/env.d/02locale}} (for system-wide settings) and {{Path|~/.bashrc}} (for user-specific settings) file.  More details can be found in [[UTF-8#Setting_the_locale]].  The system wide settings ({{Path|/etc/env.d/02locale}}) can be managed through <code>eselect locale</code>. For instance, to set the <code>LANG</code> variable to the <code>C</code> value:

{{RootCmd|eselect locale list|output=<pre>
Available targets for the LANG variable:
  [1]   C 
  [2]   POSIX
  [3]   en_US
  [4]   en_US.iso885915
  [5]   en_US.utf8
  [ ]   (free form)
</pre>}}

{{RootCmd|eselect locale set 1}}

물론, 파일을 있는 그대로 편집할 수 있고, 로캘 변수 값을 다양하게 설정할 수 있습니다.

{{FileBox|filename=/etc/env.d/02locale|title=Setting the default system locale in /etc/env.d/02locale|lang=bash|1=
LANG="de_DE.UTF-8"
LC_COLLATE="C"
}}

{{Note/ko|비 UTF-8 기반 로캘에서 유로화 기호 (â‚¬)를 사용하려면 <code>de_DE@euro</code>를 LANG 값으로 사용하십시오.}}

가능한 일이기도 하며, 특히 "<code>C</code>" 로캘 전역 설정을 바꾸지 않고 그대로 두는 것은 기존 UNIX 환경에서는 꽤 일반적입니다. 그래도 사용자는 자신의 쉘 RC을 통해 적당한 로캘을 설정할 수 있습니다: 

{{FileBox|filename=~/.bashrc|title=Setting the user locale in ~/.bashrc|lang=bash|1=
export LANG="de_DE.UTF-8"
export LC_COLLATE="C"
}}

시스템을 설정하는 다른 방법은 기본 C 로캘을 벗어나는 것이지만 동시에 UTF-8 문자를 표시하기도 하는 방법입니다. 이 옵션은 {{Path|/etc/env.d/02locale}}의 다음 설정을 사용하면 해결할 수 있습니다: 

{{Code|UTF-8을 지정하는 동안 전통적인 C 로캘 사용하기|<pre>
LC_CTYPE=de_DE.UTF-8
</pre>
}}

위 코드 일부를 사용하면, 여러분이 선호 언어를 강제하지 않은 반면, 사용자들은 자신들의 지역화 파일 이름을 알맞게 볼 수 있습니다. 

올바른 로캘을 설정하고 나면, 시스템이 바뀐 내용을 인지하도록 환경 변수를 업데이트 했는지 확인하십시오.

시스템 범위 기본 로캘:

{{RootCmd|env-update && source /etc/profile}}

사용자 지정 로캘:

{{Cmd|source ~/.bashrc}}

그 다음 {{Key|Ctrl}} + {{Key|Alt}} + {{Key|Backspace}} 키를 눌러 X 서버를 죽이고 로그아웃 한 다음 사용자로 로그인하십시오. 

이제, 설정한 내용이 제대로 바뀌었는지 확인해보겠습니다: 

{{Cmd|locale}}

==== systemd ====

systemd를 사용한다면 <code>localectl</code> 명령으로 로캘을 설정해야 합니다. 사용할 수 있는 로캘이 무엇이 있는지 다음과 같이 확인해보십시오:

{{RootCmd|localectl list-locales}}

그 다음 원하는 로캘을 선택하십시오:

{{RootCmd|<nowiki>localectl set-locale LANG=de_DE.utf8</nowiki>}}

마지막으로 결과가 괜찮은지 확인하십시오:

{{RootCmd|<nowiki>localectl | grep "System Locale"</nowiki>|output=<pre>
   System Locale: LANG=de_DE.utf8
</pre>}}

== 콘솔용 키보드 배치 ==

=== OpenRC ===

콘솔에서 사용하는 키보드 배치는 {{Path|/etc/conf.d/keymaps}} 파일에서 <code>keymap</code> 변수로 설정합니다. 유효한 값은 {{Path|/usr/share/keymaps/YOUR_ARCH/}}에서 찾을 수 있습니다. {{Path|i386}}에는 더 많은 하위 배치 분류가 있습니다({{Path|qwerty/}}, {{Path|azerty/}} 등). 어떤 언어는 다중 옵션을 가지고 있기 때문에 여러분이 필요로하는 어떤 방식이 적당하는지 결정하는데는 실험이 필요할지도 모릅니다. 

{{Code|콘솔 키맵 설정|<pre>
keymap="de"
#keymap="de-latin1"
#keymap="de-latin1-nodeadkeys"
</pre>
}}

=== systemd ===

systemd에서는 <code>localectl</code> 명령을 통해 사용하는 콘솔용 키맵 배치를 설정할 수 있습니다. 먼저 존재하는 키맵 배치가 무엇이 있는지 확인해보십시오:

{{RootCmd|localectl list-keymaps}}

다음 원하는 콘솔 키맵 배치를 설정하십시오:

{{RootCmd|localectl set-keymap it}}

마지막으로 콘솔 키맵 배치를 올바르게 설정했는지 확인하십시오:

{{RootCmd|<nowiki>localectl | grep "VC Keymap"</nowiki>|output=<pre>
       VC Keymap: it
</pre>}}

== X 서버용 키보드 배치 ==

X 서버에서 사용하는 키보드 배치는 {{Path|/etc/X11/xorg.conf}} 파일의 <code>XkbLayout</code> 옵션에서 지정합니다. 

{{Code|X 키맵 설정|<pre>
Section "InputClass"
	Identifier "keyboard-all"
	Driver "evdev"
	Option "XkbLayout" "de"
	#Option "XkbModel" "pc105"
	MatchIsKeyboard "on"
EndSection
</pre>
}}

국제 키보드 배치를 가지고 있다면, <code>XkbModel</code> 옵션을 <code>pc102</code>또는 <code>pc105</code>값으로, 특정 일부 추가키를 키보드에 매핑할 수 있도록 설정해야 합니다. 

데드키는 직접적으로 나타나지 않는 키입력을 가능케 하지만, 단일 문자로 나타날 다른 문자와 결합됩니다. <code>XkbVariant</code> 값을 <code>nodeadkeys</code> 값으로 설정하면 X 터미널에서 특수 문자를 입력할 수 있습니다. 

하나 이상의 키보드 배치를 전환하려면(영어, 러시아어 전환), 해야 할 모든 일은 단지 바라던 배치와 단축 명령을 지정하도록 {{Path|xorg.conf}} 에 몇줄만 추가하면 됩니다. 

{{Code|두 키보드 배치 전환|<pre>
Section "InputClass"
	Identifier "keyboard-all"
	Driver "evdev"
	Option "XkbLayout"    "us,ru"
	Option "XkbOptions"   "grp:alt_shift_toggle,grp_led:scroll"
	MatchIsKeyboard "on"
EndSection
</pre>
}}

여기서, <code>XkbOptions</code>은 간단하게 <code>Alt-Shift</code> 키를 눌러 키보드 배치를 전환할 수 있게 해줍니다. 또한 감사하게도 <code>grp_led:scroll</code> 옵션 덕분에 스크롤 록 불을 켜거나 끌 수 있도록 합니다. 이는 잠깐동안 어떤 키보드 배치를 사용하는지 나타내는 매우 간편한 표시기입니다.

=== systemd ===

systemd 에서 X11 서버용 키맵 배치는 <code>localectl</code> 명령으로 설정할 수 있습니다. 먼저 존재하는 X11 키맵 배치가 어떤 것들이 있는지 확인하십시오:

{{RootCmd|localectl list-x11-keymap-layouts}}

다음 원하는 X11 키맵 배치를 설정하십시오:

{{RootCmd|localectl set-x11-keymap it}}

마지막으로 X11 키맵 배치를 올바르기 설정했는지 확인하십시오:

{{RootCmd|<nowiki>localectl | grep "X11 Layout"</nowiki>|output=<pre>
      X11 Layout: it
</pre>}}

== 콘솔에서 유로 심볼 사용하기 ==

=== OpenRC ===

콘솔에서 유로화 기호를 표시하려면, {{Path|/usr/share/consolefonts/}} 에서 찾을 수 있도록 {{Path|/etc/conf.d/consolefont}}의 <code>consolefont</code> 파일을 설정해야 합니다. (<code>.psfu.gz</code> 제외). <code>lat9w-16</code>에 유로화 기호가 있습니다. 

{{Code|콘솔 글꼴 설정|<pre>
consolefont="lat9w-16"
</pre>
}}

<code>consolefont</code>가 부트 런레벨에 있는지 확인해야 합니다: 

{{RootCmd|rc-update -v show {{!}} grep consolefont}}

런레벨에 <code>consolefont</code>에 대해 표시된 내용이 없으면 적당한 레벨에 추가하십시오: 

{{RootCmd|rc-update add consolefont boot}}

== X에서의 유로 기호 ==

=== 대부분의 프로그램 ===

X에서 유로화 기호가 나타나도록 하는 일은 약간 어렵습니다.  먼저  {{Path|/usr/share/fonts/misc/fonts.alias}}의 <code>fixed</code> 와 <code>variable</code> 정의를 <code>iso8859-1</code> 대신 <code>iso8859-15</code>로 바꾸어야 합니다. 

{{Code|기본 X 글꼴 설정|<pre>
fixed        -misc-fixed-medium-r-semicondensed--13-120-75-75-c-60-iso8859-15
variable     -*-helvetica-bold-r-normal-*-*-120-*-*-*-*-iso8859-15
</pre>
}}

어떤 프로그램은 자체 글꼴을 쓰지만, 유로화 기호가 들어간 글꼴을 사용하도록 따로 알려야 합니다. 사용자 수준에서의 {{Path|.Xdefaults}} 파일(이 파일을 새 사용자를 위해 {{Path|/etc/skel}}로 복사할 수 있습니다), 또는{{Path|/usr/share/X11/app-defaults/}}에 있는 전역 레벨의 (xterm같은)프로그램 리소스 파일에서 이런 조치를 취할 수 있습니다. 이 파일에서 새 줄을 추가하기 보다는 이미 존재하는 줄의 내용을 바꿔야 합니다. xterm 글꼴을 바꾸려면 다음처럼 하십시오: 

{{Cmd|echo 'XTerm*font: fixed' >> ~/.Xresources 
|xrdb -merge ~/.Xresources}}

=== (X)Emacs의 유로 기호 ===

(X)Emacs에서 유로 기호를 사용하려면, 다음 내용을 {{Path|.Xdefaults}}에 추가하십시오: 

{{Code|이맥스 글꼴 설정|<pre>
Emacs.default.attributeFont: -*-courier-medium-r-*-*-*-120-*-*-*-*-iso8859-15
</pre>
}}

XEmacs(Emacs 아님)에서는 해야 할 일이 조금 더 있습니다. {{Path|/home/user/.xemacs/init.el}} 에 추가하십시오: 

{{Code|xemacs 글꼴 설정|<pre>
(define-key global-map '(EuroSign) '[€])
</pre>
}}

== NLS ==

For message based localization to work in programs that support it and have the <code>nls</code> (Native language support) USE flag, you will probably need to have the programs compiled with this flag set. Message strings are installed in {{Path|/usr/share/locale/<locale>/LC_MESSAGES/<package>.mo}} files. Most of the programs using nls also need the gettext library to extract and use localized messages. Of course, Portage will automatically install it when needed.

<code>nls</code> USE 플래그를 활성화 하고 나면 일부 패키지를 다시 이머지 해야 합니다:

{{Emerge|params+=--newuse --deep --with-bdeps=y|@world}}

== LINGUAS ==

There is also an additional localization variable called [https://devmanual.gentoo.org/general-concepts/linguas/<code>LINGUAS</code>], which affects the localization files that get installed in gettext-based programs, and decides which GUI language packs should be downloaded and installed for some specific software packages, such as [[Firefox]], [[Thunderbird]], [[KDE#Localization|kde-base/kde-l10n]] or [[LibreOffice|app-office/libreoffice-l10n]]. The variable takes in ''space''-separated list of language codes, and a suggested place to set it is {{Path|[[:/etc/portage/make.conf]]}}: 

{{RootCmd|nano -w /etc/portage/make.conf|output=<pre>
## (Add in the LINGUAS variable. For instance, for German, Finnish and English:)
LINGUAS="de fi en"
</pre>}}

With <code>LINGUAS=""</code>, most ebuilds would install only the packages' default language but none of the <code>LC_MESSAGES</code> files. They would also not download and install any of the further language packs. For instance, the currently stable [[LibreOffice|app-office/libreoffice]] receives further language support through {{Package|app-office/libreoffice-l10n}} which supports download and installation of the language packs defined in <code>LINGUAS</code>. Since the origin language of libreoffice is <code>en_US</code>, it does not have <code>en_US</code> flag in {{Package|app-office/libreoffice-l10n}}. So with <code>LINGUAS=""</code>, libreoffice still supports <code>en_US</code>.

To see the status of GUI translation, hyphenation, spell checking and other localisations on your language, please refer to the [https://translations.documentfoundation.org/ LibreOffice translation web site].

For finer grained control it can be set per package in {{Path|[[:/etc/portage/package.use]]}}: 

{{FileBox|filename=/etc/portage/package.use|lang=bash|1=
www-client/firefox linguas_de linguas_pt_BR linguas_en_GB
}}

A list of installed programs making use of the <code>LINGUAS</code> variable and their supported languages can be shown as follows:

{{Cmd|eix -I -U linguas}}

A list of <code>LINGUAS</code> values that can be used is provided as {{Path|/usr/portage/profiles/desc/linguas.desc}}: 

{{Cmd|grep -i french /usr/portage/profiles/desc/linguas.desc|output=<pre>
fr - French locale
fr_CA - French locale for Canada
fr_FR - French locale for France
</pre>
}}

After setting the <code>LINGUAS</code> USE flag it may be necessary to re-emerge some packages:

{{Emerge|params+=--newuse --deep --with-bdeps=y|@world}}

== External resources ==

* [http://www.gnu.org/software/libc/manual/html_node/Locales.html Locales and Internationalization] (gnu.org)

== See also ==

* [[Handbook:AMD64/Installation/Base#Configure_locales|Configuring locales]] (Gentoo Handbooks)
* Xorg resources:
** [[Evdev#Keyboard_layout|Keyboard layout]] inside the [[Evdev]] article
** [[X resources]]


[[Category:Localization]] {{Migrated|originalauthors=Alexander Holler, Steven Lucy, Benny Chuang, Lars Weiler, Tobias Scherbaum, Flammie Pirinen, nightmorph, klondike}}
