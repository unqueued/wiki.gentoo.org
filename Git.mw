{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://git-scm.com|header=true}}
|{{InfoBox wikipedia|Git (software)}}
}}
'''git''' distributed revision control and source code management. The goal of this article is to easily get a git repository up and running pushing and pulling, and making the installed version of git comparable with (the majority of) http://git-scm.com/book/en/ .

Git was developed by Linus Torvalds for use on the Linux Kernel, and other Open Source projects.  According to a talk he gave for Google, he was searching for an SCM and used three criteria which brought the number of adequate systems to zero:

# Must be distributed. 
# Must be fast. 
# What you get out MUST BE EXACTLY what you put in, or you get an error. 

Since there were no satisfactory options, he wrote Git.

=== Installation ===
Install {{Package|dev-vcs/git}}:
{{Emerge|git}}

=== Tutorials ===

There are lots of really good tutorials on git.  Let's not re-invent the wheel.  Here are some I know and like, but any search engine will show you lots of examples.

# http://git-scm.com/doc
## Official documentation
## Video tutorials
# http://try.github.io/levels/1/challenges/1
## Free, good basic first-time tutorial
# https://www.codeschool.com/courses/git-real
## The first section is free, the rest are paid.
## A really straightforward tutorial

== Configuration ==
{{Cmd
git config --global user.email "you@yourdomain.com"
git config --global user.name "your_username"
}}

=== Local ===

If you're the only one using your project, or if you're creating something which will be shared in a distributed way, then you should start on your workstation.  If you intend to have a central server which everyone uses as the "official" server (e.g. github) then it might be easier to create an empty repository there.

This section, describes creating the repository on your workstation.

Here's an example of creating a project on your workstation:

# cd ~/src
# mkdir hello
# cd hello
# touch README.TXT
# <maybe add some other files which will be included in the initial state of the project>
# git init

You're done.

Note:  Your repository is the .git folder inside the main "hello" folder.  If you delete ~/src/hello, then your repo is gone.

Look to the tutorials to go further.

=== Server ===
In this section will cover setting up a git server for remote project management through SSH.

'''Note:''' The git server is only necessary if you intend to have an ''unauthenticated read-only server'' for people to get your code from.  See here:
http://git-scm.com/book/en/Git-on-the-Server-Git-Daemon

If you're not sure, then skip this section.

==== Initial Setup ====

Start by creating the needed group, user, and home directory.
The user uses the git-shell to prevent normal shell access.
{{RootCmd
|groupadd git
|useradd -m -g git -d /var/git -s /usr/bin/git-shell git}}


Edit {{Path|/etc/conf.d/git-daemon}} to change user from ''"nobody"'' to ''"git"'' and start the daemon.
{{File|/etc/conf.d/git-daemon||<pre>
...
GIT_USER="git"
GIT_GROUP="git"
...
</pre>}}
{{RootCmd|/etc/init.d/git-daemon start}}

==== SSH Keys ====
[[SSH]] is the prefered method to handle the secure communications between client and server.
For Git to work properly, you must have private/public key logins enabled and all client public keys added to {{Path|/var/git/.ssh/authorized_keys}}.
For more information and instructions on how to enable, create, and share keys, please see the [[SSH#Passwordless_Authentication|SSH - Passwordless Authentication]] wiki page.
{{Note|'''this step must be completed before continuing'''}}


==== Usage ====


===== Create a Repository and make the First Commit =====
'''On the server:'''

Become user git to make sure all objects are owned by this user

{{RootCmd|su git}}

Create a bare repository

{{Cmd
|cd /var/git
|mkdir /var/git/newproject.git
|cd /var/git/newproject.git
|git init --bare}}


'''On a the client station:'''
{{Cmd
|mkdir ~/newproject
|cd ~/newproject
|git init
|touch test
|git add test
|git config --global user.email "dev@example.com"
|git config --global user.name "dev"
|git commit -m 'initial commit'
|git remote add origin git@example.com:newproject.git
|git push origin master}}

== Common Commands ==

'''Clone a repository:'''
{{Cmd|git clone git@example.com:newproject.git}}


== See Also ==

* [[Gitolite]]


== External resources ==

* [http://jeffkreeftmeijer.com/2010/why-arent-you-using-git-flow/ git flow documentation], client side scripts to make git repository management a snap.
* [http://git-scm.com/book/ Git Handbook]
* [http://git-scm.com/ Git Homepage]
* [https://en.wikipedia.org/wiki/Git_(software) Git Wikipedia Entry]


[[Category:Software]]
