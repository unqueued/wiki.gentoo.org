{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|https://01.org/linuxgraphics|header=true}}
|{{InfoBox wikipedia|Intel GMA}}
|{{InfoBox gitweb|https://cgit.freedesktop.org/xorg/driver/xf86-video-intel|text=GitWeb (userspace driver)|raw=true}}
|{{InfoBox odoc|https://01.org/linuxgraphics/}}
}}

'''intel''' is [[Article description::the open source graphics driver for Intel GMA on-board graphics cards, starting with the Intel 810.]]

== Hardware detection ==

To choose the right driver, first detect the graphics card. {{c|[[lspci]]}} can be used for this task:

{{RootCmd|lspci {{!}} grep -i VGA}}

This should show something like this:
{{RootCmd|lspci {{!}} grep -i VGA|output=<pre>00:02.0 VGA compatible controller: Intel Corporation 3rd Gen Core processor Graphics Controller (rev 09)</pre>}}

{{Note|The {{c|lspci}} output for the graphics controller may refer to ''CPU generations'', whereas the '''Feature support''' table below refers to ''GPU generations''. E.g., “3rd Gen” in the example lspci output above corresponds to “Gen7” in the table below.}}

== Feature support ==

{| class="table table-striped table-condensed"
|-
! Generation
! Chipset
! OpenGL
! OpenGL ES
! OpenCL
! [[VAAPI]]
! Vulkan
! VIDEO_CARDS
|-
| [[Wikipedia:List_of_Intel_graphics_processing_units#First_generation|Gen 1]]
| 810, 815
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| unsupported
|-
| [[Wikipedia:List_of_Intel_graphics_processing_units#Second_generation|Gen 2]]
| i830M, 845G, 855GM, 865G
| {{Yes|1.3}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| ''intel i915''
|-
| [[Wikipedia:List_of_Intel_graphics_processing_units#Third_generation|Gen 3]]
| 915G/GM, 945G/GM, G/Q33, Q35, Atom D4xx/D5xx/N4xx/N5xx
| {{Yes|1.4}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| ''intel i915''
|-
| [[Wikipedia:List_of_Intel_graphics_processing_units#Fourth_generation|Gen 4]]
| 965G/GM/Q, G35, G41, G/Q43, G/GM/Q45
| {{Yes|2.1}}
| {{Yes|2.0}}
| {{No}}
| {{Partial|G/GM45: MPEG2 only}}
| {{No}}
| ''intel i965''
|-
| [[Wikipedia:List_of_Intel_graphics_processing_units#Fifth_generation|Gen 5]]
| [[Wikipedia:Nehalem_(microarchitecture)|Nehalem]] (Ironlake)
| {{Yes|2.1}}
| {{Yes|2.0}}
| {{No}}
| {{Yes}}
| {{No}}
| ''intel i965''
|-
| [[Wikipedia:List_of_Intel_graphics_processing_units#Sixth_generation|Gen 6]]
| [[Wikipedia:Sandy_Bridge|Sandy Bridge]]
| {{Yes|3.3}}
| {{Yes|3.0}}
| {{No}}
| {{Yes}}
| {{No}}
| ''intel i965''
|-
| [[Wikipedia:List_of_Intel_graphics_processing_units#Seventh_generation|Gen 7]]
| [[Wikipedia:Ivy_Bridge_(microarchitecture)|Ivy Bridge]], Valley View, Atom Z36xx/Z37xx
| {{Yes|3.3}}
| {{Yes|3.0}}
| {{Yes|1.1<ref name="ocl" group="table"/>}}
| {{Yes}}
| {{Partial}}
| ''intel i965''
|-
|-
| [[Wikipedia:List_of_Intel_graphics_processing_units#Seventh_generation|Gen 7.5]]
| [[Wikipedia:Haswell_(microarchitecture)|Haswell]]
| {{Yes|4.5}}
| {{Yes|3.1}}
| {{Yes|1.1<ref name="ocl" group="table"/>}}
| {{Yes}}
| {{Partial}}
| ''intel i965''
|-
| [[Wikipedia:List_of_Intel_graphics_processing_units#Eighth_generation|Gen 8]]
| [[Wikipedia:Broadwell_(microarchitecture)|Broadwell]], Cherryview (Braswell, Cherry Trail)
| {{Yes|4.5}}
| {{Yes|3.1}}
| {{Yes|1.1<ref name="ocl" group="table"/>}}
| {{Yes}}
| {{Yes}}
| ''intel i965''
|-
| [[Wikipedia:List_of_Intel_graphics_processing_units#Ninth_generation|Gen 9]]
| [[Wikipedia:Skylake_(microarchitecture)|Skylake]], [[Wikipedia:Kaby_Lake|Kaby Lake]], Apollo Lake
| {{Yes|4.5}}
| {{Yes|3.2}}
| {{Yes|1.1<ref name="ocl" group="table"/>}}
| {{Yes}}
| {{Yes}}
| ''intel i965''
|}

<references group="table">
<ref name="ocl">Uses the {{Package|dev-libs/beignet}} package ([https://wiki.freedesktop.org/www/Software/Beignet/ Upstream info])</ref>
</references>

A full list of Intel CPU graphic capabilities can be found [[Wikipedia:Intel_HD_and_Iris_Graphics#Capabilities|here]].

== Installation ==

=== Firmware ===

If you are using Kaby Lake, Skylake or Broxton Intel Graphics, install {{Package|sys-kernel/linux-firmware}}.

{{Emerge|params+=|sys-kernel/linux-firmware}}

Otherwise with {{c|dmesg}} you might see errors such as:
<pre>
kernel: i915 0000:00:02.0: Direct firmware load for i915/skl_dmc_ver1_26.bin failed with error -2
kernel: i915 0000:00:02.0: Failed to load DMC firmware [https://01.org/linuxgraphics/intel-linux-graphics-firmwares], disabling runtime power management.
</pre>

Include the files required for your GPU in the kernel, in this case:

{{KernelBox|
Device Drivers  --->
    Generic Driver Options  --->
        -*- Userspace firmware loading support
        [*] Include in-kernel firmware blobs in kernel binary
            (i915/skl_dmc_ver1_26.bin)
            (/lib/firmware) Firmware blobs root directory
}}


It’s possible to add GuC firmware too, but there are problems with it, so it [https://patchwork.kernel.org/patch/9235689/ won’t be loaded by default] (passing additional parameters is needed). It’s actual for kernel 4.8.7 at least.

Please note that firmware file name should match one from MODULE_FIRMWARE in the source tree. Now it’s <code>i915/skl_dmc_ver1_26.bin</code> (not <code>i915/skl_dmc_ver1.bin</code>) for DMC firmware. To check this for GuC and DMC firmwares you can type the following command within linux source tree:

{{Cmd|grep -B 1 'MODULE_FIRMWARE.*SKL' drivers/gpu/drm/i915/intel_guc_loader.c drivers/gpu/drm/i915/intel_csr.c|output=<pre>
drivers/gpu/drm/i915/intel_guc_loader.c-#define I915_SKL_GUC_UCODE "i915/skl_guc_ver6_1.bin"
drivers/gpu/drm/i915/intel_guc_loader.c:MODULE_FIRMWARE(I915_SKL_GUC_UCODE);
--
drivers/gpu/drm/i915/intel_csr.c-#define I915_CSR_SKL "i915/skl_dmc_ver1_26.bin"
drivers/gpu/drm/i915/intel_csr.c:MODULE_FIRMWARE(I915_CSR_SKL);
</pre>}}

=== Kernel ===

The following kernel options need to be activated:

{{KernelBox|title=Prior to Linux 4.4|1=
Processor type and features  --->
    [*] MTRR (Memory Type Range Register) support
Device Drivers  --->
    Graphics support  --->
        <*> /dev/agpgart (AGP Support)  --->
             <*> Intel 440LX/BX/GX, I8xx and E7x05 chipset support
        <*> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
            <*> Intel 8xx/9xx/G3x/G4x/HD Graphics
            [*]   Enable modesetting on intel by default
            [*]   Enable legacy fbdev support for the modesetting intel driver 
}}

The legacy fbdev support is required since kernel 3.14.14 at least for i915 (<code>CONFIG_DRM_I915_FBDEV=y</code>).<ref>Gentoo Forums, [https://forums.gentoo.org/viewtopic-t-998526.html "Black screen on boot after kernel upgrade - grub2"]</ref><ref>Gentoo Forums, [https://forums.gentoo.org/viewtopic-p-7596748.html "Black screen on kernel 3.14.14"]</ref>
For hybrid Intel/AMD system, follow also the steps of [[radeon]] (open source) or [[Fglrx|fglrx]] (closed binary) drivers.

Since kernel version 4.4 the driver has been moved and the legacy fbdev support is now <code>CONFIG_DRM_FBDEV_EMULATION=y</code>.          

{{KernelBox|title=Since Linux 4.4|1=
        Device Drivers  --->
            Graphics support  --->
                <*> /dev/agpgart (AGP Support)  --->
                    --- /dev/agpgart (AGP Support)
                    < >   AMD Opteron/Athlon64 on-CPU GART support
                    -*-   Intel 440LX/BX/GX, I8xx and E7x05 chipset support
                    < >   SiS chipset support
                    < >   VIA chipset support
                [ ] VGA Arbitration
                [ ] Laptop Hybrid Graphics - GPU switching support
                <*> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support)  --->
                    --- Direct Rendering Manager (XFree86 4.1.0 and higher DRI support)
                    [*]   Enable legacy fbdev support for your modesetting driver
                [ ] Allow to specify an EDID data set instead of probing for it
                    I2C encoder or helper chips  --->
                < > 3dfx Banshee/Voodoo3+
                < > ATI Rage 128
                < > ATI Radeon
                < > AMD GPU
                < > Nouveau (NVIDIA) cards
                < > Intel I810
                <*> Intel 8xx/9xx/G3x/G4x/HD Graphics
                [ ]   Enable preliminary support for prerelease Intel hardware by default
                < > Matrox g200/g400
                < > SiS video cards
                < > Via unichrome video cards
                < > Savage video cards
                < > Virtual GEM provider
                < > DRM driver for VMware Virtual GPU
                < > Intel GMA5/600 KMS Framebuffer
                < > DisplayLink
                < > AST server chips
                < > Kernel modesetting driver for MGA G200 server engines
                < > Cirrus driver for QEMU emulated device
                < > QXL virtual GPU
                < > DRM Support for bochs dispi vga interface (qemu stdvga)
                    Display Panels  ----                 
                    Display Interface Bridges  ----
                    Frame buffer Devices  --->
                -*- Backlight & LCD device support  --->
                    Console display driver support  --->
                [*] Bootup logo  --->    
}}

=== Drivers ===

Portage uses the <var>[https://packages.gentoo.org/useflags/video_cards_intel VIDEO_CARDS]</var> variable, which expands into the <var>[[:/etc/portage/make.conf#USE_EXPAND|USE_EXPAND]]</var> variable, for enabling support for various graphics cards. Assuming the {{Package|x11-base/xorg-drivers}} package has already been installed, setting the <var>VIDEO_CARDS</var> variable in {{Path|[[:/etc/portage/make.conf#VIDEO_CARDS|/etc/portage/make.conf]]}} will pull in the correct video driver:

{{FileBox|filename=[[:/etc/portage/make.conf#VIDEO_CARDS|/etc/portage/make.conf]]|title=Gen 1|lang=bash|1=VIDEO_CARDS="intel"}}

{{FileBox|filename=[[:/etc/portage/make.conf#VIDEO_CARDS|/etc/portage/make.conf]]|title=Gen 2 and Gen 3|lang=bash|1=VIDEO_CARDS="intel i915"}}

{{FileBox|filename=[[:/etc/portage/make.conf#VIDEO_CARDS|/etc/portage/make.conf]]|title=Gen 4 through Gen 9|lang=bash|1=VIDEO_CARDS="intel i965"}}

The <code>[https://packages.gentoo.org/useflags/video_cards_intel intel]</code> value is for {{Package|x11-base/xorg-drivers}}. The <code>[https://packages.gentoo.org/useflags/video_cards_i915 i915]</code> and <code> [https://packages.gentoo.org/useflags/video_cards_i965 i965]</code> values [https://bugs.gentoo.org/show_bug.cgi?id=522878#c1 are for media-libs/mesa].

{{Important|Beginning with '''x11-base/xorg-drivers-1.19''', the {{Package|x11-base/xorg-drivers}} package (in addition to the mesa package) includes support the <code>i965</code> USE flag. This will omit selection of the deprecating {{Package|x11-drivers/xf86-video-intel}} driver in favor of the more maintained, generic modesetting DDX driver built-in to {{Package|x11-base/xorg-server}}.}}

After making any {{Path|make.conf}} modifications, update the system so the changes take effect using by passing the <code>--changed-use --deep</code> options to {{c|emerge}}:

{{Emerge|params+=--changed-use --deep|@world}}

Those wishing to not accept the Intel graphic driver defaults in the main repository can read on into the sub-sections below.

==== Intel DDX ====

Before proceeding with the ''Intel DDX driver'', note that this driver has been ''slowly deprecating'' for around two years. This has caused other major<ref>https://lists.fedoraproject.org/archives/list/devel@lists.fedoraproject.org/thread/AUPYPJMFJZMHPEKN24LBABZKIEOV4NU5/</ref><ref>https://tjaalton.wordpress.com/2016/07/23/intel-graphics-gen4-and-newer-now-defaults-to-modesetting-driver-on-x/</ref> Linux distributions to begin to move toward the ''modesetting DDX driver'' (detailed in [[#Modesetting DDX|the section below]]). Although presently faster than ''modesetting driver'', there has been no official package release from Intel upstream for their DDX driver for quite some time<ref>https://cgit.freedesktop.org/xorg/driver/xf86-video-intel/log/</ref>, and is therefore causing a maintenance burden on Gentoo's X11 package maintainers.

With this being stated, the Intel DDX driver has slight speed advantages over the generic modesetting driver as it is able to more closely interact with hardware acceleration present in chips utilizing SNA and DRI3.

===== USE flags =====

Check the USE flags of {{Package|x11-drivers/xf86-video-intel}}:

{{USEflag|package=x11-drivers/xf86-video-intel}}

===== Emerge =====

{{Emerge|x11-drivers/xf86-video-intel}}

===== xorg.conf =====

To force Xorg server to use the Intel DDX driver with SNA for hardware accelleration, the following file can be created in {{Path|/etc/X11/xorg.conf.d/}}:

{{FileBox|filename=/etc/X11/xorg.conf.d/20-intel.conf|title=Force Intel DDX|1=
Section "Device"
    Identifier  "Intel Graphics"
    Driver      "intel"
    Option      "AccelMethod"    "sna"
EndSection
}}

==== Modesetting DDX ====

As mentioned above, the modesetting DDX driver is now the default driver on newer Intel graphics chipsets for Gentoo. This driver uses GLAMOR to accelerate 2D graphical over Mesa (the open source OpenGL implementation). As of '''x11-base/xorg-drivers-1.19''', ''this has become the default'' for Gentoo.

To force the modesetting driver, first make sure <code>glamor</code> has been added to the <var>USE</var> variable:

{{FileBox|filename=/etc/portage/make.conf|title=Enable glamor globally|lang=bash|1=
USE="glamor"
VIDEO_CARDS="intel i965"
}}

{{Emerge|params+=--changed-use --deep|@world}}

===== xorg.conf =====

Now force Xorg server to load the modesetting driver:

{{FileBox|filename=/etc/X11/xorg.conf.d/20-modesetting.conf|title=Force modesetting DDX|1=
Section "Device"
    Identifier  "Intel Graphics"
    Driver      "modesetting"
    Option      "AccelMethod"    "glamor"
    Option      "DRI"            "3"
EndSection
}}

Note, if both {{Path|20-intel.conf}} and {{Path|20-modesetting.conf}} are defined in {{Path|/etc/X11/xorg.conf.d/}}, the X server will attempt to load the files in alpha-numeric order.

=== VAAPI ===

Intel GMA X4500HD / G45 / GM45 and newer supports [[VAAPI]] hardware video acceleration.

=== Vulkan ===

As of November 15th, 2016<ref>https://bugs.gentoo.org/show_bug.cgi?id=580148#c25</ref> Vulkan is supported in the main ebuild repository for Intel Core processors using the i965 mesa driver.

Please note, that this will build a working Vulkan driver, but it will not provide a {{Path|libvulkan.so.1}}, but a drivers-specific {{Path|libvulkan_intel.so}}. The package {{Package|media-libs/vulkan-loader}} provides {{Path|libvulkan.so.1}}.

=== Misc ===

Various utilities useful for debugging are provided by {{Package|x11-apps/intel-gpu-tools}} package.

For example GPU min/max/current frequency can by displayed by:

{{RootCmd|intel_gpu_frequency}}

== Configuration ==

=== Permissions ===

{{VIDEO CARDS/Permissions}}

=== xorg.conf ===

Choose one of the following configuration options:

* Classic Driver -- {{Package|x11-drivers/xf86-video-intel}}
: As xorg is not aware of i915 or i965 they will need to be addressed as Driver <code>intel</code>.

: {{VIDEO_CARDS/xorg.conf|intel}}

* Alternate Driver for Gen 4+ -- Modesetting

: {{Note|Experiences of this configuration can be found in the [[Talk:Intel|Discussion]] of this page. Add any difficulties there so this section can be improved.}}

: As of xorg-server-1.17, the modesetting driver was moved into {{Package|x11-base/xorg-server}}.  This driver has more features than the classic driver, such as GLAMOR.

: This configuration is the default for <code>VIDEO_CARDS="intel i965"</code> beginning with x11-base/xorg-drivers-1.19. If you wish to use the classic driver, you will need to install {{Package|x11-drivers/xf86-video-intel}} manually: {{Emerge|x11-drivers/xf86-video-intel}}

: xorg-server is easily configured to prefer <code>modesetting</code> over the older <code>intel</code> driver.

: {{VIDEO_CARDS/xorg.conf|modesetting}}

The [[X server]] is designed to work out-of-the-box, with no need to manually edit X.Org's configuration files. It should detect and configure devices such as displays, keyboards, and mice.

However, the main configuration file of the X server is the [[xorg.conf]].

== Troubleshooting ==

* {{Bug|xf86-video-intel|search=package}}
* {{Bug|xorg|site=fdo|search=product|component=Driver%2Fintel}}
* {{Bug|DRI|site=fdo|search=product|component=DRM%2FIntel}}
* [https://01.org/linuxgraphics/documentation/how-report-bugs How to file a bug report]

=== HTML5/VAAPI GPU hangs ===

If your GPU hangs up when watching [[VAAPI|VAAPI-accelerated]] video e.g. on YouTube, you can try enabling your IOMMU:

{{KernelBox|1=
Device Drivers  --->
    [*] IOMMU Hardware Support --->
        [*] Support for Intel IOMMU using DMA Remapping Devices
        [*]   Enable Intel DMA Remapping Devices by default
}}

Related [https://bugs.freedesktop.org/show_bug.cgi?id=92814 upstream bug report].

=== KDM freezes ===

A workaround is to set <code>TerminateServer=true</code> in all sections of the file {{Path|/usr/share/config/kdm/kdmrc}}, which starts with <code>X-</code>.

=== KDE's plasma eating CPU ===

If {{Path|/usr/bin/plasmashell}} is always consuming several percent of CPU, perhaps this is related to a vsync problem.
QT Quick Animation seem to loop too fast when vsync is not managed by the driver ([https://bugreports.qt.io/browse/QTBUG-45959 Reference]).

A way to enable vsync with SNA is to enable the <code>TearFree</code> option in {{Path|xorg.conf}}:

{{FileBox|filename=/etc/X11/xorg.conf.d/20-intel.conf|lang=xorg.conf|
Section "Device"
        Identifier "Device0"
        Driver "intel"

        Option      "AccelMethod" "SNA"
        Option      "TearFree"    "true"
EndSection}}

See also [https://community.linuxmint.com/tutorial/view/2304 this] Linux Mint tutorial.

=== Black screen ===

* According to this [https://wiki.debian.org/KernelModesetting Debian wiki], <var>CONFIG_FRAMEBUFFER_CONSOLE</var> must be set to y (aka built-in to the kernel). Otherwise, it is possible to always have a black screen unless <code>nomodeset</code> is passed to the kernel, thus disabling kernel mode setting (KMS). <code>acpi_osi="Linux"</code> can be passed to the kernel command line to try to solve this kind of issue. This is usually done through the bootloader.
* Kernel with version 4.2 or newer is needed with some 8th generation chipsets<ref>Gentoo Forums, [https://forums.gentoo.org/viewtopic-t-1034212.html "N3700 8086:22b1 i915 black screen, works in kernel 4.2.6"]</ref>.

=== Brightness does not change with keyboard shortcuts ===

First, make sure vendor compatibility is on in the kernel configuration. Toshiba for Toshiba, etc.

If it is, or when the brightness buttons are working, the issue is that the kernel can not detect ''where'' the brightness control is located.

Luckily, this is easy enough to modify, as long as the kernel version is >= 3.13.x and < 4.2.

Add the following argument to the kernel command-line:

{{CodeBox|title=Kernel command-line argument|1=video.use_native_backlight=1}}

On kernels >= 4.2, the {{c|video.use_native_backlight}} option is no longer available.<ref>RedHat Bug 1272633: [https://bugzilla.redhat.com/show_bug.cgi?id=1272633#c5 "video.use_native_backlight=1 doesn't work" (comment 5)]</ref> You should use one of the following instead (experiment to see which works on your system):

{{CodeBox|title=Kernel command-line argument|1=acpi_backlight=video}}

{{CodeBox|title=Kernel command-line argument|1=acpi_backlight=native}}

{{CodeBox|title=Kernel command-line argument|1=acpi_backlight=vendor}}

Do your key bindings map to actions viewable in xev? Can you adjust the screen brightness using {{c|xbacklight}}? You can always do a work around via a keyboard remapping. For LXDE it can be done via:

{{FileBox|filename=~/.config/openbox/lxde-rc.xml|lang=xml|1=  
<keybind key{{=}}"XF86MonBrightnessUp">
      <action name{{=}}"Execute">
          <command>xbacklight +5</command>
      </action>
</keybind>
<keybind key{{=}}"XF86MonBrightnessDown">
      <action name{{=}}"Execute">
          <command>xbacklight -5</command>
      </action>
</keybind>
}}

Also, with Modesetting DDX, the {{Package|x11-apps/xbacklight}} package will not work.  Please use {{Package|sys-power/acpilight}} for a compatible interface.

== See also ==

* [[Xorg/Guide]] - A guide on how to configure Xorg.
* [[hprofile]] - Switching between other graphics drivers and intel.

== External resources ==

* [https://www.x.org/wiki/IntelGraphicsDriver/ X.Org Wiki]

== References ==
{{reflist}}

[[Category:Graphics Adapters]]
[[Category:Intel]]
