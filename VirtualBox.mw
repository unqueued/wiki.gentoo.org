{{InfoBox stack
|{{InfoBox homepage|http://www.virtualbox.org|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox ohloh}}
}}

'''VirtualBox''' is cross-platform virtualization software that allows users to run guest operating systems inside a host operating system without having to reboot. Since 2010 VirtualBox software has been written and maintained by the Oracle Corporation.

== Terminology ==

{| class="table table-condensed table-striped"
|-
! scope=col width=20% | Term 
! Explanation
|-
| Host operating system || The host computer. Most likely the physical hardware present in the room. For Gentoo users the host operating system would be Gentoo Linux
|-
| Guest operating system || The operating system ''to be'' installed or ''currently'' installed inside the VirtualBox emulation environment. Possible alternative operating systems include Microsoft Windows, Solaris, BSD, Debian, Ubuntu, etc.
|-
| VirtualBox Guest Additions || Drivers for the guest operating system. These drivers provide smoother operation with the Host operating system compared to the standard drivers installed by the Guest operating system.
|}

== Installation ==

There is a source based package ({{Package|app-emulation/virtualbox}}) and a binary package ({{Package|app-emulation/virtualbox-bin}}) available in the Portage tree. The binary version is available so 64bit no-multilib users can use VirtualBox, too. The binary package contains some extensions which are not available in the source package. To get identical functionality with the source package, emerge it with the <code>extensions</code> USE being enabled.

The <code>qt4</code> USE controls installation of the graphical user interface (GUI) which is enabled by default.

{{Note|Since many of the same files are provided by one package or the other, only one virtualbox package can be installed at a time on the same system (either {{Package|app-emulation/virtualbox}} or {{Package|app-emulation/virtualbox-bin}}. Trying to install them both at the same will with result in a Portage complaining about blockers.}}

=== USE flags ===

==== VirtualBox ====

{{USEflag|package=app-emulation/virtualbox}}

==== VirtualBox-bin ====

{{USEflag|package=app-emulation/virtualbox-bin}}

{{RootCmd|echo "app-emulation/virtualbox-bin PUEL" >> /etc/portage/package.license}}

=== Emerge ===

==== VirtualBox ====

{{Emerge|app-emulation/virtualbox}}

==== VirtualBox-bin ====

{{Emerge|app-emulation/virtualbox-bin}}

=== Windows guests ===

==== VirtualBox 4.x ====

For VirtualBox versions < 5.0.0, enable the <code>additions</code> USE flag when installing VirtualBox on the host system to get the Guest Additions ISO image that contains all necessary Windows guest drivers.

==== Virtualbox 5.x ====

Starting with versions >= 5.0.0, emerge the {{Package|app-emulation/virtualbox-additions}} package on the host system to get the Guest Additions ISO image that contains all necessary Windows guest drivers:

{{Emerge|app-emulation/virtualbox-additions}}

=== Gentoo guests ===

==== Kernel configuration ====

When running Gentoo as a guest system, enable the following kernel options on the guest system (either built-in or as modules) to get proper support for the hardware emulated by VirtualBox:

{{KernelBox|title=Support for VirtualBox hardware|1=
<*> Bus options (PCI etc.)  --->
    [*] Mark VGA/VBE/EFI FB as generic system framebuffer
<*> Device Drivers  --->
    <*> Serial ATA and Parallel ATA drivers (libata)  --->
        [*] AHCI SATA support
        [*] ATA SFF support (for legacy IDE and PATA)
        [*]   ATA BMDMA support
        [*]     Intel ESB, ICH, PIIX3, PIIX4 PATA/SATA support
    <*> Network device support  --->
        <*> Ethernet driver support  --->
            [*] Intel devices
            [*]   Intel(R) PRO/1000 Gigabit Ethernet support
    <*> Input device support  --->
        <*> Keyboards  --->
            [*] AT keyboard
        <*> Mice  --->
            [*] PS/2 mouse
    <*> Graphics support  --->
        <*> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support)  --->
            [*] Enable legacy fbdev support for your modesetting driver
        <*> Virtio GPU driver
        <*> Frame buffer Devices  --->
            <*> Support for frame buffer devices  --->
                [*] Enable Firmware EDID
            [*] Simple framebuffer support
        <*> Console display driver support  --->
            [*] Framebuffer Console support
            [*]   Map the console to the primary display device
    <*> Sound card support  --->
        <*> Advanced Linux Sound Architecture  --->
            <*> PCI sound devices  --->
                [*] Intel/SiS/nVidia/AMD/ALi AC97 Controller
    <*> USB support  --->
        [*] xHCI HCD (USB 3.0) support
        [*] EHCI HCD (USB 2.0) support
}}

==== Guest Additions ====

To install the Guest Additions, invoke the following command on the Gentoo guest system:

{{Emerge|app-emulation/virtualbox-guest-additions}}

To enable the shared clipboard, display resizing, seamless mode, and drag and drop make sure the user running the [[X]] session belongs to the {{c|vboxguest}} group:

{{RootCmd|gpasswd -a <user> vboxguest}}

Changes will not take effect until the user signs out and then signs in again (re-logins).

To install other Linux distributions as guest operating systems please refer to the distribution's documentation on how to install the drivers needed by VirtualBox or consult the official [https://www.virtualbox.org/manual/ch04.html#idp11274368 VirtualBox documentation].

=== VirtualBox shared folders in a Gentoo guest ===

VirtualBox shared folders can only be mounted after the virtualbox-guest-additions service has been started. Since this happens towards the end of the bootup sequence (OpenRC), a shared folder mount in {{Path|/etc/fstab}} will fail. Either:

* Make the <code>noauto</code> mount option and add a mount/unmount pair of scripts in {{Path|/etc/local.d}}
* View {{Path|/etc/rc.conf}} for information about adding extra dependencies for services.

=== Advanced networking-related ===

According to the ebuild's message after VirtualBox is installed {{Package|sys-apps/usermode-utilities}} and {{Package|net-misc/bridge-utils}} can be installed for advanced network configuration. Install them only if advanced networking is required:

{{Emerge|sys-apps/usermode-utilities}}

{{Emerge|net-misc/bridge-utils}}

== Configuration ==

=== Kernel modules ===

Users will not be able to run and use VirtualBox if they are not a member of the {{c|vboxusers}} group:

{{RootCmd|gpasswd -a <user> vboxusers}}

Changes will not take effect until the user re-login.

Load the required driver module into the kernel. This module is made available when {{Package|app-emulation/virtualbox-modules}} has been emerged:

{{RootCmd|modprobe vboxdrv}}

Optional modules:

{{RootCmd
|modprobe vboxnetadp
|modprobe vboxnetflt
|modprobe vboxpci
}}

==== OpenRC ====

When using OpenRC it is possible to automatically load the modules each time the system boots. Edit the {{Path|/etc/conf.d/modules}} file by adding the following VirtualBox modules:

{{FileBox|filename=/etc/conf.d/modules|lang=bash|1=
modules="vboxdrv vboxnetadp vboxnetflt vboxpci"
}}

==== Systemd ====

When using Systemd, a similar approach can be taken. Create a new file under the {{Path|/etc/modules-load.d}} directory and list, separated by newlines, the kernel modules to load:

{{FileBox|filename=/etc/modules-load.d/virtualbox.conf|1=
vboxdrv
vboxnetadp
vboxnetflt
vboxpci
}}

Modules can be loaded immediately by running:

{{RootCmd|systemctl start systemd-modules-load}}

=== Enable port forwarding to guest machines ===

When booting LiveCDs or other live media, it can be handy to enable port forwarding from the host machine to the guest machine. None of the additional network configuration modes are necessary to for a simple port forwarding setup, so do not dig too deep into upstream docs. Port forwarding can be handy when running a web server, an SSH daemon, or any other service that runs on a specific port.

First, be sure the guest VM is shutdown, then from the command line issue:

{{Cmd|VBoxManage modifyvm "VM name" --natpf1 "guestssh,tcp,,2222,,22"}}

Be sure to replace <code>"VM name"</code> with the proper name of the guest virtual machine. The first number (<code>2222</code>) will be the port on the host machine. The second number (<code>22</code>) will be the port on the guest machine. Adjust accordingly, then reboot the virtual machine. This can also be performed via the GUI by clicking {{Path|Settings}} -> {{Path|Network}} -> {{Path|Advanced}} (drop down) -> {{Path|Port Forwarding}}.

More details can be found in the [https://www.virtualbox.org/manual/ch06.html#natforward upstream documentation].

== Usage ==

There are many options which can influence behavior and performance of the virtual machines. If you don't know what these options are doing, leave them to their defaults. Virtual machines may become unbootable if the wrong options are set.

Here is a list of options that are safe to use:
* Host I/O cache can safely be enabled for all virtual storage controllers.
* If the host system's CPU supports hardware virtualization, enable the 'VT-x/AMD-V' option. It can drastically increase the performance of the virtual machines.

== Troubleshooting ==

=== virtualbox fails to build ===

When the {{Package|app-emulation/virtualbox}} package fails to build because the {{c|javac}} command cannot be found (even with a Java JDK (Java Development Kit) and a Java JRE (Java Runtime Environment) installed), it is likely the JRE has been set as the default system-vm. JRE packages do not contain {{c|javac}}. Make sure the correct system-vm (JDK) has been selected using the {{c|java-config}} command and then try rebuilding virtualbox. More information can be found in the [[Java#Installing a virtual machine|Installing a virtual machine]] section of the Java User Guide.

=== virtualbox-modules fails to build ===

Some users have issues with the {{Package|app-emulation/virtualbox-modules}} package failing to build. This can be caused by an improper kernel/profile configuration. Verify the chosen kernel and the selected profile ''match'' each other. For example, if a hardened profile is set, a hardened kernel should be used. If a default AMD64 profile is set, then the default gentoo-sources should be used. Run the {{c|eselect}} command to view the list of profile options:

{{RootCmd|eselect profile list|output=<pre>
[1]   default/linux/amd64/13.0 *
[2]   default/linux/amd64/13.0/selinux
[3]   default/linux/amd64/13.0/desktop
[4]   default/linux/amd64/13.0/desktop/gnome
[5]   default/linux/amd64/13.0/desktop/gnome/systemd
[6]   default/linux/amd64/13.0/desktop/kde
[7]   default/linux/amd64/13.0/desktop/kde/systemd
[8]   default/linux/amd64/13.0/developer
[9]   default/linux/amd64/13.0/no-emul-linux-x86
[10]  default/linux/amd64/13.0/no-emul-linux-x86/desktop
[11]  default/linux/amd64/13.0/no-emul-linux-x86/desktop/gnome
[12]  default/linux/amd64/13.0/no-emul-linux-x86/desktop/gnome/systemd
[13]  default/linux/amd64/13.0/no-emul-linux-x86/desktop/kde
[14]  default/linux/amd64/13.0/no-emul-linux-x86/desktop/kde/systemd
[15]  default/linux/amd64/13.0/no-emul-linux-x86/developer
[16]  default/linux/amd64/13.0/no-emul-linux-x86/selinux
[17]  default/linux/amd64/13.0/no-multilib
[18]  default/linux/amd64/13.0/x32
[19]  hardened/linux/amd64
[20]  hardened/linux/amd64/selinux
[21]  hardened/linux/amd64/no-multilib
[22]  hardened/linux/amd64/no-multilib/selinux
[23]  hardened/linux/amd64/x32
[24]  hardened/linux/musl/amd64
[25]  default/linux/uclibc/amd64
[26]  hardened/linux/uclibc/amd64
</pre>}}

Then use the {{c|eselect}} command again to display which kernel is selected:

{{RootCmd|eselect kernel list|output=<pre>
[1]   linux-3.13.10-hardened
[2]   linux-3.16.3-hardened-r1
[3]   linux-3.17.2-hardened-r1
[4]   linux-3.18.4-hardened
[5]   linux-3.18.5-gentoo *
</pre>}}

Looking at the output of these two commands, a user can determine if the system is setup properly (the profile matches the kernel) and should have no issues installing {{Package|app-emulation/virtualbox-modules}}. Remember: Make sure the system profile and the selected kernel match!

=== virtualbox-modules permission denied errors ===

The following "Permission denied" errors can be caused by a strict file mode creation mask (e.g. <code>umask 077</code>):

<pre>
cc1: error: ./arch/x86/include/generated/uapi: Permission denied
cc1: error: ./arch/x86/include/generated/uapi: Permission denied
cc1: error: ./include/generated/uapi: Permission denied
cc1: error: ./include/generated/uapi: Permission denied
cc1: error: ./arch/x86/include/generated/uapi: Permission denied
cc1: error: ./include/generated/uapi: Permission denied
cc1: error: ./arch/x86/include/generated/uapi: Permission denied
cc1: error: ./include/generated/uapi: Permission denied
</pre>

The easiest solution would be to backup <code>.config</code>, run <code>make distclean</code> and use the default <code>umask 022</code>.

=== Host key failing to operate in the virtual machine ===

If the host key (typically the right {{Key|Ctrl}} key) is failing to operate within the virtual (guest) machine, be sure any desktop environment or window manager hooks to host key have been ''disabled'' from the host machine's desktop environment or window manager.

For example, the [[GNOME]] 3 desktop environment includes a "Show location of the [mouse] pointer" option in the {{Path|Keyboard and Mouse}} section of the Tweak Tool ({{Package|gnome-extra/gnome-tweak-tool}}). This option will enable a ripple effect to be displayed around the mouse when either the right or left {{Key|Ctrl}} key is pressed. This mouse locator handle conflicts with the virtual machine's handle on the right {{Key|Ctrl}} key. Disabling this setting (via switching the rocker switch to Off in the Tweak Tool interface) should fix the problem by re-assigning the right {{Key|Ctrl}} key as the handle for the host key within the virtual machine.

=== Performance problems ===

==== Microsoft Windows guests ====

* According to the [https://www.virtualbox.org/manual/ch03.html#settings-motherboard documentation], the '''I/O APIC''' feature (''VM -> Settings -> System -> Motherboard -> Enable I/O APIC''), which is enabled by default, 'slightly increases the overhead of virtualization and therefore slows down the guest OS a little'. However, there have been reports that the performance impact may actually be quite severe on some host/guest system combinations (e.g. [https://forums.virtualbox.org/viewtopic.php?f=1&t=75229 forum post]). Be aware that disabling this feature might require additional steps on the guest system as described by this [https://forums.virtualbox.org/viewtopic.php?f=2&t=21480 forum post].
* Using a SATA controller, it is necessary to choose the right driver version from Intel's SATA drivers. Using a wrong version will cause performance problems along with blue screen errors! Refer to [https://forums.virtualbox.org/viewtopic.php?f=28&t=42829 this post] for a list of working SATA drivers.
* Slow performance using SATA driver? Only use the SATA controller interface for the hard disk. Remove any CDROMs from the SATA controller and place them onto a IDE Controller.{{Note|This can also be a problem of using the wrong SATA-driver version.}}
* When installing the VirtualBox Guest Additions into your Windows operating system, do not select to enable Direct3D (experimental) option as this will cause resizing problems and other anomalies. Also, you need to install the Guest Additions from Safe Mode.
* Do not use the ICH9 chipset with Windows. It is still considered experimental. Using it can cause temporary freezes of the whole VM when used with Windows 7. See [https://forums.virtualbox.org/viewtopic.php?f=2&t=44106 this post] for more informations.
* Slow read/write speed to the virtual disk? If the host system has sufficient RAM, try checking (enabling) the {{Path|[https://www.virtualbox.org/manual/ch05.html#iocaching Use Host I/O Cache]}} check box in the virtual machine's {{Path|Storage}} frame. This will cache much of the guest machine's page file into the host's memory effectively limiting the amount of I/O guest machine will use the virtual disk image file. This is particularly helpful when running Windows guests because of the amount of paging Windows based operating systems regularly perform.

==== Linux guests ====

* When running Gentoo as a guest system make sure you start the virtualbox-guest-additions init script during bootup.

=== Kernel driver not installed ===

[[File:VirtualBox-Error In suplibOsInit.png|right|VirtualBox-Error: Kernel driver not installed]]

This may occur after building a new kernel and causes an error message:

{{Cmd|VirtualBox|output=<pre>
WARNING: The vboxdrv kernel module is not loaded. Either there is no module available for the current kernel (4.9.0-gentoo) or it failed to load. Please recompile the kernel module and install it by

for m in vbox{drv,netadp,netflt}; do modprobe $m; done

You will not be able to start VMs until this problem is fixed.
</pre>}}

'''Solution:''' Rebuild the VirtualBox kernel modules via:

{{Emerge|@module-rebuild|params+=--oneshot}}

The system may need rebooted for changes to take effect.

=== Nonexistent host networking interface, named 'vboxnet0' ===

{{RootCmd|VBoxManage hostonlyif create}}

Newly created interface will now be shown as available, but not activated (down):

{{Cmd|ifconfig -a}}

An IP will need to be assigned to it:

{{RootCmd|VBoxManage hostonlyif ipconfig vboxnet0 --ip 192.168.56.101}}

=== Kernel Panic when suspending the HOST while Virtualbox is running ===

If you experience such behavior, try removing the vbox family of modules before suspending.
If this solves the kernel panic, you can add the vbox modules to the list of permanently removed modules
before suspend, these modules are loaded automatically after suspend:
{{RootCmd|echo 'SUSPEND_MODULES{{=}}"vboxpci vboxnetflt vboxnetadp vboxdrv"' >> /etc/pm/config.d/gentoo}}

== See also ==

* [[phpVirtualBox]] - Web-based administration utility ([[PHP]])
* [[QEMU]] - A popular open source virtual machine emulator.
* [[VMware]] - A popular closed source virtual machine emulator.

== External resources ==

* [https://github.com/KieranP/vboxweb_rb vboxweb_rb] - Web-based administration utility ([[Ruby]])
* [http://www.virtualbox.org/manual/ VirtualBox Manual]

[[Category:Virtualization]]
[[Category:Binary kernel modules]]
