<languages />


{{Metadata|abstract=A instalação do Gentoo permite abordagens muito flexíveis para diversos métodos de instalação. Como é quase impossível para inserir cada dica simples ou truque nas instruções de instalação, este documento tenta lidar com todas as dicas e truques apresentadas para fins de referência.}}

A instalação do Gentoo permite abordagens muito flexíveis para diversos métodos de instalação. Como é quase impossível para inserir cada dica simples ou truque nas instruções de instalação, este documento tenta lidar com todas as dicas e truques apresentadas para fins de referência.


== Introdução ==

=== Preliminares ===

Este documento contém várias dicas e truques para a instalação do Gentoo/x86. A maioria delas são discutidas de forma densa - elas são entendidas como um adendo às instruções de instalação e não como substituição. 

== Instalações avançadas ==

=== Software RAID ===

{{Note|Se você não está familiarizado com software raid, por favor leia o [https://raid.wiki.kernel.org/index.php/Linux_Raid Software-RAID-HOWTO].}}

{{Note|Um procedimento mais detalhado pode ser encontrado em nosso [https://gentoo-handbook.lugons.org/doc/en/gentoo-x86+raid+lvm2-quickinstall.xml Software Raid and LVM2 x86 Quick Install Guide].}}

Uma vez que você inicializou a partir do CD de instalação, carregue o módulo apropriado do RAID. Por exemplo, se você pretende usar o RAID-1: 

{{RootCmd|modprobe raid1}}

Quando você particionar os discos, certifique-se que suas partições usem <code>fd</code> (Linux raid autodetect) como Tipo de Partição ao invés de <code>83</code> (Linux native). Você pode alterar o tipo de partição usando o comando <code>t</code> no <code>fdisk</code>. 

Agora antes de começarmos a criar os conjuntos RAID, precisamos criar o nó do metadispositivo: 

{{RootCmd|mknod /dev/md1 b 9 1
|mknod /dev/md2 b 9 2
|mknod /dev/md3 b 9 3}}

Após particionar, crie o arquivo {{Path|/etc/mdadm.conf}} (sim, no ambiente do CD de instalação) usando <code>mdadm</code>, uma ferramenta avançada para [http://www.linuxdevcenter.com/pub/a/linux/2002/12/05/RAID.html RAID management]. Por exemplo, para ter sua partição de boot, swap e root espelhada (RAID-1), cobrindo {{Path|/dev/sda}} e {{Path|/dev/sdb}}, você pode usar: 

{{RootCmd|mdadm --create --verbose /dev/md1 --level{{=}}1 --raid-devices{{=}}2 --metadata{{=}}0.90 /dev/sda1 /dev/sdb1
|mdadm --create --verbose /dev/md2 --level{{=}}1 --raid-devices{{=}}2 --metadata{{=}}0.90 /dev/sda2 /dev/sdb2
|mdadm --create --verbose /dev/md3 --level{{=}}1 --raid-devices{{=}}2 --metadata{{=}}0.90 /dev/sda3 /dev/sdb3}}

{{Important|Você não deve usar qualquer forma de particionamento como RAID-0 ou RAID-5 na partição que você for inicializar. Além disto, o <code>--metadata{{=}}0.90</code> só é necessário para estes sistemas de arquivos críticos. Outros sistemas de arquivos podem usar os formatos de metadata mais recente.}}

O drive de Software RAID do Linux vai começar a criar os metadispositivos. Você pode ver seu progresso no {{Path|/proc/mdstat}}. Espere até os metadispositivos terem terminado completamente antes de prosseguir. 

{{RootCmd|mdadm --detail --scan > /etc/mdadm.conf}}

De agora em diante, use {{Path|/dev/md1}} para a partição de boot, {{Path|/dev/md2}} para a partição swap e {{Path|/dev/md3}} para a partição de root. 

Antes de fazer chroot, não se esqueça de copiar {{Path|/etc/mdadm.conf}} para {{Path|/mnt/gentoo/etc}}. 

Quando você estiver configurando seu kernel, certifique-se de ter o suporte RAID apropriado "no" seu kernel e não como módulo. 

Ao instalar ferramentas extras, instale <code>mdadm</code> também. Note que isto não está disponível em todos os CDs de instalação de modo que você não será capaz de instalar o Gentoo em um Software RAID ao usar uma instalação sem rede! 

Ao configurar seu bootloader, certifique-se que este fique na MBR de "ambos" os discos se você usar espelhamento.

=== ATA RAID usando kernel 2.4 ===

Certifique-se de iniciar seu CD de instalação usando a opção <code>doataraid</code>. Uma vez iniciado, verifique o conteúdo de {{Path|/dev/ataraid}}. Deverá conter vários {{Path|disc*}} diretórios para cada disco rígido disponível no ATA RAID. Um espaço de disco inteiro é mostrado como {{Path|disc}} enquanto que partições são mostradas como {{Path|part*}}. 

Anote os vários {{Path|/dev/ataraid/disc*/*}} arquivos de dispositivos que você usa para instalar o Gentoo. Você precisará substituir os exemplos {{Path|/dev/sda}} na instalação com estes caminhos. 

Antes de fazer chroot, monte a estrutura {{Path|/dev}} no novo ambiente: 

{{RootCmd|mount --rbind /dev /mnt/gentoo/dev}}

Quando configurar seu kernel, certifique-se de habilitar o suporte e opções para o seu chipset da ATA RAID. Por exemplo, um sistema popular ATA RAID é uma "Promessa de construção acelerada", caso em que você definitivamente precisa ter a opção <code>Promise FastTrack Options</code> construída no teu kernel. 

Quando configurar o GRUB, você primeiro tem que criar um disco de boot do GRUB. Isto não é tão difícil quanto você pensa. Primeiro instale o GRUB como você faria, mas quando você chegar na parte onde o GRUB está sendo instalado na MBR, siga as seguintes instruções: 

{{RootCmd|cd /boot/grub
|dd if{{=}}stage1 of{{=}}/dev/fd0 bs{{=}}512 count{{=}}1
|dd if{{=}}stage2 of{{=}}/dev/fd0 bs{{=}}512 seek{{=}}1}}

Você ainda precisa escrever seu arquivo {{Path|grub.conf}}. Isto não é diferente das instruções de instalação, apenas certifique-se que o seu <code>root=</code> aponta para o dispositivo ATA RAID. 

Após finalizar a instalação, dê boot com seu disco de inicialização do GRUB. Você será recebido pelo prompt do GRUB. Agora configure o GRUB para dar boot a partir do dispositivo de ATA RAID: 

{{Cmd|root (hd0,x)|prompt=grub> 
|setup (hd0)
|quit}}

Reinicie (com a mídia de boot removida). 

Usuários do LILO podem seguramente usar as instruções mencionadas nas instruções de instalação. 

=== Usando o CD de instalação do Kernel ===

Se você não quer compilar um kernel você pode usar o kernel do CD de instalação e copiá-lo para o seu sistema. Quando você chegar no ponto onde você é questionado à compilar um kernel, vá até outro terminal (pressione {{Key|Alt}} + {{Key|F2}}) e logue-se com a conta de root fornecida no início da instalação. 

Copie todo o kernel e os módulos para o seu sistema Gentoo: 

{{Note|${KN} é o nome do kernel, geralmente algo como 'gentoo' ou 'smp'.}}

{{RootCmd|cp /mnt/cdrom/isolinux/${KN} /mnt/cdrom/isolinux/${KN}.igz /mnt/gentoo/boot
|mkdir -p /mnt/gentoo/lib/modules
|cp -Rp /lib/modules/`uname -r` /mnt/gentoo/lib/modules}}

To have all modules that are currently running (from the Installation CD) loaded during bootup of your Gentoo system, run the following command from within the chrooted environment: 

{{RootCmd|printf "modules\"" >> /etc/conf.d/modules
|cat /proc/modules {{!}} cut -d ' ' -f 1 >> /etc/conf.d/modules
|printf "\"\n" >> /etc/conf.d/modules}}

Verify the {{Path|/etc/conf.d/modules}} content and update appropriately.

== Simplifying the Installation ==

=== Leaving your Terminal ===

Many people want to leave their system when it's compiling. In certain cases this is rather difficult as the installation is done in a public environment where you cannot trust everyone. If this is the case, you want to be able to perform the compilation in the background and log out from all terminals. 

There are several possible solutions for this. The first one is to use <code>screen</code>. After booting the Installation CD, set your root password and start a screen session: 

{{Note|Not all Installation CDs provide screen. If this is the case, you will have to use one of the other methods described in this section.}}

{{RootCmd|screen -S gentoo}}

Once inside the screen session you can perform the entire installation. When you want to leave your terminal, press {{Key|Ctrl}} + {{Key|a}}, {{Key|d}} (that is, {{Key|Ctrl}} and {{Key|a}} at the same time, then followed by a {{Key|d}}) to ''detach'' your screen session. You can now safely log out of your system. 

To regain access to your terminal, log in as root again and ''attach'' to the running screen session: 

{{RootCmd|screen -x gentoo}}

If you can't use screen, there is still a way to leave your terminal. Follow the installation instructions, but when you come to the point where a long-term compilation would be started (for instance the <code>./scripts/bootstrap.sh</code> step), use <code>nohup</code> which allows for a process to continue even when you log out. Don't forget the trailing "&", otherwise the process won't be placed in the background! Remember where you are (the <code>pwd</code> command will show you that) as you will need to know this later on. 

{{RootCmd|pwd|output=<pre>
/usr/portage
</pre>}}

{{RootCmd|nohup ./scripts/bootstrap.sh &}}

Now exit the chrooted environment (<code>exit</code>) and the Installation CD session. Your compilation will continue in the background. 

When you want to check the compilation, log in as root (on the Installation CD) and chroot back into your environment and go to the directory where you left off: 

{{RootCmd|chroot /mnt/gentoo /bin/bash
|env-update && source /etc/profile
|cd /usr/portage}}

Now use the <code>less</code> command on the {{Path|nohup.out}} file that is situated inside that directory. The compilation will append its output to that file, so if you want to follow the compilation progress, run <code>less nohup.out</code> and press <code>F</code> to follow the changes. When the compilation is finished, you can continue with the next step of the installation instructions. 

If you ever get tired of following the changes, press {{Key|Ctrl}} + {{Key|C}} followed by a {{Key|q}}. This won't stop the compilation process, only the <code>less</code> process. 

== Fixing Errors/Issues ==

=== Extensive Testing of your Disks ===

If you think your disk needs to be thoroughly checked for consistency (bad sectors and such), you can use the <code>-c</code> (that's lowercase c) option while placing the ext2 or ext3 filesystem on it (using <code>mke2fs</code>). This will format, perform a read-test and mark all bad blocks as such. If you are really paranoid, use <code>-c -c</code> to format your disk and perform an extensive read/write test. 

{{RootCmd|mke2fs -j -c /dev/sda3}}

=== Recovering from a malfunctioning installation ===

If for some reason your Gentoo installation fails, you don't have to redo the installation all over again. Instead, you can safely "go" to the point where you think you made a mistake (or where you think the instructions are flawed) and try a different approach. 

First of all you need to chroot back into your Gentoo Linux environment. Follow the instructions again, but ignore the partitioning steps as your partitions are already created and even populated. You can therefore immediately mount those partitions at {{Path|/mnt/gentoo}}. You should also ignore the steps about stage extraction and modifying {{Path|make.conf}} - you don't want to overwrite your files do you? 

Once chrooted inside your Gentoo Linux environment, immediately go to the step where you think you should try a different approach. Don't redo all the steps like bootstrapping and such unless that is the place where you think things went wrong. 

For instance, if you believe that you have a wrongly configured {{Path|grub.conf}}, you can immediately fire up your editor to update {{Path|/boot/grub/grub.conf}}. 

Once you have tried a different approach for your situation, you should consider how much of the subsequent steps you need to perform again. If the subsequent steps are depending on your change, you will need to redo those. 

For instance, 

* if you have changed a variable inside {{Path|make.conf}} you will need to do all subsequent compiling since those depend on the settings inside {{Path|make.conf}} 
* if you have altered {{Path|/boot/grub/grub.conf}} you can immediately exit the chrooted environment and reboot as no subsequent steps are depending on {{Path|grub.conf}} 
* if you have recompiled your kernel you only need to make sure that your bootloader configuration points to the correct kernel image (double-check that you mounted your {{Path|/boot}}!), then you can exit the chrooted environment and reboot
* if you have altered {{Path|/etc/fstab}} you can exit the chrooted environment and reboot

As you can see, for most recovery operations you can immediately reboot. Only in certain cases will you need to redo the subsequent installation steps.

[[Category:Server and Security]] {{Migrated|originalauthors=Xavier Neys, nightmorph}}
