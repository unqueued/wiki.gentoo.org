<languages />
{{InfoBox stack
|{{InfoBox wikipedia|Java_(programming_language)|header=true}}
|{{InfoBox project|Java}}
}}
'''Java''' は [[Article description::当初 [[Wikipedia:Sun_Microsystems|Sun Microsystems]] によって開発されたプログラミング言語]]で、Java で開発されたアプリケーションがさまざまなプラットフォームで実行できるランタイムを採用しています。クロスプロットフォームのアプリケーションを作りたい開発者にとって、Java は人気のある選択肢です。

== Javaとは何ですか？ ==

=== 概要 ===

Javaは、Sun Microsystems社が開発したプログラミング言語です。 言語はオブジェクト指向であり、各プラットフォーム用のコードを再コンパイルする必要なく複数のプラットフォーム上で動作するように設計されています。 Javaはネイティブプログラムとしてコンパイルすることができますが、Javaの人気の多くは、自動メモリー管理など他の機能に加え、その携帯性によるものでしょう。 プラットフォーム独立を可能にするために、JavaコンパイラはJavaコードをオペレーティングシステム上で直接動作するのではなく ''JVM'' ([[Wikipedia:Java_virtual_machine|Java仮想マシン]]) 上で動作する[[Wikipedia:Java_bytecode|Javaバイトコード]]と呼ばれる中間表現にコンパイルします。 

Javaバイトコードを実行するためには、''JRE'' （Javaランタイム環境）がインストールされている必要があります。 ''JRE''は、とりわけコアライブラリ、プラットフォーム依存の ''JVM''、ブラウザ用のプラグインを提供します。''JDK''（Java開発キット）は、バイトコードコンパイラやデバッガなどのプログラミングツールを追加します。

=== JVM の諸言語 ===

Java 仮想マシンは Java プログラミング言語のみによって使用されているわけではありません。複数のプログラミング言語が Java プラットフォームを使用し、JVM 上で動作しています。そうした例には以下を含みます: [[Wikipedia:Clojure|Clojure]]、[[Wikipedia:Apache Groovy|Apache Groovy]]、[[Wikipedia:Kotlin (programming language)|Kotlin]]、[[Wikipedia:Scala (programming language)|Scala]]。

== 仮想マシンをインストールする ==

=== 選択肢 ===

Gentoo は多くの Java 実行環境 (JRE) と Java 開発キット (JDK) を提供しています。現時点で使用可能な選択肢は以下の通りです。 

{| class="table table-condensed table-striped" style="text-align: left;" 
|- 
! ベンダ
! JDK
! JRE
|- 
| The [[Wikipedia:IcedTea|IcedTea]] Open Java SE (旧 icedtea6-bin)
| {{Package|dev-java/icedtea}} および {{Package|dev-java/icedtea-bin}}
| 
|- 
| [[Wikipedia:OpenJDK|OpenJDK]]
| {{package|dev-java/openjdk}} および {{package|dev-java/openjdk-bin}}
|
|- 
| Oracle's Java
| {{Package|dev-java/oracle-jdk-bin}}
| {{Package|dev-java/oracle-jre-bin}}
|-
| The GCJ IcedTea GNU GCC Java (現在は IcedTea-7)
| {{Package|dev-java/icedtea}} {{Package|sys-devel/gcc}}  USE="gcj"
|
|}

=== JRE/JDK をインストールする ===

プロファイルのデフォルトの '''JDK''' をインストールするには、次のコマンドを実行します。

{{Emerge|virtual/jdk}}

プロファイルのデフォルトの '''JRE''' をインストールするには、次のコマンドを実行します。

{{Emerge|virtual/jre}}

{{Warning|Oracle のパッケージを含むいくつかの JDK と JRE は EULA ([[Wikipedia:End-user_license_agreement|End-User License Agreement]]) の承諾を必要とします。そうしたライセンス('''dlj-1.1''' など)が <var>ACCEPT_LICENSE</var> 変数({{Path|/etc/portage/make.conf}} にあります)に列挙されていないと、その JDK/JRE はインストールすることができないでしょう。受け入れられるライセンスを {{Path|make.conf}} に追加する方法の詳細については Portage ハンドブックの[[Handbook:X86/Working/Portage/ja#ライセンス|ライセンス章]]をお読みください。}}

制限的なライセンスの問題を回避するため、OpenJDK プロジェクトによるオープンな Java 実装である {{Package|dev-java/icedtea-bin}} のインストールを検討してください。 

{{Note|各 ''JDK'' には ''JRE'' が含まれていることに留意してください; JDK がemerge されていれば JRE をインストールする必要はありません。}}

=== IcedTea GCJ 仮想マシンをインストールする ===

{{Important|{{c|gcj}} は非推奨となっており、バージョン7.0以上の GCC では削除されています。Gentoo では GCC 6.0 から利用できなくなっています。この節は非推奨と考えてください。}}

IcedTea 仮想マシンはソースコードで提供されており、Java バイトコードコンパイラーでコンパイルする必要があります。このブートストラップは GNU Compiler for Java (GCJ) によって実行できます。このコンパイラーは GCC が <code>gcj</code> USE フラグとともにビルドされていれば利用可能です。

GCC をこの USE フラグがセットされている状態で再ビルドすれば {{Package|dev-java/icedtea}} パッケージをインストールできます。Portage のバグが原因で、ユーザーは {{Package|dev-java/gcj-jdk}} と {{Package|dev-java/ant-core}} が既に存在していない場合にはまずこれらを明示的にインストールする必要があります。

{{Emerge|dev-java/gcj-jdk dev-java/ant-core|params+=--oneshot}}
{{Emerge|dev-java/icedtea:7}}

=== fetch-restrict されている仮想マシンをインストールする ===

いくつかの JDK や JRE は設定の際にいくつかの追加手順が必要です。いつも通りにパッケージを emerge してください。追加手順が必要な場合は ebuild がどこから何をダウンロードすべきかユーザーに指示します。

示されたファイルを {{Path|/var/cache/distfiles}} (または <var>[[DISTDIR]]</var> の値)にダウンロードしてください。それらのファイルが正しいディレクトリに配置されたら、{{c|emerge}} を再実行します。これでその JRE/JDK のインストールが始まるでしょう。

=== ヘッドレス JRE をセットアップする === 

時には Java のすべての機能を持つ完全な JRE が必要ない場合もあるでしょう。サーバーで Java を使う場合、GUI、グラフィック、サウンド、あるいはプリンター関連の機能すら必要ないことがしばしばあります。簡略化された(時にはヘッドレスとも呼ばれる) JRE をインストールするには、選んだ JRE のタイプに応じていくつかの USE フラグを変える必要があります。

{{FileBox|filename=/etc/portage/package.use|title=必要な USE フラグの変更|1=
dev-java/icedtea headless-awt -alsa -cups
dev-java/icedtea-bin headless-awt -alsa -cups
dev-java/oracle-jre-bin headless-awt -alsa -cups
}}

現在の Gentoo プロファイルによってはこれは既にそうなっているかもしれません。通常通り、特定のパッケージに当てはまる USE フラグの設定は {{c|emerge}} を pretend モードで実行することで確認できます:

{{Cmd|emerge --pretend --verbose virtual/jre}}

== Java 仮想マシンの設定 ==

=== 概要 ===

Gentoo では複数の JDK や JRE を衝突させることなくインストールすることができます。 

{{c|java-config}} ツールを root 特権で使って、システム全体のデフォルト java 仮想マシン (VM) を設定できます。またユーザーは {{c|java-config}} を使ってユーザーごとの個人用 VM 設定をカスタムできます。 

{{Note|{{c|eselect}} もシステムやユーザーの VM を変更するために使用できます。{{c|eselect java-vm help}} を見てください。}}

=== デフォルトの仮想マシンを設定する ===

{{c|java-config}} コマンドに <code>--list-available-vms</code> オプションを付けて実行するとシステムにインストールされているすべての JRE と JDK の一覧が出力されます。これは出力の例です: 

{{RootCmd|java-config --list-available-vms|output=<pre>
The following VMs are available for generation-2:
1)      IcedTea JDK 7.2.6.3 [icedtea-7]
*)      IcedTea JDK 3.0.1 [icedtea-8]
</pre>
}}

{{Note|'Build Only' とマークされている VM はセキュリティー脆弱性を抱えていたり、製品寿命の終わり (end of life、EOL) を迎えています。Gentoo ではこれらの VM をシステム VM、ユーザー VM の''いずれにも''設定しないことをおすすめします。詳細については [[Java/ja#Build_only_の_VM|Build only の VM]] を見てください。}}

''*'' は現在アクティブな JVM (システム VM または設定されていればユーザー VM) であることを表します。角括弧 ([]) 内の名前はその特定の VM のハンドルや ID です。ハンドルまたは番号を {{c|java-config --set-system-vm}} に与えることで VM を設定できます。以下ではシステム VM を設定する方法の例を提供します。

ハンドルでシステム VM を設定する (おすすめ):

{{RootCmd|java-config --set-system-vm icedtea-7|output=<pre>
Now using icedtea-7 as your generation-2 system JVM
</pre>}}

代替の方法: ハンドル番号で VM を選択する:

{{RootCmd|java-config --set-system-vm 3|output=<pre>
Now using icedtea-7 as your generation-2 system JVM
</pre>
}}

一般ユーザーは java-config <code>--set-user-vm</code> を使います。 

{{Note|通常、ユーザーやシステムの VM を変更した時に既存のシェルセッションでプロファイルを {{c|source}} する必要はありません。唯一の例外は、ユーザー VM を初めて設定したりシステム VM に戻したりした後に、<var>JAVA_HOME</var> といった変数がまだ古い位置を指している場合です。}}

=== Build only の VM ===

いくつかの仮想マシンは製品寿命の終わりを迎えていたりセキュリティ脆弱性を抱えているために build-only というフラグが付けられています。Gentoo はこれらの仮想マシンを Gentoo のランチャー(VM の切替えには java-tool スクリプトを実行します)を使用するアプリケーションの実行に自動的には使用しません。しかしいくつかのパッケージのビルドに必要なことがあるため、Gentoo のビルド環境で使用することは可能です。これらの仮想マシンをシステムやユーザーの VM に設定することはいずれも極力避けるべきです。これは、Gentoo のランチャーを使用しないパッケージや {{Path|/usr/bin/{java,javac,..}}} といった実行可能ファイルを実行した場合にこうした VM が使用されてしまうためです。

== デフォルト CLASSPATH を設定する ==

{{Warning|この節で説明しているオプションは非推奨とみなされており、おそらく将来削除されるでしょう。理想的には Java プロジェクトやアプリケーションはクラスパスを自ら管理すべきであり、これらのオプションを使用しないことを強くおすすめします。デフォルト <var>CLASSPATH</var> を指定することを選択した場合、いくつかのアプリケーションは予期しない動作をする可能性があります。これはアプリケーションがクラスパスに存在すると想定していないクラスが原因です。}}

{{c|java-config}} はシステム全体のデフォルト <var>CLASSPATH</var> やユーザー固有のデフォルト <var>CLASSPATH</var> の設定にも使うことができます。 

はじめに、システムにインストールされている<var>CLASSPATH</var> に含める可能性がある Java ライブラリを列挙します。これは出力の例です: 

{{RootCmd|java-config --list-available-packages|output=<pre>
[xerces-2] The next generation of high performance, fully compliant XML parsers in the Apache Xerces family (/usr/share/xerces-2/package.env)
[junit] Simple framework to write repeatable tests (/usr/share/junit/package.env)
[bsh] BeanShell: A small embeddable Java source interpreter (/usr/share/bsh/package.env)
[bcel] The Byte Code Engineering Library: analyze, create, manipulate Java class files (/usr/share/bcel/package.env)
[log4j] A low-overhead robust logging package for Java (/usr/share/log4j/package.env)
...
</pre>
}}

この場合も、角括弧 ([]) 内の名前は {{c|java-config --set-system-classpath}} に渡す ID です。これは一例です: 

{{RootCmd|java-config --set-system-classpath log4j,xerces-2}}

{{Note|カレントディレクトリ ({{Path|.}}) はシステムのログインプロファイルに追加されるので、システムクラスパスには含まれません。}}

ログアウトしてから再度ログインするか、{{c|source {{Path|/etc/profile}}}} とタイプして環境を更新します。

ユーザーの場合、{{c|java-config --set-user-classpath}} が[[Shell|シェル]]プロファイルから読み込まれる {{Path|~/.gentoo/java-env-classpath}} ファイルを作成します。 

{{CodeBox|lang=bash|title=ユーザー固有のクラスパスを読み込む|1=
if [[ -f "${HOME}/.gentoo/java-env-classpath" ]]; then
       source ${HOME}/.gentoo/java-env-classpath
fi
}}

システム全体またはユーザーのデフォルトクラスパスを希望する場合、以下のようなものをシェルのプロファイルに追加します。これはおすすめできません: 

{{RootCmd|export CLASSPATH{{=}}"${CLASSPATH}:$(java-config --classpath log4j,xerces-2)"}}

== Java ブラウザプラグイン ==

{{Important|Java プラグインのサポートは JDK 9 で非推奨になりました<ref>[https://www.java.com/en/download/faq/jdk9_plugin.xml JDK 9 and the Java Plugin], java.com. 2018年11月30日取得</ref>。}}

Java [[:Category:Web_browser|ブラウザ]]プラグインは以前 {{c|eselect java-nsplugin}} を通じて管理されていました。これはより単純なインストール後そのまま使える仕組みに取って代わられ、現在は削除されています。基本的な使い方は、選択した JVM を <code>nsplugin</code> USE フラグを有功にして emerge するだけです。Oracle のプラグインは {{Keyword|amd64}} と {{Keyword|x86}} でのみ利用可能であることに注意してください。

{{Note|[[Chromium]] ベースのブラウザのバージョン42以降と [[Firefox]] のバージョン52以降は、もはや [[Wikipedia:NPAPI|NPAPI]] ベースのプラグインをサポートしていません<ref>[https://java.com/en/download/help/enable_browser.xml How do I enable Java in my web browser?], java.com. 2018年11月30日取得</ref>。これにより現代のブラウザでは Java プラグインは事実上無効化されています。}}

JVM の選択、Web Start、multilib も含め、詳細は [https://gitweb.gentoo.org/repo/gentoo.git/plain/dev-java/icedtea-web/files/README.gentoo-r1 icedtea-web と共にインストールされる README] を見てください。

== Java で使用される USE フラグ ==

=== Setting USE flags ===

For more information regarding [[USE flag]]s, refer to the USE flags chapter from the [[Handbook:X86/Working/USE|Gentoo Handbook]].

=== USE flags ===

* The [https://packages.gentoo.org/useflags/java <code>java</code>] flag adds support for Java in a variety of programs;
* The [https://packages.gentoo.org/useflags/nsplugin <code>nsplugin</code>] flag adds support for Mozilla-like browsers (including Firefox). This is needed for viewing Java applets in a Mozilla-like browser;
* The [https://packages.gentoo.org/useflags/jce <code>jce</code>] flag adds support for the Java Cryptography Engine;

Following USE flags go in [[Gentoo_Java_USE_flags|JAVA_PKG_IUSE]].
* The [https://packages.gentoo.org/useflags/source <code>source</code>] flag installs a zip of the source code of a package. This is traditionally used for IDEs to 'attach' source to the libraries that are being use;
* For Java packages, the [https://packages.gentoo.org/useflags/doc <code>doc</code>] flag will build API documentation using javadoc.

== See also ==

* [[Java Developer Guide]]
* [[Project:Java/Why_build_from_source]]
* [[Project:Java/Getting_Involved]]

== External resources ==

* The [http://news.gmane.org/gmane.linux.gentoo.java gentoo-java], [http://news.gmane.org/gmane.linux.gentoo.user gentoo-user], and [http://news.gmane.org/gmane.linux.gentoo.devel gentoo-dev] mailing list archives
* {{IRC|gentoo}} and {{IRC|gentoo-java}} on IRC
* [https://forums.gentoo.org/viewtopic-t-901036.html Java 7 and bootstrapping icedtea] on the Gentoo forums

More information can be found offline:

* {{c|man java-config}}
* {{c|java-config --help}}

For suggestions or questions regarding this document, please email the Gentoo Java team: {{Mail|java@gentoo.org}}

== References ==

{{Reflist}}

[[Category:Programming_language]]

{{Migrated|originalauthors=Joshua Nichols, Karl Trygve Kalleberg, {{Dev|nightmorph}}}}
