<languages />

{{Metadata|abstract=Distcc — это программа, предназначенная для распределения по сети задач компиляции в рамках набора хостов. Она состоит из серверной части — distccd и клиентской — distcc. После небольшой настройки distcc может прозрачно работать с ccache, Portage и Automake.}}

{{InfoBox stack
|{{InfoBox homepage|https://code.google.com/p/distcc/|header=true}}
|{{InfoBox wikipedia}}
}}

[http://distcc.samba.org Distcc] — это программа, предназначенная для распределения по сети задач компиляции в рамках набора хостов. Она состоит из серверной части — <code>distccd</code> и клиентской — <code>distcc</code>. После небольшой настройки distcc может прозрачно работать с [http://ccache.samba.org ccache], Portage и Automake. 

Если вы планируете использовать distcc при начальной сборке (bootstrap) своей установки Gentoo, обратите внимание на раздел [[#Использование_Distcc_для_начальной_сборки_(bootstrap)_Gentoo|Использование Distcc для начальной сборки (bootstrap) Gentoo]]. 

== Установка ==

=== Зависимости ===

Для работы с Distcc все компьютеры в сети должны иметь GCC одной версии. К примеру, можно использовать на разных машинах 3.3.x (где x — разные), а смешивание 3.3.x с 3.2.x '''может''' привести к ошибкам при компиляции или выполнении. 

=== Installing distcc ===

Distcc поставляется с графическим монитором для отслеживания заданий, отправляемых компьютером на компиляцию. Он включается с помощью USE-флага <code>gtk</code>.

After configuring the <code>USE</code> setting, install the {{Package|sys-devel/distcc}} package:

{{Emerge|distcc}}

{{Important/ru|Убедитесь, что distcc установлен на все машины, которые планируется использовать для распределённой компиляции.}}

=== Настройка Portage для работы с Distcc ===

Настроить Portage для работы с distcc легко. Выполните следующие шаги на каждой системе, которая должна участвовать в распределенной компиляции:

First, make sure that {{Package|sys-devel/distcc}} is installed:

{{Emerge|distcc}}

Теперь установите переменные <code>MAKEOPTS</code> и <code>FEATURES</code> как показано ниже. Общепринятая стратегия — выбор в качестве N удвоенного числа CPU (локальных + удалённых) + 1, а в качестве M — числа локальных CPU. Флаг <code>-lM</code> предотвращает запуск чрезмерно большого количества заданий в случаях, когда некоторые хосты distcc недоступны, или файл ebuild требует локальной компиляции пакета (например, gcc).

{{FileBox|filename=/etc/portage/make.conf|title=Setting MAKEOPTS and FEATURES|lang=bash|1=
MAKEOPTS="-jN -lM"
FEATURES="distcc"
}}

Например, если ваш локальный двухъядерный компьютер связан с помощью distcc с двумя четырёхъядерными, то переменная <code>MAKEOPTS</code> может выглядеть так:

{{FileBox|filename=/etc/portage/make.conf|title=MAKEOPTS example for 2 quad-core (remote) and one dual core (local) PC|lang=bash|1=
# 2 remote hosts with 4 cores each = 8 cores remote
# 1 local host with 2 cores = 2 cores local
# total number of cores is 10, so N = 2*10+1 and M=2
MAKEOPTS="-j21 -l2"
}}

Не используйте <code>-march=native</code> в переменных <code>CFLAGS</code> и <code>CXXFLAGS</code> своего {{Path|make.conf}}. Если <code>march</code> установлен в <code>native</code>, то <code>distcc</code> не сможет распределить работу по другим машинам. Подходящее значение для <code>march</code> можно найти в <code>gcc -Q -march=native --help=target</code>. Подробности можно найти на странице [http://blogs.gentoo.org/mgorny/2014/06/23/inlining-marchnative-for-distcc/ Inlining -march=native for distcc].

{{Cmd|gcc -Q -march{{=}}native --help{{=}}target}}

See [http://blogs.gentoo.org/mgorny/2014/06/23/inlining-marchnative-for-distcc/ Inlining -march=native for distcc] for more information.

=== Указание участвующих хостов ===

Для задания списка хостов используйте команду <code>distcc-config</code>. Примеры хостов, которые могли бы находиться в этом списке: 

The following is an example list of host definitions. In most cases, variants of lines 1 and 2 suffice. More information about the syntax used in lines 3 and 4 can be found in the [http://distcc.googlecode.com/svn/trunk/doc/web/man/distcc_1.html distcc manual page].

{{CodeBox|title=Examples of host definitions|1=
192.168.0.1          192.168.0.2                       192.168.0.3
192.168.0.1/2        192.168.0.2                       192.168.0.3/10
192.168.0.1:4000/2   192.168.0.2/1                     192.168.0.3:3632/4
@192.168.0.1         @192.168.0.2:/usr/bin/distccd     192.168.0.3
}}

Есть также несколько других методов для настройки хостов. За подробностями обратитесь к man-странице distcc.

Если вы хотите компилировать на локальной машине, то должны поместить 'localhost' в список хостов. Наоборот, если вы не хотите использовать локальную машину для компиляции (это частый случай), не включайте её в список хостов. Использование localhost на медленной машине может, как ни странно, замедлить процесс. Всегда проверяйте влияние своих настроек на производительность.

Следующую команду нужно выполнить, чтобы применить первую строку из предыдущего примера:

{{RootCmd|/usr/bin/distcc-config --set-hosts "192.168.0.1 192.168.0.2 192.168.0.3"}}

Отредактируйте {{Path|/etc/conf.d/distccd}} в соответствии со своими нуждами и обязательно установите директиву <code>--allow</code>, чтобы разрешить только те хосты, которым вы доверяете. Для усиления безопасности можно также добавить директиву <code>--listen</code>, сообщив с её помощью демону distcc, на каком IP ожидать соединений (для систем с несколькими адресами). Подробности можно найти в [http://distcc.samba.org/security.html Distcc Security Design]. 

{{Important/ru|Использовать --allow и --listen — важно. Обратитесь к man-странице distccd или указанному выше документу по безопасности для получения дополнительной информации.}}

Теперь запустите демон distcc на всех участвующих компьютерах: 

{{RootCmd|rc-update add distccd default
|/etc/init.d/distccd start}}

=== Настройка Distcc для работы с Automake ===

Иногда это проще настройки Portage. Всё, что нужно сделать, это обновить переменную <code>PATH</code>, добавив {{Path|/usr/lib/distcc/bin}} перед каталогом, содержащим <code>gcc</code> ({{Path|/usr/bin}}). С одной оговоркой. Если вы используете ccache, нужно поместить distcc после ccache: 

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

Можно поместить это в {{Path|~/.bashrc}} или его эквивалент, чтобы PATH устанавливался при входе в систему.

Теперь вместо обычного <code>make</code>, набирайте <code>make -jN</code> (где N — целое). Значение N зависит от сети и используемых для компиляции компьютеров. Попробуйте разные настройки, чтобы найти число, на котором достигается наилучшая производительность.

=== Настройка Distcc для работы с ssh ===

В настройке distcc через ssh есть подводные камни. Во-первых, сгенерируйте ключевую пару ssh без пароля. Учтите, что Portage компилирует программы как пользователь portage. Домашний каталог пользователя portage — {{Path|/var/tmp/portage}}, поэтому ключи должны храниться в {{Path|/var/tmp/portage/.ssh}}.

{{RootCmd|ssh-keygen -b 2048 -t rsa -f /var/tmp/portage/.ssh/id_rsa}}

Во-вторых, сделайте для каждого хоста раздел в файле конфигурации ssh:

{{FileBox|filename=/var/tmp/portage/.ssh/config|title=Add per-host sections|1=
Host test1
    HostName 123.456.789.1
    Port 1234
    User UserName
 
Host test2
    HostName 123.456.789.2
    Port 1234
    User UserName
}}

Убедитесь также, что каждый из хостов есть в файле {{Path|known_hosts}}, и добавьте на этих хостах свой открытый ключ в файл {{Path|authorized_keys}}. Хосты test1 и test2 можно настроить командой

{{RootCmd|/usr/bin/distcc-config --set-hosts "@test1 @test2"}}

Обратите внимание на знак '@', с его помощью в <code>distcc</code> указываются ssh-хосты.

== Кросс-компиляция ==

Кросс-компиляция — это использование компьютера одной архитектуры при сборке программ для другой архитектуры. Это может быть так же просто как использование Athlon (i686) для сборки программы для K6-2 (i586) или использование Sparc для сборки программы для ppc. Такой подход описан в нашем [[Distcc/Cross-Compiling/ru|руководстве по кросс-компиляции с Distcc]].

== Использование Distcc для начальной сборки (bootstrap) Gentoo ==

=== Шаг 1: Настройка Portage ===

Загрузите свою новую машину с Gentoo Linux LiveCD и следуйте [http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=1 инструкциям по установке] до раздела про bootstraping. (Подробнее о bootstraping’е можно почитать в [[FAQ/ru|ЧаВо о Gentoo]].) Затем настройте Portage для использования distcc: 

{{FileBox|filename=/etc/portage/make.conf|title=Configure Portage to use distcc|lang=bash|1=
FEATURES="distcc"
MAKEOPTS="-jN"
}}

Update the <code>PATH</code> variable in the installation session as well:

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

=== Шаг 2: Установка Distcc ===

Установите distcc: 

{{RootCmd|USE{{=}}'-*' emerge --nodeps sys-devel/distcc}}

=== Шаг 3: Настройка Distcc ===

Запустите <code>distcc-config --install</code> для установки distcc; замените <code>host*</code> на IP-адреса или имена принимающих участие в компиляции узлов DistCC.

{{RootCmd|/usr/bin/distcc-config --set-hosts "localhost host1 host2 host3 ..."}}

Distcc теперь настроен для bootstraping’а! Продолжайте следовать официальным инструкциям по установке и ''не забудьте'' пересобрать distcc после <code>emerge system</code>. Это нужно, чтобы убедиться, что все необходимые зависимости установлены. 

{{Note/ru|В процессе начальной установки (bootstraping’а) и выполнения <code>emerge system</code> distcc может не использоваться. Это ожидаемое поведение: некоторые файлы ebuild плохо работают с distcc, поэтому distcc отключён в них преднамеренно.}}

== Устранение проблем ==

=== Некоторые пакеты не используют Distcc ===

Можно заметить, что сборка некоторых пакетов не распределятся по хостам (и не происходит параллельно, т. е. в несколько процессов). Такое может происходить, когда Makefile пакета не поддерживает параллельные операции, или мейнтейнер ebuild’а явно отключил их, чтобы избежать известных проблем. 

Иногда distcc может вызывать сбой при компиляции пакета. Если такое происходит у вас, пожалуйста, [https://bugs.gentoo.org/ сообщите] нам об этом.

=== Смешанные версии GCC ===

Если на ваших хостах разные версии GCC, велика вероятность возникновения очень странных проблем. Решение — проверить, что на всех хостах одна и та же версия GCC. 

После недавных обновлений Portage стал использовать <code>${CHOST}-gcc</code> вместо <code>gcc</code>. Это значит, что совместное использование i686-машин с машинами других типов (i386, i586) может стать проблемным. Обходное решение — пользоваться командой <code>export CC='gcc' CXX='c++'</code> или задать эти переменные в {{Path|/etc/portage/make.conf}}.

{{Important/ru|Так вы явно переопределите некоторую часть поведения Portage, что может привести к странным результатам в будущем. Делайте так, только если используете разные CHOST’ы.}}

=== -march=native ===

GCC, начиная с версии 4.3.0, поддерживает параметр <code>-march=native</code>, который включает автоматическое определение CPU и оптимизаций, которые стоит включить для него. Это приводит к проблемам с <code>distcc</code>, так как допускает смешивание оптимизированного для разных процессоров кода (например, кода для AMD Athlon и Intel Pentium). ''Не'' используйте <code>-march=native</code> и <code>-mtune=native</code> в <code>CFLAGS</code> и <code>CXXFLAGS</code> при компиляции с <code>distcc</code>.

Heed the following warning:

{{Warning|Do '''not''' use <code>-march{{=}}native</code> or <code>-mtune{{=}}native</code> in the <code>CFLAGS</code> or <code>CXXFLAGS</code> variables of {{Path|make.conf}} when compiling with <tt>distcc</tt>.}}

Чтобы узнать, какие флаги включит GCC при запуске с <code>-march=native</code>, выполните следующее:

{{Cmd|gcc -march{{=}}native -E -v - &lt;/dev/null 2&gt;&amp;1 {{!}} grep cc1|output=<pre>
/usr/libexec/gcc/x86_64-pc-linux-gnu/4.7.3/cc1 -E -quiet -v - -march=corei7-avx \
  -mcx16 -msahf -mno-movbe -mno-aes -mpclmul -mpopcnt -mno-abm -mno-lwp -mno-fma \
  -mno-fma4 -mno-xop -mno-bmi -mno-bmi2 -mno-tbm -mavx -mno-avx2 -msse4.2 -msse4.1 \
  -mno-lzcnt -mno-rdrnd -mno-f16c -mno-fsgsbase --param l1-cache-size=32 \
  --param l1-cache-line-size=64 --param l2-cache-size=6144 -mtune=corei7-avx
</pre>}}

== Расширения Distcc ==

=== Мониторы Distcc === 

Distcc поставляется с двумя мониторами. Текстовый монитор собирается всегда и называется <code>distccmon-text</code>. Интерфейс поначалу может смутить, но на самом деле использовать его очень просто. Если запустить программу без параметров, она запустится однократно. Однако, если передать ей число N, информация будет обновляться каждые N секунд.

{{Cmd|distccmon-text 10}}

Другой монитор включается с помощью USE-флага <code>gtk</code>. Он основан на GTK+, запускается в окружении X и достаточно приятен. В Gentoo, чтобы избежать путаницы, GUI-монитор называется <code>distccmon-gui</code>. В других дистрибутивах он может называться <code>distccmon-gnome</code>.

{{RootCmd|distccmon-gui}}

Чтобы наблюдать за тем, как Portage использует distcc, можно запустить:
{{RootCmd|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-text N
|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-gui}}

{{RootCmd|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-text 10
|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-gui}}

{{Important/ru|Если каталог distcc находится где-нибудь в другом месте, измените переменную DISTCC_DIR соответствующим образом.}}

== Ссылки ==

* [http://blogs.gentoo.org/mgorny/2014/06/23/inlining-marchnative-for-distcc/ Inlining -march=native for distcc].


{{Migrated|originalauthors=Lisa Seelye, Mike Frysinger, Erwin, Sven Vermeulen, Lars Weiler, Tiemo Kieft and nightmorph}}
