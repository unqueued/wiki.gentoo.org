<languages />

{{Metadata|abstract=Distcc — это программа, предназначенная для распределения по сети задач компиляции в рамках набора хостов. Она состоит из серверной части — distccd и клиентской — distcc. После небольшой настройки distcc может прозрачно работать с ccache, Portage и Automake.}}

{{InfoBox stack
|{{InfoBox homepage|https://code.google.com/p/distcc/|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox github|distcc/distcc}}
}}

[https://code.google.com/p/distcc/ Distcc] — это программа, предназначенная для распределения по сети задач компиляции в рамках набора хостов. Она состоит из серверной части — {{c|distccd}} и клиентской — {{c|distcc}}. После небольшой настройки distcc может прозрачно работать с [http://ccache.samba.org ccache], [[Portage]] и Automake. 

Если вы планируете использовать {{c|distcc}} при начальной сборке (bootstrap) своей установки Gentoo, обратите внимание на раздел [[#Использование_distcc_для_начальной_сборки_Gentoo|Использование distcc для начальной сборки Gentoo]]. 

== Установка ==

Перед настройкой {{c|distcc}} сперва нужно установить пакет {{Package|sys-devel/distcc}} на все хосты.

=== Требования для всех хостов ===

Для работы с {{c|distcc}} все компьютеры в сети должны иметь GCC одной версии. К примеру, можно использовать на разных машинах 3.3.x (где x — разные), а смешивание 3.3.x с 3.2.x может привести к ошибкам при компиляции или выполнении. 

=== Установка ПО ===

Distcc поставляется с графическим монитором для отслеживания заданий, отправляемых компьютером на компиляцию. Данный монитор включается, когда установлен USE флаг <code>gtk</code>.

После настройки USE флагов установите пакет {{Package|sys-devel/distcc}}:

{{Emerge|sys-devel/distcc}}

{{Important/ru|Убедитесь, что {{Package|sys-devel/distcc}} установлен на все участвующие в распределённой компиляции компьютеры.}}

=== Автозагрузка distcc демона ===

In order to have {{c|distccd}} started automatically, follow the next set of instructions, depending on the init system used.

==== Using OpenRC ====

Отредактируйте {{Path|/etc/conf.d/distccd}} и убедитесь, что с помощью директивы <code>--allow</code> разрешены только доверенные клиенты. Для усиления безопасности можно также добавить директиву <code>--listen</code>, сообщив с её помощью демону {{c|distccd}}, на каком IP ожидать соединений (для систем с несколькими адресами). Подробнее о безопасности в {{c|distcc}} можно почитать в [http://distcc.googlecode.com/svn/trunk/doc/web/security.html Distcc security notes].

The following example allows the distcc clients running at <code>192.168.0.4</code> and <code>192.168.0.5</code> to connect to the {{c|distccd}} server running locally:

{{FileBox|filename=/etc/conf.d/distccd|title=Разрешение некоторым клиентам подключатся к distccd|lang=bash|1=
DISTCCD_OPTS="--port 3632 --log-level notice --log-file /var/log/distccd.log -N 15 --allow 192.168.0.4 --allow 192.168.0.5"
}}

{{Important|Использовать <code>--allow</code> и <code>--listen</code> — важно. Обратитесь к man-странице {{c|distccd}} или указанному выше документу по безопасности для получения дополнительной информации.}}

Теперь запустите демон {{c|distccd}} на всех участвующих компьютерах: 

{{RootCmd|rc-update add distccd default
|rc-service distccd start}}

==== Использование systemd ====

Edit {{Path|/etc/systemd/system/distccd.service.d/00gentoo.conf}} and add the allowed clients in CIDR format. Here is an example:

{{FileBox|filename=/etc/systemd/system/distccd.service.d/00gentoo.conf|title=Setting ALLOWED_SERVERS|lang=bash|1=
Environment="ALLOWED_SERVERS=192.168.1.0/24"
}}

{{Note| The name "ALLOWED_SERVERS" here is rather confusing as it refers to the clients that are allowed to connect to the local distccd server. Nevertheless, it is this variable which is used in the distccd service as value for the --allow option – see {{Path|/usr/lib/systemd/system/distccd.service.}}}}

Reload the unit files after making such changes:

{{RootCmd|systemctl daemon-reload}}

Enable auto-starting {{c|distccd}} and then start the service:

{{RootCmd|systemctl enable distccd
|systemctl start distccd}}

== Конфигурация ==

Let's now look into the configuration of {{c|distcc}}.

=== Указание участвующих хостов ===

Для задания списка хостов используйте команду {{c|distcc-config}}. 

The following is an example list of host definitions. In most cases, variants of lines 1 and 2 suffice. The latter uses the <code>/limit</code> syntax to inform {{c|distcc}} about the maximum amount of jobs to be launched on this node. More information about the syntax used in lines 3 and 4 can be found in the [http://distcc.googlecode.com/svn/trunk/doc/web/man/distcc_1.html distcc manual page].

{{CodeBox|title=Примеры задания хостов|1=
192.168.0.1          192.168.0.2                       192.168.0.3
192.168.0.1/2        192.168.0.2                       192.168.0.3/10
192.168.0.1:4000/2   192.168.0.2/1                     192.168.0.3:3632/4
@192.168.0.1         @192.168.0.2:/usr/bin/distccd     192.168.0.3
}}

Есть также несколько других методов для настройки хостов. За подробностями обратитесь к {{c|distcc}} man-странице {{c|man distcc}}.

Если локальная машина должна участвовать в компиляции, поместите <code>localhost</code> в список хостов. Наоборот, если локальная машина '''не''' должна участвовать в компиляции, не включайте её в список хостов. Использование localhost на медленной машине может, как ни странно, замедлить процесс. Всегда проверяйте влияние настроек на производительность.

Настроим {{c|distcc}} для компиляции на хостах из первой строчки примера:

{{RootCmd|/usr/bin/distcc-config --set-hosts "192.168.0.1 192.168.0.2 192.168.0.3"}}

=== Использование distcc для работы с Portage ===

Настроить [[Portage]] для работы с {{c|distcc}} легко. Речь идет о включении функции {{c|distcc}}, а также о настройки подходящего количества одновременно выполняемых задач (имея ввиду, что с {{c|distcc}} становится больше ресурсов для компиляции).

Установите переменные <var>MAKEOPTS</var> и <var>FEATURES</var> как показано ниже.

Общепринятая стратегия
* установите <code>N</code> в ''удвоенное'' значение от ''всех'' (локальных + удалённых) ядер CPU + 1,
* установите <code>M</code> число равное количеству ''локальных'' ядер CPU.

Использование <code>-lM</code> в переменной <var>MAKEOPTS</var> предотвращает запуск чрезмерно большого количества заданий в случаях, когда некоторые {{c|distcc}} хосты кластера недоступны (увеличивая количество одновременных заданий для других систем) или когда ebuild настроен так, что устанавливаемый пакет запрещает удаленную компиляцию (например, gcc). Это достигается за счет отказа начинать новые задачи компиляции, если нагрузка на систему становится равной <code>M</code> или выше.

{{FileBox|filename=/etc/portage/make.conf|title=Установка переменных MAKEOPTS и FEATURES|lang=bash|1=
# Замените N и M на подходящие значения, как писалось ранее в статье
MAKEOPTS="-jN -lM"
FEATURES="distcc distcc-pump"
}}

Например, если {{c|distccd}} запущен на двух четырехъядерных хостах, а локальный компьютер оснащен двухъядерным процессором, то переменная <var>MAKEOPTS</var> может выглядеть так:

{{FileBox|filename=/etc/portage/make.conf|title=Пример MAKEOPTS для 1 двухъядерного (локального) и 2 четырёхъядерных (вспомогательных) компьютеров|lang=bash|1=
# 2 удалённых хоста с 4 ядрами каждый = 8 удалённых ядер
# 1 локальный хост с двумя ядрами = 2 локальных ядра
# общее количество ядер — 10, N = 2*10+1 и M=2
MAKEOPTS="-j21 -l2"
}}

Не используйте <code>-march=native</code> в переменных <var>CFLAGS</var> и <var>CXXFLAGS</var> файла {{Path|make.conf}}. Если <var>march</var> установлен в <code>native</code>, то {{c|distccd}} не сможет распределить работу по другим машинам. Подходящее значение для <code>march</code> можно получить с помощью следующей команды:

{{Cmd|gcc -v -E -x c -march{{=}}native -mtune{{=}}native - < /dev/null 2>&1 {{!}} grep cc1 {{!}} perl -pe 's/ -mno-\S+//g; s/^.* - //g;'}}

Подробности можно найти на странице [http://blogs.gentoo.org/mgorny/2014/06/23/inlining-marchnative-for-distcc/ Inlining <code>-march=native</code> for distcc].

=== Использование distcc с automake ===

Иногда это проще настройки Portage. Всё, что нужно сделать, это обновить переменную <var>PATH</var>, добавив {{Path|/usr/lib/distcc/bin/}} перед каталогом, содержащим {{c|gcc}} ({{Path|/usr/bin/}}). С одной оговоркой. Если используется {{c|ccache}}, то нужно поместить путь к {{c|distcc}} после пути к {{c|ccache}}: 

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

Поместите это в пользовательский {{Path|~/.bashrc}} или его эквивалент, чтобы переменная <var>PATH</var> устанавливалась при каждом входе пользователя в систему, либо задайте ее глобально через файл {{Path|/etc/env.d/}}.

Instead of calling {{c|make}} alone, add in <code>-jN</code> (where <code>N</code> is an integer). The value of <code>N</code> depends on the network and the types of computers that are used to compile. A heuristic approach to the right value is given earlier in this article.

== Использование distcc для начальной сборки Gentoo ==

Using {{c|distcc}} to bootstrap (i.e. build a working toolchain before installing the remainder of the system) requires some additional steps to take.

=== Шаг 1: настройка Portage ===

Boot the new box with a Gentoo Linux LiveCD and follow the [[Handbook:AMD64|installation instructions]], while keeping track of the instructions in the [[FAQ|Gentoo FAQ]] for information about bootstrapping. Then configure Portage to use {{c|distcc}}: 

{{FileBox|filename=/etc/portage/make.conf|title=Настройка Portage для использования distcc|lang=bash|1=
FEATURES="distcc"
MAKEOPTS="-jN"
}}

Также обновите переменную <code>PATH</code> в установочном сеансе:

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

=== Шаг 2: установка Distcc ===

Установите {{Package|sys-devel/distcc}}: 

{{RootCmd|USE{{=}}'-*' emerge --nodeps sys-devel/distcc}}

=== Шаг 3: настройка distcc ===

Run {{c|distcc-config --install}} to setup distcc; substitute the <code>host#</code> in the example with the IP addresses or hostnames of the participating nodes.

{{RootCmd|/usr/bin/distcc-config --set-hosts "localhost host1 host2 host3 ..."}}

Distcc is now set up to bootstrap! Continue with the proper installation instructions and do ''not'' forget to run {{c|emerge distcc}} after running {{c|emerge @system}}. This is to make sure that all of the necessary dependencies are installed. 

{{Note|During bootstrap and {{c|emerge @system}} {{c|distcc}} may not appear to be used. This is expected as some ebuilds do not work well with distcc, so they intentionally disable it.}}

== Расширения distcc ==

The {{c|distcc}} application has additional features and applications to support working in a {{c|distcc}} environment.

=== Мониторы distcc === 

Distcc ships with two monitoring utilities. The text-based monitoring utility is always built and is called {{c|distccmon-text}}. Running it for the first time can be a bit confusing, but it is really quite easy to use. If the program is run with no parameter it will run just once. However, if it is passed a number it will update every <code>N</code> seconds, where <code>N</code> is the argument that was passed.

{{Cmd|distccmon-text 10}}

The other monitoring utility is only enabled when the <code>gtk</code> USE flag is set. This one is GTK+ based, runs in an X environment, and it is quite lovely. For Gentoo, the GUI monitor has been renamed to {{c|distccmon-gui}} to make it less confusing (it is originally called {{c|distccmon-gnome}}).

{{Cmd|distccmon-gui}}

To monitor Portage's {{c|distcc}} usage:

{{RootCmd|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-text 10
|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-gui}}

{{Important|If the distcc directory is elsewhere, change the <var>DISTCC_DIR</var> variable accordingly.}}

A trick is to set <var>DISTCC_DIR</var> in environment variables:

{{RootCmd|echo 'DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/"' >> /etc/env.d/02distcc}}

Now update the environment:

{{RootCmd|env-update
|source /etc/profile}}

Finally, start the GUI application:

{{RootCmd|distccmon-gui}}

=== Using SSH for distcc communication ===

Setting up distcc via SSH includes some pitfalls. First, generate an SSH key pair without password setup. Be aware that portage compiles programs as the Portage user (or as root if <code>FEATURES="userpriv"</code> is not set). The home folder of the Portage user is {{Path|/var/tmp/portage/}}, which means the keys need to be stored in {{Path|/var/tmp/portage/.ssh/}}

{{RootCmd|ssh-keygen -b 2048 -t rsa -f /var/tmp/portage/.ssh/id_rsa}}

Во-вторых, сделайте для каждого хоста раздел в файле конфигурации SSH:

{{FileBox|filename=/var/tmp/portage/.ssh/config|title=Разделы для хостов|1=
Host test1
    HostName 123.456.789.1
    Port 1234
    User UserName
 
Host test2
    HostName 123.456.789.2
    Port 1234
    User UserName
}}

Send the public key to each compilation node:

{{RootCmd|ssh-copy-id -i /var/tmp/portage/.ssh/id_rsa.pub UserName@CompilationNode}}

Also make sure that each host is available in the {{Path|known_hosts}} file:

{{RootCmd|ssh-keyscan -t rsa <compilation-node-1> <compilation-node-2> [...] > /var/tmp/portage/.ssh/known_hosts}}

Fix the file ownership as follows:

{{RootCmd|chown -R portage:portage /var/tmp/portage/.ssh/}}

To set up the hosts <code>test1</code> and <code>test2</code>, run:

{{RootCmd|/usr/bin/distcc-config --set-hosts "@test1 @test2"}}

Please note the <code>@</code> (@ sign), which specifies ssh hosts for distcc.

Finally, tell {{c|distcc}} which SSH binary to use:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
DISTCC_SSH="ssh"
}}

It is not necessary to run the {{Path|distccd}} initscript on the hosts when {{c|distcc}} communicates via SSH.

== Устранение проблем ==

<!-- Consider moving this section to a separate subpage if it becomes too large -->

If a problem occurs while using {{c|distcc}}, then this section might help in resolving the problem.

=== ERROR: failed to open {{Path|/var/log/distccd.log}} ===

<!-- To be removed when the bug is resolved and the fixed package is stable -->

As of January 22nd, 2015 emerging fails to create the proper {{Path|distccd.log}} file in {{Path|/var/log/}}. This apparently only effects version 3.1-r8 of distcc. This bug is in the process of being corrected (see {{Bug|477630}}). It is possible to work around this by manually creating the log file, giving it proper ownership, and restarting the distccd daemon:

{{RootCmd
|mkdir -p /var/log/distcc
|touch /var/log/distcc/distccd.log
|chown distcc:daemon /var/log/distcc/distccd.log
}}

Next update the {{Path|/var/log}} path of the {{c|distccd}} configuration file in {{Path|/etc/conf.d/distccd}} to the {{Path|distcc}} directory created in the step before:

{{FileBox|filename=/etc/conf.d/distccd|title=Updating log path|lang=bash|1=
DISTCCD_OPTS="--port 3632 --log-level notice --log-file /var/log/distcc/distccd.log -N 15 
}}

Finally, restart the distccd service:

{{RootCmd|/etc/init.d/distccd restart}}

=== Некоторые пакеты не используют distcc ===

Можно заметить, что сборка некоторых пакетов не распределяется по хостам (и не происходит параллельно, т. е. в несколько процессов). Такое может происходить, когда {{Path|Makefile}} пакета не поддерживает параллельные операции, или мейнтейнер ebuild’а явно отключил их, чтобы избежать известных проблем. 

Иногда {{c|distcc}} может вызывать сбой при компиляции пакета. Если такое происходит, пожалуйста, [https://bugs.gentoo.org/ сообщите] об этом.

=== Смешанные версии GCC ===

Если на взаимодействующих хостах разные версии GCC, то велика вероятность возникновения очень странных проблем. Решение — установить на все хосты одну версию GCC. 

Recent Portage updates have made Portage use <code>${CHOST}-gcc</code> (minus gcc) instead of <code>gcc</code>. This means that if i686 machines are mixed with other types (i386, i586) then the builds will run into troubles. A workaround for this may be to run:

{{RootCmd|export CC{{=}}'gcc' CXX{{=}}'c++'}}

It is also possible to set the <var>CC</var> and <var>CXX</var> variables in {{Path|/etc/portage/make.conf}} to the values list in the command above.

{{Important/ru|Так вы явно переопределите некоторую часть поведения Portage, что может привести к странным результатам в будущем. Делайте так, только если использование разных CHOST’ов неизбежно.}}

=== -march=native ===

Starting with GCC 4.3.0, the compiler supports the <code>-march=native</code> option which turns on CPU auto-detection and optimizations that are worth being enabled on the processor on which GCC is running. This creates a problem when using {{c|distcc}} because it allows the mixing of code optimized for different processors. For example, running {{c|distcc}} with <code>-march=native</code> on a system that has an AMD Athlon processor and doing the same on ''another'' system that has an Intel Pentium processor will mix code compiled on both processors together.

Обратите внимание на следующее предупреждение:

{{Warning|Do '''not''' use <code>-march{{=}}native</code> or <code>-mtune{{=}}native</code> in the <var>CFLAGS</var> or <var>CXXFLAGS</var> variables of {{Path|make.conf}} when compiling with {{c|distcc}}.}}

To know the flags that GCC would enable when called with <code>-march=native</code>, execute the following:

{{Cmd|gcc -march{{=}}native -E -v - &lt;/dev/null 2&gt;&amp;1 {{!}} grep cc1|output=<pre>
/usr/libexec/gcc/x86_64-pc-linux-gnu/4.7.3/cc1 -E -quiet -v - -march=corei7-avx \
  -mcx16 -msahf -mno-movbe -mno-aes -mpclmul -mpopcnt -mno-abm -mno-lwp -mno-fma \
  -mno-fma4 -mno-xop -mno-bmi -mno-bmi2 -mno-tbm -mavx -mno-avx2 -msse4.2 -msse4.1 \
  -mno-lzcnt -mno-rdrnd -mno-f16c -mno-fsgsbase --param l1-cache-size=32 \
  --param l1-cache-line-size=64 --param l2-cache-size=6144 -mtune=corei7-avx
</pre>}}

== Смотрите также ==

* The [[Distcc/Cross-Compiling|DistCC Cross-compiling guide]] explains how using one architecture to build programs for another architecture is done through {{c|distcc}}. This can be as simple as using an Athlon (i686) to build a program for a K6-2 (i586), or using a SPARC to build a program for a PowerPC.

== Ссылки ==

* [http://blogs.gentoo.org/mgorny/2014/06/23/inlining-marchnative-for-distcc/ Inlining <code>-march=native</code> for distcc]
* [https://github.com/distcc/distcc Distcc homepage]

{{Migrated|originalauthors=Lisa Seelye, Mike Frysinger, Erwin, Sven Vermeulen, Lars Weiler, Tiemo Kieft and nightmorph}}
