<languages />
{{Lowercase title}}
{{InfoBox stack
|{{InfoBox wikipedia|header=true}}
|{{InfoBox gdoc|genkernel}}
}}

'''genkernel''' se usa para automatizar el proceso de construcción del [[kernel|Núcleo]] e [[initramfs]]. Algunas de las características generales incluyen:
* Configurar los ficheros fuente del núcleo
* Construir el núcleo comprimido {{Path|bzImage}} y copiarlo a {{Path|/boot}}
* Crear un initramfs y copiarlo a {{Path|/boot}}
* Crear enlaces simbólicos en {{Path|/boot}}
* Añadir código del usuario al initramfs tal como ficheros de cifrado, imágenes de inicio (splash), módulos añadidos y demás
* Comprimir el initramfs
* Configurar el [[bootloader|Gestor de arranque]]

== Instalación ==

Para instalar {{Package|sys-kernel/genkernel}}, seleccione en primer lugar los ajustes USE adecuados.

{{USEflag|package=sys-kernel/genkernel
|crypt++no
|cryptsetup++no
|ibm++no
|selinux++no
}}

A continuación se puede realizar la instalación del software de genkernel.

{{Emerge|genkernel}}

== Invocación de Genkernel ==

La forma general de invocar a genkernel se muestra a continuación:

{{RootCmd|<pre> genkernel [opciones ...] acción </pre>}}

=== Opciones === 

El comportamiento actual de genkernel depende de un gran número de opciones, la mayoría de las cuales se pueden activar o desactivar en el fichero {{Path|/etc/genkernel.conf}} o pasarse a través de la orden <code>genkernel</code>. La opciones que se pasan como parámetros a la orden son preferentes a las definidas en {{Path|/etc/genkernel.conf}}. Este fichero está muy bien documentado, sin embargo, aquí echaremos un vistazo a las opciones más comunes. Para una explicación más completa, por favor, lea los comentarios en el propio fichero {{Path|/etc/genkernel.conf}} o la salida de la orden <code>man genkernel</code>.

{{Note|Algunas de las opciones tienen una variante que desencadena un comportamiento contrario. Se definene como <tt>--[no-]nombre_de_opción</tt>, y este comportamiento se muestra entre corchetes tal y como se ve en el siguiente ejemplo:
{{Code|Habilita o deshabilita cierta opción|<pre>
--[no-]menuconfig : Activa [Desactiva] ...
</pre>}}
Cuando las opciones tienen únicamente un efecto negativo, el <tt>no-</tt>, y su efecto, que no es opcional en este caso, se muestran sin corchetes.}}

==== Opciones que actúan en la interactividad del usuario ====

Las opciones de configuración listadas abajo ayudan a decidir cómo interaccionar con el proceso de configuración. Los usuarios pueden incluso escoger si el archivo de configuración creado en el proceso se debería guardar. La siguientes son las opciones de configuración principales:

;<tt>--[no-]menuconfig</tt>
: Activa [o desactiva] la orden <code>make menuconfig</code> (que invoca a la utilidad de configuración interactiva del núcleo basada en menús de pantalla) antes de compilar el núcleo.

;<tt>--gconfig</tt>
: Ofrece una utilidad de configuración del núcleo que depende de las bibliotecas GTK+-. La ventaja de esta opción es que la mayoría de los usuarios piensan que el uso esta herramienta hace más fácil y clara la configuración del núcleo ya que se basa en el sistema X-Window. Su desventaja es que se necesita el sistema X-Window para usarla, así que no funcionará en la línea de órdenes.

<tt>--xconfig</tt>
Ofrece una utilidad de configuración del núcleo que depende de las bibliotecas QT. La ventaja de esta opción es que el uso de esta herramienta para configurar el núcleo  es para la mayoría de los usuarios más sencilla y clara, ya que se basa en el sistema X-Window. Su desventaja es que necesita el sistema X-Window para utilizarla, así que no funcionará en la línea de órdenes.

;<tt>--[no-]save-config</tt>
Guarda [o no] la configuración del núcleo a un fichero en el directorio {{Path|/etc/kernels}} para un uso posterior.

;<tt>--kernname=&lt;SobreNombre&gt;</tt>: Permite la modificación del nombre del núcleo y las imágenes initrd en el directorio {{Path|/boot}} de forma que la imágenes producidas son de la forma {{Path|kernel-&lt;SobreNombre&gt;-versión}} e {{Path|initramfs-&lt;SobreNombreNickName&gt;-versión}}.

==== Opciones que afectan al sistema resultante ====

Las opciones de configuración mostradas a continuación definen características que podrán ser o no activadas en el núcleo e initrd resultantes. 

;<tt>--[no-]splash</tt>
: Activa <e>[o desactiva]</e> el soporte para el [http://fbsplash.berlios.de/wiki/doku.php framebuffer splash] en el initrd que genkernel va a construir. Para anular el tema por defecto usado por fbsplash use el parámetro <tt>--splash=&lt;TemaPreferido&gt;</tt> (donde <tt>&lt;TemaPreferido&gt;</tt> es el título de uno de los directorios ubicados dentro del directorio {{Path|/etc/splash}}).

;<tt>--splash-res=&lt;ResoluciónPreferida&gt;</tt> 
: Esta opción le permite seleccionar las resoluciones de pantalla de arranque soportadas en el initrd mientras se inicia el sistema. Esto es útil por dos motivos: el primero, que puede seleccionar las resoluciones de pantalla de arranque que se pueden aplicar a su sistema. Segundo, evita hacer uso de mayor espacio en disco requerido por initrd (puesto que initrd no ofrece soporte para aquellas resoluciones irrelevantes a la configuración de su sistema). No obstante, puede que desee omitir esta opción si construye el núcleo para un CD de Instalación; esto permite soporte de splash para todas las resoluciones posibles.

;<tt>--do-keymap-auto</tt>
: Forzar la sección del mapa del teclado durante la secuencia de inicio

;<tt>--lvm</tt>
: Incluye soporte de almacenamiento a través de 
[http://sources.redhat.com/lvm2/ Gestión de Volúmenes Lógicos] (LVM2) a partir de binarios estáticos, si están disponibles en el sistema. Los binarios (estáticos) de LVM2 se compilan si no están presentes. Asegúrese de instalar el paquete lvm2 en su sistema con emerge lvm2 antes de habilitar esta opción y revise el [[LVM | artículo sobre LVM]] en el wiki de Gentoo.

;<tt>--dmraid</tt>
: Incluye suporte para DMRAID, la utilidad que crea mapas RAID usando el subsistema de mapa de dispositivos (device-mapper) del núcleo. [http://people.redhat.com/~heinzm/sw/dmraid/readme DMRAID] descubre, activa, desactiva y muestra las propiedades de conjuntos de software RAID (por ejemplo, ATARAID) y particiones DOS contenidas.

;<tt>--luks</tt>
: Incluye soporte para la configuración unificada de claves Linux (Linux Unified Key Setup) o [http://clemens.endorphin.org/cryptography LUKS]. Esto le permitirá usar un dispositivo cifrado con LUKS que contenga el sistema de archivos raíz. En el gestor de arranque se define el dispositivo cifrado como el valor de de crypt_root (y real_root será el dispositivo descifrado que creará LUKS).

;<tt>--disklabel</tt>
: Añade soporte para etiquetas de disco y UUID al initrd.

;<tt>--iscsi</tt>
: Añade soporte para iSCSI al initrd.

;<tt>--multipath</tt>
: Añade soporte para [[Multipath]] al initrd.

;<tt>--linuxrc=/camino/a/su/linuxrc</tt>
: Especifica la ruta al archivo creado por el usuario y denominado linuxrc, un guión inicializado durante la etapa de inicio del núcleo previo
al proceso de arranque real. (La ubicación por defecto del guión linuxrc debería ser el directorio
{{Path|/usr/share/genkernel/}}). Este guión le permite iniciar el arranque de un pequeño núcleo modular y cargar los controladores necesitados (como módulos) por el sistema.

;<tt>--cachedir=/camino/a/camino/alternativo</tt>
: Permite cambiar la localización de la caché que se utiliza por defecto para compilar el núcleo.

;<tt>--tempdir=/camino/al/nuevo/directoriotemporal</tt>
: Especifica la localización del directorio temporal utilizado por genkernel para compilar el núcleo.

;<tt>--unionfs</tt>
: Incluye soporte para el [http://www.fsl.cs.sunysb.edu/project-unionfs.html Sistema de Ficheros Unificado] en la imagen initrd.

;<tt>--mountboot</tt>
: Detecta si el directorio {{Path|/boot}} necesita o no montarse en una partición separada. Revisará el
fichero {{Path|/etc/fstab}} para obtener instrucciones acerca de cómo montar la partición boot en un sistema de archivos (si esto es necesario).

==== Opciones que actúan en la elección de las herramientas utilizadas para la construcción ====

Las siguientes opciones están soportadas por genkernel y se pasan a las aplicaciones relevantes mientras se ensambla el núcleo. Estas opciones afectan a las herramientas de compilación utilizadas en el proceso de compilación del núcleo aunque a un nivel mucho más bajo.

;<tt>--kernel-cc=&lt;algúnCompilador&gt;</tt>
: Especifica el compilador que se empleará durante el proceso de construcción del núcleo.

;<tt>--kernel-ld=&lt;algúnEnlazador&gt;</tt>
: Especifica el enlazador que se utilizará en el proceso de construcción del núcleo.

;<tt>--kernel-as=&lt;algúnEnsamblador&gt;</tt>
: Especifica el ensamblador que se utilizará en el proceso de construcción del núcleo.

;<tt>--kernel-make=&lt;algúnMake&gt;</tt>
: Especifica una alternativa a la utilidad GNU make que se empleará en el proceso de construcción del núcleo.

;<tt>--utils-cc=&lt;algúnCompilador&gt;</tt>
: Especifica el compilador que se utilizará para construir la utilidades de soporte a la construcción.

;<tt>--utils-ld=&lt;algúnEnlazador&gt;</tt>
: Especifica el enlazador que se utilizará en el proceso de construcción de las utilidades de soporte.

;<tt>--utils-as=&lt;algúnEnsamblador&gt;</tt>
: Especifica el ensamblador que se utilizará para la construcción de las utilidades de soporte.

;<tt>--utils-make=&lt;someMake&gt;</tt>
: Especifica una alternativa a la utilidad GNU make que se empleará para la construcción de las utilidades de soporte.

;<tt>--makeopts=-jX</tt>
: Especifica el número de hilos concurrentes que puede implementar la utilidad make mientras se compila el núcleo (y sus utilidades). La variable <code>'X'</code> es un número que se obtiene al sumar uno (1) al número de procesadores usados por el sistema. Así, para un sistema que tenga un núcleo, el parámetro apropiado es <code>-j2</code> o <code>-j1</code>, un sistema con dos procesadores usará probablemente el parámetro <c>-j3</c> o <code>-j2</code> y así sucesivamente (Se puede asumir que un sistema con un solo procesador que soporte la tecnología Hyper-Threading&trade; (HT) tiene dos núcleos, siempre y cuando el multiprocesamiento paralelo (Symmetric Multi-Processing o SMP) esté habilitado en el núcleo).

==== Opciones que actúan en el proceso de compilación ====

Las siguientes opciones normalmente actúan durante el proceso de compilación:

;<tt>--kerneldir=/camino/a/los/fuentes/</tt>
: Especifica una localización alternativa a los ficheros fuente del núcleo en lugar de la localización por defecto {{Path|/usr/src/linux/}}.

;<tt>--kernel-config=/camino/al/fichero-de-configuración</tt>
: Especifica qué configuración alternativa se utilizará para el núcleo en lugar del fichero de configuración por defecto {{Path|/path/to/sources/.config}}.

;<tt>--module-prefix=/camino/al/prefijo-de-directorio/</tt>
: Especifica un prefijo del directorio donde se instalarán los módulos del núcleo (el camino por defecto es el directorio {{Path|/lib/modules}}).

;<tt>--[no-]clean</tt>
: Activa [o desactiva] la orden <code>make clean</code> antes de compilar su núcleo. La orden <code>make clean</code> elimina todos los ficheros objeto y dependencias del árbol con los ficheros fuente del núcleo.

;<tt>--[no-]mrproper</tt>
: Activa [o desactiva] la orden <code>make mrproper</code> antes de la compilación del núcleo. Al igual que la orden <code>make clean</code>, <code>make mrproper</code> elimina todos los ficheros objeto y dependencias del árbol de fuentes del núcleo. Sin embargo, también se eliminarán del árbol cualquier configuración previa (in {{Path|/path/to/sources/.config}} o {{Path|/path/to/sources/.config.old}}).

;<tt>--oldconfig</tt>
: Lanza la orden <code>make oldconfig</code>, la cual intenta reunir información de configuración de la arquitectura del sistema a partir del guión genérico ubicado en {{Path|/usr/share/genkernel}}. Este no es un proceso interactivo, no se requiere intervención del usuario. Si se usa <tt>--oldconfig</tt> junto a <tt>--clean</tt>, la última opción se cambia, lo que resulta en la habilitación de la orden <tt>--no-clean</tt>.

;<tt>--callback="echo hola"</tt>
: Realiza una llamada a los argumentos especificados (<code>echo hola</code>, en este caso) después de que se hayan compilado el núcleo y los módulos relevantes, pero antes de compilar la imagen de initrd. Esto puede ser útil si quiere instalar módulos externos en la imagen initrd instalando los componentes relevantes con la característica "callback" y redefiniendo a continuación el grupo de módulos de genkernel.

;<tt>--[no-]install</tt>
: Activa [o desactiva] la orden <code>make install</code>, que instala su nueva imagen del núcleo, el fichero de configuración, la imagen initrd y el mapa del sistema en su partición boot ya montada. Así mismo se instalarán los módulos compilados.

;<tt>--no-ramdisk-modules</tt>
: Evita copiar cualquier módulo a la imagen initrd creada por genkernel. Esta opción es una excepción a la regla del prefijo <tt>no-</tt>; la omisión de este prefijo resultará en un opción inválida en genkernel.

;<tt>--all-ramdisk-modules</tt>
: Copia todos los módulos disponibles a la imagen initrd creada por genkernel.

;<tt>--genzimage</tt>
: Crea la imagen initrd previa a la imagen del núcleo. (Este truco actualmente solo es válido en los sistemas Pegasos PPC).

==== Depurar opciones ====

El uso de opciones de depuración durante el proceso de construcción del núcleo controla la cantidad de información que se muestra, así como la presentación de dicha información.

;<tt>--loglevel=&lt;nivelinformación&gt;</tt>
: Controla la cantidad (nivel) de información de salida que ofrece genkernel. La variable <code>&lt;nivelinformación&gt;</code> es un número entero cuyo valor está entre 0 y 5. El nivel '0' representa una cantidad mínima de información de    salida mientras que '5' entrega la mayor cantidad de información posible acerca de las actividades de genkernel durante el proceso de construcción del núcleo.

;<tt>--logfile=/camino/al/fichero-de-salida</tt>
: Ignora el valor definido por la opción <c>--loglevel</c> y envía toda la información de depuración generada por genkernel al fichero de salida especificado, el cual se ubica por defecto en {{Path|/var/log/genkernel.log }}.

;<tt>--[no-]color</tt>
: Activa [o desactiva] la salida a color de la información de depuración (generada por genkernel), para ello utiliza secuencias de escape.

=== Acción ===

Una acción enviada a genkernel en la línea de comandos mediante <code>genkernel [opciones …] acción</code>, le indica a <code>genkernel</code> qué debe hacer. Se ofrecen las siguientes acciones:

;<code>all</code>
: Construye todas los pasos: el initrd, el núcleo, la imagen y los módulos.

;<code>bzImage</code>
: Únicamente construye la imagen del núcleo

;<code>kernel</code>
: Únicamente construye la imagen del núcleo y los módulos

;<code>initramfs</code>
: Únicamente construye la imagen initramfs/ramdisk

;<code>ramdisk</code>
: Únicamente construye la imagen initramfs/ramdisk

== Usar Genkernel ==

=== La primera invocación de Genkernel ===

Aunque hay varias formas de lanzar genkernel, el enfoque menos intrusivo y recomendado para la mayoría de los usuarios es mediante <code>genkernel all</code>. En este caso se utiliza una configuración genérica que funciona bien en la mayoría de los sistemas. Tal como se mencionaba arriba, este enfoque presenta ciertas desventajas pues la mayor parte de los módulos creados no son útiles para el usuario promedio y puede incrementar el tiempo de compilación. Abajo se muestra un ejemplo de un enfoque más eficiente el cual se logra al pasar ciertos parámetros a genkernel cuando se lanza con el usuario root:

{{RootCmd|genkernel --splash --no-install --no-clean --menuconfig all}}

La operación descrita arriba provoca que genkernel cree un núcleo con pantalla una pantalla de bienvenida (<tt>--splash</tt>) que se deberá instalar de forma manual (<tt>--no-install</tt>). Mientras se prepara el árbol de fuentes del núcleo, genkernel evitará eliminar cualquiera de los archivos objeto preexistentes en el árbol de los fuentes (<tt>--no-clean</tt>). Se ofrecerá al usuario una herramienta de configuración basada en menús para seleccionar qué módulos se construirán en el sistema (<tt>--menuconfig</tt>).

Si se reemplaza la opción <tt>--no-install</tt> por <tt>--install</tt> se le indicará a genkernel que instale el nuevo núcleo en el directorio {{Path|/boot}} de forma automática y se crearán los enlaces simbólicos se se especifica <tt>--symlink</tt>. El uso de la opción <tt>--mountboot</tt> le indica a genkernel que monte la partición {{Path|/boot}} de forma automática si es necesario.

{{Note|No olvide que <code>genkernel</code> lanza el fichero de órdenes {{Path|/etc/genkernel.conf}} al comienzo de la construcción, y que cualquier opción definida en él se aplicará excepto cuando se define una opción de línea de órdenes que toma preferencia respecto a la misma opción definida en el fichero anterior.}}

=== Usar Genkernel para cambiar su núcleo ===

Lo primero que se debe hacer es permitir que se lance <code>make menuconfig</code> en el fichero {{Path|/etc/genkernel.conf}}:

{{File|/etc/genkernel.conf|Fozar el uso del menú de configuración en /etc/genkernel.conf|<pre>
# ¿Se lanza 'make menuconfig' antes de compilar este núcleo?
MENUCONFIG="yes"
</pre>}}

==== Gestión de ficheros realizada por genkernel ====

Mientras utiliza genkernel, debe tener en cuenta varios aspectos relacionados con su configuración y los ficheros de imagen del núcleo así como la forma en la que el sistema gestiona los fichero fuente del núcleo.

===== Ficheros fuente utilizado por genkernel =====

Después de lanzar la orden <code>emerge -u gentoo-sources</code>, siempre que los nuevos fuentes estén disponibles, se creará un nuevo directorio de ficheros fuente del núcleo en {{Path|/usr/src/}} para almacenarlos. Normalmente los fuentes activos del núcleo se definen con el enlace simbólico {{Path|/usr/src/linux}}.

El directorio {{Path|/usr/src}} debería un aspecto similar a este:

{{Cmd|ls -l /usr/src|output=<pre>
total 16
lrwxrwxrwx  1 root root   19 21 marzo  2013  linux -> linux-3.7.10-gentoo
drwxr-xr-x 24 root root 4096 25 agosto 10:39 linux-3.10.7-gentoo
drwxr-xr-x 20 root root 4096 21 abril  19:42 linux-3.7.10-gentoo
drwxr-xr-x 21 root root 4096 14 marzo  2013  linux-3.7.9-gentoo
drwxr-xr-x  7 root root 4096 20 abril  17:06 rpm
</pre>}}

El enlace simbólico {{Path|linux}} se puede cambiar de diferentes formas: 

* Si el ajuste USE <code>symlink</code> está definido en {{Path|/etc/portage/make.conf}}, el enlace simbólico {{Path|linux}} se actualiza automáticamente para que apunte al los nuevos ficheros fuente instalados. 

* Si el ajuste USE indicado arriba no se ha definido, el usuario puede cambiar el destino del enlaces simbólica con la orden <code>eselect kernel list</code>.

De cualquier forma, <code>genkernel</code> siempre utliza los ficheros fuente a los que apunta este enlace simbólico.

===== Fichero de configuración utilizado por genkernel =====

Si ya se ha realizado una construcción del núcleo con los fuentes activos, debería aparecer un fichero dentro del directorio {{Path|/etc/kernels}} que contiene al configuración del núcleo que se ha aplicado mientras se creó la última bzimage del núcleo. Este fichero se llama, por ejemplo, {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}} donde x86_64 es el nombre de su arquitectura, 3.7.9 es la versión de los ficheros fuentes que está utilizando y r1 es la "release" de los fuentes.

Es este fichero {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}} el que se utiliza como configuración cuando se realiza la llamada a <code>genkernel --menuconfig all</code>.

Si es la primera vez que se lanza <code>genkernel</code> o si no se ha guardado el resultado previo este fichero se sustituye por un fichero de configuración por defecto que se encuentra en {{Path|usr/share/genkernel/arch/x86_64/kernel-config}} donde hay que sustituir x86_64 por la arquitectura en la que se está trabajando.

{{Note|La ruta a este fichero de configuración por defecto se puede alterar definiendo la variable DEFAULT_KERNEL_CONFIG en el fichero {{Path|/etc/genkernel.conf}}.}}

===== Guardar la configuración compilada =====

Si se activa la opción <code>save-config</code> de genkernel, bien desde la línea de órdenes, bien dentro de {{Path|/etc/genkernel.conf}}, la configuración del núcleo que se ha compilado se guardará (con el nombre indicado arriba) en el directorio {{Path|/etc/kernels}}. Al mismo tiempo, la configuración se guarda en el fichero {{Path|.config}} dentro del directorio {{Path|/usr/src/linux}}, sin embargo, este fichero no se reutilizará en la siguiente ejecución de <code>genkernel all</code>.

{{Warning|Se debe tener cuidado: Cada vez que se lanza genkernel con la opción <code>save-config</code> activada, el fichero de configuración en {{Path|/etc/kernels}} se sobrescribe. Así, se recomienda guardar este fichero con un nuevo nombre antes de lanzar genkernel para conservarlo.}}

===== Instalar el núcleo y el initramfs en el directorio /boot =====

Si se especifica la opción <code>all</code> cuando se lanza genkernel, se le pedirá a <code>genkernel</code> que instale la imagen del núcleo y el initramfs en el directorio {{Path|/boot}}. Para hacer esto de forma correcta, defina lo siguiente en el fichero {{Path|/etc/genkernel.conf}}:

{{File|/etc/genkernel.conf|Guardar automáticamente el núcleo y el initramfs|<pre>
# ¿Montar BOOTDIR de forma automática si no está montado?
MOUNTBOOT="yes"

# Guardar la nueva configuración en /etc/kernels
# después de una compilación exitosa
SAVE_CONFIG="yes"

# ¿Crear enlaces simbólicos en  BOOTDIR de forma automática?
SYMLINK="yes"

# ¿Añadir el nuevo núcleo a grub?
#BOOTLOADER="grub"
</pre>}}

* El primer parámetro no requiere explicación.

* El segundo parámetro le indica a  genkernel que guarde la configuración del núcleo que se ha compilado en {{Path|/etc/kernels}}.

* Las dos últimas opciones le indican a genkernel que actualice automáticamente la configuración de grub. En la práctica sucede lo siguiente:
** Si existe una imagen previa del núcleo con el mismo nombre, se renombra añadiendo <tt>.old</tt>. Un enlace simbólico {{Path|kernel.old}} se crea automáticamente apuntando a ella.
** El nuevo núcleo toma el lugar de cualquier núcleo con el mismo nombre dentro de {{Path|/boot}}. Si es la primera vez que se compila un núcleo, se crea automáticamente un enlaces simbólico que apunta al nuevo núcleo.

Después de lanzar <code>genkernel --menuconfig all</code>, el directorio {{Path|/boot}} tendrá un aspecto similar al siguiente:

{{Cmd|ls -al /boot|output=<pre>
total 41336
drwxr-xr-x  3 root root    4096 20 abril 17:23 .
drwxr-xr-x 24 root root    4096 15 sept. 12:31 ..
lrwxrwxrwx  1 root root       1 24 febr. 2013  boot -> .
drwxr-xr-x  2 root root    4096 24 febr. 2013  grub
lrwxrwxrwx  1 root root      40 20 abril 17:23 initramfs -> initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1314412 20 abril 17:23 initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1313548 21 marzo 2013  initramfs-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 1295344 25 febr. 2013  initramfs-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3310324 25 febr. 2013  initramfs-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      44 20 abril 17:23 initramfs.old -> initramfs-genkernel-x86_64-3.7.10-gentoo.old
lrwxrwxrwx  1 root root      37 20 abril 17:23 kernel -> kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866656 20 abril 17:23 kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866560 21 marzo 2013  kernel-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 4552288 25 febr. 2013  kernel-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3400736 25 febr. 2013  kernel-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      41 20 abril 17:23 kernel.old -> kernel-genkernel-x86_64-3.7.10-gentoo.old
</pre>}}

==== Configurar el gestor de arranque ====

Los enlaces simbólicos que se muestran arriba en la configuración del gestor de arranque se pueden utilizar tal cual, incluso cuando el núcleo no se puede arrancar, el usuario siempre podrá arrancar el antiguo. 

Para permitir que el núcleo y el initrd ofrecido por genkernel funcione correctamente, deberá ofrecer a su gestor de arranque una información mínima en su fichero de configuración:
* Añada <code>real_root=/dev/sdax</code>, a los parámetros del núcleo que se pasan a la imagen, donde {{Path|/dev/sdax}} apunta a la partición raíz.
* Si está utilizando la pantalla de presentación de arranque (splash), añada un parámetro correcto para el modo de pantalla, por ejemplo <code>vga=0x317</code>, así como <code>splash=verbose</code> o <code>splash=silent</code> dependiendo del nivel de detalle que desee a lo largo del proceso de arranque.
* Añada la información sobre initrd que requiera la configuración de su gestor de arranque. Consulte el
[http://www.gentoo.org/doc/es/handbook/handbook-x86.xml?part=1&chap=10 Capítulo de Configuración del Gestor de Arranque] del manual de Gentoo para obtener detallas sobre la configuración de su gestor de arranque con initrd.

A continuación se muestra un ejemplo del aspecto que debería tener el fichero {{Path|grub.conf}}.

{{File|/boot/grub/grub.conf|Un fichero ejemplo grub.conf|<pre>
# Esto es un fichero ejemplo de grub.conf para usar con Genkernel según el manual de Gentoo
# http://www.gentoo.org/doc/es/handbook/handbook-x86.xml?part=1&chap=10#doc_chap2
# Si no está usando Genkernel y necesita ayuda para crear este fichero
# debería consultar el manual. De forma alternativa, consulte el fichero grub.conf.sample
# que se incluye en la documentación de Grub.

default 0
timeout 5
splashimage=(hd1,0)/boot/grub/splash.xpm.gz

title Gentoo Linux
root (hd0,6)
kernel /boot/kernel initrd=/dev/ram0 real_root=/dev/sda7 rootfstype=ext4
initrd /boot/initramfs

title Gentoo Linux old kernel
root (hd0,6)
kernel /boot/kernel.old initrd=/dev/ram0 real_root=/dev/sda7 rootfstype=ext4
initrd /boot/initramfs.old
</pre>}}

==== Conservar sus ficheros de trabajo ====

La aplicación genkernel guarda automáticamente los cambios realizados en los ficheros. Si se necesita conservar cambios realizados anteriormente se deberán realizar las siguientes acciones.

* El primer fichero a conservar es la configuración del núcleo en {{Path|/etc/kernels/}}. Si los fuentes no han cambiado antes de la reconstrucción del núcleo, se usará el nombre utilizado anteriormente para este fichero. Por lo que si se copia la configuración anterior a un nuevo nombre, se podrá conservar la información para utilizar este fichero como punto de partida para una nueva configuración.

* El segundo aspecto importante es conservar las imágenes del núcleo e initramfs que arrancan correctamente. La forma de realizar esto depende del contexto:
:# Si el último núcleo que se construyó arranca correctamente, al lanzar <code>genkernel</code> se cambiará el nombre a la imagen este núcleo (y de igual forma al initramfs) a {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} y se creará un nuevo {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}. Esto implica que, en caso de que el nuevo núcleo no arranque, los usuarios siempre podrán arrancar con el antiguo.
:# Si el último núcleo que se construyó no arranca y los fuentes no han cambiado desde que el usuario construyó un nuevo núcleo, antes de lanzar <code>genkernel</code>, se deberá eliminar la nueva imagen del núcleo y quitar el sufijo <tt>.old</tt> del último núcleo que arrancara. Si no se hace esto y el nuevo núcleo construido no arranca en la segunda ocasión, el núcleo arrancable {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} será sustituido por el núcleo {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}} que no arranca, por lo que usuario no podrá arrancar su sistema. Para initramfs se emplea el mismo razonamiento.

=== Utilizar el núcleo anterior mientras se cambian los fuentes ===

The previous configuration can be used through the <code>make menuconfig</code> option in your {{Path|/etc/genkernel.conf}} as follows:

{{File|/etc/genkernel.conf|Setting up make menuconfig|<pre>
# Run 'make menuconfig' before compiling this kernel?
MENUCONFIG="yes"
</pre>}}

{{Note|There is no need to run <code>make oldconfig</code> with genkernel even if the sources are changed from {{Path|kernel-genkernel-ARCH-version-gentoo-rx}} to {{Path|kernel-genkernel-ARCH-version-gentoo-r(x+1)}} or from {{Path|kernel-genkernel-ARCH-version-gentoo}} to {{Path|kernel-genkernel-ARCH-(version+1)-gentoo}} because <code>make menuconfig</code> will try to load the previous configuration into the menu as much as possible. Nevertheless, reviewing each option and new sections carefully is recommended.}}

== Network Booting with Genkernel ==

=== Network Booting with Genkernel from an Installation CD ===

The genkernel utility can build kernel and initrd images that provide support for network booting, or netbooting. With any luck, users should be able to netboot any recent computer into the environment provided by the Installation CD.

The magic lies in genkernel's linuxrc script: it will try to netmount the Installation CD using NFS. From there, the init scripts of the Installation CD can take over, as if the CD was present locally.

=== Building Kernel and Initrd Images with Support for Netbooting ===

To enable support for netbooting, include the following options while configuring the kernel:

{{Warning|Support for netbooting with genkernel is experimental and may contain bugs. }}

First, the kernel image must include the drivers for your Network Interface Cards (NIC). Normally, drivers for such devices will be compiled as modules. However, it is essential (for netbooting) that such drivers are compiled directly into the kernel image and not as modules.

{{Kernel|Configuring a 2.6.x series kernel to support your NIC driver|<pre>
Device Drivers --->
   Networking Support --->
      Ethernet (10 or 100Mbit)  --->
         [*] Ethernet (10 or 100Mbit)
         <*>   the driver for your network card</pre>
}}

Be sure to select <tt>&lt;*&gt;</tt> and not <tt>&lt;M&gt;</tt>.

Secondly, it is suggested that ''IP: kernel level autoconfiguration'' is enabled as well as ''IP: DHCP support options''. This avoids an unnecessary layer of complexity since the IP address and the NFS path to the Installation CD can be configured on a DHCP server. Of course, this means the kernel command line will remain constant for any machine — which is very important for etherbooting.

{{Kernel|Configuring a 2.6.x series kernel to support DHCP|<pre>
Device Drivers --->
   Networking Support --->
      Networking options
         [*] TCP/IP networking--->
         [*]   IP: kernel level autoconfiguration
         [*]     IP: DHCP support
</pre>}}

These options tell the kernel to send a DHCP request at bootup.

Additionally, enable SquashFS because most modern Gentoo Installation CDs require it. Support for SquashFS is not included with the generic kernel source tree. To enable SquashFS, apply the necessary patches to the generic kernel source or install gentoo-sources.

{{Kernel| Configuring the kernel to support SquashFS|<pre>
File systems--->
   Miscellaneous filesystems --->
      [*] SquashFS 2.X - Squashed file system support
</pre>}}

Once the compilation process is completed, create a compressed tarball (tar.gz) that contains the kernel's modules. This step is only necessary if the kernel version does not match the kernel image version on the Installation CD.

To create an archive containing all the modules:

{{RootCmd|cd /
|tar -cf /tmp/modules-X.Y.Z.tar.gz /lib/modules/X.Y.Z/}}

Depending on the network boot mechanism, one of the following steps need to be followed:

To create an etherboot image:

{{RootCmd|emerge mknbi
|cd /boot
|mkelf-linux -params{{=}}"root{{=}}/dev/ram0 init{{=}}/linuxrc ip{{=}}dhcp" kernel... initrd... > etherboot.img}}

To create a OpenBoot / SPARC64 TFTP image:

{{RootCmd|emerge sparc-utils
|cd /boot
|elftoaout kernel... -o kernel.aout
|piggyback64 kernel.aout System.map-... initrd-...
|mv kernel.aout openboot.img}}

The {{Path|openboot.img}} file is the boot image.

Finally, copy this kernel to the TFTP server. The details are architecture-dependent and are beyond the scope of this guide. Please refer to the documentation for your platform.

=== NFS setup ===

To setup a NFS share that contains the Installation CD, use the loop device to mount the ISO image and then copy the contents of the CD into the NFS share. As a nice extra, genkernel's initrd scripts will extract all tar.gz files located in the {{Path|/nfs/livecd/add/}} directory. All that needs to be done here is copy the {{Path|modules-X.Y.Z.tar.gz}} archive to the {{Path|/nfs/livecd/add/}} directory.

The following assumes that {{Path|/nfs/livecd}} is an exported NFS share:

{{RootCmd|mount /tmp/gentoo-livecd.iso /mnt/cdrom -o loop
|cp -p /mnt/cdrom /nfs/livecd
|umount /mnt/cdrom}}

Now copy the {{Path|modules.tar.gz}} file into {{Path|/add}}:

{{RootCmd|mkdir /nfs/livecd/add
|cp /tmp/modules-X.Y.Z.tar.gz /nfs/livecd/add}}

=== DHCP setup ===

The netboot images will ask the DHCP server on the network for an IP as well as a <tt>root-path</tt> parameter. Both can be specified per host using a MAC address to identify machines:

{{File|/etc/dhcpd.conf|Sample client dhcpd.conf setup|<pre>
# Here, 192.168.1.2 is the NFS server while 192.168.1.10 will be the IP address of the netbooted machine
host netbootableMachine {
         hardware ethernet 11:22:33:44:55:66;
         fixed-address 192.168.1.10;
         option root-path "192.168.1.2:/nfs/livecd";
}
</pre>}}

=== Netbooting Instructions ===

Netbooting itself is again very platform-specific. The important part is to specify the <code>ip=dhcp</code> and <code>init=/linuxrc</code> parameters on the kernel command line, as this will bring up the network interface and tell the initrd scripts to mount the Installation CD via NFS. Here are some platform-specific tips.

For etherboot, insert the etherboot disk into the drive and reboot. The kernel command line was specified when the image was constructed. 
  
With Sparc64, hit {{Key|Stop}}-{{Key|A}} at the boot prompt and enter:

{{RootCmd|boot net ip{{=}}dhcp init{{=}}/linuxrc|prompt=ok }}
  
For PXE, setup pxelinux (part of syslinux), then create a {{Path|pxelinux.cfg/default}} along the lines of:

{{File|pxelinux.cfg/default|Default entry|<pre>
DEFAULT gentoo
TIMEOUT 40
PROMPT 1
  
LABEL gentoo
    KERNEL kernel-X.Y.Z
    APPEND initrd=initrd-X.Y.Z root=/dev/ram0 init=/linuxrc ip=dhcp
</pre> }}

=== Booting a genkernel initramfs ===

==== Introduction ====

If an initramfs is installed with genkernel, then take a look at the various boot options that can (or should) be defined in the bootloader configuration. The most common ones are added to this guide.

==== Loading LVM or software-RAID ====

If the system uses LVM or software-RAID, the initramfs has to be built using the <tt>--lvm</tt> and <tt>--mdadm</tt> options. Don't forget to enable support during boot as well. This can be done using the dolvm and domdadm options.

{{File|/boot/grub/grub.conf|Enabling LVM and/or MDADM support|<pre>
# Example for GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 dolvm domdadm
initrd /initramfs-genkernel-x86_64-3.4.3
</pre> }}

==== Booting in single-user mode ====

If for some reason boot-up fails, rescuing the system by booting in the single-user mode is still possible. This will only load the really necessary services and then drop the user to a rescue (root) shell.

{{File|/boot/grub/grub.conf|Booting in single-user mode|<pre>
# Example for GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 init_opts=S
initrd /initramfs-genkernel-x86_64-3.4.3
</pre> }}

== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:


* Tim Yamin
* Jimi Ayodele 
* Thomas Seiler 
* Joshua Saddler
* Sebastian Pipping
* José Fournier

[[Category:Kernel]]
[[Category:Initramfs]]
