<languages />

{{Metadata|abstract=genkernel es una herramienta que se utiliza para automatizar el proceso de construcción del núcleo e initramfs.}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox wikipedia|header=true}}
|{{InfoBox gdoc|genkernel}}
}}

'''genkernel''' is a tool used to automate the build process of the [[kernel]] and [[initramfs]]. Some of the general features include:

* Configuring the kernel sources;
* Building the compressed kernel {{Path|bzImage}} and copying it to {{Path|/boot}}
* Creating an initramfs and copying it to {{Path|/boot}}
* Creating symlinks in {{Path|/boot}}
* Adding custom content to the initramfs such as encryption related files, boot splash images, extra modules, and more;
* Compressing the initramfs;
* Configuring the [[bootloader]].

== Instalación ==

=== USE flags ===

{{USEflag|package=sys-kernel/genkernel|desc=Before installing {{Package|sys-kernel/genkernel}} consider setting some USE flags:
|crypt++no
|cryptsetup++no
|ibm++no
|selinux++no
}}

=== Emerge ===

Initiate the installation of genkernel:

{{Emerge|genkernel}}

== Genkernel invocation ==

La forma general de invocar a genkernel se muestra a continuación:

{{RootCmd|genkernel [options ...] action}}

=== Opciones === 

The actual behavior of genkernel depends on a large variety of options, the majority of which can be set/unset in the {{Path|/etc/genkernel.conf}} file or passed via the <tt>genkernel</tt> command on each invocation. Options passed over the command line take precedence over options defined in {{Path|/etc/genkernel.conf}}. The configuration file is very well documented, however some of the most commonly used options will be explored in this article. The goal is for the reader to be familiar with common genkernel invocations. For a more complete set of explanations refer to the comments in {{Path|/etc/genkernel.conf}} itself or to the output of the <tt>man genkernel</tt> command.

{{Note|Some of the options have a variant that triggers a converse behavior. They are figured as <code>--[no-]option_name</code>, and the converse effect is shown in square brackets as in the following example:
{{CodeBox|title=Enable or disable a certain option|1=
--[no-]menuconfig : Activates [deactivates] ...
}}

Where options have only a negative effect, the <code>no-</code>, and its effect, which are not optional in this case, are figured without square brackets.}}

==== Options acting on user interactivity ====

The configuration options listed below help the user decide how to interact with the configuration process. Users can even choose whether or not the configuration file created in the process should be saved. The following are considered primary configuration options:

{| class="wikitable"
|-
! Option !! Description
|-
| <code>--[no-]menuconfig</code> || Activates [ or deactivates] the <tt>make menuconfig</tt> command (which invokes an interactive configuration menu) before building the kernel.
|-
| <code>--gconfig</code> || Provides a kernel configuration utility which depends on the GTK+ libraries. The advantage of this option is that most users find it easier and clearer to configure the kernel using this tool, since it relies on the X-windowing system. The disadvantage of this option is that the X-windowing system is required to use it, so it will not work on the command line.
|-
| <code>--xconfig</code> || Provides a kernel configuration utility which depends on the QT libraries. The advantage of this option is that most users find it easier and clearer to configure the kernel using this tool, since it relies on the X-windowing system. The disadvantage of this option is that the X-windowing system is needed to use it, so it will not work on the command line.
|-
| <code>--[no-]save-config</code> || Saves [or does not save] the kernel configuration to a file in the {{Path|/etc/kernels}} directory for later use.
|-
| <code>--kernname=NickName</code> || Allows the modification of the name of the kernel and initrd images in the {{Path|/boot}} directory, so that the images produced are {{Path|kernel-NickName-version}} and {{Path|initramfs-NickName-version}}.
|}

==== Options acting on the resulting system ====

The configuration options listed here defines which features will or will not be enabled in the resulting kernel and initrd.

{| class="wikitable"
|-
! Option !! Description
|-
| <code>--[no-]splash</code> ||  Activates [or deactivates] support for [[Fbsplash]] framebuffer splash in the genkernel-built initrd image. To override the default theme used by fbsplash, use <code>--splash=PreferredTheme</code> (where <code>PreferredTheme</code> is the title of one of the directories inside the {{Path|/etc/splash}} directory.
|-
| <code>--splash-res=PreferredResolution</code> || This option allows to select which splash screen resolutions will be supported in the initrd during the start-up of the system. This is useful for two reasons. First, to be able to select only the splash screen resolution(s) relevant to the system. Second, to avoid the unnecessary increase in the disk space required by initrd (since the initrd does not have to support resolutions that are irrelevant for the system's configuration.) However, the option is best omitted if the kernel is being compiled for an Installation CD; this allows splash support for all possible resolutions.
|-
| <code>--do-keymap-auto</code> || Force keymap selection during the boot sequence.
|-
| <code>--lvm</code> || Includes support for storage using via [http://sources.redhat.com/lvm2/ Logical Volume Management] (LVM2) from static binaries, if available to the system. Relevant (static) LVM2 binaries are compiled if they are unavailable. Be sure to install the {{Package|sys-fs/lvm2}} package on the system (<tt>emerge sys-fs/lvm2</tt> before enabling this option, then review the [[LVM | LVM article]] on the Gentoo wiki.
|-
| <code>--dmraid</code> || Includes support for DMRAID; the utility which creates RAID mappings using the kernel device-mapper subsystem. [http://people.redhat.com/~heinzm/sw/dmraid/readme DMRAID] discovers, activates, deactivates and displays properties of software RAID sets (ATARAID, for example) and contained DOS partitions.
|-
| <code>--luks</code> || Includes support for Linux Unified Key Setup or [http://clemens.endorphin.org/cryptography LUKS]. This will allow to use a device encrypted by LUKS which contains the root filesystem. On the bootloader, set that encrypted device as the value of <code>crypt_root</code> (and <code>real_root</code> shall be the unencrypted device LUKS creates).
|-
| <code>--disklabel</code> || Adds support for disk label and UUID support to the initrd.
|-
| <code>--iscsi</code> || Adds support for iSCSI to the initrd.
|-
| <code>--multipath</code> || Adds support for [[Multipath]] to the initrd.
|-
| <code>--linuxrc=/path/to/the/linuxrc_file</code> || Specifies a user-created linuxrc — a script that is initialized during the start-up stage of the kernel, prior to the actual boot process. A default linuxrc script can be found in the {{Path|/usr/share/genkernel/}} directory. This script allows booting into a small, modularized kernel; it tries to load the minimum amount of drivers that are needed (as modules) by the system.
|-
| <code>--cachedir=/path/to/alt/dir</code> || Overrides the default cache location used while compiling the kernel.
|-
| <code>--tempdir=/path/to/new/tempdir</code> || Specifies the location of the temporary directory used by genkernel while compiling the kernel.
|-
| <code>--unionfs</code> || Includes support for the [http://www.fsl.cs.sunysb.edu/project-unionfs.html Unification File System] in the initrd image.
|-
| <code>--mountboot</code> || Detects whether or not the {{Path|/boot}} directory needs to be mounted on a separate partition. It will check {{Path|/etc/fstab}} script for instructions on how to mount the boot partition on a file system (if needed).
|}

==== Options acting on the choice of the tools used for building ====

The following options are supported by genkernel, and are passed to the relevant applications while the kernel is being assembled. These options affect the compiling tools used for the kernel compilation process, albeit at a much lower level.

{| class="wikitable"
|-
! Options !! Description
|-
| <code>--kernel-cc=someCompiler</code> || Specifies the compiler employed during the kernel compilation process.
|-
| <code>--kernel-ld=someLinker</code> || Specifies the linker employed during the kernel compilation process.
|-
| <code>--kernel-as=someAssembler</code> || Specifies the assembler employed during the kernel compilation process.
|-
| <code>--kernel-make=someMake</code> || Specifies an alternative to the GNU make utility employed during the kernel compilation process.
|-
| <code>--utils-cc=someCompiler</code> || Specifies the compiler employed during the compilation of support utilities.
|-
| <code>--utils-ld=someLinker</code> || Specifies the linker employed during the compilation of support utilities.
|-
| <code>--utils-as=someAssembler</code> || Specifies the assembler employed during the compilation of support utilities.
|-
| <code>--utils-make=someMake</code> || Specifies an alternative to the GNU make utility employed during the compilation of support utilities.
|-
| <code>--makeopts=-jX</code> || Specifies the number of concurrent threads that the make utility can implement while the kernel (and utilities) are being compiled. The variable <code>X</code> is a number to be freely chosen, although the most common values are obtained by adding one (1) to the number of cores used by the system, or just use the number of cores on the system. So, for a system with one core, most common option values are <code>-j2</code> or <code>-j1</code>; a system with two cores most likely uses the <code>-j3</code> or <code>-j2</code> options, and so on. (A system with one processor that supports Hyper-Threading™ (HT) Technology can be assumed to have 2 cores, provided Symmetric Multi-Processing (SMP) support is enabled in the kernel.)
|}

==== Options acting on the compilation process ====

The following options usually take effect during the actual compilation:

{| class="wikitable"
|-
! Option !! Description
|-
| <code>--kerneldir=/path/to/sources/</code> || Specifies an alternative kernel source location, rather than the default {{Path|/usr/src/linux/}} location.
|-
| <code>--kernel-config=/path/to/config-file</code> || Specifies what alternative kernel configuration will be used, rather than the default {{Path|/path/to/sources/.config}} file.
|-
| <code>--module-prefix=/path/to/prefix-directory/</code> || Specifies a prefix to the directory where kernel modules will be installed (default path is the {{Path|/lib/modules}} directory.)
|-
| <code>--[no-]clean</code> || Activates [or deactivates] the <tt>make clean</tt> command before compiling the kernel. The make clean command removes all object files and dependencies from the kernel's source tree.
|-
| <code>--[no-]mrproper</code> || Activates [or deactivates] the <tt>make mrproper</tt> command before kernel compilation. Like the make clean command listed above, make mrproper removes all object files and dependencies from the kernel's source tree. However, any previous configuration files (in {{Path|/path/to/sources/.config}} or {{Path|/path/to/sources/.config.old}}) will also be purged from the kernel's source tree.
|-
| <code>--oldconfig</code> || Issues the <tt>make oldconfig</tt> command, which attempts to collect configuration information for the system's architecture from a generic script in {{Path|/usr/share/genkernel}}. This is a non-interactive process; no user input is entertained. Also, if <code>--oldconfig</code> is used in conjunction with <code>--clean</code>, the latter option is negated, resulting in the activation of the <code>--no-clean</code> option.
|-
| <code>--callback="echo hello"</code> || Calls the specified arguments (<tt>echo hello</tt>, in this case) after the kernel and the relevant modules have been built, but before building the initrd image. This may be useful when installing external modules in the initrd image by emerging the relevant item(s) with the callback feature, and then redefining a genkernel module group.
|-
| <code>--[no-]install</code> || Activates [or deactivates] the make install command, which installs the new kernel image, configuration file, initrd image and system map onto the boot partition. Any compiled modules will be installed as well. By default genkernel will attempt mount {{Path|/boot}} if it is on a separate partition before running the install command.
|-
| <code>--no-ramdisk-modules</code> || Refrains from copying any modules to the genkernel-created initrd image. This option is an exception to the rule about the <code>no-</code> prefix; omission of this prefix creates an invalid genkernel option.
|-
| <code>--all-ramdisk-modules</code> || Copies all available modules to the genkernel-created initrd image.
|-
| <code>--genzimage</code> || Creates the initrd image, prior to the kernel image (this hack currently applies only to PPC Pegasos systems).
|}

==== Debugging options ====

The use of debugging options during the kernel compilation process controls the amount of information reported, as well as the presentation of said data.

{| class="wikitable"
|-
! Option !! Description
|-
| <code>--loglevel=verblevel</code> || Controls the level of verbosity for information provided by genkernel. The variable <code>&lt;verblevel&gt;</code> is an integer between 0 and 5. The level '0' represents minimal output, while '5' provides as much information as possible about genkernel's activities during the kernel compilation process.
|-
| <code>--logfile=/path/to/outputfile</code> || Ignores the value set by the <code>--loglevel</code> argument, and sends all debugging data produced by genkernel to the specified output file, which is located at {{Path|/var/log/genkernel.log }} by default.
|-
| <code>--[no-]color</code> || Activates (or deactivates) colored output of debugging information (reported by genkernel) using escape sequences.
|}

=== Actions ===

The action passed on the command line with the <tt>genkernel [options …] ''action''</tt> tells genkernel what action to perform. The following <tt>''actions''</tt> are supported:

;<tt>all</tt>
: Builds all stages — the initrd, kernel image and modules.

;<tt>bzImage</tt>
: Only builds the kernel image.

;<tt>kernel</tt>
: Only builds the kernel image and modules.

;<tt>initramfs</tt>
: Only builds the initramfs/ramdisk image.

;<tt>ramdisk</tt>
: Only builds the initramfs/ramdisk image.

== Using genkernel  ==

=== genkernel first invocation ===

Although there are several ways to run genkernel, the least-intrusive approach recommended for most users is provided by <tt>genkernel all</tt>. Here, a generic configuration which works well for most systems is used. As was mentioned earlier, this approach is not without drawbacks; most of the modules created are useless to the average user and may increase compile time. Below is an illustration of a more efficient approach, achieved by passing certain options to genkernel as root:

{{RootCmd|genkernel --splash --no-install --no-clean --menuconfig all}}

The above operation causes genkernel to create a framebuffer splash-enabled kernel (<code>--splash</code>) that will have to be manually installed (<code>--no-install</code>). While preparing the kernel source tree, genkernel will refrain from cleaning out any preexisting object files present in the source tree (<code>--no-clean</code>). A menu-driven kernel configuration utility will be displayed that allows the user to select which modules will be built for the system (<code>--menuconfig</code>).

Replacing <code>--no-install</code> with the <code>--install</code> option allows genkernel to automatically install the new kernel in the {{Path|/boot}} directory, and will create symlinks if <code>--symlink</code> is specified. Using the <code>--mountboot</code> option allows genkernel to mount the {{Path|/boot}} partition automatically, if necessary.

{{Note|Don't forget that the {{Path|/etc/genkernel.conf}} file is sourced by the '''genkernel''' command at startup, and that any option defined there, will be applied, except where a command line option takes precedence over it.}}

=== Using genkernel to change the kernel  ===

The first thing that should be done is to allow the triggering of <tt>make menuconfig</tt> in the {{Path|/etc/genkernel.conf}} file:

{{FileBox|filename=/etc/genkernel.conf|title=Forzar el uso del menú de configuración en /etc/genkernel.conf|lang=bash|1=
# ¿Se lanza 'make menuconfig' antes de compilar este núcleo?
MENUCONFIG="yes"
}}

==== File management by genkernel ====

Mientras utiliza genkernel, debe tener en cuenta varios aspectos relacionados con su configuración y los ficheros de imagen del núcleo así como la forma en la que el sistema gestiona los fichero fuente del núcleo.

===== Source files used by genkernel =====

After an <tt>emerge -u gentoo-sources</tt>, whenever new sources are available, a new kernel source directory is created under {{Path|/usr/src/}} to host them. Normally, the active kernel sources directory is pointed to by the {{Path|/usr/src/linux}} symlink.

El directorio {{Path|/usr/src}} debería un aspecto similar a este:

{{Cmd|ls -l /usr/src|output=<pre>
total 16
lrwxrwxrwx  1 root root   19 21 mar  2013  linux -> linux-3.7.10-gentoo
drwxr-xr-x 24 root root 4096 25 ago  10:39 linux-3.10.7-gentoo
drwxr-xr-x 20 root root 4096 21 abr  19:42 linux-3.7.10-gentoo
drwxr-xr-x 21 root root 4096 14 mar  2013  linux-3.7.9-gentoo
 </pre>}}

The {{Path|/usr/src/linux}} symlink can be changed in different ways. 

* If the <code>symlink</code> USE is set the {{Path|/usr/src/linux}} symlink is automatically updated to point to the newly emerged sources. 

* If the <code>symlink</code> USE is ''not'' set, the user can change the destination of the symlink using the <tt>eselect kernel list</tt> followed by the <tt>eselect kernel set</tt> command.

genkernel will ''always'' use the sources pointed by the {{Path|/usr/src/linux}} symlink.

===== Kernel configuration file used by genkernel =====

If a kernel compilation has already been run with the active kernel sources, there might be a file inside the {{Path|/etc/kernels}} directory that contains the kernel configuration that has been applied while creating the last bzimage of the kernel. This file is named, for example {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}} where x86_64 might be substituted with the system's architecture, 3.7.9 might be substituted with the version of the sources used and r1 with the release of the sources.

It is this {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}} file that is used as a starting configuration when running  <tt>genkernel --menuconfig all</tt>.

If it is the first time that genkernel is run with the new kernel sources, or if the previous result has not been saved, this file is substituted with a default configuration file that resides at {{Path|usr/share/genkernel/arch/x86_64/kernel-config}} where x86_64 is substituted with the actual architecture.

{{Note/es|La ruta a este fichero de configuración por defecto se puede alterar definiendo la variable DEFAULT_KERNEL_CONFIG en el fichero {{Path|/etc/genkernel.conf}}.}}

===== Guardar la configuración compilada =====

If the <code>--save-config</code> genkernel option is activated, either from the command line or inside {{Path|/etc/genkernel.conf}}, the compiled kernel configuration is saved (with the name given above) into the {{Path|/etc/kernels}} directory. At the same time, the configuration is saved in the {{Path|.config}} file in {{Path|/usr/src/linux}} directory but this file is not reused on the next <tt>genkernel all</tt> run.

{{Warning|One has to be aware, that each time genkernel is run, with the <code>--save-config</code> genkernel option set, the configuration file in {{Path|/etc/kernels}} is overridden. Thus, it is highly recommended to copy this file under a new name ''before'' running genkernel in order to preserve it. }}

===== Instalar el núcleo y el initramfs en el directorio /boot =====

Specifying the <code>--install</code> option when invoking genkernel, will ask genkernel to install the kernel image and the initramfs into the {{Path|/boot}} directory. In order to run <code>--install</code> a convenient manner, set the following in the {{Path|/etc/genkernel.conf}} file:

{{FileBox|filename=/etc/genkernel.conf|title=Configurar el guardado automico del núcleo y el initramfs|lang=bash|1=
# ¿Montar BOOTDIR de forma automática si no está montado?
MOUNTBOOT="yes"

# Guardar la nueva configuración en /etc/kernels
# después de una compilación exitosa
SAVE_CONFIG="yes"

# ¿Crear enlaces simbólicos en  BOOTDIR de forma automática?
SYMLINK="yes"

# ¿Añadir el nuevo núcleo a grub?
#BOOTLOADER="grub"
}}

* The first parameter speaks for itself.

* El segundo parámetro le indica a  genkernel que guarde la configuración del núcleo que se ha compilado en {{Path|/etc/kernels}}.

* The last two options tell genkernel to automatically update the grub configuration. In practice, the following happens:
** If a previous kernel image with the same name already exist, it is renamed by appending {{Path|.old}} to its name. A symlink {{Path|kernel.old}} is automatically created that points to it.
** The new kernel takes the place of any kernel with the same name into {{Path|/boot}}. If it is the first time a kernel is compiled, a symlink kernel is automatically created that points to the new kernel.

After running <tt>genkernel --menuconfig all</tt>, the {{Path|/boot}} directory might look like this:

{{Cmd|ls -al /boot|output=<pre>
total 41336
drwxr-xr-x  3 root root    4096 20 abril 17:23 .
drwxr-xr-x 24 root root    4096 15 sept. 12:31 ..
lrwxrwxrwx  1 root root       1 24 febr. 2013  boot -> .
drwxr-xr-x  2 root root    4096 24 febr. 2013  grub
lrwxrwxrwx  1 root root      40 20 abril 17:23 initramfs -> initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1314412 20 abril 17:23 initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1313548 21 marzo 2013  initramfs-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 1295344 25 febr. 2013  initramfs-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3310324 25 febr. 2013  initramfs-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      44 20 abril 17:23 initramfs.old -> initramfs-genkernel-x86_64-3.7.10-gentoo.old
lrwxrwxrwx  1 root root      37 20 abril 17:23 kernel -> kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866656 20 abril 17:23 kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866560 21 marzo 2013  kernel-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 4552288 25 febr. 2013  kernel-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3400736 25 febr. 2013  kernel-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      41 20 abril 17:23 kernel.old -> kernel-genkernel-x86_64-3.7.10-gentoo.old
</pre>}}

==== Configurar el gestor de arranque ====

Los enlaces simbólicos que se muestran arriba en la configuración del gestor de arranque se pueden utilizar tal cual, incluso cuando el núcleo no se puede arrancar, el usuario siempre podrá arrancar el antiguo. 

To allow the kernel and intird provided by genkernel to run correctly, provide a minimum information in bootloader's configuration file :
* Add <code>real_root=/dev/sdax</code> to the kernel parameters passed to the kernel image, where {{Path|/dev/sdax}} points to the root partition.
* If splash is used, add a suitable mode line such as <code>vga=0x317</code> to the parameters passed to the kernel and also add <code>splash=verbose</code> or <code>splash=silent</code> depending on the verboseness required through the boot process.
* Add the initrd information as required by the bootloader. Consult the [https://wiki.gentoo.org/wiki/Handbook:X86/Installation/Bootloader Bootloader Configuration Chapter] of the Gentoo Handbook for details on how to make the bootloader initrd-aware.

A continuación se muestra un ejemplo del aspecto que debería tener el fichero {{Path|grub.conf}}.

{{FileBox|filename=/boot/grub/grub.conf|title=Un fichero ejemplo grub.conf|lang=bash|1=
# Esto es un fichero ejemplo de grub.conf para usar con Genkernel según el manual de Gentoo
# http://www.gentoo.org/doc/es/handbook/handbook-x86.xml?part=1&chap=10#doc_chap2
# Si no está usando Genkernel y necesita ayuda para crear este fichero
# debería consultar el manual. De forma alternativa, consulte el fichero grub.conf.sample
# que se incluye en la documentación de Grub.

default 0
timeout 5
splashimage=(hd1,0)/boot/grub/splash.xpm.gz

title Gentoo Linux
root (hd0,6)
kernel /boot/kernel initrd=/dev/ram0 real_root=/dev/sda7 rootfstype=ext4
initrd /boot/initramfs

title Gentoo Linux old kernel
root (hd0,6)
kernel /boot/kernel.old initrd=/dev/ram0 real_root=/dev/sda7 rootfstype=ext4
initrd /boot/initramfs.old
}}

==== Preserving the working files ====

La aplicación genkernel guarda automáticamente los cambios realizados en los ficheros. Si se necesita conservar cambios realizados anteriormente se deberán realizar las siguientes acciones.

* The first file to preserve is the kernel configuration file in {{Path|/etc/kernels/}} If the source has not changed prior to the recompilation of the kernel, the previously used name for this file will be used. So copying the previous configuration file under a different name helps in preserving the information while keeping the file available as a starting point for a new configuration.

* The second important thing is to preserve the already bootable kernel and initramfs images. The way to accomplish this depends on the context:
:# If the last kernel compiled is bootable, running '''genkernel''' will rename this kernel (and similarly initramfs) image to {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} and create a new {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}. This mean that even if the new kernel is not bootable, users will always be able to boot the old one.
:# If the last kernel compiled is not bootable and sources haven't changed since the user compiled a bootable one, prior to running '''genkernel''', first delete the new kernel image and remove the <tt>.old</tt> suffix from the last bootable one. Without this, if the newly compiled kernel is not bootable for the second time, the bootable {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} will be kicked out by the renaming of the non bootable {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}, giving the user an unbootable system. Use the same reasoning for initramfs.

=== Utilizar el núcleo anterior mientras se cambian los ficheros fuente ===

The previous configuration can be used through the <tt>make menuconfig</tt> option in {{Path|/etc/genkernel.conf}} as follows:

{{FileBox|filename=/etc/genkernel.conf|title=Configurar make menuconfig|lang=bash|1=
# ¿Lanzar 'make menuconfig' antes de compilar este núcleo?
MENUCONFIG="yes"
}}

{{Note|There is no need to run <tt>make oldconfig</tt> with genkernel even if the sources are changed from {{Path|kernel-genkernel-ARCH-version-gentoo-rx}} to {{Path|kernel-genkernel-ARCH-version-gentoo-r(x+1)}} or from {{Path|kernel-genkernel-ARCH-version-gentoo}} to {{Path|kernel-genkernel-ARCH-(version+1)-gentoo}} because <tt>make menuconfig</tt> will try to load the previous configuration into the menu as much as possible. Nevertheless, reviewing each option and new sections carefully is recommended.}}

== Network booting ==

=== From an installation CD ===

La utilidad genkernel puede construir el núcleo y las imágenes initrd que ofrecen soporte para arranque por red netbooting. Con un poco de suerte, los usuarios deberían poder arrancar desde la red con cualquier ordenador reciente dentro del entorno que ofrece el CD de instalación.

La magia está en el guión linuxrc de genkernel: Este intentará montar el CD de instalación en la red (netmount) usando NFS. A partir de aquí los guiones de inicio del CD de instalación pueden tomar el control como si el CD estuviera presente localmente.

=== Building the kernel and initramfs with netboot support ===

Para habilitar el soporte de arranque por red, incluya las siguientes opciones mientras configura su núcleo:

{{Warning/es|El soporte para arranque por red con genkernel es experimental y puede presentar problemas.}}

First, the kernel image must include the drivers for the system's Network Interface Cards (NIC). Normally, drivers for such devices will be compiled as modules. However, it is essential (for netbooting) that such drivers are compiled directly into the kernel image and not as modules.

{{KernelBox|title=Configuring a 3.x.x series kernel to support various NIC drivers|<pre>
Device Drivers --->
   Networking Support --->
      Ethernet (10 or 100Mbit)  --->
         [*] Ethernet (10 or 100Mbit)
         <*>   The driver(s) for each network card</pre>
}}

Asegúrese de seleccionar <tt>&lt;*&gt;</tt> y no <tt>&lt;M&gt;</tt>.

En segundo lugar, se sugiere que se habilite la opción ''IP: kernel level autoconfiguration'' así como ''IP: DHCP support options''. Esto evita una capa innecesaria de complejidad ya que la dirección IP y la ruta NFS al CD de instalación se pueden configurar en un servidor DHCP. Por supuesto, esto significa que la línea de órdenes del núcleo
permanecerá constante para todas las máquinas, lo cual es muy importante para realizar etherbooting (arranque vía ethernet).

{{KernelBox|title=Configurar un núcleo de la serie 3.x.x para ofrecer soporte a DHCP|<pre>
Device Drivers --->
  Networking Support --->
    Networking options [*]
      TCP/IP networking--->
       [*] IP: kernel level autoconfiguration
       [*] IP: DHCP support
</pre>}}

Estas opciones le indican al núcleo que envíe una petición DHCP en el momento del arranque.

Additionally, enable [[SquashFS]] because most modern Gentoo Installation CDs require it. Support for SquashFS is not included with the generic kernel source tree. To enable SquashFS, apply the necessary patches to the generic kernel source or install gentoo-sources.

{{KernelBox|title=Configurar el núcleo para dar soporte a SquashFS|<pre>
File systems--->
  Miscellaneous filesystems --->
   [*] SquashFS 2.X - Squashed file system support
</pre>}}

Una vez completado el proceso de compilación, cree un tarball (tar.gz) que contenga los módulos del núcleo. Este paso es solo es necesario si su versión del núcleo no concuerda con la versión de la imagen del núcleo del CD de Instalación.

Para crear un archivo que contenga todos los módulos:

{{RootCmd|cd / |tar -cf /tmp/modules-X.Y.Z.tar.gz /lib/modules/X.Y.Z/}}

Dependiendo de su mecanismo de arranque por red necesitará seguir alguno de los siguientes pasos:

Para crear una imagen etherboot:

{{RootCmd|emerge mknbi |cd /boot |mkelf-linux -params{{=}}"root{{=}}/dev/ram0 init{{=}}/linuxrc ip{{=}}dhcp" kernel... initrd... > etherboot.img}}

Para crear una imagen TFTP OpenBoot/SPARC64

{{RootCmd|emerge sparc-utils
|cd /boot
|elftoaout kernel... -o kernel.aout
|piggyback64 kernel.aout System.map-... initrd-...
|mv kernel.aout openboot.img
}}

El fichero {{Path|openboot.img}} es la imagen de inicio.

Finally, copy this kernel to the TFTP server. The details are architecture-dependent and are beyond the scope of this guide. Please refer to the documentation for the specific platform of interest.

=== Configurar NFS ===

Para configurar un recurso compartido de NFS que contenga el CD de instalación, use el dispositivo loop para montar la imagen ISO y a continuación copie los contenidos del CD en el recurso NFS. Como característica extra, los guiones initrd de genkernel extraerán todos los archivos tar.gz ubicados en el directorio {{Path|/nfs/livecd/add/}}.
Todo lo que debe hacer aquí es copiar el fichero {{Path|modules-X.Y.Z.tar.gz}} al directorio {{Path|/nfs/livecd/add/}}.

Lo que sigue asume que {{Path|/nfs/livecd}} es un recurso NFS compartido:

{{RootCmd|mount /tmp/gentoo-livecd.iso /mnt/cdrom -o loop |cp -p /mnt/cdrom /nfs/livecd |umount /mnt/cdrom}}

Ahora copie el fichero {{Path|modules.tar.gz}} a {{Path|/add}}:

{{RootCmd|mkdir /nfs/livecd/add |cp /tmp/modules-X.Y.Z.tar.gz /nfs/livecd/add}}

=== Configurar DHCP ===

The netboot images will ask the DHCP server on the network for an IP as well as a <code>root-path</code> option. Both can be specified per host using a MAC address to identify machines:

{{FileBox|filename=/etc/dhcpd.conf|title=Ejemplo de configuración cliente dhcpd.conf|1=
# Aquí 192.168.1.2 es el servidor NFS y 192.168.1.10 será la dirección IP de la máquina que arranca por red
host netbootableMachine {
     hardware ethernet 11:22:33:44:55:66;
     fixed-address 192.168.1.10;
     option root-path "192.168.1.2:/nfs/livecd";
}
}}

=== Netbooting instructions ===

De nuevo indicaremos que el arranque por red depende en gran medida de la plataforma. La parte importante es especificar los parámetros <code>ip=dhcp</code> y
<code>init=/linuxrc</code> en la línea de órdenes del núcleo pues esto activará la interfaz de red y le indicará a los guiones initrd que monten el CD de instalación a través de NFS. Se muestran a continuación algunos consejos que dependen de la plataforma:

Para etherboot, inserte el disco de etherboot en la unidad y reinicie. La línea de órdenes del núcleo se especificó cuando se construyó la imagen.

En Sparc64, pulse {{Key|Stop}}-{{Key|A}} en la línea de órdenes de arranque y teclee:

{{RootCmd|boot net ip{{=}}dhcp init{{=}}/linuxrc|prompt=ok }}

Para PXE, configure pxelinux (que es parte de syslinux) y a continuación cree un fichero {{Path|pxelinux.cfg/default}} con las siguientes líneas:

{{FileBox|filename=pxelinux.cfg/default|title=Entrada por defecto|1=
DEFAULT gentoo
TIMEOUT 40
PROMPT 1

LABEL gentoo
  KERNEL kernel-X.Y.Z
  APPEND initrd=initrd-X.Y.Z root=/dev/ram0 init=/linuxrc ip=dhcp
}}

=== Iniciar un initramfs de genkernel ===

==== Introducción ====

Si instaló un initramfs con genkernel, eche
un vistazo a las diversas opciones de inicio que puede (o debería) definir en la configuración de su gestor de arranque. Las más comunes se han incluido en esta guía.

==== Cargar LVM o software RAID ====

If the system uses LVM or software-RAID, the initramfs has to be built using the <code>--lvm</code> and <code>--mdadm</code> options. Do not forget to enable support during boot as well. This can be done using the dolvm and domdadm options.

{{FileBox|filename=/boot/grub/grub.conf|title=Habilitar el soporte para LVM o MDADM|1=
# Ejemplo para for GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 dolvm domdadm
initrd /initramfs-genkernel-x86_64-3.4.3
}}

==== Iniciar en modo de único usuario (single-user) ====

Si, por alguna razón, el inicio falla, debería poder rescatar su sistema iniciando en modo único usuario (single-user). Esto carga únicamente los servicios necesarios y a continuación ofrece un intérprete de órdenes de rescate (root).

{{FileBox|filename=/boot/grub/grub.conf|title=Iniciar en modo de único usuario (single-user)|1=
# Ejemplo para GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 init_opts=S
initrd /initramfs-genkernel-x86_64-3.4.3
}}

== Véase también ==

* [[Kernel/Configuration/es|Configuración manual del núcleo]] - Para cuando sea necesario hacer las cosas de forma manual.
* [[Dracut]] - Otro constructor de initramfs disponible en Gentoo.

== Recursos externos ==

* [https://gitweb.gentoo.org/proj/genkernel.git Repositorio del código fuente de genkernel (GitWeb).]


[[Category:Kernel]]
[[Category:Initramfs]] {{Migrated|originalauthors=Tim Yamin, Jimi Ayodele, Thomas Seiler, Joshua Saddler, Sebastian Pipping, José Fournier}}
