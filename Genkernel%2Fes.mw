<languages />

{{Metadata|abstract=genkernel es una herramienta que se utiliza para automatizar el proceso de construcción del núcleo e initramfs.}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox wikipedia|header=true}}
|{{InfoBox gitweb|genkernel.git}}
|{{InfoBox github|gentoo/genkernel|text=GitHub (mirror)}}
}}

<tt>genkernel</tt> es una herramienta que se utiliza para automatizar el proceso de construcción del [[kernel/es|núcleo]] e [[initramfs]]. Algunas de las características generales incluyen:

* Configurar los ficheros fuente del núcleo
* Construir el núcleo comprimido {{Path|bzImage}} y copiarlo a {{Path|/boot}}
* Crear un initramfs y copiarlo a {{Path|/boot}}
* Crear enlaces simbólicos en {{Path|/boot}}
* Añadir código del usuario al initramfs tal como ficheros de cifrado, imágenes de inicio (splash), módulos añadidos y demás
* Comprimir el initramfs
* Configurar el [[bootloader|Gestor de arranque]]

== Instalación ==

=== Ajustes USE ===

{{USEflag|package=sys-kernel/genkernell|desc=Antes de instalar {{Package|sys-kernel/genkernel}} considere definir algunos ajustes USE:
|crypt++no
|cryptsetup++no
|ibm++no
|selinux++no
}}

=== Emerge ===

Lance la instalación de genkernel:

{{Emerge|genkernel}}

== Invocación de genkernel ==

La forma general de invocar a genkernel se muestra a continuación:

{{RootCmd|genkernel [opciones ...] acción}}

=== Opciones === 

El comportamiento actual de genkernel depende de un gran número de opciones, la mayoría de las cuales se pueden activar o desactivar en el fichero {{Path|/etc/genkernel.conf}} o pasarse a través de la orden <tt>genkernel</tt> en cada invocación. La opciones que se pasan como parámetros a la orden son preferentes a las definidas en {{Path|/etc/genkernel.conf}}. El fichero de configuración está muy bien documentado, sin embargo, algunas de las opciones más usadas se explorarán en este artículo. El objetivo es que el lector se familiarice con las invocaciones comunes de genkernel. Para obtener explicaciones más completas, lea los comentarios en el propio fichero {{Path|/etc/genkernel.conf}} o la salida de la orden <tt>man genkernel</tt>.

{{Note|Algunas de las opciones tienen una variante que desencadena un comportamiento contrario. Se define como <code>--[no-]nombre_de_opción</code>, y este comportamiento se muestra entre corchetes tal y como se ve en el siguiente ejemplo:
{{CodeBox|title=Habilita o deshabilita cierta opción|1=
--[no-]menuconfig : Activa [Desactiva] ...
}}
Allí donde las opciones tengan únicamente un efecto negativo, el <code>no-</code> y su efecto, que no son opcionales en este caso, se muestran sin corchetes.
}}

==== Opciones que actúan en la interactividad del usuario ====

Las opciones de configuración listadas abajo ayudan al usuario a decidir cómo interaccionar con el proceso de configuración. Los usuarios pueden incluso escoger si el archivo de configuración creado en el proceso se debería guardar o no. La siguientes opciones de configuración se consideran principales:

{| class="wikitable"
|-
! Option !! Description
|-
| <code>--[no-]menuconfig</code> || Activates [ or deactivates] the <tt>make menuconfig</tt> command (which invokes an interactive configuration menu) before building the kernel.
|-
| <code>--gconfig</code> || Provides a kernel configuration utility which depends on the GTK+ libraries. The advantage of this option is that most users find it easier and clearer to configure the kernel using this tool, since it relies on the X-windowing system. The disadvantage of this option is that the X-windowing system is required to use it, so it will not work on the command line.
|-
| <code>--xconfig</code> || Provides a kernel configuration utility which depends on the QT libraries. The advantage of this option is that most users find it easier and clearer to configure the kernel using this tool, since it relies on the X-windowing system. The disadvantage of this option is that the X-windowing system is needed to use it, so it will not work on the command line.
|-
| <code>--[no-]save-config</code> || Saves [or does not save] the kernel configuration to a file in the {{Path|/etc/kernels}} directory for later use.
|-
| <code>--kernname=NickName</code> || Allows the modification of the name of the kernel and initrd images in the {{Path|/boot}} directory, so that the images produced are {{Path|kernel-NickName-version}} and {{Path|initramfs-NickName-version}}.
|}

==== Opciones que afectan al sistema resultante ====

Las opciones de configuración mostradas aquí, definen qué características podrán ser o no se activadas en el núcleo e initrd resultantes.

{| class="wikitable"
|-
! Option !! Description
|-
| <code>--[no-]splash</code> ||  Activates [or deactivates] support for [[Fbsplash]] framebuffer splash in the genkernel-built initrd image. To override the default theme used by fbsplash, use <code>--splash=PreferredTheme</code> (where <code>PreferredTheme</code> is the title of one of the directories inside the {{Path|/etc/splash}} directory.
|-
| <code>--splash-res=PreferredResolution</code> || This option allows to select which splash screen resolutions will be supported in the initrd during the start-up of the system. This is useful for two reasons. First, to be able to select only the splash screen resolution(s) relevant to the system. Second, to avoid the unnecessary increase in the disk space required by initrd (since the initrd does not have to support resolutions that are irrelevant for the system's configuration.) However, the option is best omitted if the kernel is being compiled for an Installation CD; this allows splash support for all possible resolutions.
|-
| <code>--do-keymap-auto</code> || Force keymap selection during the boot sequence.
|-
| <code>--lvm</code> || Includes support for storage using via [http://sources.redhat.com/lvm2/ Logical Volume Management] (LVM2) from static binaries, if available to the system. Relevant (static) LVM2 binaries are compiled if they are unavailable. Be sure to install the {{Package|sys-fs/lvm2}} package on the system (<tt>emerge sys-fs/lvm2</tt> before enabling this option, then review the [[LVM | LVM article]] on the Gentoo wiki.
|-
| <code>--dmraid</code> || Includes support for DMRAID; the utility which creates RAID mappings using the kernel device-mapper subsystem. [http://people.redhat.com/~heinzm/sw/dmraid/readme DMRAID] discovers, activates, deactivates and displays properties of software RAID sets (ATARAID, for example) and contained DOS partitions.
|-
| <code>--luks</code> || Includes support for Linux Unified Key Setup or [http://clemens.endorphin.org/cryptography LUKS]. This will allow to use a device encrypted by LUKS which contains the root filesystem. On the bootloader, set that encrypted device as the value of <code>crypt_root</code> (and <code>real_root</code> shall be the unencrypted device LUKS creates).
|-
| <code>--disklabel</code> || Adds support for disk label and UUID support to the initrd.
|-
| <code>--iscsi</code> || Adds support for iSCSI to the initrd.
|-
| <code>--multipath</code> || Adds support for [[Multipath]] to the initrd.
|-
| <code>--linuxrc=/path/to/the/linuxrc_file</code> || Specifies a user-created linuxrc — a script that is initialized during the start-up stage of the kernel, prior to the actual boot process. A default linuxrc script can be found in the {{Path|/usr/share/genkernel/}} directory. This script allows booting into a small, modularized kernel; it tries to load the minimum amount of drivers that are needed (as modules) by the system.
|-
| <code>--cachedir=/path/to/alt/dir</code> || Overrides the default cache location used while compiling the kernel.
|-
| <code>--tempdir=/path/to/new/tempdir</code> || Specifies the location of the temporary directory used by genkernel while compiling the kernel.
|-
| <code>--unionfs</code> || Includes support for the [http://www.fsl.cs.sunysb.edu/project-unionfs.html Unification File System] in the initrd image.
|-
| <code>--mountboot</code> || Detects whether or not the {{Path|/boot}} directory needs to be mounted on a separate partition. It will check {{Path|/etc/fstab}} script for instructions on how to mount the boot partition on a file system (if needed).
|}

==== Opciones que actúan en la elección de las herramientas utilizadas para la construcción ====

Las siguientes opciones están soportadas por genkernel y se pasan a las aplicaciones relevantes mientras se ensambla el núcleo. Estas opciones afectan a las herramientas de compilación utilizadas en el proceso de compilación del núcleo aunque a un nivel mucho más bajo.

{| class="wikitable"
|-
! Options !! Description
|-
| <code>--kernel-cc=someCompiler</code> || Specifies the compiler employed during the kernel compilation process.
|-
| <code>--kernel-ld=someLinker</code> || Specifies the linker employed during the kernel compilation process.
|-
| <code>--kernel-as=someAssembler</code> || Specifies the assembler employed during the kernel compilation process.
|-
| <code>--kernel-make=someMake</code> || Specifies an alternative to the GNU make utility employed during the kernel compilation process.
|-
| <code>--utils-cc=someCompiler</code> || Specifies the compiler employed during the compilation of support utilities.
|-
| <code>--utils-ld=someLinker</code> || Specifies the linker employed during the compilation of support utilities.
|-
| <code>--utils-as=someAssembler</code> || Specifies the assembler employed during the compilation of support utilities.
|-
| <code>--utils-make=someMake</code> || Specifies an alternative to the GNU make utility employed during the compilation of support utilities.
|-
| <code>--makeopts=-jX</code> || Specifies the number of concurrent threads that the make utility can implement while the kernel (and utilities) are being compiled. The variable <code>X</code> is a number to be freely chosen, although the most common values are obtained by adding one (1) to the number of cores used by the system, or just use the number of cores on the system. So, for a system with one core, most common option values are <code>-j2</code> or <code>-j1</code>; a system with two cores most likely uses the <code>-j3</code> or <code>-j2</code> options, and so on. (A system with one processor that supports Hyper-Threading™ (HT) Technology can be assumed to have 2 cores, provided Symmetric Multi-Processing (SMP) support is enabled in the kernel.)
|}

==== Opciones que actúan en el proceso de compilación ====

Las siguientes opciones normalmente actúan durante el proceso de compilación:

{| class="wikitable"
|-
! Option !! Description
|-
| <code>--kerneldir=/path/to/sources/</code> || Specifies an alternative kernel source location, rather than the default {{Path|/usr/src/linux/}} location.
|-
| <code>--kernel-config=/path/to/config-file</code> || Specifies what alternative kernel configuration will be used, rather than the default {{Path|/path/to/sources/.config}} file.
|-
| <code>--module-prefix=/path/to/prefix-directory/</code> || Specifies a prefix to the directory where kernel modules will be installed (default path is the {{Path|/lib/modules}} directory.)
|-
| <code>--[no-]clean</code> || Activates [or deactivates] the <tt>make clean</tt> command before compiling the kernel. The make clean command removes all object files and dependencies from the kernel's source tree.
|-
| <code>--[no-]mrproper</code> || Activates [or deactivates] the <tt>make mrproper</tt> command before kernel compilation. Like the make clean command listed above, make mrproper removes all object files and dependencies from the kernel's source tree. However, any previous configuration files (in {{Path|/path/to/sources/.config}} or {{Path|/path/to/sources/.config.old}}) will also be purged from the kernel's source tree.
|-
| <code>--oldconfig</code> || Issues the <tt>make oldconfig</tt> command, which attempts to collect configuration information for the system's architecture from a generic script in {{Path|/usr/share/genkernel}}. This is a non-interactive process; no user input is entertained. Also, if <code>--oldconfig</code> is used in conjunction with <code>--clean</code>, the latter option is negated, resulting in the activation of the <code>--no-clean</code> option.
|-
| <code>--callback="echo hello"</code> || Calls the specified arguments (<tt>echo hello</tt>, in this case) after the kernel and the relevant modules have been built, but before building the initrd image. This may be useful when installing external modules in the initrd image by emerging the relevant item(s) with the callback feature, and then redefining a genkernel module group.
|-
| <code>--[no-]install</code> || Activates [or deactivates] the make install command, which installs the new kernel image, configuration file, initrd image and system map onto the boot partition. Any compiled modules will be installed as well. By default genkernel will attempt mount {{Path|/boot}} if it is on a separate partition before running the install command.
|-
| <code>--no-ramdisk-modules</code> || Refrains from copying any modules to the genkernel-created initrd image. This option is an exception to the rule about the <code>no-</code> prefix; omission of this prefix creates an invalid genkernel option.
|-
| <code>--all-ramdisk-modules</code> || Copies all available modules to the genkernel-created initrd image.
|-
| <code>--genzimage</code> || Creates the initrd image, prior to the kernel image (this hack currently applies only to PPC Pegasos systems).
|}

==== Opciones de depuración ====

El uso de opciones de depuración durante el proceso de construcción del núcleo controla la cantidad de información que se muestra, así como la presentación de esta información.

{| class="wikitable"
|-
! Option !! Description
|-
| <code>--loglevel=verblevel</code> || Controls the level of verbosity for information provided by genkernel. The variable <code>&lt;verblevel&gt;</code> is an integer between 0 and 5. The level '0' represents minimal output, while '5' provides as much information as possible about genkernel's activities during the kernel compilation process.
|-
| <code>--logfile=/path/to/outputfile</code> || Ignores the value set by the <code>--loglevel</code> argument, and sends all debugging data produced by genkernel to the specified output file, which is located at {{Path|/var/log/genkernel.log }} by default.
|-
| <code>--[no-]color</code> || Activates (or deactivates) colored output of debugging information (reported by genkernel) using escape sequences.
|}

=== Acciones ===

Una acción enviada a genkernel en la línea de comandos mediante <tt>genkernel [opciones …] ''acción''</tt>, le indica a genkernel qué acción debe realizar. Se ofrecen las siguientes <tt>''acciones''</tt>:

;<tt>all</tt>
: Construye todas los pasos: el initrd, el núcleo, la imagen y los módulos.

;<tt>bzImage</tt>
: Únicamente construye la imagen del núcleo.

;<tt>kernel</tt>
: Únicamente construye la imagen del núcleo y los módulos.

;<tt>initramfs</tt>
: Únicamente construye la imagen initramfs/ramdisk.

;<tt>ramdisk</tt>
: Únicamente construye la imagen initramfs/ramdisk.

== Utilización ==

=== Primera invocación ===

Aunque hay varias formas de lanzar genkernel, el enfoque menos intrusivo y recomendado para la mayoría de los usuarios es mediante <tt>genkernel all</tt>. En este caso se utiliza una configuración genérica que funciona bien en la mayoría de los sistemas. Tal como se mencionaba arriba, este enfoque presenta ciertas desventajas pues la mayor parte de los módulos creados no son útiles para el usuario promedio y puede incrementar el tiempo de compilación. Abajo se muestra un ejemplo de un enfoque más eficiente el cual se logra al pasar ciertos parámetros a genkernel cuando se lanza con el usuario root:

{{RootCmd|genkernel --splash --no-install --no-clean --menuconfig all}}

La operación descrita arriba provoca que genkernel cree un núcleo con pantalla una pantalla de bienvenida (<code>--splash</code>) que se deberá instalar de forma manual (<code>--no-install</code>). Mientras se prepara el árbol de fuentes del núcleo, genkernel evitará eliminar cualquiera de los archivos objeto preexistentes en el árbol de los fuentes (<code>--no-clean</code>). Se ofrecerá al usuario una herramienta de configuración basada en menús para seleccionar qué módulos se construirán en el sistema (<code>--menuconfig</code>).

Si se reemplaza la opción <code>--no-install</code> por <code>--install</code> se le indicará a genkernel que instale el nuevo núcleo en el directorio {{Path|/boot}} de forma automática y se crearán los enlaces simbólicos se se especifica <code>--symlink</code>. El uso de la opción <code>--mountboot</code> le indica a genkernel que monte la partición {{Path|/boot}} de forma automática si es necesario.

{{Note/es|No olvide que '''genkernel''' lanza el fichero de órdenes {{Path|/etc/genkernel.conf}} al comienzo de la construcción, y que cualquier opción definida en él se aplicará excepto cuando se define una opción de línea de órdenes que toma preferencia respecto a la misma opción definida en el fichero anterior.}}

=== Cambiar el núcleo ===

Lo primero que se debe hacer es permitir que se lance <tt>make menuconfig</tt> en el fichero {{Path|/etc/genkernel.conf}}:

{{FileBox|filename=/etc/genkernel.conf|title=Forzar el uso del menú de configuración en /etc/genkernel.conf|lang=bash|1=
# ¿Se lanza 'make menuconfig' antes de compilar este núcleo?
MENUCONFIG="yes"
}}

==== Gestión de ficheros ====

Mientras utiliza genkernel, debe tener en cuenta varios aspectos relacionados con su configuración y los ficheros de imagen del núcleo así como la forma en la que el sistema gestiona los fichero fuente del núcleo.

===== Ficheros fuente =====

Después de lanzar la orden <tt>emerge -u gentoo-sources</tt>, siempre que los nuevos fuentes estén disponibles, se creará un nuevo directorio de ficheros fuente del núcleo en {{Path|/usr/src/}} para almacenarlos. Normalmente los fuentes activos del núcleo se definen con el enlace simbólico {{Path|/usr/src/linux}}.

El directorio {{Path|/usr/src}} debería un aspecto similar a este:

{{Cmd|ls -l /usr/src|output=<pre>
total 16
lrwxrwxrwx  1 root root   19 21 mar  2013  linux -> linux-3.7.10-gentoo
drwxr-xr-x 24 root root 4096 25 ago  10:39 linux-3.10.7-gentoo
drwxr-xr-x 20 root root 4096 21 abr  19:42 linux-3.7.10-gentoo
drwxr-xr-x 21 root root 4096 14 mar  2013  linux-3.7.9-gentoo
 </pre>}}

El enlace simbólico {{Path|/usr/src/linux}} se puede cambiar de diferentes formas: 

* Si el ajuste USE <code>symlink</code> está definido, el enlace simbólico {{Path|/usr/src/linux}} se actualiza automáticamente para que apunte al los nuevos ficheros fuente instalados. 

* Si el ajuste USE <code>symlink</code> ''no'' está definido, el usuario puede cambiar el destino del enlaces simbólico utilizando <tt>eselect kernel list</tt> seguido de la orden <tt>eselect kernel set</tt>.

Genkernel utilizará ''siempre'' (exclusivamente) los fuentes a lo que apunta el enlace simbólico {{Path|/usr/src/linux}}.

===== Fichero de configuración del núcleo =====

Si ya se ha realizado una construcción del núcleo con los fuentes activos, debería aparecer un fichero dentro del directorio {{Path|/etc/kernels}} que contiene al configuración del núcleo que se ha aplicado mientras se creó la última bzimage del núcleo. Este fichero se llama, por ejemplo, {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}} donde <code>x86_64</code> sería el nombre de la arquitectura del sistema, <code>3.7.9</code> sería la versión de los ficheros fuente utilizados, y <code>r1</code> la revisión de los fuentes.

Es este fichero {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}} el que se utiliza como configuración cuando se realiza lanza <tt>genkernel --menuconfig all</tt>.

Si es la primera vez que se lanza genkernel con los nuevos fuentes del núcleo o si no se ha guardado el resultado previo este fichero se sustituye por un fichero de configuración por defecto que se encuentra en {{Path|usr/share/genkernel/arch/x86_64/kernel-config}} donde hay que sustituir x86_64 por la arquitectura en la que se está trabajando.

{{Note/es|La ruta a este fichero de configuración por defecto se puede alterar definiendo la variable DEFAULT_KERNEL_CONFIG en el fichero {{Path|/etc/genkernel.conf}}.}}

===== Guardar la configuración compilada =====

Si se activa la opción <code>save-config</code> de genkernel, bien desde la línea de órdenes, bien dentro de {{Path|/etc/genkernel.conf}}, la configuración del núcleo que se ha compilado se guardará (con el nombre indicado arriba) en el directorio {{Path|/etc/kernels}}. Al mismo tiempo, la configuración se guarda en el fichero {{Path|.config}} dentro del directorio {{Path|/usr/src/linux}}, sin embargo, este fichero no se reutilizará en la siguiente ejecución de <tt>genkernel all</tt>.

{{Warning/es|Se debe tener cuidado: Cada vez que se lanza genkernel con la opción <code>save-config</code> activada, el fichero de configuración en {{Path|/etc/kernels}} se sobrescribe. Así, se recomienda guardar este fichero con un nuevo nombre ''antes'' de lanzar genkernel para conservarlo.}}

===== Instalar el núcleo y el initramfs en el directorio {{Path|/boot}} =====

Si se especifica la opción <code>--install</code> cuando se lanza genkernel, se le pedirá a <kbd>genkernel</kbd> que instale la imagen del núcleo y el initramfs en el directorio {{Path|/boot}}. Para lanzar <code>--install</code> de una forma correcta, defina lo siguiente en el fichero {{Path|/etc/genkernel.conf}}:

{{FileBox|filename=/etc/genkernel.conf|title=Configurar el guardado automico del núcleo y el initramfs|lang=bash|1=
# ¿Montar BOOTDIR de forma automática si no está montado?
MOUNTBOOT="yes"

# Guardar la nueva configuración en /etc/kernels
# después de una compilación exitosa
SAVE_CONFIG="yes"

# ¿Crear enlaces simbólicos en  BOOTDIR de forma automática?
SYMLINK="yes"

# ¿Añadir el nuevo núcleo a grub?
#BOOTLOADER="grub"
}}

* El primer parámetro no requiere explicación.

* El segundo parámetro le indica a  genkernel que guarde la configuración del núcleo que se ha compilado en {{Path|/etc/kernels}}.

* Las dos últimas opciones le indican a genkernel que actualice automáticamente la configuración de grub. En la práctica sucede lo siguiente:
** Si existe una imagen previa del núcleo con el mismo nombre, se modifica su nombre añadiendo {{Path|.old}}. Un enlace simbólico {{Path|kernel.old}} se crea automáticamente apuntando a ella.
** El nuevo núcleo toma el lugar de cualquier núcleo con el mismo nombre dentro de {{Path|/boot}}. Si es la primera vez que se compila un núcleo, se crea automáticamente un enlaces simbólico que apunta al nuevo núcleo.

Después de lanzar <tt>genkernel --menuconfig all</tt>, el directorio {{Path|/boot}} tendrá un aspecto similar al siguiente:

{{Cmd|ls -al /boot|output=<pre>
total 41336
drwxr-xr-x  3 root root    4096 20 abril 17:23 .
drwxr-xr-x 24 root root    4096 15 sept. 12:31 ..
lrwxrwxrwx  1 root root       1 24 febr. 2013  boot -> .
drwxr-xr-x  2 root root    4096 24 febr. 2013  grub
lrwxrwxrwx  1 root root      40 20 abril 17:23 initramfs -> initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1314412 20 abril 17:23 initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1313548 21 marzo 2013  initramfs-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 1295344 25 febr. 2013  initramfs-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3310324 25 febr. 2013  initramfs-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      44 20 abril 17:23 initramfs.old -> initramfs-genkernel-x86_64-3.7.10-gentoo.old
lrwxrwxrwx  1 root root      37 20 abril 17:23 kernel -> kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866656 20 abril 17:23 kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866560 21 marzo 2013  kernel-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 4552288 25 febr. 2013  kernel-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3400736 25 febr. 2013  kernel-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      41 20 abril 17:23 kernel.old -> kernel-genkernel-x86_64-3.7.10-gentoo.old
</pre>}}

==== Configurar el gestor de arranque ====

Los enlaces simbólicos que se muestran arriba en la configuración del gestor de arranque se pueden utilizar tal cual, incluso cuando el núcleo no se puede arrancar, el usuario siempre podrá arrancar el antiguo. 

Para permitir que el núcleo y el initrd ofrecido por genkernel funcione correctamente, deberá ofrecer a su gestor de arranque una información mínima en el fichero de configuración:
* Añada <code>real_root=/dev/sdax</code>, a los parámetros del núcleo que se pasan a la imagen, donde {{Path|/dev/sdax}} apunta a la partición raíz.
* Si está utilizando la pantalla de presentación de arranque (splash), añada un parámetro correcto para el modo de pantalla, por ejemplo <code>vga=0x317</code>, así como <code>splash=verbose</code> o <code>splash=silent</code> dependiendo del nivel de detalle que desee a lo largo del proceso de arranque.
* Añada la información sobre initrd que requiera la configuración de su gestor de arranque. Consulte el [https://wiki.gentoo.org/wiki/Handbook:X86/Installation/Bootloader/es capítulo de configuración del cargador de arranque] del manual de Gentoo para obtener detallas sobre la configuración del gestor de arranque con initrd.

A continuación se muestra un ejemplo del aspecto que debería tener el fichero {{Path|grub.conf}}.

{{FileBox|filename=/boot/grub/grub.conf|title=Un fichero ejemplo grub.conf|lang=bash|1=
# Esto es un fichero ejemplo de grub.conf para usar con Genkernel según el manual de Gentoo
# http://www.gentoo.org/doc/es/handbook/handbook-x86.xml?part=1&chap=10#doc_chap2
# Si no está usando Genkernel y necesita ayuda para crear este fichero
# debería consultar el manual. De forma alternativa, consulte el fichero grub.conf.sample
# que se incluye en la documentación de Grub.

default 0
timeout 5
splashimage=(hd1,0)/boot/grub/splash.xpm.gz

title Gentoo Linux
root (hd0,6)
kernel /boot/kernel initrd=/dev/ram0 real_root=/dev/sda7 rootfstype=ext4
initrd /boot/initramfs

title Gentoo Linux old kernel
root (hd0,6)
kernel /boot/kernel.old initrd=/dev/ram0 real_root=/dev/sda7 rootfstype=ext4
initrd /boot/initramfs.old
}}

==== Conservar los ficheros de trabajo ====

La aplicación genkernel guarda automáticamente los cambios realizados en los ficheros. Si se necesita conservar cambios realizados anteriormente se deberán realizar las siguientes acciones.

* El primer fichero a conservar es la configuración del núcleo en {{Path|/etc/kernels/}}. Si los ficheros fuente no han cambiado antes de la reconstrucción del núcleo, se usará el nombre utilizado anteriormente para este fichero. Por lo que si se copia la configuración anterior a un nuevo nombre, se podrá conservar la información para utilizar este fichero como punto de partida para una nueva configuración.

* El segundo aspecto importante es conservar las imágenes del núcleo e initramfs que arrancan correctamente. La forma de realizar esto depende del contexto:
:# Si el último núcleo que se construyó arranca correctamente, al lanzar '''genkernel''' se cambiará el nombre a la imagen este núcleo (y de igual forma al initramfs) a {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} y se creará un nuevo {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}. Esto implica que, en caso de que el nuevo núcleo no arranque, los usuarios siempre podrán arrancar con el antiguo.
:# Si el último núcleo que se construyó no arranca y los ficheros fuente no han cambiado desde que el usuario construyó un nuevo núcleo, antes de lanzar '''genkernel''', se deberá eliminar la nueva imagen del núcleo y quitar el sufijo <tt>.old</tt> del último núcleo que arrancara. Si no se hace esto y el nuevo núcleo construido no arranca en la segunda ocasión, el núcleo arrancable {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} será sustituido por el núcleo {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}} que no arranca, por lo que usuario no podrá arrancar su sistema. Para initramfs se emplea el mismo razonamiento.

=== Utilizar el núcleo anterior mientras se cambian los ficheros fuente ===

Se puede utilizar la configuración anterior mediante la opción <tt>make menuconfig</tt> en {{Path|/etc/genkernel.conf}} tal y como se indica a continuación:

{{FileBox|filename=/etc/genkernel.conf|title=Configurar make menuconfig|lang=bash|1=
# ¿Lanzar 'make menuconfig' antes de compilar este núcleo?
MENUCONFIG="yes"
}}

{{Note/es|No es necesario lanzar <tt>make oldconfig</tt> con genkernel incluso si se han cambiado los ficheros fuente de {{Path|kernel-genkernel-ARCH-version-gentoo-rx}} a {{Path|kernel-genkernel-ARCH-version-gentoo-r(x+1)}} o de {{Path|kernel-genkernel-ARCH-version-gentoo}} a {{Path|kernel-genkernel-ARCH-(version+1)-gentoo}} ya que <tt>make menuconfig</tt> intentará cargar la configuración anterior en el menú tanto como le sea posible. Se recomienda sin embargo revisar cada nueva sección y sus opciones.}}

== Arranque desde la red ==

=== Desde un CD de instalación ===

La utilidad genkernel puede construir el núcleo y las imágenes initrd que ofrecen soporte para arranque por red netbooting. Con un poco de suerte, los usuarios deberían poder arrancar desde la red con cualquier ordenador reciente dentro del entorno que ofrece el CD de instalación.

La magia está en el guión linuxrc de genkernel: Este intentará montar el CD de instalación en la red (netmount) usando NFS. A partir de aquí los guiones de inicio del CD de instalación pueden tomar el control como si el CD estuviera presente localmente.

=== Construir el núcleo e initramfs con soporte para arranque desde la red ===

Para habilitar el soporte de arranque por red, incluya las siguientes opciones mientras configura su núcleo:

{{Warning/es|El soporte para arranque por red con genkernel es experimental y puede presentar problemas.}}

En primer lugar, la imagen del núcleo debe incluir los controladores para las tarjetas de interfaz de red (NIC) del sistema. Normalmente, los controladores para estos
dispositivos se compilarán como módulos. Sin embargo, es esencial (para el arranque por red) tener dichos controladores compilados directamente en la imagen del núcleo y no como módulos.

{{KernelBox|title=Configurar un núcleo de la serie 3.x.x para ofrecer soporte a distintos controldores de NIC|<pre>
Device Drivers --->
   Networking Support --->
      Ethernet (10 or 100Mbit)  --->
         [*] Ethernet (10 or 100Mbit)
         <*>   El controlador o controladores para cada tarjeta de red</pre>
}}

Asegúrese de seleccionar <tt>&lt;*&gt;</tt> y no <tt>&lt;M&gt;</tt>.

En segundo lugar, se sugiere que se habilite la opción ''IP: kernel level autoconfiguration'' así como ''IP: DHCP support options''. Esto evita una capa innecesaria de complejidad ya que la dirección IP y la ruta NFS al CD de instalación se pueden configurar en un servidor DHCP. Por supuesto, esto significa que la línea de órdenes del núcleo
permanecerá constante para todas las máquinas, lo cual es muy importante para realizar etherbooting (arranque vía ethernet).

{{KernelBox|title=Configurar un núcleo de la serie 3.x.x para ofrecer soporte a DHCP|<pre>
Device Drivers --->
  Networking Support --->
    Networking options [*]
      TCP/IP networking--->
       [*] IP: kernel level autoconfiguration
       [*] IP: DHCP support
</pre>}}

Estas opciones le indican al núcleo que envíe una petición DHCP en el momento del arranque.

Additionally, enable [[SquashFS]] because most modern Gentoo Installation CDs require it. Support for SquashFS is not included with the generic kernel source tree. To enable SquashFS, apply the necessary patches to the generic kernel source or install gentoo-sources.

{{KernelBox|title=Configurar el núcleo para dar soporte a SquashFS|<pre>
File systems--->
  Miscellaneous filesystems --->
   [*] SquashFS 2.X - Squashed file system support
</pre>}}

Una vez completado el proceso de compilación, cree un tarball (tar.gz) que contenga los módulos del núcleo. Este paso es solo es necesario si su versión del núcleo no concuerda con la versión de la imagen del núcleo del CD de Instalación.

Para crear un archivo que contenga todos los módulos:

{{RootCmd|cd / |tar -cf /tmp/modules-X.Y.Z.tar.gz /lib/modules/X.Y.Z/}}

Dependiendo de su mecanismo de arranque por red necesitará seguir alguno de los siguientes pasos:

Para crear una imagen etherboot:

{{RootCmd|emerge mknbi |cd /boot |mkelf-linux -params{{=}}"root{{=}}/dev/ram0 init{{=}}/linuxrc ip{{=}}dhcp" kernel... initrd... > etherboot.img}}

Para crear una imagen TFTP OpenBoot/SPARC64

{{RootCmd|emerge sparc-utils
|cd /boot
|elftoaout kernel... -o kernel.aout
|piggyback64 kernel.aout System.map-... initrd-...
|mv kernel.aout openboot.img
}}

El fichero {{Path|openboot.img}} es la imagen de inicio.

Finally, copy this kernel to the TFTP server. The details are architecture-dependent and are beyond the scope of this guide. Please refer to the documentation for the specific platform of interest.

=== Configurar NFS ===

Para configurar un recurso compartido de NFS que contenga el CD de instalación, use el dispositivo loop para montar la imagen ISO y a continuación copie los contenidos del CD en el recurso NFS. Como característica extra, los guiones initrd de genkernel extraerán todos los archivos tar.gz ubicados en el directorio {{Path|/nfs/livecd/add/}}.
Todo lo que debe hacer aquí es copiar el fichero {{Path|modules-X.Y.Z.tar.gz}} al directorio {{Path|/nfs/livecd/add/}}.

Lo que sigue asume que {{Path|/nfs/livecd}} es un recurso NFS compartido:

{{RootCmd|mount /tmp/gentoo-livecd.iso /mnt/cdrom -o loop |cp -p /mnt/cdrom /nfs/livecd |umount /mnt/cdrom}}

Ahora copie el fichero {{Path|modules.tar.gz}} a {{Path|/add}}:

{{RootCmd|mkdir /nfs/livecd/add |cp /tmp/modules-X.Y.Z.tar.gz /nfs/livecd/add}}

=== Configurar DHCP ===

The netboot images will ask the DHCP server on the network for an IP as well as a <code>root-path</code> option. Both can be specified per host using a MAC address to identify machines:

{{FileBox|filename=/etc/dhcpd.conf|title=Ejemplo de configuración cliente dhcpd.conf|1=
# Aquí 192.168.1.2 es el servidor NFS y 192.168.1.10 será la dirección IP de la máquina que arranca por red
host netbootableMachine {
     hardware ethernet 11:22:33:44:55:66;
     fixed-address 192.168.1.10;
     option root-path "192.168.1.2:/nfs/livecd";
}
}}

=== Netbooting instructions ===

De nuevo indicaremos que el arranque por red depende en gran medida de la plataforma. La parte importante es especificar los parámetros <code>ip=dhcp</code> y
<code>init=/linuxrc</code> en la línea de órdenes del núcleo pues esto activará la interfaz de red y le indicará a los guiones initrd que monten el CD de instalación a través de NFS. Se muestran a continuación algunos consejos que dependen de la plataforma:

Para etherboot, inserte el disco de etherboot en la unidad y reinicie. La línea de órdenes del núcleo se especificó cuando se construyó la imagen.

En Sparc64, pulse {{Key|Stop}}-{{Key|A}} en la línea de órdenes de arranque y teclee:

{{RootCmd|boot net ip{{=}}dhcp init{{=}}/linuxrc|prompt=ok }}

Para PXE, configure pxelinux (que es parte de syslinux) y a continuación cree un fichero {{Path|pxelinux.cfg/default}} con las siguientes líneas:

{{FileBox|filename=pxelinux.cfg/default|title=Entrada por defecto|1=
DEFAULT gentoo
TIMEOUT 40
PROMPT 1

LABEL gentoo
  KERNEL kernel-X.Y.Z
  APPEND initrd=initrd-X.Y.Z root=/dev/ram0 init=/linuxrc ip=dhcp
}}

=== Iniciar un initramfs de genkernel ===

==== Introducción ====

Si instaló un initramfs con genkernel, eche
un vistazo a las diversas opciones de inicio que puede (o debería) definir en la configuración de su gestor de arranque. Las más comunes se han incluido en esta guía.

==== Cargar LVM o software RAID ====

If the system uses LVM or software-RAID, the initramfs has to be built using the <code>--lvm</code> and <code>--mdadm</code> options. Do not forget to enable support during boot as well. This can be done using the dolvm and domdadm options.

{{FileBox|filename=/boot/grub/grub.conf|title=Habilitar el soporte para LVM o MDADM|1=
# Ejemplo para for GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 dolvm domdadm
initrd /initramfs-genkernel-x86_64-3.4.3
}}

==== Iniciar en modo de único usuario (single-user) ====

Si, por alguna razón, el inicio falla, debería poder rescatar su sistema iniciando en modo único usuario (single-user). Esto carga únicamente los servicios necesarios y a continuación ofrece un intérprete de órdenes de rescate (root).

{{FileBox|filename=/boot/grub/grub.conf|title=Iniciar en modo de único usuario (single-user)|1=
# Ejemplo para GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 init_opts=S
initrd /initramfs-genkernel-x86_64-3.4.3
}}

== Véase también ==

* [[Kernel/Configuration/es|Configuración manual del núcleo]] - Para cuando sea necesario hacer las cosas de forma manual.
* [[Dracut]] - Otro constructor de initramfs disponible en Gentoo.

== Recursos externos ==

* [https://gitweb.gentoo.org/proj/genkernel.git Repositorio del código fuente de genkernel (GitWeb).]


[[Category:Kernel]]
[[Category:Initramfs]] {{Migrated|originalauthors=Tim Yamin, Jimi Ayodele, Thomas Seiler, Joshua Saddler, Sebastian Pipping, José Fournier}}
