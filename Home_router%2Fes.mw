<languages />

{{Metadata|abstract=Éste documento detalla cómo convertir una vieja máquina Gentoo en un router para conectar una red casera a Internet.}}

Éste documento detalla cómo convertir una vieja máquina Gentoo en un router para conectar una red casera a Internet

== Introducción ==

Construir un router personal con partes viejas de repuesto tiene muchas ventajas sobre comprar un router pre-fabricado de grandes compañias (Linksys, D-Link, Netgear, etc.). La mayor ventaja por mucho es el control sobre la conexión. Las otras ventajas pueden dejarse a la imaginación del usuario; casi cualquier cosa puede ser hecha en este escenario, es simplememente una cuestión de necesidades. 

Esta guía proporciona instrucciones en cómo configurar Traducción de Direcciones de Red (NAT) en un router personalizado (kernel e iptables), añadir y configurar servicios comunes (Sistema de nombres de dominios (DNS) mediante {{Package|net-dns/dnsmasq}}, DHCP mediante {{Package|net-misc/dhcpcd}}, ADSL mediante {{Package|net-dialup/ppp}}), y concluir con algunas cosas elaboradas y divertidas que los routers personalizados pueden hacer (reenvío de puertos, modelado de tráfico, proxies/cache, etc...). 

Antes de iniciar, por favor revisa la lista de requerimientos básicos:
# Una computadora que tenga al menos 2 tarjetas de red (NICs) instaladas.
# Los parámetros de configuración para la conexión de Internet (podría incluir cosas como IP/DNS/Gateway/nombre de usuario/contraseña).
# (Opcional) una tarjeta Wi-Fi que soporte el modo maestro (master mode). El modo maestro es recomendado para evitar interfaces de red (NICs) con característica ''bypass'' ya que algunas interfaces de red (NICs) requieren controladores propietarios. Sin acceso a los controladores propietarios la tarjeta se mantendría en modo ''bypass'' permanentemente y no sería usable.
# Un poco de tiempo libre y amor a Gentoo para seguir esta guía e implementar un buen router casero funcional.

Las convenciones usadas en esta guía son: 

* eth0 - Tarjeta de red conectada a la red local (LAN) o puente de red consistiendo de varias tarjetas de red
* eth1 - Tarjeta de red conectada a la red de área amplia (WAN)
*LAN utiliza el segmento de red privado 192.168.0.xxx
*La dirección IP del router está en código duro a 192.168.0.1
*La máquina router está corriendo Linux 2.4 o 2.6; otras versiones del kernel no están soportadas por ésta guía.

{{Important|Debido a precauciones de seguridad, es altamente recomendable desactivar cualquier servicio innecesario en el router hasta que el firewall esté funcionando. Para ver los servicios corriendo actualmente ejecuta <tt>rc-status</tt>.}}

==Configuración del kernel (lo primero a hacer)==

El kernel necesita tener los controladores instalados para ambas tarjetas de red en el sistema. Para ver si las tarjetas están ya configuradas usa el comando <tt>ifconfig</tt>. La salida podría diferir ligeramente del siguiente ejemplo. Lo que importa es que las interfaces se muestren. 

{{RootCmd|ifconfig -a|output=<pre>
eth0      Link encap:Ethernet  HWaddr 00:60:F5:07:07:B8
          BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
          Interrupt:11 Base address:0x9800
  
eth1      Link encap:Ethernet  HWaddr 00:60:F5:07:07:B9
          BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
          Interrupt:10 Base address:0x9400
</pre>
}}

Si solo una (o ninguna) de las dos tarjetas se muestra intenta correr <tt>lspci | grep Ethernet</tt>. {{Note|La utilidad <tt>lspci</tt> es parte del paquete {{Package|sys-apps/pciutils}} y puede ser instalado corriendo <tt>emerge sys-apps/pciutils</tt>.}}

Una vez que se han obtenido el fabricante y modelo de las tarjetas de red, configura el kernel con soporte para los controladores correctos. Para más información en la configuración del kernel ve [[Kernel/Gentoo_Kernel_Configuration_Guide|Guía de configuración del kernel]].

La siguiente cosa que se necesita es soporte para Iptables y NAT (y modelado de paquetes si se desea). La siguiente lista esta separada en siempre requerido (*), requerido solo para ADSL mediante PPPoE (a), sugerido para todos (x), y solo para características de modelado (s). No importa si las características están compiladas en el kernel o como módulos ya que cuando una característica es necesitada, el modulo(s) es cargado. Para más información sobre el cargado de módulos vea el 

{{KernelBox|title=Network Options|<pre>
Networking options  --->
   [*] TCP/IP networking
      [*] IP: advanced router
   [*] Network packet filtering (replaces ipchains)
</pre>}}

Cuando se usa un kernel 2.4.x, lo siguiente tiene que estar habilitado para DHCP

{{KernelBox|title=Network Options|<pre>
   [*] Socket Filtering
  
   IP: Netfilter Configuration  --->
      [*] Connection tracking (required for masq/NAT)
         [x] FTP protocol support
         [x] IRC protocol support
      [*] IP tables support (required for filtering/masq/NAT)
         [*] IP range match support
         [x] MAC address match support
         [*] Multiple port match support
         [*] Packet filtering
            [*] REJECT target support
            [x] REDIRECT target support
         [*] Full NAT
            [*] MASQUERADE target support
         [s] Packet mangling
            [s] MARK target support
         [x] LOG target support
  
   QoS and/or fair queueing  --->
      [s] QoS and/or fair queueing
         [s] HTB packet scheduler
         [s] Ingress Qdisc
  
   [a] PPP (point-to-point protocol) support
      [a] PPP filtering
      [a] PPP support for async serial ports
      [a] PPP support for sync tty ports
      [a] PPP Deflate compression
      [a] PPP BSD-Compress compression
      [a] PPP over Ethernet
</pre>}}

{{Note|Algunas cosas podrían ser ligeramente diferentes en un kernel 2.4.x respecto a uno 2.6.x, sin embargo no debería ser muy difícil figurarse lo correcto. Incluso entre kernels 2.6, estas opciones tienen una tendencia a moverse. Buena suerte!}}

==Abrazar la WAN (el Internet)==

===Introducción===

Hay "muchas" formas de conectarse a Internet, sin embargo hay generalmente solo un par de maneras que son usadas por la mayoría del público. ADSL (PPPoE) y módems por cable (estático/dinámico) son los dos métodos más comunes que proporcionan los Proveedores de servicios de Internet (ISP). Si hay otros métodos disponibles, siéntete libre de añadirlos a esta artículo de la wiki. Omite cualquiera de las siguientes secciones en este capítulo que no sean aplicables a tus necesidades. Este capítulo trata de cómo lograr conectar el router a Internet mediante eth1. 

=== ADSL y PPPoE ===

Todo el elegante software PPPoE que solía ser proporcionado por rp-pppoe ([http://www.roaringpenguin.com/ Roaring Penguin]) ha sido integrado en el [http://samba.org/ppp/ paquete estándar PPP]. Simplemente ejecuta <tt>emerge ppp</tt> para instalar PPPoE. ¿Recuerdas cómo el nombre de usuario y contraseña era un requerimiento listado anteriormente? Abre el archivo {{Path|/etc/conf.d/net}} en tu editor de texto favorito y configuralo respectivamente. 

Reemplaza <code><username></code> y <code><user_password></code> en el siguiente ejemplo con el ''username'' y ''password'' requeridos:

{{FileBox|filename=/etc/conf.d/net|title=Usar ADSL sobre eth1 para ppp0|lang=bash|1=
config_ppp0="ppp"
link_ppp0="eth1"
plugins_ppp0="pppoe"
pppd_ppp0="
  defaultroute
  usepeerdns
"
username_ppp0="<username>"
password_ppp0="<user_password>"
}}

{{RootCmd|ln -s net.lo /etc/init.d/net.ppp0
|rc-update add net.ppp0 default
|/etc/init.d/net.ppp0 start}}

{{Warning|Cuando la interfaz DSL se active, creará una entrada "ppp0" en la salida del comando <tt>ifconfig</tt>. A pesar de que la NIC es llamada eth1, la dirección IP está de hecho ligada a ppp0. A partir de ahora substituye <code>eth1</code> con <code>ppp0</code>}}

{{Warning|Asegúrate de cambiar los permisos del archivo {{Path|/etc/conf.d/net}} de modo que solo usuarios con privilegios de ''root'' puedan leerlo/escribirlo. Esto es importante porque el nombre de usuario y contraseña fueron ingresados al archivo en formato de texto plano.}}

{{Warning|Para usuarios que migran del paquete {{Package|net-dialup/rp-pppoe}}, o usuarios que experimentan reinicios extraños de la conexión, vean la sección MTU del capítulo de Solución de problemas.}}

=== Cable y/o IP dinámica/estática===

Si una IP estática es necesaria entonces detalles de configuración adicionales serán necesarios. Los usuarios de IP estática necesitarán añadir la dirección IP, dirección de gateway, y las direcciones de servidores DNS. 

Usuarios de IP dinámica:

{{Emerge|net-misc/dhcpcd}}

{{FileBox|filename=/etc/conf.d/net|title=Direcciones IP dinámicas|lang=bash|1=
config_eth1="dhcp"
}}

Usuarios de IP estática:

{{FileBox|filename=/etc/conf.d/net|title=Configuración de dirección IP estática|lang=bash|1=
config_eth1="66.92.78.102/24 brd 66.92.78.255"
routes_eth1="default via 66.92.78.1"
}}

{{FileBox|filename=/etc/resolv.conf|title=Añadiendo información DNS|1=
nameserver 123.123.123.123
}}

Configuración dinámica y estática:

{{RootCmd|ln -s net.lo /etc/init.d/net.eth1
|rc-update add net.eth1 default
|/etc/init.d/net.eth1 start}}

Después de trabajar a través de los cambios anteriores el sistema debería estar listo para continuar. 

==Abraza la LAN (traer algunos amigos)==

Este paso es una brisa comparado con el anterior. Para usar "más" de dos dispositivos (más que uno para LAN y otro para WAN), un [[Network bridge]] (puente de red) se necesitará configurar entre todas las tarjetas de red usando la LAN. Esto permitirá múltiples tarjetas de red ser alcanzadas por la misma dirección IP. 

Si un puente de red es necesario, sigue [[Network bridge|las instrucciones para configurar un puente de red]]. El nombre del puente (por defecto br0) reemplazará eth0 para el dispositivo LAN en los pasos de esta wiki. Si hay un número grande de dispositivos en el router casero, considera renombrarlos vía ''udev'' para hacer más fácil la administración. Configurar un puente y renombrar los dispositivos es completamente opcional pero recomendado para redes caseras grandes. 

Cuando crees un punto de acceso Wi-Fi asegúrate que la tarjeta Wi-Fi soporta el modo maestro (''master mode'') y configura [[Hostapd]].

{{FileBox|filename=/etc/conf.d/net|lang=bash|1=
config_eth0="192.168.0.1/24 brd 192.168.0.255"
}}

{{RootCmd|rc-update add net.eth0 default
|/etc/init.d/net.eth0 start}}

==Servicios LAN (porque somos buena gente)==

===Servidor DHCP===

It would be nice if everyone in the house could plug their computers into the network and things would just work. No need to remember mind-numbing details or make them stare at confusing configuration screens! Life would be grand, eh? Introducing the Dynamic Host Configuration Protocol (DHCP) and why everyone should care.

DHCP is exactly what its name implies: a protocol that allows dynamic configuration of hosts automatically. Run a DHCP server on the router, give it all the information about the network (valid IPs, DNS servers, gateways, etc...), then when the other hosts start up, they can run a DHCP ''client'' to automatically configure themselves. No fuss, no muss! For more information about DHCP, visit [[Wikipedia:DHCP|Wikipedia's DHCP article]]. 

This section will use the {{Package|net-dns/dnsmasq}} package which will provide both DHCP and DNS services. For now lets focus on the DHCP aspect. Note: to run a different DHCP server, another example can be found in the Fun Things section below. Also, to tinker with the DHCP server settings read the comments in the {{Path|/etc/dnsmasq.conf}} file. 

{{Emerge|net-dns/dnsmasq}}

{{FileBox|filename=/etc/dnsmasq.conf|1=
dhcp-range=192.168.0.100,192.168.0.250,72h
interface=eth0
}}

{{RootCmd|rc-update add dnsmasq default
|/etc/init.d/dnsmasq start}}

Setting the interface is very important. Using default dnsmasq settings will open the router to DNS amplification attacks which could create some scary email from the ISP providing the connection. Check to make sure the router is not allowing for DNS amplification attacks by using [http://openresolver.com].

Now the little router is a bona-fide DHCP server. Plug in those computers and watch them work! With Windows systems navigate to the {{Path|TCP/IP Properties}} and select the {{Path|Obtain an IP address automatically}} and {{Path|Obtain DNS server address automatically}} options. Sometimes the changes are not instantaneous, so opening a command prompt and running <tt>ipconfig /release</tt> and <tt>ipconfig /renew</tt> might be necessary. Enough about Windows, time to get back to everyone's favorite penguin!

===Servidor DNS===

When people want to visit a place on the Internet, they remember names, not a string of funky numbers. After all, what is easier to remember, eBay.com or 66.135.192.87? This is where the DNS steps in. DNS servers run all over the Internet, and whenever someone wants to visit eBay.com, these servers turn the text "eBay.com" (what we understand) into IP address "66.135.192.87" (what computers understand). For more information about DNS visit [[Wikipedia:DNS|Wikipedia]]. 

Desde que ''dnsmasq'' está siendo usado para el servidor DHCP, e incluye un servidor DNS, no hay nada más que hacer aquí!. El pequeño router ya está proporcionando DNS a sus clientes DHCP. ¿No debería ser todo así de fácil? 

It is possible to choose other DNS servers if they are more comfortable to setup. dnsmasq is used in this article because it was designed to do exactly what this guide required. It is a little DNS caching/forwarding server for local networks. The scope of this howto is not to provide DNS for a domain; but it does offer simple DNS services to every user of a home-based LAN. 

===NAT (enmascaramiento de IP)===

At this point, people on the network can talk to each other and look up hostnames via DNS, but they still ca not actually connect to the Internet. While the network administrator (the person reading this) may think it is great (more bandwidth for the Admin!), the other users are probably not very happy without an Internet connection. 

This is where Network Address Translation (NAT) steps in. NAT is a way of connecting multiple computers in a private LAN to the Internet when a small number of public IP addresses are available. Typically a home Internet user is provided with 1 public IP address by an ISP for the whole house to connect to the Internet. NAT is the magic that makes this possible. For more information about NAT, please visit [[Wikipedia:NAT|Wikipedia]]. 

{{Note|Antes de iniciar, asegúrate que IPtables ha sido instalado en el sistema. Si no está instalado, instálalo: <tt>emerge iptables</tt>}}

Después de que IPtables está instalado, limpia las reglas actuales:

{{RootCmd|iptables -F
|iptables -t nat -F}}

Configura las políticas por defecto para manejar tráfico que no encaja:

{{RootCmd|iptables -P INPUT ACCEPT
|iptables -P OUTPUT ACCEPT
|iptables -P FORWARD DROP}}

Copia y pega lo siguiente:

{{RootCmd|export LAN{{=}}eth0
|export WAN{{=}}eth1}}

El siguiente paso bloquea los servicios para que solo funcionen desde la LAN:

{{RootCmd|iptables -I INPUT 1 -i ${LAN} -j ACCEPT
|iptables -I INPUT 1 -i lo -j ACCEPT
|iptables -A INPUT -p UDP --dport bootps ! -i ${LAN} -j REJECT
|iptables -A INPUT -p UDP --dport domain ! -i ${LAN} -j REJECT}}

(Opcional)Permite el acceso al servidor SSH desde la WAN:

{{RootCmd|iptables -A INPUT -p TCP --dport ssh -i ${WAN} -j ACCEPT}}

Descarta paquetes TCP / UDP a puertos privilegiados:

{{RootCmd|iptables -A INPUT -p TCP ! -i ${LAN} -d 0/0 --dport 0:1023 -j DROP
|iptables -A INPUT -p UDP ! -i ${LAN} -d 0/0 --dport 0:1023 -j DROP}}

Finalmente agrega las reglas para NAT:

{{RootCmd|iptables -I FORWARD -i ${LAN} -d 192.168.0.0/255.255.0.0 -j DROP
|iptables -A FORWARD -i ${LAN} -s 192.168.0.0/255.255.0.0 -j ACCEPT
|iptables -A FORWARD -i ${WAN} -d 192.168.0.0/255.255.0.0 -j ACCEPT
|iptables -t nat -A POSTROUTING -o ${WAN} -j MASQUERADE}}

Informa al kernel que el reenvío IP está permitido:

{{RootCmd|echo 1 > /proc/sys/net/ipv4/ip_forward}}

{{RootCmd|for f in /proc/sys/net/ipv4/conf/*/rp_filter ; do echo 1 > $f ; done}}

Instruye al demonio de IPtables para que guarde los cambios a las reglas, luego añade IPtables al nivel de ejecución ''default''

{{RootCmd|/etc/init.d/iptables save
|rc-update add iptables default}}

{{FileBox|filename=/etc/sysctl.conf|lang=ini|1=
net.ipv4.ip_forward = 1
net.ipv4.conf.default.rp_filter = 1
}}

Para internet dinámico la siguiente configuración debería ser activada:

{{FileBox|filename=/etc/sysctl.conf|lang=ini|1=
net.ipv4.ip_dynaddr = 1
}}

Una vez que el texto anterior ha sido introducido el resto de los usuarios de la red deberían ser capaces de usar el Internet como si estuvieran conectados directamente ellos mismos. 

The <code>ip_dynaddr</code> option is useful for dial on demand systems or when the ISP gives out dynamic addresses. This works around the problem where a connection is attempted before the Internet interface is fully setup. This provides a smoother network experience for users behind the router. 

==Cosas divertidas (para un día lluvioso)==

===Introducción===

Lo creas o no, está hecho! De aquí en adelante, otros temas comunes que podrían interesar serán cubiertos. Todo en las siguientes secciones es completamente opcional.

===Reenvío de puertos===

Sometimes users need to be able to host services on a computer behind the router, or need to be able to connect remotely to a computer behind the router. Perhaps a FTP, HTTP, SSH, or VNC server is needed on one or more machines behind the router and outsiders need to connect to them all. The only caveat to Port Forwarding is only one service/machine combo can be established per port. For example, there is no practical way to setup three FTP servers behind the router and connect to them all through port 21; only one system can be on port 21 while the others would need to be on other ports (port 123 and port 567 would be fine options). 

All the port forwarding rules are of the form <code>iptables -t nat -A PREROUTING [-p protocol] --dport [external port on router] -i ${WAN} -j DNAT --to [ip/port to forward to]</code>. Unfortunately, iptables does not accept hostnames when port forwarding. When forwarding an external port to the same port on the internal machine, omit the destination port. See the iptables(8) man page for more information. 

{{RootCmd|export LAN{{=}}eth0
|export WAN{{=}}eth1}}

Reenvía el puerto 2 a ssh en una máquina interna:

{{RootCmd|iptables -t nat -A PREROUTING -p tcp --dport 2 -i ${WAN} -j DNAT --to 192.168.0.2:22}}

Reenvío de FTP a un equipo interno:

{{RootCmd|iptables -t nat -A PREROUTING -p tcp --dport 21 -i ${WAN} -j DNAT --to 192.168.0.56}}

Reenvío de HTTP a un equipo interno:

{{RootCmd|iptables -t nat -A PREROUTING -p tcp --dport 80 -i ${WAN} -j DNAT --to 192.168.0.56}}

Reenvío de VNC para equipos internos:

{{RootCmd|iptables -t nat -I PREROUTING -p tcp --dport 5900 -i ${WAN} -j DNAT --to 192.168.0.2
|iptables -t nat -I PREROUTING -p tcp --dport 5901 -i ${WAN} -j DNAT --to 192.168.0.3:5900}}

Para entrada de VNC a 192.168.0.3, añade <code>:1</code> al nombre de la máquina del router.

SAMBA forwarding to an internal host (excess ports to cover Windows):

{{RootCmd|iptables -t nat -I PREROUTING -p tcp --dport 135 -i ${WAN} -j DNAT --to 192.168.0.2
|iptables -t nat -I PREROUTING -p tcp --dport 139 -i ${WAN} -j DNAT --to 192.168.0.2
|iptables -t nat -I PREROUTING -p tcp --dport 445 -i ${WAN} -j DNAT --to 192.168.0.2
|iptables -t nat -I PREROUTING -p udp --dport 137:138 -i ${WAN} -j DNAT --to 192.168.0.2
|iptables -t nat -I PREROUTING -p udp --dport 445 -i ${WAN} -j DNAT --to 192.168.0.2}}

Reenvío de Bittorrent:

{{RootCmd|iptables -t nat -A PREROUTING -p tcp --dport 6881:6889 -i ${WAN} -j DNAT --to 192.168.0.2}}

Reenvío de eDonkey/eMule:

{{RootCmd|iptables -t nat -A PREROUTING -p tcp --dport 4662 -i ${WAN} -j DNAT --to 192.168.0.55}}

Game Cube Warp Pipe support:

{{RootCmd|iptables -t nat -A PREROUTING -p udp --dport 4000 -i ${WAN} -j DNAT --to 192.168.0.56}}

Soporte en línea para ''Playstation 2'':

{{RootCmd|iptables -t nat -A PREROUTING -p tcp --dport 10070:10080 -i ${WAN} -j DNAT --to 192.168.0.11
|iptables -t nat -A PREROUTING -p udp --dport 10070:10080 -i ${WAN} -j DNAT --to 192.168.0.11}}

Para ''Xbox Live'':

{{RootCmd|iptables -t nat -A PREROUTING -p tcp --dport 3074 -i ${WAN} -j DNAT --to 192.168.0.69
|iptables -t nat -A PREROUTING -p udp --dport 3074 -i ${WAN} -j DNAT --to 192.168.0.69
|iptables -t nat -A PREROUTING -p udp --dport 88 -i ${WAN} -j DNAT --to 192.168.0.69
}}

=== Identd (para IRC) ===

Internet Relay Chat utilizes the ident service pretty heavily. Now that the IRC clients are behind the router, a way to host ident for both the router and the clients is needed. A server has been created for this purpose. It is called {{Package|net-misc/midentd}}. 

{{Emerge|net-misc/midentd}}

{{RootCmd
|rc-update add midentd default
|/etc/init.d/midentd start
}}

Hay otros servidores ''ident'' en el árbol de Portage. Otras opciones viables son {{Package|net-misc/oidentd}} y {{Package|net-misc/fakeidentd}}.

=== Servidor de tiempo ===

Mantener la hora del sistema es esencial para mantener un sistema saludable. Una de los más maneras más comunes de cumplir esto es con el Protocolo de Tiempo de Red (NTP) y el paquete {{Package|net-misc/ntp}} (el cuál proporciona implementaciones para ambos servidor y cliente). 

Many users run ntp clients on their computers. Obviously, the more clients in the world, the larger the load ntp servers need to shoulder. In environments like home networks an NTP server can be setup locally to help keep the load down on public servers while still providing the proper time to local systems. As an added bonus, private updates will be a lot faster for the local clients! The setup is simple: run a NTP server on the router that synchronizes itself with the public Internet servers while, at the same time, providing the time to the rest of the computers in the network. To get started, simply <tt>emerge ntp</tt> on the router and edit {{Path|/etc/conf.d/ntp-client}} as desired.

{{RootCmd|rc-update add ntp-client default}}

{{FileBox|filename=/etc/ntp.conf|1=
restrict default ignore
restrict 192.168.0.0 mask 255.255.255.0 notrust nomodify notrap
}}

Esto solo permitirá clientes NTP con una dirección IP en el rango de 192.168.0.xxx usar el servidor NTP.

{{RootCmd|rc-update add ntpd default
|/etc/init.d/ntp-client start
|/etc/init.d/ntpd start}}

{{Note|Make sure to allow inbound and outbound communication on the NTP port (123/udp) when setting up the server. The client just needs outbound access on port 123 over UDP.}}

Ahora, en los clientes, ejecuta <tt>emerge ntp</tt>. Correr la configuración del cliente NTP es mucho más sencillo. 

En {{Path|/etc/conf.d/ntp-client}}, cambia el servidor <code>pool.ntp.org</code> en la variable <code>NTPCLIENT_OPTS</code> a <code>192.168.0.1</code>

{{RootCmd|rc-update add ntp-client default
|/etc/init.d/ntp-client start}}

=== Servidor Rsync ===

For those who run multiple Gentoo boxes on the same LAN, it is wise to prevent every machine running <tt>emerge --sync</tt> with remote servers. By setting up a ''local'' rsync, both personal bandwidth and the Gentoo rsync servers' bandwidth is saved. The process is relatively simple.

{{Note|Para una guía mucho más profunda de rsync, por favor ve [[Project:Infrastructure/Rsync|la guía oficial de rsync]].}}

Since every Gentoo machine requires rsync, there is no need to emerge it. Edit the default {{Path|/etc/rsyncd.conf}} config file, uncomment the <code>[gentoo-portage]</code> section, and make sure to add an <code>address</code> option. All other defaults should be already set correctly.

{{FileBox|filename=/etc/rsyncd.conf|1=
pid file = /var/run/rsyncd.pid
use chroot = yes
read only = yes
address = 192.168.0.1
  
[gentoo-portage]
  path = /mnt/space/portage
  comment = Gentoo Linux Portage tree
  exclude = /distfiles /packages
}}

El servicio entonces necesita ser iniciado(de nuevo, los valores por defecto están bien) 

{{RootCmd|/etc/init.d/rsyncd start
|rc-update add rsyncd default}}

La única cosa pendiente es configurar a los clientes para que se sincronicen con el router. 

{{FileBox|filename=/etc/portage/make.conf|title=Setup SYNC variable to new rsync server|lang=bash|1=
SYNC="rsync://192.168.0.1/gentoo-portage"
}}

=== Servidor de correo electrónico ===

Sometimes it is nice to run a Simple Mail Transfer Protocol (SMTP) server on the router. Each user may have their own reason for wanting to do so, however one advantage to running SMTP on the router is the users see mail as being sent instantly and the work of retrying/routing is left up to the mail server. Some ISPs do not allow for mail relaying for accounts that are not part of their network (like Verizon). Also, throttling the delivery of mail may be needed so that large attachments will not seriously lag the Internet connection. 

{{Emerge|mail-mta/netqmail}}

Asegúrate de que la salida del comando <tt>hostname</tt> es correcta:

{{RootCmd|emerge --config netqmail}}

{{RootCmd|iptables -I INPUT -p tcp --dport smtp ! -i ${LAN} -j REJECT
|ln -s /var/qmail/supervise/qmail-send /service/qmail-send
|ln -s /var/qmail/supervise/qmail-smtpd /service/qmail-smtpd
|cd /etc/tcprules.d}}

Edita {{Path|tcp.qmail-smtp}} y añade una entrada en la sección ''allow'':

{{FileBox|filename=niltcp.qmail-smtp|1=
192.168.0.:allow,RELAYCLIENT=""
}}

{{RootCmd|make
|rc-update add svscan default
|/etc/init.d/svscan start}}

When e-mail is setup on the hosts in the network, tell them the SMTP server is 192.168.0.1. Visit the [http://netqmail.org/ netqmail homepage] for more documentation on netqmail usage.

=== Servidor DHCP completo ===

Earlier dnsmasq was used to provide DHCP service to all DHCP clients. For most people with a simple small LAN, this is perfect, however there may needs something with more features. Thus a full-featured DHCP server is provided by the [http://www.isc.org/products/DHCP ISC] folks for users who crave the maximum.

{{Emerge|net-misc/dhcp}}

{{FileBox|filename=/etc/dhcp/dhcpd.conf|title=Aquí hay un archivo sencillo de configuración|1=
authoritative;
ddns-update-style interim;
subnet 192.168.0.0 netmask 255.255.255.0 {
    range 192.168.0.100 192.168.0.250;
    default-lease-time 259200;
    max-lease-time 518400;
    option subnet-mask 255.255.255.0;
    option broadcast-address 192.168.0.255;
    option routers 192.168.0.1;
    option domain-name-servers 192.168.0.1;
}
}}

En {{Path|/etc/conf.d/dhcpd}} fija <code>IFACE</code> a "eth0".

{{RootCmd|rc-update add dhcpd default
|/etc/init.d/dhcpd start}}

This is the minimal setup required to replace the dnsmasq DHCP functionality used earlier. The DHCP features in dnsmasq should be disabled? If not, comment out the <code>dhcp-range</code> setting in {{Path|/etc/dnsmasq.conf}} and restart the service.

=== Conectar otra LAN (o dos o tres)===

Sometimes the router must be connected to another LAN. This can be done to hook up a group of friends temporarily or to section off different groups of computers. Whatever the reason, extending the router to other LAN networks should is straightforward. In the following examples, This article presumes that the ''new'' network is connected via a third ethernet card, namely <code>eth2</code>. 

First configure the interface. Take the instructions in [[Hug_the_LAN_.28bring_along_some_friends.29|this section]] and replace <code>eth0</code> with <code>eth2</code> and <code>192.168.0</code> with <code>192.168.1</code>.

Tweak dnsmasq to service the new interface. Edit the {{Path|/etc/conf.d/dnsmasq}} file again and append <code>-i eth2</code> to <code>DNSMASQ_OPTS</code>; using -i multiple times is OK. Then edit {{Path|/etc/dnsmasq.conf}} and add another line like the dhcp-range line in [[#LAN_Services_.28because_we.27re_nice_people.29|this section]], replacing <code>192.168.0</code> with <code>192.168.1</code>. Having multiple dhcp-range lines is OK too. 

Finalmente, vea las reglas en [[#Servicios_LAN_.28porque_somos_buena_gente.29|esta sección]] y duplica las reglas que tienen <code>-i ${LAN}</code> dentro de ellas. Otra variable podría ser necesaria, digamos <code>LAN2</code>, para hacer las cosas más sencillas.

== Solución de problemas ==

=== Herramientas útiles ===

Cuando tengas problemas haciendo que las computadoras se comuniquen intenta las siguientes herramientas (todas pueden ser encontradas en la categoria de Portage ''net-analyzer''): 

{| class="wikitable" style="text-align: left;" 
|- 
! Herramienta
! Descripción
|- 
| wireshark
| Herramienta gráfica para ver todos los datos de red "crudos" de acuerdo a filtros
|- 
| tcpdump
| Herramienta de consola para ver todos los datos de red "crudos" de acuerdo a filtros
|- 
| iptraf
| Monitor de IP LAN basado en ncurses
|- 
| ettercap
| Monitor/control de red basado en ncurses
|-
|}

=== DHCP no inicia ===

Cuando se inicia el script init.d para dhcp por primera vez, podría fallar en arrancar pero se niega a proveer cualquier información útil. 

{{RootCmd|/etc/init.d/dhcp start|output=<pre>
 * Setting ownership on dhcp.leases ...          [ ok ]
 * Starting dhcpd ...                            [ !! ]
</pre>
}}

The trick is used to know where dhcpd is sending its output. Browse to {{Path|/var/log}} and read the log files. Since the exact log file depends on the package using a syslog, try running <tt>grep -Rl dhcpd /var/log</tt> to narrow down the possibilities. Chances are a typo was made in the configuration file. Another command to try running: <tt>dhcpd -d -f</tt> (short for debug / foreground). This aids in debugging the errors based upon the output. 

=== Valor MTU incorrecto ===

If odd errors are experienced (such as not being able to access some webpages while others load fine), it might be Path MTU Discovery trouble. The quick way to test for this is to run the following iptables command: 

{{RootCmd|iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu}}

This will affect all new connections; refresh the problematic website in order to test the fix. In case it helps, the standard MTU value for 100mbit ethernet connections is <code>1500</code>; this value also applies to PPPoA. For PPPoE connections it is <code>1492</code>. For more info, read Chapter 15 of the [http://lartc.org/howto/ Linux Advanced Routing & Traffic Control HOWTO]. 

Si el comando anterior no funciona, considera poner la regla en la tabla ''mangle''. Simplemente añade <tt>-t mangle</tt> al comando. 

=== Incapaz de conectar dos máquinas directamente ===

Si (por cualquier razón) es necesario conectar dos máquinas directamente sin un concentrador o switch, un cable de ethernet regular probablemente no funcione, a menos que un adaptador de red con ''Auto MDI/MDI-X'' (auto detección) esté disponible. Un cable diferente llamado ''crossover'' será necesario para las conexiones NIC a NIC. Esta página de [[Wikipedia:Ethernet_crossover_cable|Wikipedia]] explica los detalles a bajo nivel.

== Notas finales ==

No hay otras notas finales. Si tienes problemas con esta guía actualiza este artículo con la información correcta o deja un breve mensaje en la pagina de plática de este artículo con un resumen de lo que no funciona. Eventualmente alguien debería ser capaz de corregir cualquier detalle(s). También es posible hacer un reporte de fallo en el [https://bugs.gentoo.org/ Sitio web de seguimiento de fallos de Gentoo]. Si hay cualquier otra cosa interesante que pudiera mejorar esta guía, por todos los medios incluyela! Lo peor que pudiera suceder es que sean removidas.

[[Category:Server and Security]] {{Migrated|originalauthors={{Mail|vapier}}}}
