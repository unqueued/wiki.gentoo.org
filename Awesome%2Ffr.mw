<languages />
{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://awesome.naquadah.org|header=true}}
|{{InfoBox wikipedia|awesome (window manager)}}
}}

'''awesome''' is a highly configurable, next generation framework window manager for X. It is primarily targeted at power users, developers and any people dealing with every day computing tasks and who want to have fine-grained control on their graphical environment.

== Installation ==

Install {{Package|x11-wm/awesome}}:

{{Emerge|awesome}}

== Configuration ==

Démarrage

Pour lancer awesome utilisez un [[display manager|Gestionnaire d'affichage]] ou <kbd>startx</kbd>.

Pour utiliser <tt>startx</tt> avec le support de [[ConsoleKit]], installez [[ConsoleKit]] et créez le fichier suivant :

{{FileBox|filename=~/.xinitrc|lang=bash|1=
exec ck-launch-session dbus-launch --sh-syntax --exit-with-session awesome
}}

=== Fichier de configuration ===

Le fichier de configuration par défaut d'awesome est situé ici {{Path|~/.config/awesome/rc.lua}}. Si le dossier, ou fichier, n'existe pas, il doit être créé. Un fichier de configuration prêt à l'emploi est livré avec <tt>awesome</tt>, vous le trouverez dans {{Path|/etc/xdg/awesome/rc.lua}} et pouvez le copier dans votre répertoire utilisateur.

Tout d'abord créez le dossier {{Path|awesome/}} :

{{Cmd|mkdir -p ~/.config/awesome/}}

Copiez ensuite le fichier de configuration {{Path|rc.lua}} :

{{Cmd|cp /etc/xdg/awesome/rc.lua ~/.config/awesome/rc.lua}}

Si {{Package|x11-terms/xterm}} n'est pas installé, installez le ou utilisez comme terminal par défaut un des terminaux présents sur votre système. Ci dessous on définit <tt>konsole</tt>, du paquet {{Package|kde-base/konsole}}, comme terminal par défaut.

{{FileBox|filename=~/.config/awesome/rc.lua|lang=lua|1=
-- This is used later as the default terminal and editor to run.
terminal = "konsole"
}}

Après avoir fait des modifications, il peut être utile de vérifier qu'il n'y a pas d'erreurs dans le fichier de configuration :

{{Cmd|awesome -k|output=<pre>
✔ Configuration file syntax OK
</pre>}}

On peut utiliser le paquet {{Package|media-gfx/feh}} pour gérer le fond d'écran.

{{Emerge|feh}}

Par exemple, pour utiliser <tt>awsetbg</tt> pour définir le fond d'écran, éditez {{Path|~/.config/awesome/theme/theme.lua}} :

{{FileBox|filename=~/.config/awesome/theme/theme.lua|title=Setting a specific background using awsetbg|lang=lua|1=
theme.wallpaper_cmd = { "awsetbg -f .config/awesome/themes/awesome-wallpaper.png" }
}}

=== Tags ===

Dans <tt>awesome</tt>, on nomme tags les différents bureaux virtuels. On peut définir pour chaque tag un symbole particulier :

{{FileBox|filename=~/.config/awesome/rc.lua|1=
-- {{{ Tags
tags = {}
for s = 1, screen.count() do
    tags[s] = awful.tag({ "➊", "➋", "➌", "➍" }, s, layouts[1])
end
-- }}}
}}

=== Menu ===

Ci dessous un exemple de menu <tt>awesome</tt> personnalisé :

{{FileBox|filename=~/.config/awesome/rc.lua|1=
-- {{{ Menu
myawesomemenu = {
   { "manual", terminal .. " -e man awesome" },
   { "edit config", editor_cmd .. " " .. awesome.conffile },
   { "reload", awesome.restart },
   { "quit", awesome.quit },
   { "reboot", "reboot" },
   { "shutdown", "shutdown" }
}
 
appsmenu = {
   { "urxvt", "urxvt" },
   { "sakura", "sakura" },
   { "ncmpcpp", terminal .. " -e ncmpcpp" },
   { "luakit", "luakit" },
   { "uzbl", "uzbl-browser" },
   { "firefox", "firefox" },
   { "chromium", "chromium" },
   { "thunar", "thunar" },
   { "ranger", terminal .. " -e ranger" },
   { "gvim", "gvim" },
   { "leafpad", "leafpad" },
   { "htop", terminal .. " -e htop" },
   { "sysmonitor", "gnome-system-monitor" }
}
 
gamesmenu = {
   { "warsow", "warsow" },
   { "nexuiz", "nexuiz" },
   { "xonotic", "xonotic" },
   { "openarena", "openarena" },
   { "alienarena", "alienarena" },
   { "teeworlds", "teeworlds" },
   { "frozen-bubble", "frozen-bubble" },
   { "warzone2100", "warzone2100" },
   { "wesnoth", "wesnoth" },
   { "supertuxkart", "supertuxkart" },
   { "xmoto" , "xmoto" },
   { "flightgear", "flightgear" },
   { "snes9x" , "snes9x" }
}
 
mymainmenu = awful.menu({ items = { { "awesome", myawesomemenu },
                                    { "apps", appsmenu },
				    { "games", gamesmenu },
                                    { "terminal", terminal },
				    { "web browser", browser },
				    { "text editor", geditor }
                                  }
                        })
 
mylauncher = awful.widget.launcher({ image = image(beautiful.awesome_icon),
                                     menu = mymainmenu })
-- }}}
}}

=== Date ===

Ci dessous un exemple d'utilisation d'un format de date personnalisé. La syntax utilisée pour le formattage est <code>%d.%m %H:%M</code>. La seconde option, 60, est l'intervalle de rafraîchissement, en secondes.

{{FileBox|filename=~/.config/awesome/rc.lua|title=Creating a text-clock widget|1=
-- {{{ Wibox
-- Create a text-clock widget
mytextclock = awful.widget.textclock({ align = "right" }," %d.%m %H:%M ", 60)
-- }}}
}}

{{Note|Pour plus d'informations sur les options de formattage de la date, lancez <kbd>date --help</kbd>.}}

=== Controleur de volume ===

{{Package|media-sound/volumeicon}} can be used to handle volume keys automatically, and to show the volume level through a tray icon.

{{Emerge|volumeicon}}

Autostart <tt>volumeicon</tt> from within {{Path|~/.xinitrc}}:

{{FileBox|filename=~/.xinitrc|title=Launching volumeicon in the background when starting X|lang=bash|1=
volumeicon &
exec ck-launch-session dbus-launch awesome
}}

Alternatively, a lightweight method is to add volume keys straight into the <tt>awesome</tt> configuration:

{{FileBox|filename=~/.config/awesome/rc.lua|title=Volume keys|1=
awful.key({ }, "XF86AudioLowerVolume", function () awful.util.spawn("amixer -q sset Master 2dB-") end)
awful.key({ }, "XF86AudioRaiseVolume", function () awful.util.spawn("amixer -q sset Master 2dB+") end)
}}

=== MPD multimedia keys ===

Install {{Package|media-sound/mpc}} to add multimedia key bindings for [[MPD]]:

{{Emerge|mpc}}

Next update the <tt>awesome</tt> configuration to assign the multimedia keys to the proper command:

{{FileBox|filename=~/.config/awesome/rc.lua|title=Volume key bindings|1=
awful.key({ }, "XF86AudioNext",function () awful.util.spawn( "mpc next" ) end),
awful.key({ }, "XF86AudioPrev",function () awful.util.spawn( "mpc prev" ) end),
awful.key({ }, "XF86AudioPlay",function () awful.util.spawn( "mpc play" ) end),
awful.key({ }, "XF86AudioStop",function () awful.util.spawn( "mpc pause" ) end),
}}

=== Debugging the configuration with Xephyr ===

Xephyr is a useful tool for debugging new configuration files as it creates an instance of an X server within a client window.

{{Cmd|Xephyr -ac -nolisten tcp -br -noreset -screen 800x600 :1}}

This will open an 800x600 window. To run awesome within it open a new terminal and run the following:

{{Cmd|DISPLAY{{=}}:1.0 awesome}}

This will run awesome within a window.

== Keyboard shortcuts ==

These are the most useful default shortcuts:

* {{Key|mod4}}+{{Key|mouse1}} = move client with mouse
* {{Key|mod4}}+{{Key|mouse2}} = resize client with mouse

* {{Key|mod4}}+{{Key|enter}} = open terminal
* {{Key|mod4}}+{{Key|r}} = run command
* {{Key|mod4}}+{{Key|shift}}+{{Key|c}} = kill
* {{Key|mod4}}+{{Key|m}} = maximize
* {{Key|mod4}}+{{Key|n}} = minimize
* {{Key|mod4}}+{{Key|ctrl}}+{{Key|n}} = restore minimized clients
* {{Key|mod4}}+{{Key|f}} = full screen
* {{Key|mod4}}+{{Key|tab}} = switch to previous client
* {{Key|mod4}}+{{Key|ctrl}}+{{Key|space}} = float

* {{Key|mod4}}+{{Key|j}} = highlight left client
* {{Key|mod4}}+{{Key|k}} = highlight right client
* {{Key|mod4}}+{{Key|shift}}+{{Key|j}} = move client right
* {{Key|mod4}}+{{Key|shift}}+{{Key|k}} = move client left

* {{Key|mod4}}+{{Key|l}} = resize tiled client
* {{Key|mod4}}+{{Key|h}} = resize tiled client

* {{Key|mod4}}+{{Key|left / right}} = change tag
* {{Key|mod4}}+{{Key|1-9}} = change tag
* {{Key|mod4}}+{{Key|shift}}+{{Key|1-9}} = send client to tag

Custom key bindings, like {{Key|Alt}}+{{Key|Tab}}, can be mapped to make the <tt>awesome</tt> experience even better. For instance, to use {{Key|Alt}}+{{Key|Tab}} to switch to the previous window:

{{FileBox|filename=~/.config/awesome/rc.lua|title=Alt-TAB key binding|1=
-- {{{ Key bindings
globalkeys = awful.util.table.join(
...
    -- alt + tab
    awful.key({ "Mod1", }, "Tab",
        function ()
            awful.client.focus.history.previous()
            if client.focus then
                client.focus:raise()
            end
        end),
-- }}}
}}

== External resources ==

* [http://awesome.naquadah.org/wiki/User_Configuration_Files User Configuration Files] at awesome wiki


[[Category:Window manager]]
