<languages />

{{Metadata|abstract=Distcc è un programma progettato per distribuire i processi di compilazione, attraverso una rete, a degli host partecipanti. È composto da un server, distccd, e da un client, distcc. Distcc funziona in modo trasparente con ccache, Portage e perfino Automake, con un po' di lavoro.}}

[http://distcc.samba.org Distcc] è un programma progettato per distribuire i processi di compilazione, attraverso una rete, a degli host partecipanti. È composto da un server, <code>distccd</code>, e da un client, <code>distcc</code>. Distcc funziona in modo trasparente con [http://ccache.samba.org ccache], Portage e perfino Automake, con un po' di lavoro. 

Se stai pensando di usare distcc per facilitare il bootstrap di una installazione di Gentoo, assicurati di leggere la sezione [[#Using_Distcc_to_Bootstrap|Usare Distcc per il Bootstrap]]. 

== Configurazione ==

=== Dipendenze ===

Per poter usare Distcc, tutti i computer sulla rete devono avere la stessa versione di GCC. Ad esempio, mescolare GCC 3.3.x (dove la x è variabile) non è un problema, ma mescolare 3.3.x e 3.2.x '''potrebbe''' generare errori in fase di compilazione o di esecuzione. 

=== Installazione di Distcc ===

Ci sono un paio di opzioni che dovresti conoscere prima di cominciare a installare distcc. 

Distcc ships with a graphical monitor to monitor tasks that a computer is sending away for compilation, enabled with the <code>gtk</code> <code>USE</code> flag.

{{Emerge|distcc}}

{{Important/it|Assicurarsi di aver installato distcc su tutte le macchine che partecipano alla compilazione.}}

=== Configurare portage all'uso di Distcc ===

Far usare distcc a Portage è semplice. Eseguire i passaggi seguenti su tutti i sistemi che partecipano alla compilazione distribuita: 

{{Emerge|distcc}}

Adesso, impostare le variabili <code>MAKEOPTS</code> e <code>FEATURES</code> come mostrato sotto. Una strategia comune consiste nell'impostare N al doppio del numero totale delle CPU (locali+remote)+1, ed M al numero delle CPU locali. NEl caso in cui non siano disponibili host distcc, o che l'ebuild richieda una compilazione esplicitamente locale (ad esempio, gcc), la flag <code>-lM</code> preverrà l'apertura di troppi task.

{{FileBox|filename=/etc/portage/make.conf|title=Setting MAKEOPTS and FEATURES|lang=bash|1=
MAKEOPTS="-jN -lM"
FEATURES="distcc"
}}

For instance, if you're connected to two quad core host PCs running <code>distcc</code> and your local PC has a dual core, then the <code>MAKEOPTS</code> variable could look like this:

{{FileBox|filename=/etc/portage/make.conf|title=MAKEOPTS example for 2 quad-core (hosts) and one dual core (local) PCs|lang=bash|1=
# 2 remote hosts with 4 cores each = 8 cores remote
# 1 local host with 2 cores = 2 cores local
# total number of cores is 10, so N = 2*10+1 and M=2
MAKEOPTS="-j21 -l2"
}}

While editing your {{Path|make.conf}}, make sure that you do not have <code>-march=native</code> in your <code>CFLAGS</code> or <code>CXXFLAGS</code>. <code>distcc</code> will not distribute work to other machines if <code>march</code> is set to <code>native</code>. You may find the appropriate value with <code>gcc -Q -march=native --help=target</code>. See also [http://blogs.gentoo.org/mgorny/2014/06/23/inlining-marchnative-for-distcc/ Inlining -march=native for distcc] blog post.

=== Specificare gli host partecipanti ===

Utilizzare il comando <code>distcc-config</code> per impostare una lista di host. Ecco un esempio degli host che potrebbero essere nella tua lista: 

{{Code|Examples of host definitions|<pre>
192.168.0.1          192.168.0.2                       192.168.0.3
192.168.0.1/2        192.168.0.2                       192.168.0.3/10
192.168.0.1:4000/2   192.168.0.2/1                     192.168.0.3:3632/4
@192.168.0.1         @192.168.0.2:/usr/bin/distccd     192.168.0.3
</pre>
}}

Ci sono anche altri modi per impostare gli host. Consultare la manpage di distcc per ulteriori dettagli.

Se si vuole compilare anche in locale, occorre inserire 'localhost' nella lista degli host. Di contro, se si vuole evitare di usare la macchina locale per compilare (caso d'uso comune), bisogna ometterlo dalla lista. Inserire 'localhost' su una macchina lenta potrebbe addirittura rallentare le cose. È consigliabile effettuare dei test per raggiungere le performance migliori.

Può sembrare complicato, ma nella maggior parte dei casi una variante della riga 1 o 2 sarà sufficiente a far funzionare tutto. 

Visto che la maggior parte delle persone non usa le righe 3 e/o 4, [http://distcc.samba.org/man/distcc_1.html fare riferimento] alla documentazione di distcc (man distcc) per ulteriori informazioni, incluso il come far funzionare distcc attraverso una connessione SSH. 

Ad esempio, per impostare la prima riga dell'esempio precedente: 

{{RootCmd|/usr/bin/distcc-config --set-hosts "192.168.0.1 192.168.0.2 192.168.0.3"}}

Modificare {{Path|/etc/conf.d/distccd}} sulla base delle proprie esigenze ed assicurarsi di aver impostato la direttiva <code>--allow</code> di modo da accettare solo host fidati. Per aumentare la sicurezza, si può usare la direttiva <code>--listen</code> per indicare al demone distcc quale IP ascoltare (per sistemi multi-homed). Ulteriori informazioni su distcc sono presenti alla pagina  [http://distcc.samba.org/security.html Distcc Security Design] . 

{{Important/it|È importante usare --allow e --listen. Assicurarsi di leggere la manpage di distcc o la sezione sulla sicurezza qui sopra.}}

Adesso, lanciare il demone di distcc su tutti i computer partecipanti: 

{{RootCmd|rc-update add distccd default
|/etc/init.d/distccd start}}

=== Configurare Distcc per funzionare con Automake ===

In molti casi, questa procedura è anche più semplice della parte riguardante Portage. Ciò che bisogna fare è aggiornare la propria variabile <code>PATH</code> per farle includere {{Path|/usr/lib/distcc/bin}} di fronte alla directory che contiene <code>gcc</code>  ( {{Path|/usr/bin}} ). In ogni caso, c'è da fare attenzione. Se si usa ccache bisogna inserire distcc dopo ccache: 

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

Si può inserire tutto questo dentro il proprio {{Path|~/.bashrc}} o equivalente, di modo da impostare PATH ogni volta che si esegue il login.

Then, as you would normally type <code>make</code> , you would type <code>make -jN</code> (where N is an integer). The value of N depends on your network and the types of computers you are using to compile. Test your own settings to find the number that yields the best performance. 

=== Setting up Distcc to Work With ssh ===

Setting up distcc via ssh includes some pitfalls. First, generate a ssh key pair without password setup. Be aware that portage compiles programs as user portage. The home folder of the user portage is {{Path|/var/tmp/portage}}, which means the keys need to be stored in {{Path|/var/tmp/portage/.ssh}}

{{RootCmd|ssh-keygen -b 2048 -t rsa -f /var/tmp/portage/.ssh/id_rsa}}

Second, create a section for each host in the ssh config file:

{{FileBox|filename=/var/tmp/portage/.ssh/config|title=Add per-host sections|1=
Host test1
    HostName 123.456.789.1
    Port 1234
    User UserName
 
Host test2
    HostName 123.456.789.2
    Port 1234
    User UserName
}}

Also make sure that each host is available in the {{Path|known_hosts}} file and append your public key to the {{Path|authorized_keys}} file of the hosts. To set up the hosts test1 and test2 run

{{RootCmd|/usr/bin/distcc-config --set-hosts "@test1 @test2"}}

Please note the '@'-sign, which specifies ssh hosts for <code>distcc</code>.

== Cross-Compiling ==

Cross-compiling is using one architecture to build programs for another architecture. This can be as simple as using an Athlon (i686) to build a program for a K6-2 (i586), or using a Sparc to build a program for a ppc. This is documented in our [[Distcc/Cross-Compiling|DistCC Cross-compiling Guide]].

== Using Distcc to Bootstrap ==

=== Step 1: Configure Portage ===

Boot your new box with a Gentoo Linux LiveCD and follow the [http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=1 installation instructions] up until the bootstrapping part. (See the [[FAQ|Gentoo FAQ]] for more information about bootstrapping.) Then configure Portage to use distcc: 

{{FileBox|filename=/etc/portage/make.conf|title=Configure Portage to use distcc|lang=bash|1=
FEATURES="distcc"
MAKEOPTS="-jN"
}}

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

=== Step 2: Getting Distcc ===

Install distcc: 

{{RootCmd|USE{{=}}'-*' emerge --nodeps sys-devel/distcc}}

=== Step 3: Setting Up Distcc ===

Run <code>distcc-config --install</code> to setup distcc; substitute <code>host*</code> with the IP addresses or hostnames of the participating DistCC nodes.

{{RootCmd|/usr/bin/distcc-config --set-hosts "localhost host1 host2 host3 ..."}}

Distcc is now set up to bootstrap! Continue with the official installation instructions and ''do not forget'' to re-emerge distcc after <code>emerge system</code>. This is to make sure that all of the dependencies you want are installed as well. 

{{Note|During bootstrap and <code>emerge system</code> distcc may not appear to be used. This is expected as some ebuilds do not work well with distcc, so they intentionally disable it.}}

== Troubleshooting ==

=== Some Packages Don't Use Distcc ===

As you emerge various packages, you'll notice that some of them aren't being distributed (and aren't being built in parallel). This may happen because the package's Makefile doesn't support parallel operations or the maintainer of the ebuild has explicitly disabled parallel operations due to a known problem. 

Sometimes distcc might cause a package to fail to compile. If this happens for you, please [https://bugs.gentoo.org/ report] it to us.

=== Mixed GCC Versions ===

If you have different GCC versions on your hosts, there will likely be very weird problems. The solution is to make certain all hosts have the same GCC version. 

Recent Portage updates have made Portage use <code>${CHOST}-gcc</code> instead of <code>gcc</code> . This means that if you're mixing i686 machines with other types (i386, i586) you will run into problems. A workaround for this may be to <code>export CC='gcc' CXX='c++'</code> or to put it in {{Path|/etc/portage/make.conf}} 

{{Important|Doing this explicitly redefines some behavior of Portage and may have some weird results in the future. Only do this if you're mixing CHOSTs.}}

=== -march=native ===

Starting with GCC 4.3.0, the compiler supports the <code>-march=native</code> switch which turns on CPU autodetection and optimizations that are worth being enabled on the processor the GCC is running at. This is a problem with <code>distcc</code> as it allows mixing of code optimized for different processors (like AMD Athlon and Intel Pentium). ''Don't'' use <code>-march=native</code> or <code>-mtune=native</code> in your <code>CFLAGS</code> or <code>CXXFLAGS</code> when compiling with <code>distcc</code>.

To know the flags that GCC would enable when called with <code>-march=native</code>, execute the following:

{{Cmd|gcc -march{{=}}native -E -v - &lt;/dev/null 2&gt;&amp;1 {{!}} grep cc1|output=<pre>
/usr/libexec/gcc/x86_64-pc-linux-gnu/4.7.3/cc1 -E -quiet -v - -march=corei7-avx \
  -mcx16 -msahf -mno-movbe -mno-aes -mpclmul -mpopcnt -mno-abm -mno-lwp -mno-fma \
  -mno-fma4 -mno-xop -mno-bmi -mno-bmi2 -mno-tbm -mavx -mno-avx2 -msse4.2 -msse4.1 \
  -mno-lzcnt -mno-rdrnd -mno-f16c -mno-fsgsbase --param l1-cache-size=32 \
  --param l1-cache-line-size=64 --param l2-cache-size=6144 -mtune=corei7-avx
</pre>}}

== Distcc Extras ==

=== Distcc Monitors === 

Distcc ships with two monitors. The text-based one is always built and is called <code>distccmon-text</code>. Running it for the first time can be a bit confusing, but it is really quite easy to use. If you run the program with no parameter it will run once. However, if you pass it a number it will update every N seconds, where N is the argument you passed. 

The other monitor is only enabled through the <code>gtk</code> <code>USE</code> flag.  This one is GTK+ based, runs in an X environment and it is quite lovely.  For Gentoo, the GUI monitor has been called <code>distccmon-gui</code> for less confusion.  Elsewhere it may be referred to as <code>distccmon-gnome</code>.

{{RootCmd|distccmon-text N}}

or run <code>distccmon-gui</code>:

{{RootCmd|distccmon-gui}}

To monitor Portage's distcc usage you can use:
{{RootCmd|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-text N
|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-gui}}

{{Important|If your distcc directory is elsewhere, change the DISTCC_DIR variable accordingly.}}

== Links ==

* [http://blogs.gentoo.org/mgorny/2014/06/23/inlining-marchnative-for-distcc/ Inlining -march=native for distcc].

== Ringraziamenti ==

Si ringraziano le seguenti persone per i contributi apportati a questa guida:

* Lisa Seelye
* Mike Frysinger
* Erwin
* Sven Vermeulen
* Lars Weiler
* Tiemo Kieft
* nightmorph
