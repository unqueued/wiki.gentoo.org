Our focus in this article will be the configuration and setup for an D-Link System DWA-140 RangeBooster N USB Adapter.

== Device Info ==
{{Cmd|lsusb|output=
...
Bus 001 Device 003: ID 07d1:3c0a D-Link System DWA-140 RangeBooster N Adapter(rev.B2) [Ralink RT2870]
...
}}

== Installation ==
=== Kernel ===
{{Kernel|.config 3.0.6-gentoo|<pre>
Device Drivers --->
    [*] Network device support --->
         [*] Wireless LAN  --->
             <*> Ralink driver support  --->
                <*> Ralink rt27xx/rt28xx/rt30xx (USB) support
                [*] rt2800usb - Include support for unknown (USB) devices
</pre>}}
You can either build the options in the kernel or leave them as modules.

=== Firmware ===
You can go to the [http://www.ralinktech.com/en/04_support/support.php?sn=501 ralink site] for the firmware or, emerge {{Package|sys-kernel/linux-firmware}}.
{{Emerge|sys-kernel/linux-firmware}}
{{Note|I would suggest getting the firmware from their site because otherwise you will install firmware you do not need with {{Package|sys-kernel/linux-firmware}}.}}
If you go to the ralink site, get "rmware RT28XX/RT30XX USB series (RT2870/RT2770/RT3572/RT3070)".

{{RootCmd|ls /lib/firmware|output=
rt2870bin
}}

== Testing ==
{{RootCmd|ifconfig -a|output=<pre>
wlan0     Link encap:Ethernet  HWaddr 1c:bd:b9:25:d7:ba  
          BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)
</pre>}}
{{RootCmd|ifconfig wlan0 up}}
{{Cmd|dmesg|output=<pre>
usb 1-7: New USB device found, idVendor=07d1, idProduct=3c0a
usb 1-7: New USB device strings: Mfr=1, Product=2, SerialNumber=3
usb 1-7: Product: 11n Adapter
usb 1-7: Manufacturer: Ralink
usb 1-7: SerialNumber: 1.0
usb 1-7: usb_probe_device
usb 1-7: configuration #1 chosen from 1 choice
usb 1-7: adding 1-7:1.0 (config #1, interface 0)
rt2800usb 1-7:1.0: usb_probe_interface
rt2800usb 1-7:1.0: usb_probe_interface - got id
ieee80211 phy1: Selected rate control algorithm 'minstrel_ht'
drivers/usb/core/inode.c: creating file '004'
ADDRCONF(NETDEV_UP): wlan0: link is not ready
</pre>}}

{{RootCmd|iwlist wlan0 scan|output=<pre>
wlan0 Scan completed :
</pre>}}

== Connect ==
In this example we are going to install {{Package|net-misc/wicd}}.
{{Emerge|net-misc/wicd}}
{{USEflag
|package=net-misc/wicd
|X
|gtk
|libnotify
|ncurses
|nls
|pm-utils
|ioctl
}}
{{RootCmd|/etc/init.d/wicd start}}
You can use the GUI configuration (only with USE="gtk"). The wicd GUI is called wicd-gtk.

A terminal application for controlling wicd is called wicd-curses. (only with USE="ncurses")
{{RootCmd|ifconfig|output=<pre>
wlan0     Link encap:Ethernet  HWaddr 1c:bd:b9:25:d7:ba  
          inet addr:192.168.1.76  Bcast:192.168.1.255  Mask:255.255.255.0
          inet6 addr: fe80::1ebd:b9ff:fe25:d7ba/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:58 errors:0 dropped:0 overruns:0 frame:0
          TX packets:17 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:12206 (11.9 KiB)  TX bytes:2210 (2.1 KiB)
</pre>}}
{{RootCmd|ping www.gentoo.org -c 3|output=<pre>
PING www-bytemark-v4v6.gentoo.org (89.16.167.134) 56(84) bytes of data.
64 bytes from www.gentoo.org (89.16.167.134): icmp_req=1 ttl=44 time=204 ms
64 bytes from www.gentoo.org (89.16.167.134): icmp_req=2 ttl=44 time=134 ms
64 bytes from www.gentoo.org (89.16.167.134): icmp_req=3 ttl=44 time=227 ms

--- www-bytemark-v4v6.gentoo.org ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2333ms
rtt min/avg/max/mdev = 134.755/188.833/227.230/39.350 ms
</pre>}}

[[Category:Network devices]]
