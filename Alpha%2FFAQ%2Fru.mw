<languages />


{{Metadata|abstract=Цель этого FAQ — ответить на некоторые наиболее часто задаваемые вопросы, касающиеся Alpha на Gentoo и Alpha на Linux в целом.}}

This FAQ is [[Article description::intended to answer some of the most frequently asked questions relating to Alpha on Gentoo and Alpha on Linux in general.]]

=== Введение ===

Эта статья содержит ответы на наиболее часто задаваемые вопросы о Gentoo/Alpha и Alpha/Linux. Она рассчитана как на новичков, так и на опытных пользователей. 

== О проекте Alpha ==

=== Что такое Alpha? ===

Проект Alpha ответственен за сохранение дистрибутива Gentoo обновленным для платформы Alpha. Это в первую очередь администрирование переменной <var>KEYWORDS</var> в пакетах, портирование программного обеспечения, а также создание новых релизов. Проект Alpha стремится обеспечить рабочую среду для настольных компьютеров и серверов. 

== Архитектура Alpha ==


=== Архитектура Alpha мертва? ===

Вроде, да. HP прекратила принимать заказы на новые системы Alpha 27 апреля 2007 года и для опций и обновлений Alpha 25 апреля 2008.

=== Я могу запустить 32-bit приложения? ===

Нет, все системы Альфа используют чистое 64-битное ядро и чистое 64-битное пользовательское пространство. Вы не можете даже заставить gcc выводить 32-битный код с помощью  <code>-m32</code> флага компилятора. 

=== Alpha является big endian или little endian системой? ===

Системы Alpha являются little endian системами. Большая система Cray, использовавшая системы Alpha, была big endian, но она никогда не будет поддерживаться на Linux. 

=== Можно ли запускать Linux/x86 приложений на Alpha? ===

Да, но с x86 эмулятором, таким как [http://wiki.qemu.org/Main_Page QEMU]. В прошлом DEC/Compaq/HP поддерживали программу под названием <code>em86</code>, которая позволяла запускать Linux/x86 приложения на системах Linux/Alpha. Тем не менее, программа распространялась с закрытым исходным кодом и больше не поддерживается. Больше нет доступных бинарных файлов <code>em86</code>, которые совместимы с ABI gcc-3. 

=== Зачем устанавливать Gentoo на Alpha? ===

Следует признать, что вы можете найти более быстрые 64-разрядные системы, например amd64. Тем не менее, это не означает, что системы Alpha бесполезны. Ниже приведены несколько хороших причин, почему вы можете хотеть установить Linux на такого рода оборудования: 

* Вы можете превратить старый компьютер в нечто полезное. Из старых Alpha делают большие маршрутизаторы и серверы. Их производительность не так уж плоха.
* Вы узнаете о необычной компьютерной технике.
* Это круто. Сколько человек может сказать, что у них есть Linux, который работает на Alpha?

=== Где я могу купить Alpha? ===

Alpha, как правило, не доступны в вашем местном компьютерном магазине. [http://ebay.com eBay], как правило, хороший вариант, если предположить, что доставка не будет стоить вам слишком много. Есть несколько дилеров, бывшего в употреблении оборудования, которые могут быть найдены с помощью Google, однако большинство из них стоят  слишком много.

== Железо ==

=== Я открыл корпус на AlphaServer и теперь он не включается, что мне делать? ===

Убедитесь, что верхняя панель корпуса правильно закреплена на своем месте. В середине верхней панели корпуса есть небольшой кусочек металла, повернутый вниз. Когда верхняя панель правильно закреплена, этот кусочек металла оказывает давление на выключатель. Если выключатель не нажат, система не включится. 

== Флаги компилятора, специфичные для Alpha ==

=== Рекомендуется ли использовать флаги компилятора, специфичные для Alpha? ===

Как и с прочими оптимизациями компилятора, не перестарайтесь. Используйте эти флаги с осторожностью и вы получите стабильную, быструю систему; слишком агрессивное использование этих флагов может серьезно повредить систему. Если сомневаетесь, оставьте флаг выключенным. Для получения более подробной информации обратитесь к руководству <code>gcc</code>. 

===  Как осуществить оптимизацию для конкретного набора инструкций и модели планировщика? ===

Оптимизация для конкретного набора инструкций и модели планировщика осуществляется посредством флага <code>-mcpu=XXX</code>, где XXX — тип процессора. Допустимые типы процессоров таковы: <code>ev4</code>, <code>ev45</code>, <code>ev5</code>, <code>ev56</code>, <code>pca56</code>, <code>ev6</code> и <code>ev67</code>. Если флаг <code>-mcpu=XXX</code> не используется, <code>gcc</code> будет использовать по умолчанию тип процессора той системы, на которой он был собран. Флаг <code>-mcpu=</code> соответствует флагу <code>-march=</code> на x86. 

{{Note|Пользователям AlphaServer 800 следует использовать тип процессора <code>ev5</code>. Существуют известные проблемы, связанные с использованием типа процессора <code>ev56</code>; в частности, Xorg может полностью заблокировать систему.}}

=== Как можно установить модель планировщика без изменения набора инструкций? ===

Установить модель планировщика без изменения набора инструкций можно посредством флага <code>-mtune=XXX</code>, где XXX — нужный тип процессора. Допустимые типы процессоров таковы: <code>ev4</code>, <code>ev45</code>, <code>ev5</code>, <code>ev56</code>, <code>pca56</code>, <code>ev6</code> и <code>ev67</code>. Флаг <code>-mcpu=</code> подразумевает флаг <code>-mtune=</code>, поэтому, если установлен <code>-mcpu=</code>, <code>-mtune=</code> устанавливать необязательно. Флаг <code>-mtune=</code> соответствует флагу <code>-mcpu=</code> на x86.

=== Как можно включить числа с плавающей точкой с программной поддержкой? ===

Числа с плавающей точкой с программной поддержкой можно включить при помощи флага <code>-mieee</code>. Этот флаг включает программную поддержку для правильной поддержки денормализованных чисел и исключительных значений IEEE, таких как не-число и плюс/минус бесконечность. 

Этот флаг должен присутствовать в глобальной переменной <code>CFLAGS</code> и выключать его следует только в том случае, если вы точно знаете, что делаете. 

=== Как можно указать задержку памяти системы? ===

Задержку памяти системы можно указать посредством флага <code>-mmemory-latency=XXX</code>, где XXX — количество циклов системных часов. Этот флаг устанавливает время задержки, которое планировщик должен использовать для обращений к памяти. У <code>gcc</code> есть несколько предопределенных "типичных" значений, которые также можно указать во флаге <code>-mmemory-latency=XXX</code>. Это следующие значения: <code>L1</code> для Dcache, <code>L2</code> для Scache, <code>L3</code> для Bcache и <code>main</code> для основной памяти. 

Этот флаг лучше не включать в глобальную переменную <code>CFLAGS</code>, поскольку предпочтительное значение в значительной степени зависит от шаблона доступа к памяти собираемой программы. 

=== Как можно указать, чтобы статические данные помещались в небольшую область данных? ===

Указать, чтобы статические данные помещались в небольшую область данных можно посредством флага <code>-msmall-data</code>. Этот флаг заставит <code>gcc</code> использовать некоторые возможности архитектуры Alpha посредством хранения часто используемых фрагментов данных в особых участках, называемых участками малой памяти. Размер такого участка ограничен 64 Кб, что означает, что для доступа к данным, находящимся в нем, достаточно одной инструкции. 

Флаг <code>-fPIC</code> отменяет флаг <code>-msmall-data</code>, поэтому следует использовать флаг <code>-fpic</code>, если вы не хотите, чтобы флаг <code>-msmall-data</code> был отменен. 

Этот флаг лучше не включать в глобальную переменную <code>CFLAGS</code>, поскольку некоторые объекты требуют для своего хранения более 64 Кб, что приведет к ошибке gp_overflow ld. 

=== Как указать, что объектный код должен быть помещен в небольшую область текста? ===

Указать, чтобы объектный код помещался в небольшую область текста можно посредством флага <code>-msmall-text</code>. Этот флаг заставит <code>gcc</code> предполагать, что программа (или библиотека) полностью помещается в 4 Мб и, таким образом, к ней можно получить доступ посредством команды ветвления. В результате, количество инструкций, необходимое для вызова функции, уменьшается с 4 до 1. 

Этот флаг лучше не включать в глобальную переменную <code>CFLAGS</code>, поскольку размер некоторых программ (или библиотек) больше 4 Мб, что приведет к ошибке ld. 

=== Что делать, если какие-либо из этих флагов компилятора приводят к ошибке на стадии сборки, компоновки или запуска? ===

Как и в случае с [[#Флаги компилятора, специфичные для Alpha|CFLAGS]], использовать <code>CFLAGS</code> следует с осторожностью. Эти флаги могут повредить систему. В случае возникновения проблем, попробуйте использовать менее агрессивные флаги <code>CFLAGS</code>, прежде чем обратиться к [[#Как сообщать об ошибках?|обращаться к разделу об ошибках]]. 

== Загрузка Alpha и загрузчики ==

=== Что такое SRM? ===

SRM основан на спецификации Alpha Console Subsystem, которая предоставляет рабочее окружение для операционных систем OpenVMS, Tru64 UNIX и Linux. Для получения более подробной информации о SRM обратитесь к статье [https://cdn.rawgit.com/alphalinux/web/master/faq/SRM-HOWTO/index.html SRM Howto]. 

=== Что такое ARC? ===

ARC основан на спецификации Advanced RISC Computing (ARC), которая предоставляет рабочее окружение для Windows NT. 

=== Как узнать, какая прошивка установлена в системе, ARC или SRM? ===

При включении системы, в случае использования SRM, появится экран с синим фоном и белым текстом. Если используется ARC, появится графическая система загрузки. 

=== Какой загрузчик выбрать? ===

Если система поддерживает SRM, тогда следует использовать aboot. Если система поддерживает и SRM и ARCs (ARC, AlphaBIOS, ARCSBIOS), тогда следуйте инструкциям [https://cdn.rawgit.com/alphalinux/web/master/faq/x31.html SRM Firmware Howto], чтобы переключиться на SRM и использовать aboot. Если система использует только ARCs (Ruffian, xl, etc.), тогда следует использовать milo. 

=== Способен ли aboot загружать ядра с разделов EXT4, XFS, ReiserFS или JFS? ===

Нет, <code>aboot</code> поддерживает только загрузку ядер с разделов <code>ext2</code> и <code>ext3</code>. По-прежнему можно использовать другие файловые системы для раздела root, необходимо только создать раздел {{Path|/boot}} с файловой системой <code>ext2</code> или <code>ext3</code>. 

Планируется добавление поддержки для ext4. Существуют патчи, добавляющие поддержку для [https://bugs.gentoo.org/show_bug.cgi?id=106855 ReiserFS], [https://bugs.gentoo.org/show_bug.cgi?id=107103 XFS] и [http://alphalinux.org/wiki/index.php/Aboot_EXT4_support ext4]. 

== Программное обеспечение ==

=== Как реализована поддержка Java на Alpha? ===

Существовали двоичные пакеты от Compaq/HP, которые назывались <code>compaq-jre</code> и <code>compaq-jdk</code>. Поддержка была прекращена, и эти пакеты были убраны из Gentoo 11 октября 2006 года. С тех пор Gentoo не поддерживает Java. 

=== Будет ли когда-нибудь реализована рабочая поддержка Java? ===

Существует возможность использования <code>icedtea</code> на Alpha, но мы не планируем ее поддерживать по причине высокой стоимости обслуживания, связанной с тестированием сотен дополнительных пакетов. 

=== Как реализована поддержка .NET на Alpha? ===

Ни одна из двух реализаций .NET с открытым кодом ([http://www.mono-project.com/Main_Page mono] и [http://www.dotgnu.org/ DotGNU]) не поддерживает архитектуру alpha. 

=== Что необходимо для реализации поддержки .NET? ===

Реализовать .NET на Alpha — задача непростая. Для этого необходимо написать все макросы генерации кода ассемблера для JIT (just in time) компилятора, а также написать функции, специфичные для архитектуры (распределители регистров и так далее). 

== Ядро Alpha Linux ==

=== Какой исходный код ядра выбрать? ===

Рекомендуется использовать <code>gentoo-sources</code>. Также поддерживается <code>vanilla-sources</code>. Чтобы определить, какой исходный код вам больше подходит, читайте статью [[Kernel/Overview/ru|Руководство по ядру Gentoo]].

=== Моя система с ядром kernel-2.6 сломана, я могу собрать систему с ядром версии 2.4? ===

Alpha не поддерживает ядро версии 2.4 и соответствующий профиль с января 2008 года. Собрать систему Gentoo с ядром версии 2.4 технически возможно (ядро находится в дереве portage), однако для этого пользователям понадобится самим поставить маску на все пакеты, поддерживающие только ядро версии 2.6, и такая система не будет поддерживаться разработчиками. 

Команда Alpha просматривает все сообщения об ошибках, связанных с неработающими системами, основанными на ядре 2.6, и пытается оказывать поддержку по мере возможности. 

=== Поддерживается ли hardened-source? ===

Короткий ответ — нет. Он поддерживался какое-то время назад, но мы потеряли аппаратуру и куратора, поэтому теперь он не поддерживается. Если вам это интересно и вы хотите продолжить начатую работу, свяжитесь с нами. 

=== Ядро версии 2.6 поддерживает Alpha SMP? ===

В прошлом эта поддержка несколько раз была сломана, однако ядра современных версий работают нормально. 

== Как помочь проекту Alpha ==

=== Как сообщать об ошибках? ===

Если вы обнаружили ошибку или хотите прислать нам патч, создайте сообщение об ошибке. Это занимает не много времени, и мы очень ценим вашу помощь. Прочитайте статью [[Bugzilla/Guide Gentoo|Gentoo Bug Reporting Guide]]. 

=== How can I help the Alpha project? ===

Пользователи могут помочь проекту следующими способами: 

* Созданием ясных и кратких сообщениями об [[#Как сообщать об ошибках?|ошибках]].
* Тестированием программного обеспечения, у которого еще нет ключевого слова <code>~alpha</code>.
* Ответами на вопросы в [https://www.gentoo.org/get-involved/mailing-lists/ списках рассылки], на [https://forums.gentoo.org/viewforum-f-32.html forum] и на канале IRC.
* Присыланием патчей.
* Также можно стать [https://wiki.gentoo.org/wiki/Project:Alpha/Arch_tester AT].

=== Is there an Alpha arch testers project? ===

Yes, see the [[Project:Alpha/Arch_tester|Alpha arch testers project]] page for details. 

== Устранение проблем ==

=== Почему Xorg приводит к зависанию системы? ===

Обычно причиной этого является неправильная установка -mcpu. Например, AlphaServer 800 следует собирать с флагом <code>ev5</code> для xorg '''и''' glibc. В противном случае возникнут нежелательные последствия. 

== Прочие источники информации ==

=== Почему не существует форума Gentoo on Alpha? ===

On the [https://forums.gentoo.org Gentoo Forums] there are several arch specific categories like [https://forums.gentoo.org/viewforum-f-24.html Gentoo on PPC] and [https://forums.gentoo.org/viewforum-f-24.html Gentoo on Sparc]. There is no Gentoo on Alpha category because there simply isn't enough Alpha activity on the forums to warrant one. All Alpha related posts should go in the [https://forums.gentoo.org/viewforum-f-32.html Gentoo on Alternative Architectures] category.

=== Where can I get more help or information about Alpha? ===

If any of your questions weren't answered here, you can try other resources like the [[Handbook:Alpha|Alpha Handbook]] or [[Project:Alpha|our project homepage]]. You can also ask us at {{IRC|gentoo-alpha|mode=webchat}} on irc.freenode.net, [https://forums.gentoo.org/viewforum-f-32.html Gentoo on Alternative Architectures Forum], or on the {{Mail|gentoo-alpha@lists.gentoo.org}} mailing list.

=== Where can I get more help or information about Alpha on Linux? ===

[http://alphalinux.org/wiki/index.php/Main_Page AlphaLinux.org] является основным информационным ресурсом для Alpha/Linux. 


[[Category:Core system]] {{Migrated|originalauthors=Thomas Cort, Brian Evans, nightmorph, Matt Turner}}
