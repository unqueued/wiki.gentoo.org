{{InfoBox stack
|{{InfoBox homepage|http://code.google.com/p/tint2/|header=true}}
}}
I wanted to use the launcher in tint2 and found out that gentoo does not have it built in

you need the tint2-svn version

I found these good links
[http://www.linuxandlife.com/2011/08/how-to-create-launcher-on-tint2.html]
[https://wiki.archlinux.org/index.php/Tint2]
[http://crunchbang.org/forums/viewtopic.php?id=16997]
[https://www.dropbox.com/s/gmko5d6sy8qjpao/tint2patchfiles.tar.gz]
Thank you all (I have used bits to make this page)

THIS IS WHAT I DID (please make this better)

{{Emerge|wmctrl xdotool}}

 svn checkout http://tint2.googlecode.com/svn/trunk/ tint2-read-only

 cd tint2-read-only

 wget https://dl.dropbox.com/s/gmko5d6sy8qjpao/tint2patchfiles.tar.gz?dl=1 -O tint2patchfiles.tar.gz

 If you don't already have imlib2 (for libstartup-notification) emerged cmake will fail:
 emerge --ask imlib2

 tar -xvzf tint2patchfiles.tar.gz
 patch -p0 < src-task-align.patch
 patch -p0 < freespace.patch
 patch -p0 < launcher_apps_dir-v2.patch
 cmake -DCMAKE_INSTALL_PREFIX=/usr ./
 make
 make install


and here are my config files
{{File|vi ~/.config/tint2/tint2rc||<pre>
# Tint2 config file
# Generated by tintwizard (http://code.google.com/p/tintwizard/)
# For information on manually configuring tint2 see http://code.google.com/p/tint2/wiki/Configure

# Background definitions
# ID 1
rounded = 7
border_width = 2
background_color = #000000 60
border_color = #FFFFFF 16

# ID 2
rounded = 5
border_width = 0
background_color = #FFFFFF 40
border_color = #FFFFFF 48

# ID 3
rounded = 5
border_width = 0
background_color = #FFFFFF 16
border_color = #FFFFFF 68

# Panel
panel_monitor = all
panel_position = bottom center horizontal
panel_size = 94% 30
panel_margin = 0 0
panel_padding = 7 0 7
panel_dock = 0
wm_menu = 0
panel_layer = top
panel_background_id = 1
panel_items = LTSBC

# Panel Autohide
autohide = 0
autohide_show_timeout = 0.3
autohide_hide_timeout = 2
autohide_height = 2
strut_policy = follow_size

# Taskbar
taskbar_mode = single_desktop
taskbar_padding = 2 3 2
taskbar_background_id = 0
taskbar_active_background_id = 0

# Tasks
urgent_nb_of_blink = 8
task_icon = 1
task_text = 1
task_centered = 1
task_maximum_size = 140 35
task_padding = 6 2
task_background_id = 3
task_active_background_id = 2
task_urgent_background_id = 2
task_iconified_background_id = 3

# Task Icons
task_icon_asb = 70 0 0
task_active_icon_asb = 100 0 0
task_urgent_icon_asb = 100 0 0
task_iconified_icon_asb = 70 0 0

# Fonts
task_font = sans 7
task_font_color = #FFFFFF 68
task_active_font_color = #FFFFFF 83
task_urgent_font_color = #FFFFFF 83
task_iconified_font_color = #FFFFFF 68
font_shadow = 0


# System Tray
systray = 1
systray_padding = 0 4 5
systray_sort = ascending
systray_background_id = 0
systray_icon_size = 16
systray_icon_asb = 70 0 0

# Clock
time1_format = %H:%M
time1_font = sans 8
time2_format = %A %d %B
time2_font = sans 6
clock_font_color = #FFFFFF 74
clock_padding = 1 0
clock_background_id = 0
clock_rclick_command = orage

# Tooltips
tooltip = 0
tooltip_padding = 2 2
tooltip_show_timeout = 0.7
tooltip_hide_timeout = 0.3
tooltip_background_id = 1
tooltip_font = sans 10
tooltip_font_color = #000000 80

# Mouse
mouse_middle = none
mouse_right = close
mouse_scroll_up = toggle
mouse_scroll_down = iconify

# Battery
battery = 1
battery_low_status = 10
battery_low_cmd = notify-send "battery low"
battery_hide = 98
bat1_font = sans 8
bat2_font = sans 6
battery_font_color = #FFFFFF 74
battery_padding = 1 0
battery_background_id = 0

#------------------------------------------  
  #LAUNCHER  
  #------------------------------------------  
  launcher_icon_theme = areao43
  launcher_padding = 2 2
  launcher_background_id = 1
  launcher_icon_size = 20
  launcher_item_app = /usr/share/applications/firefox-bin.desktop
  launcher_item_app = /usr/share/applications/xterm.desktop

# End of config
</pre>}}

and

{{File|sudo vi /usr/local/bin/launch||<pre>
#!/bin/bash  
  # there has to be at least one parameter, the name of the file to execute  
  if [ $# -lt 1 ]
  then
   echo "Usage: `basename $0` {executable_name parameters}"
   exit 1
  fi
  # if the program is not running (being managed by wmctrl), then start it  
  [ "`wmctrl -lx | tr -s ' ' | cut -d' ' -f1-3 | grep -i $1`" ] || (($*&) && (sleep 1))
  # now let's make sure all related windows are raised and brought to the front  
  for win in `wmctrl -lx | tr -s ' ' | cut -d' ' -f1-3 | grep -i $1 | cut -d' ' -f1`
  do
    wmctrl -i -a $win
  done
  exit 0
</pre>}}

[[Category:Software]]
