<languages />

{{Metadata|abstract=この記事では、Linux カーネルのコンフィグレーションとセットアップを手作業で行う方法について説明しています。自動的に行う方法は、genkernel の記事を参照してください。}}

この記事では、[[Article description::[[Kernel|Linux カーネル]] の設定とセットアップを手作業で行う方法]]について説明しています。「安全でデフォルトの」設定を行う方法は、[[genkernel]] の記事を参照してください。

== シンボリックリンクの作成 ==

{{Path|/usr/src/linux}} のシンボリックリンクは常に、現在使用中のカーネルのソースへ張られるべきです。このシンボリックリンクを張るのは、以下の3つの方法のいずれかで可能です。

1. <code>symlink</code> [[USE flag|USE フラグ]]を有効にして、カーネルソースをインストールする。この方法では、新たにインストールするカーネルソースを指す  {{Path|/usr/src/linux}} が作成されます。もしも必要ならば、以下の2つの方法で後ほど変更することもできます:

2. {{c|eselect}} でシンボリックリンクを設定する:

{{RootCmd|eselect kernel list|output=<pre>
Available kernel symlink targets:
[1] linux-3.3.8-gentoo
[2] linux-3.4.9-gentoo
</pre>}}

eselect は、利用可能なカーネルソースのリストを出力します。アスタリスクは、選択中のソースを示します。カーネルソースを、例えば2つ目の項目に変更するには:

{{RootCmd|eselect kernel set 2}}

3. 手作業でシンボリックリンクを設定する:

{{RootCmd|ln -sf /usr/src/linux-3.4.9-gentoo /usr/src/linux |
|ls -l /usr/src/linux |
|output=<pre>lrwxrwxrwx 1 root root 11 Aug 29 22:10 /usr/src/linux -> /usr/src/linux-3.4.9-gentoo</pre>
}}

<!-- 出力は ln コマンドのターゲットファイルと同じです。 -->

== コンフィグレーションツール ==

カーネルは、自身のコンフィグレーションのためにいくつかのツールを提供しています。

{| class="table table-striped table-condensed"
|-
! scope="col" width="15%" | コマンド
! 説明
|-
| {{c|make config}}
| テキストベースの設定。オプションは1つずつ尋ねられます。すべてのオプションに回答する必要があり、以前のオプションに順番を無視してアクセスすることはできません。
|-
| {{c|make menuconfig}}
| ncurses ベースの擬似グラフィカルメニュー(テキスト入力のみ)。メニュー内を移動して希望するオプションを変更します。
|-
| {{c|make defconfig}}
| ARCH が提供する defconfig ファイルのデフォルト値で新しい設定ファイルを生成します。ソースに付属していたデフォルト設定ファイルに戻すにはこのオプションを使用してください。
|-
| {{c|make nconfig}}
| ncurses ベースの擬似グラフィカルメニュー。{{Package|sys-libs/ncurses}} がインストールされている必要があります。
|-
| {{c|make xconfig}}
| Qt5 を利用するグラフィカルメニュー。{{Package|dev-qt/qtgui}} がインストールされている必要があります。
|-
| {{c|make gconfig}}
| GTK+ を利用するグラフィカルメニュー。{{Package|x11-libs/gtk+}}、{{Package|dev-libs/glib}}、{{Package|gnome-base/libglade}} がインストールされている必要があります。
|-
| {{c|make oldconfig}}
| カーネルバージョン間の違いを確認して更新し、そのカーネル向けの新しい {{Path|.config}} ファイルを作成します。
|-
| {{c|make olddefconfig}}
| ARCH が提供した defconfig ファイルのデフォルト値で新しい設定を生成しますが、同時に  {{Path|/usr/src/linux/.config}} にある {{Path|.config}} でセットされている以前のオプションすべてを維持します。これは、ハードウェアサポートに必要なすべての設定を持つ設定ファイルをバグ修正やセキュリティーパッチも得られるように更新できる、高速かつ安全な方法です。
|-
| {{c|make allyesconfig}}
| カーネルのすべての設定オプションを有効にします。これは、''すべての''カーネルオプションを <code>*</code> に設定します。このオプションを使う前に、現在のカーネル設定のバックアップをとってあるか必ず確認してください！
|}

他にも雑多なデフォルトの設定を作成するスクリプトがいくつかあります。これらを使うことでより込み入った設定を更に時短に行うことができます。makeのすべてのターゲットの一覧を見るには、次のコマンドを実行してください：

{{RootCmd|make help}}

== コンフィグレーション ==

このページは{{c|make menuconfig}}を用いた設定方法について述べていますが、手続きは他のメニューと似ています。

{{RootCmd|cd /usr/src/linux
|make menuconfig}}

== 操作方法 ==

表示されたメニューの青いバーはカーソルの位置を表しています。{{Key|↑}} や {{Key|↓}} 矢印キーでカーソルの位置を変更できます。{{Key|←}} や {{Key|→}} 矢印キーで下のメニューバーを横に移動でき、これによって {{Key|Enter}} キーが押されたときに何が起こるかが決まります。下のメニューバーの'''Select''' は '''--->''' で終わるメニューエントリーのサブメニューに切り替える一方、'''Exit''' はサブメニューを出ます。代わりに {{Key|Esc}} を2回押すことでアプリケーションを終了することもできます。

関連付けられた文字キー {{Key|A}}-{{Key|Z}} を押すと、カーソルの位置がその文字が太線になっている行に移動します。{{Key|Y}}、{{Key|M}}、{{Key|N}} キーはこの方法でのナビゲーションには使用できません; これらは別の用途のために特別な扱いになっています。Y、M、N で始まる行はその次の文字が太字になっており、これに跳ぶことができます。たとえば現在のカーソル位置から見て次の行が「N'''e'''twork Device Support --->」となっている場合、{{Key|E}} キーを押すとカーソルはその行に移動します。

以下のマークがメニューの行の先頭に現れることがあります：

{| class="table table-striped table-condensed"
|-
! scope="col" width="15%" | シンボル
! 説明
|-
| <code>[ ], [*]</code>
| 角括弧のオプションは有効または無効にすることができます。アスタリスクはそのメニュー項目が有効になっていることを表します。値は {{Key|space}} キーで変更可能です。また、 {{Key|Y}} キー ('''Y'''es) を押して選択されている項目を有効化したり {{Key|N}} キー ('''N'''o) を押して無効化することもできます。
<br />
オプションが有効化されている場合、選択されている機能/ドライバーはカーネル内に組み込まれてブート中いつでも利用可能になります。
|-
| <code>< >, <M>, <*></code>
| 山括弧のオプションは有効または無効にすることができますが、モジュールとして有効化することもできます (''M'' で表されます)。値は前と同じく {{Key|Y}}/{{Key|N}} キーを押して変更できるほか、{{Key|M}} キーを押して機能/ドライバーをモジュールとして有効化することができます。
<br />
区別については [[Kernel Modules]] の記事を見てください。
|-
| <code>{M}, {*}</code>
| 波括弧のオプションは有効化またはモジュールとして有効化することができますが無効化することはできません。これは他の機能/ドライバーがこの機能に依存しているために起こります。
|-
| <code>-M-, -*-</code>
| ハイフンに囲まれたオプションは、他の機能/ドライバーによって、表示されている形式で有効化されています。選択の余地はありません。
|}

さらに、メニュー項目の中には最後にタグがついているものもあります：

{| class="table table-striped table-condensed"
|-
! scope="col" width="15%" | タグ
! 説明
|-
| <code>(NEW)</code>
| このドライバは新しいものでまだ十分に安定していないかもしれません。
|-
| <code>(EXPERIMENTAL)</code>
| このドライバは実験的なもので安定していない可能性が高いです。
|-
| <code>(DEPRECATED)</code>
| このドライバは非推奨でほとんどのシステムにとって必要ではありません。
|-
| <code>(OBSOLETE)</code>
| このドライバは時代遅れで有効にするべきではありません。
|}

ほとんどのオプションには解説がついていて、{{Key|H}} キーを押すかメニューバーの '''Help''' を選ぶことで見ることができます。

=== ドライバの選択 ===

See the [[hardware detection]] article and the articles in the [[:Category:Hardware|Hardware]] category.

モジュールの検索

<code>menuconfig</code>を使って, {{Key|/}}の文字を押すとカーネルモジュールを検索事ができます.

As shown below, the search result will show numbers in front of the matches. Pressing {{Key|1}} in the example below would {{c|make menuconfig}} jump straight to the option ''Bluetooth device drivers'' in the menu structure.

{{KernelBox|title=Example output after searching for HCIBTUSB|1=
Symbol: BT_HCIBTUSB [{{=}}m]                       
Type  : tristate                               
Prompt: HCI USB driver                         
  Location:                                    
    -> Networking support (NET [{{=}}y])           
      -> Bluetooth subsystem support (BT [{{=}}y]) 
(1)     -> Bluetooth device drivers            
  Defined at drivers/bluetooth/Kconfig:5       
  Depends on: NET [{{=}}y] && BT [{{=}}y] && USB [{{=}}m]
}}

=== Enabling Gentoo Linux common settings ===

There is a kernel configuration option called <var>CONFIG_GENTOO_LINUX</var> only present in {{Package|sys-kernel/gentoo-sources}} and other [[Project:Kernel|Kernel Project]] maintained kernels. It does nothing on its own, but sets various required configuration options for typical installations.

This setting automatically selects <code>tmpfs</code> and <code>devtmpfs</code> support, which are needed for handling {{Path|/dev}} on Gentoo Linux, but might be expanded in the future to enable other mandatory settings for a Gentoo Linux system. For more information, read the help information available through the kernel configuration system as described earlier in this guide.

== ビルド ==

After configuration has been accomplished successfully, compile the kernel:

{{RootCmd|make}}

For processors with multiple cores, make all the cores do the work. Add the option <code>-j(<NUMBER_OF_CORES> + 1)</code>. For example, a dual core processor contains two logical cores plus one (2 + 1):

{{RootCmd|make -j3}}

A quad core system contains four logical cores plus one (4 + 1):

{{RootCmd|make -j5}}

== セットアップ ==

If drivers are activated as modules, they must be installed:

{{RootCmd|make modules_install}}

The modules will be copied to a sub directory of {{Path|/lib/modules}}.

To install the actual kernel:

{{RootCmd|make install}}

This command executes {{Path|/sbin/installkernel}}, which is part of the {{Package|sys-apps/debianutils}} package. ''The new kernel is installed into {{Path|/boot/vmlinuz-{version}}}. If a symbolic link {{Path|/boot/vmlinuz}} already exists, it is refreshed by making a link from {{Path|/boot/vmlinuz}} to the new kernel, and the previously installed kernel is available as {{Path|/boot/vmlinuz.old}}.'' (''installkernel'' [[man page]]). The same for {{Path|config}} and {{Path|System.map}} files. These symlinks are handy, because they always point to the newest kernel without changing the file path (e.g. they can be used in the bootloader configuration).

== ブートローダ ==

Change the system's [[bootloader]] configuration to pick up at boot the new kernel.

Finally restart the system with the new kernel.

== Comparing current kernel configuration with default configuration ==

Use the following procedure to get an overview of the kernel configuration settings that deviate from the default. Keep in mind that the modification of one configuration setting may alter additional configuration settings.

{{RootCmd
|cd /usr/src/linux
|cp .config ../.config.working
|make defconfig
|mv .config ../.config.default
|cp ../.config.working .config
|cd ..
|/usr/src/linux/scripts/diffconfig .config.working .config.default > .config.diff
}}

The search function in {{c|make menuconfig}} can be used to look up the symbols and their interpretations.
When you're done, clean up:

{{RootCmd
|cd /usr/src/
|rm .config.working .config.default .config.diff
}}

== See also ==

* {{See also|Genkernel}}
* {{See also|Kernel/Configuration/Kernel_Seeds}}
* {{See also|Kernel/Gentoo Kernel Configuration Guide}}

[[Category:Kernel]]
