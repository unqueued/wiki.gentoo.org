'''Corosync''' is the currently preferred [[cluster]] messaging layer in the Linux cluster community.  It is typically used with [[Pacemaker]] to set up Gentoo-based clusters.

==Installing==
Recently there has been a fair amount of standardization-oriented changes within the Linux cluster community.  Perhaps as a result, at present the version of Corosync available in the portage tree is out of date.  

===Download===
To get the absolutely latest version of Corosync installed (usually a good idea), you can take the following steps.

First, download the 'git HEAD' (latest release) ''corosync'' ebuild from [https://bugs.gentoo.org/attachment.cgi?id=320006 here] ({{Bug|429416}}) and temporarily install it in to your local tree.

{{Note|This is not normally recommended practice.  In any case, the local copy of the ebuild will disappear next time you do an ''emerge --sync''.}}

{{RootCmd|cd /usr/portage/distfiles/sys-cluster/corosync}}
{{RootCmd|wget -O corosync-9999.ebuild 'https://bugs.gentoo.org/attachment.cgi?id{{=}}320006'}}
{{RootCmd|ebuild corosync-9999.ebuild manifest}}

===Unmask===
Next, unmask the package.

{{RootCmd|echo '{{=}}sys-cluster/corosync-9999' >>/etc/portage/package.unmask}}

If you are on amd64 or another untested architecture, you may also need to do the following.

{{RootCmd|echo '{{=}}sys-cluster/corosync-9999 ~amd64' >>/etc/portage/package.keywords}}

===Install===
Now ''[[emerge]]'' the ''git'' HEAD release of corosync.

{{RootCmd|emerge -av '{{=}}sys-cluster/corosync-9999'}}

Unmask the ''git'' HEAD version (ie. ''-9999'') of pacemaker.
{{Note|At the time of writing, older versions of pacemaker in the portage tree spuriously require the 'sys-cluster/openais' package, which fails to build.}}

{{RootCmd|echo '{{=}}sys-cluster/pacemaker-9999' >>/etc/portage/package.unmask}}

If you are on ''amd64'' or another untested architecture, you may also need to un-archmask it as follows (replace ''amd64'' with your architecture). 

{{RootCmd|echo 'sys-cluster/pacemaker ~amd64' >>/etc/portage/package.keywords}}

Install pacemaker.

{{RootCmd|emerge -av sys-cluster/pacemaker}}

==Configuring==
Gentoo installs the example corosync configuration in to ''/etc/corosync/corosync.conf.example''.  First copy this to ''/etc/corosync/corosync.conf''.

{{RootCmd|cp /etc/corosync/corosync.conf.example /etc/corosync.conf}}

Then edit the file to express your appropriate configuration, using your favourite [[editor]].

The main resources for configuration are the man pages, accessible via:
{{Cmd|man corosync_overview}}
{{Cmd|man corosync.conf}}

For the ''quorum'' section, you can also review:
{{Cmd|man votequorum}}

===Note for two-node clusters===
If you only have two nodes, you will need to enable the ''two_nodes'' directive under the ''quorum{}'' section, ie:
<pre>
quorum {
 provider: corosync_votequorum
 two_nodes: 1
}
</pre>

===Note on hostnames===
When building clusters with Corosync and [[Pacemaker]], the primary management tool ''crm_mon'' will identify hosts based upon their hostname.  Therefore it is desirable to set a hostname that is definitely unique on each node.  You can achieve this easily in one of two ways, either setting up hostname entries on your DHCP server (if nodes are DHCP configured), or by setting the hostname from a unique identifier (such as the eth0 MAC address).  Here's my hack for the latter, which I run from a custom ''/init'' (passed as a kernel option to diskless nodes with [[NFS]] root):
<pre>
# set hostname
hostname `cat /sys/class/net/eth0/address|sed 's/://'`
# remove normal hostname script from startup sequence, ignoring errors
rm -f /etc/runlevels/boot/hostname 2>/dev/null
</pre>

==Running==
Corosync is managed as a standard Gentoo [[OpenRC]] service, ie. you can start and stop it as follows.

{{RootCmd|/etc/init.d/corosync start}}
{{RootCmd|/etc/init.d/corosync restart}}
{{RootCmd|/etc/init.d/corosync status}}
{{RootCmd|/etc/init.d/corosync stop}}

==Debugging==
Corosync logs to ''/var/log/cluster/corosync.log'' by default.  To view the log, run:
{{Cmd|tail -f /var/log/cluster/corosync.log}}

If you are having issues even starting Corosync successfull (such as receiving "Status: crashed" when executing ''/etc/init.d/corosync status''), then you can start the daemon manually with the -f (foreground) option as follows.  (You might also consider first enabling the ''log_to_stderr'' directive within ''/etc/corosync/corosync.conf'').

{{Cmd|/usr/sbin/corosync -f}}

==Next steps==
Once you have ''corosync'' installed and talking between a couple of machines, you may wish to move on to installing [[Pacemaker]].

==See also==
*[[Cluster]]
*[[logrotate]]

==External links==
*For help with configurations, try #linux-cluster (Corosync-oriented) or #linux-ha (Pacemaker-oriented) on Freenode [[IRC]].

[[Category:Cluster messaging layers]]
[[Category:Software]]
[[Category:Server_and_Security]]
{{stub}}
