<languages />
<translate>

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox wikipedia|header=true}}
|{{InfoBox gitweb|https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git/tree/fs/proc/|raw=true}}
|{{InfoBox odoc|https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git/tree/Documentation/filesystems/proc.txt}}
}}

'''procfs''' ('''proc'''ess '''f'''ile'''s'''ystem) is [[Article description::a virtual [[filesystem]] (virtual means it takes up no disk space) to output and change system and process information.]] It is generated by the [[kernel]] and mounted at {{Path|/proc}}. The information in the [[sysfs]] filesystem replaces more and more system information of procfs.

== Installation ==

=== Kernel ===

Activate the following kernel options:

{{KernelBox|title=Enable procfs support|1=
File systems  --->
    Pseudo filesystems  --->
        <*> /proc file system support
}}

== Configuration ==

=== OpenRC ===

{{Path|/proc}} is mounted by OpenRC's {{Path|/lib/rc/sh/init.sh}}<ref name=bug406263>{{Bug|406263#c2|text=Bug 406263 &ndash; Remove the two lines concerning proc and shm since they don't reflect the {{Path|/etc/fstab}} file that is default in current state3 installation}}, [https://bugs.gentoo.org/ Gentoo's Bugzilla Main Page], (Last modified) April 29th, 2012. Retrieved on October 23rd, 2015.</ref> 

{{Cmd|mount {{!}} grep proc|output=<pre>proc on /proc type proc (rw,nosuid,nodev,noexec,relatime)</pre>}}

The init service {{Path|/etc/init.d/procfs}} goes in runlevel {{c|boot}}.

{{Cmd|/sbin/rc-update {{!}} grep procfs|output=<pre>
procfs | boot
</pre>}}

=== Restricting access to PID directories ===

procfs provides the <code>hidepid</code> mount option to restrict access to the {{Path|/proc/<pid>}} directories by other users. This is a hardening technique that can make it more difficult for malicious local users to gather information about the processes of other users<ref>Vasiliy Kulikov. [https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=0499680a42141d86417a8fbaa8c8db806bea1201 procfs: add hidepid= and gid= mount options], [https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/ Linux kernel source tree], January 10th, 2012. Retrieved on July 31st, 2015.</ref>.

{| class="table table-condensed table-striped"
|-
! Value
! Description
|-
| <code>hidepid=0</code>
| The file located in {{Path|/proc/<pid>/*}} will be world readable. This is the default behavior.
|-
| <code>hidepid=1</code>
| The {{Path|/proc/<pid>}} directories are visible by all users, but users can only access the {{Path|/proc/<pid>}} directories they own. This will protect files such as {{Path|/proc/<pid>/cmdline}}, which may contain sensitive information.
|-
| <code>hidepid=2</code>
| Same as <code>hidepid=1</code> but the {{Path|/proc/<pid>}} directories of other users are hidden. Since this will hide process information from all users except root, it may be useful to allow access to privileged users such as those belonging to the {{c|wheel}} group.
|}

{{FileBox|filename=[[:fstab|/etc/fstab]]|title=Hiding process information from other users except those in the wheel group|1=
proc     /proc     proc     nosuid,nodev,noexec,hidepid=2,gid=wheel     0 0
}}

== Usage ==

See the [[Wikipedia:procfs#Linux|Wikipedia article]] for the file's purpose.

Use {{c|cat}} to read the information, e.g. output the version of the currently running kernel:

{{Cmd|cat /proc/version}}

To set values at runtime - if possible - use {{c|echo}}, e.g. to enable the [[Magic SysRQ|Magic SysRQ]] keys:

{{RootCmd|echo 1 > /proc/sys/kernel.sysrq}}

=== sysctl ===

{{c|[[wikipedia:sysctl|sysctl]]}} is a mechanism to modify certain kernel parameters at runtime. It is part of procfs and the files are located at {{Path|/proc/sys/}}. {{Path|[https://git.kernel.org/cgit/linux/kernel/git/stable/linux-stable.git/tree/Documentation/sysctl /usr/src/linux/Documentation/sysctl/]}} contains documentation of most files.

{{c|sysctl}} works with keys value pairs. The keys can be assembled from the file path by removing the {{Path|/proc/sys}} prefix and replacing the forward slash with a dot. For example {{Path|/proc/sys/kernel/sysrq}} becomes <code>kernel.sysrq</code>.

It is certainly possible to modify files in {{Path|/proc}} like performed above, however the {{c|sysctl}} tool (part of {{Package|sys-process/procps}}) can modify {{Path|/proc}} information in a much more structured way:

To enable the magic sysrq keys:

{{RootCmd|sysctl kernel.sysrq{{=}}1}}

To show all sysctl keys and their current values:

{{RootCmd|sysctl -a}}

To configure kernel parameters at system boot, add them to a {{Path|.conf}} file in {{Path|/etc/sysctl.d/}} directory. The recommended location for local settings is {{Path|/etc/sysctl.d/local.conf}}. The legacy file {{Path|/etc/sysctl.conf}} is also supported. To enable the magic SysRq key at boot:

{{FileBox|filename=/etc/sysctl.d/local.conf|1=
kernel.sysrq=1
}}

==== OpenRC ====

The sysctl service reads the files at boot and executes settings. The service is enabled by default.

==== systemd ====

Besides the {{Path|/etc/sysctl.d/}} directory [[systemd]] also knows the {{Path|/usr/lib/sysctl.d/}} directory. This second directory is for package-provided configuration files.

The ''systemd-sysctl'' service is enabled by default.

== See also ==

* [[Security Handbook/Kernel security#The proc filesystem|proc filesystem (Security Handbook)]]

== References ==

{{reflist}}

</translate>

[[Category:Filesystems]]
