{{DISPLAYTITLE:AMDGPU}}{{InfoBox stack
|{{InfoBox homepage|http://support.amd.com/en-us/download/linux|header=true}}
|{{InfoBox wikipedia|Free_and_open-source_graphics_device_driver#amdgpu}}
}}

'''AMDGPU''' is [[Article description:: the next generation family of open source graphics drivers using the new Display Core (DC) framework for Vega GPUs and Raven Ridge APUs. It is however also capable of handling ''newer'' AMD/ATI Radeon graphics cards based on GCN1.1+, namely the Southern Islands, Sea Islands, Volcanic Islands, and Arctic Islands chipsets.]]

If the card in question does not appear in the [[#Feature support|Feature support]] section below, it is not supported by AMDGPU. In that case check the [[radeon]] article, which contains instructions for older open-source AMD/ATI Radeon graphics card drivers.

Prior to Kernel 4.15 Display Core (DC, developed from Display Abstraction Layer, DAL) was not included in the vanilla kernel sources, thus AMDGPU was not able to provide graphics output to a monitor on VEGA and later chips.

== Installation ==

Setting up a system to use AMDGPU requires identifying the proper card, installing the corresponding firmware, configuring the kernel, and installing the X11 driver.

=== Prerequisites ===

==== Hardware detection ====

To choose the right driver, first detect the graphics card. Use [[Hardware detection|lspci]] for this task:

{{RootCmd|lspci {{!}} grep -i VGA}}

Check the output for one of the product names listed in the table below.

==== Feature support ====

{| class="table table-condensed table-striped"
|-
! Family
! Chipset name
! Architecture<sup>A</sup>
! Product name
! OpenGL
! OpenGL ES
! VIDEO_CARDS
|-
| Southern Islands<sup>3</sup>
| CAPE VERDE, PITCAIRN, TAHITI, OLAND, HAINAN
| GCN1.1+
| HD7750-HD7970, R9 270, R9 280, R9 370X, R7 240, R7 250 
| {{Yes|4.1}}
| {{Yes|3.0}}
| ''amdgpu radeonsi''
|-
| Sea Islands<sup>1</sup>
| BONAIRE, KABINI, KAVERI, HAWAII, MULLINS
| GCN2.x
| HD7790, R7 260, R9 290, R7 360, R9 390
| {{Yes|4.3}}
| {{Yes|3.1}}
| ''amdgpu radeonsi''
|-
| Volcanic Islands
| CARRIZO, FIJI, STONEY, TONGA, TOPAZ, WANI
| GCN3.x
| R9 285, R9 380, R9 380X, R9 Fury, R9 Nano, R9 Fury X, Pro Duo
| {{Yes|4.3}}
| {{Yes|3.1}}
| ''amdgpu radeonsi''
|-
| Arctic Islands<sup>2</sup>
| POLARIS10, POLARIS11, POLARIS12
| GCN4.x
| RX 460, RX 470, RX 480, RX 540, RX 550, RX 560, RX 570, RX 580, RX 590
| {{Yes|4.3}}
| {{Yes|3.1}}
| ''amdgpu radeonsi''
|-
| Vega<sup>4</sup>
| VEGA10, RAVEN<sup>5</sup>
| GCN5.x, DCN1.0<sup>5</sup>
| RX Vega 56, RX Vega 64, Raven Ridge APU series<sup>5</sup>
| {{Yes|4.5}}
| {{Yes|3.2}}
| ''amdgpu radeonsi''
|-
| Navi
| NAVI10
| RDNA
| RX 5700, RX 5700 XT
| {{Yes|4.6}}
| {{Yes|???}}<sup>6</sup>
| ''amdgpu radeonsi''
|}

: <sup>A</sup> GCN stands for ''Graphics Core Next'' Architecture and was introduced with the Radeon HD7000 series (GCN1.0). ''Raven Ridge'' APUs feature a mobile Vega graphics core and are referred to as DCN1.0.
: <sup>1</sup> Support is optional in the kernel.
: <sup>2</sup> Since kernel 4.7-rc6
: <sup>3</sup> Experimental, optional support added since kernel 4.9-rc1
: <sup>4</sup> usable for graphics output since kernel 4.15
: <sup>5</sup> planned for kernel 4.16 to be finally usable<ref>Phoronix - [https://www.phoronix.com/scan.php?page=news_item&px=Raven-Ridge-APU-Not-HBM2 Report: Ryzen "Raven Ridge" APU Not Using HBM2 Memory]</ref><ref>Phoronix - [https://phoronix.com/scan.php?page=news_item&px=AMDGPU-DC-25-DCN 25 More AMDGPU DC Patches, Mostly Focused On Raven DCN]</ref>
: <sup>6</sup> Unsure of OpenGL ES support at this time.

=== Firmware ===

It is necessary to install the proper firmware (or microcode) for your card. Firmware files are provided by {{Package|sys-kernel/linux-firmware}}. Make sure you have all necessary files for your hardware in your configuration file if you use the savedconfig flag.

{{USEflag|package=sys-kernel/linux-firmware}}

{{Emerge|sys-kernel/linux-firmware}}

The firmware files installed this way will be incorporated into the kernel.

=== Kernel ===

{{Note|For ease of installation, it is recommended to choose "AMD GPU" as a module (M) and skip the firmware selection below.  This will load the driver a little later once udev becomes active. The firmware will never need to be manually managed in this case.}}

Set the following kernel options for the graphic chipsets mentioned above:

{{KernelBox|1=
Processor type and features  --->
    [*] MTRR (Memory Type Range Register) support
Device Drivers  --->
    Graphics support  --->
        <*/M> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
              [*]   Enable legacy fbdev support for your modesetting driver
        <   > ATI Radeon
        <M/*> AMD GPU
              [ /*] Enable amdgpu support for SI parts
                    (only needed for Southern Islands GPUs with the amdgpu driver)
              [ /*] Enable amdgpu support for CIK parts 
                    (only needed for Sea Islands GPUs with the amdgpu driver)
              ACP (Audio CoProcessor) Configuration  ---> 
                  [*] Enable AMD Audio CoProcessor IP support (CONFIG_DRM_AMD_ACP)
                        (only needed for APUs)
              Display Engine Configuration  --->
                  [*] AMD DC - Enable new display engine
                  [ /*] DC support for Polaris and older ASICs
                        (only needed for Polaris, Carrizo, Tonga, Bonaire, Hawaii)
                  [ /*] AMD FBC - Enable Frame Buffer Compression
                  [ /*] DCN 1.0 Raven family
                        (only needed for Vega RX as part of Raven Ridge APUs)
        <*/M> HSA kernel driver for AMD GPU devices
    <*/M> Sound card support  --->
        <*/M> Advanced Linux Sound Architecture  --->
            [*]   PCI sound devices --->
                  HD-Audio  --->
                      <*> HD Audio PCI
                      [*] Support initialization patch loading for HD-audio
                      <*> whatever audio codec your soundcard needs
                      <*> Build HDMI/DisplayPort HD-audio codec support
                  (2048) Pre-allocated buffer size for HD-audio driver
}}

{{Note|When using AMDGPU, it is recommended to '''unset''' the ATI Radeon option so that the radeon module is not built. Or alternatively, the module can be built and [[Kernel Modules#Blacklist|blacklisted]] (after rebooting check with {{c|lsmod {{!}} grep radeon}} to see if the blacklisting worked). The amdgpu and radeon modules are not meant to be loaded simultaneously, unless, for example [[multiseat]], system requires it.}}

The options from the Sound card support menu need only to be set if the card supports HDMI or DisplayPort audio and you want to use it. On newer kernels where Enable AMD Audio CoProcessor IP support appears, that should also be set.

AMDGPU with Display Core works primarily for VEGA10 (GCN5.0) and RAVEN (with DCN 1.0) GPUs/APUs. Older cards (GCN1.1 and newer) can be activated in the kernel or using the kernel command line option <var>amdgpu.dc=1</var> and provide better (but experimental) support than the older radeon kernel module.

See the [[radeon]] article for more details about using HDMI/DisplayPort audio.

==== Incorporating firmware ====

The firmware package installed in [[#Firmware|an earlier section]] provides files in {{Path|/lib/firmware/amdgpu}} (for Volcanic Islands and Arctic Islands cards) and/or {{Path|/lib/firmware/radeon}} (for Southern Islands and Sea Islands cards). Configure the kernel to use the correct firmware files by setting the following options:

{{KernelBox|title=Including firmware in the kernel (prior to 4.18)|
Device Drivers  --->
    Generic Driver Options  --->
        -*- Userspace firmware loading support
        [*] Include in-kernel firmware blobs in kernel binary
            (amdgpu/<YOUR-MODEL>.bin or radeon/<YOUR-MODEL>.bin)
            (/lib/firmware) Firmware blobs root directory
}}

{{KernelBox|title=Including firmware in the kernel (4.18 and later)|
Device Drivers  --->
    Generic Driver Options  --->
        Firmware loader --->
          -*- Firmware loading facility
          (amdgpu/<YOUR-MODEL>.bin or radeon/<YOUR-MODEL>.bin) Build named firmware blobs into the kernel binary
          (/lib/firmware) Firmware blobs root directory
}}

<code>amdgpu/<YOUR-MODEL>.bin</code> or <code>radeon/<YOUR-MODEL>.bin</code> should be replaced with the full list of filenames given with the chipset's name in the table below, separated by spaces. Use {{C|echo}} to expand the filenames. E.g. for Volcanic Islands/TONGA, run:

{{Cmd|echo amdgpu/tonga_{ce,k_smc,mc,me,mec2,mec,pfp,rlc,sdma1,sdma,smc,uvd,vce}.bin|output=<code>amdgpu/tonga_ce.bin amdgpu/tonga_k_smc.bin amdgpu/tonga_mc.bin amdgpu/tonga_me.bin amdgpu/tonga_mec2.bin amdgpu/tonga_mec.bin amdgpu/tonga_pfp.bin amdgpu/tonga_rlc.bin amdgpu/tonga_sdma1.bin amdgpu/tonga_sdma.bin amdgpu/tonga_smc.bin amdgpu/tonga_uvd.bin amdgpu/tonga_vce.bin</code>}}

Then <code>amdgpu/tonga_ce.bin amdgpu/tonga_k_smc.bin amdgpu/tonga_mc.bin amdgpu/tonga_me.bin amdgpu/tonga_mec2.bin amdgpu/tonga_mec.bin amdgpu/tonga_pfp.bin amdgpu/tonga_rlc.bin amdgpu/tonga_sdma1.bin amdgpu/tonga_sdma.bin amdgpu/tonga_smc.bin amdgpu/tonga_uvd.bin amdgpu/tonga_vce.bin</code> is the string that should be put into the kernel configuration.

{{Important|If the amdgpu module is compiled as a loadable kernel module (i.e. AMDGPU in the kernel configuration is set to <code>M</code>), the firmware files need to be present on the filesystem at the time the module is loaded. In particular, if the module is loaded from an initrd, the firmware also needs to be included in the initrd. On the other hand, if the module is built into the kernel, the firmware files will also be built into the kernel itself.}}

After expanding the firmware file names from the following table and copying them into the kernel configuration, save the configuration, then compile and install the new kernel and modules.

{{Important|More recent kernels (Aug. 2018, at least 4.15.x and up, and Dec. 2018, 4.19.9<ref>[https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?h=linux-4.19.y&id=39bdb32876df3710825d33b5c455ec2ffa9db64e Linux kernel commit 39bdb32 with added firmware files to POLARIS10 and POLARIS11]</ref> and up) require an updated set of firmware files than listed here in order to boot successfully . Make sure that {{Package|sys-kernel/linux-firmware}} is updated. If you use the savedconfig USE flag for this package, make sure that the savedconfig configuration file is updated with the new firmware files listed. Incorporate all the newly added files to your kernel configuration file in the firmware line then rebuild and install your new kernel image. Otherwise your boot will likely fail with a blank screen and firmware load errors thrown to the kernel log.}}

{| class="table table-condensed table-striped"
|-
! Family
! Chipset name
! Product name
! Firmware
|-
| rowspan="5" | Southern Islands
| CAPE VERDE
| HD7750, HD7770, R7 250, R7 250X, R9 370X
| {{Path|radeon/{verde_{ce,mc,me,pfp,rlc,smc},TAHITI_{uvd,vce&#125;&#125;.bin}}
|-
| PITCAIRN
| HD7800, R9 270X
| {{Path|radeon/{pitcairn_{ce,mc,me,pfp,rlc,smc,k_smc},TAHITI_{uvd,vce&#125;&#125;.bin}}
|-
| TAHITI
| HD7870 XT, HD7900, R9 280X
| {{Path|radeon/{tahiti_{ce,mc,me,pfp,rlc,smc},TAHITI_{uvd,vce&#125;&#125;.bin}}
|-
| OLAND
| HD8550M-HD8790M, R7 240
| {{Path|radeon/{oland_{ce,mc,me,pfp,rlc,smc},TAHITI_uvd}.bin}}
|-
| HAINAN
| HD8970M
| {{Path|radeon/{hainan_{ce,mc,me,pfp,rlc,smc},TAHITI_uvd}.bin}}
|-
| rowspan="5" | Sea Islands
| BONAIRE
| HD7790, R7 260, R7 260X, R7 360
| {{Path|radeon/bonaire_{ce,k_smc,mc,me,mec,pfp,rlc,sdma1,sdma,smc,uvd,vce}.bin}}
|-
| KABINI
| HD8180-HD8400
| {{Path|radeon/kabini_{ce,me,mec,pfp,rlc,sdma1,sdma,uvd,vce}.bin}}
|-
| KAVERI
| 
| {{Path|radeon/kaveri_{ce,me,mec2,mec,pfp,rlc,sdma1,sdma,uvd,vce}.bin}}
|-
| HAWAII
| R9 290, R9 290X, R9 390, R9 390X
| {{Path|radeon/hawaii_{ce,k_smc,mc,me,mec,pfp,rlc,sdma,sdma1,smc,uvd,vce}.bin}}
|-
| MULLINS
| 
| {{Path|radeon/mullins_{ce,me,mec,pfp,rlc,sdma1,sdma,uvd,vce}.bin}}
|-
| rowspan="5" | Volcanic Islands
| CARRIZO
| 
| {{Path|amdgpu/carrizo_{ce,me,mec2,mec,pfp,rlc,sdma1,sdma,uvd,vce}.bin}}
|-
| FIJI
| R9 Fury, R9 Fury X, R9 Nano, Pro Duo
| {{Path|amdgpu/fiji_{ce,mc,me,mec2,mec,pfp,rlc,sdma1,sdma,smc,uvd,vce}.bin}}
|-
| TONGA
| R9 285, R9 380, R9 380X
| {{Path|amdgpu/tonga_{ce,k_smc,mc,me,mec2,mec,pfp,rlc,sdma1,sdma,smc,uvd,vce}.bin}}
|-
| TOPAZ
| R7 M260, R7 M265, R7 M340, R7 M360, R7 M360, R7 M370, R7 M440, R7 M445, R7 M460, R7 M465
| {{Path|amdgpu/topaz_{ce,mc,me,mec2,mec,pfp,rlc,sdma1,sdma,smc}.bin}}
|-
| STONEY
|
| {{Path|amdgpu/stoney_{ce,me,mec,pfp,rlc,sdma,uvd,vce}.bin}}
|-
| rowspan="3" | Arctic Islands
| POLARIS10
| RX 470, RX 480, RX 570, RX 580, RX 590
| {{Path|amdgpu/polaris10_{ce,ce_2,k_smc,k2_smc,k_mc,mc,me,me_2,mec2,mec2_2,mec,mec_2,pfp,pfp_2,rlc,sdma1,sdma,smc,smc_sk,uvd,vce}.bin}}
|-
| POLARIS11
| RX 460, RX 550 640SP, RX 560
| {{Path|amdgpu/polaris11_{ce,k_smc,k2_smc,k_mc,mc,me,mec2,mec,pfp,rlc,sdma1,sdma,smc,smc_sk,uvd,vce}.bin}}
|-
| POLARIS12
| RX 540, RX 550
| {{Path|amdgpu/polaris12_{ce,ce_2,k_mc,k_smc,mc,me,me_2,mec,mec2,mec2_2,mec_2,pfp,pfp_2,rlc,sdma,sdma1,smc,uvd,vce}.bin}}
|-
| rowspan='3' | Vega
| VEGA10
| RX Vega 56, RX Vega 64
| {{Path|amdgpu/vega10_{acg_smc,asd,ce,gpu_info,me,mec,mec2,pfp,rlc,sdma,sdma1,smc,sos,uvd,vce}.bin}}
|-
| RAVEN
| Raven Ridge APU series
| {{Path| amdgpu/raven_{asd,ce,gpu_info,me,mec,mec2,pfp,rlc,sdma,vcn}.bin}}
|-
| VEGA12
| Raven 2 Vega Mobile
| {{Path|amdgpu/vega12_{asd,ce,gpu_info,me,mec,mec2,pfp,rlc,sdma,sdma1,smc,sos,uvd,vce}.bin}}
|-
| rowspan='1' | Navi
| NAVI10
| RX 5700, RX 5700 XT
| {{Path|amdgpu/navi10_{asd,ce,gpu_info,me,mec2,mec,pfp,rlc,sdma1,sdma,smc,sos,vcn}.bin}}
|}

=== X11 driver ===

==== USE flags ====

Set the <var>USE</var> flags for the <code>amdgpu</code> driver as needed.

{{USEflag|package=x11-drivers/xf86-video-amdgpu}}

The package will be automatically emerged as a dependency of {{Package|x11-base/xorg-drivers}} after setting <var>VIDEO_CARDS</var> following the instructions in the next section.

==== Emerge ====

Portage uses the <var>VIDEO_CARDS</var> variable for enabling support for various graphics cards in packages. Setting <var>VIDEO_CARDS</var> to <code>amdgpu radeonsi</code> (see the [[#Feature support|feature matrix]] section above) and asking Portage to update changed USE flags in the [[World set (Portage)|@world set]] will pull in the correct driver:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
VIDEO_CARDS="amdgpu radeonsi"
}}

{{Note|In any case <code>radeonsi</code> has to be included for {{Package|media-libs/mesa}}.}}

{{Emerge|params+=--changed-use|@world}}

The system should now be prepared to use amdgpu after the next reboot.

== Power management ==

{{Note|This section only covers dpm method. This method is only available for GPUs from R6xx -series onwards. Users of AMDGPU driver are thus automatically covered. Older dynpm and profile methods aren't covered here. Users who want to read about those should read [[Radeon#Power_management|radeon]] article instead.}}

{{Important|This section assumes that card0 is the GPU users want to adjust. Users should check that paths like {{Path|/sys/class/drm/card0/}} belong to the right GPU. Users with more than one GPU will most likely have more than just card0 entry under said locations.}}

=== dpm ===

In most cases since Linux 3.13 dpm is the default power management method. Unlike with [[#dynpm|dynpm]] and [[#profile|profile]] methods enabling or disabling dpm must be done via kernel command line. Users who have GPUs older than HD5000 -series may need to add <code>radeon.dpm=1</code> on kernel command-line to enable dpm.

In most cases just enabling dpm is enough but there are some tunable settings.
dpm has three main modes of operating: '''battery''', '''balanced''' and '''performance'''. The names are quite self-explanatory.
To set the GPU to most performant mode the following command is needed to run:

{{RootCmd|echo performance > /sys/class/drm/card0/device/power_dpm_state}}

Even if GPU is set to ''performance -mode'' it does not mean that the GPU is running with highest clockspeeds at all the time. This is the normal and intended way how dpm works. If it is desirable to run the GPU at the highest speeds all the time, even if there is no actual load, users can then run following command:

{{RootCmd|echo high > /sys/class/drm/card0/device/power_dpm_force_performance_level}}

This manually overrides dpm's own bahaviour. This is however mainly intended for testing purposes but may also be useful when doing GPU benchmanks.

To give control back to dpm following command is needed to run:

{{RootCmd|echo auto > /sys/class/drm/card0/device/power_dpm_force_performance_level}}

{{Note|There's also the '''low''' forceable performance level, which can be echoed the same way. A list of all available modes can be found on [https://dri.freedesktop.org/docs/drm/gpu/amdgpu.html#power-dpm-force-performance-level dri.freedesktop.org]}}

== Troubleshooting ==

=== Kernel ===

Older kernels which do not support the amdgpu driver will not provide the AMDGPU option. But even with amdgpu there is no video output on VEGA and newer chips without DC (Display Code), which was first included in vanilla Kernel 4.15. In both cases, trying an unstable (denoted by a {{Keyword|~}}) kernel can provide the required kernel-sources.

==== SME ====

Currently, amdgpu does not work with AMD Secure Memory Encryption (SME) enabled, so you need to disable its use either in the kernel configuration or on the kernel command line (i.e. in {{Path|/etc/default/grub}} as part of <var>GRUB_CMDLINE_LINUX</var>).

{{KernelBox|1=
Processor type and features  --->
    [*] AMD Secure Memory Encryption (SME) support
    [ ]   Activate AMD Secure Memory Encryption (SME) by default
}}

<var>AMD_MEM_ENCRYPT</var> may remain enabled, but either <var>AMD_MEM_ENCRYPT_ACTIVE_BY_DEFAULT</var> must remain unset or the kernel command line option <var>mem_encrypt=off</var> must be used in order to turn Memory Encryption off. With <var>mem_encrypt=on</var> amdgpu fails to load and the screen stays frozen as it was at the time of the modprobe, or, when included in the kernel, in early printk.

=== AMDGPU/RadeonSI drivers do not work ===

If the graphics card is not supported by including <code>amdgpu</code> and <code>radeonsi</code> alone in <var>VIDEO_CARDS</var>, try adding <code>radeon</code> to {{Path|make.conf}}'s <var>VIDEO_CARDS</var> definition. For example:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
VIDEO_CARDS="amdgpu radeonsi radeon"
}}

After the values have been set update the system so the changes take effect:

{{Emerge|params+=--changed-use --deep|@world}}

=== Full-screen windows perform poorly ===

The installed version of {{Package|sys-devel/llvm}} may be too old. Try emerging an unstable version.

=== Pixel-wide line on left side of screen when X server is started when using a Southern Island card ===

Those using a Southern Island card may notice a pixel-wide line on the left of the screen in both the X server and console environments after having started a X server (This issue doesn't exist when using Linux 4.13 or newer). This is a known bug. Disabling audio through HDMI for that display resolves this issue. This may be done via:

{{Cmd|xrandr --output HDMI-A-0 --auto --set audio off}}

where <code>HDMI-A-0</code> should be replaced by the name of the output, obtained by running {{c|xrandr}}

For more information please see https://bugs.freedesktop.org/show_bug.cgi?id=97861.

== See also ==

* {{See also|AMDGPU-PRO}}

== External resources ==

* [http://www.phoronix.com/scan.php?page=search&q=RadeonSI A list of RadeonSI articles on the Phoronix site.]

== References ==

{{reflist}}


[[Category:Graphics Adapters]]
