<languages />

{{Metadata|abstract=Ce document explique comment utiliser les clés SSH partagées avec le programme keychain. Il suppose une connaissance des fondamentaux de la cryptographie à clé publique.}}

Ce document décrit comment utiliser les clés partagées SSH avec le programme ''keychain''. Il suppose que le lecteur a une connaissance de base de la cryptographie par clés publiques.

== Fondamentaux ==

=== Le problème à résoudre ===

Ainsi vous disposez de cette merveilleuse machine Gentoo sur laquelle tourne <code>sshd</code>, mais c'est un peu fatigant pour vous de continuer à taper tous ces mots de passe de connexion, n'est pas ? Ou peut-être avez vous un script ou une tâche de cron qui nécessite un moyen efficace d'utiliser une connexion ssh. Dans un cas comme dans l'autre, il y a une solution au problème, et elle commence avec l'authentification par clé publique. 

=== Comment fonctionne l'authentification par clé publique ? ===

Supposons qu'un client veuille se connecter à sshd sur un serveur. Le client commence par générer une paire de clés et donne la clé publique au serveur. Par la suite, à chaque fois que le client essaye de se connecter, le serveur lui soumet un challenge qui est chiffré avec cette clé publique. Dans ce cas, seul le détenteur de la clé privée correspondante (le client) est capable de le déchiffrer, et vous l'aurez deviné , seul ce détenteur est à même de pouvoir donner la bonne réponse et  réussir la connexion. 

== Comment utiliser l'authentification par clé publique ? ==

=== Générer une paire de clés ===

La première étape est de créer une paire de clés. Pour le faire, vous devez utiliser la commande <code>ssh-keygen</code>  comme suit : 

{{Cmd|ssh-keygen}}

Contentez-vous d'accepter les valeurs par défaut, et assurer vous d'entrer une phrase de passe solide.

{{Warning/fr|Assurez-vous bien de choisir une phrase de passe solide, en particulier si cette clé va être utilisée pour des connexions en tant qu'utilisateur root !}}

You should now have a private key in {{Path|~/.ssh/id_rsa}} and a public key in {{Path|~/.ssh/id_rsa.pub}} . We are ready to copy the public key over to the remote host.

=== Préparation du  serveur ===

We will be copying the {{Path|~/.ssh/id_rsa.pub}} file over to the server that runs sshd. We will also be adding it to the {{Path|~/.ssh/authorized_keys}} file that belongs the connecting user on that server. Here's an example of how to do that if you already have ssh access to the server. 

{{Cmd|scp ~/.ssh/id_rsa.pub server_user@server:~/myhost.pub
|ssh server_user@server "cat ~/myhost.pub &gt;&gt; ~/.ssh/authorized_keys"
|ssh server_user@server "cat ~/.ssh/authorized_keys"}}

La sortie correspondant à la dernière ligne devrait vous montrer le contenu du fichier {{Path|~/.ssh/authorized_keys}}. Vérifiez bien qu'elle est correcte. 

=== Tester la configuration ===

En théorie, si tout c'est bien passé, et si le démon ssh sur le serveur le permet, vous devriez être en mesure d'avoir un accès ssh sur le serveur sans donner de mot de passe. Il est encore nécessaire de déchiffrer la clé privée sur le client avec la phrase de passe que vous avez définie précédemment, mais il ne faut pas confondre cela avec le mot de passe du compte utilisateur sur le serveur. 

{{Cmd|ssh server_user@server}}

Hopefully, it asked you for your passphrase for id_rsa, and you were able to gain ssh access as server_user on the server. If not, login as server_user, and verify the contents of {{Path|~/.ssh/authorized_keys}} to make sure each entry is on a single line. You might also want to check the sshd configuration to make sure that it prefers to use public key authorization when available. 

À ce stade, vous pensez probablement, ''De qui se moque-t-on ? J'ai simplement échangé un mot de passe contre un autre !'' Détendez-vous, la section suivante va vous expliquer comment utiliser tout ça de manière à économiser votre précieux temps. 

== Rendre commode l'authentification par clé publique  ==

=== Gestion typique des clés avec un agent ssh ===

Si vous avez suivi, vous pensez certainement que ce  serait merveilleux si vous pouviez déchiffrer votre clé privé une seule fois, et obtenir la possibilité de vous connecter en ssh librement, sans avoir à taper aucun mot de passe. Vous avez de la chance, c'est exactement ce que le programme  <code>ssh-agent</code>  va vous permettre de faire ! 

Le programme <code>ssh-agent</code> est en général lancé au démarrage de votre session X, ou depuis un script de démarrage tel que {{Path|~/.bash_profile}}. Il fonctionne en créant un socket Unix, et en enregistrant les variables d'environnement appropriées de telle manière que les applications suivantes puissent utiliser ses services en se connectant à ce socket. Clairement, cela n'a de sens que si vous le démarrez dans le processus parent de votre session X si vous voulez utiliser le jeu de clés privées déchiffrées dans toutes les applications X qui suivent. 

{{Cmd|eval `ssh-agent`}}

{{Note|Cet agent (ssh-agent) conserve les clés déchiffrées jusqu'à ce que vous le tuiez. Si vous voulez définir une durée de vie pour les clés, utilisez l'argument -t comme c'est expliqué dans la page  <code>man ssh-agent</code> .}}

When you run ssh-agent, it should tell you the PID of the running ssh-agent, and also set a few environment variables, namely <code>SSH_AUTH_SOCK</code> and <code>SSH_AGENT_PID</code> . It should also automatically add {{Path|~/.ssh/id_rsa}} to it's collection and ask you for the corresponding passphrase. If you have other private keys you want to add to the running ssh-agent, you can use the <code>ssh-add</code> command as follows: 

{{Cmd|ssh-add somekeyfile}}

Maintenant, la magie ! Comme vous devriez maintenant avoir vos clés privées déchiffrées et prêtes, vous devriez pouvoir vous connecter au serveur ssh sans entrer de mot de passe. 

{{Cmd|ssh server}}

Il serait bon de savoir comment interrompre l'agent ssh au cas où vous en auriez besoin. 

{{Cmd|ssh-agent -k}}

{{Note|Si vous rencontrez des difficultés à mettre   ssh-agent en route, il se pourrait qu'il soit toujours en fonctionnement. Vous pouvez le tuer comme n'importe quel autre processus en exécutant  <code>killall ssh-agent</code> .}}

Si vous voulez encore plus de confort de l'agent ssh, lisez la section suivante sur l'utilisation de keychain. Assurez-vous de tuer l'agent ssh en fonctionnement, comme indiqué précédemment, si vous décidez de le faire.

=== Obtenir la dernière goutte de confort de ssh-agent ===

Keychain va vous permettre de réutiliser un agent ssh entre sessions et, en option, vous demander les phrases de passe à chaque entrée dans la session. Avant d'avancer néanmoins, commencez par l'installer. 

{{Emerge|keychain}}

En supposant que l'installation a réussi, vous pouvez utiliser keychain librement. Ajoutez ce qui suit à vote {{Path|~/.bash_profile}}  pour l'activer. 

{{CodeBox|title=Enabling keychain in .bash_profile|<pre>
keychain ~/.ssh/id_rsa
. ~/.keychain/$HOSTNAME-sh
. ~/.keychain/$HOSTNAME-sh-gpg
</pre>
}}

{{Note|Vous pouvez ajouter plus de clés privées à la ligne de commande si vous le souhaitez. De plus, si vous voulez qu'il vous demande les phrases de passe à chaque fois que vous engendrez un shell, ajoutez l'option --clear.}}

{{Note|Si vous n'utilisez pas bash, lisez la section  '''EXAMPLES''' de la page  <code>man keychain</code> pour des exemples d'utilisation avec d'autres shell. L'idée est que ces commandes soient lancées chaque fois que vous démarrez un shell.}}

Testez le maintenant. Tout d'abord, assurez-vous que l'agent ssh a été tué, puis démarrez un nouveau shell, ordinairement en vous connectant, ou en lançant un nouveau terminal. Il devrait vous inviter à entrer la phrase de passe pour chacune des clés que vous avez entrées sur la ligne de commande. Tous les shells ouverts  après ce point devraient réutiliser l'agent ssh, vous autorisant ainsi à vous connecter indéfiniment en ssh sans saisir de mot de passe. 

=== Utiliser keychain avec KDE ===

Si vous utilisez KDE, au lieu d'utiliser {{Path|~/.bash_profile}}, vous pouvez confier à KDE le soin de gérer l'agent ssh pour vous. Pour cela, vous devez éditer {{Path|/etc/kde/startup/agent-startup.sh}}, qui est lu au démarrage de KDE, et {{Path|/etc/kde/shutdown/agent-shutdown.sh}}, qui est exécuté à l'arrêt de KDE. Voici ce que vous devriez y placer : 

{{Code|Edition de /etc/kde/startup/agent-startup.sh|<pre>
if [ -x /usr/bin/ssh-agent ]; then
  eval "$(/usr/bin/ssh-agent -s)"
fi
</pre>
}}

{{Code|Editing /etc/kde/shutdown/agent-shutdown.sh|<pre>
if [ -n "${SSH_AGENT_PID}" ]; then
  eval "$(ssh-agent -k)"
fi
</pre>
}}

Maintenant, tout ce qu'il vous reste à faire, c'est de lancer un terminal de votre choix, comme Konsole, et de charger les clés que vous voulez utiliser. Par exemple : 

{{Cmd|keychain ~/.ssh/id_rsa}}

Vos clés seront mémorisées jusqu'à ce que vous mettiez fin à votre session KDE ou que vous tuiez l'agent ssh à la main.

== Conclusion ==

=== Considération sur la sécurité ===

Bien-sûr, l'utilisation de ssh-agent peut ajouter une dose d'insécurité à votre système. Si un autre utilisateur était à même d'utiliser votre shell alors que vous êtes à la machine à café, il pourrait se connecter à tous vos serveurs sans mot de passe. En conséquence, c'est un risque pour les serveurs auxquels vous vous connectez, et vous devriez consulter la politique locale de sécurité. Si vous l'utilisez, prenez les mesures appropriées pour garantir la sécurité de vos sessions. 

=== Dépannage ===

La majeure partie de tout ceci devrait fonctionner sans problème, mais si vous rencontrez une difficulté, vous devriez certainement connaître quelques points utiles. 

* Si vous ne pouvez pas vous connecter sans  ssh-agent, considérez l'idée de vous connecter en ssh avec l'argument -vvv pour identifier ce qui ne va pas. Parfois le serveur n'est pas configuré pour utiliser l'authentification par clé publique, parfois il est configuré pour vous demander un mot de passe quoi qu'il arrive ! Si c'est le cas, vous pouvez utiliser l'option -o avec ssh, ou changer la configuration du serveur  dans ssh_config. 
* Si vous rencontrez des difficultés avec ssh-agent ou keychain, cela peut venir du fait que vous utilisez un shell qui ne comprend pas les commandes qu'ils utilisent. Consultez les pages de man pour  ssh-agent et keychain  pour obtenir des informations sur comment les utiliser avec d'autres shells. 
* Vous pouvez aussi consulter la [https://github.com/funtoo/keychain page d'accueil de keychain] pour plus de détails.

[[Category:Server and Security]] {{Migrated|originalauthors=Eric Brown, Marcelo Goes, nightmorph}}
