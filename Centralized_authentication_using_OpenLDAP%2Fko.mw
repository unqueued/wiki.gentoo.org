<languages />


{{Metadata|abstract=이 안내서는 LDAP 기초를 소개하고 컴퓨터 그룹을 인증하는데 사용할 OpenLDAP를 어떻게 설정하는지 보여드립니다.}}


이 안내서는 LDAP 기초를 소개하고 컴퓨터 그룹을 인증하는데 사용할 OpenLDAP를 어떻게 설정하는지 보여드립니다.


== OpenLDAP 시작하기 ==

=== LDAP는 무엇인까요? ===

LDAP는 "경량 디렉터리 접근 프로토콜을 의미합니다. X.500을 기반하며 주된 기능의 대부분을 아우르고 있지만 X.500이 가진 일부 기능은 부족합니다. 자, 그러면 X.500은 무엇이고 왜 LDAP가 있는걸까요? 

X.500 is a model for Directory Services in the OSI concept. It contains namespace definitions and the protocols for querying and updating the directory. However, X.500 has been found to be overkill in many situations. Enter LDAP. Like X.500 it provides a data/namespace model for the directory and a protocol. However, LDAP is designed to run directly over the TCP/IP stack. See LDAP as a slim-down version of X.500. 

=== 잘 모르겠는데요. 디렉터리가 뭔가요? ===

A directory is a specialized database designed for frequent queries but infrequent updates. Unlike general databases they don't contain transaction support or roll-back functionality. Directories are easily replicated to increase availability and reliability. When directories are replicated, temporary inconsistencies are allowed as long as they get synchronised eventually. 

=== 정보가 어떻게 구성되어 있죠? ===

모든 디렉터리 내부 정보는 계층 구조로 되어 있습니다. 게다가 디렉터리에 데이터를 입력하면 트리에 데이터를 어떻게 저장하는지 알아야 합니다. 그러면 허구속의 회사와 인터넷과 비슷한 트리를 보도록 하겠습니다: 

{{Code|GenFic 조직 구조도, 비현실 속 젠투 회사|<pre>
dc:         com
             |
dc:        genfic         ## (Organisation)
          /      \
ou:   People   servers    ## (Organisational Units)
      /    \     ..
uid: ..   John            ## (OU-specific data)
</pre>
}}

Since you don't feed data to the database in this ascii-art like manner, every node of such a tree must be defined. To name such nodes, LDAP uses a naming scheme. Most LDAP distributions (including OpenLDAP) already contain quite a number of predefined (and general approved) schemas, such as the ''inetOrgPerson'', or a frequently used schema to define users which Unix/Linux boxes can use, called ''posixAccount''. Note there are GUI web based tools to make managing LDAP painless: see [[#Working_with_OpenLDAP|Working with OpenLDAP]] for an non-exhaustive list.

흥미로운 사용자라면 [http://www.openldap.org/doc/admin24/ OpenLDAP 관리자 안내서]를 보십시오.

=== 그래서... 어디에 사용할 수 있죠? ===

LDAP는 다양한곳에 사용할 수 있습니다. 이 문서는 사용자 관리를 집중화하고, 단일 LDAP 위치에서 모든 사용자 계정을 관리(단일 서버에 저장한다는 의미가 아니며, LDAP에서는 고가용성과 중복성을 지원합니다)하며, 이와 마찬가지로 그 밖에 LDAP를 활용하는 곳에서 사용 목적을 달성할 수 있습니다. 

* 공개 키 인프라스트럭처

* 공유 달력

* 공유 주소록

* DHCP, DNS등의 저장소

* 시스템 수준 설정 지시문(몇가지 서버 설정 유지)

* 집중화된 인증(PosixAccount)

* ...

== OpenLDAP Server Configuration  ==

이 안내서에서는 genfic.com을 예로 들겠습니다. 물론 이 도메인을 다른 도메인으로 바꿀 수 있습니다. 그러나 공식 상위 도메인(net, com, cc, be, ...)이 상위 노드에 위치했는지 확인하십시오.


먼저 OpenLDAP를 이머지하겠습니다. ''berkdb, crypt, gnutls, ipv6, sasl, ssl, syslog, tcpd''를 USE 플래그로 사용하는지 확인하십시오.

{{Emerge|openldap}}


OpenLDAP의 주 사용자는 ''rootdn''(Root Distinguished Name) 이며, 암호는 아래 명령으로 만들고, 이들 정보는 다음에 언급할 {{Path|slapd.conf}}에 넣어야 합니다.

{{RootCmd|slappasswd|output=<pre>
New password: my-password
Re-enter new password: my-password
{SSHA}EzP6I82DZRnW+ou6lyiXHGxSpSOw2XO4
</pre>
}}


{{Path|/etc/openldap/slapd.conf}}에 있는 LDAP 서버 설정을 편집하십시오. 제공된 {{Path|slapd.conf}}는 원본 OpenLDAP 소스 코드에 들어있는 파일입니다. 아래 예제 설정 파일은 처음 시작할 때 대체할 내용으로 사용할 수 있습니다. 

{{Code|/etc/openldap/slapd.conf|<pre>
include	/etc/openldap/schema/core.schema
include /etc/openldap/schema/cosine.schema
include /etc/openldap/schema/inetorgperson.schema
include /etc/openldap/schema/nis.schema
include	/etc/openldap/schema/misc.schema
 
pidfile  /var/run/openldap/slapd.pid
argsfile /var/run/openldap/slapd.args
 
## ## ServerID used in case of replication
serverID 0 
loglevel 0
 
## ## Certificate/SSL Section
TLSCipherSuite normal
TLSCACertificateFile /etc/openldap/ssl/ldap.crt
TLSCertificateFile /etc/openldap/ssl/ldap.pem
TLSCertificateKeyFile /etc/openldap/ssl/ldap.key
TLSVerifyClient never
 
## ## Access Controls
access to dn.base="" by * read
access to dn.base="cn=Subschema" by * read
access to *
  by self write
  by users read
  by anonymous read
 
## ## Database definition
database hdb
suffix "dc=genfic,dc=com"
checkpoint 32 30
rootdn "cn=Manager,dc=genfic,dc=com"
## ## rootpwd generated earlier via slappasswd command
rootpw "{SSHA}EzP6I82DZRnW+ou6lyiXHGxSpSOw2XO4" 
directory "/var/lib/openldap-data"
index objectClass eq
 
## ## Synchronisation (pull from other LDAP server)
syncrepl rid=000
  provider=ldap://ldap2.genfic.com
  type=refreshAndPersist
  retry="5 5 300 +"
  searchbase="dc=genfic,dc=com"
  attrs="*,+"
  bindmethod="simple"
  binddn="cn=ldapreader,dc=genfic,dc=com"
  credentials="ldapsyncpass"
 
index entryCSN eq
index entryUUID eq
 
mirrormode TRUE
 
overlay syncprov
syncprov-checkpoint 100 10
</pre>
}}

For a more detailed analysis of the configuration file, we suggest that you work through the OpenLDAP Administrator's Guide. 

=== 설정 확인 ===

{{Path|slapd.conf}} 파일을 사용자의 취향대로 이리저리 설정하고 난 후, 다음 명령으로 확인할 수 있습니다.

{{Cmd|slaptest -v -d 1 -f /etc/openldap/slapd.conf}}

더 많은 내용을 확인하려면 디버그 레벨("-d 1" 이상)을 바꿔보십시오. 모든 동작이 잘 된다면 "config file testing succeedded"가 보입니다.
오류가 있다면, <code>slaptest</code>에서 ({{Path|slapd.conf}} 파일에서) 오류가 난 부분의 줄 번호를 표시합니다

참고로, OpenLDAP는 설정 파일을 두 곳에 저장할 수 있습니다. 하나는 {{Path|slapd.conf}}이고, {{Path|slapd.d/}}에도 저장합니다. 후자는 텍스트 편집기가 아닌 <code>slaptest</code>로 {{Path|slapd.conf}} 파일을 활용하여 설정 파일을 만들도록 설계한 새로운 위치입니다.

{{RootCmd|mkdir /etc/openldap/slapd.d}}
{{RootCmd|slaptest -f /etc/openldap/slapd.conf -F slapd.d}}
{{RootCmd|chown -R ldap slapd.d}}

이 명령을 실행하면 설정 파일을 보내고 변환합니다. 절차가 성공적으로 끝났다면 해당 명령을 {{Path|slapd.conf}}를 새로 고칠 때마다 실행해야 합니다. 디렉터리와 내용은 ldap 서비스 계정이 소유해야 합니다. 

더 많은 내용은 만들어진 파일의 자체 주석을 참고하십시오.

아래 줄은 {{Path|slapd.d/}} 설정 방식을 활성화합니다. 

{{Code|/etc/conf.d/slapd|<pre>
OPTS="-F /etc/openldap/slapd.d -h 'ldaps:// ldap:// ldapi://%2fvar%2frun%2fopenldap%2fslapd.sock'"
</pre>
}}

마지막으로, {{Path|/var/lib/openldap-data}} 구조를 만드십시오: 

{{RootCmd|mkdir -p /var/lib/openldap-data
|chown ldap:ldap /var/lib/openldap-data
|chmod 700 /var/lib/openldap-data}}


slapd를 시작하십시오: 

{{RootCmd|/etc/init.d/slapd start}}

If it does not start then increase the loglevel variable in {{Path|slapd.conf}} to 4 or more, and look in {{Path|/var/log/messages}} for more information.

== Configuring the OpenLDAP Client tools== 

Edit the LDAP Client configuration file. This file is read by ldapsearch and other ldap command line tools.

{{File|/etc/openldap/ldap.conf|Add the following|<pre>
BASE         dc=genfic, dc=com
URI          ldap://ldap.genfic.com:389/ ldap://ldap1.genfic.com:389/ ldap://ldap2.genfic.com:389/
TLS_REQCERT  allow
TIMELIMIT    2
</pre>
}}

You can test the running server with the following command: 

{{Cmd|ldapsearch -x -D "cn{{=}}Manager,dc{{=}}genfic,dc{{=}}com" -W}}

If you receive an error, try adding <code>-d 255</code> to increase the verbosity and solve the issue you have.

== Client Configuration for Centralised Authentication  ==

There are numerous methods/tools that can be used for remote authentication. Some distributions also have their own easy to use configuration tool. Below there are some in no particular order. It is possible to combine local users and centrally authorized accounts at the same time. This is important because, for instance, if the LDAP server cannot be accessed one can still login as root.

* SSSD  (Single Sign-on Services Daemon). Its primary function is to provide access to identity and authentication remote resource through a common framework that can provide caching and offline support to the system. It provides PAM and NSS modules, and in the future will support D-Bus interfaces for extended user information. It also provides a better database to store local users as well as extended user data.

* Use <code>pam_ldap</code> to login to the LDAP server and authenticate. Passwords are ''not'' sent over the network in clear text.  

* NSLCD (Name Service Look up Daemon). Similar to SSSD, but older.

* NSS (Name Service Switch) using the traditional <code>pam_unix</code> module to fetch password hashes over the network. To permit users to update their password this has to be combined with the <code>pam_ldap</code> method.

The first two are demonstrated below with the minimum necessary configuration options to get working.

=== Client PAM configuration SSSD Method ===

Here is the more direct method. The three files that are required to be edited are mentioned below. 

{{File|/etc/sssd/sssd.conf||<pre>
[sssd]
config_file_version = 2
services = nss, pam
domains = genfic
debug_level = 5
  
[nss]
filter_users = root,ldap,named,avahi,haldaemon,dbus,radiusd,news,nscd
  
[domain/genfic]
id_provider = ldap
auth_provider = ldap
ldap_search_base = dc=genfic,dc=com
ldap_tls_reqcert = never
# primary and backup ldap servers below [first server and],[second server]
ldap_uri = ldap://X.X.X.X,ldap://X.X.X.X
</pre>}}


Add sss to the end as shown below to enable the lookup to be handed to the sssd system service. Once you have finished editing start the sssd daemon.

{{File|/etc/nsswitch.conf|Example nsswitch.conf with SSSD support|<pre>
passwd:     files sss
shadow:     files sss
group:      files sss
  
netgroup:   files sss
automount:  files sss
sudoers:    files sss
</pre>}}

The last file is the most critical. Open an extra root terminal as a fallback before editing this. The lines in bold have been added to enable remote authentication. Note the use of {{Path|pam_mkhomedir.so}} to support creating the user home directories.

{{File|/etc/pam.d/system-auth|Enable pam_sss support|<pre>
#%PAM-1.0
# This file is auto-generated.
# User changes will be destroyed the next time authconfig is run.
auth        required      pam_env.so
auth        sufficient    pam_unix.so nullok try_first_pass
auth        requisite     pam_succeed_if.so uid >= 500 quiet
'''auth        sufficient    pam_sss.so use_first_pass'''
auth        required      pam_deny.so
  
account     required      pam_unix.so
account     sufficient    pam_localuser.so
account     sufficient    pam_succeed_if.so uid < 500 quiet
'''account     [default=bad success=ok user_unknown=ignore] pam_sss.so'''
account     required      pam_permit.so
  
password    requisite     pam_cracklib.so try_first_pass retry=3
password    sufficient    pam_unix.so md5 shadow nullok try_first_pass use_authtok
'''password    sufficient    pam_sss.so use_authtok'''
password    required      pam_deny.so
  
session     required      pam_mkhomedir.so skel=/etc/skel/ umask=0077
session     optional      pam_keyinit.so revoke
session     required      pam_limits.so
session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
session     required      pam_unix.so
'''session     optional      pam_sss.so'''
</pre>}}

이제 다른 머신에서 로그인해십시오.

=== pam_ldap 모듈 방식으로 클라이언트 PAM 설정 ===

First, we will configure PAM to allow LDAP authorization. Install {{Package|sys-auth/pam_ldap}} so that PAM supports LDAP authorization, and {{Package|sys-auth/nss_ldap}} so that your system can cope with LDAP servers for additional information (used by {{Path|nsswitch.conf}}). 

{{Emerge|pam_ldap nss_ldap}}

The last file is the most critical open a few extra root windows as a backup before editing this. The lines in bold have been added to enable remote authentication.

{{Code|/etc/pam.d/system-auth|<pre>
#%PAM-1.0
 
auth       required     pam_env.so
auth       sufficient   pam_unix.so try_first_pass likeauth nullok
'''auth       sufficient   pam_ldap.so use_first_pass'''
auth       required     pam_deny.so
 
'''account    sufficient   pam_ldap.so'''
account    required     pam_unix.so
 
password   required     pam_cracklib.so difok=2 minlen=8 dcredit=2 ocredit=2 try_first_pass retry=3
password   sufficient   pam_unix.so try_first_pass use_authtok nullok md5 shadow
'''password   sufficient   pam_ldap.so use_authtok use_first_pass'''
password   required     pam_deny.so
 
session    required     pam_limits.so
session    required     pam_unix.so
'''session    optional     pam_ldap.so'''
</pre>
}}

이제 읽어들이도록 {{Path|/etc/ldap.conf}}를 바꾸십시오: 

{{Code|/etc/ldap.conf|<pre>
## #host 127.0.0.1
## #base dc=padl,dc=com
 
base dc=genfic,dc=com
## #rootbinddn uid=root,ou=People,dc=genfic,dc=com
bind_policy soft
bind_timelimit 2
ldap_version 3
nss_base_group ou=Group,dc=genfic,dc=com
nss_base_hosts ou=Hosts,dc=genfic,dc=com
nss_base_passwd ou=People,dc=genfic,dc=com
nss_base_shadow ou=People,dc=genfic,dc=com
pam_filter objectclass=posixAccount
pam_login_attribute uid
pam_member_attribute memberuid
pam_password exop
scope one
timelimit 2
uri ldap://ldap.genfic.com/ ldap://ldap1.genfic.com ldap://ldap2.genfic.com
</pre>
}}

Next, copy over the (OpenLDAP) {{Path|ldap.conf}} file from the server to the client so the clients are aware of the LDAP environment: 

{{RootCmd|scp ldap-server:/etc/openldap/ldap.conf /etc/openldap}}

마지막으로 클라이언트를 설정하여 시스템 계정에 대해 LDAP를 검사하도록 하십시오: 

{{Code|/etc/nsswitch.conf|<pre>
passwd:         files ldap
group:          files ldap
shadow:         files ldap
</pre>
}}

If you noticed one of the lines you pasted into your {{Path|/etc/ldap.conf}} was commented out (the <code>rootbinddn</code> line): you don't need it unless you want to change a user's password as superuser. In this case you need to echo the root password to {{Path|/etc/ldap.secret}} in plaintext. This is '''DANGEROUS''' and should be chmoded to 600. What you might want to do is keep that file blank and when you need to change someone's password that's both in the ldap and {{Path|/etc/passwd}}, put the pass in there for 10 seconds while changing the users password and remove it when done.

=== 기존 데이터를 LDAP로 이전하기 ===

Configuring OpenLDAP for centralized administration and management of common Linux/Unix items isn't easy, but thanks to some tools and scripts available on the Internet, migrating a system from a single-system administrative point-of-view towards an OpenLDAP-based, centralized managed system isn't hard either. 

[http://www.padl.com/OSS/MigrationTools.html http://www.padl.com/OSS/MigrationTools.html]를 방문하셔서 스크립트를 가져오십시오. 이전 도구와 {{Path|make_master.sh}} 스크립트가 필요합니다. 

다음 도구의 압축을 해제하고 {{Path|make_master.sh}}  스크립트를 압축을 푼 위치에 복사하십시오: 

{{RootCmd|mktemp -d|output=<pre>
/tmp/tmp.zchomocO3Q
</pre>}}

{{RootCmd|cd /tmp/tmp.zchomocO3Q
|tar xvzf /path/to/MigrationTools.tgz
|mv /path/to/make_master.sh MigrationTools-47
|cd MigrationTools-47</pre>}}

다음 단계에서는 시스템 정보를 OpenLDAP로 옮깁니다. LDAP 구조와 환경에 대한 정보를 제공한 후 {{Path|make_master.sh}} 스크립트로 이 과정을 진행하십시오. 

작성하는 도중에, 도구에서 다음 입력사항을 요구합니다: 

{| class="wikitable" style="text-align: left;" 
|- 
! 입력
! 설명
! 예제
|- 
| LDAP BaseDN
| 트리 기반 위치 (루트)
| dc=genfic,dc=com
|- 
| Mail domain
| 이메일 주소에 사용하는 도메인
| genfic.com
|- 
| Mail host
| 메일 서버 인프라스트럭처의 FQDN
| smtp.genfic.com
|- 
| LDAP Root DN
| LDAP 구조상 관리 계정 정보
| cn=Manager,dc=genfic,dc=com
|- 
| LDAP Root Password
| 이전 <code>slappasswd</code> 명령 결과와 비교한 관리 계정 암호
| 
|-
|}

또한 도구에서 옮길 계정과 설정이 어떤건지 물어봅니다. 

{{Warning/ko|pam.d/system-auth를 바꿀 필요는 없습니다}}

== 복제 ==

=== 고가용성 ===

바뀌는 상황의 복제는 여러대의 LDAP 시스템에서 일어납니다. 이 안내서에서 OpenLDAP에서의 복제 동작은, 첫번째 LDAP 서버에서 권한을 읽어들이고 첫번째 LDAP 서버에서 두번째로 바뀐 내용을 끌어들이도록 하는 특정 복제 계정(<code>ldapreader</code>)을 활용하여 설정합니다. 

두번째 LDAP 서버가 첫번째 서버의 동작과 유사한 동작을 허용한 상태에서 이 설정을 복제합니다. OpenLDAP의 내부 구조에 감사해야 할 일은 LDAP 구조상 바뀐 내용이 또 있다 할지라도 중복 적용하지 않습니다.

=== 복제 설정 ===

복제를 설정하려면, 먼저 위에서 진행한 바와 같이 두번째 OpenLDAP 서버를 설정해야 합니다. 그러나, 설정 파일에 대해서는 다음을 신경쓰십시오. 

* ''동기화 복제 제공자''는 ''다른'' 시스템을 가리킵니다

* 각각의 OpenLDAP의 ''서버ID''는 다릅니다

다음, 동기화 계정을 만드십시오. LDIF 파일(LDAP서버 에서 데이터 입력할때 사용하는 형식)을 만들고 LDAP 서버 각각에 이를 추가하겠습니다. 

{{Cmd|slappasswd -s myreaderpassword|output=<pre>
 {SSHA}XvbdAv6rdskp9HgFaFL9YhGkJH3HSkiM
</pre>}}

{{Cmd|cat ldapreader.ldif|output=<pre>
dn: cn=ldapreader,dc=genfic,dc=com
userPassword: {SSHA}XvbdAv6rdskp9HgFaFL9YhGkJH3HSkiM
objectClass: organizationalRole
objectClass: simpleSecurityObject
cn: ldapreader
description: LDAP reader used for synchronization
</pre>}}

{{Cmd|ldapadd -x -W -D "cn{{=}}Manager,dc{{=}}genfic,dc{{=}}com" -f ldapreader.ldif|output=<pre>
Password: ## enter the administrative password
</pre>}}

== LDAP 서버 보안 설정 ==

=== OpenLDAP 권한 ===

{{Path|/etc/openldap/slapd.conf}}를 보면 사용자들이 읽고 쓸 수 있는 데이터가 무엇인지 ACL을 지정할 수 있는 부분이 있습니다. 

{{Code|/etc/openldap/slapd.conf|<pre>
access to attrs=userPassword,gecos,description,loginShell
  by self write
  
access to *
  by dn="uid=root,ou=People,dc=genfic,dc=com" write
  by users read
  by anonymous auth
</pre>
}}

This gives you access to everything a user should be able to change. If it's your information, then you got write access to it; if it's another user their information then you can read it; anonymous people can send a login/pass to get logged in. There are four levels, ranking them from lowest to greatest: <code>auth search read write</code>. 

The next ACL is a bit more secure as it blocks normal users to read other people their shadowed password: 

{{Code|/etc/openldap/slapd.conf|<pre>
access to attrs="userPassword"
  by dn="uid=root,ou=People,dc=genfic,dc=com" write
  by dn="uid=John,ou=People,dc=genfic,dc=com" write
  by anonymous auth
  by self write
  by * none
 
access to *
  by dn="uid=root,ou=People,dc=genfic,dc=com" write
  by dn="uid=John,ou=People,dc=genfic,dc=com" write
  by * search
</pre>
}}

This example gives root and John access to read/write/search for everything in the the tree below {{Path|dc{{=}}genfic,dc{{=}}com}}. This also lets users change their own <code>userPassword</code>'s. As for the ending statement everyone else just has a search ability meaning they can fill in a search filter, but can't read the search results. Now you can have multiple acls but the rule of the thumb is it processes from bottom up, so your toplevel should be the most restrictive ones.

== OpenLDAP로 작업하기 ==

=== 디렉터리 관리 ===

You can start using the directory to authenticate users in apache/proftpd/qmail/samba. You can manage it with [https://www.ldap-account-manager.org/lamcms/ LAM (Ldap Account Manager)], phpldapadmin, diradm, jxplorer, or lat, which provide easy management interfaces.

== 감사문 ==

이 안내서의 목적을 달성하기 위해 머신을 빌려준 Matt Heler에게 감사를 표합니다. 또한 #ldap @ irc.freenode.net의 대단한 분들께도 감사를 드립니다. 

== 감사문 ==

이 안내서에 제공한 노고에 대해 다음 작성자와 편집자분들께 감사의 말을 전하고자 합니다:

* Benjamin Coles

* swift

* Brandon Hale

* Benny Chuang

* jokey

* nightmorph


[[Category:Server and Security]]
