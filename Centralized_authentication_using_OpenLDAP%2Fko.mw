<languages />


{{Metadata|abstract=이 안내서는 LDAP 기초를 소개하고 컴퓨터 그룹을 인증하는데 사용할 OpenLDAP를 어떻게 설정하는지 보여드립니다.}}


이 안내서는 LDAP 기초를 소개하고 컴퓨터 그룹을 인증하는데 사용할 OpenLDAP를 어떻게 설정하는지 보여드립니다.


== OpenLDAP 시작하기 ==

=== LDAP는 무엇인까요? ===

LDAP는 ''경량형 디렉터리 접근 프로토콜''을 의미합니다. X.500에 기반하며 주된 기능의 대부분을 아우르고 있지만 X.500이 가진 일부 기능에는 부족함이 있습니다. 자, 그러면 X.500은 무엇이고 왜 LDAP가 있는걸까요? 

X.500은 OSI 개념의 디렉터리 서비스 모델입니다. 여기엔 이름 공간의 정의와 디렉터리 요청 및 업데이트용 프로토콜이 들어있습니다. 그러나, X.500은 대부분의 상황을 엉망으로 휘저어놓았습니다. LDAP로 오십시오. X.500처럼 디렉터리의 데이터/이름공간 모델과 프로토콜도 제공합니다. 그러나 LDAP는 TCP/IP 스택을 통해 바로 동작하도록 설계했습니다. X.500에서 군더더기를 뺀 결과물로서 LDAP를 이해하십시오. 

=== 잘 모르겠는데요. 디렉터리가 뭔가요? ===

디렉터리는 빈번한 요청에 드물게 업데이트를 수행하도록 설계하여 특화된 데이터베이스입니다. 일반 데이터베이스와는 달리 트랜잭션 지원 기능이나 롤백 기능이 없습니다. 디렉터리는 가용성과 신뢰성을 개선하기 위해 쉽게 복제할 수 있습니다. 디렉터리를 복제하면, 디렉터리를 동기화 한 만큼 일시적인 비일관성도 허용됩니다. 

=== 정보가 어떻게 구성되어 있죠? ===

모든 디렉터리 내부 정보는 계층 구조로 되어 있습니다. 게다가 디렉터리에 데이터를 입력하면 트리에 데이터를 어떻게 저장하는지 알아야 합니다. 그러면 허구속의 회사와 인터넷과 비슷한 트리를 보도록 하겠습니다: 

{{Code|GenFic 조직 구조도, 비현실 속 젠투 회사|<pre>
dc:         com
             |
dc:        genfic         ## (Organisation)
          /      \
ou:   People   servers    ## (Organisational Units)
      /    \     ..
uid: ..   John            ## (OU-specific data)
</pre>
}}

아스키 아트 유사 방식으로 데이터베이스에 데이터를 넣지 않았기 때문에 각 트리의 모든 노드를 반드시 정의해야 합니다. LDAP에서는 이 노드에 이름을 부여하려 작명 스킴을 사용합니다. 대부분의 LDAP 구성(OpenLDAP 포함)에서는 이미 설정한(그리고 일반적으로 승인하는) ''inetOrgPerson'' 같은 스키마와 유닉스/리눅스 머신에서 사용할 수 있도록 사용자를 정의하는 지주 사용하는 ''posixAccount'' 스키마가 있습니다. LDAP를 문제 없이 관리할 수 있게 하는 GUI 웹 기반 도구가 있음을 참고하십시오. 대략적인 목록은  [[#Working_with_OpenLDAP|Working with OpenLDAP]]을 보십시오

흥미를 가진 사용자라면 [http://www.openldap.org/doc/admin24/ OpenLDAP 관리자 안내서]를 보십시오.

=== 그래서... 어디에 사용할 수 있죠? ===

LDAP는 다양한곳에 사용할 수 있습니다. 이 문서는 사용자 관리를 집중화하고, 단일 LDAP 위치에서 모든 사용자 계정을 관리(단일 서버에 저장한다는 의미가 아니며, LDAP에서는 고가용성과 중복성을 지원합니다)하며, 이와 마찬가지로 그 밖에 LDAP를 활용하는 곳에서 사용 목적을 달성할 수 있습니다. 

* 공개 키 인프라스트럭처

* 공유 달력

* 공유 주소록

* DHCP, DNS등의 저장소

* 시스템 수준 설정 지시문(몇가지 서버 설정 유지)

* 집중화된 인증(PosixAccount)

* ...

== OpenLDAP 서버 설정 ==

이 안내서에서는 genfic.com을 예로 들겠습니다. 물론 이 도메인을 다른 도메인으로 바꿀 수 있습니다. 그러나 공식 상위 도메인(net, com, cc, be, ...)이 상위 노드에 위치했는지 확인하십시오.


먼저 OpenLDAP를 이머지하겠습니다. ''berkdb, crypt, gnutls, ipv6, sasl, ssl, syslog, tcpd'' USE 플래그를 사용하는지 확인하십시오.

{{Emerge|openldap}}


OpenLDAP의 주 사용자는 프로그램에 하드코딩한 ''rootdn''(루트 식별 이름) 입니다. 기존의 유닉스 루트 사용자와는 달리, rootdn 사용자는 적당한 권한 할당이 필요합니다. rootdn 사용자는 설정 환경에서만 활용할 수 있지만 디렉터리 정의 범위에서도 사용할 수 있습니다. 이 경우 해당 사용자는 환경 설정에 넣은 암호과 트리(디렉터리 기반) 암호를 사용하여 rootdn으로 자신을 인증 할 수 있습니다.

검증 목적의(rootdn 사용자 여부와는 상관 없는) 사용자 암호는 평문 또는 해시 문자열로 저장할 수 있습니다. 다양한 해시 알고리즘을 사용할 수 있지만, 취약한 알고리즘의 사용(MD5 까지)은 권장하지 않습니다. SHA는 현재 암호화 보안 수단으로 활용하기에 충분합니다.

아래 명령을 통해, 주어진 암호에 대한 해시값을 만듭니다. 이 명령의 결과는 {{Path|slapd.conf}} 설정 파일에서 사용하거나 사용자 내부 디렉터리 정의 용도로 사용할 수 있습니다:

{{RootCmd|slappasswd|output=<pre>
New password: my-password
Re-enter new password: my-password
{SSHA}EzP6I82DZRnW+ou6lyiXHGxSpSOw2XO4
</pre>
}}


{{Path|/etc/openldap/slapd.conf}}에 있는 LDAP 서버 설정을 편집하십시오. 제공된 {{Path|slapd.conf}}는 원본 OpenLDAP 소스 코드에 들어있는 파일입니다. 아래 예제 설정 파일은 처음 시작할 때 대체할 내용으로 사용할 수 있습니다. 

{{Code|/etc/openldap/slapd.conf|<pre>
include	/etc/openldap/schema/core.schema
include /etc/openldap/schema/cosine.schema
include /etc/openldap/schema/inetorgperson.schema
include /etc/openldap/schema/nis.schema
include	/etc/openldap/schema/misc.schema
 
pidfile  /var/run/openldap/slapd.pid
argsfile /var/run/openldap/slapd.args
 
## ## ServerID used in case of replication
serverID 0 
loglevel 0
 
## ## Certificate/SSL Section
TLSCipherSuite normal
TLSCACertificateFile /etc/openldap/ssl/ldap.crt
TLSCertificateFile /etc/openldap/ssl/ldap.pem
TLSCertificateKeyFile /etc/openldap/ssl/ldap.key
TLSVerifyClient never
 
## ## Access Controls
access to dn.base="" by * read
access to dn.base="cn=Subschema" by * read
access to *
  by self write
  by users read
  by anonymous read
 
## ## Database definition
database hdb
suffix "dc=genfic,dc=com"
checkpoint 32 30
rootdn "cn=Manager,dc=genfic,dc=com"
## ## rootpwd generated earlier via slappasswd command
rootpw "{SSHA}EzP6I82DZRnW+ou6lyiXHGxSpSOw2XO4" 
directory "/var/lib/openldap-data"
index objectClass eq
 
## ## Synchronisation (pull from other LDAP server)
syncrepl rid=000
  provider=ldap://ldap2.genfic.com
  type=refreshAndPersist
  retry="5 5 300 +"
  searchbase="dc=genfic,dc=com"
  attrs="*,+"
  bindmethod="simple"
  binddn="cn=ldapreader,dc=genfic,dc=com"
  credentials="ldapsyncpass"
 
index entryCSN eq
index entryUUID eq
 
mirrormode TRUE
 
overlay syncprov
syncprov-checkpoint 100 10
</pre>
}}

더 자세하게 설정 파일을 분석하려면, OpenLDAP 관리자 안내서를 보며 진행하시는게 좋습니다. 

=== 설정 확인 ===

{{Path|slapd.conf}} 파일을 사용자의 취향대로 이리저리 설정하고 난 후, 다음 명령으로 확인할 수 있습니다.

{{Cmd|slaptest -v -d 1 -f /etc/openldap/slapd.conf}}

또는 OLC를 사용한다면:

{{Cmd|slaptest -v -d 1 -F /etc/openldap/slapd.d}}

더 많은 내용을 확인하려면 디버그 레벨("-d 1" 이상)을 바꿔보십시오. 모든 동작이 잘 된다면 "config file testing succeedded"가 보입니다.
오류가 있다면, <code>slaptest</code>에서 ({{Path|slapd.conf}} 파일에서) 오류가 난 부분의 줄 번호를 표시합니다

참고로 2.4.23부터는, OpenLDAP의 기본 설정 방식이 기존 {{Path|slapd.conf}} 플랫 설정 파일에서 OLC(OnLineConfiguration, <code>cn=config</code> 구조로 알려짐) 방식으로 바뀌었습니다. OLC를 사용하면 설정을 업데이트한 후 동적 백엔드(cn=config)에서 서버를 재시작할 필요가 없는 장점이 있습니다. 기존의 사용자는 <code>slaptest</code> 명령 실행시 -f 와 -F 옵션 설정을 사용하는 새 설정 방식으로 옮겨갈 수 있습니다. 기존의 OLC는 {{Path|/etc/openldap/slapd.d}} 디렉터리의 ldif 백엔드(사용자가 알아볼 수 있는 장점이 있음) 에 저장했습니다. 젠투에서는 아직 설정을 변환할 필요가 없지만 현재 문서로 정리한 방법은 나중에 제거합니다.

OpenLDAP 서버 설정을 바꿀 수 있게 하려면 최소한 <code>cn=config</code>에 쓰기(또는 일반 관리) 접근 권한을 정의해야 합니다.

아래 예시에서는 {{Path|slapd.conf}} 파일 마지막에 적당한 줄을 추가하여 시스템 관리자(루트 사용자)에게 OLC(''cn=config'' 데이터베이스) 접근 권한을 부여하는 방법을 보여줍니다:

{{File|/etc/openldap/slapd.conf|루트 리눅스 계정 관리 권한을 cn{{=}}config에 부여하기|<pre>
database config
access to *
        by dn.exact="gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth" manage
        by * none
</pre>
}}

{{RootCmd|mkdir /etc/openldap/slapd.d}}
{{RootCmd|slaptest -f /etc/openldap/slapd.conf -F slapd.d}}
{{RootCmd|chown -R ldap slapd.d}}

이 명령을 실행하면 설정을 보내고 변환합니다. 이 과정이 끝나면 각각 마련된 ldif 파일을 사용하여 설정을 업데이트함니다. 그리고 이 방식에 충분히 익숙하지 않다면, 우선 {{Path|slapd.conf}}를 편집하고, 그 다음에 {{Path|slapd.conf}} 파일을 {{Path|slapd.d/}} 형식에 맞춰 재작성할 수 있습니다. 디렉터리 권한 확인을 잊지 마십시오.

더 많은 내용은 만들어진 파일의 자체 주석을 참고하십시오.

아래 줄은 {{Path|slapd.d/}} 설정 방식을 활성화합니다. 

{{Code|/etc/conf.d/slapd|<pre>
OPTS="-F /etc/openldap/slapd.d -h 'ldaps:// ldap:// ldapi://%2fvar%2frun%2fopenldap%2fslapd.sock'"
</pre>
}}

마지막으로, {{Path|/var/lib/openldap-data}} 구조를 만드십시오: 

{{RootCmd|mkdir -p /var/lib/openldap-data
|chown ldap:ldap /var/lib/openldap-data
|chmod 700 /var/lib/openldap-data}}


slapd를 시작하십시오: 

{{RootCmd|/etc/init.d/slapd start}}

데몬이 시작되지 않는다면 {{Path|slapd.conf}}의 ''loglevel'' 변수 값을 4 이상으로 설정하시고, {{Path|/var/log/messages}} 에서 자세한 내용을 확인하십시오.

==== OLC 방식 업데이트 LDIF 예제 ====

OLC 방식 설정 업데이트 예제를 아래에 보여드리겠습니다.

예를 들자면, OLC 설정 디렉터리 위치를 바꾸려면:

{{Code|fix-configs.ldif|<pre>
dn: cn=config
changetype: modify
delete: olcConfigFile

dn: cn=config
changetype: modify
replace: olcConfigDir
olcConfigDir: /etc/openldap/slapd.d
</pre>
}}

OpenLDAP 인스턴스에서 사용할 로그 레벨을 바꾸려면:

{{Code|loglevel.ldif|<pre>
dn: cn=config
changetype: modify
replace: olcLogLevel
olcLogLevel: stats sync
</pre>
}}

바뀐 내용을 적용하려면, 다음 명령을 실행하십시오:

{{RootCmd|ldapmodify -Y EXTERNAL -H ldapi:/// -f loglevel.ldif}}

== OpenLDAP 클라이언트 도구 설정 == 

LDAP 클라이언트 설정 파일을 편집하십시오. 이 파일은 ldapsearch 및 다른 ldap 명령행 도구에서 읽어들입니다.

{{File|/etc/openldap/ldap.conf|Add the following|<pre>
BASE         dc=genfic, dc=com
URI          ldap://ldap.genfic.com:389/ ldap://ldap1.genfic.com:389/ ldap://ldap2.genfic.com:389/
TLS_REQCERT  allow
TIMELIMIT    2
</pre>
}}

다음 명령으로 서버 동작을 시험해볼 수 있습니다: 

{{Cmd|ldapsearch -x -D "cn{{=}}Manager,dc{{=}}genfic,dc{{=}}com" -W}}

오류가 나타났다면, 자세한 수준을 늘리기 위해 <code>-d 255</code>를 추가하고, 처한 문제를 해결해보십시오.

== 중앙 인증용 클라이언트 설정 ==

원격 인증에 사용할 수 있는 방식과 도구는 많이 있습니다. 어떤 배포판에서는 사용하기 쉬운 자체 도구도 있습니다. 아래에는 특별한 순서는 없습니다. 로컬 사용자와 중앙 인증 계정을 통시에 합칠 수 있습니다. LDAP 서버가 루트 계정으로 여전히 로그인할 수 있는 위치에 접근할 수 없는 경우 등의 이유로 이러한 점은 중요합니다.

* SSSD  (Single Sign-on Services Daemon). 시스템에 캐싱, 오프라인 지원 기능을 제공할 수 있는 일반 프레임워크를 통해 원격 자원을 식별하고 인증하여 접근하는 기능을 제공하는 근본 기능을 수행합니다. PAM과 NSS 모듈을 제공하며, 나중에는 확장 사용자 정보에 대해 D-Bus 인터페이스를 지원할 예정입니다. 확장 사용자 데이터로 로컬 사용자를 저장하기 위해 더 나은 데이터베이스를 제공하기도 합니다.

* LDAP 서버에 로그인하고 인증하기 위해 <code>pam_ldap</code>를 사용합니다. 암호는 네트워크 상에 분명한 텍스트로 전송하지 ''않습니다''.  

* NSLCD (Name Service Look up Daemon). SSSD와 유사하지만 오래됐습니다.

* 기존 <code>pam_unix</code> 모듈을 사용하는 NSS(Name Service Switch)로 네트워크로 암호 해시를 가져옵니다. 사용자가 암호를 새로 바꿀 수 있게 하려면, <code>pam_ldap</code> 방식과 결합합니다.

아랫 부분에 시연한 처음 두 부분은, 동작하게 하는 최소한의 필요 설정 옵션입니다.

=== SSSD 방식의 클라이언트 PAM 설정 ===

더 직접적인 방식이 있습니다. 아래에 필요한 세가지 파일을 편집한 상태로 보여드리겠습니다. 

{{File|/etc/sssd/sssd.conf||<pre>
[sssd]
config_file_version = 2
services = nss, pam
domains = genfic
debug_level = 5
  
[nss]
filter_users = root,ldap,named,avahi,haldaemon,dbus,radiusd,news,nscd
  
[domain/genfic]
id_provider = ldap
auth_provider = ldap
ldap_search_base = dc=genfic,dc=com
ldap_tls_reqcert = never
# primary and backup ldap servers below [first server and],[second server]
ldap_uri = ldap://X.X.X.X,ldap://X.X.X.X
</pre>}}


sssd 시스템 서비스의 역할로서의 검색을 활성화 하려면 하부에 보이는대로 마지막 부분에 sss를 추가하십시오. 편집을 끝내고 나면 sssd 데몬을 시작하십시오.

{{File|/etc/nsswitch.conf|Example nsswitch.conf with SSSD support|<pre>
passwd:     files sss
shadow:     files sss
group:      files sss
  
netgroup:   files sss
automount:  files sss
sudoers:    files sss
</pre>}}

마지막 파일은 상당히 중요합니다. 편집하기 전에 추가 루트 터미널을 대체 수단으로 여십시오. 강조한 줄은 원격 인증을 활성화하려 추가했습니다. 참고로 사용자 디렉터리 만들기를 지원하는 {{Path|pam_mkhomedir.so}} 파일을 사용합니다.

{{File|/etc/pam.d/system-auth|Enable pam_sss support|<pre>
#%PAM-1.0
# This file is auto-generated.
# User changes will be destroyed the next time authconfig is run.
auth        required      pam_env.so
auth        sufficient    pam_unix.so nullok try_first_pass
auth        requisite     pam_succeed_if.so uid >= 500 quiet
'''auth        sufficient    pam_sss.so use_first_pass'''
auth        required      pam_deny.so
  
account     required      pam_unix.so
account     sufficient    pam_localuser.so
account     sufficient    pam_succeed_if.so uid < 500 quiet
'''account     [default=bad success=ok user_unknown=ignore] pam_sss.so'''
account     required      pam_permit.so
  
password    requisite     pam_cracklib.so try_first_pass retry=3
password    sufficient    pam_unix.so md5 shadow nullok try_first_pass use_authtok
'''password    sufficient    pam_sss.so use_authtok'''
password    required      pam_deny.so
  
session     required      pam_mkhomedir.so skel=/etc/skel/ umask=0077
session     optional      pam_keyinit.so revoke
session     required      pam_limits.so
session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
session     required      pam_unix.so
'''session     optional      pam_sss.so'''
</pre>}}

이제 다른 머신에서 로그인하십시오.

=== pam_ldap 모듈 방식으로 클라이언트 PAM 설정 ===

먼저 LDAP 인증을 할 수 있게 PAM을 설정하겠습니다. PAM이 LDAP 인증을 지원하게 {{Package|sys-auth/pam_ldap}}를 설치하고, ({{Path|nsswitch.conf}}가 활용하는) 추가 정보에 대해 여러분의 시스템이 LDAP 서버에 대응할 수 있도록 {{Package|sys-auth/nss_ldap}}를 설치하십시오. 

{{Emerge|pam_ldap nss_ldap}}

The last file is the most critical. Open a few extra root terminals as a backup before editing this. The lines in bold have been added to enable remote authentication.

{{Code|/etc/pam.d/system-auth|<pre>
#%PAM-1.0
 
auth       required     pam_env.so
auth       sufficient   pam_unix.so try_first_pass likeauth nullok
'''auth       sufficient   pam_ldap.so use_first_pass'''
auth       required     pam_deny.so
 
'''account    sufficient   pam_ldap.so'''
account    required     pam_unix.so
 
password   required     pam_cracklib.so difok=2 minlen=8 dcredit=2 ocredit=2 try_first_pass retry=3
password   sufficient   pam_unix.so try_first_pass use_authtok nullok md5 shadow
'''password   sufficient   pam_ldap.so use_authtok use_first_pass'''
password   required     pam_deny.so
 
session    required     pam_limits.so
session    required     pam_unix.so
'''session    optional     pam_ldap.so'''
</pre>
}}

이제 읽어들이도록 {{Path|/etc/ldap.conf}}를 바꾸십시오: 

{{Code|/etc/ldap.conf|<pre>
## #host 127.0.0.1
## #base dc=padl,dc=com
 
base dc=genfic,dc=com
## #rootbinddn uid=root,ou=People,dc=genfic,dc=com
bind_policy soft
bind_timelimit 2
ldap_version 3
nss_base_group ou=Group,dc=genfic,dc=com
nss_base_hosts ou=Hosts,dc=genfic,dc=com
nss_base_passwd ou=People,dc=genfic,dc=com
nss_base_shadow ou=People,dc=genfic,dc=com
pam_filter objectclass=posixAccount
pam_login_attribute uid
pam_member_attribute memberuid
pam_password exop
scope one
timelimit 2
uri ldap://ldap.genfic.com/ ldap://ldap1.genfic.com ldap://ldap2.genfic.com
</pre>
}}

다음, 서버에서 (OpenLDAP) {{Path|ldap.conf}} 파일을 복사하여 클라이언트에 넣고, 클라이언트가 LDAP 환경을 인식하도록 하십시오: 

{{RootCmd|scp ldap-server:/etc/openldap/ldap.conf /etc/openldap}}

마지막으로 클라이언트를 설정하여 시스템 계정에 대해 LDAP를 검사하도록 하십시오: 

{{Code|/etc/nsswitch.conf|<pre>
passwd:         files ldap
group:          files ldap
shadow:         files ldap
</pre>
}}

If you noticed one of the lines you pasted into your {{Path|/etc/ldap.conf}} was commented out (the <code>rootbinddn</code> line): you don't need it unless you want to change a user's password as superuser. In this case you need to echo the root password to {{Path|/etc/ldap.secret}} in plaintext. This is '''DANGEROUS''' and should be chmoded to 600. What you might want to do is keep that file blank and when you need to change someone's password that's both in the LDAP and {{Path|/etc/passwd}}, put the pass in there for 10 seconds while changing the users password and remove it when done.

=== 기존 데이터를 LDAP로 이전하기 ===

집중화 관리 및 일반 Linux/Unix 요소 관리를 위한 OpenLDAP 설정은 쉽지 않지만, 단일 시스템 관리 관점의 시스템을 OpenLDAP 기반 집중화 관리 시스템을 덜 까다롭게 하는 몇가지 도구와 스크립트가 인터넷에 둥둥 떠다닌다는 점은 감사해야 할 일입니다. :-P 

[http://www.padl.com/OSS/MigrationTools.html http://www.padl.com/OSS/MigrationTools.html]를 방문하셔서 스크립트를 가져오십시오. 이전 도구와 {{Path|make_master.sh}} 스크립트가 필요합니다. 

다음 도구의 압축을 해제하고 {{Path|make_master.sh}}  스크립트를 압축을 푼 위치에 복사하십시오: 

{{RootCmd|mktemp -d|output=<pre>
/tmp/tmp.zchomocO3Q
</pre>}}

{{RootCmd|cd /tmp/tmp.zchomocO3Q
|tar xvzf /path/to/MigrationTools.tgz
|mv /path/to/make_master.sh MigrationTools-47
|cd MigrationTools-47</pre>}}

다음 단계에서는 시스템 정보를 OpenLDAP로 옮깁니다. LDAP 구조와 환경에 대한 정보를 제공한 후 {{Path|make_master.sh}} 스크립트로 이 과정을 진행하십시오. 

작성하는 도중에, 도구에서 다음 입력사항을 요구합니다: 

{| class="wikitable" style="text-align: left;" 
|- 
! 입력
! 설명
! 예제
|- 
| LDAP BaseDN
| 트리 기반 위치 (루트)
| dc=genfic,dc=com
|- 
| Mail domain
| 이메일 주소에 사용하는 도메인
| genfic.com
|- 
| Mail host
| 메일 서버 인프라스트럭처의 FQDN
| smtp.genfic.com
|- 
| LDAP Root DN
| LDAP 구조상 관리 계정 정보
| cn=Manager,dc=genfic,dc=com
|- 
| LDAP Root Password
| 이전 <code>slappasswd</code> 명령 결과와 비교한 관리 계정 암호
| 
|-
|}

또한 도구에서 옮길 계정과 설정이 어떤건지 물어봅니다. 

{{Warning/ko|pam.d/system-auth를 바꿀 필요는 없습니다}}

== 복제 ==

=== 고가용성 ===

바뀌는 상황의 복제는 여러대의 LDAP 시스템에서 일어납니다. 이 안내서에서 OpenLDAP에서의 복제 동작은, 첫번째 LDAP 서버에서 권한을 읽어들이고 첫번째 LDAP 서버에서 두번째로 바뀐 내용을 끌어들이도록 하는 특정 복제 계정(<code>ldapreader</code>)을 활용하여 설정합니다. 

두번째 LDAP 서버가 첫번째 서버의 동작과 유사한 동작을 허용한 상태에서 이 설정을 복제합니다. OpenLDAP의 내부 구조에 감사해야 할 일은 LDAP 구조상 바뀐 내용이 또 있다 할지라도 중복 적용하지 않습니다.

=== 복제 설정 ===

To setup replication, first setup a second OpenLDAP server, similarly as above. However take care that, in the configuration file:

* The ''sync replication provider'' is pointing to the ''other'' system

* The ''serverID'' of each OpenLDAP system is different

다음, 동기화 계정을 만드십시오. LDIF 파일(LDAP서버 에서 데이터 입력할때 사용하는 형식)을 만들고 LDAP 서버 각각에 이를 추가하겠습니다. 

{{Cmd|slappasswd -s myreaderpassword|output=<pre>
 {SSHA}XvbdAv6rdskp9HgFaFL9YhGkJH3HSkiM
</pre>}}

{{Cmd|cat ldapreader.ldif|output=<pre>
dn: cn=ldapreader,dc=genfic,dc=com
userPassword: {SSHA}XvbdAv6rdskp9HgFaFL9YhGkJH3HSkiM
objectClass: organizationalRole
objectClass: simpleSecurityObject
cn: ldapreader
description: LDAP reader used for synchronization
</pre>}}

{{Cmd|ldapadd -x -W -D "cn{{=}}Manager,dc{{=}}genfic,dc{{=}}com" -f ldapreader.ldif|output=<pre>
Password: ## enter the administrative password
</pre>}}

== LDAP 서버 보안 설정 ==

=== OpenLDAP 권한 ===

{{Path|/etc/openldap/slapd.conf}}를 보면 사용자들이 읽고 쓸 수 있는 데이터가 무엇인지 ACL을 지정할 수 있는 부분이 있습니다. 

{{Code|/etc/openldap/slapd.conf|<pre>
access to attrs=userPassword,gecos,description,loginShell
  by self write
  
access to *
  by dn="uid=root,ou=People,dc=genfic,dc=com" write
  by users read
  by anonymous auth
</pre>
}}

이 설정을 통해 모든 사용자가 바꿀 수 있는 권한을 취득합니다. 이게 여러분의 정보라면, 이 요소에 대한 쓰기 권한을 취득합니다. 만약 다른 사용자의 정보라면 이걸 여러분이 볼 수 있습니다. 익명 사용자는 로그인하기 위해 로그인 이름과 암호를 보낼 수 있습니다. 네 가지 등급으로 나누어, 낮은 등급에서 높은 등급까지 매길 수 있습니다: <code>auth search read write</code>. 

다음 ACL은 일반 사용자들은 볼 수 없게 차단하고 나머지 사용자는 각자의 섀도우 암호를 사용하게 하여 좀 더 안전합니다: 

{{Code|/etc/openldap/slapd.conf|<pre>
access to attrs="userPassword"
  by dn="uid=root,ou=People,dc=genfic,dc=com" write
  by dn="uid=John,ou=People,dc=genfic,dc=com" write
  by anonymous auth
  by self write
  by * none
 
access to *
  by dn="uid=root,ou=People,dc=genfic,dc=com" write
  by dn="uid=John,ou=People,dc=genfic,dc=com" write
  by * search
</pre>
}}

This example gives root and John access to read/write/search for everything in the the tree below {{Path|dc{{=}}genfic,dc{{=}}com}}. This also lets users change their own <code>userPassword</code>'s. As for the ending statement everyone else just has a search ability meaning they can fill in a search filter, but can't read the search results. Now you can have multiple ACLs but the rule of the thumb is it processes from bottom up, so your toplevel should be the most restrictive one.

== OpenLDAP로 작업하기 ==

=== 디렉터리 관리 ===

아파치/proftpd/qmail/삼바에서 사용자를 인증할 때 디렉터리를 사용하여 시작할 수 있습니다. 쉬운 관리 인터페이스를 제공하는 [https://www.ldap-account-manager.org/lamcms/ LAM (LDAP 계정 관리자)] phpldapadmin,diradm, jxplorer, lat으로 관리할 수 있습니다.

== 감사문 ==

이 안내서의 목적을 달성하기 위해 머신을 빌려준 Matt Heler에게 감사를 표합니다. 또한 #ldap @ irc.freenode.net의 대단한 분들께도 감사를 드립니다. 

{{Migrated|originalauthors=Benjamin Coles, swift, Brandon Hale, Benny Chuang, jokey, nightmorph}}


[[Category:Server and Security]]
