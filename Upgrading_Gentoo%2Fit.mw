<languages />

{{Metadata|abstract=Questo documento spiega come i nuovi rilasci di Gentoo influenzino le installazioni preesistenti.}}

Questo documento spiega come i nuovi rilasci di Gentoo influenzino le installazioni preesistenti.

== Aggiornamenti ==

=== Filosofia ===

Qui nella terra di Gentoo, il concetto di aggiornamento è piuttosto diverso se confrontato con il resto del mondo Linux. È un fatto ben noto che Gentoo non sia in contatto con la maniera "classica" di aggiornare il software: attendere un nuovo rilascio, scaricarlo, masterizzarlo, mettere il CD nel lettore e poi seguire le istruzioni per l'aggiornamento. 

Gli utenti di Gentoo tuttavia sanno che questo processo è estremamente frustrante per gli utenti esperti che vogliono avere software all'avanguardia. Anche gli utenti esperti di altre distribuzioni probabilmente condividono lo stesso pensiero, data la popolarità e la diffusione di strumenti come <code>apt</code> o <code>apt-rm</code> che danno la possibilità di avere aggiornamenti veloci e frequenti. Tuttavia, nessuna distribuzione è più adatta di Gentoo per soddisfare questo tipo di utenti esigenti. Sin dall'inizio, Gentoo è stato progettato basandosi sul concetto di aggiornamenti rapidi e incrementali. 

Idealmente, gli utenti installano il software una volta sola e non si preoccupano dei rilasci: basta seguire le istruzioni nell'[[Handbook:X86/Working/Portage/it|Introduzione a Portage]] nel [[Handbook:X86|Manuale di Gentoo]] che spiegano come mantenere aggiornato il sistema. Questo è come vanno le cose di solito; talvolta però, vengono fatti dei cambiamenti al sistema di base tali da dover richiedere aggiornamenti manuali.

=== Rilasci e profili ===

Una domanda ricorrente circa il processo di rilascio di Gentoo è: "Perché lanciare rilasci frequenti, se poi non si lascia aggiornare il software agli utenti?" Ci sono varie ragioni: 

* Un nuovo rilascio comporta nuovi CD di installazione con correzione di errori e nuove funzionalità
* Un nuovo rilascio fornisce un insieme aggiornato di pacchetti GRP, quindi gli utenti che scelgono la maniera veloce per l'installazione (stage3 + pacchetti precompilati) si ritrovano con un sistema che non è obsoleto
* Infine, un nuovo rilascio può, di tanto in tanto, implementare alcune funzionalità che sono incompatibili con i rilasci precedenti

Quando un rilascio include nuove funzionalità incompatibili oppure fornisce un insieme di pacchetti ed impostazioni di base che modificano profondamente il comportamento del sistema, si dice che fornisce un nuovo ''profilo''. 

Un ''profilo'' è un insieme di file di configurazione, memorizzati in una sotto cartella di {{Path|/usr/portage/profiles}}, che descrivono cose come le ebuild che vengono considerate pacchetti di ''sistema'', le opzioni USE predefinite, la mappatura predefinita per i pacchetti virtuali, e l'architettura sulla quale sta girando il sistema. 

Il profilo in uso viene determinato dal collegamento simbolico {{Path|/etc/portage/make.profile}}, che punta ad una sotto cartella di {{Path|/usr/portage/profiles}} che contiene i file del profilo. Per esempio, il profilo predefinito {{Keyword|x86}} 13.0 può essere trovato in {{Path|/usr/portage/profiles/default/linux/x86/13.0}}. I file nelle cartelle superiori sono anch'essi parte del profilo (e sono di conseguenza condivisi da diversi sotto profili). Per questo vengono chiamati ''profili a cascata''. 

Profiles obsoleted by new ones are kept in {{Path|/usr/portage/profiles}} along with the current ones, but they are marked as deprecated. When that happens a file named {{Path|deprecated}} is put in the profile directory. The content of this file is the name of the profile that should be "upgraded to"; Portage uses this information to automatically warn administrators when they should update to a new profile. 

There are various reasons that a new profile may be created: the release of new versions of core packages (such as {{Package|sys-apps/baselayout}}, {{Package|sys-devel/gcc}}, or {{Package|sys-libs/glibc}}) that are incompatible with previous versions, a change in the default USE flags or in the virtual mappings, or maybe a change in system-wide settings.

== Keeping up with new releases ==

=== Releases without profile changes ===

If a new Gentoo release does not include a new profile then just pretend that it never happened. :) 

When the installed packages are upgraded as [[Handbook:X86/Working/Portage|explained]] in the Gentoo Handbook, then the system will be exactly the same as one that has been installed using the new release.

=== Releases with profile changes ===

If a release (such as 13.0 for {{Keyword|x86}}) introduces a new profile, then there is the choice to migrate to the new profile. 

Generally, such migrations are not mandatory, and systems can continue to use the old profile - just update the packages as [[Handbook:X86/Working/Portage|explained]] in the Gentoo Handbook. 

However, Gentoo strongly recommends updating the profile if it becomes deprecated. When this happens, it means that Gentoo developers no longer plan on supporting it. 

When a profile migration is apparent, then the upgrade has to be executed manually. The way to update may vary significantly from release to release; it depends on how deep the modifications introduced in the new profile are. 

In the simplest case users only have to change the {{Path|/etc/portage/make.profile}} symlink, in the worst case they may have to recompile the entire system from scratch while doing a neat voodoo dance. Migration is usually covered in the release notes. The necessary [[#Profile_updating_instructions|instructions]] are explained further in this guide.

=== Supported profiles ===

To view the list of supported profiles, call {{c|eselect}} (which can be installed using {{c|emerge eselect}}) as follows: 

{{RootCmd|eselect profile list}}

=== Upgrading from older systems ===

Some systems are too old to just switch the profile. Newer profiles might need more recent Portage versions or other software that cannot be installed anymore because the package definitions (ebuilds) for those older software versions are not available anymore.

If this is the case, the system should first receive older Portage tree snapshots and upgrade at least Portage (but preferably all packages in the system set), gradually increasing the Portage tree snapshot date until it is recent enough to follow the profile switching instructions again:

{{RootCmd
|mv /usr/portage /usr/portage.latest
|tar xjpf /path/to/portage-20090720.tar.bz2 -C /usr
|emerge -u portage
}}

Older snapshots are often still available on some mirrors on the Internet or on [https://dev.gentoo.org/~swift/snapshots/ specific locations] dedicated for this purpose. It is recommended to verify the integrity of those files to make sure they are not tampered with:

{{RootCmd|gpg --verify portage-20090720.tar.bz2.gpgsig portage-20090720.tar.bz2}}

Although the [[Project:RelEng#Keys|release signing keys]] might be expired, the signature should still be OK.

=== Upgrading from (too) old systems ===

Sometimes, systems are too old to easily upgrade. The upgrade path might need intermediate versions of software (such as portage) that does not exist any more, requiring to update the portage tree in steps (for instance incremental tree updates with steps of 3 to 4 months). 

To upgrade such systems, a recent stage3 can be used to update the system. Instructions for that are given in the [[#Updating_old_systems|Updating old systems]] section.

== Profile updating instructions ==

=== General instructions ===

{{Important|Make sure the main Gentoo repository (the Portage tree) has been synced before performing any profile changes.}}

First, run {{c|emerge eselect}}. The {{c|eselect}} utility makes viewing and selecting profiles easy, without needing to create or remove symlinks by hand. 

{{RootCmd|eselect profile list
|eselect profile set <number>}}

Changing profiles manually is still supported though: 

{{RootCmd
|rm /etc/portage/make.profile
|cd /etc/portage
|ln -s ../../usr/portage/profiles/<selected profile> make.profile
}}

{{Note|There are '''desktop''' and '''server''' subprofiles for most architectures. Examine these profiles carefully, as they may serve the requirements better than the extremely minimal default profiles.}}

{{Note|The developer subprofile is specifically for Gentoo Linux development tasks. It is ''not'' meant to help set up general development environments.}}

=== Updating to 2008.0, 2007.0, or 2006.1 ===

Be aware that, if an upgrade from these profiles is selected, that they expect the system to be set to a Unicode locale by default; specifically that <code>UNICODE="yes"</code> is set in {{Path|/etc/rc.conf}}. For this to work, a Unicode locale for the system must be created. Please read the [[UTF-8|UTF-8 article]] to learn how to create the proper locale. 

Alternatively, if setting a locale is not preferred, then users need to specify <code>UNICODE="no"</code> in {{Path|/etc/rc.conf}}, and re-emerge {{Package|sys-apps/baselayout}} (or wait until the next baselayout update) with the <code>-unicode</code> USE flag. This can be accomplished through:


* setting <code>-unicode</code> just for {{Package|sys-apps/baselayout}}, like so:
: {{RootCmd|echo "sys-apps/baselayout -unicode" >> /etc/portage/package.use}}
: {{Emerge|sys-apps/baselayout}}

* or setting it globally for all packages by adding it to the USE variable in {{Path|/etc/portage/make.conf}}:
: {{FileBox|filename=/etc/portage/make.conf|title=Disable unicode support globally|lang=bash|1=USE="-unicode"}}
: {{Emerge|sys-apps/baselayout}}

{{Note|Users updating to a 2007.0 profile on the Sparc architecture will need to follow the [[Upgrading_GCC|GCC Upgrading Guide]], as <code>gcc-4</code> is the default compiler.}}

Finally, follow the general upgrade instructions for updating the profile.

=== Updating to 2006.0 ===

To switch to the 2006.0 profile, point the {{Path|/etc/portage/make.profile}} symlink to the new location. Make sure Portage is updated before changing the profile. 

{{RootCmd
|rm /etc/portage/make.profile
|ln -s ../usr/portage/profiles/<selected profile> /etc/portage/make.profile
}}

{{Keyword|alpha}} - Users that use a 2.4 kernel or don't want to use NPTL should use the default-linux/alpha/no-nptl profile. More information is available in [http://www.gentoo.org//proj/en/releng/release/2006.0/alpha-release-notes.xml the alpha release notes]. 

{{Keyword|ppc}} - The merge of the ppc32 and ppc64 profiles went forward. The ppc32 profile has been changed in a way that offers a minimalistic generic profile for all purposes, located in default-linux/ppc/ppc32. The release-dependent profile is optimized for desktop-usage and located in default-linux/ppc/ppc32/2006.0. There are some subprofiles available for G3 and G4 processors, and G3/Pegasos and G4/Pegasos for the Pegasos Open Desktop Workstation. Make sure to choose the correct subprofile for the system when migrating to a 2006.0 profile. 

{{Keyword|sparc}} - Upgrading to the '''2.4''' -kernel based 2006.0/2.4 profile requires manual user intervention (unmerging java stuff) and an {{c|emerge -e @world}} because of the [[Upgrading_GCC|gcc upgrade]]. Upgrading to the '''2.6''' -kernel based 2006.0 profile which is not considered stable also requires an entry in {{Path|/etc/portage/package.unmask}} to unmask a 2.6 version of {{Package|sys-kernel/gentoo-sources}} and a full rebuild. 

'''All other archs''' - There are no fundamental changes in this profile. No specific action needs to be performed.

=== Updating to 2005.1 ===

To switch to the 2005.1 profile, point the {{Path|/etc/portage/make.profile}} symlink to the new location. Make sure Portage is updated before changing the profile. 

{{RootCmd|rm /etc/portage/make.profile
|ln -s ../usr/portage/profiles/<selected profile> /etc/portage/make.profile}}

'''All archs''' - There are no fundamental changes in this profile. No specific action needs to be performed. 

{{Keyword|ppc}} - With the 2005.1 release, the ppc and ppc64 profiles were merged and a number of subprofiles for specific subarchitectures were created. Make sure to choose the correct subprofile for the system when migrating to a 2005.1 profile. 

=== Updating to 2005.0 ===

With the introduction of 2005.0, several architectures have decided to define additional profiles. Make sure to read the description of said profiles before deciding to migrate to one of them. Most architectures now also default to the 2.6 kernel tree where 2.4 was chosen previously. 

Some architectures require a bit more actions to be completed in order to convert from one profile to another. If that is the case, the step-by-step guides are linked from the table. 

{| class="table table-striped table-condensed" style="text-align: left;" 
|- 
! Profile
! Description
! Specific upgrade guide
|- 
| default-linux/alpha/2005.0
| Default Alpha 2005.0 profile for 2.6 kernels
| 
|- 
| default-linux/alpha/2005.0/2.4
| Alpha 2005.0 profile for 2.4 kernels
| 
|- 
| default-linux/amd64/2005.0
| Default AMD64 2005.0 profile for 2.6 kernels
| 
|- 
| default-linux/amd64/2005.0/no-multilib
| AMD64 2005.0 profile for multilib-disabled system installations
| 
|- 
| default-linux/arm/2005.0
| Default ARM 2005.0 profile for 2.6 kernels
| 
|- 
| default-linux/hppa/2005.0
| Default HPPA 2005.0 profile for 2.6 kernels
| 
|- 
| default-linux/hppa/2005.0/2.4
| HPPA 2005.0 profile for 2.4 kernels
| 
|- 
| default-linux/mips/2005.0
| Default MIPS 2005.0 profile
| 
|- 
| default-linux/mips/cobalt/2005.0
| Cobalt specific MIPS 2005.0 profile
| 
|- 
| default-linux/mips/mips64/n32/2005.0
| 2005.0 profile for n32-supporting MIPS platforms
| 
|- 
| default-linux/mips/mips64/ip28/2005.0
| Indigo2 Impact specific 64-bit 2005.0 profile
| 
|- 
| default-linux/mips/mips64/2005.0
| 64-bit MIPS 2005.0 profile
| 
|- 
| default-linux/ppc/2005.0
| Default PPC 2005.0 profile for 2.6 kernels
| 
|- 
| default-linux/ppc64/2005.0
| Default PPC64 2005.0 profile for 2.6 kernels
| 
|- 
| default-linux/s390/2005.0
| Default S390 2005.0 profile
| 
|- 
| default-linux/sparc/sparc32/2005.0
| Default Sparc 32-bit 2005.0 profile
| 
|- 
| default-linux/sparc/sparc64/2005.0
| Default Sparc 64-bit 2005.0 profile
| 
|- 
| default-linux/x86/2005.0
| Default x86 2005.0 profile for 2.6 kernels
| 
|- 
| default-linux/x86/2005.0/2.4
| x86 2005.0 profile for 2.4 kernels
| 
|-
|}

To switch to the selected profile, point the {{Path|/etc/portage/make.profile}} symlink to the new location. Make sure Portage is updated before changing the profile! 

{{RootCmd|rm /etc/portage/make.profile
|ln -s ../usr/portage/profiles/<selected profile> /etc/portage/make.profile}}

When an upgrade is planned from a Linux 2.4-based system to a 2.6 kernel, make sure to read our [[Kernel/Migrate_2.4_to_2.6|Gentoo Linux 2.6 Migration Guide]].

=== Updating to 2004.3 ===

With the introduction of the 2004.3 profiles, users are not going to see huge modifications of their systems (see below for details). However, Gentoo developers decided to push out this new profile and to deprecate quite a few of the old ones to speed up the adoption of ''stacked profiles'', that is, the profiles that follow the new layout of the {{Path|/usr/portage/profiles}} directory, for instance {{Path|/usr/portage/profiles/default-linux/x86/2004.3}} (supported by Portage 2.0.51 or later). 

To switch to the 2004.3 profile, point the {{Path|/etc/portage/make.profile}} symlink to the new location: 

{{Warning|Don't forget to upgrade Portage ''before'' changing the profile!!!}}

{{RootCmd|rm /etc/portage/make.profile
|ln -s ../usr/portage/profiles/default-linux/<arch>/2004.3 /etc/portage/make.profile}}

'''All archs''' - As said above, there are no big changes introduced in this profile. However, it should be noted that {{Package|sys-apps/slocate}} and {{Package|net-misc/dhcpcd}} are no longer considered system packages. This means that during a {{c|emerge --depclean}}, Portage will try to remove them from the system. If any of those packages are needed, add them to {{Path|/var/lib/portage/world}} after the profile switch, or manually emerge them. 

{{Keyword|ppc}} - {{Package|sys-fs/udev}} is now the default instead of {{Package|sys-fs/devfs}} for newly installed machines. This has no effect on already installed machines, though.

=== Updating Portage to support cascading profiles ===

Although this section does not seem to integrate well in this upgrading guide, it is quite important. Any profile listed above this section requires a Portage version that supports cascading profiles. However, some obsoleted profiles don't allow the user to upgrade Portage or the user is using a profile that isn't available anymore - any attempt to upgrade Portage will result in a failure. 

To work around this problem, users can set a temporary symbolic link to the ''obsolete'' profile, allowing them to upgrade their Portage after which they can continue with the upgrade procedure set forth in this guide. Please substitute <code><nowiki><arch></nowiki></code> with the respective system architecture: 

{{RootCmd
|rm /etc/portage/make.profile
|cd /etc/portage
|ln -sf ../usr/portage/profiles/obsolete/<arch> make.profile
|emerge -n '>{{=}}sys-apps/portage-2.0.51'
}}

=== Updating to 2004.2 ===

To switch to the 2004.2 profile, point the {{Path|/etc/portage/make.profile}} symlink to the new location: 

{{Warning|Don't forget to upgrade Portage ''before'' changing the profile!!!}}

{{RootCmd|rm /etc/portage/make.profile
|ln -s ../usr/portage/profiles/default-linux/<arch>/2004.2 /etc/portage/make.profile}}

{{Keyword|x86}} - This profile changes the default X11 implementation from <s>{{Package|x11-base/xfree}}</s> (deprecated) to {{Package|x11-base/xorg-x11}}. This change only touches the ''default'' value, and is only relevant for those who have not installed an X server yet. If one is already installed, then it will not affect the system at all; users are free to switch from one X server to the other exactly as before. 

{{Keyword|amd64}} - There are no fundamental changes from previous profiles, no specific action needs to be performed.

=== Updating to 2004.0 ===

To switch to the 2004.0 profile, point the {{Path|/etc/portage/make.profile}} symlink to the new location: 

{{RootCmd
|rm /etc/portage/make.profile
|ln -s ../usr/portage/profiles/default-<arch>-2004.0 /etc/portage/make.profile
}}

'''All archs''' - There are no fundamental changes from previous profiles, no specific action needs to be performed. 

=== Updating from profiles older than 1.4 to 1.4 ===

The instructions for this upgrade are quite complex, and can be found [https://gentoo-handbook.lugons.org/doc/en/new-upgrade-to-gentoo-1.4.xml here]. 

== Updating old systems ==

=== Idea of the upgrade ===

The idea with this upgrade approach is that we create an intermediate build chroot in which a recent stage3 is extracted. Then, using the tools available in the stage3 chroot we upgrade the packages on the live system. 

{{Warning|The commands below might be incomplete and serve more as a guidance rather than work instructions. Unless the approach is clear, it might be faster to just backup the important files and re-install Gentoo.}}

=== Preparing the intermediate build chroot ===

Let's first create the intermediate build chroot location, say {{Path|/mnt/build}}, and extract a recent stage3 archive into it. 

{{RootCmd
|mkdir -p /mnt/build
|tar -xf /path/to/stage3-somearch-somedate.tar.bz2 -C /mnt/build
|mount --rbind /dev /mnt/build/dev
|mount --rbind /proc /mnt/build/proc
|mount --rbind /sys /mnt/build/sys
}}

Next, we create a mount point inside this chroot environment, on which we then bind-mount the live (old) environment. 

{{RootCmd
|mkdir -p /mnt/build/mnt/host
|mount --rbind / /mnt/build/mnt/host
}}

So now the live (old) system is also reachable within {{Path|/mnt/build/mnt/host}}. This will allow us to reach the live (old) system and update the packages even when chrooted inside the intermediate build chroot.

=== Network, chroot, and update ===

The new install needs to access the network, so copy over the network related information:

{{RootCmd|cp -L /etc/resolv.conf /mnt/build/etc/}}

Now chroot into the intermediate build location, and start updating vital packages on the live system, until the live system can be updated from within the live system (rather than through the intermediate build chroot):

{{RootCmd
|chroot /mnt/build
|source /etc/profile
|export PS1{{=}}"(chroot) ${PS1}"}}

{{GenericCmd|prompt=(chroot) root #|color=red|emerge --sync}}

<!-- The following section is being tested... do not uncomment (author: Maffblaster -->
<!--Make sure the profile in the chroot matches the one inside the (old) live system. Run the following command in both environments to make sure profiles match:

{{RootCmd|eselect profile list}}
{{GenericCmd|prompt=(chroot) root #|color=red|eselect profile list}}

Verify Portage's configuration files in the new chroot are the same as the ones set in the old system. The following command will recursively copy the profile from the (old) live system into the chroot 

{{GenericCmd|prompt=(chroot) root #|color=red
|cp -rv /mnt/host/etc/portage /etc
|cp -rv /mnt/host/var/lib/portage /var/lib
}}

{{Note|Look at the output of the above commands to verify everything has copied correctly. There may be errors if some path names in the (old) live system were directories. For example, if {{Path|/etc/portage/package.use}} is a directory in the host, then it will probably not get copied correctly to the chroot system.}}
-->

Now start building packages into the (old) live system. If Portage is old or missing, it is a good idea to start with that:

{{GenericCmd|prompt=(chroot) root #|color=red|emerge --root{{=}}/mnt/host --config-root{{=}}/mnt/host --verbose --oneshot sys-apps/portage}}

Keep this chrooted session open and try to update the (old) live system. When failures occur, use this chrooted session to update packages using the build tools available in the intermediate build chroot (which includes recent {{Package|sys-libs/glibc}}, {{Package|sys-devel/gcc}}, etc.). Tools can be added as needed to the build chroot.

{{Important|Do not forget to add <code>--root{{=}}/mnt/host --config-root{{=}}/mnt/host</code> to all {{c|emerge}} commands executed within the chroot! Otherwise the chroot itself is updated rather than the (old) live system.}}

For some installations it may be necessary to update configuration files in order to install new software. Make the changes in the chroot environment.

To get the system fully up-to-date before exiting the root, build the <code>@world</code> set (all packages) into the (old) live system:

{{GenericCmd|prompt=(chroot) root #|color=red|emerge --root{{=}}/mnt/host --config-root{{=}}/mnt/host --update --newuse --deep --ask @world}}

Once finished the system should now be up to date!

[[Category:Server and Security]] {{Migrated|originalauthors=Gregorio Guidi, Chris Gianelloni, Joshua Saddler}}
