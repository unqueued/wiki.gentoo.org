<languages />
{{InfoBox stack
|{{InfoBox wikipedia|text=System time|header=true}}
|{{InfoBox wikipedia|Real-time clock|text=Real-time clock}}
|{{InfoBox wikipedia|Time zone|text=Time zone}}
}}


Unix システムは、システムクロックによって裏付けられるシステム時刻を時刻の把握に使用しています。これは、ハードウェアクロックまたは外部タイム・サーバーによって設定することができます。

== 序文 ==

=== ソフトウェアクロックとハードウェアクロック ===

カーネルによって提供される[[#システムクロック|システムクロック]]は、1970年 1月 1日 00時00分00秒から行われたティック(訳註: タイマーの刻み)数の単純なカウントとして実装されています。これは [[Wikipedia:Unix time|Unix 時間]] と呼ばれます。

[[#Hardware clock|ハードウェアクロック]]（また、リアルタイムクロックやRTCとして知られる）は、典型的には、メインボード上のコンポーネントです。オペレーティングシステムの状態に関係なく、コンピュータがシャットダウンしても常に実行されます。

=== UTC時間とローカルタイム ===

ハードウェアクロックの時刻は次の2つの標準を示すように変更できます: ローカルタイムまたは [[Wikipedia:Coordinated Universal Time|UTC 時間]]です。ローカルタイムは [[Wikipedia:Daylight saving time|DST]] (訳註: 夏時間)も含めたタイムゾーンにおける実際の時刻です。推奨されるのは UTC 時間です。なぜなら、システム時刻はタイムゾーンの時差と DST を加算して算出されるからです。そうすれば夏時間の変更は自動的に適用されますし、またハードウェアクロックを変更することなくタイムゾーンを変更することができます。デュアルブートのシステムを使用する場合は例外かもしれません; 他のオペレーティングシステムが UTC のハードウェアクロックをサポートしていないか、またはそのように設定されていない場合です(デフォルトでは、Windows はローカルタイムを使用します)。

== タイムゾーン ==

時刻を適切に保つには、あなたのタイムゾーン（標準時）を選び、システムがどの地域にあるのかを知らせる必要があります。

=== OpenRC ===

ローカルタイムゾーンは {{Path|/usr/share/zoneinfo}} から探してください。{{Path|/usr/share/zoneinfo/Etc/GMT*}} は名前が期待されるゾーンを表していないため避けてください。たとえば {{Path|/usr/share/zoneinfo/Etc/GMT-8}} は実際は GMT+8 です。ローカルタイムにする場合は "ローカルタイム" のタイムゾーンを選択します。

ゾーン情報を選択したら、{{Path|/etc/timezone}} でタイムゾーンをセットします。たとえばドイツの場合:

{{FileBox|filename=/etc/timezone|1=Europe/Berlin}}

このファイルの情報は、パッケージのアップデートのたびに選択したゾーン情報ファイルを {{Path|/etc/localtime}} にコピーするため、{{Package|sys-libs/timezone-data}} によって使用されます。このファイルをこの手順以外でセットアップするには以下を実行します:

{{Emerge|params=--config|timezone-data}}

=== systemd ===

[[systemd]] にはタイムゾーンを管理するための {{c|timedatectl}} が含まれています:

現在のゾーンを確認するには:

{{Cmd|timedatectl}}

利用可能なゾーンをリストアップするには:

{{Cmd|timedatectl list-timezones}}

タイムゾーンをたとえばドイツに変更するには:

{{RootCmd|timedatectl set-timezone Europe/Berlin}}

== LC_TIME ==

日付や時刻のフォーマットはこの[[Localization/Guide#Environment_variables_for_locales|環境変数]] で定義されています。詳細については [http://www.gnu.org/software/libc/manual/html_node/Locale-Categories.html#index-LC_005fTIME The GNU C Library] を参照してください。

== システムクロック ==

通常、システムクロックの時刻は起動時にハードウェアクロックによって設定されます。代替的には、システムクロックを手動で設定するか、ネットワークタイムサーバを使用することが可能です。

{{c|date}} コマンドを使ってシステムクロックの時刻を管理できます:

現在のソフトウェアクロックの時刻を確認するには:

{{Cmd|date}}

システムクロックをたとえば2016年5月6日12時34分にセットするには:

{{RootCmd|date 050612342016}}

=== タイムサーバー ===

タイムサーバーの使用に関する情報については [[Ntp|NTP]] の記事をご覧ください。

=== systemd ===

systemd にはシステムクロックの時刻を管理するための {{c|timedatectl}} コマンドが含まれています:

現在のソフトウェアクロックの時刻を確認するには:

{{Cmd|timedatectl}}

システムクロックをセットするには:

{{RootCmd|timedatectl set-time "2012-12-17 12:30:59"}}

== ハードウェアクロック ==

ハードウェアクロックを得るには、以下のカーネルオプションが有効化されていなければなりません:

{{KernelBox|title=ハードウェアクロックに必要なカーネルオプション|1=
Device Drivers  --->
    [*] Real Time Clock  --->
        [ ]   Set system time from RTC on startup and resume
        [ ]   Set the RTC time based on NTP synchronization
        [*]   /sys/class/rtc/rtcN (sysfs)
        [*]   /proc/driver/rtc (procfs for rtc0)
        [*]   /dev/rtcN (character devices)
        <*>   PC-style 'CMOS'
}}

実行中に現在のハードウェアクロックの時刻を確認するには:

{{RootCmd|hwclock --show}}

ハードウェアクロックを現在のシステムクロックに合わせて設定するには:

{{RootCmd|hwclock --systohc}}

=== ハードウェアクロックとシステム時刻を同期する ===

通常、ブート時にシステムクロックを設定するためにハードウェアクロックが使用されます。これはカーネル自体またはブートサービス (init スクリプト) によって行うことができます。同様に、シャットダウン時にはカーネルまたはサービスによってソフトウェアクロックをハードウェアクロックに書き込むことができます。これは、システムがブート時に正しい時刻を得るのに役立ちます。

==== カーネル内方式 ====

十分に新しいカーネル(3.9 以降)では、自動的にシステム時刻のセットを処理するように Linux を設定できます。そうするためには、'''Set system time ...''' と '''Set the RTC time ...''' というドライバーも有効化する必要があります:

{{KernelBox|title=カーネルにシステムクロックを同期させる|1=
Device Drivers  --->
    [*] Real Time Clock  --->
        [*]   Set system time from RTC on startup and resume
        [*]   Set the RTC time based on NTP synchronization
        [*]   /sys/class/rtc/rtcN (sysfs)
        [*]   /proc/driver/rtc (procfs for rtcN)
        [*]   /dev/rtcN (character devices)
        <*>   PC-style 'CMOS'
}}

'''Set the RTC time based on NTP synchronization''' は、いくつかの [[Network Time Protocol|NTP 実装]]では使用されないことに注意してください。サポートされる NTP 実装には以下のものが含まれます: {{Package|net-misc/chrony}} (詳しくは [http://chrony.tuxfamily.org/comparison.html ここ] を参照) と {{Package|net-misc/ntp}} (詳しくは [[Ntp|NTP の記事]] を参照)。OpenNtpd({{Package|net-misc/openntpd}}) はハードウェア時刻の設定をサポートして'''いません'''ので、避けてください。

ハードウェア時刻が更新されているか確認するには、以下を実行します:

{{RootCmd|adjtimex --print {{!}} grep status}}

報告された数字の64ビットはセットされていない状態(0)であるべきです。詳細な情報は hwclock の man page にあります('11 minute mode' を検索してください)。

==== OpenRC ====

OpenRC を使用している場合、{{Path|hwclock}} init スクリプトでブート時にシステムクロックを設定し、またシャットダウン時にシステム時刻をハードウェアクロックに同期することができます。このサービスはデフォルトでは有効化されており、前に触れたカーネル内方式を選んだ場合には''無効''にすべきです。カーネルのリアルタイムクロックを使用している場合には {{Path|hwclock}} スクリプトを実行''しない''でください。 

{{RootCmd|rc-update delete hwclock boot}}

ただし、OpenRC を使用する必要がある場合には、{{Path|/etc/conf.d/hwclock}} の <code>clock_hctosys</code> と <code>clock_systohc</code> をいずれも <code>YES</code> に設定してください。デフォルトでは、このサービスは UTC 標準時用に設定されています。ローカルタイムに変更するには <code>clock="local"</code> を追加します。

{{FileBox|filename=/etc/conf.d/hwclock|title=ハードウェアクロックの同期を追加する|lang=bash|1=
clock_hctosys="YES" 
clock_systohc="YES"
# clock="local"
}}

{{Path|hwclock}} サービスを再起動し、ハードウェアクロック init スクリプトがシステムのブート時に起動するようにします:

{{RootCmd
|rc-service hwclock restart
|rc-update add hwclock boot
}}

==== Systemd ====

[[systemd]] を使用してブート時にシステムクロックを設定できます。ハードウェアクロックを管理するには {{c|timedatectl}} を使用します:

現在のハードウェアクロックの時刻を確認するには:

{{Cmd|timedatectl {{!}} grep "RTC time"}}

ハードウェアクロックを現在のシステムクロック(UTC標準時)に合わせて設定するには:

{{RootCmd|timedatectl set-local-rtc 0}}

ハードウェアクロックを現在のシステムクロック(ローカルタイム標準時)に合わせて設定するには:

{{RootCmd|timedatectl set-local-rtc 1}}

== 参考 ==

* [[Network Time Protocol]]
* [[Ntp|NTP]] - ネットワークタイムプロトコルの実装の1つ。
* [[OpenNTPD|OpenNTPD]] - OpenBSD から移入された軽量な NTP サーバー

== External resources ==

* http://lifehacker.com/5742148/fix-windows-clock-issues-when-dual-booting-with-os-x - Dual booting with MS Windows, set RealTimeIsUniversal. Also tested with [[UEFI_Dual_boot_with_Windows_7/8|Windows 10]].
* http://tldp.org/HOWTO/Clock-2.html - The Clock Mini-HOWTO.


[[Category:Localization]]
