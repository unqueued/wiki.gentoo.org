==Preparing The Disks==

Prior to installing Gentoo on a Raspberry Pi 3 Model B, the SD card must be prepared first. We can use either fdisk or Parted to accomplish this. But before we go into that, we must first figure out what the SD card identifies as on your Gentoo system. We can do this using lsblk -
{{RootCmd| lsblk}}

If your SD card still has NOOBS installed on it, the output from lsblk should look something like this -
{{ContentBox|Example lsblk output - NOOBS SD Card|<pre>
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda    8:0      0 74.5G  0 disk
sda1   8:1      0    2M  0 part
sda2   8:2      0  128M  0 part
sda3   8:3      0    4G  0 part [SWAP]
sda4   8:4      0 70.4G  0 part /
sdb    8:16     1 29.7G  0 disk
sdb1   8:17     1  1.5G  0 part
sdb2   8:18     1    1K  0 part
sdb5   8:21     1   32M  0 part
sdb6   8:22     1   66M  0 part
sdb7   8:23     1 28.1G  0 part
</pre>}}

In this example, this Gentoo system uses /dev/sda as the Gentoo system block device. /dev/sdb is the NOOBS SD card. We'll use that for our example throughout this article.

If you're using a brand new pre-formatted SD card, the output from lsblk would look like this -

{{ContentBox|Example lsblk output - new/blank pre-formatted SD Card|<pre>
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda      8:0    0 74.5G  0 disk
tqsda1   8:1    0    2M  0 part
tqsda2   8:2    0  128M  0 part
tqsda3   8:3    0    4G  0 part [SWAP]
mqsda4   8:4    0 70.4G  0 part /
sdb      8:16   1 29.7G  0 disk
</pre>}}

For our partition table, our boot partition must be a primary partition and it must be a FAT32 partition for the Raspberry Pi to boot. For the swap and root partitions, we can use standard Linux formats. Optionally, we can create an extended partition and make the swap and root partitions as logical partitions if we wish. For this installation example, all partitions will be primary partitions.

===fdisk===
{{RootCmd| fdisk -w always /dev/sdb}}

The -w always switch will wipe all signatures as we create partitions. Once fdisk starts, pass the 'p' option to see the partitions currently present on the SD card.

{{ContentBox|Example fdisk|<pre>
Welcome to fdisk (util-linux 2.30).
Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.


Command (m for help): p
Disk /dev/sdb: 29.7 GiB, 31914983424 bytes, 62333952 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x00058ec2

Device     Boot   Start      End  Sectors  Size Id Type
/dev/sdb1          8192  3140625  3132434  1.5G  e W95 FAT16 (LBA)
/dev/sdb2       3140626 62333951 59193326 28.2G  5 Extended
/dev/sdb5       3145728  3211261    65534   32M 83 Linux
/dev/sdb6       3211264  3346431   135168   66M  c W95 FAT32 (LBA)
/dev/sdb7       3350528 62333951 58983424 28.1G 83 Linux

Command (m for help):</pre>}}

First we will pass the o command to create a new MS-DOS disk label. This will delete all partitions currently in the table.

{{ContentBox|Example Create New MS-DOS Label|<pre>
Welcome to fdisk (util-linux 2.30).
Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.


Command (m for help): o
Created a new DOS disklabel with disk identifier 0x67d2396a.

Command (m for help): p
Disk /dev/sdb: 29.7 GiB, 31914983424 bytes, 62333952 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x67d2396a

Command (m for help):</pre>}}

As you can see, the o command created our new DOS disklabel and deleted all partitions.

Next, we're going to make the boot partition.
