<languages />

{{Dated|date=March 3rd, 2015}}
{{InfoBox stack
|{{InfoBox homepage|https://gnupg.org/|header=true}}
|{{InfoBox wikipedia|GNU_Privacy_Guard|text=Wikipedia}}
}}

{{Metadata|abstract=Это небольшое руководство научит пользователя Gentoo Linux основам использования GnuPG; инструмента для защищенной передачи сообщений.}}

Это руководство научит Gentoo Linux пользователя основам использования GnuPG; инструмента для защищенной передачи сообщений.

== Введение ==

=== О чем будет рассказано в этом руководстве ===

Это руководство предполагает, что читающий знаком с криптографией с открытым ключом, шифрованием и цифровыми подписями. Если это не так, посмотрите [http://www.gnupg.org/documentation/guides.html официальное руководство GnuPG], в частности главу 2, а затем возвращайтесь обратно к этой статье. 

Это руководство содержит инструкции для Gentoo пользователей как установить GnuPG, создать ключевую пару, добавить ключи в связку, отправить открытый ключ на сервер ключей, а также как подписывать, шифровать, проверять или расшифровывать отправленные или полученные сообщения. Читатель также научится шифровать файлы, чтобы предотвратить чтение содержимого посторонними людьми.

== Установка ==

=== USE флаги ===

{{USEflag|package=app-crypt/gnupg}}

=== Emerge ===

{{Emerge|app-crypt/gnupg}}

=== Другое программное обеспечение ===

At a very basic level GnuPG must be emerged. Many applications today have some sort of support for PGP, so having <code>crypt</code> as a USE variable is a good idea. When desiring an email client capable of using GnuPG any of the following options are well suited:
* PinePGP ({{Package|mail-client/pinepgp}}); 
* [[Mutt]] ({{Package|mail-client/mutt}}) — A small but very powerful text-based mail client; 
* [[Thunderbird]] ({{Package|mail-client/thunderbird}}) — Mozilla's e-mail solution; 
* [[Evolution]] ({{Package|mail-client/evolution}}) — A GNOME Microsoft Outlook work alike; 
* [[KMail]] ({{Package|kde-base/kmail}}) — KDE's mail client. 
**Installing KGPG ({{Package|kde-base/kgpg}}) might be of interest when using the KDE desktop environment. This small program allows for the generation of key pairs, importing keys from ASCII files, signing imported keys, exporting keys, among a few other nifty features.

== Использование ==

== Генерация ключа и добавление в связку открытых ключей ==

=== Создание ключа ===

Чтобы создать ключ, используйте команду {{c|gpg --gen-key}}. При первом запуске, она создаст несколько каталогов необходимые для правильной работы GnuPG; запустите её снова чтобы создать ключи: 

{{Cmd|gpg --gen-key|output=<pre>
gpg (GnuPG) 1.0.7; Copyright (C) 2002 Free Software Foundation, Inc.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions. See the file COPYING for details.
  
Please select what kind of key you want:
   (1) RSA and RSA (default)
   (2) DSA and Elgamal
   (3) DSA (sign only)
   (4) RSA (sign only)
   Your selection? 1
</pre>
}}

Здесь можно выбрать тип ключа. Большинство пользователей предпочтут алгоритмы по умолчанию: RSA и RSA. Далее идет размер ключа. Запомните, что чем больше, тем лучше, но не используйте размер больший чем 2048 с ключами DSA/ElGamal. В основном, 2048 более чем достаточно для нормальной почтовой связи.

После размера следует дата истечения срока действия ключа. В этом случае, чем меньше, тем лучше, но большинство пользователей может предпочесть ключ, который никогда не истекает или обладает сроком действия в 2 или 3 года. 

{{CodeBox|title=Выбор размера ключа|<nowiki>
RSA keypair will have 1024 bits.
RSA keys may be between 1024 and 4096 bits long.
    What keysize do you want? (2048) 2048
Requested keysize is 2048 bits       
Please specify how long the key should be valid.
         0 = key does not expire
 <n>= key expires in n days
 <n>w = key expires in n weeks
 <n>m = key expires in n months
 <n>y = key expires in n years
 Key is valid for? (0) 0
Key does not expire at all
</nowiki>
}}

А теперь пришло время ввести информацию о пользователе ключей. При передаче открытого ключа другим пользователям, важно указать реальный email адрес (а не поддельный адреса электронной почты). 

{{CodeBox|title=Заполнение информации о пользователе|
Is this correct (y/n)? y
                          
GnuPG needs to construct a user ID to identify your key.
  
Real name: Larry the cow
Email address: larry@gentoo.org
Comment: Gentoo's own
You selected this USER-ID:
"Larry the cow (Gentoo's own) <larry@gentoo.org>"
  
Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O 
You need a Passphrase to protect your secret key.    
  
Enter passphrase: 
}}

Now enter a key passphrase twice. It is a good idea to use a strong password. If someone is able to get a hold of the associated private key and cracks the password they will be able to impersonate the user by sending signed messages just as the user would. The malicious user could dupe the victims contacts into believing the e-mails or messages were sent by the victim. This could cause major problems.

Далее, GnuPG сгенерирует ключ. Двигание мышкой, просмотр веб-страниц или проигрывание аудио на заднем плане поможет ускорить процесс, потому что это помогает GnuPG генерировать случайные данные, что увеличивает безопасность ключевой пары.

==== Генерация сертификата отзыва ====

{{Important|Эта часть очень важна и необходимо сделать это ''СЕЙЧАС''.}}

После создания ключей нужно создать сертификат отзыва. Выполнение этого позволит отозвать ключ в случае если с ключом произойдет что-то неприятное (кто-то злонамеренно завладеет ключом/парольной фразой). 

{{Cmd|gpg --list-keys|output=<pre>
/home/humpback/.gnupg/pubring.gpg
---------------------------------
pub  1024D/75447B14 2002-12-08 Larry the cow (Gentoo's own) <larry@gentoo.org>
sub  2048g/96D6CDAD 2002-12-08
</pre>}}

{{Cmd|gpg --output revoke.asc --gen-revoke 75447B14|output=<pre>
sec  1024D/75447B14 2002-12-08   Larry the cow (Gentoo's own) <larry@gentoo.org>
  
Create a revocation certificate for this key? y
Please select the reason for the revocation:   
  0 = No reason specified
  1 = Key has been compromised
  2 = Key is superseded
  3 = Key is no longer used
  Q = Cancel
(Probably you want to select 1 here)
Your decision? 1
Enter an optional description; end it with an empty line:
> Someone cracked me and got my key and passphrase
>
Reason for revocation: Key has been compromised
Someone cracked me and got my key and passphrase
Is this okay? y
  
You need a passphrase to unlock the secret key for
user: "Larry the cow (Gentoo's own) <larry@gentoo.org>"
1024-bit DSA key, ID 75447B14, created 2002-12-08
  
ASCII armored output forced.
Revocation certificate created.
  
Please move it to a medium which you can hide away; if Mallory gets
access to this certificate he can use it to make your key unusable.
It is smart to print this certificate and store it away, just in case
your media become unreadable.  But have some caution:  The print system of
your machine might store the data and make it available to others!
</pre>
}}

Команда {{c|gpg --list-keys}} перечисляет ключи в связке открытых ключей. Это можно использовать для просмотра ID ключа, чтобы можно было создать сертификат отзыва. Хорошей идеей будет скопировать каталог {{Path|.gnupg}} и сертификат отзыва (в защищенном ASCII тексте - {{Path|revoke.asc}}) на какой-нибудь защищенный носитель (CD-R или USB-накопитель, хранимые в безопасном месте). Запомните, что файл {{Path|revoke.asc}} может быть использован для того, чтобы отозвать ключи и сделать их непригодными в дальнейшем. 

{{Note|Если пользователь имеет несколько email адресов, которые он хотели бы использовать с этим ключом, то пользователь может запустить {{c|gpg --edit-key <nowiki><USER_ID></nowiki>}} и затем использовать команду {{c|adduid}}. Она запросит имя, email и комментарий для второго ID, который будет использоваться.}}

==== Экспорт ключей ====

Для экспорта ключа, введите {{c|gpg --armor --output larry.asc --export larry@gentoo.org}}. Вы можете почти всегда использовать ID ключа или что-нибудь, что идентифицирует ключ (в этом примере использовался email адрес). Теперь Larry имеет файл {{Path|larry.asc}}, который он может отправить своим друзьям, или разместить на своей веб-странице, чтобы другие люди могли с ним безопасно связаться. 

==== Импорт ключей ====

Чтобы добавить ключи в связку открытых ключей необходимо сделать следующее:
# импортировать ключ
# проверить отпечаток ключа
# после проверки отпечатка ключа нужно проверить его.

{{Note/ru|Будьте осторожны при проверке ключей. Это одно из слабых мест криптографии с открытым ключом.}}

Теперь, мы будем добавлять открытый ключ Луиса Пинто (моего друга) в нашу связку открытых ключей. После звонка по телефону и запрашивания отпечатка его ключа, я сравню отпечаток с результатом команды {{c|fpr}}. В случае если ключ подлинный, я добавлю его в связку открытых ключей. В этом частном случае, ключ Луиса истечет на 2003-12-01, поэтому у меня будет спрошено желаю ли я, чтобы моя подпись этого ключа истекла в то же время. 

{{Cmd|gpg --import luis.asc|output=<pre>
gpg: key 462405BB: public key imported
gpg: Total number processed: 1
gpg:               imported: 1
</pre>}}

{{Cmd|gpg --list-keys|output=<pre>
/home/humpback/.gnupg/pubring.gpg
---------------------------------
pub  1024D/75447B14 2002-12-08 Larry the cow (Gentoo's own) <larry@gentoo.org>
sub  2048g/96D6CDAD 2002-12-08
  
pub  1024D/462405BB 2002-12-01 Luis Pinto <lmpinto@student.dei.uc.pt>
uid                            Luis Pinto <lmpinto@dei.uc.pt>
sub  4096g/922175B3 2002-12-01 [expires: 2003-12-01]
</pre>}}

{{Cmd|gpg --edit-key lmpinto@dei.uc.pt|output=<pre>
gpg (GnuPG) 1.0.7; Copyright (C) 2002 Free Software Foundation, Inc.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions. See the file COPYING for details.
  
gpg: checking the trustdb
gpg: checking at depth 0 signed=0 ot(-/q/n/m/f/u)=0/0/0/0/0/1
pub  1024D/462405BB  created: 2002-12-01 expires: 2003-12-01 trust: -/-
sub  4096g/922175B3  created: 2002-12-01 expires: 2003-12-01
(1)  Luis Pinto <lmpinto@dei.uc.pt>
(2). Luis Pinto <lmpinto@student.dei.uc.pt>
</pre>}}

{{Cmd|fpr|prompt=Command> |output=<pre>
pub  1024D/462405BB 2002-12-01 Luis Pinto <lmpinto@dei.uc.pt>
             Fingerprint: F056 3697 ADE3 CF98 B80B  8494 0AD3 E57B 4624 05BB
</pre>}}

{{Cmd|sign|prompt=Command> |output=<pre>
Really sign all user IDs? y
                           
pub  1024D/462405BB  created: 2002-12-01 expires: 2003-12-01 trust: -/-
             Fingerprint: F056 3697 ADE3 CF98 B80B  8494 0AD3 E57B 4624 05BB
  
     Luis Pinto <lmpinto@dei.uc.pt>
     Luis Pinto <lmpinto@student.dei.uc.pt>
  
This key is due to expire on 2003-12-01.
Do you want your signature to expire at the same time? (Y/n) Y
How carefully have you verified the key you are about to sign actually belongs
to the person named above?  If you don't know what to answer, enter "0".
  
   (0) I will not answer. (default)
   (1) I have not checked at all.
   (2) I have done casual checking.
   (3) I have done very careful checking.
  
   Your selection? 3
Are you really sure that you want to sign this key
with your key: "Larry the cow (Gentoo's own) <larry@gentoo.org>"
  
I have checked this key very carefully.
  
Really sign? y
              
You need a passphrase to unlock the secret key for
user: "Larry the cow (Gentoo's own) <larry@gentoo.org>"
1024-bit DSA key, ID 75447B14, created 2002-12-08
</pre>}}

{{Cmd|check|prompt=Command> |output=<pre>
uid  Luis Pinto <lmpinto@dei.uc.pt>
sig!3       462405BB 2002-12-01   [self-signature]
sig!3       75447B14 2002-12-08   Larry the cow (Gentoo's own) <larry@gentoo.org>
uid  Luis Pinto <lmpinto@student.dei.uc.pt>
sig!3       462405BB 2002-12-01   [self-signature]
sig!3       75447B14 2002-12-08   Larry the cow (Gentoo's own) <larry@gentoo.org>
</pre>
}}

=== Обмен ключами с серверами ключей ===

==== Отправка ключей на сервер ====

Now that a key has been generated, it is probably a good idea to send it to a world key server. There are a lot of key servers in the world and most of them exchange keys. In this next example Larry the cow's key will be sent to the keys.gnupg.net server. Sending keys uses HTTP, so if a proxy is used for HTTP traffic do not forget to set it accordingly ({{c|export http_proxy=<nowiki>http://proxy_host:port/</nowiki>}}). The command for sending the key is: {{c|gpg --keyserver keys.gnupg.net --keyserver-options honor-http-proxy --send-key 75447B14}} where <code>75447B14</code> is the key ID. If a HTTP proxy is not needed then the <code>--keyserver-options honor-http-proxy</code> option can be removed. 

Sending other people's keys that Larry has signed signed to the key server is also a good idea. We could send Luis Pinto's key to the key server. This way someone who trusts Larry's key can use the signature that he has placed there to trust Luis's key. 

==== Получение ключей с сервера ====

Теперь мы собираемся найти ключ Gustavo Felisberto и добавить его в связку ключей Larry the cow (на случай, если вы не заметили, Gustavo Felisberto - автор этого руководства :&#41;). 

{{Cmd|gpg --keyserver keys.gnupg.net --keyserver-options honor-http-proxy --search-keys humpback@felisberto.net|output=<pre>
gpg: searching for "humpback@felisberto.net" from hkp server keys.gnupg.net
(1)	Gustavo Felisberto <humpback@gmail.com>
	Gustavo Felisberto <humpback@gentoo.org>
	Gustavo Felisberto <humpback@gentoopt.org>
	Gustavo Felisberto <gustavo@felisberto.net>
	Gustavo Felisberto <humpback@gentoo-pt.org>
	Gustavo Felisberto <humpback@felisberto.net>
	Gustavo Felisberto <gustavo@student.dei.uc.pt>
	Gustavo Felisberto <humpback@student.dec.uc.pt>
	Gustavo Felisberto (apt-get install anarchy) <humpback@felisberto.net>
	  1024 bit DSA key B9F2D52A, created: 2002-12-06
(2)	Gustavo Adolfo Silva Ribeiro Felisberto <humpback@altavista.net>
	  1024 bit DSA key 26471D8F, created: 2001-09-05
(3)	Gustavo Felisberto <humpback@altavista.net>
	  1024 bit DSA key E97E0B46, created: 1999-08-04, expires: 2000-08-04 (expired)
(4)	Gustavo A.S.R. Felisberto <humpback@altavista.net>
	  1024 bit DSA key B59AB043, created: 1998-12-10
(5)	Gustavo Adolfo Silva Ribeiro Felisberto <humpback@altavista.net>
	  1024 bit DSA key 39EB133D, created: 1998-08-27
(6)	Gustavo Adolfo Silva Ribeiro Felisberto <humpback@altavista.net>
	  1024 bit DSA key AE02AF87, created: 1998-06-15
Enter number(s), N&#41;ext, or Q&#41;uit > 1
gpg: requesting key B9F2D52A from hkp server keys.gnupg.net
gpg: key B9F2D52A: public key "Gustavo Felisberto <humpback@felisberto.net>" imported
gpg: 3 marginal(s) needed, 1 complete(s) needed, classic trust model
gpg: depth: 0  valid:   4  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 4u
gpg: next trustdb check due at 2015-06-28
gpg: Total number processed: 1
gpg:               imported: 1
</pre>
}}

From the server response it is possible to see few keys have been submitted to the key server, however only <code>B9F2D52A</code> is used. Now Larry the cow can get the key and sign it if he trusts it.

=== Использование GPG agent ===

==== Что такое GPG agent? ====

Sometimes working with certain applications requires the use of a GPG key very frequently, which means that a passphrase must be frequently entered. In the past many applications supported a passphrase caching mechanism. This would make life easier for users because passphrases were automatically entered. However, this disallowed sharing this cache across programs (how secure would that be?) and forced applications to reinvent the wheel over and over again. 

GPG агент - это отдельное приложение, используемое GPG для кэширования парольной фразы стандартным и безопасным способом. Оно позволяет приложениям использовать GPG параллельно: если ввели парольную фразу, работая в одном приложении, другое приложение может работать с GPG без повтора запроса парольной фразы для разблокирования ключа — если, конечно же, GPG агент настроен на то чтобы это разрешить. 

Gentoo предоставляет несколько приложений GPG agent. Пакет {{Package|app-crypt/gnupg}} содержит то, что можно рассматривать как эталон, и будет основным, что будет использоваться в этой статье.

==== Конфигурация gpg-agent и pinentry ====

GnuPG включает {{c|gpg-agent}}. Pinetry ({{Package|app-crypt/pinentry}}) — это вспомогательное приложение, которое {{c|gpg-agent}} использует для запроса парольной фразы в графическом окне. Оно бывает трех видов: отображение окна с использованием GTK+, QT или библиотек curses (в зависимости от установленных USE-флагов в {{Path|/etc/portage/make.conf}}). 

Если был установлен {{Package|app-crypt/pinentry}} с более чем одним типом всплывающего окна, то можно выбрать из них с помощью команды {{c|eselect pinentry}}: 

{{RootCmd|eselect pinentry list|output=
<pre>
Available pinentry implementations:
  [1]   pinentry-gtk-2 *
  [2]   pinentry-curses
  [3]   pinentry-qt4
</pre>
}}

{{RootCmd|eselect pinentry set 1}}

Теперь, создайте файл с названием {{Path|~/.gnupg/gpg-agent.conf}} и введите следующие строчки, которые определят срок действия парольной фразы по умолчанию (напр., 30 минут), а также приложение, которое надо вызвать когда парольная фраза должна быть получена в первый раз (напр., GTK+ версия Pinentry). 

{{FileBox|filename=~/.gnupg/gpg-agent.conf|
pinentry-program /usr/bin/pinentry-gtk-2
no-grab
default-cache-ttl 1800
}}

Затем, настройте GnuPG на использование agent, когда это уместно. Отредактируйте {{Path|~/.gnupg/gpg.conf}} и добавьте следующую строчку: 

{{FileBox|filename=~/.gnupg/gpg.conf|title=Настройка GnuPG для использования GPG agent|
use-agent
}}

Теперь система (почти) готова для использования GPG agent.

==== Автоматический запуск GPG agent ====

Если используется KDE в качестве рабочей среды, отредактируйте следующее {{Path|/etc/kde/startup/agent-startup.sh}} (глобально) или {{Path|~/.kde4/env/gpg-agent.sh}} (для локального пользователя) файл, чтобы KDE автоматически запускал GPG agent: 

{{FileBox|filename=/etc/kde/startup/agent-startup.sh|title=Автоматический запуск GPG agent в KDE|lang=bash|1=
eval "$(gpg-agent --daemon)"
}}

Дополнительно, раскомментируйте следующую строку в {{Path|/etc/kde/shutdown/agent-shutdown.sh}} (глобально) или добавьте в {{Path|~/.kde4/shutdown/gpg-agent.sh}} (для локального пользователя): 

{{FileBox|filename=/etc/kde/shutdown/agent-shutdown.sh|title=Закрытие GPG agent с помощью KDE|lang=bash|1=
if [ -n "${GPG_AGENT_INFO}" ]; then
  kill $(echo ${GPG_AGENT_INFO} {{!}} cut -d':' -f 2) >/dev/null 2>&1
fi
}}

When using a desktop environment other than KDE, put that line (the same as mentioned above) in the {{Path|~/.xinitrc}} file (if the {{c|startx}} command is used to invoke the GUI) or the {{Path|~/.xsession}} file (if XDM, GDM, KDM are used).

=== Работа с документами ===

==== Шифрование и подпись ====

Давайте предположим, что у Larry есть файл, который он хотел бы отправить Луису. Larry может его зашифровать, подписать, или зашифровать и подписать одновременно. Шифрование означает что только Луис сможет его открыть. Подпись говорит Луису о том что Larry действительно тот кто создал этот файл. 

Следующие три команды как раз это и сделают: зашифруют, подпишут и зашифруют/подпишут. 

{{Cmd|gpg --output doc.gpg --encrypt --recipient lmpinto@dei.uc.pt doc_to_encrypt
|gpg --output doc.gpg --sign --recipient lmpinto@dei.uc.pt doc_to_sign
|gpg --output doc.gpg --encrypt --sign --recipient lmpinto@dei.uc.pt doc_to_encrypt_and_sign}}

Это создаст двоичные файлы. Если хотите создать ASCII файлы, просто добавьте опцию <code>--clearsign</code> в начало команды. 

==== Расшифровка и проверка подписей ====

Предположим, Larry получил файл, который зашифрован им. Такая команда расшифрует файл {{c|gpg --output document --decrypt encrypted_doc.gpg}}. Она расшифрует документ и проверит подпись (если таковая имеется). 

==== Шифрование и расшифровка без ключей ====

It is possible to encrypt files using passwords instead of keys. The password itself will function ''as'' the key — it will be used as a ''symmetric cypher''. The file can be encrypted using {{c|gpg --symmetric}}; decrypting uses the same command as mentioned previously. 

{{Cmd|gpg --output document.gpg --symmetric document}}

GnuPG запросит парольную фразу и ее подтверждение.

==== Расширенные функции ====

В GnuPG есть несколько приятных расширенных функций. Чтобы их найти, откройте файл {{Path|~/.gnupg/gpg.conf}} . 

{{FileBox|filename=~/.gnupg/gpg.conf|
#keyserver x-hkp://keys.gnupg.net
#keyserver-options auto-key-retrieve include-disabled include-revoked
}}

Найдите две линии выше и раскомментируйте их. С таким изменением, всякий раз когда GnuPG потребуется проверить подпись и он не найдет открытый ключ в локальной связке, GnuPG соединится с сервером ключей по адресу [http://keys.gnupg.net:11371/ keys.gnupg.net] и попытается загрузить открытый ключ с сервера. 

Another nice command is {{c|gpg --refresh-keys}}. This will contact the key server defined in the configuration file and refresh the public keys in the local key ring from there. It is capable of searching for revoked keys, new IDs, and new signatures on keys. It is a wise idea run this command once or twice a month; if a user revokes their key this can provide a notification the key can no longer be trusted.

=== Интерфейсы GnuPG ===

==== О подписях электронной почты ====

95% времени, GnuPG будет использоваться в электронной почте для подписывая/шифрования исходящих сообщений или чтения подписанных/зашифрованных сообщений.

Существует два способа подписать/зашифровать почту с GnuPG, старый способ и новый способ. По старому способу, сообщения будут появляться в виде простого текста, без возможного форматирования, а любые вложенные файлы будут не подписаны/не зашифрованы. Здесь приведен пример сообщения, подписанного старым способом: 

{{CodeBox|title=Подпись как простой текст|<nowiki>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1
  
Test message
  
-----BEGIN PGP SIGNATURE-----
Version: PGPfreeware 6.5.8 for non-commercial use
  
iQA/AwUBP8461jMX0745gR7AEQIEOwCg011GbufXO3ED3FkLWXmfzg7xm1cAoJD0
0EU3Kd2EKNCqataEqM5qjpPs
=LchZ
-----END PGP SIGNATURE-----
</nowiki>
}}

Messages this way are not good in today's world, where there are nice GUIs and email readers that understand HTML. 

To solve this an addition to the MIME (Multipurpose Internet Mail Extensions) was created. This adds a field to the email that tells the mail reader that the full content of the message is signed and/or encrypted. The problem with this is that not all mail readers support such features. Some even mess up the content (Microsoft's Outlook is famous for not working with this). 

==== Kgpg ====

Kgpg ({{Package|kde-base/kmail}}) is a wonderful GUI for GnuPG. The main screen provides an area to paste text to signed or encrypted, the reverse is also true; ASCII armored text to be decrypted can also be entered. 

From within the main screen text decrypted (a password is needed), files encrypted, and pasted text can be signed.

==== Seahorse ====

Seahorse ({{Package|app-crypt/seahorse}}) ориентирована на то, чтобы быть графическим интерфейсом GnuPG для рабочего стола Gnome. Программа быстро развивается, но все еще не имеет множества важных функций, которые могут быть найдены в Kgpg или командной строке. 

==== KMail ====

If the <code>crypt</code> USE flag is set, KMail will be compiled with gpg support, and will be able to encrypt and decrypt inline PGP mails automatically as well as encrypting OpenPGP/MIME mails. To decrypt OpenPGP/MIME mails as well (most users want) a GPG agent must be running. 

To verify if KMail is properly configured navigate to {{Path|Settings → Configure KMail → Security → Crypto Backends}}. A GpgME-based backend should be listed and the OpenPGP checkbox should be checked. If it is listed but grayed out, click on {{Path|Rescan}}. If the GpgME-based backend remains grayed out, KMail is not working properly. 

When unable to get KMail to behave, see the [https://userbase.kde.org/KMail/PGP_MIME official KMail PGP page] for more information. 

==== Claws-Mail ====

[[Claws Mail|This mail client]] is ''very'' fast with big mailboxes, has all the nice features one wants in mail readers and works well with GPG. The only problem is that it does not work with the old PGP signatures, so when receiving those kind of mails the signatures must be hand-checked. 

To use a GPG key with [[Claws Mail|Claws-Mail]] navigate to {{Path|account configuration → privacy tab}}. Once there choose which key to use, most users should go with the default key.

== Заключительные мысли и благодарности ==

=== Некоторые из проблем ===

I had some problems with photos in keys. Check the version you are using. If you have GnuPG 1.2.1-r1 and up you are probably OK, older versions may have problems. Also most key servers do not like keys with photos, so you are better if you don't add photos. 

Самые последние версии GnuPG, по-видимому, не работают с командой {{c|gpg --send-keys}}, которая была использована для отправки всех ключей в брелок на сервере. 

=== О чем здесь не написано ===

{{c|gpg}} - очень сложный инструмент. Он позволяет делать гораздо больше, чем то, о чем здесь было написано. Этот документ предназначен для тех пользователей, которые еще не знакомы с GnuPG. За более подробной информацией, обратитесь к [http://www.gnupg.org официальному вебсайту GnuPG]. 

Эта статья не рассказывает о таких инструментах как {{c|pgp4pine}}, {{c|gpgpine}}, {{c|evolution}} или о инструментах GPG для Windows.

=== Благодарности ===

[http://www.gnupg.org Настольная Книга GnuPG] от John Michaeil Ashley - очень хорошая книга для новичков. 

Swift (Sven Vermeulen) за подталкивание меня к переписанию этого руководства. 

Каждого из команды #gentoo-doc. Парни, вы рулите. 

Tiago Serra, за мое возвращение обратно на путь конфиденциальности.


[[Category:Server and Security]] {{Migrated|originalauthors=Gustavo Felisberto, John P. Davis, nightmorph}}
