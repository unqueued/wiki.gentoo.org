<languages />

{{Dated|date=March 3rd, 2015}}
{{InfoBox stack
|{{InfoBox homepage|https://gnupg.org/|header=true}}
|{{InfoBox wikipedia|GNU_Privacy_Guard|text=Wikipedia}}
|{{InfoBox odoc|https://www.gnupg.org/documentation/index.html}}
|{{InfoBox gitweb|http://git.gnupg.org/cgi-bin/gitweb.cgi|raw=true}}
}}

{{Metadata|abstract=Это небольшое руководство научит пользователя Gentoo Linux основам использования GnuPG; инструмента для защищенной передачи сообщений.}}

Это руководство научит Gentoo Linux пользователя основам использования GnuPG; инструмента для защищенной передачи сообщений.

== Введение ==

=== О чем будет рассказано в этом руководстве ===

Это руководство предполагает, что читающий знаком с криптографией с открытым ключом, шифрованием и цифровыми подписями. Если это не так, посмотрите [http://www.gnupg.org/documentation/guides.html официальное руководство GnuPG], в частности главу 2, а затем возвращайтесь обратно к этой статье. 

Читатель научится устанавливать GnuPG, создавать пары ключей, добавлять ключи в связку и отправлять открытые ключи на сервер ключей. Читатель также научится подписывать, зашифровывать, проверять и расшифровывать отправляемые и получаемые файлы и сообщения.

== Установка ==

=== USE-флаги ===

{{USEflag|package=app-crypt/gnupg}}

=== Emerge ===

{{Emerge|app-crypt/gnupg}}

=== Другое программное обеспечение ===

Как минимум GnuPG должен быть установлен. Сегодня многие приложения поддерживают PGP, поэтому включение USE-флага crypt является хорошей идеей. Если требуется почтовый клиент, поддерживающий GnuPG, подойдет любой из следующих вариантов:

* PinePGP ({{Package|mail-client/pinepgp}}).
* [[Mutt]] ({{Package|mail-client/mutt}}) — Небольшой но мощный текстовый почтовый клиент.
* [[Thunderbird]] ({{Package|mail-client/thunderbird}}) — E-mail решение от Mozilla.
* [[Evolution]] ({{Package|mail-client/evolution}}) — Почтовый клиент GNOME, похожий на Microsoft Outlook.
* [[KMail]] ({{Package|kde-apps/kmail}}) — Почтовый клиент KDE.
**При использовании окружения рабочего стола KDE, возможно, имеет смысл установить KGPG ({{Package|kde-apps/kgpg}}). Среди прочих возможностей, эта небольшая программа позволяет создавать пары ключей, импортировать ключи из файлов ASCII, подписывать импортированные ключи и экспортировать ключи.

== Использование ==

== Генерация ключа и добавление в связку открытых ключей ==

=== Создание ключа ===

Чтобы создать ключ, используйте команду {{c|gpg --gen-key}}. При первом запуске, она создаст несколько каталогов необходимые для правильной работы GnuPG; запустите её снова чтобы создать ключи: 

{{Cmd|gpg --gen-key|output=<pre>
gpg (GnuPG) 1.0.7; Copyright (C) 2002 Free Software Foundation, Inc.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions. See the file COPYING for details.
  
Please select what kind of key you want:
   (1) RSA and RSA (default)
   (2) DSA and Elgamal
   (3) DSA (sign only)
   (4) RSA (sign only)
   Your selection? 1
</pre>
}}

The type of key can be chosen, but most users will go for the default, RSA and RSA. Next is the key size - remember that bigger is better, but do not use a size larger than 2048 with DSA/ElGamal keys. 2048 is generally more than enough for normal email communication.

After size comes the expiration date. Here smaller is better, but users can go for a key that never expires, or for an expiration date of around 2 or 3 years. 

{{CodeBox|title=Выбор размера ключа|<nowiki>
RSA keypair will have 1024 bits.
RSA keys may be between 1024 and 4096 bits long.
    What keysize do you want? (2048) 2048
Requested keysize is 2048 bits       
Please specify how long the key should be valid.
         0 = key does not expire
 <n>= key expires in n days
 <n>w = key expires in n weeks
 <n>m = key expires in n months
 <n>y = key expires in n years
 Key is valid for? (0) 0
Key does not expire at all
</nowiki>
}}

Now it is time to enter some personal information about the key's user. When sending a public key to other users it is important that a real email address is used (as opposed to a fake one). 

{{CodeBox|title=Заполнение информации о пользователе|
Is this correct (y/n)? y
                          
GnuPG needs to construct a user ID to identify your key.
  
Real name: Larry the cow
Email address: larry@gentoo.org
Comment: Gentoo's own
You selected this USER-ID:
"Larry the cow (Gentoo's own) <larry@gentoo.org>"
  
Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O 
You need a Passphrase to protect your secret key.    
  
Enter passphrase: 
}}

Now enter a key passphrase twice. It is a good idea to use a strong passphrase. If someone is able to obtain the associated private key and cracks the password they will be able to impersonate the user by sending signed messages just as the user would. The malicious user could dupe the victims contacts into believing the e-mails or messages were sent by the victim.

Next, GnuPG will generate a key. Moving the mouse, browsing the web, or streaming audio in the background will help speed up the process of generating random data, which is used to increase the security of the key pair.

==== Генерация сертификата отзыва ====

{{Important|Эта часть очень важна и необходимо сделать это ''СЕЙЧАС''.}}

After creating the keys a revocation certificate should be created. Doing this allows the user to revoke the key in case something nasty happens (such as a malicious user gaining control of the key/passphrase). 

{{Cmd|gpg --list-keys|output=<pre>
/home/humpback/.gnupg/pubring.gpg
---------------------------------
pub  1024D/75447B14 2002-12-08 Larry the cow (Gentoo's own) <larry@gentoo.org>
sub  2048g/96D6CDAD 2002-12-08
</pre>}}

{{Cmd|gpg --output revoke.asc --gen-revoke 75447B14|output=<pre>
sec  1024D/75447B14 2002-12-08   Larry the cow (Gentoo's own) <larry@gentoo.org>
  
Create a revocation certificate for this key? y
Please select the reason for the revocation:
  0 = No reason specified
  1 = Key has been compromised
  2 = Key is superseded
  3 = Key is no longer used
  Q = Cancel
(Probably you want to select 1 here)
Your decision? 1
Enter an optional description; end it with an empty line:
> Someone cracked me and got my key and passphrase
>
Reason for revocation: Key has been compromised
Someone cracked me and got my key and passphrase
Is this okay? y
  
You need a passphrase to unlock the secret key for
user: "Larry the cow (Gentoo's own) <larry@gentoo.org>"
1024-bit DSA key, ID 75447B14, created 2002-12-08
  
ASCII armored output forced.
Revocation certificate created.
  
Please move it to a medium which you can hide away; if Mallory gets
access to this certificate he can use it to make your key unusable.
It is smart to print this certificate and store it away, just in case
your media become unreadable.  But have some caution:  The print system of
your machine might store the data and make it available to others!
</pre>
}}

{{c|gpg --list-keys}} lists the keys in the public keyring. It may be used to see the ID of the key so that a revocation certificate can be created. It is a good idea to copy the entire {{Path|.gnupg}} directory and the revocation certificate (ASCII armored - {{Path|revoke.asc}}) to a secure medium (a CD-R or a USB drive stored in a safe location). Remember that the {{Path|revoke.asc}} file can be used to revoke the keys and make them unusable in the future. 

{{Note|Если пользователь имеет несколько email адресов, которые он хотели бы использовать с этим ключом, то пользователь может запустить {{c|gpg --edit-key <nowiki><USER_ID></nowiki>}} и затем использовать команду {{c|adduid}}. Она запросит имя, email и комментарий для второго ID, который будет использоваться.}}

==== Экспорт ключей ====

To export a key, run {{c|gpg --armor --output larry.asc --export larry@gentoo.org}}. You can almost always use the key ID or something that identifies the key (in this example an email address was used). Larry now has a {{Path|larry.asc}} that he can send his friends, or place on his web page so that others can safely communicate with him. 

==== Импорт ключей ====

Чтобы добавить ключи в связку открытых ключей необходимо сделать следующее:
# импортировать ключ
# проверить отпечаток ключа
# после проверки отпечатка ключа нужно проверить его.

{{Note/ru|Будьте осторожны при проверке ключей. Это одно из слабых мест криптографии с открытым ключом.}}

Теперь, мы будем добавлять открытый ключ Луиса Пинто (моего друга) в нашу связку открытых ключей. После звонка по телефону и запрашивания отпечатка его ключа, я сравню отпечаток с результатом команды {{c|fpr}}. В случае если ключ подлинный, я добавлю его в связку открытых ключей. В этом частном случае, ключ Луиса истечет на 2003-12-01, поэтому у меня будет спрошено желаю ли я, чтобы моя подпись этого ключа истекла в то же время. 

{{Cmd|gpg --import luis.asc|output=<pre>
gpg: key 462405BB: public key imported
gpg: Total number processed: 1
gpg:               imported: 1
</pre>}}

{{Cmd|gpg --list-keys|output=<pre>
/home/humpback/.gnupg/pubring.gpg
---------------------------------
pub  1024D/75447B14 2002-12-08 Larry the cow (Gentoo's own) <larry@gentoo.org>
sub  2048g/96D6CDAD 2002-12-08
  
pub  1024D/462405BB 2002-12-01 Luis Pinto <lmpinto@student.dei.uc.pt>
uid                            Luis Pinto <lmpinto@dei.uc.pt>
sub  4096g/922175B3 2002-12-01 [expires: 2003-12-01]
</pre>}}

{{Cmd|gpg --edit-key lmpinto@dei.uc.pt|output=<pre>
gpg (GnuPG) 1.0.7; Copyright (C) 2002 Free Software Foundation, Inc.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions. See the file COPYING for details.
  
gpg: checking the trustdb
gpg: checking at depth 0 signed=0 ot(-/q/n/m/f/u)=0/0/0/0/0/1
pub  1024D/462405BB  created: 2002-12-01 expires: 2003-12-01 trust: -/-
sub  4096g/922175B3  created: 2002-12-01 expires: 2003-12-01
(1)  Luis Pinto <lmpinto@dei.uc.pt>
(2). Luis Pinto <lmpinto@student.dei.uc.pt>
</pre>}}

{{Cmd|fpr|prompt=Command> |output=<pre>
pub  1024D/462405BB 2002-12-01 Luis Pinto <lmpinto@dei.uc.pt>
             Fingerprint: F056 3697 ADE3 CF98 B80B  8494 0AD3 E57B 4624 05BB
</pre>}}

{{Cmd|sign|prompt=Command> |output=<pre>
Really sign all user IDs? y
                           
pub  1024D/462405BB  created: 2002-12-01 expires: 2003-12-01 trust: -/-
             Fingerprint: F056 3697 ADE3 CF98 B80B  8494 0AD3 E57B 4624 05BB
  
     Luis Pinto <lmpinto@dei.uc.pt>
     Luis Pinto <lmpinto@student.dei.uc.pt>
  
This key is due to expire on 2003-12-01.
Do you want your signature to expire at the same time? (Y/n) Y
How carefully have you verified the key you are about to sign actually belongs
to the person named above?  If you don't know what to answer, enter "0".
  
   (0) I will not answer. (default)
   (1) I have not checked at all.
   (2) I have done casual checking.
   (3) I have done very careful checking.
  
   Your selection? 3
Are you really sure that you want to sign this key
with your key: "Larry the cow (Gentoo's own) <larry@gentoo.org>"
  
I have checked this key very carefully.
  
Really sign? y
              
You need a passphrase to unlock the secret key for
user: "Larry the cow (Gentoo's own) <larry@gentoo.org>"
1024-bit DSA key, ID 75447B14, created 2002-12-08
</pre>}}

{{Cmd|check|prompt=Command> |output=<pre>
uid  Luis Pinto <lmpinto@dei.uc.pt>
sig!3       462405BB 2002-12-01   [self-signature]
sig!3       75447B14 2002-12-08   Larry the cow (Gentoo's own) <larry@gentoo.org>
uid  Luis Pinto <lmpinto@student.dei.uc.pt>
sig!3       462405BB 2002-12-01   [self-signature]
sig!3       75447B14 2002-12-08   Larry the cow (Gentoo's own) <larry@gentoo.org>
</pre>
}}

=== Обмен ключами с серверами ключей ===

==== Отправка ключей на сервер ====

Now that a key has been generated, it is probably a good idea to send it to a world key server. There are a lot of key servers in the world and most of them exchange keys. In this next example Larry the cow's key will be sent to the keys.gnupg.net server. Sending keys uses HTTP, so if a proxy is used for HTTP traffic do not forget to set it accordingly ({{c|export http_proxy{{=}}<nowiki>http://proxy_host:port/</nowiki>}}). The command for sending the key is: {{c|gpg --keyserver keys.gnupg.net --keyserver-options honor-http-proxy --send-key 75447B14}} where <code>75447B14</code> is the key ID. If a HTTP proxy is not needed then the <code>--keyserver-options honor-http-proxy</code> option can be removed. 

Sending other people's keys that Larry has signed signed to the key server is also a good idea. We could send Luis Pinto's key to the key server. This way someone who trusts Larry's key can use the signature that he has placed there to trust Luis's key.

==== Получение ключей с сервера ====

Now we are going to search for Gustavo Felisberto's (the author of this guide :)) key and add it to the keyring of Larry the cow.

{{Cmd|gpg --keyserver keys.gnupg.net --keyserver-options honor-http-proxy --search-keys humpback@felisberto.net|output=<pre>
gpg: searching for "humpback@felisberto.net" from hkp server keys.gnupg.net
(1)	Gustavo Felisberto <humpback@gmail.com>
	Gustavo Felisberto <humpback@gentoo.org>
	Gustavo Felisberto <humpback@gentoopt.org>
	Gustavo Felisberto <gustavo@felisberto.net>
	Gustavo Felisberto <humpback@gentoo-pt.org>
	Gustavo Felisberto <humpback@felisberto.net>
	Gustavo Felisberto <gustavo@student.dei.uc.pt>
	Gustavo Felisberto <humpback@student.dec.uc.pt>
	Gustavo Felisberto (apt-get install anarchy) <humpback@felisberto.net>
	  1024 bit DSA key B9F2D52A, created: 2002-12-06
(2)	Gustavo Adolfo Silva Ribeiro Felisberto <humpback@altavista.net>
	  1024 bit DSA key 26471D8F, created: 2001-09-05
(3)	Gustavo Felisberto <humpback@altavista.net>
	  1024 bit DSA key E97E0B46, created: 1999-08-04, expires: 2000-08-04 (expired)
(4)	Gustavo A.S.R. Felisberto <humpback@altavista.net>
	  1024 bit DSA key B59AB043, created: 1998-12-10
(5)	Gustavo Adolfo Silva Ribeiro Felisberto <humpback@altavista.net>
	  1024 bit DSA key 39EB133D, created: 1998-08-27
(6)	Gustavo Adolfo Silva Ribeiro Felisberto <humpback@altavista.net>
	  1024 bit DSA key AE02AF87, created: 1998-06-15
Enter number(s), N&#41;ext, or Q&#41;uit > 1
gpg: requesting key B9F2D52A from hkp server keys.gnupg.net
gpg: key B9F2D52A: public key "Gustavo Felisberto <humpback@felisberto.net>" imported
gpg: 3 marginal(s) needed, 1 complete(s) needed, classic trust model
gpg: depth: 0  valid:   4  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 4u
gpg: next trustdb check due at 2015-06-28
gpg: Total number processed: 1
gpg:               imported: 1
</pre>
}}

Как видно из ответа сервера, отправлено несколько ключей на сервер, но используется только <code>B9F2D52A</code>. Теперь Larry the cow может получить ключ и подписать  его, если он ему доверяет.

=== Использование GPG agent ===

==== Что такое GPG agent? ====

Sometimes working with certain applications requires the frequent use of a GPG key, which means that a passphrase must be frequently entered. In the past many applications supported a passphrase caching mechanism. This would make life easier for users because passphrases were automatically entered. However, this disallowed sharing this cache across programs (how secure would that be?) and forced applications to reinvent the wheel over and over again.

A GPG agent is a separate application that GPG uses to cache the passphrase in a standard and secure way. It allows applications to use GPG concurrently: if the passphrase is entered while working in one application, the other application can work with GPG without needing to unlock the key again — if the GPG Agent is configured to allow this, of course. 

Gentoo предоставляет несколько приложений GPG agent. Пакет {{Package|app-crypt/gnupg}} содержит то, что можно рассматривать как эталон, и будет основным, что будет использоваться в этой статье.

==== Конфигурация gpg-agent и pinentry ====

GnuPG includes {{c|gpg-agent}}. Pinentry ({{Package|app-crypt/pinentry}}) is a helper application that {{c|gpg-agent}} uses to request the passphrase in a graphical window. It comes in three flavors: it can pop up a window using the GTK+, QT, or curses libraries (depending on the USE flags set when emerging). 

Если был установлен {{Package|app-crypt/pinentry}} с более чем одним типом всплывающего окна, то можно выбрать из них с помощью команды {{c|eselect pinentry}}: 

{{RootCmd|eselect pinentry list|output=
<pre>
Available pinentry implementations:
  [1]   pinentry-gtk-2 *
  [2]   pinentry-curses
  [3]   pinentry-qt4
</pre>
}}

{{RootCmd|eselect pinentry set 1}}

Now create a file called {{Path|~/.gnupg/gpg-agent.conf}} and add the following lines to define the default timeout of the passphrase (e.g. 30 minutes) and the application to be called when the passphrase needs to be retrieved (e.g. the GTK+ version of Pinentry). 

{{FileBox|filename=~/.gnupg/gpg-agent.conf|
pinentry-program /usr/bin/pinentry-gtk-2
no-grab
default-cache-ttl 1800
}}

Затем, настройте GnuPG на использование agent, когда это уместно. Отредактируйте {{Path|~/.gnupg/gpg.conf}} и добавьте следующую строчку: 

{{FileBox|filename=~/.gnupg/gpg.conf|title=Настройка GnuPG для использования GPG agent|
use-agent
}}

Теперь система (почти) готова для использования GPG agent.

==== Автоматический запуск GPG agent ====

If KDE is used as the desktop environment, edit {{Path|/etc/plasma/startup/10-agent-startup.sh}} (system-wide, for KDE4 {{Path|/etc/kde/startup/agent-startup.sh}}) or {{Path|~/.config/plasma-workspace/env/gpg-agent.sh}} (local user, {{Path|~/.kde4/env/gpg-agent.sh}} in KDE4). Add the following command to the appropriate file to have KDE automatically start the GPG Agent: 

{{FileBox|filename=/etc/plasma/startup/10-agent-startup.sh|title=Автоматический запуск GPG agent в Plasma|lang=bash|1=
if [ -x /usr/bin/gpg-agent ]; then
 eval "$(/usr/bin/gpg-agent --daemon)"
fi
}}

Additionally, uncomment the following lines in {{Path|/etc/plasma/shutdown/10-agent-shutdown.sh}} (system-wide, {{Path|/etc/kde/shutdown/agent-shutdown.sh}} in KDE4) or add it to {{Path|~/.config/plasma-workspace/shutdown/gpg-agent.sh}} (local user, {{Path|~/.kde4/shutdown/gpg-agent.sh}} in KDE4): 

{{FileBox|filename=/etc/plasma/shutdown/10-agent-shutdown.sh|title=Have Plasma shut down the GPG agent|lang=bash|1=
if [ -n "${GPG_AGENT_INFO}" ]; then
  kill $(echo ${GPG_AGENT_INFO} {{!}} cut -d':' -f 2) >/dev/null 2>&1
fi
}}

When using a desktop environment other than KDE, put the above lines in {{Path|~/.xinitrc}} if {{c|startx}} is used to start X.org or {{Path|~/.xsession}} if XDM, GDM, KDM, etc. are used.

=== Работа с документами ===

==== Шифрование и подпись ====

Давайте предположим, что у Larry есть файл, который он хотел бы отправить Луису. Larry может его зашифровать, подписать, или зашифровать и подписать одновременно. Шифрование означает что только Луис сможет его открыть. Подпись говорит Луису о том что Larry действительно тот кто создал этот файл. 

To encrypt:
{{Cmd|gpg --output doc.gpg --encrypt --recipient lmpinto@dei.uc.pt doc_to_encrypt}}

To sign:
{{Cmd|gpg --output doc.gpg --sign --recipient lmpinto@dei.uc.pt doc_to_sign}}

To encrypt and sign:
{{Cmd|gpg --output doc.gpg --encrypt --sign --recipient lmpinto@dei.uc.pt doc_to_encrypt_and_sign}}

This will create binary files. To create ASCII files, just add the <code>--clearsign</code> option to the beginning of the command. 

==== Расшифровка и проверка подписей ====

Suppose that Larry has received an encrypted file. The command used to decrypt it is {{c|gpg --output document --decrypt encrypted_doc.gpg}}. This will decrypt the document and verify the signature (if there is one). 

==== Шифрование и расшифровка без ключей ====

It is possible to encrypt files using passwords instead of keys. The password itself will function ''as'' the key — it will be used as a ''symmetric cipher''. The file can be encrypted using {{c|gpg --symmetric}}; decrypting uses the same command mentioned above.

{{Cmd|gpg --output document.gpg --symmetric document}}

GnuPG запросит парольную фразу и ее подтверждение.

==== Расширенные функции ====

В GnuPG есть несколько приятных расширенных функций. Чтобы их найти, откройте файл {{Path|~/.gnupg/gpg.conf}} . 

{{FileBox|filename=~/.gnupg/gpg.conf|
#keyserver x-hkp://keys.gnupg.net
#keyserver-options auto-key-retrieve include-disabled include-revoked
}}

Uncomment the two lines above. With this modification, any time GnuPG needs to check a signature and does not find the public key on the local keyring it will contact the key server at [http://keys.gnupg.net:11371/ keys.gnupg.net] in an attempt to fetch the public key from the server. 

Another nice command is {{c|gpg --refresh-keys}}. This will contact the key server defined in the configuration file and refresh the public keys in the local keyring from there. It is capable of searching for revoked keys, new IDs, and new signatures on keys. It is a wise idea to run this command once or twice a month; if a user revokes their key this can provide a notification the key can no longer be trusted.

=== Интерфейсы GnuPG ===

==== О подписях электронной почты ====

95% времени, GnuPG будет использоваться в электронной почте для подписывая/шифрования исходящих сообщений или чтения подписанных/зашифрованных сообщений.

Существует два способа подписать/зашифровать почту с GnuPG, старый способ и новый способ. По старому способу, сообщения будут появляться в виде простого текста, без возможного форматирования, а любые вложенные файлы будут не подписаны/не зашифрованы. Здесь приведен пример сообщения, подписанного старым способом: 

{{CodeBox|title=Подпись как простой текст|<nowiki>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1
  
Test message
  
-----BEGIN PGP SIGNATURE-----
Version: PGPfreeware 6.5.8 for non-commercial use
  
iQA/AwUBP8461jMX0745gR7AEQIEOwCg011GbufXO3ED3FkLWXmfzg7xm1cAoJD0
0EU3Kd2EKNCqataEqM5qjpPs
=LchZ
-----END PGP SIGNATURE-----
</nowiki>
}}

Сообщения этого рода не имеют смысла в сегодняшнем мире, так как есть удобные графические интерфейсы пользователя и программы чтения электронной почты, которые понимают HTML. 

Для того, чтобы решить эту проблему, к стандарту MIME (Multipurpose Internet Mail Extensions) было создано дополнение. Оно добавило поле в email сообщение, которое сообщает программе чтения почты, что все содержимое этого сообщения подписано и/или зашифровано. Проблема заключается в том, что не все программы чтения почты поддерживают такие функции. Некоторые даже портят содержимое (Microsoft Outlook знаменит своими отказами с этим работать). 

==== Kgpg ====

Kgpg ({{Package|kde-base/kmail}}) is a wonderful GUI for GnuPG. The main screen provides an area to paste text to sign or encrypt. The reverse is also true: ASCII armored text to be decrypted can also be entered. 

==== Seahorse ====

Seahorse ({{Package|app-crypt/seahorse}}) aims to be a GnuPG GUI interface for the GNOME desktop. The software has been evolving fast, but it still lacks many important features that can be found in Kgpg or the command line version.

==== KMail ====

If the <code>crypt</code> USE flag is set, KMail will be compiled with gpg support, and will be able to encrypt and decrypt inline PGP mails automatically as well as encrypting OpenPGP/MIME mails. To decrypt OpenPGP/MIME mails (which most users want) a GPG agent must be running.

Чтобы проверить, правильно ли сконфигурирован KMail, перейдите в {{Path|Settings → Configure KMail → Security → Crypto Backends}}. GpgME backend должен отобразиться в списке и установлен флажок рядом с OpenPGP. Если он находится в списке, но затенен, нажмите на {{Path|Rescan}}. Если backend, основанный на GpgME, остается затененным, KMail не будет работать как надо. 

Если не получается заставить KMail работать должным образом, посмотрите страницу [https://userbase.kde.org/KMail/PGP_MIME официальная страница KMail PGP] , чтобы получить больше информации. 

==== Claws-Mail ====

[[Claws Mail/ru|Этот почтовый клиент]] ''очень'' быстро работает с большими почтовыми ящиками, имеет все приятные в работе функции, которые требуются от программ чтения электронной почты и хорошо работает с GPG. Только одна проблема заключается в том, что она не работает со старыми подписями PGP, поэтому, при получении таких писем, проверять подписи придется вручную. 

Чтобы использовать GPG ключ с [[Claws Mail/ru|Claws-Mail]], перейдите к пункту {{Path|конфигурация аккаунта configuration → вкладка приватность}}. Как только это сделано, выберите какой ключ нужно использовать, возможно, большинству пользователей подойдет ключ по умолчанию.

== Заключительные мысли и благодарности ==

=== Некоторые из проблем ===

I had some problems with photos in keys. Check the version you are using. If you have GnuPG 1.2.1-r1 and higher you are probably OK; older versions may have problems. Also most key servers do not like keys with photos, so you are better off not adding photos.

The latest versions of GnuPG seem to have broken {{c|gpg --send-keys}}, which was used to send all keys in a keyring to the public server. 

=== О чем здесь не написано ===

{{c|gpg}} - очень сложный инструмент. Он позволяет делать гораздо больше, чем то, о чем здесь было написано. Этот документ предназначен для тех пользователей, которые еще не знакомы с GnuPG. За более подробной информацией, обратитесь к [http://www.gnupg.org официальному вебсайту GnuPG]. 

This article does not cover tools such as <tt>pgp4pine</tt>, <tt>gpgpine</tt>, <tt>evolution</tt>, and Windows GPG tools.

=== Благодарности ===

[http://www.gnupg.org Настольная Книга GnuPG] от John Michaeil Ashley - очень хорошая книга для новичков. 

Swift (Sven Vermeulen) за подталкивание меня к переписанию этого руководства.

Каждого из команды {{IRC|gentoo-doc}}. Парни, вы рулите.

Tiago Serra, за мое возвращение обратно на путь конфиденциальности.


[[Category:Server and Security]] {{Migrated|originalauthors=Gustavo Felisberto, John P. Davis, nightmorph}}
