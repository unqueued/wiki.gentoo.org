<languages />

{{Dated|date=March 3rd, 2015}}
{{InfoBox stack
|{{InfoBox homepage|https://gnupg.org/|header=true}}
|{{InfoBox wikipedia|GNU_Privacy_Guard|text=Wikipedia}}
}}

{{Metadata|abstract=Это небольшое руководство научит Вас основам использования GnuPG, инструмента для защищенной передачи сообщений.}}

Это небольшое руководство научит Вас основам использования GnuPG, инструмента для защищенной передачи сообщений.

== Введение ==

=== О чем будет рассказано в этом руководстве ===

Это руководство предполагает, что вы знакомы с криптографией с открытым ключом, шифрованием и цифровыми подписями. Если это не так, посмотрите главу 2 [http://www.gnupg.org/documentation/guides.html настольной книги GnuPG] и возвращайтесь обратно. 

Это руководство научит Вас как установить GnuPG, создать свою ключевую пару, добавить ключи в связку, отправить свой открытый ключ на сервер ключей, а также как подписывать, шифровать, проверять или расшифровывать сообщения, отправленные или полученные Вами. Вы также научитесь шифровать файлы на своем локальном компьютере, чтобы предотвратить чтение их содержимого посторонними людьми.

=== Установка требуемых программ ===

=== USE flags ===

{{USEflag|package=app-crypt/gnupg|desc=Optional USE flags for {{Package|app-crypt/gnupg}}:
|bzip2
|doc
|ldap
|mta
|nls
|readline
|smartcard
|static
|tools+++Install extra tools.
|usb
}}

=== Emerge ===

{{Emerge|app-crypt/gnupg}}

=== Other software ===

At a very basic level GnuPG must be emerged. Many applications today have some sort of support for PGP, so having <code>crypt</code> as a USE variable is a good idea. When desiring an email client capable of using GnuPG any of the following options are well suited:
* PinePGP ({{Package|mail-client/pinepgp}}); 
* [[Mutt]] ({{Package|mail-client/mutt}}) — A small but very powerful text-based mail client; 
* [[Thunderbird]] ({{Package|mail-client/thunderbird}}) — Mozilla's e-mail solution; 
* [[Evolution]] ({{Package|mail-client/evolution}}) — A GNOME Microsoft Outlook work alike; 
* [[KMail]] ({{Package|kde-base/kmail}}) — KDE's mail client. 

Installing Kgpg ({{Package|kde-base/kgpg}}) might be of interest if using the KDE desktop enviroment. This small program allows for the generation key pairs, importing of keys from ASCII files, signing imported keys, exporting keys, among a few other features.

== Usage ==

== Генерация ключа и добавление в связку открытых ключей ==

=== Создание ключа ===

Чтобы создать Ваш ключ, просто запустите <kbd>gpg --gen-key</kbd>. При первом запуске, он создаст несколько каталогов; запустите его снова чтобы создать ключи: 

{{Cmd|gpg --gen-key|output=<pre>
gpg (GnuPG) 1.0.7; Copyright (C) 2002 Free Software Foundation, Inc.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions. See the file COPYING for details.
  
Please select what kind of key you want:
   (1) RSA and RSA (default)
   (2) DSA and Elgamal
   (3) DSA (sign only)
   (4) RSA (sign only)
   Your selection? 1
</pre>
}}

Здесь Вы можете выбрать тип ключа, который Вы хотите использовать. Большинство пользователей предпочтут алгоритмы по умолчанию: RSA и RSA. Далее идет размер ключа. Запомните, что чем больше, тем лучше, но не используйте размер больший чем 2048 с ключами DSA/ElGamal. В основном, 2048 более чем достаточно для обычной почты.

После размера следует дата истечения срока действия ключа. В этом случае, чем меньше, тем лучше, но большинство пользователей может предпочесть ключ, который никогда не истекает, или обладает сроком действия в 2 или 3 года. 

{{CodeBox|title=Выбор размера ключа|<nowiki>
RSA keypair will have 1024 bits.
RSA keys may be between 1024 and 4096 bits long.
    What keysize do you want? (2048) 2048
Requested keysize is 2048 bits       
Please specify how long the key should be valid.
         0 = key does not expire
 <n>= key expires in n days
 <n>w = key expires in n weeks
 <n>m = key expires in n months
 <n>y = key expires in n years
 Key is valid for? (0) 0
Key does not expire at all
</nowiki>
}}

А теперь пришло время ввести личную информацию. Если Вы собираетесь отправить открытый ключ другим людям, Вам нужно использовать Ваш действительный email адрес: 

{{CodeBox|title=Заполнение информации о пользователе|
Is this correct (y/n)? y
                          
GnuPG needs to construct a user ID to identify your key.
  
Real name: John Doe
Email address: john@nowhere.someplace.flick
Comment: The Real John Doe
You selected this USER-ID:
"John Doe (The Real John Doe) <john@nowhere.someplace.flick>"
  
Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O 
You need a Passphrase to protect your secret key.    
  
Enter passphrase: 
}}

Теперь, введите Вашу парольную фразу дважды. Хорошей идеей является использование сильного пароля. Если кто-либо когда-нибудь овладеет Вашим закрытым ключом и взломает Ваш пароль, они будут способны отправлять сообщения подписанные ''Вами'', заставляя всех поверить, что письма были отправлены Вами на самом деле.

Далее, GnuPG сгенерирует Ваш ключ. Двигание мышкой или проигрывание mp3 на заднем плане поможет ускорить процесс, потому что это генерирует случайные данные.

=== Генерация сертификата отзыва ===

{{Important/ru|Эта часть очень важна и Вы должны сделать это ''СЕЙЧАС''.}}

После создания Ваших ключей Вы должны создать сертификат отзыва. Выполнение этого позволит Вам отозвать Ваш ключ в случае если с Вашим ключом произойдет что-то неприятное (кто-либо завладеет Вашим ключом/парольной фразой). 

{{Cmd|gpg --list-keys|output=<pre>
/home/humpback/.gnupg/pubring.gpg
---------------------------------
pub  1024D/75447B14 2002-12-08 John Doe (The Real John Doe) <john@nowhere.someplace.flick>
sub  2048g/96D6CDAD 2002-12-08
</pre>}}

{{Cmd|gpg --output revoke.asc --gen-revoke 75447B14|output=<pre>
sec  1024D/75447B14 2002-12-08   John Doe (The Real John Doe) <john@nowhere.someplace.flick>
  
Create a revocation certificate for this key? y
Please select the reason for the revocation:   
  0 = No reason specified
  1 = Key has been compromised
  2 = Key is superseded
  3 = Key is no longer used
  Q = Cancel
(Probably you want to select 1 here)
Your decision? 1
Enter an optional description; end it with an empty line:
> Someone cracked me and got my key and passphrase
>
Reason for revocation: Key has been compromised
Someone cracked me and got my key and passphrase
Is this okay? y
  
You need a passphrase to unlock the secret key for
user: "John Doe (The Real John Doe) <john@nowhere.someplace.flick>"
1024-bit DSA key, ID 75447B14, created 2002-12-08
  
ASCII armored output forced.
Revocation certificate created.
  
Please move it to a medium which you can hide away; if Mallory gets
access to this certificate he can use it to make your key unusable.
It is smart to print this certificate and store it away, just in case
your media become unreadable.  But have some caution:  The print system of
your machine might store the data and make it available to others!
</pre>
}}

Команда <kbd>gpg --list-keys</kbd> перечисляет ключи в Вашей связке открытых ключей. Вы можете ее использовать для просмотра ID Вашего ключа, чтобы Вы могли создать сертификат отзыва. А сейчас, хорошей идеей будет скопировать весь каталог .gnupg и сертификат отзыва (в защищенном ASCII тексте - {{Path|revoke.asc}}) на какой-нибудь защищенный носитель (два гибких диска или CD-R, хранимые в безопасном месте). Запомните, что {{Path|revoke.asc}} может быть использован для того, чтобы отозвать Ваши ключи и сделать их непригодными в дальнейшем. 

{{Note|Если вы имеете несколько email адресов, которые Вы хотели бы использовать с этим ключом, Вы можете запустить <kbd>gpg --edit-key ВАШ_ID</kbd> и затем использовать команду <kbd>adduid</kbd>. Она запросит имя, email и комментарий второго ID, которым Вы будете пользоваться.}}

=== Экспорт ключей ===

Для экспорта ключа, введите <kbd>gpg --armor --output john.asc --export john@nowhere.someplace.flick</kbd>. Вы можете почти всегда использовать ID ключа или что-нибудь, что идентифицирует ключ (здесь мы использовали email адрес). Теперь John имеет файл {{Path|john.asc}}, который он может отправить своим друзьям, или разместить на своей веб-странице, чтобы люди могли с ним безопасно связаться. 

=== Импорт ключей ===

Чтобы добавить файлы в свою связку открытых ключей, Вы должны сперва их импортировать, а затем проверить отпечаток ключа. После того как Вы проверили отпечаток, Вы должны его подтвердить.

{{Note/ru|Вы должны быть осторожны при проверке ключей. Это одно из слабых мест криптографии с открытым ключом.}}

Теперь, мы будем добавлять открытый ключ Луиса Пинто (моего друга) в нашу связку открытых ключей. После звонка по телефону и запрашивания отпечатка его ключа, я сравню отпечаток с результатом команды <kbd>fpr</kbd>. В случае если ключ подлинный, я добавлю его в связку открытых ключей. В этом частном случае, ключ Луиса истечет на 2003-12-01, поэтому у меня будет спрошено желаю ли я, чтобы моя подпись этого ключа истекла в то же время. 

{{Cmd|gpg --import luis.asc|output=<pre>
gpg: key 462405BB: public key imported
gpg: Total number processed: 1
gpg:               imported: 1
</pre>}}

{{Cmd|gpg --list-keys|output=<pre>
/home/humpback/.gnupg/pubring.gpg
---------------------------------
pub  1024D/75447B14 2002-12-08 John Doe (The Real John Doe) <john@nowhere.someplace.flick>
sub  2048g/96D6CDAD 2002-12-08
  
pub  1024D/462405BB 2002-12-01 Luis Pinto <lmpinto@student.dei.uc.pt>
uid                            Luis Pinto <lmpinto@dei.uc.pt>
sub  4096g/922175B3 2002-12-01 [expires: 2003-12-01]
</pre>}}

{{Cmd|gpg --edit-key lmpinto@dei.uc.pt|output=<pre>
gpg (GnuPG) 1.0.7; Copyright (C) 2002 Free Software Foundation, Inc.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions. See the file COPYING for details.
  
gpg: checking the trustdb
gpg: checking at depth 0 signed=0 ot(-/q/n/m/f/u)=0/0/0/0/0/1
pub  1024D/462405BB  created: 2002-12-01 expires: 2003-12-01 trust: -/-
sub  4096g/922175B3  created: 2002-12-01 expires: 2003-12-01
(1)  Luis Pinto <lmpinto@dei.uc.pt>
(2). Luis Pinto <lmpinto@student.dei.uc.pt>
</pre>}}

{{Cmd|fpr|prompt=Command> |output=<pre>
pub  1024D/462405BB 2002-12-01 Luis Pinto <lmpinto@dei.uc.pt>
             Fingerprint: F056 3697 ADE3 CF98 B80B  8494 0AD3 E57B 4624 05BB
</pre>}}

{{Cmd|sign|prompt=Command> |output=<pre>
Really sign all user IDs? y
                           
pub  1024D/462405BB  created: 2002-12-01 expires: 2003-12-01 trust: -/-
             Fingerprint: F056 3697 ADE3 CF98 B80B  8494 0AD3 E57B 4624 05BB
  
     Luis Pinto <lmpinto@dei.uc.pt>
     Luis Pinto <lmpinto@student.dei.uc.pt>
  
This key is due to expire on 2003-12-01.
Do you want your signature to expire at the same time? (Y/n) Y
How carefully have you verified the key you are about to sign actually belongs
to the person named above?  If you don't know what to answer, enter "0".
  
   (0) I will not answer. (default)
   (1) I have not checked at all.
   (2) I have done casual checking.
   (3) I have done very careful checking.
  
   Your selection? 3
Are you really sure that you want to sign this key
with your key: "John Doe (The Real John Doe) <john@nowhere.someplace.flick>"
  
I have checked this key very carefully.
  
Really sign? y
              
You need a passphrase to unlock the secret key for
user: "John Doe (The Real John Doe) <john@nowhere.someplace.flick>"
1024-bit DSA key, ID 75447B14, created 2002-12-08
</pre>}}

{{Cmd|check|prompt=Command> |output=<pre>
uid  Luis Pinto <lmpinto@dei.uc.pt>
sig!3       462405BB 2002-12-01   [self-signature]
sig!3       75447B14 2002-12-08   John Doe (The Real John Doe) <john@nowhere.someplace.flick>
uid  Luis Pinto <lmpinto@student.dei.uc.pt>
sig!3       462405BB 2002-12-01   [self-signature]
sig!3       75447B14 2002-12-08   John Doe (The Real John Doe) <john@nowhere.someplace.flick>
</pre>
}}

== Обмен ключами с серверами ключей ==

=== Отправка ключей на сервер ===

Теперь, когда у нас есть ключ, возможно, хорошей идеей будет отправить его на сервер ключей. В мире существует много серверов ключей и большинство из них обмениваются ключами друг с другом. Здесь, мы собираемся отправить ключ, принадлежащий John Doe,  на сервер keys.pgp.net. Он использует HTTP, поэтому если Вам потребуется использование прокси для HTTP трафика, не забудьте его установить (<kbd>export http_proxy=<nowiki>http://proxy_host:port/</nowiki></kbd>). Команда для отправки ключа: <kbd>gpg --keyserver keys.gnupg.net --keyserver-options honor-http-proxy --send-key 75447B14</kbd>, где ''<tt>75447B14</tt>'' - это идентификатор ключа (key ID). Если Вам не нужен HTTP прокси, Вы можете убрать ''<tt>--keyserver-options honor-http-proxy</tt>''. 

Вы также можете отправить ключи других людей, которые Вы подписали, на сервер ключей. Мы можем отправить ключ Луиса Пинто на сервер. Таким образом, кто-нибудь кто доверяет Вашему ключу, может использовать подпись, которую Вы там разместили, для того чтобы доверять ключу Луиса. 

=== Получение ключей с сервера ===

Теперь мы собираемся найти ключ Gustavo Felisberto и добавить его в связку ключей John Doe (на случай, если Вы не заметили, Gustavo Felisberto - автор этого руководства :&#41;). 

{{Cmd|gpg --keyserver keys.gnupg.net --keyserver-options honor-http-proxy --search-keys humpback@felisberto.net|output=<pre>
gpg: searching for "humpback@felisberto.net" from hkp server keys.gnupg.net
(1)	Gustavo Felisberto <humpback@gmail.com>
	Gustavo Felisberto <humpback@gentoo.org>
	Gustavo Felisberto <humpback@gentoopt.org>
	Gustavo Felisberto <gustavo@felisberto.net>
	Gustavo Felisberto <humpback@gentoo-pt.org>
	Gustavo Felisberto <humpback@felisberto.net>
	Gustavo Felisberto <gustavo@student.dei.uc.pt>
	Gustavo Felisberto <humpback@student.dec.uc.pt>
	Gustavo Felisberto (apt-get install anarchy) <humpback@felisberto.net>
	  1024 bit DSA key B9F2D52A, created: 2002-12-06
(2)	Gustavo Adolfo Silva Ribeiro Felisberto <humpback@altavista.net>
	  1024 bit DSA key 26471D8F, created: 2001-09-05
(3)	Gustavo Felisberto <humpback@altavista.net>
	  1024 bit DSA key E97E0B46, created: 1999-08-04, expires: 2000-08-04 (expired)
(4)	Gustavo A.S.R. Felisberto <humpback@altavista.net>
	  1024 bit DSA key B59AB043, created: 1998-12-10
(5)	Gustavo Adolfo Silva Ribeiro Felisberto <humpback@altavista.net>
	  1024 bit DSA key 39EB133D, created: 1998-08-27
(6)	Gustavo Adolfo Silva Ribeiro Felisberto <humpback@altavista.net>
	  1024 bit DSA key AE02AF87, created: 1998-06-15
Enter number(s), N&#41;ext, or Q&#41;uit > 1
gpg: requesting key B9F2D52A from hkp server keys.gnupg.net
gpg: key B9F2D52A: public key "Gustavo Felisberto <humpback@felisberto.net>" imported
gpg: 3 marginal(s) needed, 1 complete(s) needed, classic trust model
gpg: depth: 0  valid:   4  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 4u
gpg: next trustdb check due at 2015-06-28
gpg: Total number processed: 1
gpg:               imported: 1
</pre>
}}

Как видно из ответа сервера, я отослал несколько ключей на сервер, но в данный момент я использую только ''<tt>B9F2D52A</tt>''. Теперь John Doe может его получить и подписать, если он ему доверяет.

== Использование GPG Agent ==

=== Что такое GPG Agent? ===

Иногда, работа с определенными приложениями требует от Вас очень частого использования ключа GPG. Это означает что Вам придется вводить парольную фразу много раз. Несколько приложений поддерживали механизм кэширования парольной фразы чтобы облегчить жизнь пользователям. Однако, это не позволяло делить этот кэш между программами (насколько это было бы безопасно?) и вынуждало приложения изобретать колесо снова и снова. 

GPG агент - это отдельное приложение, используемое GPG для кэширования парольной фразы стандартным и безопасным способом. Оно позволяет приложениям использовать GPG параллельно: если Вы вводите парольную фразу, работая в одном приложении, другое приложение может работать с GPG без повтора запроса парольной фразы для разблокирования ключа - если, конечно же, GPG агент настроен на то чтобы это разрешить. 

Gentoo предоставляет несколько приложений GPG agent. Пакет {{Package|app-crypt/gnupg}} содержит то, что можно рассматривать как эталон, и будет тем, что мы будем использовать в этом документе.

=== Конфигурация gpg-agent и pinentry ===

GnuPG включает <code>gpg-agent</code>. Pinetry ({{Package|app-crypt/pinentry}}) — это вспомогательное приложение, которое gpg-agent использует для запроса парольной фразы в графическом окне. Оно бывает трех видов: отображение окна с использованием gtk+, Qt или библиотек curses (в зависимости от установленных USE-флагов в {{Path|/etc/portage/make.conf}}). 

Если вы установили {{Package|app-crypt/pinentry}} с более чем одним типом  всплывающего окна, то можно выбрать из них с помощью команды <kbd>eselect pinentry</kbd>: 

{{RootCmd|eselect pinentry list|output=<pre>
Available pinentry implementations:
  [1]   pinentry-gtk-2 *
  [2]   pinentry-curses
  [3]   pinentry-qt4
</pre>}}

{{RootCmd|eselect pinentry set 1}}

Теперь, создайте файл с названием {{Path|~/.gnupg/gpg-agent.conf}} и введите следующие строчки, которые определят срок действия парольной фразы по умолчанию (напр., 30 минут), а также приложение, которое надо вызвать когда парольная фраза должна быть получена в первый раз (напр., gtk+ версия pinentry). 

{{FileBox|filename=~/.gnupg/gpg-agent.conf|
pinentry-program /usr/bin/pinentry-gtk-2
no-grab
default-cache-ttl 1800
}}

Затем, настройте GnuPG на использование agent, когда это уместно. Отредактируйте {{Path|~/.gnupg/gpg.conf}} и добавьте следующую строчку: 

{{FileBox|filename=~/.gnupg/gpg.conf|title=Настройка GnuPG на использование GPG Agent|
use-agent
}}

Теперь Ваша система (почти) настроена на использование GPG agent.

=== Автоматический запуск GPG Agent ===

Если Вы используете KDE в качестве графической среды, отредактируйте {{Path|/etc/kde/startup/agent-startup.sh}} и раскомментируйте следующее (глобально) или добавьте следующую команду в {{Path|~/.kde4/env/gpg-agent.sh}} (для локального пользователя), чтобы KDE автоматически запускал GPG agent: 

{{FileBox|filename=/etc/kde/startup/agent-startup.ksh|title=Автоматический запуск GPG agent в KDE|lang=bash|1=
eval "$(gpg-agent --daemon)"
}}

Дополнительно, раскомментируйте следующее в {{Path|/etc/kde/shutdown/agent-shutdown.sh}} (глобально) или добавьте в {{Path|~/.kde4/shutdown/gpg-agent.sh}} (для локального пользователя): 

{{FileBox|filename=/etc/kde/shutdown/agent-shutdown.sh|title=Закрытие GPG agent с помощью KDE|lang=bash|1=
if [ -n "${GPG_AGENT_INFO}" ]; then
  kill $(echo ${GPG_AGENT_INFO} {{!}} cut -d':' -f 2) >/dev/null 2>&1
fi
}}

Если Вы используете другую графическую среду, поместите эту строку (ту же, что и упомянутую выше) в {{Path|~/.xinitrc}} (если Вы используете <code>startx</code>) или {{Path|~/.xsession}} (если Вы используете XDM/GDM/KDM/...).

== Работа с документами ==

=== Шифрование и подпись ===

Давайте предположим, что Вы имеете файл, который Вы хотели бы отправить Луису. Вы можете его зашифровать, подписать, или зашифровать и подписать одновременно. Шифрование означает что только Луис сможет его открыть. Подпись говорит Луису о том что Вы действительно тот кто создал этот файл. 

Следующие три команды как раз это и сделают: зашифруют, подпишут и зашифруют/подпишут. 

{{Cmd|gpg --output doc.gpg --encrypt --recipient lmpinto@dei.uc.pt doc_to_encrypt
|gpg --output doc.gpg --sign --recipient lmpinto@dei.uc.pt doc_to_sign
|gpg --output doc.gpg --encrypt --sign --recipient lmpinto@dei.uc.pt doc_to_encrypt_and_sign}}

Это создаст двоичные файлы. Если Вы хотите создать ASCII-файлы, просто добавьте опцию <tt>--clearsign</tt> в начало команды. 

=== Расшифровка и проверка подписей ===

Предположим, Вы получили файл, который зашифрован Вашим открытым ключом. Командой для расшифровки является <kbd>gpg --output document --decrypt encrypted_doc.gpg</kbd>. Это расшифрует документ и проверит подпись (если таковая имеется). 

=== Шифрование и расшифровка без ключей ===

Также возможно шифрование файлов с использованием паролей вместо ключей. Пароль, сам по себе, будет функционировать как ключ - он будет использован в качестве ''симметричного шифра''. Вы можете зашифровать файл, используя <kbd>gpg --symmetric</kbd>; расшифровка использует ту же команду, которую мы обсуждали ранее. 

{{Cmd|gpg --output document.gpg --symmetric document}}

GnuPG запросит парольную фразу и ее подтверждение.

=== Расширенные функции ===

В GnuPG есть несколько приятных расширенных функций. Чтобы их найти, откройте файл {{Path|~/.gnupg/gpg.conf}} . 

{{FileBox|filename=~/.gnupg/gpg.conf|
#keyserver x-hkp://keys.gnupg.net
#keyserver-options auto-key-retrieve include-disabled include-revoked
}}

Найдите две линии выше и раскомментируйте их. С этим, всякий раз когда GnuPG потребуется проверить подпись и он не найдет открытый ключ в локальной связке, GnuPG соединится с сервером ключей по адресу [http://keys.gnupg.net:11371/ keys.gnupg.net] и попытается получить их оттуда. 

Другой удобной командой является <kbd>gpg --refresh-keys</kbd>. Она соединится с сервером, определенном в файле параметров, и обновит открытые ключи в Вашей локальной связке ключей оттуда, находя отозванные ключи, новые ID, и новые подписи ключей. Вы, возможно, должны запускать ее один или два раза в месяц, так чтобы если кто-то отзовет свой ключ, Вы были об этом уведомлены.

== Интерфейсы GnuPG ==

=== О подписях электронной почты ===

95% времени, Вы будете использовать GnuPG в электронной почте, подписывая/шифруя Ваши исходящие сообщения и читая подписанные/зашифрованные сообщения, отправленные Вам. Поэтому будет честно, если я расскажу об этом сначала.

Существует два способа подписать/зашифровать почту с GnuPG, старый способ и новый способ. По старому способу, сообщения будут появляться в виде простого текста, без возможного форматирования, а любые вложенные файлы будут не подписаны/не зашифрованы. Здесь приведен пример сообщения, подписанного старым способом: 

{{CodeBox|title=Подпись в виде обычного текста|<nowiki>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1
  
Test message
  
-----BEGIN PGP SIGNATURE-----
Version: PGPfreeware 6.5.8 for non-commercial use
  
iQA/AwUBP8461jMX0745gR7AEQIEOwCg011GbufXO3ED3FkLWXmfzg7xm1cAoJD0
0EU3Kd2EKNCqataEqM5qjpPs
=LchZ
-----END PGP SIGNATURE-----
}}

Сообщения этого рода не имеют смысла в сегодняшнем мире, где мы имеем удобные графические интерфейсы пользователя и программы чтения электронной почты, которые понимают html. 

Для того, чтобы решить эту проблему, к стандарту MIME (Multipurpose Internet Mail Extensions) было создано дополнение. Оно добавило поле в email сообщение, которое сообщает программе чтения почты, что все содержимое этого сообщения подписано и/или зашифровано. Проблема заключается в том, что не все программы чтения почты это поддерживают. И некоторые даже портят содержимое; Microsoft Outlook знаменит своими отказами с этим работать. 

=== Kgpg ===

Kgpg ({{Package|kde-base/kmail}}) - это отличный графический интерфейс пользователя для GnuPG. На главном экране вы можете вставить текст, который Вы хотите подписать или зашифровать, кроме того, вы можете вставить защищенный текст ASCII, который Вы хотите расшифровать. 

На главном экране Вы можете расшифровать текст (Вам потребуется указать пароль), зашифровать другие файлы, вставить новый текст для подписи....

=== Seahorse ===

Seahorse ({{Package|app-crypt/seahorse}}) ориентирована на то, чтобы быть графическим интерфейсом GnuPG для рабочего стола Gnome. Программа быстро развивается, но все еще не имеет множества важных функций, которые могут быть найдены в Kgpg или командной строке. 

=== KMail ===

Если у Вас установлен USE-флаг <code>crypt</code>, KMail скомпилируется с поддержкой gpg, и сможет шифровать и расшифровывать встроенные в почту в виде текста сообщения PGP  автоматически, а также шифровать сообщения OpenPGP/MIME. Если Вы также хотите расшифровывать сообщения OpenPGP/MIME (что, скорее всего, так), Вам нужно запустить GPG agent. 

Чтобы проверить, правильно ли сконфигурирован KMail, перейдите в  на {{Path|Settings -> Configure KMail -> Security -> Crypto Backends}}. Вы должны увидеть в списке основанный на GpgME backend и сможете установить флажок рядом с OpenPGP. Если он находится в списке, но затенен, нажмите на {{Path|Rescan}}. Если backend, основанный на GpgME, остается затененным, KMail не работает как надо. 

Если у Вас все еще не получается заставить KMail работать должным образом, посмотрите страницу [http://kmail.kde.org/kmail-pgpmime-howto.html Описание KMail PGP] , чтобы получить больше информации. 

=== Claws-Mail ===

Эта программа чтения электронной почты ''очень'' быстро работает с большими почтовыми ящиками, имеет все приятные в работе функции, которые требуются от программ чтения электронной почты и хорошо работает с gpg. Только одна проблема заключается в том, что она не работает со старыми подписями PGP, поэтому, при получении таких писем, проверять подписи придется вручную. 

Чтобы использовать Ваш gpg ключ с Claws-Mail, перейдите к пункту {{Path|account configuration -> вкладка privacy}}. Как только это сделано, просто выберите какой ключ нужно использовать, возможно, большинству пользователей подойдет ключ по умолчанию.

== Заключительные мысли и Благодарности ==

=== Некоторые из проблем ===

У меня были некоторые проблемы с использованием фото в ключах. Проверьте версию которой Вы пользуетесь. Если у Вас GnuPG 1.2.1-r1 и выше, Вы, вероятно, в порядке. Более старые версии могут иметь проблемы. Также, большинство серверов ключей не работают с ключами с фото, поэтому будет лучше если Вы не станете добавлять фотографии. 

Самые последние версии gnupg, по-видимому, не работают с командой <kbd>gpg --send-keys</kbd>, которая была использована для отправки всех ключей в Вашем кольце на сервер. 

=== О чем здесь не написано ===

<code>gpg</code> - очень сложный инструмент. Он позволяет делать гораздо больше, чем то, о чем я здесь написал. Этот документ предназначен для тех пользователей, которые еще не знакомы с GnuPG. За более подробной информацией, обратитесь к [http://www.gnupg.org Вебсайту GnuPG] . 

Я не написал о других инструментах, таких как <code>pgp4pine</code>, <code>gpgpine</code> , <code>evolution</code> и, может быть, инструментах под Windows, но я, возможно, дополню этот документ в дальнейшем.

=== Благодарности ===

[http://www.gnupg.org Настольная Книга GnuPG] от John Michaeil Ashley - очень хорошая книга для новичков. 

Swift (Sven Vermeulen) за подталкивание меня к переписанию этого руководства. 

Каждого из команды #gentoo-doc. Парни, вы рулите. 

Tiago Serra, за мое возвращение обратно на путь конфиденциальности.


[[Category:Server and Security]] {{Migrated|originalauthors=Gustavo Felisberto, John P. Davis, Sven Vermeulen, nightmorph}}
