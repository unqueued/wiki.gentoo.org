<languages />
== Fuseau horaire ==

Afin de tenir votre système à l'heure correctement, vous devez sélectionner votre fuseau horaire pour que votre système sache où il se trouve.

=== OpenRC ===

Recherchez votre fuseau horaire dans {{Path|/usr/share/zoneinfo}}. Évitez les fuseaux {{Path|/usr/share/zoneinfo/Etc/GMT*}} car leur nom n'indique pas les zones attendues. Par exemple  {{Path|GMT-8}} correspond  en fait à GMT+8.

Supposons que vous habitiez à Bruxelles :

{{RootCmd|cp /usr/share/zoneinfo/Europe/Brussels /etc/localtime}}

Maintenant spécifiez votre fuseau horaire.

{{RootCmd|nano -w /etc/timezone|output=<pre>
Europe/Brussels
</pre>}}

{{RootCmd|date|output=<pre>
Wed Mar  8 00:46:05 CET 2006
</pre>
}}

{{Note|Assurez-vous que l'indicateur de fuseau horaire (dans ce cas "CET") est correct pour votre zone.}}

{{Note|Vous pouvez définir la valeur de  <code>TZ</code> à une valeur quelconque de {{Path|/usr/share/zoneinfo}} dans votre fichier  shell rc  ( {{Path|.bash_profile}} pour  bash) pour un réglage au niveau utilisateur. Dans ce cas <code>TZ{{=}}"Europe/Berlin"</code>.}}

=== systemd ===

Si vous utilisez systemd, vous devriez définir votre fuseau horaire avec la commande <code>timedatectl</code>. Vérifiez d'abord les fuseaux horaires disponibles :

{{RootCmd|timedatectl list-timezones}}

Définissez alors votre fuseau horaire :

{{RootCmd|timedatectl set-timezone Europe/Brussels}}

Pour terminer, vérifiez les résultats en lançant la commande <code>timedatectl</code> sans arguments :

{{RootCmd|timedatectl}}

== Horloge matérielle ==

Dans la plupart des installation de Gentoo Linux, votre horloge matérielle est réglée à UTC (ou GMT, Greenwich Mean Time) et votre fuseau horaire est pris en compte pour déterminer l'heure locale  réelle. Si, pour une raison ou pour une autre, vous avez besoin d'avoir votre horloge matérielle à autre chose que UTC, vous devez éditer {{Path|/etc/conf.d/hwclock}} (ou  {{Path|/etc/conf.d/adjkerntz}},  si vous utilisez Gentoo BSD) et changer la valeur de  <code>clock</code> de <code>UTC</code> en  <code>local</code>. 

{{Code|Utiliser le temps UTC dans /etc/conf.d/hwclock|<pre>
clock="UTC"</pre>}}

{{Code|Utiliser le temps du fuseau horaire dans /etc/conf.d/hwclock|<pre>
clock="local"</pre>}}

== Fonctionnement des locales ==

=== Que sont les locales ? ===

Une locale est un jeu d'informations que la plupart des programmes utilisent pour déterminer les réglages spécifiques à un couple  langue-pays.Les locales et leurs données font partie de la bibliothèque système et se trouvent dans  la plupart des systèmes. Un nom de locale se présente généralement sous la forme <code>ab_CD</code> où <code>ab</code> est le code de langue à deux (ou trois) lettres (comme spécifié dans ISO-3166). Des variantes sont souvent ajoutées au nom de locales, par exemple, <code>en_GB.UTF-8</code> ou <code>de_DE@euro</code>. Reportez-vous à [http://en.wikipedia.org/wiki/Locale Wikipedia] pour en savoir plus sur les locales et pour lire les articles en relation. 

=== Variables d'environnement pour les locales ===

Les variables qui contrôlent les différents aspects du réglage des locales sont présentées ci-dessous. Toutes prennent un nom de locale de la forme <code>ab_CD</code> indiquée ci-dessus. 

{| class="wikitable" style="text-align: left;" 
|- 
! Nom de la variable
! Explication
|- 
| LANG
| Définit tous les paramètres d'une locale d'un seul coup, tout en  autorisant des personnalisation individuelles ultérieures via le paramètre LC_* présenté ci-dessous. 
|- 
| LC_COLLATE
| Définit l'orde alphabétique des chaînes de caractères. Ceci affecte par exemple la sortie des listings de répertoires. 
|- 
| LC_CTYPE
| Définit  les propriétés de gestion des caractères par le système ; en particulier quels caractères sont considérés comme faisant partie de l'alphabet, des chiffres etc. Cela détermine aussi le jeu de caractères utilisé,  quand cela s'applique.
|- 
| LC_MESSAGES
| Les traductions des programmes qui utilisent un schéma de localisation basé sur des messages (la majorité des programmes GNU, voir les chapitres suivants pour une information plus détaillée sur ceux qui l'utilisent, et comment faire en sorte que ceux qui ne l'utilisent pas fonctionnent). 
|- 
| LC_MONETARY
| Définit l'unité monétaire et le format des valeurs numériques exprimées dans cette unité. 
|-
| LC_NUMERIC
| Définit le format des valeurs numériques non monétaires. Ceci affecte des choses telles que le séparateur de milliers et le séparateur des décimales. 
|- 
| LC_TIME
| Définit le format des dates et de l'heure. 
|- 
| LC_PAPER
| Définit la taille par défaut du papier.
|- 
| LC_ALL
| Une variable spéciale pour écraser tous les autres paramètres.
|-
|}

{{Note|Certains programmes sont écrits d'une manière telle qu'ils s'attendent à un ordre alphabétique basé sur l'anglais, alors que certaines locales comme l'Estonien, utilisent un ordre différent. En conséquence, il est recommandé de  définir  LC_COLLATE à C pour des paramètres intéressant le système entier.}}

{{Warning/fr|L'utilisation de  LC_ALL est fortement déconseillée  car cela ne peut plus être écrasé ultérieurement. N'utilisez cela que pour des tests et ''jamais'' dans un fichier de démarrage. }}

La plupart du temps, les utilisateurs ne définissent la variable LANG qu'à une échelle globale.

=== Générer des locales spécifiques ===

Vous n'utiliserez probablement qu'une, ou peut-être deux, locales sur votre système. Vous pouvez spécifier les locales dont vous aurez besoin dans {{Path|/etc/locale.gen}}. 

{{Code|Ajouter des locales à /etc/locale.gen|<pre>
en_GB ISO-8859-1
en_GB.UTF-8 UTF-8
de_DE ISO-8859-1
de_DE@euro ISO-8859-15
</pre>
}}

L'étape suivante consiste à exécuter la commande <code>locale-gen</code>. Elle génère toutes les  locales que vous avez spécifiées dans le fichier {{Path|/etc/locale.gen}}. 

{{Note|<code>locale-gen</code> est disponible dans <code>glibc-2.3.6-r4</code> et postérieures. Si vous disposez d'une version plus ancienne de  glibc, vous devriez la mettre à jour maintenant.}}

Vous pouvez vérifier que les locales que vous avez sélectionnées sons disponibles en exécutant <code>locale -a</code>.

=== Configurer une  locale ===

==== OpenRC ==== 

Lorsque vous utilisez OpenRC, les configurations des locales sont stockées dans des variables d'environnement.  Elles sont généralement définies dans le fichier {{Path|/etc/env.d/02locale}} (pour des configurations s'appliquant au système entier), et peuvent être gérées via la commande <code>eselect locale</code>. Par exemple, pour définir la variable  <code>LANG</code> à la valeur <code>C</code> :

{{RootCmd|eselect locale list|output=<pre>
Available targets for the LANG variable:
  [1]   C 
  [2]   POSIX
  [3]   en_US
  [4]   en_US.iso885915
  [5]   en_US.utf8
  [ ]   (free form)
</pre>}}

{{RootCmd|eselect locale set 1}}

Bien-sûr, vous pouvez éditer le fichier à la main et diversifier les variables de la locale.

{{Code|Configurer la locale par défaut du système dans  /etc/env.d/02locale|<pre>
LANG="de_DE.UTF-8"
LC_COLLATE="C"
</pre>
}}

{{Note|Utilisez <code>de_DE@euro</code> pour LANG si vous voulez utiliser le symbole de l'Euro(â‚¬) sur des locales non basées sur l'UTF-8.}}

Il est également possible, et très courant en particulier dans un environnement UNIX traditionnel, de laisser la configuration globale inchangée, c.à.d. dans la locale  "<code>C</code>". Les utilisateurs peuvent toujours spécifier leur locale préférée dans leur propre fichier RC de shell : 

{{Code|Configurer la  locale dans ~/.bashrc|<pre>
export LANG="de_DE.UTF-8"
export LC_COLLATE="C"
</pre>
}}

Une autre manière de configurer le système, c'est de le laisser dans la locale par défaut C, mais d'activer la représentation UTF-8 des caractères en même temps. Cette option se met en place en utilisant les réglages suivants dans {{Path|/etc/env.d/02locale}} : 

{{Code|Utiliser la locale traditionnelle C tout en spécifiant UTF-8|<pre>
LC_CTYPE=de_DE.UTF-8
</pre>
}}

En utilisant l'extrait de code ci-dessus, les utilisateurs seront en mesure de voir les noms de fichiers correctement localisés, sans être forcés d'adopter votre langue préférée. 

Une fois que vous avez définie la locale correcte, assurez-vous de mettre à jour vos variables d'environnement pour que votre système les prenne en compte.

Pour une locale au niveau du système entier :

{{RootCmd|env-update && source /etc/profile}}

Pour une locale spécifique à l'utilisateur :

{{Cmd|source ~/.bashrc}}

Après cela, vous devez tuer votre serveur X en pressant <code>Ctrl-Alt-Backspace</code>, vous déconnecter, puis vous reconnecter en tant qu'utilisateur. 

Vérifiez maintenant si les changements sont effectifs : 

{{Cmd|locale}}

==== systemd ====

Si vous utilisez systemd, vous devriez définir votre locale avec la commande <code>localectl</code>. Consultez la liste des locales disponibles avec :

{{RootCmd|localectl list-locales}}

Puis, définissez la locale dont vous avez besoin :

{{RootCmd|<nowiki>localectl set-locale LANG=de_DE.utf8</nowiki>}}

Pour terminer, vérifiez si le résultat est correct :

{{RootCmd|<nowiki>localectl | grep "System Locale"</nowiki>|output=<pre>
   System Locale: LANG=de_DE.utf8
</pre>}}

== Keyboard layout for the console ==

=== OpenRC ===

The keyboard layout used by the console is set in {{Path|/etc/conf.d/keymaps}} by the <code>keymap</code> variable. Valid values can be found in {{Path|/usr/share/keymaps/YOUR_ARCH/}}. {{Path|i386}} has further subdivisions into layout ({{Path|qwerty/}}, {{Path|azerty/}}, etc.). Some languages have multiple options, so you may wish to experiment to decide which one fits your needs best. 

{{Code|Setting the console keymap|<pre>
keymap="de"
#keymap="de-latin1"
#keymap="de-latin1-nodeadkeys"
</pre>
}}

=== systemd ===

With systemd the keymap layout used for your console can be set using the <code>localectl</code> command. First check the available keymap layouts:

{{RootCmd|localectl list-keymaps}}

Then set the console keymap layout you want:

{{RootCmd|localectl set-keymap it}}

Finally check if the console keymap layout was set correctly:

{{RootCmd|<nowiki>localectl | grep "VC Keymap"</nowiki>|output=<pre>
       VC Keymap: it
</pre>}}

== Keyboard layout for the X server ==

The keyboard layout to be used by the X server is specified in {{Path|/etc/X11/xorg.conf}} by the <code>XkbLayout</code> option. 

{{Code|Setting the X keymap|<pre>
Section "InputClass"
	Identifier "keyboard-all"
	Driver "evdev"
	Option "XkbLayout" "de"
	#Option "XkbModel" "pc105"
	MatchIsKeyboard "on"
EndSection
</pre>
}}

If you have an international keyboard layout, you should set the option <code>XkbModel</code> to <code>pc102</code> or <code>pc105</code> , as this will allow mapping of the additional keys specific to your keyboard. 

Deadkeys allow you to press keys that will not show immediately but will be combined with another letter to produce a single character. Setting <code>XkbVariant</code> to <code>nodeadkeys</code> allows input these special characters into X terminals. 

If you would like to switch between more than one keyboard layout (for example English and Russian), all you have to do is add a few lines to {{Path|xorg.conf}} that specify the desired layouts and the shortcut command. 

{{Code|Switching between two keyboard layouts|<pre>
Section "InputClass"
	Identifier "keyboard-all"
	Driver "evdev"
	Option "XkbLayout"    "us,ru"
	Option "XkbOptions"   "grp:alt_shift_toggle,grp_led:scroll"
	MatchIsKeyboard "on"
EndSection
</pre>
}}

Here, <code>XkbOptions</code> allows you to toggle between keyboard layouts by simply pressing <code>Alt-Shift</code> . This will also toggle the Scroll Lock light on or off, thanks to the <code>grp_led:scroll</code> option. This is a handy visual indicator of which keyboard layout you are using at the moment.

=== systemd ===

With systemd the keymap layout for the X11 server can be set using the <code>localectl</code> command. First check the available X11 keymap layouts:

{{RootCmd|localectl list-x11-keymap-layouts}}

Then set the X11 keymap layout you want:

{{RootCmd|localectl set-x11-keymap it}}

Finally check if the X11 keymap layout was set correctly:

{{RootCmd|<nowiki>localectl | grep "X11 Layout"</nowiki>|output=<pre>
      X11 Layout: it
</pre>}}

== KDE ==

For KDE you have to install the <code>kde-base/kde-l10n</code> and <code>app-office/calligra-l10n</code> packages. These respect the  described earlier.

== The Euro Symbol for the Console ==

In order to get your console to display the Euro symbol, you will need to set <code>consolefont</code> in {{Path|/etc/conf.d/consolefont}} to a file found in {{Path|/usr/share/consolefonts/}} (without the <code>.psfu.gz</code> ). <code>lat9w-16</code> has the Euro symbol. 

{{Code|Setting the console font|<pre>
consolefont="lat9w-16"
</pre>
}}

You should verify that <code>consolefont</code> is in the boot runlevel: 

{{RootCmd|rc-update -v show {{!}} grep consolefont}}

If no runlevel is displayed for <code>consolefont</code> , then add it to the proper level: 

{{RootCmd|rc-update add consolefont boot}}

== The Euro Symbol in X ==

=== Most Applications ===

Getting the Euro symbol to work properly in X is a little bit tougher. The first thing you should do is change the <code>fixed</code> and <code>variable</code> definitions in {{Path|/usr/share/fonts/misc/fonts.alias}} to end in <code>iso8859-15</code> instead of <code>iso8859-1</code> . 

{{Code|Setting default X fonts|<pre>
fixed        -misc-fixed-medium-r-semicondensed--13-120-75-75-c-60-iso8859-15
variable     -*-helvetica-bold-r-normal-*-*-120-*-*-*-*-iso8859-15
</pre>
}}

Some applications use their own font, and you will have to tell them separately to use a font with the Euro symbol. You can do this at a user-specific level in {{Path|.Xdefaults}} (you can copy this file to {{Path|/etc/skel/}} for use by new users), or at a global level for any application with a resource file in {{Path|/usr/share/X11/app-defaults/}} (like xterm). In these files you generally have to change an existing line, rather than adding a new one. To change our xterm font, for instance: 

{{Cmd|echo 'XTerm*font: fixed' >> ~/.Xresources 
|xrdb -merge ~/.Xresources}}

=== The Euro symbol in (X)Emacs ===

To use the Euro symbol in (X)Emacs, add the following to {{Path|.Xdefaults}} : 

{{Code|setting the font for emacs|<pre>
Emacs.default.attributeFont: -*-courier-medium-r-*-*-*-120-*-*-*-*-iso8859-15
</pre>
}}

For XEmacs (not plain Emacs), you have to do a little more. In {{Path|/home/user/.xemacs/init.el}} , add: 

{{Code|setting the font for xemacs|<pre>
(define-key global-map '(EuroSign) '[€])
</pre>
}}

=== LibreOffice ===

The current stable <code>app-office/libreoffice</code> and <code>app-office/libreoffice-bin</code> ebuilds support the  for selecting installed GUI language packs. To see the status of GUI translation, hyphenation, spell checking and other localisations on your language, please refer to [https://translations.documentfoundation.org/ LibreOffice translation web site] .

== NLS ==

For message based localization to work in programs that support it, you will probably need to have programs compiled with the <code>nls</code> (Native language support) USE flag set. Most of the programs using nls also need the gettext library to extract and use localized messages. Of course, Portage will automatically install it when needed.

After enabling the <code>nls</code> USE flag you may need to re-emerge some packages:

{{Emerge|params+=--newuse --deep --with-bdeps=y|@world}}

== LINGUAS ==

There is also additional localization variable called <code>LINGUAS</code>, which affects to localization files that get installed in gettext-based programs, and decides used localization for some specific software packages, such as <code>kde-base/kde-l10n</code> and <code>app-office/libreoffice</code>. The variable takes in ''space''-separated list of language codes, and suggested place to set it is {{Path|/etc/portage/make.conf}}: 

{{RootCmd|nano -w /etc/portage/make.conf|output=<pre>
## (Add in the LINGUAS variable. For instance, for German, Finnish and English:)
LINGUAS="de fi en"
</pre>}}

A list of locales that can be used is provided as {{Path|/usr/portage/profiles/desc/linguas.desc}} : 

{{Cmd|grep -i french /usr/portage/profiles/desc/linguas.desc|output=<pre>
fr - French locale
fr_CA - French locale for Canada
fr_FR - French locale for France
</pre>
}}

After setting the <code>LINGUAS</code> USE flag you may need to re-emerge some packages:

{{Emerge|params+=--newuse --deep --with-bdeps=y|@world}}

== Resources ==

Xorg resources:
* [[Evdev#Keyboard_layout|Keyboard layout]] inside the [[Evdev]] article

== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:

* Alexander Holler
* Steven Lucy
* Benny Chuang
* Lars Weiler
* Tobias Scherbaum
* Flammie Pirinen
* nightmorph
* klondike
[[Category:Localization]]
