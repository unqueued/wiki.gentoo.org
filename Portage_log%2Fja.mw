<languages />
パッケージを構築するための<tt>emerge</tt>を使用する場合は、Portageからのメッセージに気づき珍しいことではありません。 彼らはGentoo開発者からの重要な情報が含まれる場合がありますので、それは、それらを読むことをお勧めですが、彼らは急速に画面の外にスクロールしているため、多くの場合、これはすぐには不可能です。 これは、簡単にその目的は、後にレビューのためにディスクにメッセージを保存することですELOGと呼ばれるPortageの機能を、有効にすることで解決することができます。 しかし、他のロギング機能も同様に存在します...

== Portage elog subsystem ==

Portage elog サブシステムは、開発者、管理者またはユーザーの注意を引き付けるためのebuildに入れた特定、ebuildの提供のログメッセージを追跡します。 多くの場合、これらのメッセージは言ったパッケージのビルドに関連する重要なまたは興味深い情報が含まれています。

=== セットアップ ===

<code>PORTAGE_ELOG_CLASSES</code>変数を介してログに記録する情報の種類を選択。 可能な値は、<code>info</code>, <code>warn</code>, <code>error</code>, <code>log</code> and <code>qa</code>：

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_ELOG_CLASSES="log warn error"
}}

=== Configuring for file-based storage ===

Portageは、多くの方法でELOGイベントを処理することができます。

ディスクにELOGのイベントを保存するためには、<code>PORTAGE_ELOG_SYSTEM</code>変数の<code>save</code>モジュールを有効：

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_ELOG_SYSTEM="save"
}}

メッセージは、{{Path|/var/log/portage/elog}}または{{Path|${PORT_LOGDIR}/elog}}変数が設定されている場合に保存されます。

カテゴリ毎ELOGファイルを作成するには、Portageの<code>split-elog</code>機能を有効化。 これは、{{Path|/var/log/portage/elog}}位置のカテゴリベースのサブディレクトリを作成するために、Portageを強制します。

=== Configuring for e-mail ===

ログをメール送信するために、<code>mail</code>モジュール有効化。 メールオプションは、いくつかの追加の変数を設定することが必要です。 詳細については、{{Path|/usr/share/portage/config/make.conf.example}}をお読みください。

以下に、例のセット​​アップはうまくいけば一目瞭然である示されています：

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_ELOG_SYSTEM="mail"
# First the mail-to address, then the SMTP server
PORTAGE_ELOG_MAILURI="log-intake@example.com mail.example.com"
PORTAGE_ELOG_MAILFROM="portage@$(hostname).example.com"
PORTAGE_ELOG_MAILSUBJECT="${PACKAGE} is ${ACTION} on ${HOST}"
}}

=== 他のソフトウェア ===

以下は、ELOG関連のソフトウェアパッケージの一覧です。

* {{Package|app-portage/elogv}} - elogsの内容を解析するためにユーティリティをベースのCurses
* {{Package|app-portage/elogviewer}} - Pythonのベースのelogビューア
* {{Package|app-portage/portage-mod_jabber}} -モジュールのelogイベントのXMPP（Jabberの）プロトコルをサポートします

== ログを構築 ==

失敗や成功に関係なく、Portage elogサブシステムと、パッケージのビルドログはディスク上に保存されているか、リモート受信者に郵送します。 管理者が確認するためにこれは後のビルドまたはサポートチケットのビルドログを取得できます。

=== セットアップ ===

Portageのロギング、/etc/portage/make.confを編集して有効に設定するには、 <code>PORT_LOGDIR</code>ログファイルを保存する場所に。 デフォルトでは、Portageは{{Path|/var/log/portage}}を使用します。:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORT_LOGDIR="/var/log/portage"
}}

次に、多くの<code>FEATURES</code>設定は、Portageがログを構築するどのように処理するかに影響します。

* With <code>binpkg-logs</code> set, even binary package deployments will have their logs saved
* When <code>clean-logs</code> is set, regular log file clean operations are executed. The command that is executed is defined by <code>PORT_LOGDIR_CLEAN</code> and defaults to a retention of the files of 7 days.
* With <code>split-log</code> set, build logs are stored in category-named subdirectories of <code>${PORT_LOGDIR}/build</code>

=== Cleaning up ===

When <code>clean-logs</code> is set, Portage will execute the command defined by <code>PORT_LOGDIR_CLEAN</code> after every build or unmerge operation. By default, the following command is used:

{{FileBox|filename=/usr/share/portage/config/make.globals|lang=bash|1=
PORT_LOGDIR_CLEAN="find \"\${PORT_LOGDIR}\" -type f ! -name \"summary.log*\" -mtime +7 -delete"
}}

When defining a custom command, do not forget to ''escape'' the <code>${PORT_LOGDIR}</code> variable (or immediately hardcode the right location).

== External resources ==

* [http://blog.siphos.be/2013/09/underestimated-or-underused-portage-elogging/ Underestimated or underused: Portage (e)logging] on ([[User:SwifT|Sven Vermeulen]]'s blog)

[[Category:Portage]]
