<languages />

{{Metadata|abstract=这篇文章描述了升级到新内核步骤。}}

这篇文章描述了升级到新内核步骤。

== 安装 ==

当系统更新后安装了新的内核源代码，或者你自己安装了新的内核源代码，升级内核是必要的。

== 配置 ==

The configuration parallels that of the [[Kernel/Configuration|manual configuration]], since only the config file is reused. All steps are mentioned here again for the sake of completeness, for a more verbose explanation see the other article.

=== 设置符号链接 ===

符号链接 {{Path|/usr/src/linux}} 应该总是指向正在运行的内核的源代码。有三种方法实现这一点：

; 1. 使用''symlink'' [[USE flag]]安装内核
: 这将会把{{Path|/usr/src/linux}}链接到你新安装的内核源码。如果有必要，还可以通过下面的两种方法进行修改：

; 2. 使用'''eselect'''设置符号链接:

: {{RootCmd| eselect kernel list |
  |output=Available kernel symlink targets:<br /> &nbsp; [1] linux-3.3.8-gentoo *<br /> &nbsp; [2]   linux-3.4.9-gentoo}}

: 这将输出可用的内核。星号表示当前选中的内核。要更换内核，例如到第二个内核，运行下面的命令：

: {{RootCmd|eselect kernel set 2}}

; 3. 手动设置符号链接：

: {{RootCmd|ln -sf /usr/src/linux-3.4.9 /usr/src/linux |
  |ls -l /usr/src/linux |
  |output=lrwxrwxrwx 1 root root 11 Aug 29 22:10 /usr/src/linux -> /usr/src/linux-3.4.9-gentoo}}

=== 净化内核 ===

If you are experiencing build problems while rebuilding the current kernel, it might help to sanitize the kernel sources. Make sure you backup the {{Path|.config}} file first, as the operation will remove it. Make sure not to use a <code>.bak</code> or <code>~</code> suffix as backup as <code>make distclean</code> will clean those up as well.

{{RootCmd|cp .config /usr/src/kernel_config_bk
|make distclean
|mv /usr/src/kernel_config_bk .config}}

=== Copy previous kernel configuration ===
The configuration from currently running kernel needs to be copied to the new one. It can be found in several places:

* In the [[procfs]] filesystem, if the kernel option ''Enable access to .config through /proc/config.gz'' was activated in your present kernel:

: {{RootCmd|zcat /proc/config.gz > /usr/src/linux/.config}}

* In the {{Path|/boot}} directory, if you installed the config file there:

: {{RootCmd|cp /boot/config-3.3.8-gentoo /usr/src/linux/.config}}

* In the kernel directory of the currently-running kernel:

: {{RootCmd|cp /usr/src/linux-3.3.8-gentoo/.config /usr/src/linux/}}

=== make oldconfig ===
Now update the previous config file for your new kernel:

{{RootCmd|cd /usr/src/linux
|make oldconfig}}

The following configuration parallels that of the text based configuration with '''make config'''. For every difference between the kernel versions, it asks if you want to activate the driver or feature. An example:

{{RootCmd|make oldconfig
|output=Anticipatory I/O scheduler (IOSCHED_AS) [Y/n/m/?] (NEW)
}}

The string ''(NEW)'' at the end of the line marks this option as new. Left to the string in square brackets are the possible answers: ''Y''es, ''n''o, ''m''odule or ''?'' to show the help. The recommend answer is capitalized (here ''Y''). The help explains the option or driver.

Unfortunately '''make oldconfig''' doesn't show - next to the help - a lot more information for each option, like the context, so that it is sometimes difficult to give the right answer. In this case the best way to go is to remember the option name and revise it afterwards through one of the [[Kernel/Configuration#Configuration tools|graphical kernel configuration tools]].

== Reinstall external kernel modules ==

Any external kernel modules, such as [[:Category:Binary kernel modules|binary kernel modules]], need to be rebuilt for each new kernel. If the kernel hasn't been built yet, it has to first be prepared for the building of the external kernel modules:

{{RootCmd|make modules_prepare}}

You can rebuild the packages using the ''@module-rebuild'' set:

{{Emerge|@module-rebuild}}

== Build ==

For this step, follow the steps in the [[Kernel/Configuration#Build|manual configuration]] article.

== Removing old kernels ==

See the [[Kernel/Removal|kernel removal]] article. 

== External resources ==

* [http://kernelnewbies.org/LinuxChanges kernel changelog with some explanations of new features]

[[Category:Kernel]]
