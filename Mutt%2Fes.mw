<languages />


{{Metadata|abstract=Esta guía muestra cómo comenzar a utilizar el potente cliente de correo de línea de órdenes mutt.}}

Esta guía muestra cómo comenzar a utilizar el potente cliente de correo de línea de órdenes mutt.

== Introducción ==

Si no es un fan de los clientes de correo con fabulosas interfaces gráficas de usuario o simplemente quiere leer rápidamente su buzón de correo a través de una conexión SSH, los clientes de correo basados en consola podrían ser de su interés. 

Mutt es uno de los clientes de correo basados en consola que actualmente está en desarrollo activo y tiene una gran cantidad de mantenedores activos (y también de usuarios). Es potente, muy configurable, ligero y eficiente. 

Aunque Mutt se diseñó originalmente para leer el correo del buzón local en formato mbox (es decir {{Path|/var/spool/mail/}}), actualmente ofrece soporte completo para carpetas alamacenadas en formato Maildir, recuperación remota de mensajes desde un servidor POP3 y gestión completa de cuentas IMAP. Para una descripción completa de lo que puede hacer Mutt, por favor, lea el manual de Mutt y el sitio web de Mutt en http://www.mutt.org/. 

== Instalación ==

Se puede comenzar la aventura con Mutt simplemente haciendo emerge. Desgraciadamente Mutt tiene muchas opciones las cuales activan o desactivan muchas funcionalidades de este cliente de correo. Echaremos un vistazo a los ajustes USE más importantes que se suelen tener en un uso normal de Mutt. Por favor, observe que la mayoría de ellos no harán ningún daño a su Mutt pero puede que hagan muchas más cosas que las que un usuario experimentado de Mutt suele hacer. 

{{Emerge|params+=--verbose|mail-client/mutt}}

En primer lugar, para los novatos, el ajuste USE <code>imap</code> es probablemente el más importante. Habilitarlo no romperá nada de modo que si no se está seguro de qué tipo de cuenta se va a utilizar con Mutt, simplemente habilítelo. La mayoría de los proveedores de correo electrónico incluso los gratuitos como GMail utilizan IMAP actualmente ya que es la forma más conveniente de almacenar el correo electrónico que se accede desde múltiples clientes al mismo tiempo o desde diferentes localizaciones. Debido a que IMAP mantiene todos los mensajes en el servidor, Mutt únicamente descarga los mensajes que se quieren visualizar 

A menudo se necesita saltar entre mensajes más de una vez lo que implicaría descargar el mismo mensaje una y otra vez. Ya que esto es sencillamente un desperdicio de recursos, Mutt utilizar lo que llamamos una caché de cabeceras (hcache) para mantener en ella las partes más importantes que se necesitan de los mensajes. Esta hcache está respaldada por una biblioteca de base de datos de la cual existen cuatro sabores: <code>gdbm</code>, <code>berkdb</code>, <code>qdbm</code> y<code>tokyocabinet</code>. Si no se tiene ninguna preferencia, se puede elegir gdbm o berkdb. Lo más seguro es que ambas ya estén instaladas en el sistema. Si se habilita más de un ajuste USE para la base de datos de la hcache dejaremos que sea Mutt el que elija la que más le guste. Siempre se utiliza como una de ellas como mucho. 

Si bien IMAP es importante para leer los mensajes de correo electrónico, el envío de los mismos requiere un servidor de correo. Mutt puede hablar con un servidor de correo electrónico que se encuentre en el sistema local, sin embargo, en la mayoría de las ocasiones éste no es el caso o simplemente no es una buena opción, por ejemplo, los usuarios de ordenadores portátiles que viajan a menudo. Mutt incorpora soporte SMTP que se activa con el ajuste USE <code>smtp</code>. Habilitarlo sin estar seguro no conlleva ningún riesgo. El soporte SMTP de Mutt nos permite enviar mensajes al servidor de correo electrónico de nuestra elección, normalmente el que nos ha proporcionado nuestro proveedor de servicios de correo electrónico. 

Normalmente hoy en día tanto IMAP como SMTP se montan sobre canales cifrados, de ahí que si se ha habilitando alguno de ellos es prudente también habilitar alguno de los ajustes USE <code>ssl</code> o <code>gnutls</code>. Ambos añaden las variantes seguras (imaps y smtps) a la lista de protocolos soportados por Mutt utilizando una implementación bien de OpenSSL o de GNUTLS. Si no se tiene una especial preferencia por alguno de ellos, habilite <code>ssl</code>. Probablemente esto ya esté definido en sus ajutes USE globales. Si se va a autenticar a si mismo cuando envíe un mensaje de correo electrónico, asegúrese también de incluir <code>sasl</code> en sus ajustes USE ya que es un prerequisito para ello. 

Por último pero no menos importante, existe un ajuste USE llamado <code>sidebar</code>. Habilita una extensión de Mutt que puede mostrar un panel de navegación en la parte izquierda de la pantalla conteniendo los buzones de correo disponibles . Aunque no es una característica recomendada para los principiantes (de hecho no se menciona en ninguna documentación oficial ya que, simplemente no es oficial), los usuarios con más experiencia puede que quieran disfrutar de esta funcionalidad. Afortunadamente, no basta con habilitar el ajuste USE mencionado para poder verlo, lo que indica que normalmente no se tiene constancia de que está habilitado. 

== Configuración ==

Una vez se ha hecho emerge de mutt con los ajustes USE elegidos, el único paso necesario es crear un fichero {{Path|.muttrc}} en el directorio de inicio. Se pueden encontrar muchos ficheros muttrc en la Web y en la documentación de Mutt. En {{Path|/usr/share/doc/mutt-<version>/samples}} se pueden encontrar algunos ejemplos que contiene la distribución oficial. Aquí se va a mostrar un fichero {{Path|.muttrc}} mínimo para una cuenta basada en IMAP con envío de correo SMTP. 

{{FileBox|filename=~/.muttrc|title=Un ejemplo de fichero .muttrc|1=
# Conjunto de caracteres que utilizamos para los envíos
set send_charset="utf-8"
# Si no hay conjuntos de caracteres en los mensajes de entrada, se trata probablemente de Windows
set assumed_charset="iso-8859-1"
  
# Asegurarse de que Vim sabe que mutt es un cliente de correo electrónico y que componemos los mensajes con UTF-8
set editor="vim -c 'set syntax=mail ft=mail enc=utf-8'"
  
# Simplemente desplazar una línea en lugar de una página completa
set menu_scroll=yes
  
# Queremos ver algunos tipos MIME en línea. Mirar debajo de este fichero para una explicación
auto_view application/msword
auto_view application/pdf
  
# Hacer que los patrones de búsqueda mirenn en To, Cc y Subject
set simple_search="~f %s {{!}} ~C %s {{!}} ~s %s"
  
# Preferencias de la visión por hilos. Ordenar por hilos
set sort=threads
set strict_threads=yes
  
# Mostrar la puntuación de spam (únicamente para los mensajes marcados por SpamAssassin) cuando se lea un mensaje
spam "X-Spam-Score: ([0-9\\.]+).*" "SA: %1"
set pager_format = " %C - %[%H:%M] %.20v, %s%* %?H? [%H] ?"
  
# No mostrar todas las cabeceras, solo algunas
ignore          *
unignore        From To Cc Bcc Date Subject
# Y en este orden
unhdr_order     *
hdr_order       From: To: Cc: Bcc: Date: Subject:
  
# Iluminar la información con colores, para más ejemplos de coloreados consultar:
# http://aperiodic.net/phil/configs/mutt/colors
color normal      white          black
color hdrdefault  green          default
color quoted      green          default
color quoted1     yellow         default
color quoted2     red            default
color signature   cyan           default
color indicator   brightyellow   red
color error       brightred      default
color status      brightwhite    blue
color tree        brightmagenta  black
color tilde       blue           default
color attachment  brightyellow   default
color markers     brightred      default
color message     white          black
color search      brightwhite    magenta
color bold        brightyellow   default
# Si no nos gusta la barra negra de progreso en el pie de la pantalla,
# comentar la siguiente línea
color progress    white          black
  
# Ajustes de la identidad
set realname = "Andrew Dalziel"
set from = "andy@mail.server"
alternates "andrew@mail.server{{!}}andrew.dalziel@mail.server"
# Este fichero debe existir y contiene la firma, comentar si
# no se quiere incluir firma
set signature = ~/.signature
  
# Alias (parecido a una libreta de direcciones)
source ~/.aliases
  
# Ajustes de conexión IMAP
set mail_check=60
set imap_keepalive=300
  
# Ajustes de cuenta IMAP
set folder=imaps://andy@imap.mail.server/
set spoolfile=imaps://andy@imap.mail.server/
set record=imaps://andy@imap.mail.server/Sent
set postponed=imaps://andy@imap.mail.server/Drafts
  
# Utilizar headercache para IMAP (¡Asegurarse de que es un directorio para mejorar el rendimiento!)
set header_cache=/var/tmp/.mutt
  
# Buzones que queremos monitorizar en busca de nuevos mensajes
mailboxes "="
mailboxes "=Lists"
  
# Listas de correo electrónico en las que estamos (¡Son expresiones regulares!)
subscribe "gentoo-.*@gentoo\\.org"
  
# Configuración del correo SMTP (para el envío de mensajes)
set smtp_url=smtp://mail.server/
}}

{{Note|Es una buena práctica revisar todos los ajustes del ejemplo de arriba. Existen muchos más y puede que algunas preferencias no concuerden con la suyas. Recuerde esto cuando sienta que Mutt no funciona como quisiera al modificar alguna de estos ajustes.}}

El ejemplo {{Path|.muttrc}} de arriba pone en marcha una cuenta IMAP, utiliza un servidor para enviar el correo, almacena su caché en {{Path|/var/tmp/.mutt}}, lee los alias de direcciones conocidos (considérelo como una libreta de direcciones) desde {{Path|~/.aliases}} y añade la firma presente en {{Path|~/.signature}} cuando se compone un nuevo mensaje de correo electrónico. Puede ser necesario en algún servidor IMAP cambiar los directorios spool, record y postponed, ya que las carpetas {{Path|Sent}} y {{Path|Drafts}} pueden estar dentro de una carpeta llamada {{Path|INBOX}}. Intentar esto con Mutt es la forma más sencilla de averiguarlo. 

Una vez se ha configurado {{Path|.muttrc}} se puede lanzar Mutt simplemente corriendo {{c|mutt}}. Si se especificó la url de un servidor IMAP adecuado, Mutt solicitará la contraseña y a continuación cargará todos los mensajes. Se debe tener en cuenta que la primera vez que se entre en el buźon puede llevar un tiempo ya que seguramente habrá algunos mensajes y la caché de cabeceras de Mutt todavía está vacía. Si todo va bien, se encontrará con su buzón IMAP y estará preparado para continuar. 

Navigation is intuitive, as is reading messages by just pressing the enter key or space bar. Mutt is quite Vim alike in that it uses key strokes to perform most of its actions. You best read Mutt's manual on the web to get yourself known with all existing functions (or press {{Key|?}} in Mutt) and what key they are bound to, or better, what key you like it to be bound to. Some essential keys are {{Key|m}} (for message) to start composing a new message, {{Key|q}} for quit, {{Key|r}} for reply, {{Key|s}} for save and {{Key|p}} for print. 

One of the features that Mutt has that is still not in today's most savvy email clients is the ability to display attachments inline through some viewer. The auto_view directive in the {{Path|.muttrc}} file tells Mutt which attachments (based on their MIME-type) it should view inline. To figure out how to do that, Mutt uses mailcap files to lookup how to display a certain MIME-type. Usually the system wide mailcap file isn't sufficient here, so you better start a {{Path|~/.mailcap}} file to put items in there for <code>copiousoutput</code> that Mutt can display inline. 

In the example {{Path|.muttrc}} above <code>auto_view</code> is enabled for <code>application/msword</code> and <code>application/pdf</code> files. These two show the extreme usefulness of this capability, because it means meeting notes sent as doc file now are perfectly fine readable without having to save the attachment and open it in LibreOffice. Instead the text just shows up in the message reader, that is, if you have a matching entry in your {{Path|~/.mailcap}} file.

{{FileBox|filename=~/.mailcap|title=Fichero ejemplo .mailcap file|1=
application/msword; antiword '%s'; copiousoutput; description=Word Document;
nametemplate=%s.doc
application/pdf; pdftotext '%s' -; copiousoutput; description=PDF Document;
nametemplate=%s.pdf
}}

The above {{Path|.mailcap}} example tells mutt what to do to "view" <code>msword</code> and <code>pdf</code> files. For the former it should run a program called {{c|antiword}} (emerge <code>app-text/antiword</code> ), for the latter the program {{c|pdftotext}} ({{c|emerge app-text/poppler}}). You can go wild with these to for example display rendered HTML (give {{Package|app-text/vilistextum}} a try), render vcards, or show ASCII representation of attached images. All you need to do is define how to call the program in your {{Path|.mailcap}}, and tell Mutt to try to view it inline using the <code>auto_view</code> directive. 

== Conclusiones ==

Mutt is a very versatile console email client. If you like the concept, Mutt can be altered to behave in nearly any way through its configuration. Search the web to find others explaining how they did "it", or find one of the many patches that exist to make Mutt do even more. Gentoo applies a couple of very popular patches to Mutt, so make sure to check {{c|mutt -v}} if you want something more to make sure it is not yet already at your disposal. While learning Mutt is not necessarily easy, once it is in your fingers, it can make your mail experience much faster and efficient than with other clients. Searching for example is quite powerful if you know how to hit the right flags and know which regular expression narrows your search down. Enjoy Mutting! 


[[Category:Server and Security]] {{Migrated|originalauthors=Fabian Groffen}}
