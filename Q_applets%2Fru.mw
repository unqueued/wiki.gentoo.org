{{Lowercase title}}

<languages />


{{Metadata|abstract=q-апплеты — это набор небольших и быстрых вспомогательных утилит системы Portage, написанных на C. В этом руководстве охватываются некоторые общие применения этих вспомогательных утилит, также известных как пакет app-portage/portage-utils.}}

q-апплеты — это набор небольших и быстрых вспомогательных утилит системы Portage, написанных на C. В этом руководстве охватываются некоторые общие применения этих вспомогательных утилит, также известных как пакет app-portage/portage-utils.

== Краткая справка ==

Пакеты устанавливаются как обычно:

{{Emerge|app-portage/portage-utils}}

Для просмотра доступных апплетов с кратким описанием их назначения, наберите:

{{Cmd|q --help|output=<pre>
Использование: q <applet> <args>  : вызвать апплет утилит портежа
  
Определенные в настоящее время апплеты:
        q <applet> <args> : виртуальный апплет
    qatom <pkg>           : разбить строки атома
   qcache <action> <args> : поиск кэша метаданных
   qcheck <pkgname>       : проверить целостность установленных пакетов
 qdepends <pkgname>       : показать информацию о зависимостях
    qfile <filename>      : перечислить все файлы, которым принадлежит пакет
    qglsa <action> <list> : выполнить проверку GLSA
    qgrep <misc args>     : поиск в ebuild-файлах
    qlist <pkgname>       : перечислить файлы, принадлежащие пакету
     qlop <pkgname>       : анализатор логов команды emerge
   qmerge <pkgnames>      : загрузить и установить двоичные пакеты
     qpkg <misc args>     : управление двоичными пакетами Gentoo
  qsearch <regex>         : искать имя пакета или его описание
    qsize <pkgname>       : вычислить использование объема диска
    qtbz2 <misc args>     : управление пакетами tbz2
     quse <useflag>       : найти пакеты, использующие данные USE-флаги
    qxpak <misc args>     : управление xpak-архивами
  
Options: -[irmM:vqChV]
  -i, --install        * Установить символьные ссылки для апплетов
  -r, --reinitialize   * Повторно инициализировать кэш ebuild-файла
  -m, --metacache      * Повторно инициализировать кэш метаданных
  -M, --modpath  <arg> * Путь к модулю
  -v, --verbose        * Включить многословный режим работы
  -q, --quiet          * Менее полные сообщения; отключить предупреждения
  -C, --nocolor        * Отменить цветной вывод текста
  -h, --help           * Вывести это сообщение и выйти
  -V, --version        * Вывести номер версии и выйти</pre>
}} 

Сначала может потребоваться инициализация кэша под учетной записью root:

{{RootCmd|q -r}}

== Введение ==

<code>portage-utils</code> - это набор весьма быстрых утилит, написанных на C и предлагающих более быструю, но ограниченную по функциям альтернативу их аналогам из пакета <code>gentoolkit</code> . Необходимо учесть, что пакет <code>portage-utils</code> не предназначен для того, чтобы заменить собой <code>gentoolkit</code> . Утилиты, входящие в его набор, намного более эффективны, чем их эквиваленты из <code>gentoolkit</code> и лучше подходят для использования в сценариях, в которых часто вызывается пакетный менеджер Portage, но пакет <code>portage-utils</code> не предлагает той же функциональности. В нем вовсе не рассматриваются eclasses и не предусматриваются инструменты наподобие <code>revdep-rebuild</code> и <code>glsa-check</code>. 

Более подробная информация о <code>gentoolkit</code> может быть найдена в руководстве [[Gentoolkit]] . 

Полный список приложений пакета <code>portage-utils</code> просматривается вводом команды <code>man q</code> или <code>q --help</code>. Обратитесь к man-странице по каждой описываемой утилите, так как это руководство является только краткой справкой для наиболее полезных функций и не включает полную информацию по каждому приложению. 

== Использование ==

=== Поиск пакета, к которому принадлежит какой-либо файл ===

Поиск пакета, к которому принадлежит какой-либо файл, осуществляется утилитой <code>qfile</code>: 

{{Cmd|qfile /etc/fonts/fonts.conf|output=<pre>
media-libs/fontconfig (/etc/fonts/fonts.conf)
</pre>}}

{{Cmd|qfile /usr/share/keymaps/atari/atari-uk-falcon.map.gz|output=<pre>
sys-apps/kbd (/usr/share/keymaps/atari/atari-uk-falcon.map.gz)
</pre>}}

=== Проверка целостности пакета ===

If you want to check MD5 sums or mtimes of the files installed by some package, you can do it using the <code>qcheck</code> application: 

{{Cmd|qcheck portage-utils|output=<pre>
Checking app-portage/portage-utils-0.1.13 ...
  * 36 out of 36 files are good
</pre>}}

Of course, all the files which were changed after installation will be reported here. If the application reports configuration files which you have manually edited after installation, there's nothing to worry about. 

=== Listing packages which depend on some package ===

Of course there's also an application which allows you to list all the packages which depend on some package. This is done using <code>qdepends</code>. Use the <code>-a</code> flag to show all the DEPEND, RDEPEND, and PDEPEND information for a package. 

{{Cmd|qdepends -a pygtk|output=<pre>
 * DEPEND
dev-python/pygtk-2.8.2: >=dev-lang/python-2.3 >=x11-libs/gtk+-2.8.0
>=dev-libs/glib-2.8.0 >=x11-libs/pango-1.10.0 >=dev-libs/atk-1.8.0
>=gnome-base/libglade-2.5.0 >=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl >=x11-libs/gtkglarea-1.99
>=dev-util/pkgconfig-0.9 sys-devel/patch
 * RDEPEND
dev-python/pygtk-2.8.2: >=dev-lang/python-2.3 >=x11-libs/gtk+-2.8.0
>=dev-libs/glib-2.8.0 >=x11-libs/pango-1.10.0 >=dev-libs/atk-1.8.0
>=gnome-base/libglade-2.5.0 >=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl >=x11-libs/gtkglarea-1.99
 * PDEPEND
</pre>}}

=== Listing files that belong to an ebuild ===

<code>qlist</code> gives you a list of all files that belong to an ebuild. 

{{Cmd|qlist vim|output=<pre>
/usr/bin/gvim
/usr/bin/gvimdiff
/usr/bin/evim
/usr/bin/eview
/usr/bin/gview
/usr/bin/rgvim
[...]
</pre>}}

=== Looking for packages that use some USE flag ===

This is done with <code>quse</code>, which must be run as root. It may take some time to first create/update the ebuild cache. 

{{Cmd|quse firefox|output=<pre>
app-misc/tracker/tracker-0.12.10-r1.ebuild applet doc eds elibc_glibc exif firefox-bookmarks flac flickr gif
[...]
</pre>}}

=== Finding package sizes ===

This is done with <code>qsize</code> application and is as simple as: 

{{Cmd|qsize vim|output=<pre>
app-editors/gvim-6.4: 10 files, 7 non-files, 2327.516 KB
app-editors/vim-6.4: 6 files, 2 non-files, 2058.14 KB
app-editors/vim-core-6.4: 1024 files, 68 non-files, 10950.984 KB
[...]
</pre>}}

=== Searching the Portage tree ===

One of the most powerful tools of <code>portage-utils</code> is <code>qsearch</code>. This tool allows you to search your Portage tree much faster than default <code>emerge -s</code>. 

Here are some examples of its usage: 

{{Cmd|qsearch terminus|output=<pre>
media-fonts/terminus-font A clean fixed font for the console and X11
</pre>}}

I want to thank the guy who made them. What's his homepage?:
{{Cmd|qsearch -H terminus|output=<pre>
media-fonts/terminus-font http://www.is-vn.bg/hamster/jimmy-en.html
</pre>}}

I need a jabber client and I need it now:

{{Cmd|qsearch -S "jabber client"|output=<pre>
app-emacs/emacs-jabber A Jabber client for Emacs.
net-im/gajim Jabber client written in PyGTK
net-im/gnome-jabber Gnome Jabber Client
net-im/gossip Lightweight Jabber client for GNOME
net-im/imcom Python commandline Jabber Client
net-im/psi QT 3.x Jabber Client, with Licq-like interface
net-im/tkabber Featureful Jabber client for tcl/tk.
x11-themes/psi-themes Iconsets for Psi, a QT 3.x Jabber Client
</pre>}}

=== Extracting information from emerge logs ===

There is also a tool that allows you to extract useful information from your {{Path|emerge.log}} file. It's called <code>qlop</code> and it can be useful when you want to estimate package compilation times or compare with your friends whose computer compiles faster. It also allows you to check what's compiling at the moment and how long it will take - which is handy when you're working in the console and don't have any other means to check it. 

I'm starting to emerge perl and I want an estimate on how long it usually takes:

{{Cmd|qlop -tH perl|output=<pre>
perl: 7 minutes, 52 seconds for 4 merges
</pre>}}

Now let's see what's emerging at the moment:

{{Cmd|qlop -c|output=<pre>
* perl-5.8.8-r23
    started: Mon May 21 12:41:11 2007
    elapsed: 19 seconds
</pre>}}

== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:


* Åukasz Damentko
* Joshua Saddler
* Marcelo Góes

[[Category:Portage tools]]
