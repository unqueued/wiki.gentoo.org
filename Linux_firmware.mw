{{Stub}}
{{InfoBox stack
|{{InfoBox homepage|https://git.kernel.org/?p{{=}}linux/kernel/git/firmware/linux-firmware.git|header=true}}
|{{InfoBox package|sys-kernel/linux-firmware}}
}}

The Linux firmware package [[Article description::contains [[wikipedia:binary blob|binary blobs]] of firmware necessary for partial or full functionality of certain hardware devices on Linux systems.]] These binary blobs are usually proprietary because certain hardware manufacturers do not release source code necessary to build the firmware itself.

Modern graphics cards from [[AMD]] and [[NVidia]] almost certainly require binary blobs to be loaded for the hardware to operate correctly.

Starting at Broxton (a Skylake-based micro-architecture) [[Intel CPU]]s require binary blobs for additional low-power idle states (DMC), graphics workload scheduling on the various graphics parallel engines (GuC), and offloading some media functions from the CPU to GPU (HuC).<ref>https://01.org/linuxgraphics/downloads/firmware</ref>

Additionally, [[iwlwifi|Intel modern Wi-Fi chipsets]] almost always require blobs.<ref>https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi</ref>

== Installation ==

For security reasons, hotloading firmware into a running kernel has been shunned upon. Modern init systems such as [[systemd]] have strongly discouraged loading firmware from userspace.

=== Kernel ===
<!-- 
Kernel configuration is not present in gentoo 4.19.0. -- [[User:Kreyren|Kreyren]] ([[User talk:Kreyren|talk]]) 14:42, 26 October 2018 (UTC) -->

A few kernel options are important to consider when building in firmware support for certain devices in the Linux kernel:

; <var>CONFIG_FW_LOADER</var>: This option is provided for the case where none of the in-tree modules
; <var>CONFIG_FIRMWARE_IN_KERNEL</var>: Enabling this option will build each required firmware blob specified by <var>EXTRA_FIRMWARE</var> into the kernel directly, where the <code>request_firmware()</code> function will find them without having to make a call out to userspace.
; <var>CONFIG_EXTRA_FIRMWARE</var>: This option is a string and takes the (space-separated) names of firmware files to be built into the Kernel. These files will then be accessible to the kernel at runtime.

{{Warning|Including firmware files into binary kernel images that are not available under the terms of the GPL, may result in a violation of the GPL if the image is distributed. It is wise to consult a lawyer ''before'' distributing images that contain firmware files from {{Package|sys-kernel/linux-firmware}}.}}

{{KernelBox|title=Enable support for Linux firmware|1=
Device Drivers  --->
  Generic Driver Options  --->
    -*- Userspace firmware loading support
    [*]   Include in-kernel firmware blobs in kernel binary
    (/lib/firmware) Firmware blobs root directory
}}

=== USE flags ===

{{USEflag|package=sys-kernel/linux-firmware}}

=== Emerge ===

{{Emerge|sys-kernel/linux-firmware}}

=== Savedconfig ===

After emerging {{Package|sys-kernel/linux-firmware}}, the configuration file is made into {{Path|/etc/portage/savedconfig/sys-kernel/linux-firmware-ddmmyyyy}}. You can edit and comment out the line which you don't want to install. Edit and save the file and re-emerge {{Package|sys-kernel/linux-firmware}} with the <code>savedconfig</code> USE flag:
{{Emerge|USE{{=}}'savedconfig' sys-kernel/linux-firmware}}

== Troubleshooting ==

=== Searching for loaded firmware ===

dmesg can be grepped to determine what firmware has been loaded:

{{Cmd|dmesg {{!}} grep -i firmware}}

== Removal ==

=== Unmerge ===

{{Unmerge|sys-kernel/linux-firmware}}

== See also ==

* {{See also|Kernel}}
* {{See also|Iwlwifi}}
* {{See also|Microcode}}
* {{See also|AMDGPU}}
* {{See also|Intel}}

== References ==

<references />

[[Category:Firmware]]
