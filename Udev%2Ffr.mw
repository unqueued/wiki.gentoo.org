<languages />
{{Metadata|abstract=udev est le gestionnaire de périphériques pour le noyau Linux. Il administre les nœuds de périphériques dans /dev et prend en charge toutes les actions de l'espace utilisateur lors de l'ajout ou de la suppression de périphériques. }}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://www.freedesktop.org/wiki/Software/systemd/|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox gitweb|http://cgit.freedesktop.org/systemd/systemd/tree/src/udev|raw=true}}
|{{InfoBox project|Udev}}
}}

'''udev''' est le gestionnaire de périphériques pour le noyau de Linux. Il gère les nœuds de périphériques dans {{Path|/dev}} et prend en charge toutes les actions dans l'espace utilisateur lors de l'ajout ou de la suppression de périphériques. Les lecteurs de cet article devraient également lire [[Project:Eudev|eudev]], une dérivation de udev.

== Qu'est-ce que udev? ==

=== Le répertoire /dev  ===

Lorsque les utilisateurs de Linux parlent du matériel sur leur système à des gens qui pensent que Linux est une sorte de virus ou de marque de café, l'utilisation de "slash dev slash foo"  provoquera à coup sûr une sorte d'étonnement. Mais, pour l'utilisateur averti utiliser  {{Path|/dev/sda1}} est une façon rapide de référencer la première partition du premier disque maître SATA. Facile, non ? 

La plupart des utilisateurs de Linux savent ce qu'est un fichier de périphérique. Certains savent même pourquoi les fichiers de périphérique possèdent des numéros spéciaux quand ils les regardent de près après avoir exécuté la commande <code>ls -l</code> dans le dossier {{Path|/dev}}. Ce que les utilisateurs prennent pour acquis, c'est que le premier disque SATA est référencé comme {{Path|/dev/sda}}. Quelques utilisateurs peuvent le voir autrement, mais cela est un défaut de conception. 

Pensez à des périphériques connectables à chaud, comme les périphériques USB et IEE1394, ou les périphériques PCI commutables à chaud, etc. Quel est le premier périphérique ? Et pour combien de temps ? Comment les autres périphériques seront-ils nommés quand le premier disparaîtra ? Comment cela affectera les opérations en cours ? Cela sera-t-il amusant si une tâche d'impression est tout à coup déplacée d'une toute nouvelle imprimante laser vers une quasi-moribonde imprimante à matrice parce que quelqu’un aura tiré sur le cordon d'alimentation de l'imprimante laser qui était justement la première imprimante ? 

Apparaît {{c|udev}}. Le but du projet udev est à la fois intéressant et nécessaire. Udev :

* Fonctionne dans l'espace utilisateur;
* Crée et enlève des fichiers de périphérique de manière dynamique;
* Assure un nommage cohérent;
* Fournit une API dans l'espace utilisateur

À chaque fois qu'une modification de la structure des périphériques se produit, le noyau génère un événement  ''uevent'' qui est intercepté par {{c|udev}}. {{c|udev}} suit alors les règles déclarées dans les répertoires  {{Path|/etc/udev/rules.d}}, {{Path|/run/udev/rules.d}} et {{Path|/lib/udev/rules.d}}. En se basant sur l'information contenue dans l'événement, il trouve la règle ou les règles dont il a besoin pour déclencher et accomplir les actions requises. Ces actions peuvent être de créer ou de supprimer des fichiers de périphérique, mais elles peuvent aussi déclencher le chargement de micrologiciels particuliers dans la mémoire du noyau.

== Installation ==

{{Note| Avant faire une mise à jour, consulter le [[/upgrade|guide de mise à jour de udev]] pour plus d'information afin d'éviter de se retrouver avec un système qui ne démarre plus.}}

=== Noyau ===

{{c|udev}} nécessite les options suivantes dans le noyau :

<!-- See http://git.kernel.org/?p=linux/hotplug/udev.git;a=blob_plain;f=README -->
{{KernelBox|1=
General setup  --->
    [*] Configure standard kernel features (expert users)  --->
        [ ] Enable deprecated sysfs features to support old userspace tools
        [*] Enable signalfd() system call
Enable the block layer  --->
    [*] Block layer SG support v4
Networking support  --->
    Networking options  --->
        <*> Unix domain sockets
Device Drivers  --->
    Generic Driver Options  --->
        ()  path to uevent helper
        [*] Maintain a devtmpfs filesystem to mount at /dev
    < > ATA/ATAPI/MFM/RLL support (DEPRECATED)  --->
File systems  --->
    [*] Inotify support for userspace
    Pseudo filesystems --->
        [*] /proc file system support
        [*] sysfs file system support
}}

=== Options de la variable USE ===

Portage connaît l'option globale de la variable USE <code>udev</code> pour activer la prise en charge de udev dans les autres paquets. Activer cette option de la variable USE (par défaut dans tous les [[Profile (Portage)|profiles]] Linux) provoquera l'installation du paquet {{Package|sys-fs/udev}} automatiquement.

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
USE="udev"
}}

{{USEflag|package=sys-fs/udev}}

=== Emerge ===

Après avoir défini les options de la variable USE, mettre à jour le système  pour que les changements prennent effet :

{{Emerge|params+=--changed-use --deep|@world}}

== Configuration ==

=== Service ===

Pour démarrer udev au démarrage de la machine, l'ajouter au niveau d'exécution sysinit. Pour cela, exécuter la commande suivant en tant que root :

{{RootCmd|rc-update add udev sysinit}}

== Configuration avancée ==

=== Règles ===

udev fournit un jeu de règles qui correspondent aux valeurs exportées des uevents (événements provoqués par le noyau) et aux propriétés du périphérique découvert. Possiblement, une règle ayant une correspondance nommera et créera un nœud de périphérique et exécutera des programmes configurés pour installer et configurer le périphérique.

Les définitions des règles sont stockées à deux emplacements :

# '''{{Path|/lib/udev/rules.d/}}''' - Les règles dans ce répertoire sont installées par certains paquets, elles ne doivent en général pas être modifiées par les utilisateurs;
# '''{{Path|/etc/udev/rules.d/}}''' - Ce répertoire est pour les règles définies par les utilisateurs. Chaque nouvelle règle doit être ajoutée dans ce répertoire;;

In these directories, multiple rule files (with suffix {{Path|.rules}}) are traversed in alphanumerical order. Inside the rules files, udev will find expressions that might match a uevent together with the state to match (is the uevent because a device is added or removed) and the command to execute.

The event matching is based on information such as:

* The ''SUBSYSTEM'' of the uevent (for which type of device is the uevent fired);
* The ''ACTION'' that is taken (add, change, or remove);
* One or more attributes (through ''ATTR'' or ''ATTRS''), such as the device class, vendor or other device information;
* The kernel-provided name (through ''KERNEL''), such as sd* (for SCSI/SATA disks) or input* (for input devices such as mice and keyboards);
* One or more environment settings (through ''ENV''), used to send information between multiple rules.

Based on this information, the rule can then state if:

# Some information needs to be shared with later events (through environment variables)
# Links need to be created in {{Path|/dev}}
# Commands need to be executed

Udev does this for every rule that matches (it does not stop after the first match) to allow a flexible device management approach.

=== Noms de périphérique persistants ===

The kernel detects devices asynchronously, udev mirrors the kernel's [[sysfs]] filesystem and so the devices are named and numbered in order of detection. So by default udev provides no persistent device names. However there are mechanisms for some device classes to provide these:

* Udev creates for storage devices additional symlinks based on the device's ID, [[Removable_media#UUIDs_and_labels|label, UUID]] and path. See the {{Path|/dev/disk/by-*}} directory. So instead of using e.g. the device file {{Path|/dev/sda}} use the file {{Path|/dev/disk/by-label/SOME_LABEL}}.

* C'est la même chose pour les périphériques d'entrée dans le répertoire {{Path|/dev/input}}.

* Using custom rules enables users to create their own device files.

== Utilisation ==

Quelques  commandes utiles :

* Affiche tous les messages concernant un fichier de périphérique donné :
: {{RootCmd|udevadm info --query{{=}}all --name{{=}}/dev/DEVICE_FILE}}

* Surveille les activités de udev :
: {{RootCmd|udevadm monitor}}

* Assign a persistent name to an ethernet device:
: {{FileBox|filename=/etc/udev/rules.d/ethernet.rules|lang=bash|1=
SUBSYSTEM=="net", ACTION=="add", ATTR{address}=="01:23:45:67:89:ab", NAME="eth6789ab"
}}

Reportez-vous à la [[man page|page de manuel]] de ''udevadm'' pour plus d'information.

== Dépannage ==

* {{Bug|udev|search=package}}

=== Journaliser les  messages de surveillance ===

To log all message when {{c|udevadm monitor}} is ran, modify the following configuration file:

{{FileBox|filename=/etc/conf.d/udev|lang=bash|1=
udev_monitor="YES"
}}

It will create the new log file located at {{Path|/run/udev/udevmonitor.log}}

=== Mode de déverminage ===

Enabling debug mode will output more log messages:

{{FileBox|filename=/etc/conf.d/udev|lang=bash|1=
udev_debug="YES"
}}

Set the logging priority:

{{FileBox|filename=/etc/udev/udev.conf|lang=bash|1=
udev_log="debug"
}}

The log file {{Path|/run/udevdebug.log}} will be created but no messages will be logged to it. The most recent versions of udev will log all messages to {{c|dmesg}}.

=== Fichiers de périphériques manquants {{Path|/dev/null}} et {{Path|/dev/console}} ===

Some udev versions need the {{Path|/dev/null}} and {{Path|/dev/console}} files in order to work properly, but can not create them on their own. To manually create these files for udev run the following commands with root privileges:

{{RootCmd
|mkdir test
|mount --bind / test
|cd test/dev
|mknod -m 660 console c 5 1
|mknod -m 660 null c 1 3
|cd ../..
|umount test
|rmdir test
}}

=== NIC (Carte interface réseau) désignée comme eth0, mais  a été déplacée en  eth1 ===

Those having dual network cards on their motherboards may run into a situation where {{c|ifconfig}} may show no eth0 or eth1. {{c|dmesg}} may show their NIC detected as eth0, and later moved to eth1. Performing a {{c|ifconfig -a}} will also show the NIC as eth1. This is caused by using the kernel assigned names in the first place. Users should write custom rules like {{Path|/etc/udev/rules.d/70-my-network.rules}} to use free names like lan0 or wireless0 or use predictable interface names (which have been enabled by default since udev version 197).

Pensez aussi à retirer les anciens fichiers des versions antérieures de udev :

{{RootCmd|rm /etc/udev/rules.d/70-persistent-net.rules}}

== See also ==

[[Eudev|eudev]] - A Gentoo maintained fork of udev.

== External resources ==

{{Bug|575718|text=Bug 575718 - Request for council decision regarding virtual/udev default provider}} - Default virtual/udev provider changed to sys-fs/eudev


[[Category:Core system]]
[[Category:Daemons]]
