{{InfoBox stack
|{{InfoBox homepage|http://www.amd.com/en/ryzen|header=true}}
|{{InfoBox wikipedia|Ryzen}}
}}

Ryzen is [[Article description::a multithreaded, high performance processor released by AMD in Q1, 2017. It is the first CPU released based on the [[wikipedia:Zen_(microarchitecture)|Zen microarchitecture]].]] Its goal is to directly compete with Intel's Broadwell-E processor line, primarily the Core i7-6900K.

== Hardware ==

=== Ryzen 7 ===

{| class="table table-condensed table-striped" style="width: auto;"
! scope="col" width="15%" | Device
! scope="col" width="15%" | Make/model
! scope="col" width="10%" | Status
! scope="col" width="10%" | Bus ID
! scope="col" width="10%" | Kernel driver(s)
! scope="col" width="5%" | Kernel version
! scope="col" width="5%" | Latest microcode
! scope="col" width="30%" | Notes
|-
| AMD Ryzen 7 1800X
| AMD
| {{Yes|Works}}
| <code>N/A</code>
| N/A
| 4.4.10+
| <code>0x08001129</code>
| AGESA 1071
|-
| AMD Ryzen 7 1700X
| AMD
| {{Yes|Works}}
| <code>N/A</code>
| N/A
| 4.4.10+
| <code>0x08001129</code>
| ?
|-
| AMD Ryzen 7 1700
| AMD
| {{Yes|Works}}
| <code>N/A</code>
| N/A
| 4.4.10+
| <code>0x800111c</code>
| ?
|-
|}

=== Ryzen 5 ===

{| class="table table-condensed table-striped" style="width: auto;"
! scope="col" width="15%" | Device
! scope="col" width="15%" | Make/model
! scope="col" width="10%" | Status
! scope="col" width="10%" | Bus ID
! scope="col" width="10%" | Kernel driver(s)
! scope="col" width="10%" | Kernel version
! scope="col" width="5%" | Latest microcode
! scope="col" width="30%" | Notes
|-
| AMD Ryzen 5 1600X
| AMD
| {{Yes|Works}}
| <code>N/A</code>
| N/A
| ?
| ?
| ?
|-
| AMD Ryzen 5 1600
| AMD
| {{Yes|Works}}
| <code>N/A</code>
| N/A
| 4.4.10+
| <code>0x08001129</code>
| ?
|-
| AMD Ryzen 5 1500X
| AMD
| {{Yes|Works}}
| <code>N/A</code>
| N/A
| ?
| ?
| ?
|-
| AMD Ryzen 5 1400
| AMD
| {{Yes|Works}}
| <code>N/A</code>
| N/A
| ?
| ?
| ?
|-
|}

== Installation ==

=== Firmware ===

Microcode/firmware updates to be determined...

=== Kernel ===

Enable support for Ryzen hardware in kernel 4.11.0:

{{KernelBox|title=Kernel 4.11.0|1=
Processor type and features  --->
  [*] Symmetric multi-processing support
  [*] AMD ACPI2Platform devices support
  Processor family (Opteron/Athlon64/Hammer/K8)  --->
    (X) Opteron/Athlon64/Hammer/K8
  [*] Supported processor vendors  --->
    [*]   Support AMD processors (NEW)
  [*] SMT (Hyperthreading) scheduler support
  [*] Multi-core scheduler support
  [*] Machine Check / overheating reporting
  [*]   AMD MCE features
  Performance monitoring  --->
    <*> AMD Processor Power Reporting Mechanism
  [*]   AMD microcode loading support
Power management and ACPI options  --->
  CPU Frequency scaling  --->
    <*>   AMD Opteron/Athlon64 PowerNow!
    <*>   AMD frequency sensitivity feedback powersave bias
Device Drivers  --->
  [*] IOMMU Hardware Support  --->
    [*]   AMD IOMMU support
    <*>     AMD IOMMU Version 2 driver
}}

Those using {{Package|sys-kernel/gentoo-sources}} with the <code>experimental</code> USE flag will have additional Processor family options made available:

{{KernelBox|title=Kernel 4.11.0 (gentoo-sources)|1=
Processor type and features  --->
  Processor family (MZEN)  --->
    (X) AMD Zen
}}

This enables <code>-march=znver1</code> to be set for the kernel's {{c|make}} process.

{{Tip|Alternatively, <code>Generic-x86-64</code> can be set in the Processor family for more generic CPU support. In theory this would make the kernel binaries portable in the event that it would be use on CPUs other than AMD Ryzen.}}

== Configuration ==

=== GCC ===

==== GCC 6.3+ ====

GCC 6.3+ has support for the <code>znver1</code> compiler optimization. For optimal performance, this can be enabled in {{Path|make.conf}}.

{{FileBox|filename=/etc/portage/make.conf|title=Zen compiler optimization|lang=bash|1=
CFLAGS="-O2 -march=znver1"
}}

GCC 6.3 is not presently optimized for Ryzen. <ref>[https://gcc.gnu.org/bugzilla/show_bug.cgi?id=80313 GCC bug report]</ref>

==== GCC 5.4 ====

While GCC 5.4 does not support zen core specific optimization, <code>-march=bdver4</code> has been shown to be functional and stable. However, since Zen dropped the instruction set extensions FMA4, TBM, XOP and LWP, they should be disabled accordingly:

{{FileBox|filename=/etc/portage/make.conf|title=Zen compiler optimization for GCC 5.4 and lower|lang=bash|1=
CFLAGS="-O2 -march=bdver4 -mno-fma4 -mno-tbm -mno-xop -mno-lwp"
}}

{{Important|Previously <code>-march{{=}}haswell</code> was said to be functional with Zen<ref>https://gcc.gnu.org/bugzilla/show_bug.cgi?id=80313</ref>, but a Gentoo developer experienced various SEGVs with this option.}}
{{Important|The use of bare <code>-march{{=}}bdver4</code> was said to be functional without issues, nevertheless it may still produce faulty code due to the lack of before mentioned instruction set extensions. Bulldozer has them, Zen does not. <!-- FMA4 and XOP was introduced with Bulldozer "bdver1" and TBM with Piledriver "bdver2". -->}}

Optional, but may produce better code: Add new instruction set extensions introduced with Zen individually (ADCX, RDSEED, MWAITX, SHA, CLZERO, XSAVEC, XSAVES, CLFLUSHOPT, POPCNT), using <code>-march=bdver4</code> (Bulldozer Version 4 i.e. Excavator<!--: Carrizo and Bristol Ridge like the AMD A12 9800 -->) as the starting point:

{{FileBox|filename=/etc/portage/make.conf|title=EXPERIMENTAL compiler optimization for GCC 5.4 specifying new extensions for Zen|lang=bash|1=
CFLAGS="-O2 -march=bdver4 -mno-fma4 -mno-tbm -mno-xop -mno-lwp -mclzero -madx -mrdseed -mmwaitx -msha -mxsavec -mxsaves -mclflushopt -mpopcnt"
}}

== Troubleshooting ==

=== Segmentation faults during compilation ===

If segfaults are encountered during compilation process on Zen it might be anything from software bug to a hardware bug. There have been reports of success and failure. The recommendation is to disable all overclocking and set proper timings for RAM. These problems are likely to be fixed in the future by AMD microcode update and/or GCC update.

{{Note|As of 2017-08-08 it seems like the problem may reside inside the Ryzen processor. This problem should only affect the very few early Ryzen patches that were produced.

AMD is currently aware of the issue<ref>Phoronix - [http://www.phoronix.com/scan.php?page=news_item&px=Ryzen-Segv-Response AMD '''Confirms''' Linux Performance Marginality Problem Affecting Some, Doesn't Affect Epyc / Theadripper]</ref>.}}

Please ensure the most recently compiled binutils is selected via 

{{Cmd|eselect binutils list|output=<pre>
 [1] x86_64-pc-linux-gnu-2.27
 [2] x86_64-pc-linux-gnu-2.28 *
</pre>
}}

* An older instance of binutils could be built against older opcode facilitating crashes due to poor linkage.
* Ensure RAM voltage and timing are correct for the RAM; BIOSs are conservative while performing autosetting.
* Consider downgrading BIOS to the most stable. ASUS and ASRock have been known to push very beta BIOSs that have shown to be very unstable.
* Some motherboards' BIOS have an option to disable OPCache. This has been observed to limit or stop segfaults albeit with a 5-7% performance cost.
* Some users have reported that disabling ASLR resolves the segfault issues. This can be done at runtime by issuing <code>echo 0 > /proc/sys/kernel/randomize_va_space</code> and to make it permanent:
{{FileBox|filename=/etc/sysctl.conf|title=Disabling ASLR|lang=bash|1=
kernel.randomize_va_space = 0
}}

Related forum topics: [https://forums.gentoo.org/viewtopic-t-1057910-start-400.html 1] and [https://forums.gentoo.org/viewtopic-t-1061546.html 2]. And a [http://phoronix.com/forums/node/955368 Phoronix forum topic].

Ryzen users can also fill [https://docs.google.com/forms/d/e/1FAIpQLScKE5Fr3WCeUSmR0tzKOJwd8AdnLYbx3TrsORHCbEoHG1chfw/viewform?usp{{=}}sf_link Gentoo and Ryzen config and stability questionnaire] to help out collecting data.
See also the [https://docs.google.com/spreadsheets/d/1gzniXYcXm1uACXGoBLpbpq54KE6SlHxQ6M_wPnTkub8/edit#gid{{=}}950983791 datasheet] generated from above questionnaire.

=== Random reboots with mce events ===
If your system runs 24x7 and you encounter random, spontaneous reboots with MCE hardware errors being logged on startup, consider disabling C-States. This can be done the BIOS or with the boot parameter processor.max_cstate=5. An example MCE event looks like this:
<pre>Oct 31 11:46:23 fire kernel: [    0.677235] [Hardware Error]: System Fatal error.
Oct 31 11:46:23 fire kernel: [    0.677439] [Hardware Error]: CPU:10 (17:1:1) MC5_STATUS[-|UE|MiscV|PCC|AddrV|-|-|SyndV|TCC]: 0xbea0000000000108
Oct 31 11:46:23 fire kernel: [    0.677798] [Hardware Error]: Error Addr: 0x0001ffff810796c0
Oct 31 11:46:23 fire kernel: [    0.678003] [Hardware Error]: IPID: 0x000500b000000000, Syndrome: 0x000000004d000000
Oct 31 11:46:23 fire kernel: [    0.678356] [Hardware Error]: Execution Unit Extended Error Code: 0
Oct 31 11:46:23 fire kernel: [    0.678562] [Hardware Error]: Execution Unit Error: Watchdog timeout error.
Oct 31 11:46:23 fire kernel: [    0.678562] [Hardware Error]: cache level: RESV, tx: GEN, mem-tx: GEN</pre>

See also [https://community.amd.com/thread/216084?start=75&tstart=0 this AMD forum discussion] (and many other discussions).

== See also ==

* {{See also|AMDGPU}}
* {{See also|AMDGPU-PRO}}
* {{See also|AMD microcode}}

== External resources ==

* http://www.phoronix.com/scan.php?page=article&item=amd-ryzen-znver1&num=1 - Phoronix compiler optimization benchmarks for Ryzen 7.

== References ==

{{reflist}}



[[Category:CPUs]]
