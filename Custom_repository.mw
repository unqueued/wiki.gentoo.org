{{Important|Older versions of {{Package|sys-apps/portage}} included {{c|repoman}}. Starting from >{{=}}portage-2.3.0, {{c|repoman}} has been 'unbundled' into separate package. Be sure it is installed before following this guide:

{{Emerge|app-portage/repoman}}
}}

== Creating a local repository ==

See [[Handbook:AMD64/Portage/CustomTree#Defining a custom repository]]

== Adding an ebuild to the repository ==

Now that the basic layout is in order, you can add an ebuild to the repository. In this example, app-dicts/artha-1.0.2 (available at [https://bugs.gentoo.org/show_bug.cgi?id=312313]). We will assume the ebuild is in the homedir of the user {{c|myuser}}, and named {{Path|artha-1.0.2.ebuild}}.

{{RootCmd
|mkdir -p /usr/local/portage/app-dicts/artha
|cp ~myuser/artha-1.0.2.ebuild /usr/local/portage/app-dicts/artha/artha-1.0.2.ebuild
|chown -R portage:portage /usr/local/portage
|pushd /usr/local/portage/app-dicts/artha
|repoman manifest
|popd
}}

It should now be possible to install the package from the ebuild repository with the emerge command:

{{Emerge|params+=--verbose --oneshot|app-dicts/artha}}

== Simple version bump of an ebuild in the local repository ==

In theory one can update an ebuild to the next version number with a "simple version bump". 
Indicators that this is promising are:

* Upstream fixed only minor bugs
* Dependencies did not change
* Upstream uses semantic version numbers and changed only the minor number <ref>one example of semantic version number is described on http://semver.org/</ref>
* The ebuild file is short and does not use many patches

For the simplest bump place a copy of the ebuild in the local repository and update the version number in the filename.

We assume you have prepared your local repository in bobs-repository already and want to bump to a newer version of {{Package|app-emulation/docker}}.

{{Cmd
|mkdir -v /usr/local/portage/bobs-repository/app-emulation
|cd /usr/local/portage/bobs-repository/app-emulation 
|cp -r /usr/portage/app-emulation/docker .
|cd ./docker
|cp docker-1.11.0.ebuild docker-1.12.6.ebuild
|repoman --digest{{=}}y -d full 
}}

Now test the installation:

{{Emerge|{{=}}app-emulation/docker-1.12.6}}

Finished ebuilds should be added to the version control system. If using git, consider [[Gentoo_Github|adding a pull request]] to [https://github.com/gentoo/gentoo/pulls GitHub].

==== Avoid a direct version bump ====

The direct version bump in the official ebuild repository is often suggested, but should be avoided, because:

* All changes get lost on the next sync of the tree
* User contributions should be separated from the official ebuild repository

Do '''''not''''' do this:

{{RootCmd
| # cd /usr/portage/app-emulation/docker
| # cp docker-1.11.0 docker-1.12.6
| # repoman --digest{{=}}y -d full 
}}

== Crossdev ==

{{Package|sys-devel/crossdev}} will place the ebuilds/categories it generates into one of four places in this order.
# An overlay specified on the command-line with the <code>--ov-output (-oO)</code> option
# An overlay named 'cross-${CTARGET}'
# An overlay named 'crossdev'
# Finally, it falls back on the overlay having the lowest priority value in {{Path|/etc/portage/repos.conf/}}. 

Most users will want to prevent [[crossdev]] from disturbing [[layman]]'s overlays or the user's personal per-machine overlay (commonly created at {{Path|/usr/local/portage}}). The best solution is to create an overlay specifically for [[crossdev]]'s use:

{{RootCmd
|mkdir -p /usr/local/portage-crossdev/{profiles,metadata}
|echo 'crossdev' > /usr/local/portage-crossdev/profiles/repo_name
|echo 'masters {{=}} gentoo' > /usr/local/portage-crossdev/metadata/layout.conf
|chown -R portage:portage /usr/local/portage-crossdev
}}

If the main Portage tree is synchronized by using Git, or any other method with Manifest files that do not include checksums for ebuilds, prevent "masked by: corruption" errors with:

{{FileBox|filename=/usr/local/portage-crossdev/metadata/layout.conf|lang=ini|1=
masters = gentoo
thin-manifests = true
}}

Then instruct Portage and crossdev to use this overlay:

{{FileBox|filename=/etc/portage/repos.conf/crossdev.conf|lang=ini|1=
[crossdev]
location = /usr/local/portage-crossdev
priority = 10
masters = gentoo
auto-sync = no
}}

== See also ==

* See [[Handbook:AMD64/Portage/CustomTree#Defining a custom repository|Defining a custom repository]] ({{Keyword|amd64}} handbook)
* [[Gentoo GitHub]] - Use a git branch for development and testing of ebuilds

== References ==

{{reflist}}
