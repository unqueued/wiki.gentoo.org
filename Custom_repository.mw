A local overlay is useful to 
* install an ebuild you got from some one
* develop your own ebuilds

== Creating a local overlay ==

A local repository (aka local overlay) can be set up with a few steps creating the mandatory elements of the [[repository format]].

{{RootCmd
|mkdir -p /usr/local/portage/{metadata,profiles}
|echo 'NameOfYourOverlay' > /usr/local/portage/profiles/repo_name
|echo 'masters {{=}}  gentoo' > /usr/local/portage/metadata/layout.conf
|chown -R portage:portage /usr/local/portage
}}

Next, tell Portage about the overlay:

{{RootCmd|mkdir -p /etc/portage/repos.conf}}

{{:/etc/portage/repos.conf/local.conf}}

{{Note|<code>NameOfYourOverlay</code> is an example and you should change it to something meaningful in all locations.}}

{{Note|Setting the <var>PORTDIR_OVERLAY</var> variable in {{Path|[[:/etc/portage/make.conf|make.conf]]}} is deprecated (since?) and should not be used anymore.}}

== Adding an ebuild to the overlay ==

Now that the basic layout is in order, you can add an ebuild to the overlay. In this example, app-dicts/artha-1.0.2 (available at [https://bugs.gentoo.org/show_bug.cgi?id=312313]). We will assume the ebuild is in the homedir of the user {{c|myuser}}, and named {{Path|artha-1.0.2.ebuild}}.

{{RootCmd
|mkdir -p /usr/local/portage/app-dicts/artha
|cp ~myuser/artha-1.0.2.ebuild /usr/local/portage/app-dicts/artha/artha-1.0.2.ebuild
|chown -R portage:portage /usr/local/portage
|pushd /usr/local/portage/app-dicts/artha
|repoman manifest
|popd
}}

You should now be able to install the package from your overlay with emerge.

{{Emerge|params+=--verbose --oneshot|app-dicts/artha}}

== Simple version bump of an ebuild in the local overlay ==
In theory one can update an ebuild to the next version number with a "simple version bump". 
Indicators that this is promising are:
* upstream fixed only minor bugs
* dependencies did not change
* upstream uses semantic version numbers and changed only the minor number <ref>one example of semantic version number is described on http://semver.org/</ref>
* the ebuild file is short and does not use many patches

For the simplest bump place a copy of the ebuild in your local overlay and update the version number in the filename.

We assume you have prepared your local overlay in bobs-overlay already and want to bump from app-emulation/docker-1.11.0 to app-emulation/docker-1.11.2

{{Cmd
| cd /usr/local/overlays/bobs-overlay 
| cp -r /usr/portage/app-emulation/docker .
| cd app-emulation/docker
| cp app-emulation/docker-1.11.0 app-emulation/docker-1.11.2
| ebuild docker-1.11.2.ebuild manifest
| repoman -d full
}}

now test the installation 

{{Emerge|{{=}}app-emulation/docker-1.11.2}}

you may add it to your version controll system. If you use git:

{{Cmd
| git add docker-1.11.2.ebuild
| git commit -a
}}

The direct version bump in the official tree is often suggested, but should be avoided, because
* all changes get lost on the next sync of the tree
* user contributions should be separated from the official tree

{{RootCmd
| # do not do this:
| # cd /usr/portage/app-emulation/docker
| # cp app-emulation/docker-1.11.0 app-emulation/docker-1.11.2
| # ebuild docker-1.11.2.ebuild manifest
| # repoman -d full
}}

== Crossdev ==

[[crossdev]] will automatically place the ebuilds/categories it generates into the highest priority overlay found in {{Path|/etc/portage/repos.conf/}}. In order to do this you must set the priority number to something low. Most users will want to prevent [[crossdev]] from disturbing [[layman]]'s overlays or the user's personal per-machine overlay (normally created at {{Path|/usr/local/portage}}). The best solution is to create an overlay specifically for [[crossdev]]'s use:

{{RootCmd
|mkdir -p /usr/local/portage-crossdev/{profiles,metadata}
|echo 'local-crossdev' > /usr/local/portage-crossdev/profiles/repo_name
|echo 'masters {{=}} gentoo' > /usr/local/portage-crossdev/metadata/layout.conf
|chown -R portage:portage /usr/local/portage-crossdev
}}

If the main Portage tree is synchronized by using Git, or any other method with Manifest files that do not include checksums for ebuilds, prevent "masked by: corruption" errors with:

{{FileBox|filename=/usr/local/portage-crossdev/metadata/layout.conf|lang=ini|1=
masters = gentoo
thin-manifests = true
}}

Then instruct Portage and crossdev to use this overlay:

{{FileBox|filename=/etc/portage/repos.conf/crossdev.conf|lang=ini|1=
[local-crossdev]
location = /usr/local/portage-crossdev
priority = 10
masters = gentoo
auto-sync = no
}}
