<languages />

{{Metadata|abstract=sudoコマンドは通常ユーザーに、いくつかの、もしくはすべてのコマンドをrootや他のユーザーとして（パスワードなしも含め）実行できるようにさせる、シンプル・安全な方法を提供します。}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|https://www.sudo.ws/|header=true}}
|{{InfoBox wikipedia|sudo}}
|{{InfoBox package|app-admin/sudo}}
|{{InfoBox gitweb|https://www.sudo.ws/repos/sudo|raw=true}}
}}

{{c|sudo}}コマンドは特権の昇格をシンプル・安全に管理します。たとえば一般ユーザーが特定（もしくはすべて）のコマンドを{{c|root}}や他のユーザーで（パスワードなしも含め）実行できるようにします。

ユーザーに完全な[[Wikipedia:Superuser|root特権]]を渡さずに、特権の必要な操作を許可するためには{{c|sudo}}を使うとよいでしょう。{{c|sudo}}を使うことで誰が何をすることができるかを制御できます。このガイドでは、このパワフルなツールについてのちょっとした紹介をします。

この記事は手短な説明です。{{Package|app-admin/sudo}}はここで述べられているよりも非常にパワフルです。違うユーザーとしてファイルを編集したり（{{c|sudoedit}}）、スクリプトの中から実行（つまりバックグラウンドで実行可能で、キーボードの代わりに標準入力からパスワードを読み込めます）するなど、特別な機能を備えています。

さらなる情報に関しては、{{c|sudo}}や{{c|sudoers}}のマニュアルを参照してください。

== インストール ==

=== USE フラグ ===

{{USEflag|package=app-admin/sudo}}

=== Emerge ===

{{Emerge|app-admin/sudo}}

== 設定 ==

=== Logging activity ===

One additional advantage of {{c|sudo}} is that it can log any attempt (successful or not) to run an application. This is very useful when tracking who made that one fatal mistake that took 10 hours to fix :)

=== Granting permissions ===

The {{Package|app-admin/sudo}} package allows the system administrator to grant permission to other users to execute one or more applications they would normally have no right to. Unlike using the <code>setuid</code> bit on these applications {{c|sudo}} gives a more fine-grained control on ''who'' can execute a certain command and ''when''.

With {{c|sudo}} a clear list can be made of ''who'' can execute a certain application. If the [[wikipedia:setuid|setuid]] bit is set on an executable, any user would be able to run the application (or any user of a certain group, depending on the permissions used). With {{c|sudo}} the user can (and probably should) be required to provide a password in order to execute the application.

<div class="mw-translate-fuzzy">
<code>sudo</code>の設定は{{Path|/etc/sudoers}}に書かれています。このファイルを<code>nano /etc/sudoers</code>や<code>vim /etc/sudoers</code>やその他のエディタで編集してはいけません。代わりに<code>visudo</code>を使うようにしてください。
</div>

=== 基本的な構文 ===

<div class="mw-translate-fuzzy">
<code>sudo</code>の最も難解な部分が{{Path|/etc/sudoers}}の構文です。基本的な構文を示します。
</div>

<div class="mw-translate-fuzzy">
{{CodeBox|title=/etc/sudoersの基本的な構文|1=
user  host = commands
}}
</div>

<div class="mw-translate-fuzzy">
この構文では、"host"からログインしている"user"というユーザーは"commands"に上げられたコマンドをrootとして実行してもよい、ということを<code>sudo</code>に示します。"swift"がlocalhostでログインしていたら<code>emerge</code>の実行を許可する、といった現実的な例を考えるとわかりやすいでしょう。
</div>

A more real-life example might make this more clear: To allow the user {{c|larry}} to execute {{c|emerge}} when he is logged in on {{c|localhost}}:

<div class="mw-translate-fuzzy">
{{CodeBox|title=/etc/sudoersの現実的な例|1=
swift  localhost = /usr/bin/emerge
}}
</div>

<div class="mw-translate-fuzzy">
{{Note/ja|ホスト名は<code>hostname</code>の出力と一致させます。}}
</div>

{{Note|In the simplest case, commands must be fully qualified paths to executables: hence <code>/usr/bin/emerge</code> not just <code>emerge</code>. Paths can also contain wildcards and may refer to entire directories. See the manpage for details.}}

<div class="mw-translate-fuzzy">
{{Warning/ja|他人に対して特権の昇格を許可できるアプリケーションの実行を許可しないでください。例えば、あるユーザーに<code>emerge</code>をrootで実行させるというのは完全なroot権限を与えるのと同義です。なぜなら<code>emerge</code>はユーザーの意のままにファイルシステムを変更することができるからです。信用できない<code>sudo</code>ユーザーに特権を与えてはいけません。}}
</div>

<div class="mw-translate-fuzzy">
ユーザー名の代わりにグループ名を使うこともできます。この場合はグループ名の頭に<code>%</code>をつけてください。<code>wheel</code>グループのメンバーに<code>emerge</code>の実行を許可する場合はこのように書きます。
</div>

<div class="mw-translate-fuzzy">
{{CodeBox|title=wheelグループのメンバーにemergeの実行を許可する|1=
%wheel  localhost = /usr/bin/emerge
}}
</div>

<div class="mw-translate-fuzzy">
コマンドごとに行を増やす代わりに、一行に複数のコマンドを書くこともできます。例えば先ほどのユーザーに<code>emerge</code>だけでなく<code>ebuild</code>と<code>emerge-webrsync</code>の実行も許可する場合はこう書きます。
</div>

<div class="mw-translate-fuzzy">
{{CodeBox|title=複数のコマンドを指定する|1=
swift  localhost = /usr/bin/emerge, /usr/bin/ebuild, /usr/sbin/emerge-webrsync
}}
</div>

The precise command line can also be specified (including parameters and arguments) not just the name of the executable. This is useful to restrict the use of a certain tool to a specified set of command options. The {{c|sudo}} tool allows [[shell]]-style [[Wikipedia:Wildcard character|wildcards]] (AKA meta or glob characters) to be used in path names as well as command-line arguments in the sudoers file. Note that these are ''not'' regular expressions.

Here is an example of {{c|sudo}} from the perspective of a first-time user of the tool who has been granted access to the full power of {{c|emerge}}:

<div class="mw-translate-fuzzy">
{{Cmd|sudo emerge -uDN world|output=<pre>
We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:
  
    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.
  
Password: ## (rootではなくユーザーのパスワードを入力します！)
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
<code>sudo</code>が要求するパスワードはユーザー自身のパスワードです。この手順を踏むことで、うっかりログインしたまま席を離れてしまった時に不正利用されないようにします。
</div>

<div class="mw-translate-fuzzy">
なお<code>sudo</code>は<code>${PATH}</code>を変更しません。<code>sudo</code>で実行するコマンドはあなたの環境から実行されます。このため、{{Path|/sbin}}などに置かれたツールを実行したい時は次のように完全なパスを<code>sudo</code>に渡す必要があります。
</div>

=== Basic syntax with LDAP ===

The <code>ldap</code> and <code>pam</code> USE flags are needed for the LDAP support.

When using sudo with LDAP, sudo will read configuration from LDAP Server as well. So two files will need to edited.

{{FileBox|filename=/etc/ldap.conf.sudo|title=Please chmod 400 when done|1=
# See ldap.conf(5) and README.LDAP for details
# This file should only be readable by root
 
# supported directives: host, port, ssl, ldap_version
# uri, binddn, bindpw, sudoers_base, sudoers_debug
# tls_{checkpeer,cacertfile,cacertdir,randfile,ciphers,cert,key}
 
host ldap.example.com
port 389
 
base dc=example,dc=com
 
uri ldap://ldap.example.com/
#uri ldapi://%2fvar%2frun%2fopenldap%2fslapd.sock
 
ldap_version 3
#ssl start_tls
 
sudoers_base ou=SUDOers,dc=example,dc=com
#sudoers_debug 2
 
bind_policy soft
}}

{{FileBox|filename=/etc/nsswitch.conf|title=Please add the sudoers line|1=
sudoers:     ldap files
}}

The following LDAP entry will need to added for sudo.

{{Note|It was design so that the sudoers branch are on top of the tree for security reason. This allows a different access right from LDAP to read/write to this branch}}

{{CodeBox|title=LDAP entry for sudo|1=
version: 1
DN: ou=SUDOers,dc=example,dc=com
objectClass: organizationalUnit
objectClass: top
objectClass: domainRelatedObject
associatedDomain: example.com
ou: SUDOers
 
DN: cn=defaults,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: defaults
description: Default sudoOption's go here
sudoOption: env_reset
 
DN: cn=root,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: root
sudoCommand: ALL
sudoHost: ALL
sudoUser: root
 
DN: cn=%wheel,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: %wheel
sudoCommand: ALL
sudoHost: ALL
sudoOption: !authenticate
sudoUser: %wheel
}}

{{CodeBox|title=LDAP entry for wheel group|1=
version: 1
DN: cn=wheel,ou=Group,dc=example,dc=com
objectClass: top
objectClass: posixGroup
cn: wheel
description: Wheel Group
gidNumber: 10
memberUid: useradmin1
memberUid: root
}}

The configuration on the sudoer on LDAP are similar to files with some different. Please read more about sudo with LDAP on the link below.<ref>[https://www.sudo.ws/man/sudoers.ldap.man.html Sudoers LDAP Manual]</ref>

<div class="mw-translate-fuzzy">
=== エイリアスを用いる ===
</div>

In larger environments having to enter all users over and over again (or hosts, or commands) can be a daunting task. To ease the administration of {{Path|/etc/sudoers}} ''aliases'' can defined. The format to declare aliases is quite simple:

{{CodeBox|title=Declaring aliases in /etc/sudoers|1=
Host_Alias hostalias = hostname1, hostname2, ...
User_Alias useralias = user1, user2, ...
Cmnd_Alias cmndalias = command1, command2, ...
}}

One alias that always works, for any position, is the <code>ALL</code> alias (to make a good distinction between aliases and non-aliases it is recommended to use capital letters for aliases). The <code>ALL</code> alias is an alias to all possible settings.

A sample use of the <code>ALL</code> alias to allow ''any'' user to execute the {{c|shutdown}} command if he is logged on locally is:

{{CodeBox|title=Allowing any user to execute shutdown|lang=bash|1=
ALL  localhost = /sbin/shutdown
}}

Another example is to allow the user {{c|larry}} to execute the {{c|emerge}} command as root, regardless of where he is logged in from:

{{CodeBox|title=Allowing a user to run an application regardless of his location|1=
larry   ALL = /usr/bin/emerge
}}

More interesting is to define a set of users who can run software administrative applications (such as {{c|emerge}} and {{c|ebuild}}) on the system and a group of administrators who can change the password of any user, except root!

{{CodeBox|title=Using aliases for users and commands|1=
User_Alias  SOFTWAREMAINTAINERS = larry, john, danny
User_Alias  PASSWORDMAINTAINERS = larry, sysop
Cmnd_Alias  SOFTWARECOMMANDS    = /usr/bin/emerge, /usr/bin/ebuild
Cmnd_Alias  PASSWORDCOMMANDS    = /usr/bin/passwd [a-zA-Z0-9_-]*, !/usr/bin/passwd root
 
SOFTWAREMAINTAINERS  localhost = SOFTWARECOMMANDS
PASSWORDMAINTAINERS  localhost = PASSWORDCOMMANDS
}}

=== Non-root execution ===

It is also possible to have a user run an application as a different, non-root user. This can be very interesting when running applications as a different user (for instance {{c|apache}} for the web server) and want to allow certain users to perform administrative steps as that user (like killing zombie processes).

Inside {{Path|/etc/sudoers}} list the user(s) in between <code>(</code> and <code>)</code> before the command listing:

{{CodeBox|title=Non-root execution syntax|1=
users  hosts = (run-as) commands
}}

For instance, to allow {{c|larry}} to run the {{c|kill}} tool as the {{c|apache}} or {{c|gorg}} user:

{{CodeBox|title=Non-root execution example|1=
Cmnd_Alias KILL = /bin/kill, /usr/bin/pkill
 
larry   ALL = (apache, gorg) KILL
}}

With this set, the user can run {{c|sudo -u}} to select the user he wants to run the application as:

{{Cmd|sudo -u apache pkill apache}}

An alias can set for the user to run an application as using the <code>Runas_Alias</code> directive. Its use is identical to the other <code>_Alias</code> directives we have seen before.

=== Passwords and default settings ===

By default, {{c|sudo}} asks the user to identify himself using his own password. Once a password is entered, {{c|sudo}} remembers it for 5 minutes, allowing the user to focus on his tasks and not repeatedly re-entering his password.

Of course, this behavior can be changed: set the <code>Defaults:</code> directive in {{Path|/etc/sudoers}} to change the default behavior for a user.

For instance, to change the default 5 minutes to 0 (never remember):

{{CodeBox|title=Changing the timeout value|1=
Defaults:larry  timestamp_timeout=0
}}

A setting of <code>-1</code> would remember the password indefinitely (until the system reboots).

A different setting would be to require the password of the user that the command should be run as and not the users' personal password. This is accomplished using <code>runaspw</code>. In the following example we also set the number of retries (how many times the user can re-enter a password before {{c|sudo}} fails) to <code>2</code> instead of the default 3:

{{CodeBox|title=Requiring the root password instead of the user's password|1=
Defaults:john   runaspw, passwd_tries=2
}}

Another interesting feature is to keep the <code>DISPLAY</code> variable set so that graphical tools can be executed:

{{CodeBox|title=Keeping the DISPLAY variable alive|1=
Defaults:john env_keep=DISPLAY
}}

Dozens of default settings can changed using the <code>Defaults:</code> directive. Fire up the {{c|sudoers}} manual page and search for <code>Defaults</code>.

To allow a user to run a certain set of commands without providing any password whatsoever, start the commands with <code>NOPASSWD:</code>, like so:

{{CodeBox|title=Allowing emerge to be ran as root without asking for a password|1=
larry     localhost = NOPASSWD: /usr/bin/emerge
}}

=== Bash completion ===

Users that want bash completion with sudo need to run this once.

{{Cmd|sudo echo "complete -cf sudo" >> $HOME/.bashrc}}

=== Zshell completion ===

Users that want zsh completion for sudo can set the following in {{Path|.zprofile}} and {{Path|.zshrc}} respectively

{{FileBox|filename=.zprofile|title=Adding zshell completion|lang=bash|1=
if [[ $EUID != 0 ]]; then
    typeset -xT SUDO_PATH sudo_path
    typeset -U sudo_path
    sudo_path=({,/usr/local,/usr}/sbin(N-/))
    alias sudo="sudo env PATH=\"SUDO_PATH:$PATH\""
fi
}}

{{FileBox|filename=.zshrc|title=Adding zshell completion|lang=bash|1=
zstyle ':completion:*:sudo:*' environ PATH="$SUDO_PATH:$PATH"
}}

With the above change, all commands in the {{Path|/sbin}}, {{Path|/usr/sbin}} and {{Path|/usr/local/sbin}} locations will be available to the shell for completion when the command is prefaced with 'sudo'.

== 使い方 ==

=== Listing privileges ===

To list the current user's capabilities, run {{c|sudo -l}} :

<div class="mw-translate-fuzzy">
{{Cmd|sudo -l|output=<pre>
User swift may run the following commands on this host:
    (root)   /usr/libexec/xfsm-shutdown-helper
    (root)   /usr/bin/emerge
    (root)   /usr/bin/passwd [a-zA-Z0-9_-]*
    (root)   !/usr/bin/passwd root
    (apache) /usr/bin/pkill
    (apache) /bin/kill
</pre>
}}
</div>

Any command in {{Path|/etc/sudoers}} that does not require a password to be entered, a password will not be required to list the entries either. Otherwise sudo will ask for a password if it isn't remembered.

=== Prolonging password timeout ===

By default, if a user has entered their password to authenticate their self to {{c|sudo}}, it is remembered for 5 minutes. If the user wants to prolong this period, he can run {{c|sudo -v}} to reset the time stamp so that it will take another 5 minutes before {{c|sudo}} asks for the password again.

{{Cmd|sudo -v}}

The inverse is to kill the time stamp using {{c|sudo -k}}.

== References ==
{{reflist}}

[[Category:Software]]
