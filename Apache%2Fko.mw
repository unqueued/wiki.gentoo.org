<languages />

{{Metadata|abstract=The Apache HTTP Server is an efficient, extensible web server. It is one of the most popular web servers used on the Internet.}}

{{InfoBox stack
|{{InfoBox homepage|http://httpd.apache.org|header=true}}
|{{InfoBox wikipedia|Apache HTTP Server}}
|{{InfoBox gdoc|Apache}}
|{{InfoBox github|apache/httpd}}
}}

The '''Apache HTTP Server''' is an efficient, extensible [[:Category:Web Servers|web server]]. It is one of the most popular web servers used the Internet.

== 설치 ==

{{Note|When updating between Apache versions, check the [[Project:Apache/Upgrading|Upgrade guide]].}}

=== USE 플래그 ===

{{USEflag|package=www-servers/apache|desc={{Package|www-servers/apache}}에서 사용할 수 있는 USE 플래그:
|debug
|doc
|ldap
|ssl+yes
|static
|suexec
|threads
|APACHE2_MODULES+++See {{Path|[http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/profiles/desc/apache2_modules.desc /usr/portage/profiles/desc/apache2_modules.desc]}}. {{Path|/etc/portage/make.conf}}에서 활성화하십시오.
|APACHE2_MPMS+++See {{Path|[http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/profiles/desc/apache2_mpms.desc /usr/portage/profiles/desc/apache2_mpms.desc]}}. {{Path|/etc/portage/make.conf}}에서 활성화하십시오.
}}

=== Emerge ===

{{Emerge|{{Package|www-servers/apache}}}}

=== 전역 지원 ===

Enabling the <code>apache2</code> global USE flag provides support for Apache in other packages. This may cause {{Package|www-servers/apache}} to be installed automatically if a package depending on Apache has been emerged.
 		 
{{FileBox|filename=/etc/portage/make.conf|title|Adding Apache to system USE flags|lang=bash|1=
USE="apache2"
}}

After configuring USE variables, update the system so the changes take effect:

{{Emerge|params+=--changed-use --deep|@world}}

== 설정 ==

=== 파일 ===

There are two main files that configure Apache2's behavior on the system: 

* Gentoo's Apache2 init script configuration file {{Path|/etc/conf.d/apache2 }}

* Apache2 server's conventional configuration file {{path|/etc/apache2/httpd.conf}}

==== {{Path|/etc/conf.d/apache2}} ====

The {{Path|apache2}} file located in {{Path|/etc/conf.d}} is Gentoo's init script configuration file. The only active line in this file is the <code>APACHE2_OPTS</code> line:

{{FileBox|filename=/etc/conf.d/apache2|lang=bash|1=
APACHE2_OPTS="-D DEFAULT_VHOST -D INFO -D SSL -D SSL_DEFAULT_VHOST -D LANGUAGE"
}}

This line defines options that will be interpreted by the various configuration files using the <code><IfDefine option-name></code> statement to activate or deactivate some part of the whole configuration. This will be returned to later in the article.

==== {{Path|/etc/apache2/httpd.conf}} ====

The {{Path|httpd.conf}} file is Apache server's conventional configuration file. In fact this file is only an '''entry point''' for configuration. The whole configuration is split in many files in the {{Path|/etc/apache2/}} directory, that are assembled together using the <code>Include</code> directive. For example, the statement <code>Include /etc/apache2/modules.d/*.conf</code>, in {{Path|httpd.conf}}, aims at including all the files in {{Path|/etc/apache2/modules.d/}} which name ends with {{Path|.conf}}. 

Taking into account what has been said in the subsection above, and as module configuration files (files in {{Path|/etc/apache2/modules.d}}) almost always start with the <code><IfDefine module-name></code>, the content of one file inside {{Path|/ect/apache2/modules.d}}, will ONLY be assembled with the rest of the configuration, if the matching option is set using a <code>-D module-name</code> flag in the <code>APACHE2_OPTS</code> variable in the {{Path|/etc/conf.d/apache2 }} file. The {{Path|00_default_settings.conf}} configuration file is an exception to this rule as it doesn't start with an <code>IfDefine</code> statement and therefore is always included in the resulting configuration.

=== Defaults ===

After a fresh install of an Apache server, the configuration resulting from the assemblage of the different configuration files is as follows. Start with the entry point {{Path|/etc/apache2/httpd.conf}}.

{{Warning| This is ''only'' given for quick reference and to give an overall view. Users are strongly invited to review the comments included in the various files to understand the ins and out of the configuration. Please also refer to the Apache manual for an in depth understanding of Apache configuration.}}

{{FileBox|filename=/etc/apache2/httpd.conf|lang=apache|1=
ServerRoot "/usr/lib64/apache2"
  
#Module loaded unconditionally, assuming the USE flag is no unset in
# /etc/portage/make.conf or in /etc/portage/package.use
LoadModule actions_modulemodules/mod_actions.so
...
#other modules loaded that way : alias_module, auth_basic_module, authn_alias_module,
# authn_anon_module, authn_dbm_module, authn_default_module, authn_file_module, 
# authz_dbm_module, authz_default_module, authz_groupfile_module, authz_host_module, 
# authz_owner_module, authz_user_module, autoindex_module,  cgi_module,  cgid_module, 
# deflate_module, dir_module, env_module, expires_module, ext_filter_module, filter_module,
#  headers_module, include_module,  log_config_module, logio_module, mime_module,  
# mime_magic_module, negotiation_module, rewrite_module, setenvif_module, 
# speling_module,ssl_module, status_module, unique_id_module, usertrack_module, host_alias_module
  
  
#Modules loaded conditionally, assuming matching USE flag is not unset in
# /etc/portage/make.conf or in /etc/portage/package.use (flag to be set in )
<IfDefine AUTHNZ_LDAP>
LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
</IfDefine>
#other modules loaded that way : cache_module, dav_module, dav_fs_module,
# dav_lock_module,disk_cache_module,  file_cache_module, info_module, ldap_module,
# mem_cache_module, userdir_module
  
  
User apache
Group apache
  
# Supplemental configuration
#**************************************************************************************vvv
#this part is included via Include /etc/apache2/modules.d/*.conf 
  
#included from /etc/apache2/modules.d/00_default_settings.conf-------------v
#this is always included as there is not option to deactivate it.
Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 15
UseCanonicalName Off
AccessFileName .htaccess
ServerTokens Prod
TraceEnable off
ServerSignature On 
HostnameLookups Off
EnableMMAP On
EnableSendfile On
FileEtag INode MTime Size
ContentDigest Off
ErrorLog /var/log/apache2/error_log
LogLevel warn
  
<Directory />
	Options FollowSymLinks
	AllowOverride None
	Order deny,allow
	Deny from all
</Directory>
  
<IfModule dir_module>
	DirectoryIndex index.html index.html.var
</IfModule>
<FilesMatch "^\.ht">
	Order allow,deny
	Deny from all
</FilesMatch>
#--------------------------------------------------------------------------^
  
#included from 00_mod_info.conf--------------------------------------------v
<IfDefine INFO>
<Location /server-info>
	SetHandler server-info
	Order deny,allow
	Deny from all
	Allow from 127.0.0.1
</Location>
</IfDefine>
#--------------------------------------------------------------------------^
  
#--------------------------------------------------------------------------v
#included from 00_languages.conf
# Settings for hosting different languages.
<IfDefine LANGUAGE>
  
	AddLanguage ca .ca
	...
	AddLanguage zh-TW .zh-tw
  
	LanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn no pl pt pt-BR ru sv zh-CN zh-TW
  
	ForceLanguagePriority Prefer Fallback
  
	AddCharset us-ascii.ascii	.us-ascii
	AddCharset <nowiki>ISO-8859-1		.iso8859-1 .latin1</nowiki>
	...
	AddCharset shift_jis		.shift_jis .sjis
</IfDefine>
#---------------------------------------------------------------------------^
#**************************************************************************************^^^
  
  
#***************************************************************************************vvv
#this part is included via Include /etc/apache2/vhosts.d/*.conf 
#from 00_default_ssl_vhost.conf-----------------------------------------------------vv
<IfDefine SSL>
	<IfDefine SSL_DEFAULT_VHOST>
		<IfModule ssl_module>
			Listen 443
  
			<VirtualHost _default_:443>
				ServerName localhost
                                #------------------------------------------v
				# this part is included via Include /etc/apache2/vhosts.d/default_vhost.include
				ServerAdmin root@localhost
				DocumentRoot "/var/www/localhost/htdocs"
  
  	
				<Directory "/var/www/localhost/htdocs">
	   				Options Indexes FollowSymLinks
	   				AllowOverride All
	   				Order allow,deny
	   				Allow from all
				</Directory>
  
				<IfModule alias_module>
	   				ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
				</IfModule>
  
				<Directory "/var/www/localhost/cgi-bin">
	   				AllowOverride None
	   				Options None
	   				Order allow,deny
	   				Allow from all
				</Directory>
        			#end of Include ---------------------------^
  	
				ErrorLog /var/log/apache2/ssl_error_log
  
				<IfModule log_config_module>
					TransferLog /var/log/apache2/ssl_access_log
				</IfModule>
				SSLEngine on
				SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
				SSLCertificateFile /etc/ssl/apache2/server.crt
				SSLCertificateKeyFile /etc/ssl/apache2/server.key
  
				<FilesMatch "\.(cgi{{!}}shtml{{!}}phtml{{!}}php)$">
					SSLOptions +StdEnvVars
				</FilesMatch>
  
				<Directory "/var/www/localhost/cgi-bin">
					SSLOptions +StdEnvVars
				</Directory>
  
				<IfModule setenvif_module>
					BrowserMatch ".*MSIE.*" \
					nokeepalive ssl-unclean-shutdown \
					downgrade-1.0 force-response-1.0
				</IfModule>
  
  
				<IfModule log_config_module>
					CustomLog /var/log/apache2/ssl_request_log \
					"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
					</IfModule>
			</VirtualHost>
		</IfModule>
	</IfDefine>
</IfDefine>
#---------------------------------------------------------------------------------^^
#from 00_default_vhost.conf-------------------------------------------------------vv
<IfDefine DEFAULT_VHOST>
	Listen 80
	NameVirtualHost *:80
  
	<VirtualHost *:80>
		ServerName localhost
  
		#---------------------------------------------------------------v
		# this part is included via Include /etc/apache2/vhosts.d/default_vhost.include
		ServerAdmin root@localhost
		DocumentRoot "/var/www/localhost/htdocs"
  
  	
		<Directory "/var/www/localhost/htdocs">
	   		Options Indexes FollowSymLinks
	   		AllowOverride All
	   		Order allow,deny
	   		Allow from all
		</Directory>
  
		<IfModule alias_module>
	   		ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
		</IfModule>
  
		<Directory "/var/www/localhost/cgi-bin">
	   		AllowOverride None
	   		Options None
	   		Order allow,deny
	   		Allow from all
		</Directory>
        	#end of Include -----------------------------------------------^
  
		<IfModule mpm_peruser_module>
			ServerEnvironment apache apache
		</IfModule>
	</VirtualHost>
</IfDefine>
#-----------------------------------------------------------------------------------^^
# end of include ****************************************************************************************^^^
}}

=== 첫 생존 신호 ===

As visible in the initial configuration above, the pre-installed virtual host's <code>DocumentRoot</code>  directory is {{Path|/var/www/localhost/htdocs}}, its server name is ''localhost''. In addition an index.html file is provided in the <code>DocumentRoot</code> directory, thus to check whether everything is correctly installed or not, point a browser to [http://localhost/ http://localhost/].

An "It works!" message should be printed on the page.

{{Warning|Out of the box, [[Firefox]] has a feature designed to help users who mis-typing URLs in the browser bar. If a URL fails to resolve, Firefox tries a couple of alterations of the URL to try find what the user 'might have' really intended, appending a <code>.com</code> or prefixing a <code>www.</code> to the host name portion of the URL to see if they resolve.
 
This feature, which was introduced in the early versions of Firefox, is somewhat annoying for developers. The feature means that when a server running on localhost fails to respond, Firefox decides to try <code>localhost.com</code> or <code>www.localhost.com</code>. This often resolves to a not found page.
 
To disable this feature:
 
# Enter <code>about:config</code> in the browser bar
# Click "I'll be careful" and enter the special configuration page
# Enter <code>browser.fixup.alternate.enabled</code> in the search box that appears
# Right click on the <code>browser.fixup.alternate.enabled</code> that appears in the filtered list below and choose toggle to set the value to false.
}}

=== mod_security 활성화 ===

Install {{Package|www-apache/mod_security}}:

{{Emerge|www-apache/mod_security}}

Enable the <code>SECURITY</code> module in the {{Path|apache2}} file's <code>APACHE2_OPTS</code> variable:

{{FileBox|filename=/etc/conf.d/apache2|title=Enabling the security module|lang=bash|1=
APACHE2_OPTS="... -D SECURITY"
}}

Control this module by editing {{Path|/etc/apache2/modules.d/79_modsecurity.conf}} and {{Path|/etc/apache2/modules.d/80_modsecurity-crs.conf}} files, then restart Apache.

=== PHP 지원 활성화 ===

Install [[PHP]] with the <code>apache2</code> USE flag and enable the module:

{{FileBox|filename=/etc/conf.d/apache2|title=Enabling the PHP module|lang=bash|1=
APACHE2_OPTS="... -D PHP5"
}}

PHP 모듈이 동작하는지 시험하기 전에 {{Path|/etc/apache2/modules.d/70_mod_php5.conf}} 파일이 있는지, 다음 정의가  있는지 확인하십시오:

{{FileBox|filename=/etc/apache2/modules.d/70_mod_php5.conf|title=Verifying the PHP module will be loaded|lang=apache|1=
<IfDefine PHP5> 
        # Load the module first 
        <IfModule !mod_php5.c> 
                LoadModule php5_module    modules/libphp5.so 
        </IfModule> 
  
        # Set it to handle the files 
        <IfModule mod_mime.c> 
                AddHandler application/x-httpd-php .php .php5 .phtml 
                AddHandler application/x-httpd-php-source .phps 
        </IfModule> 
  
        DirectoryIndex index.php index.phtml 
</IfDefine>
}}

내용이 없으면 직접 입력하십시오.

PHP 모듈이 잘 동작하는지 확인하려면, 테스트 페이지를 만드십시오:

{{FileBox|filename=/var/www/localhost/htdocs/index.php|title=PHP test page|lang=php|1=
<html>
 <body>
  <?php phpinfo(); ?>
 </body>
</html>
}}

이제 {{Path|/var/www/localhost/htdocs/index.html}}를 숨기든지 이름을 바꾸시고 http://localhost/ 테스트 페이지를 여십시오.

표에서는 나타내고자 하는 PHP 설정을 보여줍니다.

==== PHP 버전 수정 === 

아파치에서 다루는 PHP 버전을 바꾸려면, 우선 <code>apache2</code> 서버 애플리케이션 프로그래밍 인터페이스(SAPI) 목록에서 존재하는 버전을 확인하십시오:

{{RootCmd|eselect php list apache2|output=<pre>
 [1]   php5.3
 [2]   php5.4 *
 [3]   php5.5
</pre>}}

선택할 버전으로 바꾸십시오:

{{RootCmd|eselect php set apache2 N}}

위 예제에서 <code>N</code>을 앞서 보여드린 <tt>eselect php list apache2</tt> 요청 출력 결과에 나타난 숫자 값으로 바꾸십시오.

=== 가상 호스트 ===

For each virtual host, provide a <code>DocumentRoot</code> directory that is reachable and accessible by the Apache daemon. Add a virtual host configuration file ({{Path|VirtualHost.conf}}) in the {{Path|/etc/apache2/vhosts.d}} directory which uses this <code>DocumentRoot</code> and the virtual host server name. Do not forget to add an entry for this domain name in {{Path|/etc/hosts}}.

To assign the apache user/group ownership on the virtual host files, use <tt>chown</tt> like in the following example:

{{RootCmd|chown apache:apache /var/www/sitename}}

아래 두가지 가상 호스트 정의 예제에서 하나는 domainname1.com, 다른 하나는 domainname2.com에 대한 정의입니다. 호스트 부분(<code>*:80</code>)은 같게 내버려 두지만, <code>DocumentRoot</code>와 <code>ServerName</code>  지시자의 값은 다름을 눈여겨 보십시오:

{{CodeBox|title=가상 호스트 정의 예제|lang=apache|1=
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website1
    ServerName domainname1.com
</VirtualHost>
  
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website2
    ServerName domainname2.com
</VirtualHost>
}}

이와 같이 IP 기반 가상 호스트 정의를 제공하는 것도 추천합니다. IP 주소를 통해 사이트에 접근하려는 사용자에게 관리자가 메시지를 뿌릴 수 있게 합니다.

{{CodeBox|title=IP-기반 가상 호스트|lang=apache|1=
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/html
    ServerName xxx.xxx.xxx.xxx
</VirtualHost>
}}

가상 호스트를 넣은 다음, 서버는 새 사이트를 활성화 하기 위해 (적절하게) 재시작해야 합니다.

=== fcgid를 통한 PHP 활성화 ===

Install {{Package|www-apache/mod_fcgid}} and {{Package|dev-lang/php}}. The PHP package requires <code>cgi</code> to be set as a USE flag:

{{Emerge|www-apache/mod_fcgid dev-lang/php}}

{{Path|mod_fcgid.conf}} 파일을 편집하십시오:

{{FileBox|filename=/etc/apache2/modules.d/20_mod_fcgid.conf|lang=apache|1=
<IfDefine FCGID>
LoadModule fcgid_module modules/mod_fcgid.so
SocketPath /var/run/fcgidsock
SharememPath /var/run/fcgid_shm
  
AddHandler php-fcgid .php
AddType application/x-httpd-php .php
Action php-fcgid /fcgid-bin/php-fcgid-wrapper
# max request 128mb
FcgidMaxRequestLen 134217728
<Location /fcgid-bin/>
        SetHandler fcgid-script
        Options +ExecCGI
</Location>
</IfDefine>
}}

필요한 디렉터리를 만드십시오: 

{{RootCmd|mkdir /var/www/localhost/htdocs/fcgid-bin}}

PHP 래퍼에 대한 심볼릭 링크를 만드십시오:

{{RootCmd|ln -s /usr/bin/php-cgi /var/www/localhost/htdocs/fcgid-bin/php-fcgid-wrapper}}

fcgid 모듈을 활성화 하십시오:

{{FileBox|filename=/etc/conf.d/apache2|title=Enabling the fcgid module|lang=bash|1=
APACHE2_OPTS="... -D FCGID"
}}

마지막으로 아파치를 다시 시작하고 먼저 만든 페이지의 <code>phpinfo()</code> 사이트가 뜨는지 확인하십시오. <code>Server API</code> 값은 "CGI/FastCGI"여야 합니다.

=== 아파치 2.4에서 mod_proxy_fcgi를 통한 PHP-FPM 활성화 ===

PHP 5.3 이상에서, PHP에서는 FastCGI 프로세스 관리자 또는 FPM 추가 모드를 지원합니다.

The following method relies on the FilesMatch directive and be placed within the main server config or VirtualHosts.  The location of the UNIX socket is determined by the listen directive in the {{Path|php-fpm.conf}}, allowing for specifying separate pools per site or function.

In the following example, it is placed within the PHP module config file of Apache:

{{FileBox|filename=/etc/apache2/modules.d/70_mod_php5.conf|title=Using PHP-FPM|lang=apache|1=
 <IfDefine PHP5>
        <FilesMatch "\.php$">
                SetHandler "proxy:unix:///var/run/php-fpm/www.sock{{!}}fcgi://localhost/"
        </FilesMatch>
  
	# Set it to handle the files
	<IfModule mod_mime.c>
		AddHandler application/x-httpd-php .php .php5 .phtml
		AddHandler application/x-httpd-php-source .phps
	</IfModule>
  
	DirectoryIndex index.php index.phtml
 </IfDefine>
}}

By default the <code>listen</code> directive is not set to a socket. First create the directory for the socket file:

{{RootCmd|mkdir /var/run/php-fpm}}

Next, update the {{Path|php-fpm.conf}} file as follows:

{{FileBox|filename=php-fpm.conf|title=Updating listen directive|lang=apache|1=
; Set permissions for unix socket, if one is used. In Linux, read/write
; permissions must be set in order to allow connections from a web server. Many
; BSD-derived systems allow connections regardless of permissions.
; Default Values: user and group are set as the running user
;                 mode is set to 0666
listen.owner = nobody
listen.group = nobody
;listen.mode = 0666
 
 ; The address on which to accept FastCGI requests.
 ; Valid syntaxes are:
 ;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific address on
 ;                            a specific port;
 ;   'port'                 - to listen on a TCP socket to all addresses on a
 ;                            specific port;
 ;   '/path/to/unix/socket' - to listen on a unix socket.
 ; Note: This value is mandatory.
 ;listen = 127.0.0.1:9000
listen = /var/run/php-fpm/www.sock
}}

PHP 모듈과 프록시 모듈을 활성화합니다:

{{FileBox|filename=/etc/conf.d/apache2|title=PHP 및 프록시 모듈 활성화|lang=bash|1=
APACHE2_OPTS="... -D PHP5 -D PROXY"
}}

== 사용법 ==

=== 서비스 ===

==== OpenRC ====

아파치 서버를 시작하십시오:

{{RootCmd|/etc/init.d/apache2 start}}

기본 런레벨에 아파치를 추가하십시오:

{{RootCmd|rc-update add apache2 default}}

아파치 서비스를 재시작하십시오:

{{RootCmd|/etc/init.d/apache2 restart}}

아파치 설정 파일을 다시 읽으십시오:

{{RootCmd|/etc/init.d/apache2 reload}}

==== systemd ====

아파치 서버를 시작하십시오:

{{RootCmd|systemctl start apache2}}

기본 런레벨에 아파치를 추가하십시오: 

{{RootCmd|systemctl enable apache2}}

아파치 서비스를 다시 시작하십시오: 

{{RootCmd|systemctl restart apache2}}

== 문제 해결 ==

=== 참고 자료 ===

아파치 서버를 제대로 설정하기엔 어려울 수 있습니다. 아래 참고자료는 문제가 있을 경우 도움될 수 있습니다:

* [[Project:Apache/Troubleshooting|문제 해결 안내서]]<sup>en</sup>
* {{Bug|www-servers/apache|search=package}}

=== 시험 ===

아파치2가 어떤 IP 인터페이스에서 실행하고 어떤 포트 상에서 감청하는지 확인하십시오:

{{RootCmd|netstat -tulpen {{!}} grep apache|output=<pre>
tcp     0     0 0.0.0.0:80      0.0.0.0:*     LISTEN     0     10932720     4544/apache2        
tcp     0     0 0.0.0.0:443     0.0.0.0:*     LISTEN     0     10932716     4544/apache2        
</pre>}}

로컬 호스트에서 아파치 서버 연결이 동작하는지 확인하십시오:

{{Cmd|telnet localhost 80|output=<pre>
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
</pre>}}

Interrupt the connection test with {{Key|Ctrl}}+{{Key|c}} and {{Key|Enter}}.

=== apr_sockaddr_info_get() failed for <System_Hostname> ===

'''오류:'''

<pre>apache2: apr_sockaddr_info_get() failed for System_Hostname</pre>

'''해결책:'''

이 오류가 나타나면 {{Path|/etc/hosts}} 파일에 호스트 이름을 추가하십시오:

{{FileBox|filename=/etc/hosts|title=Adding a Hostname for Apache|1=
127.0.0.1 localhost System_Hostname
}}

== 추가 참조 ==

* [[Lighttpd]] - 빠르고 가벼운 웹 서버입.
* [[Nginx]] - 작고 견고한 리버스 프록시 지원 고성능 HTTP 서버

== 외부 자원 ==

* [http://articles.slicehost.com/2010/12/2/installing-apache-on-gentoo Slicehost 게시물: 젠투에 아파치 설치하기]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-files-on-gentoo Slicehost 게시물: 젠투에서 아파치 설정하기]
* [http://articles.slicehost.com/2010/12/3/configuring-the-apache-mpm-on-gentoo Slicehost 게시물: 젠투에서 아파치 MPM 설정하기]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-on-gentoo-part-1 Slicehost 게시물: 젠투에서 아파치 설정하기]
* [http://articles.slicehost.com/2010/12/3/apache-virtual-hosts-on-gentoo-part-1 Slicehost 게시물: 젠투에서 아파치 가상 호스트 설정하기]
* [http://articles.slicehost.com/2010/12/3/enabling-and-using-apache-s-mod_status-on-gentoo Slicehost 게시물: 젠투에서 아파치 mod_status 활성화 하고 사용하기]
* [http://httpd.apache.org/docs/ apache.org 문서]
* [http://gentoo-en.vfose.ru/wiki/Apache2_mod_pagespeed 아파치 2 mod_pagespeed]


[[Category:Web Servers]]
