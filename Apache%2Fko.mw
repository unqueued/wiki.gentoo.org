<languages />

{{Metadata|abstract=아파치 HTTP 서버는 효율적이고 확장성있는 웹서버이며 인터넷에서 가장 널리 사용하는 프로그램중 하나입니다.}}

{{InfoBox stack
|{{InfoBox homepage|http://httpd.apache.org|header=true}}
|{{InfoBox wikipedia|Apache HTTP Server}}
|
}}

"아파치 HTTP 서버"는 효율적이고 확장성있는 [[:Category:Web Servers|웹 서버]]이며 인터넷에서 가장 널리 사용하는 프로그램중 하나입니다.

== 설치 ==

{{Note/ko|업데이트만이 목적이라면 [http://www.gentoo.org/proj/en/apache/doc/upgrading.xml 업그레이드 안내서]를 확인하십시오.}}

{{Emerge|{{Package|www-servers/apache}}}}

=== USE 플래그 ===

{{USEflag|package=www-servers/apache
|debug
|doc
|ldap
|ssl+yes
|static
|suexec
|threads
|APACHE2_MODULES+++See {{Path|[http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/profiles/desc/apache2_modules.desc /usr/portage/profiles/desc/apache2_modules.desc]}}. Enable in your {{Path|make.conf}}.
|APACHE2_MPMS+++See {{Path|[http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/profiles/desc/apache2_mpms.desc /usr/portage/profiles/desc/apache2_mpms.desc]}}. Enable in your {{Path|make.conf}}.
}}

=== 다른 패키지에서의 지원 ===

다른 패키지에서 아파치에 대한 지원을 활성화 하도록 하는 전역 USE 플래그 "apache2"가 있습니다. 어떤 패키지가 아파치를 활용한다면 자동으로 {{Package|www-servers/apache}} 를 끌어오도록 합니다.
{{File|/etc/portage/make.conf||<pre> USE="... apache2 ..." </pre>}}

플래그를 설정하고 나서 바뀐 내용을 적용하려면 다음 명령을 실행하십시오:

{{Emerge|params+=--changed-use --deep|@world}}

== 실행 및 재시작 ==

=== OpenRC ===

아파치 서버를 시작하십시오:

{{RootCmd|/etc/init.d/apache2 start}}

기본 런레벨에 아파치를 추가하십시오:

{{RootCmd|rc-update add apache2 default}}

아파치 서비스를 재시작하십시오:

{{RootCmd|/etc/init.d/apache2 restart}}

아파치 설정 파일을 다시 읽으십시오:

{{RootCmd|/etc/init.d/apache2 reload}}

=== systemd ===

아파치 서버를 시작하십시오:

{{RootCmd|systemctl start apache2}}

아파치를 기본 런레벨에 추가하십시오 

{{RootCmd|systemctl enable apache2}}

아파치 서비스를 다시 시작하십시오: 

{{RootCmd|systemctl restart apache2}}

== 시험 ==

아파치2가 어떤 IP 인터페이스에서 실행하고 어떤 포트 상에서 감청하는지 확인하십시오:

{{RootCmd|netstat -tulpen {{!}} grep apache|output=<pre>
tcp     0     0 0.0.0.0:80      0.0.0.0:*     LISTEN     0     10932720     4544/apache2        
tcp     0     0 0.0.0.0:443     0.0.0.0:*     LISTEN     0     10932716     4544/apache2        
</pre>}}

아파치 서버로의 연결이 동작하는지 로컬 호스트 상에서 시험하십시오:

{{Cmd|telnet localhost 80|output=<pre>
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
</pre>}}

연결 시험을 중단하려면 {{Key|Ctrl}}+{{Key|c}} 와 {{Key|Enter}}키를 누르십시오.

== 설정 ==

=== 설정 파일 ===

시스템의 아파치 동작은 두가지 주요 파일에서 설정합니다: 

* 젠투의 apache2 초기화 스크립트 설정 파일은 {{path|/etc/conf.d/apache2}}입니다

* 아파치 서버의 기존 설정 파일은 {{path|/etc/apache2/httpd.conf}}입니다

==== 젠투의 초기화 스크립트 설정 파일 ====

파일에서 활성화된 줄은 다음과 같습니다:

{{File|/etc/conf.d/apache2||<pre>
APACHE2_OPTS="-D DEFAULT_VHOST -D INFO -D SSL -D SSL_DEFAULT_VHOST -D LANGUAGE"
</pre>}}

이 줄에서는 전체 설정중 일부를 활성화 하거나 비활성화 하는 <code><IfDefine option-name></code> 구문을 사용하여 다양한 설정 파일을 해석합니다. 이 안내서의 나머지 부분에서 적당한 부분으로부터 여기로 다시 돌아올것입니다.

==== 아파치 서버의 기존 설정 파일 - httpd.conf ====

실제 이 파일은 {{Path|/etc/apache2/}} 디렉터리에서 <code>include</code> 지시자로 조합한 잘게 수많은 파일로 쪼개놓은 전체 설정의 '''항목 포인트'''입니다. 예를 들어 {{Path|httpd.conf}}의 <code>Include /etc/apache2/modules.d/*.conf</code> 구문은 {{Path|/etc/apache2/modules.d/}}에서 {{Path|.conf}}로 끝나는 모든 파일의 포함이 목적입니다. 

위의 하위 섹션에서 언급한 내용을 고려하여, 모듈 설정 파일(/etc/apache2/modules.d의 파일)이 거의 항상 <code><IfDefine module-name></code>로 시작하므로, 일치하는 옵션을 {{Path|/etc/conf.d/apache2 }} 파일의 APACHE2_OPTS 변수에서 <code>-D module-name</code> 플래그를 사용하여 설정하면 {{Path|/etc/apache2/modules.d}}에 들어있는 파일 하나의 내용은 설정한 부분끼리만 모입니다. {{Path|00_default_settings.conf}} 설정 파일은 <code>IfDefine</code> 구문으로 시작하지 못했을 때 이 규칙에 대한 예외로 존재하므로 결과 설정에 항상 포함됩니다.

=== 기본 설정 ===

아파치를 새로 설치한 다음의 설정은 다음과 같이 여러가지 설정 파일의 모음으로 이루어져 있습니다. {{Path|/etc/apache2/httpd.conf}}의 항목 포인트에서 시작하도록 하겠습니다.

{{Warning/ko|간단한 참고로"만" 제공하며 전체적인 맥락을 보여드릴 뿐입니다. 설정의 전반적인 내용을 이해하려면 다양한 파일에 포함된 주석을 살펴볼 것을 강력히 권장합니다. 깊게 이해하려면 아파치 메뉴얼을 참고하십시오.}}

{{File|/etc/apache2/http.conf ||<pre>
ServerRoot "/usr/lib64/apache2"
  
#Module loaded unconditionally, assuming the USE flag is no unset in
# /etc/portage/make.conf or in /etc/portage/package.use
LoadModule actions_modulemodules/mod_actions.so
...
#other modules loaded that way : alias_module, auth_basic_module, authn_alias_module,
# authn_anon_module, authn_dbm_module, authn_default_module, authn_file_module, 
# authz_dbm_module, authz_default_module, authz_groupfile_module, authz_host_module, 
# authz_owner_module, authz_user_module, autoindex_module,  cgi_module,  cgid_module, 
# deflate_module, dir_module, env_module, expires_module, ext_filter_module, filter_module,
#  headers_module, include_module,  log_config_module, logio_module, mime_module,  
# mime_magic_module, negotiation_module, rewrite_module, setenvif_module, 
# speling_module,ssl_module, status_module, unique_id_module, usertrack_module, host_alias_module
  
  
#Modules loaded conditionally, assuming matching USE flag is not unset in
# /etc/portage/make.conf or in /etc/portage/package.use (flag to be set in )
<IfDefine AUTHNZ_LDAP>
LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
</IfDefine>
#other modules loaded that way : cache_module, dav_module, dav_fs_module,
# dav_lock_module,disk_cache_module,  file_cache_module, info_module, ldap_module,
# mem_cache_module, userdir_module
  
  
User apache
Group apache
  
# Supplemental configuration
#**************************************************************************************vvv
#this part is included via Include /etc/apache2/modules.d/*.conf 
  
#included from /etc/apache2/modules.d/00_default_settings.conf-------------v
#this is always included as there is not option to deactivate it.
Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 15
UseCanonicalName Off
AccessFileName .htaccess
ServerTokens Prod
TraceEnable off
ServerSignature On 
HostnameLookups Off
EnableMMAP On
EnableSendfile On
FileEtag INode MTime Size
ContentDigest Off
ErrorLog /var/log/apache2/error_log
LogLevel warn
  
<Directory />
	Options FollowSymLinks
	AllowOverride None
	Order deny,allow
	Deny from all
</Directory>
  
<IfModule dir_module>
	DirectoryIndex index.html index.html.var
</IfModule>
<FilesMatch "^\.ht">
	Order allow,deny
	Deny from all
</FilesMatch>
#--------------------------------------------------------------------------^
  
#included from 00_mod_info.conf--------------------------------------------v
<IfDefine INFO>
<Location /server-info>
	SetHandler server-info
	Order deny,allow
	Deny from all
	Allow from 127.0.0.1
</Location>
</IfDefine>
#--------------------------------------------------------------------------^
  
#--------------------------------------------------------------------------v
#included from 00_languages.conf
# Settings for hosting different languages.
<IfDefine LANGUAGE>
  
	AddLanguage ca .ca
	...
	AddLanguage zh-TW .zh-tw
  
	LanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn no pl pt pt-BR ru sv zh-CN zh-TW
  
	ForceLanguagePriority Prefer Fallback
  
	AddCharset us-ascii.ascii	.us-ascii
	AddCharset ISO-8859-1		.iso8859-1 .latin1
	...
	AddCharset shift_jis		.shift_jis .sjis
</IfDefine>
#---------------------------------------------------------------------------^
#**************************************************************************************^^^
  
  
#***************************************************************************************vvv
#this part is included via Include /etc/apache2/vhosts.d/*.conf 
#from 00_default_ssl_vhost.conf-----------------------------------------------------vv
<IfDefine SSL>
	<IfDefine SSL_DEFAULT_VHOST>
		<IfModule ssl_module>
			Listen 443
  
			<VirtualHost _default_:443>
				ServerName localhost
                                #------------------------------------------v
				# this part is included via Include /etc/apache2/vhosts.d/default_vhost.include
				ServerAdmin root@localhost
				DocumentRoot "/var/www/localhost/htdocs"
  
  	
				<Directory "/var/www/localhost/htdocs">
	   				Options Indexes FollowSymLinks
	   				AllowOverride All
	   				Order allow,deny
	   				Allow from all
				</Directory>
  
				<IfModule alias_module>
	   				ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
				</IfModule>
  
				<Directory "/var/www/localhost/cgi-bin">
	   				AllowOverride None
	   				Options None
	   				Order allow,deny
	   				Allow from all
				</Directory>
        			#end of Include ---------------------------^
  	
				ErrorLog /var/log/apache2/ssl_error_log
  
				<IfModule log_config_module>
					TransferLog /var/log/apache2/ssl_access_log
				</IfModule>
				SSLEngine on
				SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
				SSLCertificateFile /etc/ssl/apache2/server.crt
				SSLCertificateKeyFile /etc/ssl/apache2/server.key
  
				<FilesMatch "\.(cgi|shtml|phtml|php)$">
					SSLOptions +StdEnvVars
				</FilesMatch>
  
				<Directory "/var/www/localhost/cgi-bin">
					SSLOptions +StdEnvVars
				</Directory>
  
				<IfModule setenvif_module>
					BrowserMatch ".*MSIE.*" \
					nokeepalive ssl-unclean-shutdown \
					downgrade-1.0 force-response-1.0
				</IfModule>
  
  
				<IfModule log_config_module>
					CustomLog /var/log/apache2/ssl_request_log \
					"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
					</IfModule>
			</VirtualHost>
		</IfModule>
	</IfDefine>
</IfDefine>
#---------------------------------------------------------------------------------^^
#from 00_default_vhost.conf-------------------------------------------------------vv
<IfDefine DEFAULT_VHOST>
	Listen 80
	NameVirtualHost *:80
  
	<VirtualHost *:80>
		ServerName localhost
  
		#---------------------------------------------------------------v
		# this part is included via Include /etc/apache2/vhosts.d/default_vhost.include
		ServerAdmin root@localhost
		DocumentRoot "/var/www/localhost/htdocs"
  
  	
		<Directory "/var/www/localhost/htdocs">
	   		Options Indexes FollowSymLinks
	   		AllowOverride All
	   		Order allow,deny
	   		Allow from all
		</Directory>
  
		<IfModule alias_module>
	   		ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
		</IfModule>
  
		<Directory "/var/www/localhost/cgi-bin">
	   		AllowOverride None
	   		Options None
	   		Order allow,deny
	   		Allow from all
		</Directory>
        	#end of Include -----------------------------------------------^
  
		<IfModule mpm_peruser_module>
			ServerEnvironment apache apache
		</IfModule>
	</VirtualHost>
</IfDefine>
#-----------------------------------------------------------------------------------^^
# end of include ****************************************************************************************^^^
</pre>}}

=== 첫 생존 신호 ===

위의 초기 설정내용에서 보셨다시피 이미 설치한 가상 호스트의 <code>DocumentRoot</code> 디렉터리는 서버 이름을 ''localhost''로 지정한 {{Path|/var/www/localhost/htdocs}}입니다. index.html을 <code>DocumentRoot</code>에서 설정하므로 모든 요소를 올바르게 설치했는지 여부를 보려면 [http://www.localhost http://www.localhost]를 열어보십시오.

페이지에 "It works !" 메시지를 볼 수 있어야 합니다.

{{Warning/ko|특별히, 파이어폭스에서는 탐색 표시줄에 URL을 잘못 입력하는 사용자를 돕는 기능을 넣었습니다. URL 해석에 실패하면, 파이어폭스에서는 실제 의도했-을 수도 있는- URL의 .com을 뒤에 붙이거나 www. 을 앞에 붙이는 몇가지 대체 방안을 제시합니다.

파이어폭스 이전 버전에 도입한 이 기능은 개발자들에게 귀찮은 존재입니다. 이 기능은 그러니까 localhost에서 서버가 실행중일 경우 응답에 실패했을 때, 결국 페이지를 찾을 수 없는 localhost.com이나 www.localhost.com을 찾아보도록 결정하게 함을 의미합니다.

이 `기능`을 비활성화 하려면 다음과 같이 하십시오:

# <tt>about:config</tt>를 탐색 표시줄에 입력하십시오
# 검색 입력창에 <tt>browser.fixup.alternate.enabled</tt>를 입력하십시오
# 하단에 나타난 <tt>browser.fixup.alternate.enabled</tt>에서 마우스 오른쪽 버튼을 누르고, 값을 false로 설정하십시오.
}}

=== 보안 모듈 활성화 ===

{{emerge|mod_security}}

{{File|/etc/conf.d/apache2||<pre>
APACHE2_OPTS="... -D SECURITY"
</pre>}}

{{Path|/etc/apache2/modules.d/79_modsecurity.conf}} 와 {{Path|/etc/apache2/modules.d/80_modsecurity-crs.conf}}를 편집하여 모듈을 처리한 다음 아파치를 다시 시작하십시오.

=== PHP 지원 활성화 ===

''apache2'' USE 플래그를 넣고 [[PHP]]를 설치한 다음 모듈을 활성화 하십시오:

{{File|/etc/conf.d/apache2||<pre>
APACHE2_OPTS="... -D PHP5"
</pre>}}

PHP 모듈이 동작하는지 시험하기 전에 {{Path|/etc/apache2/modules.d/70_mod_php5.conf}} 파일이 있는지, 다음 정의가  있는지 확인하십시오:

{{File|/etc/apache2/modules.d/70_mod_php5.conf||<pre>
<IfDefine PHP5> 
        # Load the module first 
        <IfModule !mod_php5.c> 
                LoadModule php5_module    modules/libphp5.so 
        </IfModule> 
  
        # Set it to handle the files 
        <IfModule mod_mime.c> 
                AddHandler application/x-httpd-php .php .php5 .phtml 
                AddHandler application/x-httpd-php-source .phps 
        </IfModule> 
  
        DirectoryIndex index.php index.phtml 
</IfDefine>
</pre>}}

내용이 없으면 직접 넣으십시오.

PHP 모듈이 잘 동작하는지 시험하려면, 테스트 페이지를 만드십시오:

{{File|/var/www/localhost/htdocs/index.php||<pre>
<html>
 <body>
  <?php phpinfo(); ?>
 </body>
</html>
</pre>}}

이제 {{Path|/var/www/localhost/htdocs/index.html}}를 숨기든지 이름을 바꾸시고 http://localhost/ 테스트 페이지를 여십시오. PHP 설정을 설명하는 표를 볼 수 있어야 합니다.

=== 가상 호스트 추가하기 ===

각각의 가상 호스트에 아파치 데몬에서 도달 및 접근 가능한 <code>DocumentRoot</code> 디렉터리를 제공하십시오. 이 <code>DocumentRoot</code> 와 가상 호스트 서버 이름을 제공하는 {{Path|/etc/apache2/vhosts.d}} 디렉터리의 가상 호스트 파일({{Path|myVirtualHost.conf}})을 추가하시고, {{Path|/etc/hosts}} 파일에 이 도메인 이름에 대한 항목을 추가하는 것을 잊지 마십시오.

아파치 가상 호스트 파일에 사용자/그룹 소유권한할당하려면 다음과 같이 <code>chown</code> 명령을 활용하십시오:

{{RootCmd|chown apache:apache /var/www/sitename}}

아래 두가지 가상 호스트 정의 예제에서 하나는 domainname1.com, 다른 하나는 domainname2.com에 대한 정의입니다. 호스트 부분(<code>*:80</code>)은 같게 내버려 두지만, <code>DocumentRoot</code>와 <code>ServerName</code>  지시자의 값은 다름을 눈여겨 보십시오:

{{Code|가상 호스트 정의 예제|<pre>
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website1
    ServerName domainname1.com
</VirtualHost>
  
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website2
    ServerName domainname2.com
</VirtualHost>
</pre>}}

이와 같이 IP 기반 가상 호스트 정의를 제공하는 것도 추천합니다. IP 주소를 통해 사이트에 접근하려는 사용자에게 관리자가 메시지를 뿌릴 수 있게 합니다.

{{Code|IP-기반 가상 호스트|<pre>
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/html
    ServerName xxx.xxx.xxx.xxx
</VirtualHost>
</pre>}}

가상 호스트를 넣은 다음, 서버는 새 사이트를 활성화 하기 위해 (적절하게) 재시작해야 합니다.

=== fcgid를 통한 PHP 활성화 ===

{{Package|www-apache/mod_fcgid}} 와 {{Package|dev-lang/php}}를 설치하십시오. PHP 패치지에 cgi USE 플래그를 넣어야 합니다:

{{emerge|mod_fcgid php}}

{{Path|mod_fcgid.conf}} 파일을 편집하십시오:

{{File|/etc/apache2/modules.d/20_mod_fcgid.conf||<pre>
<IfDefine FCGID>
LoadModule fcgid_module modules/mod_fcgid.so
SocketPath /var/run/fcgidsock
SharememPath /var/run/fcgid_shm
  
AddHandler php-fcgid .php
AddType application/x-httpd-php .php
Action php-fcgid /fcgid-bin/php-fcgid-wrapper
# max request 128mb
FcgidMaxRequestLen 134217728
<Location /fcgid-bin/>
        SetHandler fcgid-script
        Options +ExecCGI
</Location>
</IfDefine>
</pre>}}

필요한 디렉터리를 만드십시오: 

{{RootCmd|mkdir /var/www/localhost/htdocs/fcgid-bin}}

PHP 래퍼에 대한 심볼릭 링크를 만드십시오:

{{RootCmd|ln -s /usr/bin/php-cgi /var/www/localhost/htdocs/fcgid-bin/php-fcgid-wrapper}}

fcgid 모듈을 활성화 하십시오:

{{File|/etc/conf.d/apache2||<pre>
APACHE2_OPTS="... -D FCGID"
</pre>}}

마지막으로 아파치를 다시 시작하고 먼저 만든 페이지의 <code>phpinfo()</code> 사이트가 뜨는지 확인하십시오. <code>Server API</code> 값은 "CGI/FastCGI"여야 합니다.

=== 아파치 2.4에서 mod_proxy_fcgi를 통한 PHP-FPM 활성화 ===

PHP 5.3 이상에서, PHP에서는 FastCGI 프로세스 관리자 또는 FPM 추가 모드를 지원합니다.

The following method relies on the FilesMatch directive and be placed within the main server config or VirtualHosts.  The location of the UNIX socket is determined by the listen directive in the {{Path|php-fpm.conf}}, allowing for specifying separate pools per site/function.

In the following example, it is placed within the PHP module config file.:

{{File|/etc/conf.d/70_mod_php5.conf|Using PHP-FPM|<pre>
 <IfDefine PHP5>
        <FilesMatch "\.php$">
                SetHandler "proxy:unix:///var/run/php-fpm/www.sock|fcgi://localhost/"
        </FilesMatch>
  
	# Set it to handle the files
	<IfModule mod_mime.c>
		AddHandler application/x-httpd-php .php .php5 .phtml
		AddHandler application/x-httpd-php-source .phps
	</IfModule>

	DirectoryIndex index.php index.phtml
 </IfDefine>
</pre>}}

Then enable both the PHP and proxy modules:

{{File|/etc/conf.d/apache2|Enabling PHP and proxy modules|<pre>
APACHE2_OPTS="... -D PHP5 -D PROXY"
</pre>}}

== 문제 해결 ==

* [http://www.gentoo.org/proj/en/apache/doc/troubleshooting.xml 문제 해결 안내서]
* {{Bug|www-servers/apache|search=package}}

=== 일반 문제 ===
아파치를 시작할 때 다음 오류를 볼 수 있습니다:

{{Code||<pre>apache2: apr_sockaddr_info_get() failed for SomeHostname
</pre>}}

이 오류가 나타나면 {{Path|/etc/hosts}} 파일에 호스트 이름을 추가하십시오.

{{file|/etc/hosts||127.0.0.1 localhost SomeHostname
}}

== 추가 참조 ==

* [[Lighttpd]] - 빠르고 가벼운 웹 서버입니다.
* [[Nginx]] - 작고 견고한 고성능 HTTP 서버

== 외부 자원 ==

* [http://articles.slicehost.com/2010/12/2/installing-apache-on-gentoo Slicehost 게시물: 젠투에 아파치 설치하기]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-files-on-gentoo Slicehost 게시물: 젠투에서 아파치 설정하기]
* [http://articles.slicehost.com/2010/12/3/configuring-the-apache-mpm-on-gentoo Slicehost 게시물: 젠투에서 아파치 MPM 설정하기]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-on-gentoo-part-1 Slicehost 게시물: 젠투에서 아파치 설정하기]
* [http://articles.slicehost.com/2010/12/3/apache-virtual-hosts-on-gentoo-part-1 Slicehost 게시물: 젠투에서 아파치 가상 호스트 설정하기]
* [http://articles.slicehost.com/2010/12/3/enabling-and-using-apache-s-mod_status-on-gentoo Slicehost 게시물: 젠투에서 아파치 mod_status 활성화 하고 사용하기]
* [http://httpd.apache.org/docs/ apache.org 문서]
* [http://gentoo-en.vfose.ru/wiki/Apache2_mod_pagespeed 아파치 2 mod_pagespeed]


[[Category:Web Servers]]
