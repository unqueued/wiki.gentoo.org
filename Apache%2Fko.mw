<languages />

{{Metadata|abstract=아파치 HTTP 서버는 효율적이고 확장성있는 웹서버이며 인터넷에서 가장 널리 사용하는 프로그램중 하나입니다.}}

{{InfoBox stack
|{{InfoBox homepage|http://httpd.apache.org|header=true}}
|{{InfoBox wikipedia|Apache HTTP Server}}
|
}}

"아파치 HTTP 서버"는 효율적이고 확장성있는 [[:Category:Web Servers|웹 서버]]이며 인터넷에서 가장 널리 사용하는 프로그램중 하나입니다.

== 설치 ==

{{Note/ko|업데이트 목적으로라면 [http://www.gentoo.org/proj/en/apache/doc/upgrading.xml 업그레이드 안내서]를 확인하십시오.}}

{{Emerge|{{Package|www-servers/apache}}}}

=== USE 플래그 ===

{{USEflag|package=www-servers/apache
|debug
|doc
|ldap
|ssl+yes
|static
|suexec
|threads
|APACHE2_MODULES+++See {{Path|[http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/profiles/desc/apache2_modules.desc /usr/portage/profiles/desc/apache2_modules.desc]}}. Enable in your {{Path|make.conf}}.
|APACHE2_MPMS+++See {{Path|[http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/profiles/desc/apache2_mpms.desc /usr/portage/profiles/desc/apache2_mpms.desc]}}. Enable in your {{Path|make.conf}}.
}}

=== 다른 패키지에서의 지원 ===

다른 패키지에서 아파치에 대한 지원을 활성화 하도록 하는 전역 USE 플래그 "apache2"가 있습니다. 어떤 패키지가 아파치를 활용한다면 자동으로 {{Package|www-servers/apache}} 를 끌어오도록 합니다.
{{File|/etc/portage/make.conf||<pre> USE="... apache2 ..." </pre>}}

플래그를 설정하고 나서 바뀐 내용을 적용하려면 다음 명령을 실행하십시오:

{{Emerge|params+=--changed-use --deep|@world}}

== 실행 및 재시작 ==

=== OpenRC ===

아파치 서버를 시작하십시오:

{{RootCmd|/etc/init.d/apache2 start}}

기본 런레벨에 아파치를 추가하십시오:

{{RootCmd|rc-update add apache2 default}}

아파치 서비스를 재시작하십시오:

{{RootCmd|/etc/init.d/apache2 restart}}

아파치 설정 파일을 다시 읽으십시오:

{{RootCmd|/etc/init.d/apache2 reload}}

=== systemd ===

아파치 서버를 시작하십시오:

{{RootCmd|systemctl start apache2}}

아파치를 기본 런레벨에 추가하십시오 

{{RootCmd|systemctl enable apache2}}

아파치 서비스를 다시 시작하십시오: 

{{RootCmd|systemctl restart apache2}}

== 시험 ==

아파치2가 어떤 IP 인터페이스에서 실행하고 어떤 포트 상에서 감청중인지 검증하십시오:

{{RootCmd|netstat -tulpen {{!}} grep apache|output=<pre>
tcp     0     0 0.0.0.0:80      0.0.0.0:*     LISTEN     0     10932720     4544/apache2        
tcp     0     0 0.0.0.0:443     0.0.0.0:*     LISTEN     0     10932716     4544/apache2        
</pre>}}

아파치 서버로의 연결이 동작하는지 로컬 호스트 상에서 시험하십시오:

{{Cmd|telnet localhost 80|output=<pre>
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
</pre>}}

연결 시험을 중단하려면 {{Key|Ctrl}}+{{Key|c}} 와 {{Key|Enter}}키를 누르십시오.

== 설정 ==

=== 설정 파일 ===

시스템의 아파치 동작을 설정하는 두개의 주된 파일이 있습니다: 

* 젠투의 apache2 초기화 스크립트 설정 파일은 {{path|/etc/conf.d/apache2}}입니다

* 아파치 서버의 기존 설정 파일은 {{path|/etc/apache2/httpd.conf}}입니다

==== 젠투의 초기화 스크립트 설정 파일 ====

파일에서 활성화된 줄은 다음과 같습니다:

{{File|/etc/conf.d/apache2||<pre>
APACHE2_OPTS="-D DEFAULT_VHOST -D INFO -D SSL -D SSL_DEFAULT_VHOST -D LANGUAGE"
</pre>}}

이 줄에서는 전체 설정중 일부를 활성화 하거나 비활성화 하는 <code><IfDefine option-name></code> 구문을 사용하여 다양한 설정 파일을 해석합니다. 이 안내서의 나머지 부분에서 적당한 부분으로부터 여기로 다시 돌아올것입니다.

==== 아파치 서버의 기존 설정 파일 - httpd.conf ====

실제 이 파일은 {{Path|/etc/apache2/}} 디렉터리에서 <code>include</code> 지시자로 조합한 잘게 수많은 파일로 쪼개놓은 전체 설정의 '''항목 포인트'''입니다. 예를 들어 {{Path|httpd.conf}}의 <code>Include /etc/apache2/modules.d/*.conf</code> 구문은 {{Path|/etc/apache2/modules.d/}}에서 {{Path|.conf}}로 끝나는 모든 파일의 포함이 목적입니다. 

Taking into account what has been said in the subsection above, and as module configuration files (files in /etc/apache2/modules.d) almost always start with the <code><IfDefine module-name></code>, the content of one file inside {{Path|/ect/apache2/modules.d}}, will ONLY be assembled with the rest of the configuration, if the matching option is set using a <code>-D module-name</code> flag in the APACHE2_OPTS variable in the {{Path|/etc/conf.d/apache2 }} file. The {{Path|00_default_settings.conf}} configuration file is an exception to this rule as it doesn't start with an <code>IfDefine</code> statement and therefore is always included in the resulting configuration.

=== 기본 설정 ===

아파치를 새로 설치한 다음의 설정은 다음과 같이 여러가지 설정 파일의 모음으로 이루어져 있습니다. {{Path|/etc/apache2/httpd.conf}}의 항목 포인트에서 시작하도록 하겠습니다.

{{Warning| This is ''only'' given for quick reference and to give you an overall view. You are strongly invited to review the comments included in the various files to understand the ins and out of the configuration. Please also refer to the apache manual for an  in depth understanding.}}

{{File|http.d ||<pre>
ServerRoot "/usr/lib64/apache2"
  
#Module loaded unconditionally, assuming the USE flag is no unset in
# /etc/portage/make.conf or in /etc/portage/package.use
LoadModule actions_modulemodules/mod_actions.so
...
#other modules loaded that way : alias_module, auth_basic_module, authn_alias_module,
# authn_anon_module, authn_dbm_module, authn_default_module, authn_file_module, 
# authz_dbm_module, authz_default_module, authz_groupfile_module, authz_host_module, 
# authz_owner_module, authz_user_module, autoindex_module,  cgi_module,  cgid_module, 
# deflate_module, dir_module, env_module, expires_module, ext_filter_module, filter_module,
#  headers_module, include_module,  log_config_module, logio_module, mime_module,  
# mime_magic_module, negotiation_module, rewrite_module, setenvif_module, 
# speling_module,ssl_module, status_module, unique_id_module, usertrack_module, host_alias_module
  
  
#Modules loaded conditionally, assuming matching USE flag is not unset in
# /etc/portage/make.conf or in /etc/portage/package.use (flag to be set in )
<IfDefine AUTHNZ_LDAP>
LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
</IfDefine>
#other modules loaded that way : cache_module, dav_module, dav_fs_module,
# dav_lock_module,disk_cache_module,  file_cache_module, info_module, ldap_module,
# mem_cache_module, userdir_module
  
  
User apache
Group apache
  
# Supplemental configuration
#**************************************************************************************vvv
#this part is included via Include /etc/apache2/modules.d/*.conf 
  
#included from /etc/apache2/modules.d/00_default_settings.conf-------------v
#this is always included as there is not option to deactivate it.
Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 15
UseCanonicalName Off
AccessFileName .htaccess
ServerTokens Prod
TraceEnable off
ServerSignature On 
HostnameLookups Off
EnableMMAP On
EnableSendfile On
FileEtag INode MTime Size
ContentDigest Off
ErrorLog /var/log/apache2/error_log
LogLevel warn
  
<Directory />
	Options FollowSymLinks
	AllowOverride None
	Order deny,allow
	Deny from all
</Directory>
  
<IfModule dir_module>
	DirectoryIndex index.html index.html.var
</IfModule>
<FilesMatch "^\.ht">
	Order allow,deny
	Deny from all
</FilesMatch>
#--------------------------------------------------------------------------^
  
#included from 00_mod_info.conf--------------------------------------------v
<IfDefine INFO>
<Location /server-info>
	SetHandler server-info
	Order deny,allow
	Deny from all
	Allow from 127.0.0.1
</Location>
</IfDefine>
#--------------------------------------------------------------------------^
  
#--------------------------------------------------------------------------v
#included from 00_languages.conf
# Settings for hosting different languages.
<IfDefine LANGUAGE>
  
	AddLanguage ca .ca
	...
	AddLanguage zh-TW .zh-tw
  
	LanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn no pl pt pt-BR ru sv zh-CN zh-TW
  
	ForceLanguagePriority Prefer Fallback
  
	AddCharset us-ascii.ascii	.us-ascii
	AddCharset ISO-8859-1		.iso8859-1 .latin1
	...
	AddCharset shift_jis		.shift_jis .sjis
</IfDefine>
#---------------------------------------------------------------------------^
#**************************************************************************************^^^
  
  
#***************************************************************************************vvv
#this part is included via Include /etc/apache2/vhosts.d/*.conf 
#from 00_default_ssl_vhost.conf-----------------------------------------------------vv
<IfDefine SSL>
	<IfDefine SSL_DEFAULT_VHOST>
		<IfModule ssl_module>
			Listen 443
  
			<VirtualHost _default_:443>
				ServerName localhost
                                #------------------------------------------v
				# this part is included via Include /etc/apache2/vhosts.d/default_vhost.include
				ServerAdmin root@localhost
				DocumentRoot "/var/www/localhost/htdocs"
  
  	
				<Directory "/var/www/localhost/htdocs">
	   				Options Indexes FollowSymLinks
	   				AllowOverride All
	   				Order allow,deny
	   				Allow from all
				</Directory>
  
				<IfModule alias_module>
	   				ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
				</IfModule>
  
				<Directory "/var/www/localhost/cgi-bin">
	   				AllowOverride None
	   				Options None
	   				Order allow,deny
	   				Allow from all
				</Directory>
        			#end of Include ---------------------------^
  	
				ErrorLog /var/log/apache2/ssl_error_log
  
				<IfModule log_config_module>
					TransferLog /var/log/apache2/ssl_access_log
				</IfModule>
				SSLEngine on
				SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
				SSLCertificateFile /etc/ssl/apache2/server.crt
				SSLCertificateKeyFile /etc/ssl/apache2/server.key
  
				<FilesMatch "\.(cgi|shtml|phtml|php)$">
					SSLOptions +StdEnvVars
				</FilesMatch>
  
				<Directory "/var/www/localhost/cgi-bin">
					SSLOptions +StdEnvVars
				</Directory>
  
				<IfModule setenvif_module>
					BrowserMatch ".*MSIE.*" \
					nokeepalive ssl-unclean-shutdown \
					downgrade-1.0 force-response-1.0
				</IfModule>
  
  
				<IfModule log_config_module>
					CustomLog /var/log/apache2/ssl_request_log \
					"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
					</IfModule>
			</VirtualHost>
		</IfModule>
	</IfDefine>
</IfDefine>
#---------------------------------------------------------------------------------^^
#from 00_default_vhost.conf-------------------------------------------------------vv
<IfDefine DEFAULT_VHOST>
	Listen 80
	NameVirtualHost *:80
  
	<VirtualHost *:80>
		ServerName localhost
  
		#---------------------------------------------------------------v
		# this part is included via Include /etc/apache2/vhosts.d/default_vhost.include
		ServerAdmin root@localhost
		DocumentRoot "/var/www/localhost/htdocs"
  
  	
		<Directory "/var/www/localhost/htdocs">
	   		Options Indexes FollowSymLinks
	   		AllowOverride All
	   		Order allow,deny
	   		Allow from all
		</Directory>
  
		<IfModule alias_module>
	   		ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
		</IfModule>
  
		<Directory "/var/www/localhost/cgi-bin">
	   		AllowOverride None
	   		Options None
	   		Order allow,deny
	   		Allow from all
		</Directory>
        	#end of Include -----------------------------------------------^
  
		<IfModule mpm_peruser_module>
			ServerEnvironment apache apache
		</IfModule>
	</VirtualHost>
</IfDefine>
#-----------------------------------------------------------------------------------^^
# end of include ****************************************************************************************^^^
</pre>}}

=== 생존(?) 첫 신호 ===

위의 초기 설정내용에서 보셨다시피 이미 설치한 가상 호스트의 <code>DocumentRoot</code> 디렉터리는 서버 이름을 ''localhost''로 지정하는 {{Path|/var/www/localhost/htdocs}}입니다. 게다가 index.html을 <code>DocumentRoot</code>에서 제공하므로 모든 요소가 올바르게 설치했는지 아닌지보려면 [http://www.localhost http://www.localhost]를 열도록 해보십시오.

페이지에 "It works !" 메시지를 볼 수 있어야 합니다.

=== 보안 모듈 활성화 ===

{{emerge|mod_security}}

{{File|/etc/conf.d/apache2||<pre>
APACHE2_OPTS="... -D SECURITY"
</pre>}}

{{Path|/etc/apache2/modules.d/79_modsecurity.conf}} 와 {{Path|/etc/apache2/modules.d/80_modsecurity-crs.conf}}를 편집하여 모듈을 처리한 다음 아파치를 다시 시작하십시오.

=== PHP 지원 활성화 ===

''apache2'' USE 플래그를 넣고 [[PHP]]를 설치한 다음 모듈을 활성화 하십시오:

{{File|/etc/conf.d/apache2||<pre>
APACHE2_OPTS="... -D PHP5"
</pre>}}

PHP 모듈이 잘 동작하는지 시험하려면, 테스트 페이지를 만드십시오:

{{File|/var/www/localhost/htdocs/index.php||<pre>
<html>
 <body>
  <?php phpinfo(); ?>
 </body>
</html>
</pre>}}

이제 http://localhost/ 테스트 페이지를 여십시오. PHP 설정을 설명하는 표를 볼 수 있어야 합니다.

=== 가상 호스트 추가하기 ===

For each virtual host, provide a <code>DocumentRoot</code> directory that is reachable and accessible by the Apache daemon. Add a virtual host configuration file ({{Path|myVirtualHost.conf}}) in the {{Path|/etc/apache2/vhosts.d}} directory which uses this <code>DocumentRoot</code> and the virtual host server name, and don't forget to add an entry for this domain name in {{Path|/etc/hosts}}.

To assign the apache user/group ownership on the virtual host files, use <code>chown</code> like in the following example:

{{RootCmd|chown apache:apache /var/www/sitename}}

Below are two example virtual host definitions, one for domainname1.com and one for domainname2.com. Notice the different <code>DocumentRoot</code> and <code>ServerName</code> directives even though the host itself (<code>*:80</code>) remains the same:

{{Code|Example virtual host definitions|<pre>
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website1
    ServerName domainname1.com
</VirtualHost>
  
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website2
    ServerName domainname2.com
</VirtualHost>
</pre>}}

It is recommended to provide an IP based virtual host definition as well. This allows the administrator to put up a message for users that try to reach a site through its IP address:

{{Code|IP-based virtual host|<pre>
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/html
    ServerName xxx.xxx.xxx.xxx
</VirtualHost>
</pre>}}

After inserting virtual hosts, the server needs to be (gracefully) restarted for the new sites to become active.

=== fcgid를 통한 PHP 활성화 ===

{{Package|www-apache/mod_fcgid}} 와 {{Package|dev-lang/php}}를 설치하십시오. PHP 패치지에 cgi USE 플래그를 넣어야 합니다:

{{emerge|mod_fcgid php}}

{{Path|mod_fcgid.conf}} 파일을 편집하십시오:

{{File|/etc/apache2/modules.d/20_mod_fcgid.conf||<pre>
<IfDefine FCGID>
LoadModule fcgid_module modules/mod_fcgid.so
SocketPath /var/run/fcgidsock
SharememPath /var/run/fcgid_shm
  
AddHandler php-fcgid .php
AddType application/x-httpd-php .php
Action php-fcgid /fcgid-bin/php-fcgid-wrapper
# max request 128mb
FcgidMaxRequestLen 134217728
<Location /fcgid-bin/>
        SetHandler fcgid-script
        Options +ExecCGI
</Location>
</IfDefine>
</pre>}}

필요한 디렉터리를 만드십시오: 

{{RootCmd|mkdir /var/www/localhost/htdocs/fcgid-bin}}

PHP 래퍼에 대한 심볼릭 링크를 만드십시오:

{{RootCmd|ln -s /usr/bin/php-cgi /var/www/localhost/htdocs/fcgid-bin/php-fcgid-wrapper}}

fcgid 모듈을 활성화 하십시오:

{{File|/etc/conf.d/apache2||<pre>
APACHE2_OPTS="... -D FCGID"
</pre>}}

마지막으로 아파치를 다시 시작하고 먼저 만든 페이지의 <code>phpinfo()</code> 사이트가 뜨는지 확인하십시오. <code>Server API</code> 값은 "CGI/FastCGI"여야 합니다.

== 문제 해결 ==

* [http://www.gentoo.org/proj/en/apache/doc/troubleshooting.xml 문제 해결 안내서]
* {{Bug|www-servers/apache|search=package}}

=== 일반 문제 ===
아파치를 시작할 때 다음 오류를 볼 수 있습니다:

{{Code||<pre>apache2: apr_sockaddr_info_get() failed for SomeHostname
</pre>}}

이 오류가 나타나면 {{Path|/etc/hosts}} 파일에 호스트 이름을 추가하십시오.

{{file|/etc/hosts||127.0.0.1 localhost SomeHostname
}}

== 추가 참조 ==

* [[Lighttpd]] - 빠르고 가벼운 웹 서버입니다.
* [[Nginx]] - 작고 견고한 고성능 HTTP 서버

== 외부 자원 ==

* [http://articles.slicehost.com/2010/12/2/installing-apache-on-gentoo Slicehost 게시물: 젠투에 아파치 설치하기]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-files-on-gentoo Slicehost 게시물: 젠투에서 아파치 설정하기]
* [http://articles.slicehost.com/2010/12/3/configuring-the-apache-mpm-on-gentoo Slicehost 게시물: 젠투에서 아파치 MPM 설정하기]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-on-gentoo-part-1 Slicehost 게시물: 젠투에서 아파치 설정하기]
* [http://articles.slicehost.com/2010/12/3/apache-virtual-hosts-on-gentoo-part-1 Slicehost 게시물: 젠투에서 아파치 가상 호스트 설정하기]
* [http://articles.slicehost.com/2010/12/3/enabling-and-using-apache-s-mod_status-on-gentoo Slicehost 게시물: 젠투에서 아파치 mod_status 활성화 하고 사용하기]
* [http://httpd.apache.org/docs/ apache.org 문서]
* [http://gentoo-en.vfose.ru/wiki/Apache2_mod_pagespeed 아파치 2 mod_pagespeed]


[[Category:Web Servers]]
