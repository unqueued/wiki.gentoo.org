<languages />
{{Metadata|abstract=Monit is a utility for managing and monitoring processes, programs, files, directories and filesystems on a UNIX system.}}
{{InfoBox stack
|{{InfoBox homepage|http://mmonit.com/monit/|header=true}}
|{{InfoBox wikipedia|Monit}}
|{{InfoBox ohloh}}
}}

{{Package|app-admin/monit}} 是一个 管理和监控 UNIX 系统进程、程序、文件、目录和文件系统的工具。 

== 配置 ==

=== 安装 monit ===

{{Package|app-admin/monit}} 应用有两个 USE flags: 

{{USEflag
|package=app-admin/monit
|pam++yes
|ssl++yes
}}

一旦确定了 USE flags, 通过 <kbd>emerge</kbd> 安装 {{Package|app-admin/monit}}：

{{Emerge|app-admin/monit}}

=== Monit 配置文件 ===

Monit 程序使用 {{Path|/etc/monitrc}} 作为配置文件。

为更方便的添加和删除监控选项，<tt>monit</tt> 支持在配置文件中包含指定目录下的文件（通常是 {{Path|/etc/monit.d}}）。要使用此特性，编辑 {{Path|/etc/monitrc}} 文件如下：

{{FileBox|filename=/etc/monitrc|允许灵活的配置选项|1=
## It is possible to include additional configuration parts from other files or
## directories.
include /etc/monit.d/*
}}

当修改了一个 Monit 配置文件的时候，使用下面的命令让 <tt>monit</tt> 重新读取配置设定：

{{RootCmd|monit reload}}

=== 开机自动启动 Monit ===

推荐通过 {{Path|/etc/inittab }} 启动 <tt>monit</tt>，这样的话 <tt>init</tt> 会启动 <tt>monit</tt>，并且会在 <tt>monit</tt> 突然死掉的时候自动重启它。通过 init 脚本启动 <tt>monit</tt> 将不会提供这一功能。

{{FileBox|filename=/etc/inittab|title=在 monit 死掉的时候自动重启|1=
# Run monit in standard runlevels
mo:2345:respawn:/usr/bin/monit -Ic /etc/monitrc
}}

更新 {{Path|/etc/inittab}} 之后， 可以通过 <kbd>telinit q</kbd> 即刻启动 <tt>monit</tt>。

=== 用户管理 ===

加入 <tt>monit</tt> 或者 <tt>users</tt> 用户组的用户可以通过 <tt>monit</tt> 的 web 界面进行操作。

使用 <kbd>gpasswd</kbd> 将用户添加到任一用户组：

{{RootCmd|gpasswd -a $USER monit
|gpasswd -a $USER users}}

{{Path|/etc/monitrc}} 文件中, <code>allow</code> 语句应当指向这些用户组，例如：

{{FileBox|filename=/etc/monitrc|Granting groups access to the web interface|1=
set httpd port 2812
  allow @monit
  allow @users
}}

也可以在 {{Path|monitrc}} 文件中使用硬编码的用户名和密码，但是不推荐这样设置。检查 {{Path|monitrc}} 文件中的默认密码，删除它们，或者替换成更强大的、唯一的密码。使用的语法是 <code>allow &lt;username&gt;:&lt;password&gt;</code>。

=== Monit web 界面 ===

默认的 web 界面的地址是 [http://localhost:2812 localhost:2812]，用户名是 <tt>admin</tt>，默认密码是 <tt>monit</tt>。请确保修改密码！

== 通过 monit 监控应用 ==

Monit 使用 PID 文件来检查应用是否运行。这意味着要监控的程序“必须”有 PID 文件，否则 <tt>monit</tt> 无法保护它。如果一个守护进程不会创建 PID 文件，使用 [http://mmonit.com/wiki/Monit/FAQ#pidfile wrapper] 创建一个。

{{Note|使用 PID 文件（以及通过 <tt>ps</tt> 这样的工具验证 PID 文件）进行监控通常被认为是不可靠的<ref>Greg Wooledge. [http://mywiki.wooledge.org/ProcessManagement Process management], Retrieved on January 1st, 2015</ref>。Monit 通过以足够频繁的频率检查 PID 文件来克服这一弱点。}}

通过使用 {{Path|/etc/monit.d/}} 目录，可以很方便的添加额外的监控规则。

例如，在 [[MySQL]] 死掉的时候自动重启：

{{FileBox|filename=/etc/monit.d/mysql|title=自动重启 mysql|1=
check process mysql with pidfile /var/run/mysqld/mysqld.pid
    start program = "/bin/bash -c 'rc-service mysql start'"
    stop program  = "/bin/bash -c 'rc-service mysql stop'"
}}

另一个例子是管理进程的内存使用量，在超过某一阈值的时候创建一个警告：

{{FileBox|filename=/etc/monit.d/squid|title=检查 squid 并在内存使用超过 512MByte 的时候警告|1=
 check process squid with pidfile /run/squid.pid
   start program = "/bin/bash -c 'rc-service squid start'"
   stop  program = "/bin/bash -c 'rc-service squid stop'"
   if totalmem > 512 MB then alert
}}

== 调试 monit ==

=== Running monit in the foreground ===

To run <tt>monit</tt> in the foreground and provide feedback on everything it is detecting, use the <kbd>-Ivv</kbd> option:

{{RootCmd|monit -Ivv|output=<pre>
...
'squid' total mem amount of 525748kB matches resource limit [total mem amount>524288kB]
</pre>}}

== External resources ==

For more information about Monit, the following resources can help out.

* [http://mmonit.com/monit/documentation/monit.html Monit official documentation]
* [http://mmonit.com/wiki/Main/HomePage Monit Wiki]
* [https://wiki.amahi.org/index.php/Monit Configuring Monit for Avahi]

== References ==

{{reflist}}


[[Category:Monitoring]]
