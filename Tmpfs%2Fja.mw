<languages />

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox wikipedia|header=true}}
}}

'''tmpfs''' ('''t'''e'''mp'''orary '''f'''ile '''s'''ystem、一時ファイルシステム)は[[Article description::ファイルを動的(揮発性)メモリーに保存するために作成される仮想[[filesystem/ja|ファイルシステム]]です。]]

{{Warning|(RAM のような)揮発性メモリーはシステムがシャットダウン、再起動、あるいはクラッシュするとファイルを維持できません。名前から明らかなように、tmpfs は短命なファイルだけのために作成されたものです。tmpfs には''復元可能な''ファイルだけを保存するのが最良の方法です。}}

GNU/Linux では、ramfs ('''r'''andom '''a'''ccess '''m'''emory '''f'''ile '''s'''ystem)は tmpfs によって置き換えられました。以前の ramfs はシステムのメモリーが足りなくなった場合にうまく動作しなかったためです。tmpfs ではより多くの容量が必要になった場合、割り当て済みの領域が事前に設定した最大値に達するまで自動的にファイルシステムを拡張することができます; 利用可能であれば、それからスワップ領域が使用されます。

GNU/Linux での一時ファイルシステムの使用例は多数あり、不揮発性のデータを物理的に保存する必要がない {{Path|/tmp}} ディレクトリーはその一つです。

{{Important|systemd を使っている場合、{{Path|/tmp}} ディレクトリーはデフォルトで tmpfs としてマウントされています。この動作を無効にして {{Path|/etc/fstab}} で手動マウントするには[[#systemd|この節]]を見てください。}}

== インストール ==

ユーザーは以下のカーネルオプションを有効にする必要があります:

{{KernelBox|title=tmpfs サポートを有効にする|1=
File systems  --->
     Pseudo filesystems  --->
          [*] Tmpfs virtual memory file system support (former shm fs)
          [ ] Optional drivers
}}

{| class="table table-striped table-condensed"
|+ オプションのドライバー
|-
! オプション
! 説明
|-
| Tmpfs POSIX Access Control Lists
| [[Wikipedia:Access control list#Filesystem ACLs|ACL]] パーミッションを有効にする。
|-
| Tmpfs extended attributes
| メタデータのサポートを有効にする。
|}

=== 使い方 ===

コマンド1つで tmpfs を生成しマウントする: 

{{RootCmd|mount -t tmpfs tmpfs /MOUNTPOINT}}

Users can specify the mount option ''size'' to control the maximum size of the filesystem (default: half of your memory). Note that tmpfs doesn't reserve this memory, but allocates only the needed memory.

===systemd===

When using systemd the {{Path|/tmp}} directory is mounted by default as tmpfs and given a default size which is deemed big enough without chewing up too much RAM.

Users can view mounted temporary filesystems using the following command:

{{RootCmd|findmnt --target /tmp}}

This will show if the {{Path|/tmp}} mount point is a tmpfs filesystem and the size of such filesystem.

In order to disable this behaviour and take back control of the directory by using {{Path|/etc/fstab}} the user needs to run the following command:

{{RootCmd|systemctl mask tmp.mount}}
This command will now not mount {{Path|/tmp}} as a tmpfs and will automatically switch back to a block device.

Users should now add a new line in {{Path|/etc/fstab}} which will create a tmpfs for {{Path|/tmp}} manually.

{{FileBox|filename=/etc/fstab|title=tmpfs fstab example|1=
tmpfs /tmp tmpfs rw,nosuid,noatime,nodev,size=4G,mode=1777 0 0
}}

===OpenRC===

OpenRC users should simply add the mount point into {{Path|/etc/fstab}}:

{{FileBox|filename=/etc/fstab|title=tmpfs fstab example|1=
tmpfs /tmp tmpfs rw,nosuid,noatime,nodev,size=4G,mode=1777 0 0
}}

===Other directories to consider===

Here are a few other directories users may mount as a tmpfs in order to boost their system performance.
Use the {{c|findmnt}} command to check if they are already use tmpfs before attempting to manually mount them in {{Path|/etc/fstab}}.

{{RootCmd|findmnt --target /<directory-to-check>}}

{| class="table table-striped table-condensed"
|-
! Directory !! Purpose
|-
| {{|{{Path|/run}}  || Run-time variable data. Information about the running system since last boot, e.g., currently logged-in users and running daemons.
|-
| {{|{{Path|/var/run}}  || Run-time variable data. This directory contains system information data describing the system since it was booted.
|-
| {{|{{Path|/var/lock}}  || Lock files. Files keeping track of resources currently in use.
|-
|}

== Conclusion ==

The outcome of using a temporary filesystem for non volatile files such as the {{Path|/tmp}} directory is that the system has a very fast and very responsive access to caching files and stored session media. 
This also helps when using a browser to surf the web as cookies can be stored on this volatile media speeding up the application; on every reboot they are scrubbed or wiped from RAM.
If users need to keep temporary files for analytics then they should avoid using the tmpfs filesystem for {{Path|/tmp}} and other directories. All data stored in the tmpfs mount point will be lost when the system is rebooted or powered down.

== Advancements in technology ==

Some hardware manufactures provide devices that are slower than RAM but faster than SSD to be used as cache drives. These devices are usually incorporated on a PCIe add-in card and have either an adapter from PCIe to M.2 slot or the entire memory device is embedded into the PCIe card.

If users need a non-volatile high speed versatile solution faster than SSD/SAS/SATA then these high speed solutions should be considered. Of course users should not mount these devices with tmpfs but instead use a conventional partitioning filesystem.

Technology such as the Intel 3Dx Optaine memory cache can be used too, but this technology, although more versatile than SSD, is still subject to wearing out. It does however provide a brilliant midway point that will only get better as the technology progresses in the future and provides us with a much faster computing experience when setup correctly.

== See also ==

* {{See also|Portage TMPDIR on tmpfs}}

[[Category:Filesystems]]
