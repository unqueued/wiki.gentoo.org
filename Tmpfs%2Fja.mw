<languages />

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox wikipedia|header=true}}
}}

'''tmpfs''' ('''t'''e'''mp'''orary '''f'''ile '''s'''ystem、一時ファイルシステム)は[[Article description::ファイルを動的(揮発性)メモリーに保存するために作成される仮想[[filesystem/ja|ファイルシステム]]です。]]

{{Warning|(RAM のような)揮発性メモリーはシステムがシャットダウン、再起動、あるいはクラッシュするとファイルを維持できません。名前から明らかなように、tmpfs は短命なファイルだけのために作成されたものです。tmpfs には''復元可能な''ファイルだけを保存するのが最良の方法です。}}

GNU/Linux では、ramfs ('''r'''andom '''a'''ccess '''m'''emory '''f'''ile '''s'''ystem)は tmpfs によって置き換えられました。以前の ramfs はシステムのメモリーが足りなくなった場合にうまく動作しなかったためです。tmpfs ではより多くの容量が必要になった場合、割り当て済みの領域が事前に設定した最大値に達するまで自動的にファイルシステムを拡張することができます; 利用可能であれば、それからスワップ領域が使用されます。

GNU/Linux での一時ファイルシステムの使用例は多数あり、不揮発性のデータを物理的に保存する必要がない {{Path|/tmp}} ディレクトリーはその一つです。

{{Important|systemd を使っている場合、{{Path|/tmp}} ディレクトリーはデフォルトで tmpfs としてマウントされています。この動作を無効にして {{Path|/etc/fstab}} で手動マウントするには[[#systemd|この節]]を見てください。}}

== インストール ==

ユーザーは以下のカーネルオプションを有効にする必要があります:

{{KernelBox|title=tmpfs サポートを有効にする|1=
File systems  --->
     Pseudo filesystems  --->
          [*] Tmpfs virtual memory file system support (former shm fs)
          [ ] Optional drivers
}}

{| class="table table-striped table-condensed"
|+ オプションのドライバー
|-
! オプション
! 説明
|-
| Tmpfs POSIX Access Control Lists
| [[Wikipedia:Access control list#Filesystem ACLs|ACL]] パーミッションを有効にする。
|-
| Tmpfs extended attributes
| メタデータのサポートを有効にする。
|}

=== 使い方 ===

コマンド1つで tmpfs を生成しマウントする: 

{{RootCmd|mount -t tmpfs tmpfs /MOUNTPOINT}}

''size''マウントオプションを指定することでファイルシステムの最大サイズを制御できます(デフォルト: メモリーの半分)。tmpfs はこのメモリーをあらかじめ確保するのではなく、必要なメモリーのみを割り当てることに注意してください。

===systemd===

systemd を使用している場合 {{Path|/tmp}} ディレクトリーはデフォルトで tmpfs としてマウントされ、大量の RAM を消費せずかつ十分大きいと思われるデフォルトサイズになります。

以下のコマンドを使ってマウントされている一時ファイルシステムを表示できます:

{{RootCmd|findmnt --target /tmp}}

このコマンドは {{Path|/tmp}} マウントポイントが tmpfs ファイルシステムかどうか、またそうしたファイルシステムのサイズを表示します。

この動作を無効にし {{Path|/etc/fstab}} を使ってこのディレクトリーの制御を取り戻すためには、以下のコマンドを実行する必要があります:

{{RootCmd|systemctl mask tmp.mount}}
このコマンドによって {{Path|/tmp}} はもはや tmpfs としてマウントされなくなり、自動的にブロックデバイスに切り替わります。

ここで {{Path|/tmp}} 用の tmpfs を手動で作成する行を {{Path|/etc/fstab}} に書き加えましょう。

{{FileBox|filename=/etc/fstab|title=tmpfs 用の fstab の例|1=
tmpfs /tmp tmpfs rw,nosuid,noatime,nodev,size=4G,mode=1777 0 0
}}

===OpenRC===

OpenRC のユーザーはマウントポイントを {{Path|/etc/fstab}} に追加するだけです:

{{FileBox|filename=/etc/fstab|title=tmpfs 用の fstab の例|1=
tmpfs /tmp tmpfs rw,nosuid,noatime,nodev,size=4G,mode=1777 0 0
}}

=== 他の考慮すべきディレクトリー ===

システムのパフォーマンスを高速化するために tmpfs としてマウントしたくなるかもしれないディレクトリーが他にもいくつかあります。それらを {{Path|/etc/fstab}} で手動マウントする前に、{{c|findmnt}} コマンドを使って既に tmpfs が使われていないか確認するようにしてください。

{{RootCmd|findmnt --target /<directory-to-check>}}

{| class="table table-striped table-condensed"
|-
! ディレクトリー !! 目的
|-
| {{|{{Path|/run}}  || 実行時可変データ。最近のブート以降の実行中のシステムに関する情報、たとえば現在ログインしているユーザーや実行中のデーモンなど。
|-
| {{|{{Path|/var/run}}  || 実行時可変データ。このディレクトリーはそのシステムのブート以降のシステム情報を含んでいます。
|-
| {{|{{Path|/var/lock}}  || ロックファイル。現在使用中のリソースを追跡するファイル。
|-
|}

== おわりに ==

{{Path|/tmp}} ディレクトリーのような不揮発性のファイルに対して一時ファイルシステムを使用することで、システムはキャッシュファイルや保存されているセッションメディアに非常に高速かつ迅速にアクセスできるようになります。これは、クッキーをアプリケーションを高速化する揮発性メモリーに保存できるため、ブラウザでウェブサーフィンする場合にも役立ちます; 再起動のたびにそれらは RAM から消去されます。
分析のために一時ファイルを保持する必要がある場合には、{{Path|/tmp}} やその他のディレクトリーに tmpfs を使うのは避けるべきです。tmpfs のマウントポイントに保存されているデータはシステムが再起動されたり電源が切れた時にすべて失われます。

== 技術の進歩 ==

一部のハードウェア製造業者は、 RAM よりは低速ですが SSD よりは高速なキャッシュドライブとして使用するためのデバイスを提供しています。これらのデバイスは通常 PCIe 拡張カードに搭載されており、PCIe から M.2 スロットへのアダプターを持つかまたはメモリーデバイス全体が PCIe カードに組み込まれています。

If users need a non-volatile high speed versatile solution faster than SSD/SAS/SATA then these high speed solutions should be considered. Of course users should not mount these devices with tmpfs but instead use a conventional partitioning filesystem.

Technology such as the Intel 3Dx Optaine memory cache can be used too, but this technology, although more versatile than SSD, is still subject to wearing out. It does however provide a brilliant midway point that will only get better as the technology progresses in the future and provides us with a much faster computing experience when setup correctly.

== See also ==

* {{See also|Portage TMPDIR on tmpfs}}

[[Category:Filesystems]]
