<languages />


{{Metadata|abstract=Esta guía está orientada a ser un repositorio de métodos alternativos para la instalación de Gentoo para aquéllos con necesidades
especiales de instalación tales como falta de unidades de CDROM o de computadoras que no pueden iniciar desde CDs.}}

Esta guía está orientada a ser un repositorio de métodos alternativos para la instalación de Gentoo para aquéllos con necesidades especiales de instalación tales como falta de unidades de CDROM o de computadoras que no pueden iniciar desde CDs.

== Acerca de este documento ==

Si el método estándar de arranque para la instalación por CD no es posible desde su ordenador (o simplemente es imposible utilizarlo o no es agradable) se puede obtener ayuda al respecto aquí. Este documento servirá para ofrecerle un repositorio de técnicas y métodos alternativos para la instalación de Gentoo Linux. O si se prefiere, servirá como medio para publicar su
más novedoso método de instalación. Si existe alguna técnica de instalación considerada útil o se ha encontrado alguna otra manera divertida de instalar Gentoo Linux, por favor, no dude en documentarla y enviarla a [https://bugs.gentoo.org/ Bugzilla].

== Iniciar el CD de Instalación con Smart BootManager ==

Descargue Smart BootManager disponible en [http://btmgr.sourceforge.net/download.html http://btmgr.sourceforge.net/download.html]. Las versiones en código fuente para Linux o formato binario y los {{Path|.exe}} de windows están disponibles, así como muchos paquetes de idiomas. Sin embargo, por ahora, el método más adecuado sería utilizar el formato binario, ya que el código no compila con las nuevas versiones de NASM. 

Compile el programa desde el código o simplemente descargue el archivo binario. Hay varias opciones que pueden utilizarse durante la creación de un disquete de arranque, como puede observar a continuación. 

{{CodeBox|title=Opciones de Smart BootManager|1=
sbminst [-t theme] [-d drv] [-b backup_file] [-u backup_file]

  -t theme select the theme to be used, in which the theme could be:
    us = English theme    de = German theme
    hu = Hungarian theme  zh = Chinese theme
    ru = Russian theme    cz = Czech theme
    es = Spanish theme    fr = French theme
    pt = Portuguese theme

  -d drv set the drive that you want to install Smart BootManager on;
   for Linux:
    /dev/fd0 is the first floppy driver,
    /dev/hda is the first IDE harddisk driver.
    /dev/sda is the first SCSI harddisk driver.
   for DOS:
    0 is the first floppy drive
    128 is the first hard drive;

   -c disable CD-ROM booting feature;

   -b backup_file backup the data that will be overwritten for
     future uninstallation;

   -u backup_file uninstall Smart BootManager, should be used alone;

   -y do not ask any question or warning.
}}

Utilice {{c|sbminst}} para construir el disquete de arranque:

{{RootCmd|sbminst -t us -d /dev/fd0}}

{{Note/es|Cambie {{Path|fd0}} por el nombre de dispositivo de disquete adecuado.}}

Ahora simplemente coloque el disquete en la disquetera del ordenador, así como el CD de Instalación dentro del CD-ROM e inicie el ordenador. 

Se mostrará el diálogo de Smart BootManager. Seleccionar el CD-ROM y presionar la tecla {{Key|Intro}} para cargar el CD de instalación. Una vez cargado, continúe con las instrucciones normales de instalación. 

Puede encontrar más información sobre Smart BootManager en [http://btmgr.sourceforge.net/ http://btmgr.sourceforge.net/].

== Instalación desde LiveCDs que no son de Gentoo ==

=== Introducción ===

{{Important/es|Los desarrolladores Gentoo no pueden ofrecer soporte si algo ocurre al usar un LiveCD que no sea de Gentoo ya que no hay forma de arreglarlo, encontrar los problemas o documentar cada característica en cada LiveCD existente. oficialmente solo se brinda soporte para LiveCDs Gentoo. Por favor, visite los [https://forums.gentoo.org/ Foros de Gentoo] si encuentra problemas con los medios de instalación alternativos.}}

Users can boot other LiveCDs besides the Gentoo-provided CDs. Regardless, these LiveCDs provide a functional environment to use while compiling and installing Gentoo. The instructions provided here should work in principle with just about any other LiveCD. 

There are too many LiveCDs out there to [http://distrowatch.com/search.php list], but an option might be to try out [http://www.knoppix.org/ Knoppix]. It provides a full graphical desktop, with office applications, web browsers, and games to keep busy. Knoppix is only available for x86 users, so depending on the user's requirements another LiveCD or method may need to be used. 

{{Warning|Be aware that if anything is saved in the LiveCD's home directory while waiting for the Gentoo system to install, it will not be available when rebooting into Gentoo. Be sure to save important files on the hard disk or on some other computer!}}

=== Instrucciones de instalación ===

Boot from the LiveCD. Open a terminal and run {{c|su -}} so the password can be changed. This allows to set the root password for the CD. The sshd daemon can now be configured for remote login if required. Next, creating the {{Path|/mnt/gentoo}} mount point is necessary. 

{{RootCmd|mkdir /mnt/gentoo}}

At this point, the standard install documentation can be picked up at [[Handbook:AMD64/Installation/Disks|Preparing the Disks]]. However, when asked to mount the proc system, issue the following command instead: 

{{RootCmd|mount -o bind /proc /mnt/gentoo/proc}}

When unpacking the stage tarball in [[Handbook:AMD64/Installation/Stage#Unpacking_the_stage_tarball|Unpacking the stage tarball]], different {{c|tar}} command options are needed to ensure that proper group IDs are enforced on the unpacked stage: 

{{RootCmd|tar --numeric-owner --xattrs -xvjpf stage3-*.tar.bz2 -C /mnt/gentoo }}

If Ubuntu is being used, note that {{Path|/dev/shm}} is a symbolic link to {{Path|/run/shm}}. It must be bind-mounted or a tmpfs mount has to be set at this location (within the chroot path). To bind-mount the location, run the following command (before chrooting):

{{RootCmd|mount --rbind /run/shm /mnt/gentoo/run/shm}}

Esto se hace para evitar el problema {{Bug|496328}} en el que Python ve que <code>sem_open()</code> está roto (debido a la falta de {{Path|/dev/shm}}) y Portage lo ve también como un error (técnicamente la configuración de Python debería continuar así como su construcción asumiendo que se ha habilitado la variable <var>POSIX_SEMAPHORES_NOT_ENABLED</var>, sin embargo esto llevaría a una construcción de Python muy poco deseable).

Once ready to chroot into the unpacked stage in [[Handbook:AMD64/Installation/Base|Installing Base System]], a different chroot command sequence will need to be used. This ensures that the environment variables are properly setup. 

{{Note|Some LiveCDs use a funny environment setup, hence the {{c|env -i}} option for
cleaning it up to a reasonable state.}}

{{RootCmd|chroot /mnt/gentoo /bin/env -i TERM{{=}}$TERM
/bin/bash
|env-update
|source /etc/profile
|export PS1{{=}}"(chroot) $PS1"}}

Finally, know that some Portage <var>FEATURES</var> may not work in the LiveCD. Especially watch out for <code>userpriv</code> and <code>usersandbox</code>. If there are errors, try disabling some or all of the optional <var>FEATURES</var>.

== Instalación sin disco utilizando PXE y un núcleo, un initrd y un squashfs desde el LiveCD ==

Este método es más fácil de configurar que el arranque PXE basado en iSCSI o NFS. Múltiples máquinas pueden arrancar desde el mismo conjunto de imágenes distribuidas a través de TFTP y se puede extender fácilmente para que también funcione sobre HTTP u otro protocolo.

Some other distributions including Fedora already distribute images needed to bootstrap a live or installation CD. With Gentoo, this is not the case. Instead, users need to

# Extraer el núcleo, initrd y [[SquashFS|squashfs]] desde el liveCD, 
# Parchear el contenido del initrd, y
# Mezclar squashfs con initrd.

Solo ahora se podrá configurar un cargador de arranque basado en PXE que cargará las imágenes e iniciará un sistema vivo.

Save the following script, make it executable and put its directory in <var>$PATH</var> (or follow the documented steps manually).


{{CodeBox|title=gentoo-pxe-boot|<nowiki>
#!/bin/bash -xe

tftproot="$1"
image="$2"
tmp="./tmp"

test -z "$tftproot" -o -z "$image" && echo "Usage: $0 <tftproot> <gentoo-iso>" >&2 && exit 1
test -e "$tmp" && echo "Temporary path '$tmp' already exists." >&2 && exit 1

iso="$tmp/iso"
initrd="$tmp/initrd.dir"

# prepare directories
mkdir -p "$tmp" "$iso" "$initrd/mnt/cdrom"

# extract files from ISO image
mount -o ro,loop "$image" "$iso"
cp "$iso"/{image.squashfs,isolinux/gentoo,isolinux/gentoo.igz} "$tmp"
umount "$iso"

# rename kernel
mv "$tmp/gentoo" "$tmp/kernel"

# patch initramfs and add squashfs to it
xz -dc "$tmp/gentoo.igz" | ( cd "$initrd" && cpio -idv )
patch -d "$initrd" -p0 <<'EOF'
--- init.orig	2016-01-02 00:00:00.000000000 +0100
+++ init	2016-01-02 00:00:00.000000000 +0100
@@ -455,9 +455,9 @@
 		CHROOT=${NEW_ROOT}
 	fi
 
-	if [ /dev/nfs != "$REAL_ROOT" ] && [ sgimips != "$LOOPTYPE" ] && [ 1 != "$aufs" ]; then
-		bootstrapCD
-	fi
+#	if [ /dev/nfs != "$REAL_ROOT" ] && [ sgimips != "$LOOPTYPE" ] && [ 1 != "$aufs" ]; then
+#		bootstrapCD
+#	fi
 
 	if [ "${REAL_ROOT}" = '' ]
 	then
@@ -591,7 +591,7 @@
 		else
 			bad_msg "Block device ${REAL_ROOT} is not a valid root device..."
 			REAL_ROOT=""
-			got_good_root=0
+			got_good_root=1
 		fi
 	done
 
@@ -670,7 +670,7 @@
 	[ -z "${LOOP}" ] && find_loop
 	[ -z "${LOOPTYPE}" ] && find_looptype
 
-	cache_cd_contents
+	#cache_cd_contents
 
 	# If encrypted, find key and mount, otherwise mount as usual
 	if [ -n "${CRYPT_ROOT}" ]
EOF
cp "$tmp/image.squashfs" "$initrd/mnt/cdrom"
( cd "$initrd" && find . -print | cpio -o -H newc | gzip -9 -c - ) > "$tmp/initrd"

# prepare boot data
grub2-mknetdir -v --net-directory="$tftproot"
cat > "$tftproot/boot/grub/grub.cfg" <<'EOF'
menuentry "Gentoo Live" {
    linux /boot/kernel root=/dev/ram0 init=/linuxrc loop=/image.squashfs looptype=squashfs cdroot=1 real_root=/
    initrd /boot/initrd
}
EOF
cp "$tmp"/{kernel,initrd} "$tftproot/boot"

# cleanup
rm -rf "$tmp"
</nowiki>}}


Download {{Path|install-amd64-minimal-20151231.iso}} (or try with the current version if it differs). Install {{Package|net-ftp/tftp-hpa}}, make sure it serves {{Path|/tftproot}} and start it.

Lance el guión con los parámetros adecuados.

{{RootCmd|gentoo-pxe-boot /tftproot install-amd64-minimal-20141204.iso}}

Now the tftp boot service is ready, so the next step is to configure a DHCP service. Setting up a DHCP server on the same machine is possible - just make sure that the booted machines are connected to it. Or just tweak the configuration of an existing router.

Un ejemplo de configuración para el servicio dhcp de OpenWRT se muestra a continuación:

{{CodeBox|title=/etc/config/dhcp|
config boot linux                   
        option filename boot/grub/i386-pc/core.0
        option servername boot
        option serveraddress 84.246.161.86
}}

== Instalación sin disco mediante arranque PXE y NFS ==

=== Requisitos ===

PXE (Preboot eXecution Environment) is a method for booting computers over a PXE-capable network interface (and using a PXE-supporting BIOS). In case the system does not support PXE boot from the network interface or BIOS, PXE can also be used as a boot method from block devices (like CDs or USBs). In such cases, a minimal boot environment mimics the PXE supporting network card (see also [http://etherboot.org Etherboot/gPXE]). 

=== Configuración básica del servidor ===

Create directories: The first thing to do is to create the directories where the diskless system will be stored. Create a directory called {{Path|/diskless}} which houses a directory for each diskless client. For the remainder of this howto, the client that is being worked on will be called 'eta'. 

{{RootCmd|mkdir /diskless
|mkdir /diskless/eta
}}

Configurar DHCP y TFTP: el cliente obtendrá la información de arranque utilizando DHCP y descargará todos los archivos que necesita usando TFTP. 

For dhcpd, just run {{c|emerge dhcp}} (or any other DHCP server of choice). Make sure that the correct interface is selected in {{Path|/etc/conf.d/dhcpd}}, and configure it accordingly. Then, add the following on {{Path|/etc/dhcp/dhcpd.conf}}. 

{{Note|This provides a static IP address for the client and the path of a PXE boot image, here {{Path|pxegrub}}. The MAC address of the ethernet card of the client in the example has to be replaced with the correct MAC address, as well as the directory where the client files will be stored.}}

{{FileBox|filename=dhcpd.conf|title=|lang=bash|1=
option option-150 code 150 = text ;
ddns-update-style none ;
host eta {
hardware ethernet 00:00:00:00:00:00;
fixed-address ip.add.re.ss;
option option-150 "/eta/boot/grub.lst";
filename "/eta/boot/pxegrub";
}
}}

Next configure the interface in {{Path|/etc/conf.d/net}} so that it doesn't get cleared at bootup. See {{Path|/usr/share/doc/openrc-*/net.example.bz2}} for more information. 

{{FileBox|filename=/etc/conf.d/net|title=Asegúrese de que el interfaz (aquí se ha tomado eth0 como ejemplo) no se reconfigura en el inicio|lang=bash|1=
config_eth0=( "noop" )
}}

Para TFTP, haga emerge de {{Package|net-ftp/tftp-hpa}}. En {{Path|/etc/conf.d/in.tftpd}}, escriba lo siguiente: 

{{FileBox|filename=in.tftpd|title=|lang=bash|1=
INTFTPD_PATH="/diskless"
INTFTPD_USER="nobody"
INTFTPD_OPTS="-u ${INTFTPD_USER} -l -vvvvvv -p -c -s ${INTFTPD_PATH}"
}}

Configurar GRUB: Las versiones antiguas de GRUB utilizaban el ajuste USE <code>netboot</code> para crear una imagen PXE. image

{{RootCmd|echo "sys-boot/grub netboot" >> /etc/portage/package.use}}

Instale GRUB.

{{RootCmd|emerge -av grub}}

Una vez esté compilado GRUB, cree el directorio de inicio de los clientes sin disco.

{{RootCmd|grub2-mknetdir --net-directory{{=}}/diskless/eta}}

La forma original era copiar la imagen PXE al cliente sin disco, sin embargo la ruta parece que ya no existe.

{{RootCmd|mkdir /diskless/eta/boot|cp /usr/lib/grub/pxegrub /diskless/eta/boot/pxegrub}}

A continuación edite su fichero de configuración {{Path|grub.lst}}.

{{RootCmd|nano -w /diskless/eta/boot/grub.lst}}

{{FileBox|filename=grub.lst|title=|lang=bash|1=
default 0
timeout 30
  
title=Gentoo sin disco
root (nd)
kernel /eta/bzImage ip=dhcp root=/dev/nfs nfsroot=ip.add.re.ss:/diskless/eta
  

# Para la opción nfsroot, la dirección IP es la del servidor y el directorio es en el que están localizados los ficheros del cliente sin disco (en el servidor).
}}

Configurar NFS: NFS es bastante fácil de configurar. Lo único que se debe hacer es añadir una línea al archivo de configuración {{Path|/etc/exports}}: 

{{FileBox|filename=/etc/exports|title=|lang=bash|1=
/diskless/eta eta(rw,sync,no_root_squash)
}}

Actualice los equipos: una cosa importante que debe hacer ahora es modificar el {{Path|/etc/hosts}} para ajustarlo a los requisitos. 

{{Filebox|filename=/etc/hosts|title=|lang=bash|1=
127.0.0.1 localhost
192.168.1.10 eta.example.com eta
192.168.1.20 sigma.example.com sigma
</pre>
}}

=== Crear el sistema en el servidor ===

A next step is to reboot the server with a Gentoo installation CD (although experienced administrators can continue without if they are sufficiently versed in Gentoo installations). Follow the standard install procedure as explained in the [[Handbook:Main_Page|Gentoo Handbook]] BUT with the following differences: when mounting the file system, execute the next step (where {{Path|sdaX}} is the partition where the {{Path|/diskless}} directory was created).

{{RootCmd|mount /dev/sdaX /mnt/gentoo}}

No se necesita montar ninguna otra partición ya que todos los ficheros se encuentran en el directorio {{Path|/diskless/eta}}. 

Comprimidos stage y chroot: Este ejemplo utiliza un comprimido stage3. Monte {{Path|/proc}} en el directorio del cliente sin disco y haga chroot para continuar con la instalación. Después siga el manual de instalación hasta la configuración del núcleo. 

{{Warning|Be very careful when extracting the stage tarball to its destination, so as to not end up extracting over an existing installation.}}

{{RootCmd|cd /mnt/gentoo/diskless/eta/
|tar -xvjpf /mnt/cdrom/gentoo/stage3-*.tar.bz2
|mount -t proc /proc /mnt/gentoo/diskless/eta/proc
|cp /etc/resolv.conf /mnt/gentoo/diskless/eta/etc/resolv.conf
|chroot /mnt/gentoo/diskless/eta/ /bin/bash
|env-update
|source /etc/profile}}

Kernel configuration: When doing the {{c|make menuconfig}} of the kernel configuration, don't forget to enable the following options with the others recommended into the install guide. 

{{KernelBox|title=Necessary options for diskless installations|<pre>
- The network card device support
(In the kernel, *not* as a module!)
  
-*- Networking support --->  
  Networking options --->
    [*] TCP/IP networking
    [*] IP: kernel level autoconfiguration
    [*] IP: DHCP support
    [*] IP: BOOTP support
  
File systems --->
  [*] Network File Systems --->
    <*> NFS file system support
    [*] Provide NFSv3 client support
    [*] Root file system on NFS
</pre>}}

Save the kernel in the chrooted {{Path|/}} (not in {{Path|/boot}}) according to the pxegrub setting defined earlier. Next configure the diskless client's {{Path|/etc/fstab}}. 

{{FileBox|filename=/etc/fstab|title=|lang=bash|<pre>
/dev/cdroms/cdrom0 /mnt/cdrom iso9660 noauto,ro 0 0
</pre>
}}

Now to prevent the client from running a filesystem check: 

{{RootCmd|touch /fastboot
|echo "touch /fastboot" >> /etc/conf.d/local.start
}}

Install {{Package|nfs-utils}} since the client will heavily depend on it: 

{{Emerge|nfs-utils}}

Bootloader. Don't install another bootloader because there is already one - pxegrub. Simply finish the install and restart the server. Start the services that are needed to boot the new client: DHCP, TFTPD, and NFS. 

{{RootCmd|/etc/init.d/dhcp start
|/etc/init.d/in.tftpd start
|/etc/init.d/nfs start}}

=== Iniciar el nuevo cliente ===

For the new client to boot properly, the BIOS and the network card need to be configured to use PXE as the first boot method - before CD-ROM or floppy. For help with this consult the hardware manuals or manufacturers website. The network card should get an IP address using DHCP and download the GRUB PXE image using TFTP. Then, a nice black and white GRUB bootmenu should be displayed from where users can select the kernel to boot and press the {{Key|Enter}} (Return) key. If everything is ok the kernel should boot, mount the root filesystem using NFS and provide a login prompt. Enjoy.

== Instalar Gentoo desde una distribución Linux existente ==

=== Requisitos ===

In order to install Gentoo from an existing Linux distribution it needs to have the chroot command installed, and have a copy of the Gentoo installation tarball or ISO that's desired to install. A network connection is highly recommended as otherwise the installation can only work with the files available in the tarball. By the way, a tarball is just a file ending in {{Path|.tbz}} or {{Path|.tar.gz}}. Let's get started!

=== Visión general ===

First allocate a partition to Gentoo by resizing an existing Linux partition, mount the partition, untar the tarball to the partition that is mounted, chroot inside the pseudo-system and start building. Once the bootstrap process is done, do some final configuration on the system so as to make sure it boots, then reboot and use Gentoo. 

=== ¿Cómo reservar espacio para Gentoo? ===

The root partition is the filesystem mounted under {{Path|/}}. The first example shows the output of {{c|mount}} on a system . The second example uses {{c|df}} (disk free) to see how much space there is left and how it will be resized. Note that resizing the root partition is not mandatory! Anything else supported by the resizer can be resized, but let's talk about that later. 

{{RootCmd|mount|output=<pre>
/dev/sdb2 on / type ext3 (rw)
none on /proc type proc (rw)
none on /dev/pts type devpts (rw,gid=5,mode=620)
none on /dev/shm type tmpfs (rw,nodev,nosuid,noexec)
</pre>}}

{{RootCmd|df -h|output=<pre>
Filesystem     Size Used Avail Use% Mounted on
/dev/sdb2      4.0G 1.9G 2.4G  82% /
none           38M  0    38M   0% /dev/shm
</pre>
}}

As can be seen, the partition mounted as {{Path|/}} named {{Path|/dev/sdb2}} has 2.4 GB free. In this case, it was decided to be resized as to leave 400 MB of free space, therefore allocating 2 GB for Gentoo. Not bad, it could have quite some stuff installed. However, 1 GB is deemed enough for most users. So now partition this thing!

=== Construir parted para cambiar el tamaño de la partición ===

{{Warning/es|Esta sección está desactualizada y se eliminará cuando las versiones antiguas de parted hayan abandonado el árbol de Portage de Gentoo. Se ha eliminado de parted la capacidad de redimensionar las particiones tal y como se explica [https://www.gnu.org/software/parted/manual/html_node/Command-explanations.html aquí].}}

{{Package|sys-block/parted}} is an utility supplied by the GNU foundation, an old and respectable huge project whose software you are using in this very moment. There is one tool, however, that is extremely useful at the moment: {{c|parted}}, a partition editor that can be found at [http://www.gnu.org/software/parted/ http://www.gnu.org/software/parted/].

{{Note|There are other tools for doing resize of partitions as well, but an elaborate description of these tools is outside the scope of this guide.}}

Look up on that page the type of file system to resize and see if parted can do it. If not: tough luck, some partitions might need to be destroyed to make space for Gentoo, and reinstall back. Go ahead by downloading the software and install it. In the next step, a problem arises. The Linux root partition needs to be resized, therefore a floppy disk with a minimal Linux system must be booted and to use a previously-compiled parted copied to a diskette in order to resize {{Path|/}}. If the partition can be unmounted while still running in Linux then the following steps are not needed. Just compile parted and run it on a chosen unmounted partition to resize. Here's how it was done on this system. 

{{Important|Make sure that the operations that are required for partitioning are supported by parted!}}

Obtenga el disco de inicio mininux (una mini distribución de Linux
basada en un núcleo 2.4, cabe en un solo disquete y además es gratuita) desde [http://mininux.free.fr/uk/ http://mininux.free.fr/uk/]. Cree un 
disquete como se indica en la documentación que acompaña el paquete 
de software e inserte un nuevo disquete en la disquetera para el siguiente paso. 

{{Note|Note again that Linux is synonym of "There's one more way to do it". The objective is to run parted on an unmounted partition so it can do its work. A boot/root diskset other than mininux can be used. This step might not even be needed to do at all: there may only be the need to umount the filesystem to repartition in the Linux session and run parted on it.}}

{{RootCmd|mkfs.minix /dev/fd0|output=<pre>
480 inodes
1440 blocks
Firstdatazone=19 (19)
Zonesize=1024
Maxsize=268966912
</pre>
}}

Proceed with the build of parted. Download and untar the utility, and {{c|cd}} into the corresponding directory. Now run the following set of commands to build the utility and copy it to the floppy disk. 

{{RootCmd|mkdir /floppy
|mount -t minix /dev/fd0 /floppy
|export CFLAGS{{=}}"-O3 -pipe -fomit-frame-pointer -static"
|./configure
|make
|cp parted/parted /floppy
|umount /floppy }}

Time to reboot and resize the partition. Do this only after taking a quick look at the parted documentation on the GNU website. The resize should take under 30 minutes for the largest hard-drives, be patient. Reboot the system with the mininux boot disk (just pop it inside), and once logged in, switch the disk in the drive with the utility disk that was created above and type {{c|mount /dev/fd0 /floppy}} to have parted under {{Path|/floppy}}. Run parted to be able to resize the partition. Once this lengthy process is done, continue with installing Gentoo. Reboot back into the old Linux system for now. The drive to operate on is the drive containing the partition that is going to be resized. For example, if the partition to be resized is {{Path|/dev/sda3}}, the drive is {{Path|/dev/sda}}. 

{{RootCmd|mount /dev/fd0 /floppy
|cd /floppy
|./parted <disco>}}

{{Cmd|print|prompt=(parted) |output=<pre>
Disk geometry for /dev/sdb: 0.000-9787.148 megabytes
Disk label type: msdos
Minor   Start   End   Type   Filesystem   Flags
1       0.031 2953.125 primary ntfs
3     2953.125 3133.265 primary linux-swap
2     3133.266 5633.085 primary ext3
4     5633.086 9787.148 extended
5     5633.117 6633.210 logical
6     6633.242 9787.148 logical ext3</pre>}}

{{Cmd|help resize|prompt=(parted) |output=<pre>
(parted) help resize
 resize MINOR START END resize filesystem on partition MINOR

    MINOR is the partition number used by Linux. On msdos disk labels, the
    primary partitions number from 1-4, and logical partitions are 5
    onwards.
    START and END are in megabytes
</pre>}}

{{Cmd|resize 2 3133.266 4000.000|prompt=(parted) }}

{{Important/es|¡Sea paciente! ¡El ordenador está trabajando! Simplemente eche un vistazo al testigo del disco duro de la máquina para comprobar que existe actividad. Esto podría llevar entre 2 y 30 minutos.}}

Una vez haya terminado el reajuste del tamaño, iniciar de nuevo el Linux antiguo como se ha descrito. Después ir al 
[[Handbook:X86/Installation/Disks/es|Manual de Gentoo: Preparar los discos]] y siga las instrucciones. Cuando haga chroot, utilizar la siguiente orden para limpiar el entorno: 

{{RootCmd|env -i HOME{{=}}$HOME TERM{{=}}$TERM chroot /mnt/gentoo /bin/bash
|/usr/sbin/env-update
|source /etc/profile}}

¡Disfrute!

[[Category:Core system]] {{Migrated|originalauthors=Gerald Normandin Jr., Travis Tilley, Oleg Raisky, Alex Garbutt, Alexandre Georges, Magnus Backanda, Faust A. Tanasescu, Daniel Ahlberg, Ken Nowack, Tiemo Kieft, Benny Chuang, Jonathan Smith, nightmorph}}
