<languages />

{{Metadata|abstract=이 안내서에서는 사용자에게 OpenBox 창 관리자를 설치하고 설정하는 방법을 알려주려합니다. 대부분의 OpenBox와 관련있을 프로그램은 이 게시물을 참조합니다.}}

이 안내서에서는 사용자에게 OpenBox 창 관리자를 설치하고 설정하는 방법을 알려주려합니다. 대부분의 OpenBox와 관련있을 프로그램은 이 게시물을 참조합니다. 간단한 설치 안내서와 같은 더 간단한 내용을 원하신다면  [[Openbox/ko|Openbox]]를 보십시오.

== 도입부 ==

=== Openbox란 무엇인가요?===

[[Xorg/Guide/ko|X 서버]]를 설치한 후 기본 창 관리자(Tab Window Manager, or TWM)는 그 자체로 되는게 없습니다. 대부분의 사용자는 [[KDE/ko|KDE]], [[GNOME/ko|GNOME]], [[Xfce/Guide/ko|Xfce]]와 같은 거대한 데스크톱 환경을 보유할겁니다. 이 거대한 데스크톱 모음의 한 구성요소를 창 관리자(또는 줄여서 WM)라고 합니다. 창 관리자는 프로그램을 실행하는 컨테이너(또는 "창")의 모양새와 위치를 책임집니다. Openbox는 간소하며 장식이 빠진 창 관리자입니다.

=== 왜 Openbox를 사용해야 하죠? ===

Openbox는 거대한 데스크톱 환경과는 달리 매우 적은 라이브러리에 의존합니다. 이 때문에 오래된 하드웨어에서도 빠르게 실행하는 가벼운 그래픽 환경을 제공할 수 있습니다. 시스템 하드웨어가 최신이든 아니든, Openbox는 상당히 이곳저곳을 설정할 수 있으며 돋보이지 않은 평범한 작업 환경을 갖추고 있습니다. 패널, 작업 표시줄, 시계 또는 기타 프로그램이 없다면 만들어서 쓸 수 있는 선택권이 있다는 의미입니다! 

== 설치 및 설정 ==

=== 초기 설정 ===

{{Package|x11-base/xorg-server}}를 이머지하고 설정하고 나면, Openbox 설치는 간단한 하나의 명령으로 끝낼 수 있습니다: 

{{Emerge|x11-wm/openbox}}

다른 창 관리자와 데스크톱 환경처럼, Openbox를 자동으로 불러오려면, X 서버에서 Openbox를 시작하라고 해야 합니다. 사용자 내 폴더에서 {{Path|~/.xinitrc}} 파일에 Openbox를 추가하면 됩니다:

{{Cmd|echo "exec openbox-session" >> ~/.xinitrc}}

이 명령은 터미널에 <kbd>startx</kbd> 명령을 입력했을 때 자동으로 Openbox 세션을 시작합니다. 

{{Important/ko|각 사용자가 {{Path|.xinitrc}} 파일을 지니고 있기에 startx 명령을 <tt>root</tt> 사용자가 아닌 일반 사용자의 자격으로 실행했는지 확인하십시오.}}

{{Note/ko|자동 마운트에 문제가 있거나, dbus와 ConsoleKit을 사용했다면 <code>exec ck-launch-session dbus-launch --sh-syntax --exit-with-session openbox-session</code> 명령을 위에서 사용한 <code>exec openbox-session</code> 명령 ''대신'' 각 사용자의 {{Path|.xinitrc}} 파일에 넣어야합니다.}}

{{Note/ko|KDE, GNOME, Xfce 기본 창 관리자를 [[#.EB.8D.B0.EC.8A.A4.ED.81.AC.ED.86.B1_.ED.99.98.EA.B2.BD_.EC.95.88.EC.9D.98_Openbox|데스크톱 환경 안의 Openbox]]의 지시에 따라 Openbox로 바꿀 수 있습니다.}}

이제 Openbox를 이머지했고 적당한 명령을 사용자의 {{Path|.xinitrc}}파일에 넣었으며, 실제 동작을 통해 <kbd>startx</kbd> 명령으로 Openbox를 열어보았습니다. 조심하십시오! 데스크톱이 잡동사니로 가득찬 모양으로 나타날 수 있습니다. 다음의 Openbox 철학에 따르면, 베어본 환경에서는 사용자가 원하는 데스크톱을 사용자 스스로가 스스로 만들어냅니다. 

startx 명령을 입력하면 보통 기본 Openbox의 시커먼 환경 이외에는 아무것도 나타나지 않습니다. 메뉴는 어디있을까요? 마우스 오른쪽 버튼을 눌러보십시오. 커서 위치에 메뉴가 뜹니다. 이 메뉴는 Openbox 메뉴의 ''스타일''을 나타내는 예제 그 이상의 무엇도 아닙니다. 단지 예제일 뿐이며, 프로그램을 이머지하기 전에는 메뉴의 어떤 항목도 동작하지 않습니다. 다음 절에서는, 개별 설정 메뉴에 사용자가 원하는 프로그램의 링크를 넣어 만드는 방법을 알려드리겠습니다. 

{{Important | 마우스 오른쪽 단추를 눌렀을때 알아볼 수 없는 상자 문자 항목이 나타나면 시스템에 몇가지 글꼴을 설치해야합니다. 두가지 일반적인 글꼴이 있는데 하나는  {{Package|media-fonts/corefonts}} (EULA 라이선스를 동의해야 하지만, 분명히 자유롭게 개인적인 목적으로만 사용한다면 {{Package|media-fonts/croscorefonts}} 를 대신 활용하십시오) 와 {{Package|media-fonts/ttf-bitstream-vera}}가 있습니다.}}

=== 메뉴 설정 ===

기본 상태의 Openbox 메뉴는 본질적으로 위에 언급한대로 쓸모가 없기 때문에 이걸 가지고 제대로 동작하도록 하는 시간을 갖도록 하겠습니다. Openbox 의 모든 요소는 {{Path|menu.xml}} 파일로 작성하며, 사용자별 위치에 따른 {{Path|~/.config/openbox/menu.xml}}, 또는 시스템 전체 기본으로 사용할 {{Path|/etc/xdg/openbox/menu.xml}} 파일이 될 수 있습니다. 기본적으로 시스템 전체 사용자를 위해 만든 {{Path|menu.xml}} 파일만 존재합니다. 

수정할 수 있는 기본 메뉴 파일을 가져올 쉬운 방법은 MenuMaker를 사용하여 현재 시스템에 설치한 프로그램을 기반으로 {{Path|menu.xml}} 파일을 만드는 것입니다. 

{{RootCmd|emerge menumaker}}

MenuMaker를 설치했다면 루트 사용자로부터 로그아웃하고 일반 사용자로 돌아왔는지 확인하십시오. MenuMaker에게 지시하여 Openbox의 XML 문법을 사용하여 개별적인 메뉴를 만들게 하십시오: 

{{Cmd|mmaker -v OpenBox3}}

새로 만든 메뉴는 {{Path|~/.config/openbox/menu.xml}}에 있습니다. 사용자는 사용자별 {{Path|menu.xml}} 파일을 그대로 두고 선택하거나 마찬가지로 시스템 범위 메뉴 설정을 복사해서 쓸 수도 있습니다: 

{{RootCmd|cp .config/openbox/menu.xml /etc/xdg/openbox/menu.xml}}

{{Important/ko|MenuMaker로 기본 메뉴를 만드는 방식은 Openbox 루트 메뉴 항목을 확보하기 때문에 좋은 방식입니다. 여기서 확보한 항목은 가상 데스크톱 전환기와 Openbox 세션을 다시 시작하고 빠져나가는 명령이 들어있습니다.}}

편집기(예: nano)에서 {{Path|menu.xml}} 파일을 열면, 사람이 알아보기 쉽고 이해하기 쉬운 XML 태그 구성으로 되어 있다는걸 알아챌겁니다. 기본 파일을 용도에 맞춰 수정할 수 있으며, 바닥부터 새로 작성(걱정 마십시오. 그다지 어려운게 아닙니다.)할 수도 있습니다. 메뉴 XML의 기본 문법은 다음과 같습니다: 

{{FileBox|filename=menu.xml|title=메뉴용 XML 문법 예제|lang=xml|1=
<?xml version="1.0" encoding="UTF-8"?>
<openbox_menu>
<separator label="NAME_OF_SEPARATOR" />
<menu id="IDENTIFIER" label="NAME_OF_MENU">
  <item label="NAME_OF_PROGRAM">
    <action name="execute"><execute>/LOCATION/OF/BINARY</execute></action>
  </item>
</menu>
</openbox_menu>
}}

다음 예제에서는 창에서 보유한 표준 옵션으로 실행하는 모든 프로그램에서 동작하겠지만, 어떤 프로그램을 실행할 때 붙일 옵션은 어떻게 할까요? 역시 걱정할 필요가 없습니다. 마찬가지로 그냥 명령에 옵션을 추가하면 됩니다.

{{FileBox|filename=menu.xml|title=명령 옵션 추가|lang=xml|1=
<?xml version="1.0" encoding="UTF-8"?>
<openbox_menu>
<separator label="NAME_OF_SEPARATOR" />
<menu id="IDENTIFIER" label="NAME_OF_MENU">
  <item label="NAME_OF_PROGRAM">
    <action name="execute"><command>/LOCATION/OF/BINARY --OPTION1 --OPTION2</command></action>
  </item>
</menu>
</openbox_menu>
}}

위에서 제공한 두가지 예제에서 대문자로 된 부분을 올바른 정보로 간단하게 바꾸십시오. 아니면, {{Path|menu.xml}} 파일을 직접 편집하지 않고도 사용자가 직접 메뉴를 개별 편집할 수 있도록 하는 그래픽 인터페이스 <tt>obmenu</tt>를 사용하십시오. 매우 작은 프로그램이며 어떤 XML 구문도 입력하지 않고도 상당 부분을 사용자가 개별적으로 설정할 수 있습니다.

=== Openbox 테마 및 동작 설정 ===

최소화하고 간편화한 측면에 있어 Openbox는 놀랍게도 사용자가 원하는대로 설정할 수 있고, 유연합니다. 사용자는 테마, 모양새, 창 위치, 위젯 결합 등의 관련 다양한 설정을 쉽게 바꿀 수 있습니다. Openbox에서 이 설정을 처리하는데 두가지 선택지가 있습니다. {{Path|~/.config/openbox/rc.xml}}를 직접 편집할 수 있거나 설정을 빨리 바꿀 수 있게 해주는 GUI 도구를 사용할 수 있습니다. 

{{Path|rc.xml}} 파일을 직접 편집하려면, 텍스트 편집기를 열고 하나씩 바꾸어나가십시오. 이 경우 원본 파일을 잊지 말고 {{Path|~/.config/openbox/rc.xml.default}} 파일 같이 백업하십시오. 편집 과정을 돕는 자체 문서화 주석이 풍부하게 널려있습니다. 다른 자료를 찾아보신다면, [http://openbox.org/wiki/Help:Contents#Configuration Openbox 설정 안내서]를 살펴보십시오. 

{{Path|rc.xml}} 파일을 직접 편집하는게 적절하지 않다면 GTK+ 기반 프로그램으로 Openbox의 테마 및 동작을 관리해보십시오. 사용할 수 있는 프로그램은 ObConf 이며, Openbox 자체를 다루는 것만큼 시스템에 쉽게 설치할 수 있습니다. 

{{RootCmd|emerge obconf}}

터미널에서 {{c|obconf}}를 입력하여 설정 관리자를 여십시오. ObConf의 항목 분류로 이동하여 항목을 추가하셔서 Openbox 메뉴에 나타날 수 있게 하십시오. 상단의 "menu.xml 파일 편집" 예제가 도움을 받기가 좀 그렇다면 메뉴 항목 처리 예제로 ObConf를 활용하겠습니다. 

{{FileBox|filename=menu.xml|title=obconf 사용|lang=xml|1=
<?xml version="1.0" encoding="UTF-8"?>
<openbox_menu>
<menu id="1" label="Configuration">
  <item label="OpenBox Config">
    <action name="execute"><execute>/usr/bin/obconf</execute></action>
  </item>
</menu>
</openbox_menu>
}}

ObConf가 Openbox 동작 관련 대부분 설정을 편집하는데 굉장한 역할을 하는 GUI 도구이긴 하지만 {{Path|rc.xml}} 파일 자체에서 나타나는 거의 대부분의 설정처럼 다룰 수는 없습니다. 더 많은 내용은 [http://openbox.org/wiki/Configuration Openbox 위키]<sup style="color:#ff0077">en</sup>를 참고하십시오.

{{Note/ko|최근 버전의 Openbox(>3.4.7.2)에서, 하위메뉴를 열 때 약간의 지연현상을 발견했습니다. 이 설정은 rc.xml파일에서 도입했으며 <code><nowiki><submenuShowDelay>100</submenuShowDelay></nowiki></code>로 했을 때 나타납니다. 개인적으로 필요한 만큼 더 낮은 숫자를 설정하면 간단하게 해결됩니다.}}

=== 자동 시작 설정 ===

위에서 언급한 바와 같이 Openbox를 설치한 후 {{c|startx}} 명령을 처음 실행할 때 대부분의 구성요소가 나타나지 않습니다. 메뉴를 직접 설정하고 창 관리자의 동작을 바꾸고 나면 대부분의 사용자는 일부 프로그램을 Openbox 세션 시동시 자동으로 시작하게 하려 할 것입니다. 이러한 사용자의 요구사항 충족을 용이하게 편집할수 있는 {{Path|autostart.sh}} 스크립트가 있습니다. {{Path|menu.xml}} 파일처럼 {{Path|autostart.sh}} 스크립트의 위치는 두 군데로 나뉩니다. 하나는 시스템 영역의 위치({{Path|/etc/xdg/openbox/autostart.sh}}), 다른 하나는 사용자 개별 지정 위치({{Path|~/.config/openbox/autostart.sh}}) 입니다. 

{{Path|autostart.sh}} 기본 내용을 보시면, gnome-settings-daemon, XDG 등의 프로그램을 호출하는 수많은 줄이 들어있는 모습을 보실 수 있습니다. 이 줄은 프로그램을 설치하고 설정하지 않으면 로그아웃을 진행할 때 오류가 나타납니다. Openbox를 시작할 때 오류를 없애는 가장 쉬운 방법은 해당 줄을 # 기호로 주석처리하는 방법입니다. 

{{FileBox|filename=autostart.sh|title=autostart에서 일부 코드 주석 제ㄹ거|lang=bash|1=
# Run XDG autostart things. By default don't run anything desktop-specific
# DESKTOP_ENV=""
# if which /usr/lib/openbox/xdg-autostart >/dev/null; then
#  /usr/lib/openbox/xdg-autostart $DESKTOP_ENV
# fi
}}

위 예제에서 각 줄마다 주석 기호 (#)를 첨가했습니다. 주석처리 방식은 해당 줄을 완전히 삭제하는 것보단 나은데 나중에 시작 항목 지원기능 일부를 추가하려 할지도 모르기 때문입니다. 따라서 해당 위치의 기본 줄은 언급한대로 처리하는 방식이 일을 쉽게 처리하는 방식입니다. 

{{Path|autostart.sh}} 스크립트로의 프로그램 추가는 많은 프로그램의 이름을 쓰는 만큼 쉽습니다. {{Package|app-admin/conky}}(경량 시스템 감시 프로그램)를 설치했고 Openbox 세션에서 자동으로 시작해야 한다면, 다음 줄을 {{Path|autostart.sh}} 파일에 간단하게 추가하기만 하면 됩니다: 

{{FileBox|filename=autostart.sh|title=Conky를 autostart.sh에 추가하기|lang=bash|1=
conky &
}}

명령 뒤에 붙은 앰퍼샌드(&)는 프로그램을 백그라운드에 불러오도록 합니다. 대부분 사용자는 Openbox와 기타 프로그램이 앞서 실행한 프로그램이 끝날 때까지 기다리지 않고 동작하게 하려고 {{Path|autostart.sh}} 스크립트에서 모든 프로그램을 백그라운드에 불러내려 할 것입니다.

=== PolKit 설정 ===

수많은 프로그램은 [http://www.freedesktop.org/wiki/Software/polkit/ PolKit] 인증 프레임워크에 의존합니다. 해당 프로그램은 Openbox 세션에서 실행하는 <code>polkit-gnome</code>과 같은 PolKit 대리자 프로그램이 필요합니다. 

먼저 대리자 프로그램을 설치하십시오: 

{{RootCmd|emerge polkit-gnome}}

이제 Openbox에 로그인할 때 PolKit을 자동으로 시작하도록 설정할 차례입니다. 다음 줄을 {{Path|~/.config/openbox/autostart}}(단일 사용자용) 또는  {{Path|/etc/xdg/openbox/autostart.sh}}(모든 사용자용)에 추가하십시오: 

{{FileBox|filename=autostart.sh|title=자동으로 PolKit 시작|lang=bash|1=
sleep 1 && /usr/libexec/polkit-gnome-authentication-agent-1 &
}}

=== 바탕 화면 설정 ===

거대한 데스크톱 환경에서 사용자가 권한을 받아야 할 어떤 요소는 Openbox에 기본으로 들어있지 않습니다. 데스크톱 바탕 화면이 이 경우입니다. 그림을 바탕 화면으로 설정하려면 {{Package|media-gfx/feh}} 또는 {{Package|x11-misc/nitrogen}}과 같은 프로그램으로 이머지하십시오. <code>feh</code>는 간단한 이미지 보기 프로그램이며 바탕 화면을 지정할 수 있으며, ''그리고'' 자동 시작 스크립트에 간단하게 넣을 수 있습니다. <code>feh</code>를 이머지 하고 나면 바탕 화면을 설정할 다음 명령을 실행하십시오: 

{{Note/ko|feh는 화면 해상도만큼 크기를 늘리는 --bg-scale 대신 쓸 수 있는 옵션이 여러가지가 있습니다. feh 문서를 참고하십시오.}}

{{Cmd|feh --bg-scale /path/to/image.jpg}}

바탕 화면을 직접 설정하고 나면, 사용자 내 폴더에 {{Path|.fehbg}} 파일을 만듭니다. 이 파일에는 터미널에 들어갔을 때 입력한 명령이 들어있기만 할 뿐이며, 다른 바탕 화면 명령을 실행하면 자동으로 업데이트합니다. 이제, 바탕화면을 로그인한 후 자동으로 설정하려면 {{Path|autostart.sh}} 스크립트에 다음 줄을 추가하십시오: 

{{Cmd|source $HOME/.fehbg &}}

이 프로그램 대신 <code>nitrogen</code>을 사용해보십시오. 이 프로그램은 바탕 화면 그림용 폴더를 사용자가 설정할 수 있으며, 그림의 미리보기를 볼 수 있고, 데스크톱 크기만큼 크기를 맞추고, 늘이며, 바둑판 형식으로 데스크톱에 배치할 수 있습니다. 

<code>nitrogen</code>을 설치하고 Openbox 메뉴에 끌어 다 넣으려면 확실하지 않다기보단, 더 많은 처리 과정이 필요합니다. 먼저 <code>emerge nitrogen</code>를 실행한 후, 바탕 화면 그림이 있는 폴더를 매개변수로 지정하여 <code>nitrogen</code>를 실행하십시오: 

{{Cmd|nitrogen /path/to/the/backgrounds/folder}}

그 다음, 바탕 화면 그림을 설정하는데, 로그아웃을 하면 그 자리에에 그림이 더이상 남아나지 않음을 기억해두십시오. <code>feh</code>와 마찬가지로 {{Path|autostart.sh}} 스크립트를 편집하여 다음 줄을 추가하면 바탕 화면을 복구합니다. 

{{Cmd|nitrogen --restore &}}

이 명령은 Openbox 세션을 시작할 때 nitrogen을 자동으로 불러오며, feh보단 불러오는 시간이 약간 느릴 수 있습니다.

== Openbox와 사용할 프로그램 ==

다음은 Openbox 환경에서 사용할 몇가지 프로그램의 목록입니다. 목록에는 여러가지 터미널 에뮬레이터, 파일 관리자, 패널 등이 있으며, 이들 목록은 철저하게 고려한게 아닙니다. 더 많은 옵션의 정보는 포티지의 적당한 항목 분류에서 확인해보십시오. 

=== 터미널 에뮬레이터 ===

* {{Package|lxde-base/lxterminal}} 은 LXDE의 기본 터미널 에뮬레이터입니다. 매우 가볍고 VTE를 기반으로 합니다. EvilVTE는 (투명도 포함) 개별 설정 옵션이 많이 들어있는데, LXterminal은 (다른 터미널 에뮬레이터보다) 좀 더 일반적인 설정 옵션(글꼴, 색상, 등)을 갖추고 있는 그래픽 인터페이스입니다.

* {{Package | x11-terms/evilvte}}는 엄청나게 가벼운 터미널 에뮬레이터이며 VTE를 기반으로합니다. 탭, 다중 인코딩을 지원하며 확장성이 뛰어나고 다루기 쉬운 설정 파일도 지원합니다.

* {{Package|x11-terms/mrxvt}}은 다중 탭을 지원하는 XFT 지원 rxvt 모조본이며, 투명 배경과 CJK 언어를 지원합니다. 각 탭마다 세션을 지원하는 특징이 있습니다.

* {{Package|x11-terms/aterm}} 은 rxct에 투명성과 이전 버전 호환성을 지원합니다. AfterStep 창 관리자용으로 설계했지만 다른 환경에 쉽게 통합할 수 있습니다.

*  {{Package|x11-terms/eterm}}은 vt102 기반 터미널이며 xterm보다 추가 기능이 많은 대체품으로 설계했습니다.

* {{Package|x11-terms/rxvt-unicode}} 는 rxvt 복제품이며 유니코드, 데몬, 내장 펄 해석기, 다중 글꼴 동시 지원 등의 기능을 보유하고 있습니다.

* {{Package|x11-terms/xfce4-terminal}} 는 VTE 기반 Xfce 데스크톱 환경 기본 터미널 에뮬레이터이며, 실행하려면 Xfce 라이브러리가 필요합니다. 하지만 여전히 상당히 빠른편이며 투명 배경을 지원하고 쉽게 설정을 바꿀 수 있습니다.

=== 파일 관리자 ===

* {{Package|x11-misc/pcmanfm}} 은 LXDE용 가벼운 파일 관리자입니다. 탭 브라우징, 끌어다 놓기, 작은 미리보기 이미지, 즐겨찾기, 볼륨 관리, 검색 등의 기능을 지원합니다. 또한 데스크톱 바탕 화면과 데스크톱 아이콘 그리기(둘 다 설정에 따라 동작) 관리 기능을 지원합니다.

* {{Package|xfce-base/thunar}} 는 xfce의 표준 파일 관리자입니다. 여러 파일 이름 바꾸기, 사용자 설정 가능 동작, 확장 프레임워크, 미디어 태그 편집 등을 지원하는 추가 플러그인 기능을 갖추고 있습니다. Xfce 라이브러리에 의존하지만 노틸러스(그놈)와 컹커러(KDE)에 비하면 상당히 간소화됐습니다.

* {{Package|gnome-base/nautilus}}는 그놈 데스크톱 환경의 강력한 파일 관리자입니다. 볼륨 관리, 미리보기 이미지, 검색, 시스템 설정 등의 기능을 갖추고 있습니다. 적절한 기능을 수행하기 위해 그놈 라이브러리 대부분에 의존하며 다른 파일 관리자와 비교했을 때 조금 규모가 큽니다.

* {{Package|app-misc/gentoo}}(위대한 리눅스 배포판과는 전혀 상관이 없는) 두개의 하위창을 지닌 파일 관리자입니다. 엄청나게 가볍지만 최신 파일 관리자에서 잘 알려진 몇가지 기능이 빠져있습니다. 이전 하드웨어 또는 근본 시스템 설정이 필요할 때 고려할 만합니다.

* {{Package|app-misc/emelfm2}} 는 미드나잇 커맨더의 핵심부를 구현한 파일 관리자입니다. 이 프로그램은 두개의 하위 창을 지니고 있습니다. 젠투 파일 관리자(위에 언급)와 같이, 그냥 뼈대 그 자체이며 새로운 파일 관리자에서 볼 수 있는 대부분의 일반 적인 기능이 없습니다. 그러나 따로 나뉘어 있는 창에 내장 명령줄을 배치하여 다른 파일 관리자에서 볼 수 없는 몇가지 가능을 제공합니다.

=== 데스크톱 관리 프로그램 ===

* Though {{Package|x11-misc/pcmanfm}} 의 주요 기능은 파일 관리자이지만, (<tt>feh</tt> 또는 <tt>nitrogen</tt> 대신)데스크톱 배경 화면을 관리하고 데스크톱 아이콘을 그립니다.

* {{Package|x11-misc/idesk}}는 데스크톱 아이콘을 그리는데 사용하는 단순한 프로그램입니다. 그림자 기능과 글꼴표현상 계단현상 방지, PNG 이미지 형식, ''격자'' 배치, 데스크톱 배경화면 바꾸기 기능을 지원합니다.

=== 패널 ===


*  [http://code.google.com/p/tint2/ Tint2]는 간단하고 가벼운 패널 및 작업 표시줄입니다. 색상 채우기, 투명도 조절, 시계, 가상 데스크톱 간 끌어다놓기, 시스템 표시줄, 배터리 감시기를 지원합니다. 게다가 창 관리자의 프로그램 메뉴를 표시할 단추를 추가할 수 있습니다.

* {{Package|x11-misc/pypanel}} 는 파이썬 및 C로 작성한 설정하기 쉬운 패널입니다. 투명도 조절, 그림자 효과, 뽀샤시한 효과, 위치 지정, 배치 설정, 글꼴 모양새, 자동 숨김, 프로그램 실행기, 시계 등의 기능을 갖추고 있습니다.

* {{Package|lxde-base/lxpanel}} 은 LXDE 기본 패널이자 작업 표시줄입니다. 실행 도우미, 메뉴, 시계, GUI 기반 설정 프로그램 기능을 갖추고 있습니다. 일부 꾸러미에 대해서만 의존성이 있지만 풍부한 기능이 있어 가벼운 시스템을 갖추는데 좋은 선택이 됩니다.

* {{Package|xfce-base/xfce4-panel}} 은 xfce 데스크톱 환경의 기본 패널입니다. 이 프로그램에서는 프로그램 실행 도우미, 분리 가능한 메뉴, 페이저, 작업 목록, 시계, 애플릿 등의 기능을 지원합니다. 허나 다른 패널과는 의존성이 없는 xfce 라이브러리 일부가 필요합니다.

* {{Package|x11-misc/fbpanel}} 은 간단하고 굉장히 가벼운 패널이며 창 목록, 실행 도우미, 시계, 기타 멋들어진 기능을 갖추고 있습니다. 기능이 뛰어난 패널을 가지고 있는건 아니며 설정하기엔 거대할수 있지만, 실행하려면 GTK+만 필요합니다.

=== 페이저 및 시스템 표시줄 프로그램 ===


* {{Package|x11-misc/netwmpager}} 는 박스류 환경에 멋들어지게 통합하는 EWMH 규정 준수 페이저입니다. 두드러지는 측면은 없으며, 존재하는 페이저보단 눈에 띄게 개별적으로 이곳저곳 설정할 수 있습니다.

* {{Package|x11-misc/bbpager}} 는 BlackBox용으로 작성한 데스크톱 페이저이지만 Openbox에서도 잘 동작합니다.  BlackBox에 약간의 의존성이 있습니다.

* {{Package|x11-plugins/docker}} 는 Openbox용으로 특별히 만든 시스템 표시줄입니다. 추가 의존성은 없으며 GTK 또는 QT 기반 프로그램을 지원하는 표시줄 아이콘을 보여주고 사용할 수 있는 기능을 제공합니다.

* {{Package|x11-misc/trayer}} 는 FBpanel 코드를 약간 수정한 시스템 표시줄이며, 주로 FVWM과 사용합니다. 주목할만한 기능 중 하나는 투명 표시 기능입니다.

=== 세션 관리자 ===


* {{Package|lxde-base/lxsession}} is the stripped down session manager from LXDE. It is designed to remember applications that the user was running at the last logout, and to automatically restart those programs. It also supports the HAL daemon.

* {{Package|xfce-base/xfce4-session}} is the session manager from Xfce. It is capable of saving several sessions, and provides methods for logging out, rebooting, and suspending the computer. It does, however, have many Xfce dependencies.

=== 설정 도구 ===


* {{Package|x11-misc/obconf}} is a GUI application allowing to customize the Openbox window manager without manually editing {{Path|~/.config/openbox/rc.conf}}.

* {{Package|lxde-base/lxappearance}} is a GTK theme and icon configurator used with LXDE. It provides a nice graphical interface for setting the theme and icons, while depending on very few extra libraries.

* {{Package|x11-themes/gtk-chtheme}} is a simple application allowing for easier switching of GTK themes and the font. Currently, it does not allow for the switching of icon themes.

* {{Package|x11-themes/gtk-theme-switch}} is another simple application that allows users to change their GTK theme.

=== 기타 ===

* {{Package|app-admin/conky}} 는 날짜 및 시간, CPU 사용량, 메모리 사용량, IMAP/POP3 전자메일, 프로세스 순위정렬, 하드웨어 센서 데이터, 음악 플레이어 정보를 포함한 250개의 객체를 표시할 수 있는 가벼운 시스템 감시 프로그램입니다. 모양새와 데이터 표현을 사용자가 임의대로 정할 수 있습니다. [[Conky/Guide|콘키 설정 안내서]]<sup style="color:#ff0077">en</sup>도 있습니다.

* {{Package|app-editors/leafpad}} 은 간단한 텍스트 편집기입니다. 매우 가볍지만 코드셋 옵션을 갖추고 있고 무제한 실행취소/재실행 기능을 갖추고 있습니다.

* {{Package|media-gfx/feh}} 는 터미널에서 실행하는 간단한 이미지 보기 프로그램이지만 그 외에도 몇가지 기능을 갖추고 있습니다. 이미지를 슬라이드 쇼 방식으로 보여줄 수 있고 인덱스 프린트를 만들거나,  동적 확대/축소, 데스크톱 배경 화면 설정을 할 수 있습니다(자세한 방법은 위에).

* {{Package|media-gfx/gpicview}} 은 GUI 기반 이미지 보기 프로그램입니다. {{c|feh}}에 비하면 의존 요소가 많지만 불러오고 실행하는데 굉장히 빠릅니다.

* {{Package|x11-misc/slim}} is the Simple Login Manager, which allows to login to the Openbox session via a graphical interface instead of the terminal. It has very few dependencies, and supports many themes, but should not be used on machines that require remote logins.

== 데스크톱 환경 안의 Openbox ==

=== LXDE ===

사용자가 ''쫌 더''(!) 많은 부분을 설정할 수 있게 작업 환경의 각 구성요소를 설치했지만 Openbox의 유연성을 여전히 원한다면, Openbox를 기본 창 관리자로 데스크톱 환경을 설정하면 됩니다. 그 환경이 바로 [http://www.lxde.org/ LXDE], 경량 X 데스크톱 환경입니다. Xfce보다 적은 시스템 자원을 소모하도록 만들었으며 Openbox를 기반으로 만들었습니다. 

=== 그놈 안의 Openbox ===

그놈 환경을 이미 설치했다면, Openbox에서 메타시티 창 관리자를 놓으면 됩니다. 다행스럽게도, 할 일은 조금 간단합니다! 편집기를 실행하고 {{Path|~/.xinitrc}} 파일을 연 후, 다음 명령을 안에 넣으십시오: 

{{FileBox|filename=~/.xinitrc|title=Openbox-그놈 세션을 .xinitrc에 추가하기|lang=bash|1=
exec openbox-gnome-session
}}

GDM 또는 다른 그래픽 로그인 관리자를 사용한다면 세션 메뉴에 "GNOME/Openbox" 옵션이 나타납니다. {{Path|~/.xinitrc}}를 직접 편집하는 대신 간단하게 해당 옵션을 선택하기만 하십시오. 

=== KDE 안의 Openbox ===

간단하게 {{Path|~/.xinitrc}} 파일을 편집하여 현재 exec 명령을 다음처럼 바꾸면 KDE에서 Openbox를 창 관리자로 쓸 수 있습니다: 

{{FileBox|filename=~/.xinitrc|title=Openbox-KDE 세션을 .xinitrc에 추가하기|lang=bash|1=
exec openbox-kde-session
}}

이제 {{c|startx}}를 실행하면 사용자는 KDE를 볼 수 있지만 KWin 대신 개별 유연성을 지닌 Openbox 창 관리자를 만나보실 수 있습니다. 

KDM 또는 다른 그래픽 로그인 관리자를 사용한다면 세션 메뉴에 "KDE/Openbox" 옵션이 나타납니다. {{Path|~/.xinitrc}}를 직접 편집하는 대신 간단하게 해당 옵션을 선택하기만 하십시오. 

{{Note|KDE와 Openbox를 활용하는 이 방식은 KDE 3.x 버전에서 시험했습니다. KDE 4.x 시리즈에서도 동작할 것 같은데 아직 시험해보진 않았습니다.}}

=== Xfce 안의 Openbox ===

Openbox에서 Xfce4를 쓰려면, 우선 일반 Xfce 세션을 시작하시고 터미널을 여십시오. 터미널에서 다음 명령을 실행하십시오: 

{{Cmd|killall xfwm4 ; openbox & exit}}

다음 Xfce 세션을 나가시고, "다음 로그인을 위해 세션 저장"이라고 하는 표시 상자에 표시했는지 확인하십시오. 이 옵션 표시는 Openbox를 기본 창 관리자로 설정한 상태를 유지합니다. 그 다음 더이상 기본 로그아웃 메뉴가 동작하지 않는지 확인하십시오. {{Path|menu.xml}} 파일을 열고 이 줄을 찾으십시오: 

{{FileBox|filename=menu.xml|title=나가기 동작|lang=xml|1=
<item label="Exit">
     <action name="Exit"/>
</item>
}}

이 내용을 다음처럼 바꾸십시오: 

{{FileBox|filename=menu.xml|title=새로운 나가기 동작|lang=xml|1=
<item label="Exit">
  <action name="Execute">
    <command>xfce4-session-logout</command>
  </action>
</item>
}}

{{Note/ko|Xfce4에서, Xfdesktop에서 제공하는 루트 메뉴는 Openbox 루트 메뉴 대신 사용합니다.}}

== 추가 참조 ==

[[Xfce/Guide]]

== 외부 자료 ==

이 문서가 Openbox 초기 설치 및 설정 과정을 쉽게 하도록 도와주겠지만 이 주제의 유일한 참고 자료라는 의미는 아닙니다. Openbox 설정을 완벽하게 만드는데 도움을 줄 다른 참고자료가 있습니다. 그 많은 참고자료 중 일부를 하단에 나열했습니다: 

* [http://openbox.org/wiki/Main_Page 공식 Openbox 웹 사이트]<sup style="color:#ff0077">en</sup>는 테마 설정, 메뉴 만들기(파이프 메뉴 포함), 자동 시작 스크립트 등의 더욱 자세한 내용을 찾을 수 있습니다. 또한 기다리던 새 릴리즈, 업그레이드, 개발 참여 방법 절차 정보도 있습니다.

*  [http://urukrama.wordpress.com/openbox-guide/ Urukrama의 Openbox 안내] 블로그에는 GTK+ 테마 전환, 단축키 설정, 데스크톱 효과, Openbox와 사용할 수 있는 다른 프로그램에 대한 상당한 양의 정보가 들어있습니다. 여기에 있는 따라하기 예제 정보는 우분투를 활용하려는 목적이지만, 젠투에서도 쓸 수 있습니다(그리고 다른 리눅스 배포판에서도 가능합니다).

* [http://box-look.org/ Box-Look] 에서는 Openbox에서 활용할 다양한 테마, 아이콘, 배경화면, 글꼴, 도구를 제공합니다(또한 Fluxbox, Blackbox PekWM 등의 box류 창 관리자 프로그램에서도 활용할 수 있습니다).
{{Migrated|originalauthors=nathanzachary and nightmorph}}

[[Category:Window manager]]
