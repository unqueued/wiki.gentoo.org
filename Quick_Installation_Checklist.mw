== Format drive ==
=== BIOS/MBR ===
In this example we create 3 partitions. 128MB /boot, 1024MB swap and rest for /.
{{RootCmd|cfdisk /dev/sda}}
Format partitions.
{{RootCmd
|mkfs.ext4 /dev/sda1
|mkfs.ext4 /dev/sda3
|mkswap /dev/sda2 && swapon /dev/sda2}}

=== UEFI/GPT ===
In this example we create 4 partitions. 128MB /boot, 32MB UEFI, 1024MB swap and rest for /.
{{RootCmd|gdisk /dev/sda|output=
<pre>Create GPT partition table:
Command: o ↵
This option deletes all partitions and creates a new protective MBR.
Proceed? (Y/N): y ↵

Create Partition 1 (/boot):
Command: n ↵
Partition Number: 1 ↵
First sector: ↵
Last sector: +128M ↵
Hex Code: ↵

Create Partition 2 (UEFI):
Command: n ↵
Partition Number: 2 ↵
First sector: ↵
Last sector: +32M ↵
Hex Code: EF02 ↵

Create Partition 3 (swap):
Command: n ↵
Partition Number: 3 ↵
First sector: ↵
Last sector: +1024MB ↵
Hex Code: 8200 ↵

Create Partition 4 (/):
Command: n ↵
Partition Number: 4 ↵
First sector: ↵
Last sector: ↵ (for rest of disk)
Hex Code: ↵

Write Partition Table To Disk:
Command: w ↵
Do you want to proceed? (Y/N): Y ↵</pre>}}

Format partitions.
{{RootCmd|mkfs.ext4 /dev/sda1
|mkfs.ext4 /dev/sda4
|mkswap /dev/sda3 && swapon /dev/sda3}}

== Mount partitions ==
=== BIOS/MBR ===
{{RootCmd|mkdir -p /mnt/gentoo
|mount /dev/sda3 /mnt/gentoo
|mkdir /mnt/gentoo/boot
|mount /dev/sda1 /mnt/gentoo/boot}}
=== UEFI/GPT ===
{{RootCmd|mkdir -p /mnt/gentoo
|mount /dev/sda4 /mnt/gentoo
|mkdir /mnt/gentoo/boot
|mount /dev/sda1 /mnt/gentoo/boot}}

== Install stage3 ==
Find nearest mirror from: http://www.gentoo.org/main/en/mirrors2.xml
{{RootCmd|cd /mnt/gentoo}}
Download stage. Replace amd64 with your arch.
{{RootCmd|wget http://distfiles.gentoo.org/releases/amd64/autobuilds/current-stage3-amd64/stage3-amd64-20140410.tar.bz2}}
Unpack stage.
{{RootCmd|tar xjpf stage3*}}

== Chroot ==
Chroot into gentoo stage.
{{RootCmd|cd /mnt/gentoo
|mount -t proc none proc
|mount --rbind /sys sys
|mount --rbind /dev dev
|cp /etc/resolv.conf etc
|chroot . bash}}

== Download portage tree ==
{{RootCmd|mkdir /usr/portage
|emerge-webrsync}}

== Create user accounts ==
Change root password.
{{RootCmd|passwd}}
Create user. Note, there are no spaces allowed between the groups.
{{RootCmd|useradd -g users -G wheel,portage,audio,video,usb,cdrom -m username
|passwd username}}

== Configure system ==
Configure fstab to match your partitioning.
{{FileBox|filename=/etc/fstab|1=
/dev/sda1		/boot		ext4		noauto,noatime	1 2
/dev/sda3		/		ext4		noatime		0 1
/dev/sda2		none		swap		sw		0 0
/dev/cdrom		/mnt/cdrom	auto		noauto,ro	0 0
}}

Set portage options.
{{FileBox|filename=/etc/portage/make.conf|1=
CFLAGS="-march=native -O2 -pipe"
CXXFLAGS="${CFLAGS}"
# Don't change the CHOST
CHOST="x86_64-pc-linux-gnu"

# choose USE flags you need
USE="alsa usb"

PORTDIR="/usr/portage"
DISTDIR="${PORTDIR}/distfiles"
PKGDIR="${PORTDIR}/packages"
}}

Set locale settings.
{{FileBox|filename=/etc/env.d/02locale|title=Example locale|1=
LANG="en_US.UTF-8"
LC_COLLATE="C"
}}

Also edit {{Path|/etc/conf.d/hostname}}, {{Path|/etc/conf.d/keymaps}} and {{Path|/etc/conf.d/hwclock}}.

Set timezone.
{{RootCmd|ln -sf /usr/share/zoneinfo/Europe/Helsinki /etc/localtime}}

== Install kernel ==
=== Emerge ===
Gentoo-sources is vanilla kernel with gentoo patchset. You could also use vanilla-sources. Linux-firmware contains binary blobs needed for some hardware like wlan cards.
{{RootCmd|emerge -av gentoo-sources linux-firmware
|cd /usr/src/linux}}

=== Configure ===
==== Manual ====
Find out needed modules for your hardware. You should enable these modules in menuconfig. 
{{RootCmd|lspci -nnk}}
Configure kernel. You can search module names by pressing "/" in menuconfig and enable module by pressing the corresponding number.
{{RootCmd|make menuconfig}}
Build kernel and modules.
{{RootCmd|make -j2}}

==== Automatic ====
It is possible to use localyesconfig to select all modules currently loaded by the livecd.
{{RootCmd|make localyesconfig}}
Build kernel and modules.
{{RootCmd|make -j2}}

=== Install ===
Now you can install kernel and modules.
{{RootCmd|make modules_install
|make install}}

== Install bootloader ==
{{FileBox|filename=/etc/portage/make.conf|UEFI settings for grub|1=
# Specify the correct setting for your system PC BIOS is "pc", UEFI on x86_64 is "efi-64"
GRUB_PLATFORMS="efi-64"
}}

{{RootCmd
|emerge -av grub
|grub2-install /dev/sda # PC BIOS
|grub2-install --target{{=}}x86_64-efi /dev/sda # UEFI on PC}}
Edit grub config.
{{RootCmd|nano /boot/grub/grub.cfg}}
Here is simple example config.
{{FileBox|filename=/boot/grub/grub.cfg|title=Example manual config|1=
set default=0
set timeout=1

menuentry "Gentoo" {
linux (hd0,1)/vmlinuz-3.14.4-gentoo root=/dev/sda3 rootfstype=ext4 net.ifnames=0 quiet ro
}
}}

Alternatively, you can use ''grub2-mkconfig'':
{{RootCmd|grub2-mkconfig -o /boot/grub/grub.cfg|output=<pre>
Found vmlinuz-3.14.4-gentoo
</pre>}}

== Install network tools ==
Install tools to configure network interfaces.
{{Emerge|iproute2 dhcpcd wireless-tools iw wpa_supplicant}}

== Exit chroot, unmount and reboot ==
{{RootCmd|exit
|cd /mnt
|umount -R gentoo
|reboot}}

== External resources ==

* [http://www.gentoo.org/doc/en/handbook/index.xml Gentoo Handbook]
* [http://www.gentoo.org/doc/en/gentoo-x86-quickinstall.xml Gentoo Linux x86 Quick Install Guide]

[[Category:Core system]]
