GNU Screen is a program that enables the user to create sessions and have several virtual consoles.

== Installation ==
Full-screen window manager that multiplexes physical terminals between several processes.<br>
{{Package|app-misc/screen}} is available on Gentoo Linux and supports the following useflags:
{{USEflag
|package=app-misc/screen
|debug++no+
|nethack
|pam
|selinux++no+
|multiuser
}}

You can install Screen using the following command:
{{Emerge|app-misc/screen}}

The configuration files are located in

{{Code|Screen Configuration Files|<pre>
/etc/screenrc
~/.screenrc</pre>}}

== Usage ==
General usage of Screen
=== Start Session ===
Screen can be started with the following command:
{{Cmd|screen}}
Once started is will create a socket for the session in /var/run/screen/S-<username>
You can use any key combination within the session except of {{Key|Ctrl}}+{{Key|a}} which initiates the ''Command-Mode''.<br>
Give the session a reasonable name on startup:
{{Cmd|screen -t portage}}
Start a command in a screen session without attaching to it (like a daemon):
{{Cmd|screen -t portage -d -m emerge -DuN world}}
=== Commands ===
In ''Command Mode'' ({{Key|Ctrl}}+{{Key|a}}) the following key combinations can be used:
* {{Key|c}} = create another terminal
* {{Key|n}} = switch to the next terminal
* {{Key|d}} = detach from the current session

=== Resume Session ===
After the session is detached, all the active terminals remain active and so do commands that didn't finish yet. To list existing sessions:
{{Cmd|screen -ls
|output=<pre>There is a screen on:
        30014.pts-1.disi-bigtop (Detached)
1 Socket in /var/run/screen/S-disi.
</pre>}}
To resume this session:
{{Cmd|screen -r 30014.pts-1.disi-bigtop}}

=== Session within Session Recursion ===
You can use a Screen within a Screen session.&nbsp; This occurs when you connect to a another host's Screen session from within your Screen session.

To signal the secondary (remote) Screen session with the Meta key, you issue the key twice to signal the second (remote) Session.

{|
|{{Key|Ctrl}}+{{Key|a}}||Your normal meta key usage on your local screen
|-
|{{Key|Ctrl}}+{{Key|aa}}||Signals the second (remote) Session
|-
|{{Key|Ctrl}}+{{Key|aaa}}||Signals the third (remote) Session
|-
|{{Key|Ctrl}}+{{Key|aaaa}}||Signals the fourth (remote) Session, and so on
|}

Some tend to remap the Meta key on the other terminals so they don't have to count.&nbsp; However, if you use the console/terminal often, there tends to be a shortage of keys on the keyboard.

== Hardstatus Customization ==
Customizing the status line, or hardstatus line in GNU Screen terminology is quite common.  The following will get you started.

{{File|$HOME/.screenrc||<pre>
hardstatus alwayslastline
hardstatus string '%{= kG}[ %{G}%H %{g}][%= %{= kw}%?%-Lw%?%{+b m}(%{W}%n*%f%t%?(%u)%?%{m})%{-b w}%?%+Lw%?%?%= %{g}][%{c} %D %M %d %{g}%c %{g}]'
</pre>}}


Screenshot of what my hardstatus line looks like using the above hardstatus incantation, along with nine additional terminal titles (ie. screen -t bash 7  bash --noprofile") defined within the .screenrc file.&nbsp; Each terminal gives me Calendar (calcurse), HTop (htop), startx (manual startx/DWM WM), Root (su), WWW (elinks), EMail (mutt) and a multitude of additional (bash) shells for working in.&nbsp; (This screenshot unfortunately omits color.)
{{Cmd|<pre>[ localhost2 ][                    0$ Calendar  1$ HTop  2$ startx  3$ Root  4$ WWW  5$ Email  6$ bash  7-$ bash  (8*$bash)                     ][ Tue Nov 15  3:02 ]</pre>}}

== TTY Autologin with a GNU Screen Session ==
The following will allow your system to auto login as your user, and automatically initiate a GNU Screen session on tty2.&nbsp; A good scenario for this; You're off the network, secluded from society, and you find entering a password is a bit redundant.&nbsp; The following demonstrates using the BASH Shell.

{{Warning|Take heed of the obvious possible security implications this has!}}


MinGetty will give you autologin capability along without having to use a password.
{{Emerge|net-dialup/mingetty}}


Comment-out the second TTY (ie. c2, or terminal number of your choosing) and add mingetty with autologin capability.
{{File|/etc/inittab||<pre>
-- c2:2345:respawn:/sbin/agetty 38400 tty2 linux
++ #c2:2345:respawn:/sbin/agetty 38400 tty2 linux
++ scr2:4:respawn:/sbin/mingetty --autologin USER_NAME tty2 linux
</pre>}}
Replace the above "USER_NAME" with your login name!

Add a line within your boot loaders configuration file to specify loading the init #4 level.&nbsp; (Referencing the "scr2:4" level specified within the above inittab file.)&nbsp; Also, utilize the "nox" option as well.&nbsp; (The init level 4 and nox options are a little vague from my recollection.&nbsp; If something needs further documenting here for clarification, please do so!)
{{File|/boot/grub/menu.lst||<pre>
title Gentoo - Console on ttyS1 - No X using Framebuffer - GNU Screen Console
# Default Entry
#:0
    root (hd0,1)
    kernel (hd0,1)/boot/vmlinuz quiet root=/dev/sda2 nox video=uvesafb:nocrtc,ywrap,mtrr:3,1280x1024-16@60 irqpoll 4
</pre>}}

At this point, your system can now auto login on TTY2 with your default shell.&nbsp; Assuming you're using the BASH shell, you can start GNU Screen automatically by adding the "screen" command to your $HOME/.bash_profile file.&nbsp; This file is executed automatically when you first login.&nbsp; (Make sure you start any subsequent BASH shells using the "bash --no-profile" switch, including shells started within the $HOME/.screenrc files!)

{{File|$HOME/.bash_profile||<pre>
# You don't need the "if/fi" statements.&nbsp; I only make mention to give you the idea of using a shared $HOME/.bash_profile.
# if [ $HOSTNAME = "localhost1.local" ]; then

    # Insert any $VARIABLES you want exported to the environment before GNU Screen is executed.

    # Insert any commands you want started on initial login before screen is executed.

    # vico/case checks if we're running from only a virtual tty
    vico="$(tty | grep -oE ....$)"
    case "$vico" in
        tty2) screen -wipe; ionice -c 2 -n 0 screen -RD ;;
    esac
    # Nothing further is executed after "screen -RD" unless you use "&"

# elif [ $HOSTNAME = "localhost2.local" ]; then
# fi
</pre>}}

== Links ==
[http://www.gnu.org/software/screen/ gnu.org screen page]

== See also ==
* [[tmux]] (an alternative to GNU screen)
* [[screenie]] (A GNU screen wrapper)
* [[byobu]] (Profiles and configuration utilities for GNU screen)

[[Category:Software]]
