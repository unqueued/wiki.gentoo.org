{{Lowercase title}}

<languages />


{{Metadata|abstract=q 애플릿은 C로 작성한 작고 빠른 포티지 도우미 도구의 모음입니다. 이 안내서에서는 Package|app-portage/portage-utils 패키지로 알려진 이들 도우미 도구의 일반적인 사용법을 다룹니다.}}

q 애플릿은 C로 작성한 작고 빠른 포티지 도우미 도구의 모음입니다. 이 안내서에서는 {{Package|app-portage/portage-utils}} 꾸러미로 제공하는 도우미 도구의 일반 사용법을 다룹니다.

== 빠른 참조 ==

Install the q applets:

{{Emerge|app-portage/portage-utils}}

To see the available applets with a short description of their function, use <kbd>q --help</kbd>:

{{Cmd|q --help|output=<pre>
Usage: q <applet> <args>  : invoke a portage utility applet
  
Currently defined applets:
        q <applet> <args> : virtual applet
    qatom <pkg>           : split atom strings
   qcache <action> <args> : search the metadata cache
   qcheck <pkgname>       : verify integrity of installed packages
 qdepends <pkgname>       : show dependency info
    qfile <filename>      : list all pkgs owning files
    qglsa <action> <list> : check GLSAs against system
    qgrep <misc args>     : grep in ebuilds
    qlist <pkgname>       : list files owned by pkgname
     qlop <pkgname>       : emerge log analyzer
   qmerge <pkgnames>      : fetch and merge binary package
     qpkg <misc args>     : manipulate Gentoo binpkgs
  qsearch <regex>         : search pkgname/desc
    qsize <pkgname>       : calculate size usage
    qtbz2 <misc args>     : manipulate tbz2 packages
     quse <useflag>       : find pkgs using useflags
    qxpak <misc args>     : manipulate xpak archives
  
Options: -[irmM:vqChV]
  -i, --install        * Install symlinks for applets
  -r, --reinitialize   * Reinitialize ebuild cache
  -m, --metacache      * Reinitialize metadata cache
  -M, --modpath  <arg> * Module path
  -v, --verbose        * Make a lot of noise
  -q, --quiet          * Tighter output; suppress warnings
  -C, --nocolor        * Don't output color
  -h, --help           * Print this help and exit
  -V, --version        * Print version and exit</pre>
}} 

Before using the applets, initialize the cache first:

{{RootCmd|q -r}}

== 작은 포티지 유틸리티 ==

The {{Package|app-portage/portage-utils}} package is a collection of very fast utilities written in C, which are meant to offer a faster but more limited alternative to their {{Package|app-portage/gentoolkit}} counterparts. Please note that portage-utils is not meant to replace [[Gentoolkit|gentoolkit]]. Its utilities are much more efficient than the equivalent ones from [[Gentoolkit|gentoolkit]] and might be better suited to be used in scripts that need to call Portage repeatedly, but they ''do not'' offer the same functionality. It does not consider eclasses and does not provide tools like <tt>revdep-rebuild</tt> or <tt>glsa-check</tt>.  

The complete list of applications that are provided by {{Package|app-portage/portage-utils}} can be listed by typing <kbd>man q</kbd> or <kbd>q --help</kbd>. Please read the man page for each utility described, as this guide is only meant to be a short reference for the most useful functions and does not include all the information about each application.

== 사용법 ==

=== 어떤 파일을 보유한 패키지를 찾는 방법 ===

The <kbd>qfile</kbd> command finds the package to which a file belongs: 

{{Cmd|qfile /etc/fonts/fonts.conf|output=<pre>
media-libs/fontconfig (/etc/fonts/fonts.conf)
</pre>}}

{{Cmd|qfile /usr/share/keymaps/atari/atari-uk-falcon.map.gz|output=<pre>
sys-apps/kbd (/usr/share/keymaps/atari/atari-uk-falcon.map.gz)
</pre>}}

=== 패키지 무결성 검증 ===

To check the MD5 sums or modification times of the files installed by some package, use the <kbd>qcheck</kbd> application: 

{{Cmd|qcheck portage-utils|output=<pre>
Checking app-portage/portage-utils-0.1.13 ...
  * 36 out of 36 files are good
</pre>}}

Of course, all the files which were changed after installation will be reported here. If the application reports configuration files which have been manually edited after installation, then there's nothing to worry about. 

=== 일부 패키지에 의존하는 패키지 조회 ===

Of course there's also an application which allows to list all the packages which depend on some package. This is done using <kbd>qdepends</kbd>. Use the <kbd>-a</kbd> flag to show all the <code>DEPEND</code>, <code>RDEPEND</code>, and <code>PDEPEND</code> information for a package. 

{{Cmd|qdepends -a pygtk|output=<pre>
 * DEPEND
dev-python/pygtk-2.8.2: >=dev-lang/python-2.3 >=x11-libs/gtk+-2.8.0
>=dev-libs/glib-2.8.0 >=x11-libs/pango-1.10.0 >=dev-libs/atk-1.8.0
>=gnome-base/libglade-2.5.0 >=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl >=x11-libs/gtkglarea-1.99
>=dev-util/pkgconfig-0.9 sys-devel/patch
 * RDEPEND
dev-python/pygtk-2.8.2: >=dev-lang/python-2.3 >=x11-libs/gtk+-2.8.0
>=dev-libs/glib-2.8.0 >=x11-libs/pango-1.10.0 >=dev-libs/atk-1.8.0
>=gnome-base/libglade-2.5.0 >=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl >=x11-libs/gtkglarea-1.99
 * PDEPEND
</pre>}}

=== ebuild에 포함한 파일 조회 ===

The <kbd>qlist</kbd> command gives a list of all files that belong to an ebuild. 

{{Cmd|qlist vim|output=<pre>
/usr/bin/gvim
/usr/bin/gvimdiff
/usr/bin/evim
/usr/bin/eview
/usr/bin/gview
/usr/bin/rgvim
[...]
</pre>}}

=== 특정 USE 플래그를 사용하는 패키지 찾기 ===

Listing used USE flags is done with <kbd>quse</kbd>, which must be run as <tt>root</tt>. It may take some time to first create/update the ebuild cache. 

{{Cmd|quse firefox|output=<pre>
app-misc/tracker/tracker-0.12.10-r1.ebuild applet doc eds elibc_glibc exif firefox-bookmarks flac flickr gif
[...]
</pre>}}

=== 패키지 크기 찾기 ===

To show the size of a package, use the <kbd>qsize</kbd> application: 

{{Cmd|qsize vim|output=<pre>
app-editors/gvim-6.4: 10 files, 7 non-files, 2327.516 KB
app-editors/vim-6.4: 6 files, 2 non-files, 2058.14 KB
app-editors/vim-core-6.4: 1024 files, 68 non-files, 10950.984 KB
[...]
</pre>}}

=== 포티지 트리 검색 ===

One of the most powerful tools of {{Package|app-portage/portage-utils}} is <kbd>qsearch</kbd>. This tool allows to search the Portage tree much faster than using the <tt>emerge -s</tt> command. 

사용방법에 대해 약간의 예제를 보도록 하겠습니다: 

{{Cmd|qsearch terminus|output=<pre>
media-fonts/terminus-font A clean fixed font for the console and X11
</pre>}}

The homepage of packages can be queried using the <kbd>-H</kbd> option:

{{Cmd|qsearch -H terminus|output=<pre>
media-fonts/terminus-font http://www.is-vn.bg/hamster/jimmy-en.html
</pre>}}

In another example, let's look for a jabber client:

{{Cmd|qsearch -S "jabber client"|output=<pre>
app-emacs/emacs-jabber A Jabber client for Emacs.
net-im/gajim Jabber client written in PyGTK
net-im/gnome-jabber Gnome Jabber Client
net-im/gossip Lightweight Jabber client for GNOME
net-im/imcom Python commandline Jabber Client
net-im/psi QT 3.x Jabber Client, with Licq-like interface
net-im/tkabber Featureful Jabber client for tcl/tk.
x11-themes/psi-themes Iconsets for Psi, a QT 3.x Jabber Client
</pre>}}

=== emerge 기록에서 정보 빼내기 ===

There is also a tool that allows to extract useful information from the {{Path|emerge.log}} file. It's called <kbd>qlop</kbd> and it can be useful when package compilation times need to be estimated or to compare build times with other systems. It also allows to check what's compiling at the moment and how long it will probably take - which is handy when working in the console and don't have any other means to check it. 

이제 {{Package|dev-lang/perl}}을 빌드하는 시간이 보통 얼마나 걸리는지 살펴보겠습니다:

{{Cmd|qlop -tH perl|output=<pre>
perl: 7 minutes, 52 seconds for 4 merges
</pre>}}

이제 잠깐동안 어떤 패키지를 이머지 했는지, 프로세스를 처리하는데 걸린 시간이 얼마나 되는지 보도록 하겠습니다:

{{Cmd|qlop -c|output=<pre>
* perl-5.8.8-r23
    started: Mon May 21 12:41:11 2007
    elapsed: 19 seconds
</pre>}}

== 추가 참조 ==

* [[Gentoolkit]] article on the Gentoo wiki


{{Migrated|originalauthors=Åukasz Damentko, Joshua Saddler and Marcelo Góes}}

[[Category:Portage tools]]
