{{Lowercase title}}

<languages />


{{Metadata|abstract=q 애플릿은 C로 작성한 작고 빠른 포티지 도우미 도구의 모음입니다. 이 안내서에서는 Package|app-portage/portage-utils 패키지로 알려진 이들 도우미 도구의 일반적인 사용법을 다룹니다.}}

Q 애플릿은 C로 작성한 작고 빠른 포티지 도우미 도구의 모음입니다. 이 안내서에서는 {{Package|app-portage/portage-utils}} 꾸러미로 제공하는 도우미 도구의 일반 사용법을 다룹니다.

== 빠른 참조 ==

Q 애플릿을 설치하십시오:

{{Emerge|app-portage/portage-utils}}

존재하는 애플릿의 간단한 기능 설명을 보려면 <kbd>q --help</kbd>를 사용하십시오:

{{Cmd|q --help|output=<pre>
Usage: q <applet> <args>  : invoke a portage utility applet
  
Currently defined applets:
        q <applet> <args> : virtual applet
    qatom <pkg>           : split atom strings
   qcache <action> <args> : search the metadata cache
   qcheck <pkgname>       : verify integrity of installed packages
 qdepends <pkgname>       : show dependency info
    qfile <filename>      : list all pkgs owning files
    qglsa <action> <list> : check GLSAs against system
    qgrep <misc args>     : grep in ebuilds
    qlist <pkgname>       : list files owned by pkgname
     qlop <pkgname>       : emerge log analyzer
   qmerge <pkgnames>      : fetch and merge binary package
     qpkg <misc args>     : manipulate Gentoo binpkgs
  qsearch <regex>         : search pkgname/desc
    qsize <pkgname>       : calculate size usage
    qtbz2 <misc args>     : manipulate tbz2 packages
     quse <useflag>       : find pkgs using useflags
    qxpak <misc args>     : manipulate xpak archives
  
Options: -[irmM:vqChV]
  -i, --install        * Install symlinks for applets
  -r, --reinitialize   * Reinitialize ebuild cache
  -m, --metacache      * Reinitialize metadata cache
  -M, --modpath  <arg> * Module path
  -v, --verbose        * Make a lot of noise
  -q, --quiet          * Tighter output; suppress warnings
  -C, --nocolor        * Don't output color
  -h, --help           * Print this help and exit
  -V, --version        * Print version and exit</pre>
}} 

애플릿을 사용하기 전에 캐시를 우선 초기화하십시오:

{{RootCmd|q -r}}

== 작은 포티지 유틸리티 ==

{{Package|app-portage/portage-utils}}는 C로 작성한 매우 빠른 유틸리티의 모음으로 {{Package|app-portage/gentoolkit}}의 제한적 대안으로 더 빠른 수단일 뿐입니다. portage-utils가 [[Gentoolkit/ko|gentoolkit]]의 대안이 아님을 참고하십시오. 여기에 있는 유틸리티는 [[Gentoolkit/ko|gentoolkit]]의 동격보다 더 효율적이며, 포티지를 반복적으로 실행해야 할 때 사용하는 스크립트로 적당하겠지만 portage-utils는 동일한 기능을 제공''하지 않습니다''. eclass의 모든 면을 고려하지 않았으며 <tt>revdep-rebuild</tt>와 <tt>glsa-check</tt> 같은 도구를 제공하지 않습니다.  

<kbd>man q</kbd>또는 <kbd>q --help</kbd>를 입력하면 {{Package|app-portage/portage-utils}}에 있는 프로그램의 전체 목록을 볼 수 있습니다. 각각의 유틸리티를 설명한 맨 페이지를 읽어보십시오. 이 안내서는 단지 대부분 쓸모있는 기능에 대한 간단한 참고일 뿐이며 각각의 프로그램에 대한 모든 내용이 있는 것은 아닙니다.

== 사용법 ==

=== 어떤 파일을 보유한 패키지를 찾는 방법 ===

<kbd>qfile</kbd> 파일은 지정한 파일을 포함한 꾸러미를 찾습니다: 

{{Cmd|qfile /etc/fonts/fonts.conf|output=<pre>
media-libs/fontconfig (/etc/fonts/fonts.conf)
</pre>}}

{{Cmd|qfile /usr/share/keymaps/atari/atari-uk-falcon.map.gz|output=<pre>
sys-apps/kbd (/usr/share/keymaps/atari/atari-uk-falcon.map.gz)
</pre>}}

=== 패키지 무결성 검증 ===

일부 꾸러미에서 설치한 파일의 MD5 합 또는 mtimes를 확인하려면 <kbd>qcheck</kbd> 프로그램을 사용하십시오: 

{{Cmd|qcheck portage-utils|output=<pre>
Checking app-portage/portage-utils-0.1.13 ...
  * 36 out of 36 files are good
</pre>}}

물론 설치 후에 바뀐 모든 파일을 여기에 보고합니다. 프로그램에서 설치 후 직접 편집한 설정 파일을 보고한다면, 굳이 걱정할 필요가 없습니다. 

=== 일부 패키지에 의존하는 패키지 조회 ===

물론 일부 꾸러미에 의존하는 꾸러미의 모든 목록을 확인할 수 있게 하는 프로그램도 있습니다. <kbd>qdepends</kbd>를 사용하면 이 일을 해결할 수 있습니다. 패키지에 대해 모든 <code>DEPEND</code>, <code>RDEPEND</code>, <code>PDEPEND</code> 정보를 보려면 <kbd>-a</kbd> 플래그를 사용하십시오. 

{{Cmd|qdepends -a pygtk|output=<pre>
 * DEPEND
dev-python/pygtk-2.8.2: >=dev-lang/python-2.3 >=x11-libs/gtk+-2.8.0
>=dev-libs/glib-2.8.0 >=x11-libs/pango-1.10.0 >=dev-libs/atk-1.8.0
>=gnome-base/libglade-2.5.0 >=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl >=x11-libs/gtkglarea-1.99
>=dev-util/pkgconfig-0.9 sys-devel/patch
 * RDEPEND
dev-python/pygtk-2.8.2: >=dev-lang/python-2.3 >=x11-libs/gtk+-2.8.0
>=dev-libs/glib-2.8.0 >=x11-libs/pango-1.10.0 >=dev-libs/atk-1.8.0
>=gnome-base/libglade-2.5.0 >=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl >=x11-libs/gtkglarea-1.99
 * PDEPEND
</pre>}}

=== ebuild에 포함한 파일 조회 ===

The <kbd>qlist</kbd> command gives a list of all files that belong to an ebuild. 

{{Cmd|qlist vim|output=<pre>
/usr/bin/gvim
/usr/bin/gvimdiff
/usr/bin/evim
/usr/bin/eview
/usr/bin/gview
/usr/bin/rgvim
[...]
</pre>}}

=== 특정 USE 플래그를 사용하는 패키지 찾기 ===

Listing used USE flags is done with <kbd>quse</kbd>, which must be run as <tt>root</tt>. It may take some time to first create/update the ebuild cache. 

{{Cmd|quse firefox|output=<pre>
app-misc/tracker/tracker-0.12.10-r1.ebuild applet doc eds elibc_glibc exif firefox-bookmarks flac flickr gif
[...]
</pre>}}

=== 패키지 크기 찾기 ===

To show the size of a package, use the <kbd>qsize</kbd> application: 

{{Cmd|qsize vim|output=<pre>
app-editors/gvim-6.4: 10 files, 7 non-files, 2327.516 KB
app-editors/vim-6.4: 6 files, 2 non-files, 2058.14 KB
app-editors/vim-core-6.4: 1024 files, 68 non-files, 10950.984 KB
[...]
</pre>}}

=== 포티지 트리 검색 ===

One of the most powerful tools of {{Package|app-portage/portage-utils}} is <kbd>qsearch</kbd>. This tool allows to search the Portage tree much faster than using the <tt>emerge -s</tt> command. 

사용방법에 대해 약간의 예제를 보도록 하겠습니다: 

{{Cmd|qsearch terminus|output=<pre>
media-fonts/terminus-font A clean fixed font for the console and X11
</pre>}}

The homepage of packages can be queried using the <kbd>-H</kbd> option:

{{Cmd|qsearch -H terminus|output=<pre>
media-fonts/terminus-font http://www.is-vn.bg/hamster/jimmy-en.html
</pre>}}

In another example, let's look for a jabber client:

{{Cmd|qsearch -S "jabber client"|output=<pre>
app-emacs/emacs-jabber A Jabber client for Emacs.
net-im/gajim Jabber client written in PyGTK
net-im/gnome-jabber Gnome Jabber Client
net-im/gossip Lightweight Jabber client for GNOME
net-im/imcom Python commandline Jabber Client
net-im/psi QT 3.x Jabber Client, with Licq-like interface
net-im/tkabber Featureful Jabber client for tcl/tk.
x11-themes/psi-themes Iconsets for Psi, a QT 3.x Jabber Client
</pre>}}

=== emerge 기록에서 정보 빼내기 ===

There is also a tool that allows to extract useful information from the {{Path|emerge.log}} file. It's called <kbd>qlop</kbd> and it can be useful when package compilation times need to be estimated or to compare build times with other systems. It also allows to check what's compiling at the moment and how long it will probably take - which is handy when working in the console and don't have any other means to check it. 

이제 {{Package|dev-lang/perl}}을 빌드하는 시간이 보통 얼마나 걸리는지 살펴보겠습니다:

{{Cmd|qlop -tH perl|output=<pre>
perl: 7 minutes, 52 seconds for 4 merges
</pre>}}

이제 잠깐동안 어떤 패키지를 이머지 했는지, 프로세스를 처리하는데 걸린 시간이 얼마나 되는지 보도록 하겠습니다:

{{Cmd|qlop -c|output=<pre>
* perl-5.8.8-r23
    started: Mon May 21 12:41:11 2007
    elapsed: 19 seconds
</pre>}}

== 추가 참조 ==

* [[Gentoolkit]] article on the Gentoo wiki


{{Migrated|originalauthors=Åukasz Damentko, Joshua Saddler and Marcelo Góes}}

[[Category:Portage tools]]
