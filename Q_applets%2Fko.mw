{{Lowercase title}}
<languages />
{{InfoBox stack
|{{InfoBox gdoc|Portage-Tools|header=true}}
|{{InfoBox github|gentoo/portage-utils}}
|{{InfoBox gitweb|portage-utils.git}}
}}

{{Metadata|abstract=q 애플릿은 C로 작성한 작고 빠른 포티지 도우미 도구의 모음입니다. 이 안내서에서는 Package|app-portage/portage-utils 패키지로 알려진 이들 도우미 도구의 일반적인 사용법을 다룹니다.}}

Q 애플릿은 C로 작성한 작고 빠른 포티지 도우미 도구의 모음입니다. 이 안내서에서는 {{Package|app-portage/portage-utils}} 꾸러미로 제공하는 도우미 도구의 일반 사용법을 다룹니다.

The {{Package|app-portage/portage-utils}} package is a collection of very fast utilities written in C, which are meant to offer a faster but more limited alternative to their {{Package|app-portage/gentoolkit}} counterparts. Please note that q applets are not meant to replace [[Gentoolkit|gentoolkit]]. The utilities may be much more efficient than the equivalent ones from [[Gentoolkit|gentoolkit]] and might be better suited to be used in scripts that need to call Portage repeatedly, but they ''do not'' offer the same functionality. q applets do not consider eclasses and do not provide tools like <tt>revdep-rebuild</tt> or <tt>glsa-check</tt>. 

__TOC__

== 설치 ==

=== Emerge ===

Q 애플릿을 설치하십시오:

{{Emerge|app-portage/portage-utils}}

== 설정 ==

애플릿을 사용하기 전에 캐시를 우선 초기화하십시오:

{{RootCmd|q -r}}

== 사용법 ==

=== 실행 ===

{{c|man q}}또는 {{c|q --help}}를 입력하면 {{Package|app-portage/portage-utils}}에 있는 프로그램의 전체 목록을 볼 수 있습니다. 각각의 유틸리티를 설명한 맨 페이지를 읽어보십시오. 이 안내서는 단지 대부분 쓸모있는 기능에 대한 간단한 참고일 뿐이며 각각의 프로그램에 대한 모든 내용이 있는 것은 아닙니다.

기존 애플릿의 간단한 기능 설명을 보려면 {{c|q --help}}를 사용하십시오:

{{Cmd|q --help|output=<pre>
Usage: q <applet> <args>  : invoke a portage utility applet
  
Currently defined applets:
        q <applet> <args> : virtual applet
    qatom <pkg>           : split atom strings
   qcache <action> <args> : search the metadata cache
   qcheck <pkgname>       : verify integrity of installed packages
 qdepends <pkgname>       : show dependency info
    qfile <filename>      : list all pkgs owning files
    qgrep <misc args>     : grep in ebuilds
    qlist <pkgname>       : list files owned by pkgname
     qlop <pkgname>       : emerge log analyzer
   qmerge <pkgnames>      : fetch and merge binary package
     qpkg <misc args>     : manipulate Gentoo binpkgs
  qsearch <regex>         : search pkgname/desc
    qsize <pkgname>       : calculate size usage
    qtbz2 <misc args>     : manipulate tbz2 packages
     quse <useflag>       : find pkgs using useflags
    qxpak <misc args>     : manipulate xpak archives
  
Options: -[irmM:vqChV]
  -i, --install        * Install symlinks for applets
  -r, --reinitialize   * Reinitialize ebuild cache
  -m, --metacache      * Reinitialize metadata cache
  -M, --modpath  <arg> * Module path
  -v, --verbose        * Make a lot of noise
  -q, --quiet          * Tighter output; suppress warnings
  -C, --nocolor        * Don't output color
  -h, --help           * Print this help and exit
  -V, --version        * Print version and exit</pre>
}} 

=== 어떤 파일을 보유한 패키지를 찾는 방법 (qfile) ===

{{c|qfile}} 명령은 지정한 파일을 포함한 꾸러미를 찾습니다: 

{{Cmd|qfile /etc/fonts/fonts.conf|output=<pre>
media-libs/fontconfig (/etc/fonts/fonts.conf)
</pre>}}

{{Cmd|qfile /usr/share/keymaps/atari/atari-uk-falcon.map.gz|output=<pre>
sys-apps/kbd (/usr/share/keymaps/atari/atari-uk-falcon.map.gz)
</pre>}}

=== 패키지 무결성 검증 (qcheck) ===

일부 꾸러미에서 설치한 파일의 MD5 검사합 또는 mtimes를 확인하려면 {{c|qcheck}} 프로그램을 사용하십시오: 

{{Cmd|qcheck portage-utils|output=<pre>
Checking app-portage/portage-utils-0.1.13 ...
  * 36 out of 36 files are good
</pre>}}

물론 설치 후에 바뀐 모든 파일을 여기에 보고합니다. 프로그램에서 설치 후 직접 편집한 설정 파일을 보고한다면, 굳이 걱정할 필요가 없습니다. 

=== Listing packages which depend on some package (qdepends) ===

Of course there's also an application which allows to list all the packages which depend on some package. This is done using <tt>qdepends</tt>. Use the <code>-a</code> option to show all the <code>DEPEND</code>, <code>RDEPEND</code>, and <code>PDEPEND</code> information for a package. 

{{Cmd|qdepends -a pygtk|output=<pre>
 * DEPEND
dev-python/pygtk-2.8.2: >=dev-lang/python-2.3 >=x11-libs/gtk+-2.8.0
>=dev-libs/glib-2.8.0 >=x11-libs/pango-1.10.0 >=dev-libs/atk-1.8.0
>=gnome-base/libglade-2.5.0 >=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl >=x11-libs/gtkglarea-1.99
>=dev-util/pkgconfig-0.9 sys-devel/patch
 * RDEPEND
dev-python/pygtk-2.8.2: >=dev-lang/python-2.3 >=x11-libs/gtk+-2.8.0
>=dev-libs/glib-2.8.0 >=x11-libs/pango-1.10.0 >=dev-libs/atk-1.8.0
>=gnome-base/libglade-2.5.0 >=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl >=x11-libs/gtkglarea-1.99
 * PDEPEND
</pre>}}

=== ebuild에 포함한 파일 조회 (qlist) ===

The <tt>qlist</tt> command gives a list of all files that belong to an ebuild. 

{{Cmd|qlist vim|output=<pre>
/usr/bin/gvim
/usr/bin/gvimdiff
/usr/bin/evim
/usr/bin/eview
/usr/bin/gview
/usr/bin/rgvim
[...]
</pre>}}

=== 특정 USE 플래그를 사용하는 패키지 찾기 (quse) ===

Listing used USE flags is done with <tt>quse</tt>, which must be run with root permissions. It may take some time to first create/update the ebuild cache. 

{{Cmd|quse firefox|output=<pre>
app-misc/tracker/tracker-0.12.10-r1.ebuild applet doc eds elibc_glibc exif firefox-bookmarks flac flickr gif
[...]
</pre>}}

=== 패키지 크기 찾기 (qsize) ===

To show the size of a package, use the <tt>qsize</tt> application: 

{{Cmd|qsize vim|output=<pre>
app-editors/gvim-6.4: 10 files, 7 non-files, 2327.516 KB
app-editors/vim-6.4: 6 files, 2 non-files, 2058.14 KB
app-editors/vim-core-6.4: 1024 files, 68 non-files, 10950.984 KB
[...]
</pre>}}

=== 포티지 트리 검색 (qsearch) ===

One of the most powerful tools of {{Package|app-portage/portage-utils}} is <tt>qsearch</tt>. This tool allows to search the Portage tree much faster than using the <tt>emerge -s</tt> command. 

사용방법에 대해 약간의 예제를 보도록 하겠습니다: 

{{Cmd|qsearch terminus|output=<pre>
media-fonts/terminus-font A clean fixed font for the console and X11
</pre>}}

꾸러미의 홈페이지는 <code>-H</code> 옵션으로 요청할 수 있습니다:

{{Cmd|qsearch -H terminus|output=<pre>
media-fonts/terminus-font http://www.is-vn.bg/hamster/jimmy-en.html
</pre>}}

다른 예를 들자면, 재버 클라이언트를 살펴보겠습니다:

{{Cmd|qsearch -S "jabber client"|output=<pre>
app-emacs/emacs-jabber A Jabber client for Emacs.
net-im/gajim Jabber client written in PyGTK
net-im/gnome-jabber Gnome Jabber Client
net-im/gossip Lightweight Jabber client for GNOME
net-im/imcom Python commandline Jabber Client
net-im/psi QT 3.x Jabber Client, with Licq-like interface
net-im/tkabber Featureful Jabber client for tcl/tk.
x11-themes/psi-themes Iconsets for Psi, a QT 3.x Jabber Client
</pre>}}

=== emerge 기록에서 정보 빼내기 (qlop) ===

{{Path|emerge.log}} 파일에서 쓸모있는 정보를 빼내는 도구가 있습니다. {{c|qlop}}이라고 하며 꾸러미 컴파일 시간을 추정하거나 다른 시스템과 빌드 시간을 비교할 때 유용합니다. 그때그때 어떤 패키지를 컴파일 했고 얼마나 시간이 걸릴 지 확인할 수 있기도 합니다 - 콘솔에서 작업할 때나 간편합니다. 이를 확인하는데 다른 의미는 없습니다. 

이제 {{Package|dev-lang/perl}}을 빌드하는 시간이 보통 얼마나 걸리는지 살펴보겠습니다:

{{Cmd|qlop -tH perl|output=<pre>
perl: 7 minutes, 52 seconds for 4 merges
</pre>}}

이제 잠깐동안 어떤 패키지를 이머지 했는지, 프로세스를 처리하는데 걸린 시간이 얼마나 되는지 보도록 하겠습니다:

{{Cmd|qlop -c|output=<pre>
* perl-5.8.8-r23
    started: Mon May 21 12:41:11 2007
    elapsed: 19 seconds
</pre>}}

== 추가 참조 ==

* [[Gentoolkit/ko|Gentoolkit]] - 젠투 시스템 관리 작업을 용이하게 돕는 도구 모음.
* [[Qcheck]] - 설치한 꾸러미의 무결성을 검증하는데 사용하는 명령행 도구
{{Migrated|originalauthors=Åukasz Damentko, Joshua Saddler and Marcelo Góes}}

[[Category:Portage tools]]
