{{InfoBox stack
|{{InfoBox todo|Add instructions for systemd|header=true}}
}}

This article describes the setup of microcode-ctl to update the microcode of Intel processors.

== Installation ==

=== Kernel ===
You need to activate the following kernel options:
{{Kernel|Enable CONFIG_MICROCODE and CONFIG_MICROCODE_INTEL|<pre>
Processor type and features  --->
    <M> CPU microcode loading support
    [*]   Intel microcode loading support
</pre>}}

{{Note|If you build it as module, it will automatically get loaded as needed and then unloaded after microcode update saving some memory.}}

=== Software ===
You can now install {{Package|sys-apps/microcode-ctl}}:
{{Emerge|microcode-ctl}}

== Configuration ==
Skip to systemd if that is what you use for init

=== Service ===
You can now start microcode-ctl:
{{RootCmd|/etc/init.d/microcode_ctl start}}
To start microcode-ctl at boot time, add it your boot runlevel:
{{RootCmd|rc-update add microcode_ctl boot}}
{{Note|Using boot runlevel ensures the CPU is updated as soon as possible.}}

=== systemd ===
According to [[Systemd]] simply make sure that the Microcode loader is set as a module in the kernel configuration

== Verification ==
In order to verify if the CPU microcode is being applied you can use the following command:
{{RootCmd|<nowiki>dmesg | grep microcode</nowiki>|output=<pre>
[    0.093399] microcode: CPU0 sig=0x1067a, pf=0x1, revision=0xa07
[    0.093459] microcode: CPU1 sig=0x1067a, pf=0x1, revision=0xa07
[    0.093557] microcode: Microcode Update Driver: v2.00 <tigran@aivazian.fsnet.co.uk>, Peter Oruba
[    7.502437] microcode: CPU0 sig=0x1067a, pf=0x1, revision=0xa07
[    7.503000] microcode: CPU0 updated to revision 0xa0b, date = 2010-09-28
[    7.507419] microcode: CPU1 sig=0x1067a, pf=0x1, revision=0xa07
[    7.508417] microcode: CPU1 updated to revision 0xa0b, date = 2010-09-28
</pre>}}
In this example the microcode of a dual-core Intel CPU has been successfully updated from revision 0xa07 to revision 0xa0b.

[[Category:Processors]]
