<languages />
{{Lowercase title}}
{{InfoBox stack
|{{InfoBox wikipedia|header=true}}
|{{InfoBox gdoc|genkernel}}
}}

'''genkernel''' используется для автоматизации процесса сборки [[kernel/ru|ядра]] и [[initramfs|initramfs]]. Некоторые из общих функций включают:
* конфигурацию исходных текстов ядра
* сборку сжатого ядра {{Path|bzImage}} и его копирование в {{Path|/boot}}
* создание initramfs и копирование ее в {{Path|/boot}}
* создание символьных ссылок в {{Path|/boot}}
* добавление настроенного вручную содержимого в initramfs, такого как файлов, связанных с шифрованием, splash images, дополнительных модулей и так далее.
* сжатие initramfs
* конфигурацию [[bootloader|загрузчика]]

== Установка ==

Для установки {{Package|sys-kernel/genkernel}} сначала выберите подходящие USE-флаги.

{{USEflag|package=sys-kernel/genkernel
|crypt++no
|cryptsetup++no
|ibm++no
|selinux++no
}}

Затем можно запустить установку genkernel.

{{Emerge|genkernel}}

== Вызов genkernel ==

Основная форма вызова команды genkernel выглядит следующим образом:

{{RootCmd|<pre> genkernel [options ...] action
</pre>}}

=== Параметры === 

Поведение genkernel зависит от большого количества параметров, большинство из которых могут быть настроены в файле {{Path|/etc/genkernel.conf}} или переданы команде <code>genkernel</code>. Параметры, переданные с помощью командной строки, имеют больший приоритет, чем те, которые определены в файле {{Path|/etc/genkernel.conf}}. Этот файл очень хорошо продокументирован, но все же давайте исследуем некоторые из наиболее используемых параметров. Для более полного объяснения, обратитесь к комментариям в {{Path|/etc/genkernel.conf}} или выводу команды <code>man genkernel</code>.

{{Note/ru|Некоторые из параметров имеют вариации, которые приводят к противоположному поведению. Они представлены как <tt>--[no-]option_name</tt>, а обратный эффект показан в квадратных скобках, как в следующем примере:
{{Code|Включить или отключить определенный параметр|<pre>
--[no-]menuconfig : Activates [deactivates] ...
</pre> }}
Когда параметры обладают только обратным эффектом, приставка <tt>no-</tt>, и эффект работы команды, который не является опциональным в этом случае, обозначены без квадратных скобок.}}

==== Параметры, воздействующие на взаимодействие с пользователем ====

Параметры конфигурации, перечисленные ниже, помогают решить как нужно взаимодействовать с процессом конфигурации. Пользователи могут даже выбрать требуется или нет сохранять файл конфигурации, созданный в процессе. Ниже следуют основные параметры конфигурации:

;<tt>--[no-]menuconfig</tt>
: Активирует [ или деактивирует ] команду <code>make menuconfig</code> (которая вызывает интерактивное меню конфигурации) перед сборкой ядра.

;<tt>--gconfig</tt>
: Предоставляет утилиту конфигурации ядра, которая зависит от библиотек GTK+. Преимуществом этого параметра является то, что большинство пользователей находят конфигурацию ядра с использованием этого инструмента более легкой и очевидной, так как она полагается на X window system. Недостаток этого параметра заключается в том что Вам необходим X сервер для того, чтобы его использовать, поэтому этот параметр не будет работать в командной строке.

;<tt>--xconfig</tt>
: Предоставляет утилиту конфигурации ядра, которая зависит от библиотек QT. Преимуществом этого параметра является то, что большинство пользователей находят конфигурацию ядра с использованием этого инструмента более легкой и очевидной, так как он полагается на X window system. Недостатком этого параметра является то, что Вам потребуется X сервер для его использования, поэтому он не будет работать в командной строке.

;<tt>--[no-]save-config</tt>
: Сохраняет [или не сохраняет] конфигурацию ядра в файл в каталоге {{Path|/etc/kernels}} для дальнейшего использования.

;<tt>--kernname=&lt;NickName&gt;</tt>: Позволяет модификацию имени ядра и образа initrd в каталоге {{Path|/boot}}, так чтобы полученные образы имели имена {{Path|kernel-&lt;NickName&gt;-version}} и {{Path|initramfs-&lt;NickName&gt;-version}}.

==== Параметры, воздействующие на систему, полученную в результате ====

Параметры конфигурации, перечисленные здесь, определяют какие возможности будут или не будут включены в полученные в результате ядро и образ initrd. 

;<tt>--[no-]splash</tt>
: Включает [или отключает] поддержку [http://fbsplash.berlios.de/wiki/doku.php заставки (framebuffer splash)] в образе собранного с помощью genkernel initrd. Чтобы переписать тему, используемую fbsplash по умолчанию, используйте <tt>--splash=&lt;ПредпочитаемаяТема&gt;</tt> (где <tt>&lt;ПредпочитаемаяТема&gt;</tt> - имя одного из каталогов в каталоге {{Path|/etc/splash}}).

;<tt>--splash-res=&lt;ПредпочитаемоеРазрешение&gt;</tt>
: Этот параметр позволяет выбрать какие разрешения экрана заставки будут поддерживаться в initrd в течение запуска системы. Это полезно по двум причинам. Во-первых, чтобы иметь возможность выбрать только те разрешения заставки, которые уместны для системы. Во-вторых, чтобы избежать излишнего увеличения дискового пространства, требуемого initrd (так как initrd не должен поддерживать разрешения, не соотносящиеся с конфигурацией Вашей системы.) Однако, этот параметр лучше всего опустить, если ядро компилируется для установочного CD; это позволяет поддержку заставки для всех возможных разрешений.

;<tt>--do-keymap-auto</tt>
: Выбор раскладки клавиатуры в течение загрузки.

;<tt>--lvm</tt>
: Включает поддержку использования хранилища данных с помощью [http://sources.redhat.com/lvm2/ Менеджера логических томов] (LVM2) из статических двоичных файлов, если это доступно на системе. Подходящие (статические) двоичные файлы LVM2 компилируются, если они недоступны. Убедитесь, что Вы установили пакет lvm2 на систему с помощью команды emerge lvm2 перед тем, как включить этот параметр, и пересмотрите [[LVM | статью LVM]] на Gentoo wiki.

;<tt>--dmraid</tt>
: Включает поддержку DMRAID; утилиты которая создает RAID-отображения (RAID mappings), используя подсистему ядра device-mapper.
[http://people.redhat.com/~heinzm/sw/dmraid/readme DMRAID] обнаруживает, активирует, деактивирует и отображает свойства программных массивов RAID (например, ATARAID) и содержащихся DOS разделов.

;<tt>--luks</tt>
: Включает поддержку Linux Unified Key Setup, или [http://clemens.endorphin.org/cryptography LUKS]. Это позволяет использовать устройство, зашифрованное LUKS, которое содержит корневую файловую систему. Установите это зашифрованное устройство как <code>crypt_root</code> в загрузчике (а <code>real_root</code> должно быть незашифрованным устройством, созданным LUKS).

;<tt>--disklabel</tt>
: Добавляет поддержку метки диска и UUID в initrd.

;<tt>--iscsi</tt>
: Добавляет поддержку iSCSI в initrd.

;<tt>--multipath</tt>
: Добавляет поддержку [[Multipath]] в initrd.

;<tt>--linuxrc=/путь/к/вашему/linuxrc</tt>
: Указывает созданный пользователем linuxrc - сценарий, который инициализируется в течение начальной стадии загрузки ядра, до начала действительного процесса загрузки. (Сценарий linuxrc по умолчанию должен быть в каталоге {{Path|/usr/share/genkernel/}}.) Этот сценарий позволяет загружаться в небольшое, модульное ядро и загружать драйверы, которые требуются (в качестве модулей) для системы.

;<tt>--cachedir=/путь/к/альтернативному/каталогу</tt>
: Перезаписывает расположение кэша по умолчанию, используемого при компиляции ядра.

;<tt>--tempdir=/путь/к/новому/каталогу</tt>
: Указывает расположение временного каталога используемого genkernel при компиляции ядра.

;<tt>--unionfs</tt>
: Включает поддержку [http://www.fsl.cs.sunysb.edu/project-unionfs.html файловой системы UnionFS] в образ initrd.

;<tt>--mountboot</tt>
: Обнаруживает необходимо ли монтировать каталог {{Path|/boot}} на отдельный раздел. Этот параметр проверяет сценарий {{Path|/etc/fstab}} на наличие инструкций монтирования раздела boot на файловую систему (если необходимо).

==== Параметры, воздействующие на выбор инструментов, используемых для построения ====

Следующие параметры поддерживаются genkernel и передаются соответствующим приложениям в то время когда собирается ядро. Эти параметры воздействуют на инструменты, используемые в течение процесса компиляции ядра, хотя и на более низком уровне.

;<tt>--kernel-cc=&lt;someCompiler&gt;</tt>
: Указывает компилятор, используемый в течение процесса компиляции ядра.

;<tt>--kernel-ld=&lt;someLinker&gt;</tt>
: Указывает линкер, используемый в течение процесса компиляции ядра.

;<tt>--kernel-as=&lt;someAssembler&gt;</tt>
: Указывает ассемблер, используемый в течение процесса компиляции ядра.

;<tt>--kernel-make=&lt;someMake&gt;</tt>
: Указывает альтернативу утилиты GNU make, используемую в течение процесса компиляции ядра.

;<tt>--utils-cc=&lt;someCompiler&gt;</tt>
: Указывает компилятор, используемый в течение компиляции вспомогательных утилит.

;<tt>--utils-ld=&lt;someLinker&gt;</tt>
: Указывает линкер, используемый в течение компиляции вспомогательных утилит.

;<tt>--utils-as=&lt;someAssembler&gt;</tt>
: Указывает ассемблер, используемый в течение компиляции вспомогательных утилит.

;<tt>--utils-make=&lt;someMake&gt;</tt>
: Указывает альтернативу утилиты GNU make, используемую в течение компиляции вспомогательных утилит.

;<tt>--makeopts=-jX</tt>
: Указывает количество параллельных потоков, которые утилита make может реализовать во время компиляции ядра (и утилит). Переменная <code>X</code> - выбираемое свободно число, хотя наиболее общие значения получаются добавлением единицы (1) к количеству ядер используемых системой, или просто используется количество ядер на системе. Поэтому, на системе с одним ядром, наиболее общими параметрами являются <code>-j2</code> или <code>-j1</code>; система с двумя ядрами наиболее вероятно будет использовать параметры <code>-j3</code> или <code>-j2</code>, и так далее. (Система с одним процессором, которая поддерживает технологию Hyper-Threading™ (HT) может считаться системой с двумя (2) ядрами, учитывая что поддержка симметричного мультипроцессирования - Symmetric Multi-Processing (SMP) включена в ядро.)

==== Параметры, воздействующие на процесс компиляции ====

Следующие параметры обычно имеют эффект в течение действительной компиляции:

;<tt>--kerneldir=/path/to/sources/</tt>
: Указывает альтернативное расположение исходных текстов ядра, вместо расположения по умолчанию {{Path|/usr/src/linux/}}.

;<tt>--kernel-config=/path/to/config-file</tt>
: Указывает какой файл конфигурации ядра должен быть использован, вместо файла по умолчанию {{Path|/path/to/sources/.config}}.

;<tt>--module-prefix=/path/to/prefix-directory/</tt>
: Указывает путь к каталогу, где будут установлены модули ядра ( путь по умолчанию - каталог {{Path|/lib/modules}}.)

;<tt>--[no-]clean</tt>
: Активирует [или деактивирует] команду <code>make clean</code> перед компиляцией ядра. Команда <code>make clean</code> убирает все объектные файлы и зависимости из дерева исходных кодов ядра.

;<tt>--[no-]mrproper</tt>
: Активирует [или деактивирует] команду <code>make mrproper</code> перед компиляцией ядра. Так же как и команда <code>make clean</code>, <code>make mrproper</code> убирает все объектные файлы и зависимости из дерева исходных кодов ядра. Однако, любые предыдущие файлы конфигурации (в {{Path|/path/to/sources/.config}} или {{Path|/path/to/sources/.config.old}}) также будут удалены из дерева исходных кодов ядра.

;<tt>--oldconfig</tt>
: Вызывает команду <code>make oldconfig</code>, которая пытается собрать информацию о конфигурации для архитектуры системы из обобщенного сценария в {{Path|/usr/share/genkernel}}. Это неинтерактивный процесс; пользовательский ввод не требуется. Также, если <tt>--oldconfig</tt> используется в соединении с <tt>--clean</tt>, последним параметром пренебрегается, что приводит к активации параметра <tt>--no-clean</tt>.

;<tt>--callback="echo hello"</tt>
: Вызывает указанные аргументы (в данном случае, <code>echo hello</code>) после того как собрано ядро и соответствующие модули, но перед сборкой образа initrd. Это может быть полезно если Вы хотите установить внешние модули в образ initrd компилируя соответствующие элементы с параметром callback, а затем переопределяя группу модулей genkernel.

;<tt>--[no-]install</tt>
: Активирует [или деактивирует] команду make install, которая устанавливает новый образ ядра, файл конфигурации, образ initrd и файл system.map на смонтированный загрузочный раздел. Также будут установлены любые скомпилированные модули.

;<tt>--no-ramdisk-modules</tt>
: Воздержаться от копирования каких-либо модулей в образ initrd, созданный genkernel. Этот параметр является исключением из правила, связанного с приставкой <tt>no-</tt>; пропуск этой приставки создает неправильный параметр genkernel.

;<tt>--all-ramdisk-modules</tt>
: Копирует все доступные модули в образ initrd, созданный genkernel.

;<tt>--genzimage</tt>
: Создает образ initrd до образа ядра. (Этот прием в настоящее время применим только к системам PPC Pegasos.)

==== Параметры отладки ====

Использование параметров отладки в течение процесса компиляции ядра управляет количеством отображаемой информации, а также представлением этих данных.

;<tt>--loglevel=&lt;verblevel&gt;</tt>
: Контролирует уровень избыточности информации, предоставляемой утилитой genkernel. Переменная <code>&lt;verblevel&gt;</code> - это целое число в диапазоне от 0 до 5. Уровень '0' представляет минимальный уровень вывода сообщений, в то время как '5' предоставляет настолько много информации о действиях genkernel в течение компиляции ядра, насколько возможно.

;<tt>--logfile=/path/to/outputfile</tt>
: Игнорирует значение, установленное аргументом <tt>--loglevel</tt>, и отправляет все отладочные данные, сгенерированные genkernel, в указанный файл, который по умолчанию располагается в каталоге {{Path|/var/log/genkernel.log}}.

;<tt>--[no-]color</tt>
: Активирует (или деактивирует) цветной вывод отладочной информации (генерируемой genkernel), используя управляющие последовательности.

=== Действие ===

Действие, переданное командной строке командой <code>genkernel [options ...] action</code>, сообщает <code>genkernel</code> что необходимо сделать - поддерживаются следующие действия:

;<code>all</code>
: Собрать все стадии - initrd, образ ядра и модули.

;<code>bzImage</code>
: Собрать только образ ядра

;<code>kernel</code>
: Собрать только образ ядра и модули

;<code>initramfs</code>
: Собрать только образ initramfs/ramdisk

;<code>ramdisk</code>
: Собрать только образ initramfs/ramdisk

== Использование Genkernel ==

=== Первый вызов genkernel ===

Хотя существует несколько способов запустить утилиту genkernel, наименее навязчивый подход, рекомендуемый для большинства пользователей, предоставляется командой <code>genkernel all</code>. В этом примере используется общая конфигурация, которая хорошо работает для большинства используемых систем. Как было упомянуто ранее, этот подход не лишен недостатков; большинство созданных модулей бесполезны для среднестатического пользователя и могут увеличить время компиляции. Ниже проиллюстрирован более эффективный подход, достигнутый передачей определенных параметров команде genkernel под учетной записью root:

{{RootCmd|genkernel --splash --no-install --no-clean --menuconfig all}}

Вышеуказанная операция заставляет genkernel создать ядро с заставкой на кадровом буфере (<tt>--splash</tt>), которое нужно будет установить вручную (<tt>--no-install</tt>). При подготовке дерева исходных кодов ядра, genkernel воздержится от удаления каких-либо существующих заранее объектных файлов, присутствующих в дереве исходных кодов (<tt>--no-clean</tt>). Будет отображена управляемая с помощью меню утилита конфигурации ядра, которая позволяет пользователю выбрать какие модули должны быть собраны для системы (<tt>--menuconfig</tt>).

Замещение <tt>--no-install</tt> параметром <tt>--install</tt> позволяет genkernel автоматически установить новое ядро в каталог {{Path|/boot}}, а затем создать символьные ссылки за Вас, если указан параметр <tt>--symlink</tt>. Использование параметра <tt>--mountboot</tt> позволяет genkernel монтировать раздел {{Path|/boot}} автоматически, если это необходимо.

{{Note/ru|Не забывайте, что файл {{Path|/etc/genkernel.conf}} используется командой <code>genkernel</code> при запуске в качестве источника команд, и что любой параметр, определенный здесь, будет применен, исключая те случаи, когда параметры командной строки имеют над ним больший приоритет.}}

=== Использование Genkernel для изменения ядра ===

Первой вещью, которую надо сделать, является разрешение запуска <code>make menuconfig</code> в файле {{Path|/etc/genkernel.conf}} :

{{File|/etc/genkernel.conf|Использование меню конфигурации в /etc/genkernel.conf|<pre>
# Запустить 'make menuconfig' перед компиляцией ядра?
MENUCONFIG="yes"
</pre>}}

==== Управление файлами с помощью genkernel ====

При использовании genkernel, пользователь должен знать некоторые из аспектов, касающихся конфигурации ядра и управления файлами образа ядра, а также способ, с помощью которого исходные тексты ядра обрабатываются системой.

===== Исходные файлы используемые genkernel =====

После запуска <code>emerge -u gentoo-sources</code>, когда бы новые исходные тексты ни были доступны, в {{Path|/usr/src/}} создается новый каталог исходных текстов ядра для их хранения. Обычно, активный каталог исходных текстов ядра указывается символьной ссылкой {{Path|/usr/src/linux}} .

Каталог {{Path|/usr/src}} может выглядеть так:

{{Cmd|ls -l /usr/src|output=<pre>
total 16
lrwxrwxrwx  1 root root   19 21 mars   2013 linux -> linux-3.7.10-gentoo
drwxr-xr-x 24 root root 4096 25 août  10:39 linux-3.10.7-gentoo
drwxr-xr-x 20 root root 4096 21 avril 19:42 linux-3.7.10-gentoo
drwxr-xr-x 21 root root 4096 14 mars   2013 linux-3.7.9-gentoo
drwxr-xr-x  7 root root 4096 20 avril 17:06 rpm
</pre>}}

Символьная ссылка {{Path|linux}} может быть изменена разными способами. 

* Если в {{Path|/etc/portage/make.conf}} установлен USE-флаг <code>symlink</code>, символьная ссылка {{Path|linux}} автоматически обновляется для того, чтобы указывать на только что установленные исходные тексты. 

* Если предыдущий USE-флаг не установлен, пользователь может изменить назначение символьной ссылки используя команду <code>eselect kernel list</code> .

Чем бы это значение ни являлось, <code>genkernel</code> всегда использует исходные тексты, на которые указывает эта символьная ссылка.

===== Файл конфигурации ядра используемый genkernel =====

Если компиляция ядра уже запущена с активными исходными текстами ядра, в каталоге {{Path|/etc/kernels}} может находиться файл, который содержит конфигурацию ядра, которая применялась при создании последнего файла ядра bzimage. Этот файл может называться, например, {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}}, где x86_64 может быть заменено на Вашу архитектуру, 3.7.9 может быть заменено на версию исходных текстов, которую используете Вы, а r1 на выпуск (release) исходных текстов.

Это тот самый файл {{Path|kernel-config-x86_64-3.7.9-gentoo-r1}}, который используется в качестве начальной конфигурации при запуске <code>genkernel --menuconfig all</code>.

Если <code>genkernel</code> вызывается первый раз, или если предыдущий результат не был сохранен, этот файл заменяется на файл конфигурации по умолчанию, который находится в {{Path|usr/share/genkernel/arch/x86_64/kernel-config}}, где x86_64 заменяется на действительную архитектуру.

{{Note/ru|Путь к этому файлу конфигурации по умолчанию может быть изменен установкой переменной DEFAULT_KERNEL_CONFIG в файле {{Path|/etc/genkernel.conf}}.}}

===== Сохранение скомпилированной конфигурации =====

Если активирован параметр genkernel <code>save-config</code>, как из командной строки, так и из {{Path|/etc/genkernel.con}}, конфигурация скомпилированного ядра сохраняется (под именем данным выше) в каталог {{Path|/etc/kernels}}. В то же время, конфигурация сохраняется в файл {{Path|.config}} в каталоге {{Path|/usr/src/linux}}, но этот файл не используется заново при следующем запуске команды <code>genkernel all</code>.

{{Warning/ru|Необходимо знать, что каждый раз при запуске genkernel с установленным параметром <code>save-config</code>, файл конфигурации в {{Path|/etc/kernels}} перезаписывается. Таким образом, рекомендуется скопировать этот файл под новым именем перед запуском genkernel, для того чтобы его сохранить. }}

===== Установка ядра и initramfs в каталог /boot =====

Действие <code>all</code>, указанное при вызове genkernel, запрашивает <code>genkernel</code> об установке образа ядра и initramfs в каталог {{Path|/boot}}. Для того, чтобы это сделать удобным образом, установите следующие параметры в файле {{Path|/etc/genkernel.conf}} :

{{File|/etc/genkernel.conf|Установка автосохранения ядра и initramfs|<pre>
# Примонтировать каталог BOOTDIR автоматически, если не примонтирован?
MOUNTBOOT="yes"
  
# Сохранить новую конфигурацию в /etc/kernels при успешной компиляции
SAVE_CONFIG="yes"
  
# Сделать символьные ссылки в BOOTDIR автоматически?
SYMLINK="yes"
  
# Добавить новое ядро в grub?
#BOOTLOADER="grub"
</pre>}}

* Первый параметр говорит сам за себя.

* Второй параметр сообщает genkernel, чтобы конфигурация скомпилированного ядра была сохранена в {{Path|/etc/kernels}}.

* Последние два параметра сообщают genkernel, чтобы она автоматически обновила конфигурацию загрузчика grub. На практике, происходит следующее:
** если уже существует предыдущий образ ядра с тем же самым именем, он переименовывается путем добавления <tt>.old</tt> к его имени. Автоматически создается символьная ссылка {{Path|kernel.old}}, которая указывает на него.
** новое ядро занимает место ядра с тем же самым именем в каталоге {{Path|/boot}}. Если ядро скомпилировано в первый раз, автоматически создается символьная ссылка, которая указывает на новое ядро.

После запуска <code>genrkernel --menuconfig all</code>, каталог {{Path|/boot}} может выглядеть следующим образом:

{{Cmd|ls -al /boot|output=<pre>
total 41336
drwxr-xr-x  3 root root    4096 20 avril 17:23 .
drwxr-xr-x 24 root root    4096 15 sept. 12:31 ..
lrwxrwxrwx  1 root root       1 24 févr.  2013 boot -> .
drwxr-xr-x  2 root root    4096 24 févr.  2013 grub
lrwxrwxrwx  1 root root      40 20 avril 17:23 initramfs -> initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1314412 20 avril 17:23 initramfs-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 1313548 21 mars   2013 initramfs-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 1295344 25 févr.  2013 initramfs-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3310324 25 févr.  2013 initramfs-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      44 20 avril 17:23 initramfs.old -> initramfs-genkernel-x86_64-3.7.10-gentoo.old
lrwxrwxrwx  1 root root      37 20 avril 17:23 kernel -> kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866656 20 avril 17:23 kernel-genkernel-x86_64-3.7.10-gentoo
-rw-r--r--  1 root root 4866560 21 mars   2013 kernel-genkernel-x86_64-3.7.10-gentoo.old
-rw-r--r--  1 root root 4552288 25 févr.  2013 kernel-genkernel-x86_64-3.7.9-gentoo
-rw-r--r--  1 root root 3400736 25 févr.  2013 kernel-genkernel-x86_64-3.7.9-gentoo.old
lrwxrwxrwx  1 root root      41 20 avril 17:23 kernel.old -> kernel-genkernel-x86_64-3.7.10-gentoo.old
</pre>}}

==== Конфигурация загрузчика ====

Символьные ссылки, приведенные выше в конфигурации загрузчика, могут быть использованы так, что даже если новое ядро не загружается, пользователь смог всегда загрузить предыдущее. 

Чтобы разрешить ядру и initrd, генерируемым genkernel, работать правильно, предоставьте необходимый минимум информации в файле конфигурации загрузчика :
* Добавьте <code>real_root=/dev/sdax</code> к параметрам ядра, передаваемым образу ядра, где {{Path|/dev/sdax}} указывает на корневой раздел.
* Если используется splash screen, добавьте подходящую строку режима (mode line), такую как <code>vga=0x317</code> в список параметров, передаваемых ядру и также добавьте <code>splash=verbose</code> или <code>splash=silent</code>, в зависимости от уровня вывода сообщений, требуемого в процессе загрузки.
* Добавьте информацию initrd, как это требуется загрузчиком. Обратитесь к главе [http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=1&chap=10 Конфигурация Загрузчика] настольной книги Gentoo для получения подробностей о том как сделать загрузчик с поддержкой initrd.

Ниже приведено то, как может выглядеть файл {{Path|grub.conf}}.

{{File|/boot/grub/grub.conf|Пример файла grub.conf|<pre>
# Это пример файла grub.conf для использования с Genrkernel, из настольной книги Gentoo
# http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=1&chap=10#doc_chap2  
# Если Вы не пользуетесь Genkernel и Вам нужна помощь при создании этого файла, Вы должны проконсультироваться с настольной книгой. Иначе, обратитесь к файлу grub.conf.sample, который включен в документацию Grub.
  
default 0 
timeout 5
splashimage=(hd1,0)/boot/grub/splash.xpm.gz 
   
title Gentoo Linux 
root (hd0,6) 
kernel /boot/kernel initrd=/dev/ram0 real_root=/dev/sda7 rootfstype=ext4  
initrd /boot/initramfs
  
title Gentoo Linux old kernel 
root (hd0,6) 
kernel /boot/kernel.old initrd=/dev/ram0 real_root=/dev/sda7 rootfstype=ext4 
initrd /boot/initramfs.old
</pre>}}

==== Сохранение рабочих файлов ====

Приложение genrkernel автоматически сохраняет новые изменения в файлах. Если требуется сохранить предыдущие изменения, то должны быть предприняты следующие меры.

* Первым файлом, который надо сохранить, является файл конфигурации ядра в {{Path|/etc/kernels}}. Если исходные тексты не изменились перед перекомпиляцией ядра, будет использовано имя файла, использованное ранее. Поэтому, копирование файла конфигурации под другим именем помогает сохранить информацию при сохранении файла доступным в качестве начальной точки для новой конфигурации.

* Второй важной вещью необходимо сохранить уже загружаемые образы ядра и initramfs. Способ, которым это можно выполнить, зависит от контекста:
:# Если ранее скомпилированное ядро загружается, запуск <code>genkernel</code> переименует образ этого ядра (и, также, initramfs) в {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} и создаст новый {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}. Это значит, что даже если новое ядро не загружается, пользователи всегда смогут загрузить предыдущее.
:# Если последнее скомпилированное ядро не загружается и исходные тексты не изменялись с того момента как пользователь скомпилировал загружаемое ядро, до запуска <code>genkernel</code>, сперва удалите образ нового ядра и уберите суффикс <tt>.old</tt> из последнего загружаемого ядра. Без этого, если заново скомпилированное ядро не загружается во второй раз, загружаемое ядро {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx.old}} будет удалено переименованием незагружаемого {{Path|kernel-genkernel-ARCH-X.Y.Z-gentoo-rx}}, приводя пользователя к незагружаемой системе. Используйте те же самые рассуждения для initramfs.

=== Использование предыдущей конфигурации ядра при изменении исходных текстов ===

Предыдущая конфигурация может использоваться через параметр <code>make menuconfig</code> в {{Path|/etc/genkernel.conf}} следующим образом:

{{File|/etc/genkernel.conf|Настройка make menuconfig|<pre>
# Запустить 'make menuconfig' передо компиляцией этого ядра?
MENUCONFIG="yes"
</pre>}}

{{Note/ru|Нет необходимости запускать <code>make oldconfig</code> с genkernel, даже если исходные тексты изменились с {{Path|kernel-genkernel-ARCH-version-gentoo-rx}} на {{Path|kernel-genkernel-ARCH-version-gentoo-r(x+1)}} или с {{Path|kernel-genkernel-ARCH-version-gentoo}} на {{Path|kernel-genkernel-ARCH-(version+1)-gentoo}}, потому что команда <code>make menuconfig</code> попытается загрузить предыдущую конфигурацию в меню, настолько, насколько возможно. Тем не менее, рекомендуется осторожное рассмотрение каждого параметра и новых разделов.}}

== Сетевая загрузка с Genkernel ==

=== Сетевая загрузка с Genkernel с установочного диска ===

Утилита genkernel может собрать образы ядра и initrd, которые имеют поддержку сетевой загрузки, или netbooting. Если хоть немного повезет, пользователи смогут загрузить по сети какой-либо новый компьютер в среду, предоставляемую загрузочным CD.

Волшебство заключается в сценарии linuxrc утилиты genkernel: он попытается смонтировать загрузочный диск по сети используя NFS. Оттуда, сценарии инициализации загрузочного CD смогут получить контроль, как если бы CD присутствовал локально.

=== Сборка ядра и образа initrd с поддержкой сетевой загрузки ===

Для разрешения поддержки загрузки по сети, включите следующие параметры при конфигурации ядра:

{{Warning/ru|Поддержка загрузки по сети с genkernel является экспериментальной и может содержать баги. }}

Во-первых, образ ядра должен включать драйверы для сетевых карт (Network Interface Cards - NIC). Обычно, драйверы для таких устройств компилируются в качестве модулей. Однако, важно (для загрузки по сети), чтобы подобные драйверы были скомпилированы прямо в образ ядра, а не как модули.

{{Kernel|Конфигурация ядра серии 2.6.x kernel для поддержки драйвера NIC|<pre>
Device Drivers --->
   Networking Support --->
      Ethernet (10 or 100Mbit)  --->
         [*] Ethernet (10 or 100Mbit)
         <*>   the driver for your network card</pre>
}}

Убедитесь, что выбран <tt>&lt;*&gt;</tt>, а не <tt>&lt;M&gt;</tt>.

Во-вторых, предполагается что включен параметр "IP: kernel level autoconfiguration", также как и "IP: DHCP support options". Это позволяет избежать лишних сложностей, так как IP-адрес и путь NFS к установочному CD могут быть сконфигурированы на DHCP-сервере. Определенно, это означает, что командная строка ядра будет оставаться постоянной для любой машины - что очень важно для etherbooting.

{{Kernel|Конфигурация ядра серии 2.6.x для поддержки DHCP|<pre>
Device Drivers --->
   Networking Support --->
      Networking options
         [*] TCP/IP networking--->
         [*]   IP: kernel level autoconfiguration
         [*]     IP: DHCP support
</pre>}}

Эти параметры сообщают ядру, чтобы оно отправило DHCP-запрос при загрузке.

Кроме того, включите SquashFS, потому что большинство современных установочных дисков Gentoo требуют этого. Поддержка SquashFS не включается в основное дерево исходных текстов ядра. Чтобы включить SquashFS, примените необходимые патчи к основным исходным текстам ядра или установите gentoo-sources.

{{Kernel| Конфигурация ядра для поддержки SquashFS|<pre>
File systems--->
   Miscellaneous filesystems --->
      [*] SquashFS 2.X - Squashed file system support
</pre>}}

Как только процесс компиляции завершен, создайте сжатый архив tar (tarball - tar.gz), который содержит модули ядра. Этот шаг требуется только если версия ядра не соответствует версии образа ядра на установочном CD.

Чтобы создать архив содержащий все модули:

{{RootCmd|cd /
|tar -cf /tmp/modules-X.Y.Z.tar.gz /lib/modules/X.Y.Z/}}

В зависимости от механизма загрузки по сети, необходимо последовать одному из следующих шагов:

Для создания образа etherboot:

{{RootCmd|emerge mknbi
|cd /boot
|mkelf-linux -params{{=}}"root{{=}}/dev/ram0 init{{=}}/linuxrc ip{{=}}dhcp" kernel... initrd... > etherboot.img}}

Для создания образа OpenBoot / SPARC64 TFTP:

{{RootCmd|emerge sparc-utils
|cd /boot
|elftoaout kernel... -o kernel.aout
|piggyback64 kernel.aout System.map-... initrd-...
|mv kernel.aout openboot.img}}

Файл {{Path|openboot.img}} является образом ядра.

В завершение, скопируйте это ядро на TFTP сервер. Подробности являются архитектурно-зависимыми и выходят за рамки этого руководства. Пожалуйста, обратитесь к документации для Вашей платформы.

=== Настройка NFS ===

Для настройки общего ресурса NFS, который содержит установочный CD, используйте loop-устройство, чтобы примонтировать образ ISO и затем скопировать содержимое CD в общий ресурс NFS. В качестве приятного дополнения, сценарии initrd утилиты genkernel извлекут все файлы tar.gz, расположенные в каталоге {{Path|/nfs/livecd/add/}}. Все, что требуется здесь сделать, это скопировать архив {{Path|modules-X.Y.Z.tar.gz}} в каталог {{Path|/nfs/livecd/add/}} .

Следующее предполагает что {{Path|/nfs/livecd}} является экспортируемым общим сетевым ресурсом NFS:

{{RootCmd|mount /tmp/gentoo-livecd.iso /mnt/cdrom -o loop
|cp -p /mnt/cdrom /nfs/livecd
|umount /mnt/cdrom}}

Теперь, скопируйте файл {{Path|modules.tar.gz}} в {{Path|/add}}:

{{RootCmd|mkdir /nfs/livecd/add
|cp /tmp/modules-X.Y.Z.tar.gz /nfs/livecd/add}}

=== Настройка DHCP ===

Образы netboot запросят IP у DHCP-сервера в сети, также как и параметр <tt>root-path</tt>. Оба могут быть указаны отдельно для хоста с использованием MAC-адреса для идентификации машин:

{{File|/etc/dhcpd.conf|Образец настройки клиента dhcpd.conf|<pre>
# Здесь, 192.168.1.2 - это NFS сервер, тогда как 192.168.1.10 будет IP-адресом компьютера загружаемого по сети
host netbootableMachine {
         hardware ethernet 11:22:33:44:55:66;
         fixed-address 192.168.1.10;
         option root-path "192.168.1.2:/nfs/livecd";
}
</pre>}}

=== Инструкции загрузки по сети ===

Напомним, что загрузка по сети является очень платформо-зависимой. Важной деталью является указать параметры <code>ip=dhcp</code> и <code>init=/linuxrc</code> в командной строке ядра, так как это вызовет сетевой интерфейс и сообщит сценариям initrd о том, что необходимо примонтировать установочный CD через NFS. Здесь приведены несколько платформо-зависимых советов:

Для etherboot, вставьте etherboot-диск в привод и перезагрузитесь. Командная строка ядра была указана, когда собирался образ.

На Sparc64, нажмите {{Key|Stop}}-{{Key|A}} в командной строке загрузки и введите:

{{RootCmd|boot net ip {{=}} dhcp init {{=}} /linuxrc|prompt=ok }}

Для PXE, настройте pxelinux (часть пакета syslinux), затем создайте {{Path|pxelinux.cfg/default}} подобно тому как:

{{File|pxelinux.cfg/default|Запись по умолчанию|<pre>
DEFAULT gentoo
TIMEOUT 40
PROMPT 1
  
LABEL gentoo
    KERNEL kernel-X.Y.Z
    APPEND initrd=initrd-X.Y.Z root=/dev/ram0 init=/linuxrc ip=dhcp
</pre> }}

=== Загрузка initramfs, сгенерированной genkernel ===

==== Введение ====

Если initramfs установлена с помощью genkernel, то присмотритесь к следующим параметрам загрузки которые могут (или должны) быть определены в конфигурации загрузчика. Наиболее общие добавлены в это руководство.

==== Загрузка LVM или программного массива RAID ====

Если система использует LVM или программный массив RAID, initramfs должна быть собрана с использованием параметров <tt>--lvm</tt> и <tt>--mdadm</tt>. Не забудьте также включить поддержку в течение процесса загрузки. Это может быть сделано с использованием параметров dolvm и domdadm.

{{File|/boot/grub/grub.conf|Включение поддержки LVM и/или MDADM|<pre>
# Пример для GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 dolvm domdadm
initrd /initramfs-genkernel-x86_64-3.4.3
</pre> }}

==== Загрузка в однопользовательском режиме ====

Если по какой-то причине загрузка не происходит, все еще возможно восстановление системы с помощью загрузки в однопользовательском режиме. Это загрузит только действительно необходимые службы и затем перебросит пользователя в (root) оболочку восстановления.

{{File|/boot/grub/grub.conf|Загрузка в однопользовательском режиме|<pre>
# Пример для GRUB 1.x
title Gentoo Linux
root (hd0,0)
kernel /vmlinuz root=/dev/md3 init_opts=S
initrd /initramfs-genkernel-x86_64-3.4.3
</pre> }}

== Благодарности ==

Мы хотели бы поблагодарить следующих авторов и редакторов за их вклад в это руководство:


* Tim Yamin
* Jimi Ayodele 
* Thomas Seiler 
* Joshua Saddler
* Sebastian Pipping
* José Fournier

[[Category:Kernel]]
[[Category:Initramfs]]
