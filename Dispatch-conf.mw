{{Lowercase title}}

The '''dispatch-conf''' utility is used on Gentoo to manage configuration file updates. It allows the user to review (and accept) changes on the files and integrates with '''rcs''' to allow for version-controlled configuration file management.

== Feature: RCS Integration ==
When '''dispatch-conf''' is configured to integrate with '''rcs''', it will store all changes in {{Path|/etc/config-archive}}.
This process of configuration is as simple as {{RootCmd|emerge rcs}} and editing the config to include this:{{File|/etc/dispatch-conf.conf||<pre>use-rcs=yes</pre>}}

Administrators can then view the differences using the '''rcs''' utilities like '''rlog''' as well as roll-back changes using '''co'''. The '''rcs''' utilities work with file locking itself, so the moment you want to use it in your administrative tasks, understand that:
* '''dispatch-conf''' only stores the changes made when the package suggests to alter the file. Changes you made afterwards are ''not'' registered yet
* when you check out a file, '''rcs''' will want to write the file to the file system, so make sure you backup your existing file first, or work with standard output (see later)
* if you want to check in a file, you first need to take a lock on said file. Also, make sure you opt not to remove the working file

To view the commit history on {{Path|/etc/conf.d/udev}}:
{{Cmd|rlog /etc/config-archive/etc/conf.d/udev,v|output=<pre>
RCS file: /etc/config-archive/etc/conf.d/udev,v
Working file: udev
head: 1.1
branch:
locks: strict
access list:
symbolic names:
keyword substitution: kv
total revisions: 2;     selected revisions: 2
description:
Archived config file.
----------------------------
revision 1.1
date: 2011/06/15 18:14:59;  author: root;  state: Exp;
branches:  1.1.1;
dispatch-conf update.
----------------------------
revision 1.1.1.1
date: 2011/06/15 18:14:59;  author: root;  state: Exp;  lines: +3 -2
dispatch-conf update.
=============================================================================
</pre>}}

If you want to roll back to a particular version, a simple way to do so is to check out a previous version:
{{RootCmd|cp udev udev.orig
|co -p -r1.1.1.1 /etc/config-archive/etc/conf.d/udev,v > udev
|output=<pre>
etc/config-archive/etc/conf.d/udev,v  -->  standard output
revision 1.1.1.
</pre>}}

After making your final changes (you can use the backup {{Path|udev.orig}} to merge any changes made later), check in the file again:
{{RootCmd|co -p -l /etc/config-archive/etc/conf.d/udev,v}}

Edit the file, and finally check in the changes:
{{RootCmd|ci -l /etc/config-archive/etc/conf.d/udev,v|output=<pre>
/etc/config-archive/etc/conf.d/udev,v  <--  udev
new revision: 1.2; previous revision: 1.1
enter log message, terminated with single '.' or end of file:
>> Merged changes for persistant rules
>> .
done
</pre>}}

== Changing diff or merge tools ==

Reading changes in all grey text can be a bit annoying. Fortunately there's an alternative called colordiff that displays the different types of changes in different colors. Configuration is simple, first install colordiff with:
{{Emerge|colordiff}}
Now change the diff line in the config file to:
{{File|/etc/dispatch-conf.conf||<pre>diff="colordiff -Nu '%s' '%s'"</pre>}}

===Use (g)vimdiff to merge changes===

You may wish to try (g)vimdiff instead of the default method of merging files. To do this, modify the <code>/etc/dispatch-conf.conf</code> configuration file by changing the merge line:
{{File|/etc/dispatch-conf.conf||<pre>merge="vimdiff -c'saveas %s' -c next -c'setlocal noma readonly' -c prev %s %s"</pre>}}

You can also use vimdiff (for gvimdiff use -f flag moreover) to merge changes.

{{Note|The left pane will hold the original config file saved as the merge output, so make changes in the left pane and save that pane. To help you remember the right hand pane (containing the new config file) will be marked unmodifiable and read-only.}}

Some useful commands related to merge with vimdiff :
<pre>
"]c" : jump to next change
"[c" : jump to previous change
"CTRL-W <Right>" or "CTRL-W <Left>" : go to the other window
"do" (diff obtain): get the text of the highlighted block from the other window
"dp" (diff put) : put the text of the highlighted block to the other window
"zo" : open fold under the cursor
"zc" : close fold under the cursor
"zr" : open all folds
":wqa" : write and exit
</pre>

See the Vim documentation for further help.

[[Category:Portage tools]]
