SELinux is a mandatory access control system which enables a more fine-grained mechanism where the security administrator defines what a user can do. Unlike the standard discretionary access control in place for Linux (where the end user can still decide for himself how his resources are accessed by others) a mandatory access control system is fully governed through a security policy. With SELinux, enforcement of the access controls is done by the Linux kernel, governed through a security policy that is loaded at start of the system.

__NOTOC__

<div style="width:67%; padding-right: 3%; float: left;">
== Introduction ==

<div style="float: right;">[[File:Police.png|128px|link=]]</div>

Linux has a well-known ''discretionary'' access control system, based on the permission mask set on resources and the ownership of the resource versus the run-time privileges of a process. Some additional security features are available as well, such as capabilities and extended ACLs, which allow administrators to fine-tune the secure state of their system. But even all those features still prove to be discretionary in their model.

A discretionary model means that the owner of a resource can still decide how the resource is shared on the system. A directory can be made world-writable by its owner, and from that point onwards all processes on the system can write to the directory. With a ''mandatory'' access control system, the access to resources is governed through a mandatory system that cannot be worked around from. With SELinux, this is the SELinux security subsystem running in the Linux kernel.

== SELinux resources ==

A [[SELinux/Quick_introduction|quick introduction to SELinux]] helps to have a high-level idea behind the SELinux security subsystem. It covers the difference between discretionary and mandatory access control, the [[SELinux/Labels|labeled]] approach that SELinux takes and how it is integrated in the Linux operating system.

For more in-depth information, please refer to the following resources.

{| class="wikitable"
|- style="vertical-align: top; white-space: nowrap;"
! colspan=2 | Concepts
|-
| [[SELinux/Type_enforcement|Type enforcement]]
| Controlling accesses is done in most cases through a type-enforcement based approach
|-
| [[SELinux/Role-based_access_control|Role-based access control]]
| Ensuring a least privilege approach on a Linux system using SELinux' RBAC model
|-
| [[SELinux/User-based_access_control|User-based access control]]
| Ensuring segregation of users, even when they run using the same domains and accessing the same types
|-
| [[SELinux/Information_flow_control|Information flow control]]
| Limiting information flow based on security clearance and sensitivities
|-
| [[SELinux/Unconfined_domains|Unconfined domains]]
| When SELinux protections are not needed in all cases, unconfined domains can be used.
|-
! colspan=2 | User guides
|-
| [[SELinux/Installation|Installation]]
| The main resource for installing and enabling SELinux on a Gentoo system
|-
| [[SELinux/Users_and_logins|Users and logins]]
| Mapping Linux users (logins) to SELinux users
|-
| [[SELinux/Labels|Managing labels]]
| Setting and configuring file (and other resource) labels
|-
| [[SELinux/Policy|Policy]]
| The SELinux policy defines the acceptable behavior on a system; it can be rebuilt by administrators, loaded and unloaded (through its modular design) and tweaked by adding more policy rules
|-
| [[SELinux/Logging|Logging]]
| SELinux usually logs denials in the audit log (or system log if no auditing is enabled)
|-
| [[SELinux/Booleans|Booleans]]
| Enable or disable additional policy controls through SELinux booleans
|-
| [[SELinux/States|States]]
| SELinux can be enabled or disabled, and running in enforcing, partial permissive or full permissive mode
|-
! colspan=2 | Expert documentation
|-
| [[Project:SELinux/Development|Policy development]]
| Updating SELinux policy to suit your needs, and send patches to Gentoo or even upstream projects
|-
| [[SELinux/Policy_store|Policy store]]
| The policy store contains the SELinux policy binaries; multiple stores can be defined on a system
|-
| [[SELinux/Networking|Networking support]]
| SELinux supports port labeling, but also packet-based access controls through SECMARK and peer-to-peer labeling support
|-
! colspan=2 | Reference material
|-
| [[SELinux/FAQ|FAQ]]
| Frequently Asked Questions on SELinux and SELinux integration in Gentoo
|-
| [[SELinux/Language|SELinux policy language]]
| Supported SELinux language constructs
|-
| [[SELinux/Module_list|Policy module specific information]]
| More in-depth information about particular SELinux policy modules
|}

== Development ==

For engineers and developers, we provide the following resources:

{| class="wikitable"
|- style="vertical-align: top; white-space: nowrap;"
! colspan=2 | Upstream projects
|-
| [[SELinux/LSM|Linux Security Modules]]
| The integration of SELinux in the Linux kernel is done through the LSM subsystem
|-
| [[SELinux/Reference_policy|Reference policy]]
| All Linux distributions base their SELinux policies on the reference policy
|-
| [[SELinux/Userspace_project|SELinux userspace project]]
| The software that engineers and administrators use to work with SELinux
|-
! colspan=2 | Gentoo Linux integration
|-
| [[SELinux/Gentoo_profiles|Profiles]]
| Enabling SELinux support in default Gentoo profiles
|-
| [[SELinux/Gentoo_policy_packages|Policy packages]]
| Information on how the Gentoo packages push out SELinux policies to a system
|}

== Learning SELinux ==

We also provide the following resources to gradually learn about SELinux.

{| class="wikitable"
|- style="vertical-align: top; white-space: nowrap;"
! colspan=2 | Online resources
|-
| [[SELinux/Tutorials|SELinux tutorials]]
| More than a dozen small tutorials that introduce you to SELinux and its Gentoo integration
|}

</div>

<div style="width: 30%; float: left;">

{{News|October 30, 2014|Migrating policy module store|
After upgrading to the 2.4 SELinux userspace, you will need to migrate the policy module store as follows:
{{RootCmd|/usr/libexec/selinux/semanage_migrate_store}}
Without it, updating SELinux configurations through the userspace might give a warning about not having a managed store:
{{RootCmd|setsebool -P allow_ptrace on|output=<pre>
Cannot set persistent booleans without managed policy.
</pre>}}
However, not migrating the store does not influence the operational working of the system (so if you forget to do it, you will not be locked out).
}}

{{News|July 9, 2014|Workaround for segfault|
If you get a segmentation fault when <code>setfiles</code> is called by portage, it might be caused by {{Bug|516608}}. A fix is being implemented but will be too late for most users. A simple workaround is to perform the following:
{{RootCmd|cd /etc/selinux/strict/contexts/files
|rm *.bin}}
}}

== SELinux in Gentoo ==

The integration of SELinux in Gentoo is handled by the [[Project:SELinux|SELinux]] subproject of the [[Project:Hardened|Gentoo Hardened]] project.

Problems with SELinux in Gentoo? 
* [https://bugs.gentoo.org Report a bug] in bugzilla

Want some help?
* Try the [http://news.gmane.org/gmane.linux.gentoo.hardened gentoo-hardened] mailinglist
* Call out to us through IRC on freenode's <code>#gentoo-hardened</code> channel

== Support state ==

SELinux userspace
* [http://userspace.selinuxproject.org/trac/wiki/Releases Upstream]: 2.4_rc7 (testing)
* [http://packages.gentoo.org/package/sys-libs/libselinux Gentoo]: 2.4_rc6 (testing)
SELinux policies
* [http://oss.tresys.com/projects/refpolicy/wiki/DownloadRelease Upstream]: 20141203
* [http://packages.gentoo.org/package/sec-policy/selinux-base Gentoo]: 20140311 (stable)

== External resources ==

* [http://www.nsa.gov/research/_files/selinux/papers/inevit-abs.shtml The Inevitability of Failure: The Flawed Assumption of Security in Modern Computing Environments] explains the need for mandatory access controls
* [http://www.nsa.gov/research/_files/selinux/papers/flask-abs.shtml The Flask Security Architecture: System Support for Diverse Security Policies] explains the security architecture of Flask, the architecture used by SELinux.

</div>

[[Category:SELinux]]
