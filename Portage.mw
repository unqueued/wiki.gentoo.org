{{InfoBox stack
|{{InfoBox project|Portage|header=true}}
|{{InfoBox package|sys-apps/portage}}
|{{InfoBox wikipedia|Portage (software)}}
|{{InfoBox gitweb|portage.git}}
|{{InfoBox github|gentoo/portage}}
}}

Portage is [[Article description::the official [[Wikipedia:Package management system|package management]] and [https://www.gentoo.org/get-started/about/ distribution system] for Gentoo.]] It functions as the heart of Gentoo-based operating systems. Portage includes many commands for repository and package management, the primary of which is the [[#emerge|{{c|emerge}}]] command.

The most common questions about portage and the [[#emerge|{{c|emerge}}]] command are handled in the [[Project:Portage/FAQ|Portage FAQ]].

{{Tip|This article describes Portage from a user's perspective. Those looking to contribute to Portage development should visit the [[Project:Portage|Portage project page]]}} 

__TOC__

== Installation ==

All Gentoo installations come with Portage. Like all data, there is a possibility Portage can become corrupted or even uninstalled, which is ''very'' bad. If this is the case there ''are'' ways Portage can be recovered, however Portage re-installation can be quite a hassle. It becomes a work of manual labor: installing a package manager without a package manager.

=== Binary package ===

Have a friend or a build server build a Portage binary package, then boot a recovery disk and transfer the binary package to the broken machine. This could be done using the <code>buildpkg</code> Portage feature on a healthy machine or by using the {{c|quickpkg}} command (see the [[binary package guide]]). Portage will be needed in to order to install the binary package, however it is possible to run something off a virtual machine.

Boot up a LiveDVD/CD that has Portage included ([https://www.gentoo.org/downloads/ Gentoo LiveDVDs] or [https://www.system-rescue-cd.org/ SystemRescueCD] should contain Portage). Remove the old or broken Portage and reinstall Portage to the mounted root filesystem (potentially the fastest and easiest option in the case of a fast internet connection and available CDs/DVDs). For example, if the root file system with broken Portage was mounted at {{Path|/mnt/gentoo}} the following commands could be used from a live environment.
# Change all of Portage's relevant environment variables to be set to the Portage directory of the mounted root filesystem. If the broken Portage root directory is mounted at {{Path|/mnt/gentoo}}, the command would look like this: {{RootCmd|DISTDIR{{=}}"/mnt/gentoo/usr/portage/distfiles" PKGDIR{{=}}"/mnt/gentoo/usr/portage/packages" PORTAGE_CONFIGROOT{{=}}"/mnt/gentoo/" PORTAGE_TMPDIR{{=}}"/mnt/gentoo/var/tmp" PORTDIR{{=}}"/mnt/gentoo/usr/portage"}}
#Run the {{c|emerge}} command in order to remove any traces of the old broken Portage package: {{Emerge|params+=--unmerge|sys-apps/portage}}
#Sync the system in case it is a bit behind on the current Gentoo repository: {{RootCmd|emerge --sync}}
#Install the new version of Portage: {{Emerge|params+=--update --newuse|sys-apps/portage}}

=== Tarball ===

Manually download a copy of a [https://github.com/gentoo/portage/releases recent Portage release tarball], extract it, and manually install it:

{{Cmd
|wget <nowiki>https://github.com/gentoo/portage/archive/v2.2.22.tar.gz</nowiki> -O portage-2.2.22.tar.gz
|tar --extract --gz --verbose --file portage-2.2.22.tar.gz
|cd portage-2.2.22
}}

Install via {{Path|setup.py}}:

{{RootCmd|python setup.py install}}

If they do not exist, add the following lines into the following files:

{{RootCmd
|echo "portage:x:250:250:portage:/var/tmp/portage:/bin/false" >> /etc/passwd
|echo "portage::250:portage" >> /etc/group
}}

Create the {{Path|/usr/portage}} directory if it does not exist:

{{RootCmd|mkdir /usr/portage}}

== Updating ==

In order for Gentoo to stay up to date, Portage must stay up to date. If the following message is visible after an {{c|emerge --sync}}, it is important to do what the text says before updating other packages.

{{GenericCmd
|* An update to portage is available. It is _highly_ recommended
|* that you update portage now, before any other packages are updated.

|* To update portage, run 'emerge --oneshot portage' now.
}}

{{Emerge|params+=--oneshot|sys-apps/portage}}

This will tell Portage to exclusively update itself. After Portage has been updated, users can then update other packages.

== Configuration ==

=== Files ===

There are many files used to configure Portage.

See [[:/etc/portage]] configuration files for an exhaustive list of configuration files.

=== Environment variables ===

Portage pays attention to some environment variables:

{{WIP|author=maffblaster}}

=== Ebuild repositories ===

In addition to the [https://gitweb.gentoo.org/repo/gentoo.git/tree/ Gentoo repository], there are additional [[ebuild repository|ebuild repositories]].

* [https://overlays.gentoo.org/ Gentoo Repositories]
* [https://gpo.zugaina.org/ Browse ebuild repositories]
* [[:/etc/portage/repos.conf|Adding ebuild repositories to the installation]]

It is possible to search through the ebuilds available in the ebuild repositories on https://overlays.gentoo.org/ by using the [[eix]] tool.

=== Graphical front-ends ===

There are a few GUI interfaces that exist for Portage, although some of them have become unmaintained.

{| class="table table-striped table-condensed"
|-
! Name !! Package !! Homepage !! Maintained !! Description
|-
| {{c|[[kuroo]]}} || {{Package|app-portage/kuroo4}} || http://sourceforge.net/projects/kuroo/ || {{No|No}} (2014) || Graphical Portage frontend based on KDE4/Qt4.
|-
| {{c|[[porthole]]}} || {{Package|app-portage/porthole}} || http://porthole.sourceforge.net/ || {{No|No}} (2010) || A GTK+-based frontend to Portage.
|}

== Usage ==

=== archive-conf ===

The purpose of {{c|archive-conf}} is to save off a config file in the dispatch-conf archive directory. Most people shouldn't ''ever'' need to run this command:

{{RootInvocation|archive-conf|output=<pre>
Usage: archive-conf /CONFIG/FILE [/CONFIG/FILE...]
</pre>}}

=== dispatch-conf ===

The {{c|dispatch-conf}} utility is used to manage configuration file updates.
See the [[dispatch-conf]] article.

=== ebuild ===

{{c|ebuild}} is Portage's command for running the various [https://devmanual.gentoo.org/ebuild-writing/functions/ ebuild functions]. 
For disambiguation see the [[ebuild]] article.

=== egencache ===

The {{c|egencache}} tool rebuilds the cache of metadata information for the ebuild repositories.
See the [[egencache]] article for additional information.

=== emaint ===

Implements the {{c|emerge --sync}} command.
See [[Project:Portage/Sync#Operation|Portage's sync operation]] and {{c|man 1 emaint}}.

=== emerge ===

{{c|emerge}} is the command-line interface to Portage and is how most users will interact with Portage. The {{c|emerge}} command has ''many'' possible options. For a complete list of all options see its man page:

{{Cmd|man emerge}}

Below is an exemplary invocation of {{c|emerge}}. The options (<code>-atv</code>) are shortcuts for <code>--ask</code>, <code>--tree</code> and <code>--verbose</code>. They trigger {{c|emerge}} to ask before proceeding, display the dependency tree of packages to be installed, and to be verbose with its output. While in the context of Portage, the term "package" can also be referred to as an "atom." Do not be confused if you see the term "atom" used instead of the term "package."

{{emerge-legend}}

==== Common invocations ====

Search for packages with ''proxy'' in their names:

{{Cmd|emerge --search proxy}}

Search for packages with ''proxy'' in their names or description:

{{Cmd|emerge --searchdesc proxy}}

Install the {{Package|net-proxy/tinyproxy}} package with <code>--ask</code> and <code>--verbose</code> options for precaution:

{{RootCmd|emerge --ask --verbose net-proxy/tinyproxy}}

Remove the {{Package|net-proxy/tinyproxy}} package using the dependency sensitive <code>--depclean</code> option instead of <code>--unmerge</code> which may remove important packages:

{{RootCmd|emerge --ask --verbose --depclean net-proxy/tinyproxy}}

=== emerge-webrsync ===

{{Invocation|emerge-webrsync -h|prompt=root # |color=#ef2929|output=<pre>
Usage: /usr/bin/emerge-webrsync [options]

Options:
  --revert=yyyymmdd   Revert to snapshot
  -k, --keep          Keep snapshots in DISTDIR (don't delete)
  -q, --quiet         Only output errors
  -v, --verbose       Enable verbose output
  -x, --debug         Enable debug output
  -h, --help          This help screen (duh!)
</pre>}}

{{c|emerge-webrsync}} is called internally by {{c|[[Ebuild repository#eix|eix-sync]]}} when <code>sync-type</code> in [[:/etc/portage/repos.conf/webrsync.conf|/etc/portage/repos.conf]] is set to webrsync.

=== emirrordist ===

{{Invocation|emirrordist -h|prompt=root # |color=#ef2929|output=<pre>
usage: emirrordist [options] <action>

emirrordist - a fetch tool for mirroring of package distfiles

optional arguments:
  -h, --help            show this help message and exit

Actions:
  --version             display portage version and exit
  --mirror              mirror distfiles for the selected repository

Common options:
  --dry-run             perform a trial run with no changes made (usually
                        combined with --verbose)
  --verbose, -v         display extra information on stderr (multiple
                        occurences increase verbosity)
  --ignore-default-opts
                        do not use the EMIRRORDIST_DEFAULT_OPTS environment
                        variable
  --distfiles DIR       distfiles directory to use (required)
  --jobs JOBS, -j JOBS  number of concurrent jobs to run
  --load-average LOAD, -l LOAD
                        load average limit for spawning of new concurrent jobs
  --tries TRIES         maximum number of tries per file, 0 means unlimited
                        (default is 10)
  --repo REPO           name of repo to operate on
  --config-root DIR     location of portage config files
  --repositories-configuration REPOSITORIES_CONFIGURATION
                        override configuration of repositories (in format of
                        repos.conf)
  --strict-manifests <y|n>
                        manually override "strict" FEATURES setting
  --failure-log FILE    log file for fetch failures, with tab-delimited
                        output, for reporting purposes
  --success-log FILE    log file for fetch successes, with tab-delimited
                        output, for reporting purposes
  --scheduled-deletion-log FILE
                        log file for scheduled deletions, with tab-delimited
                        output, for reporting purposes
  --delete              enable deletion of unused distfiles
  --deletion-db FILE    database file used to track lifetime of files
                        scheduled for delayed deletion
  --deletion-delay SECONDS
                        delay time for deletion, measured in seconds
  --temp-dir DIR        temporary directory for downloads
  --mirror-overrides FILE
                        file holding a list of mirror overrides
  --mirror-skip MIRROR_SKIP
                        comma delimited list of mirror targets to skip when
                        fetching
  --restrict-mirror-exemptions RESTRICT_MIRROR_EXEMPTIONS
                        comma delimited list of mirror targets for which to
                        ignore RESTRICT="mirror"
  --verify-existing-digest
                        use digest as a verification of whether existing
                        distfiles are valid
  --distfiles-local DIR
                        distfiles-local directory to use
  --distfiles-db FILE   database file used to track which ebuilds a distfile
                        belongs to
  --recycle-dir DIR     directory for extended retention of files that are
                        removed from distdir with the --delete option
  --recycle-db FILE     database file used to track lifetime of files in
                        recycle dir
  --recycle-deletion-delay SECONDS
                        delay time for deletion of unused files from recycle
                        dir, measured in seconds (defaults to the equivalent
                        of 60 days)
  --fetch-log-dir DIR   directory for individual fetch logs
  --whitelist-from FILE
                        specifies a file containing a list of files to
                        whitelist, one per line, # prefixed lines ignored
</pre>}}

=== env-update ===

{{Invocation|env-update -h|prompt=root # |color=#ef2929|output=<pre>
Usage: env-update [--no-ldconfig]

See the env-update(1) man page for more info
</pre>}}

=== etc-update ===

{{Invocation|etc-update -h|prompt=root # |color=#ef2929|output=<pre>
etc-update: Handle configuration file updates

Usage: etc-update [options] [paths to scan]

If no paths are specified, then ${CONFIG_PROTECT} will be used.

Options:
  -d, --debug    Enable shell debugging
  -h, --help     Show help and run away
  -p, --preen    Automerge trivial changes only and quit
  -q, --quiet    Show only essential output
  -v, --verbose  Show settings and such along the way
  -V, --version  Show version and trundle away

  --automode <mode>
             -3 to auto merge all files
             -5 to auto-merge AND not use 'mv -i'
             -7 to discard all updates
             -9 to discard all updates AND not use 'rm -i'
</pre>}}

=== fixpackages ===

{{Invocation|fixpackages -h|prompt=root # |color=#ef2929|output=<pre>
usage: fixpackages [-h]

The fixpackages program performs package move updates on configuration files,
installed packages, and binary packages.

optional arguments:
  -h, --help  show this help message and exit
</pre>}}

=== regenworld ===

{{Invocation|regenworld -h|prompt=root # |color=#ef2929|output=<pre>
This script regenerates the portage world file by checking the portage
logfile for all actions that you've done in the past. It ignores any
arguments except --help. It is recommended that you make a backup of
your existing world file (/var/lib/portage/world) before using this tool.
</pre>}}

=== portageq ===

For details see [[portageq]].

=== quickpkg ===

See the [[Binary package guide]] for more information.

=== repoman ===

Since version 2.3.0 {{c|repoman}} is packaged separately ({{Package|app-portage/repoman}}) from Portage. See the {{c|[[repoman]]}} article for additional information.

== Troubleshooting ==

=== Main package repository sync time ===

To see when the main package repository was last updated (synced), run the following command:

{{Cmd|cat /usr/portage/metadata/timestamp.chk}}

== See also ==

'''Alternate package managers:'''

* [[Paludis]] - An alternative package manager written expressly for Gentoo-based systems.
* [[Pkgcore]] - A framework for package management, mostly compatible with Gentoo
* {{Package|app-arch/dpkg}} - A package manager for Debian based systems.
* {{Package|sys-apps/yum}} - The package manager for RPM systems that also can be used on Gentoo.

'''Related to Portage:'''

* [[GCC optimization]]
* [[Portage tips]]
* [[Repository format]]
* [[Package Manager Specification]]
* [[Ebuild repository]]
* [[:Category:Portage]]
* [[Gentoolkit]]

'''Portage in the Gentoo AMD64 Handbook:'''

* [[Handbook:AMD64/Working/Portage|A Portage introduction]]
* [[Handbook:AMD64/Working/USE|USE flags]]
* [[Handbook:AMD64/Working/Features|Portage features]]
* [[Handbook:AMD64/Portage/Files|Files and directories]]
* [[Handbook:AMD64/Portage/Variables|Configuring through variables]]
* [[Handbook:AMD64/Portage/Branches|Mixing software branches]]
* [[Handbook:AMD64/Portage/Tools|Additional Portage tools]]
* [[Handbook:AMD64/Portage/CustomTree|Custom Portage tree]]
* [[Handbook:AMD64/Portage/Advanced|Advanced Portage features]]

'''Portage tools'''

* [[Useful Portage tools|Portage tool list]]

[[Category:Portage]]
