<languages />


{{Metadata|abstract=Este documento es una guía para hacer trabajar la aceleración 3d usando DRM con Xorg en Gentoo Linux.}}

Este documento es una guía para hacer trabajar la aceleración 3d usando DRM con Xorg en Gentoo Linux.

== Introducción ==

¿Qué es la aceleración 3D por hardware y por qué la quiero?

Con la aceleración 3D mediante hardware, el rederizado tridimensional usa el procesador de gráficos en tu tarjeta de video en lugar de utilizar valiosos recursos del procesador al generar gráficos 3D. Además, se nombra como "aceleración por hardware" en vez de "aceleración por software" porque sin este tipo de aceleración 3D tu CPU es forzado a graficar todo por sí mismo usando las bibliotecas de Mesa para renderizado, lo cuál consume una parte de los recursos de procesamiento.
Aunque Xorg normalmente soporta aceleración 2D por hardware, con frecuencia carece de aceleración 3D por hardware. La aceleración tridimensional es valiosa en situaciones que requieren el renderizado de objetos 3D: juegos, 3D CAD y modelado.

===Como consigo la aceleración 3D por hardware===

En muchos casos, se encuentran disponibles controladores binarios o de código abierto. Los controladores de código abierto son preferibles porque usamos Linux y el código abierto es uno de sus principios implícitos.
A veces, los controladores binarios son la única opción, especialmente si tu tarjeta gráfica es tan moderna que no han sido escritos, aún, controladores de código abierto que soportan sus capacidades. Entre los controladores binarios podemos encontrar {{Package|x11-drivers/nvidia-drivers}} para tarjetas de video nVidia y {{Package|x11-drivers/ati-drivers}} para tarjetas AMD/ATI. 

===¿Qué es DRI?===

La [https://es.wikipedia.org/wiki/Direct_Rendering_Infrastructure Infraestructura de Renderizado Directo] (DRI, por sus siglas en inglés), es una interfaz que permite acceso directo al hardware de gráficos de una manera eficiente y segura. Incluye cambios en el servidor X, en numerosas bibliotecas de cliente y el núcleo. DRI es mayormente empleado en la creación de implementaciones eficientes para OpenGL. 

===¿Qué es DRM y como se relaciona con una instalación típica de Xorg?==

El [https://es.wikipedia.org/wiki/Direct_Rendering_Manager Gestor de Renderizado Directo] es una "mejora" para Xorg que agrega aceleración 3D para tarjetas añadiendo el módulo de núcleo necesario para el renderizado directo. 

=== Objetivo ===

Esta guía es para quienes no pueden conseguir el renderizado directo solo mediante Xorg.
DRM funciona con los siguientes controladores: 

* 3dfx
* intel
* matrox
* nouveau
* rage128
* radeon
* mach64
* sis300
* via

Véase la [http://dri.freedesktop.org/ paǵina principal de DRI] para más información y la documentación. 

==Instalar Xorg y configurar el núcleo==

== Instalar Xorg ==

Por favor, revise la  [https://wiki.gentoo.org/wiki/Xorg/Guide/es Guía de configuración para Xorg] para obtener y utilizar Xorg. 

== Configure su núcleo ==

Ubique su chipset con lspci. Se activará solo un elemento de la lista. 

{{Emerge|pciutils}}

{{RootCmd|lspci {{!}} grep AGP|output=<pre>
# 00:01.0 PCI bridge: Intel Corp. 440BX/ZX/DX - 82443BX/ZX/DX AGP bridge (rev 03)
</pre>
}}

La salida anterior puede no coincidir con la que obtenga, debido a diferencias en el hardware.

Si su chipset no es soportado por el kernel, podrías encontrar cierto éxito al establecer <code>agp=try_unsupported</code> como un parámetro del kernel. Esto usara las rutinas genéricas de Intel para soporte AGP. Al añadir este parámetro, ¡cambia el archivo de configuración del programa de arranque! 

La mayoría, si no todos, los núcleos deberían poseer estas opciones. En aquel ejemplo fue configurado un kernel {{Package|sys-kernel/gentoo-sources}} estándar.

{{RootCmd|ls -l /usr/src/linux |output=<pre>
lrwxrwxrwx 1 root root 22 2007-02-14 20:12 /usr/src/linux -> linux-2.6.18-gentoo-r4
</pre>}}

Asegúrese de que {{Path|/usr/src/linux}} apunte a su kernel actual.

{{RootCmd|cd /usr/src/linux
|make menuconfig}}

{{KernelBox|title=Hardware 3D acceleration options|
<pre>
Processor type and features --->
<*> MTRR (Memory Type Range Register) support
Device drivers --->
   Graphics support --->
   <M> /dev/agpgart (AGP Support) --->
      (The agpgart option is not present on 64-bit kernels;
      just choose your chipset support.)
      <M> Intel 440LX/BX/GX, I8xx and E7x05 support
      (Enable your chipset instead of the above.)
   <M> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
      <M> (Select your graphics card from the list)
</pre>
}}

=== Compilar e instalar su kernel ===

{{RootCmd|make && make modules_install}}

No olvide configurar {{Path|grub.conf}} o {{Path|lilo.conf}} y ejecutar <code>/sbin/lilo</code> si usa LILO. 

=== Añadir su usario en el grupo video ===

A continuación, incluya su usuario en el grupo video: 

{{RootCmd|gpasswd -a $USER video}}

==Configurar el renderizado directo==

=== Configure Xorg ===

Hopefully just adding your user to the <code>video</code> group is sufficient to enable direct rendering. However, you may also need to create a file in {{Path|/etc/X11/xorg.conf.d/}}. You can name it anything you like; just make sure it ends in {{Path|.conf}}. Open up your favorite text editor and create a file with this inside it: 

{{FileBox|filename=/etc/X11/xorg.conf.d/10-dri.conf|1=
Section "Device"
  Driver "radeon"
EndSection
Section "dri"
  Mode 0666
EndSection
}}

Replace radeon with the name of your driver.

=== Changes to /etc/conf.d/modules ===

You will need to add the module name that your card uses to {{Path|/etc/conf.d/modules}} to ensure that the module is loaded automatically when the system starts up. 

{{FileBox|filename=/etc/conf.d/modules|1=
modules="intel-agp" # Substitute with your driver
}}

{{Note|If you compiled <code>agpgart</code> as a module, you will also need to add it to {{Path|/etc/conf.d/modules}}.}}

== Test 3D acceleration ==

=== Reboot to the new kernel ===

Reboot your computer to your new kernel and login as a normal user. It's time to see if you have direct rendering and how good it is. <code>glxinfo</code> and <code>glxgears</code> are part of the {{Package|x11-apps/mesa-progs}} package, so make sure it is installed before you attempt to run these commands.

{{Cmd|startx}}

No need to load modules for your driver or agpgart, even if you compiled them as a module. They will be loaded automatically.

{{Cmd|glxinfo {{!}} grep rendering|output=<pre>
direct rendering: Yes
</pre>}}

If it says "No", you don't have 3D acceleration.

{{Cmd|glxgears}}

Test your frames per second (FPS) at the default size. The number should be significantly higher than before configuring DRM. Do this while the CPU is as idle as possible.

{{Note|FPS may be limited by your screen's refresh rate, so keep this in mind if <code>glxgears</code> reports only about 70-100 FPS. {{Package|games-fps/ut2004-demo}} or other 3D games are better benchmarking tools, as they give you real-world performance results.}}

=== Get the most out of direct rendering ===

If you want to set more features, for performance or other reasons, check out the [http://dri.freedesktop.org/wiki/FeatureMatrix feature matrix] on the DRI web site or the [http://dri.sourceforge.net/doc/dri_driver_features.phtml features listing] on Sourceforge. 

== Troubleshooting ==

=== It doesn't work. I don't have rendering, and I can't tell why. ===

Try <code>modprobe radeon</code> before you start the X server (replace <code>radeon</code> with the name of your driver). Also, try building agpgart into the kernel instead of as a module. 

=== When I startx, I get this error: "[drm] failed to load kernel module agpgart" ===

That's because you compiled agpgart into the kernel instead of as a module. Ignore it unless you're having problems. 

=== I have a Radeon, and I want TV-Out. ===

The drivers originally developed by the [http://gatos.sf.net GATOS] project have been merged into Xorg's codebase. You don't need anything special for TV-Out; {{Package|x11-drivers/xf86-video-ati}} will work just fine.

=== It doesn't work. My card is so incredibly new and cool that it isn't supported at all. ===

Try out the binary drivers. For AMD cards, use <code>ati-drivers</code>; a listing is at [http://support.amd.com/us/gpudownload/Pages/index.aspx http://support.amd.com/us/gpudownload/Pages/index.aspx]. If those don't support it, use fbdev. It's slow, but it works.

=== I have a PCI card and it doesn't work. Help! ===

Create a config file in {{Path|/etc/X11/xorg.conf.d/}}; name it anything you want as long as it ends in {{Path|.conf}}. Add the following to it: 

{{FileBox|filename=/etc/X11/xorg.conf.x/10-pcimode.conf|title=Adding ForcePCI Mode|1=
Section "Device"
  Option "ForcePCIMode" "True"
EndSection
}}

== External resources ==

* [https://forums.gentoo.org/viewtopic.php?t=46681 Direct rendering (DRI) using X11-DRM HOWTO] on the Gentoo forums
* [https://forums.gentoo.org/viewtopic.php?t=29264 Radeon 7000-9700 DRI CVS Install Guide] on the Gentoo forums
* [http://dri.freedesktop.org/ http://dri.freedesktop.org/]

[[Category:X.Org]] {{Migrated|originalauthors=dberkholz, peesh, nightmorph}}
