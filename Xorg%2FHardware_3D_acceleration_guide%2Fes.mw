<languages />


<div class="mw-translate-fuzzy">
{{Metadata|abstract=Este documento es una guía para conseguir hacer trabajar la aceleración 3d usando DRM con Xorg en Gentoo Linux.}}
</div>

<div class="mw-translate-fuzzy">
Este documento es una guía para conseguir hacer trabajar la aceleración 3d usando DRM con Xorg en Gentoo Linux.
</div>

==Introducción==

===¿Qué es la aceleración 3D por hardware y por qué la quiero?===

<div class="mw-translate-fuzzy">
Con la aceleración 3D mediante hardware, el rederizado tridimensional usa el procesador de gráficos en su tarjeta de video en lugar de utilizar valiosos recursos del procesador con la finalidad de generar gráficos 3D. Además, se nombra como "aceleración por hardware" en vez de "aceleración por software" porque sin este tipo de aceleración 3D su CPU es forzado a graficar todo por sí mismo usando las bibliotecas de Mesa para renderizado, lo cuál consume una parte de los recursos de procesamiento.
Aunque Xorg normalmente soporta aceleración 2D por hardware, con frecuencia carece de aceleración 3D por hardware. La aceleración tridimensional es valiosa en situaciones que requieren el renderizado de objetos 3D: juegos, 3D CAD y modelado.
</div> 

While Xorg typically supports 2D hardware acceleration, it often lacks hardware 3D acceleration. Three-dimensional hardware acceleration is valuable in situations requiring rendering of 3D objects such as games, 3D CAD, and modeling.

<div class="mw-translate-fuzzy">
===¿Como consigo aceleración 3D por hardware?===
</div>

<div class="mw-translate-fuzzy">
En muchos casos, se encuentran disponibles controladores binarios o de código abierto. Los controladores de código abierto son preferibles porque usamos Linux y el código abierto es uno de sus principios fundamentales.
A veces, los controladores binarios son la única opción, especialmente si su tarjeta gráfica es tan moderna que no han sido escritos, aún, controladores de código abierto que soportan sus capacidades. Entre los controladores binarios podemos encontrar {{Package|x11-drivers/nvidia-drivers}} para tarjetas de video nVidia y {{Package|x11-drivers/ati-drivers}} para tarjetas AMD/ATI.
</div>

===¿Qué es DRI?===

<div class="mw-translate-fuzzy">
La [https://es.wikipedia.org/wiki/Direct_Rendering_Infrastructure Infraestructura de Renderizado Directo] (DRI, por sus siglas en inglés), es una interfaz que permite acceso directo al hardware de gráficos de una manera eficiente y segura. Incluye cambios en el servidor X, en numerosas bibliotecas de cliente y el núcleo. DRI es mayormente empleado en la creación de implementaciones eficientes para OpenGL.
</div> 

===¿Qué es DRM y como se relaciona con una instalación típica de Xorg?===

El [https://es.wikipedia.org/wiki/Direct_Rendering_Manager Gestor de Renderizado Directo] es una "mejora" para Xorg que agrega aceleración 3D para tarjetas añadiendo el módulo de núcleo necesario para el renderizado directo. 

=== Objetivo ===

Esta guía es para quienes no pueden conseguir el renderizado directo solo mediante Xorg.
DRM funciona con los siguientes controladores: 

<div class="mw-translate-fuzzy">
* 3dfx
* intel
* matrox
* nouveau
* rage128
* radeon
* mach64
* sis300
* via
</div>

<div class="mw-translate-fuzzy">
Véase la [http://dri.freedesktop.org/ paǵina principal de DRI] para más información y la documentación.
</div>

<div class="mw-translate-fuzzy">
==Instalar Xorg y configurar el núcleo==
</div>

== Instalar Xorg ==

Por favor, revise la  [https://wiki.gentoo.org/wiki/Xorg/Guide/es Guía de configuración para Xorg] para obtener y utilizar Xorg. 

<div class="mw-translate-fuzzy">
== Configure su núcleo ==
</div>

<div class="mw-translate-fuzzy">
Ubique su chipset con lspci. Se utilizará solo un elemento de la lista generada.
</div> 

<div class="mw-translate-fuzzy">
{{Emerge|pciutils}}
</div>

{{RootCmd|lspci {{!}} grep AGP|output=<pre>
# 00:01.0 PCI bridge: Intel Corp. 440BX/ZX/DX - 82443BX/ZX/DX AGP bridge (rev 03)
</pre>
}}

<div class="mw-translate-fuzzy">
La salida anterior puede no coincidir con la que obtenga, debido a diferencias en el hardware.
</div>

<div class="mw-translate-fuzzy">
Si su chipset no es soportado por el kernel, podría encontrar cierto éxito al establecer <code>agp=try_unsupported</code> como parámetro del kernel. Esto usara las rutinas genéricas de Intel para soporte AGP. Al añadir este parámetro, ¡cambia el archivo de configuración del programa de arranque!
</div>

La mayoría, si no todos, los núcleos deberían poseer estas opciones. En aquel ejemplo fue configurado un kernel {{Package|sys-kernel/gentoo-sources}} estándar.

{{RootCmd|ls -l /usr/src/linux |output=<pre>
lrwxrwxrwx 1 root root 22 2007-02-14 20:12 /usr/src/linux -> linux-2.6.18-gentoo-r4
</pre>}}

<div class="mw-translate-fuzzy">
Asegúrese de que {{Path|/usr/src/linux}} apunte a su kernel actual.
</div>

<div class="mw-translate-fuzzy">
{{RootCmd|cd /usr/src/linux
|make menuconfig}}
</div>


<div class="mw-translate-fuzzy">
{{KernelBox|title=Hardware 3D acceleration options|
<pre>
Processor type and features --->
<*> MTRR (Memory Type Range Register) support
Device drivers --->
   Graphics support --->
   <M> /dev/agpgart (AGP Support) --->
      (The agpgart option is not present on 64-bit kernels;
      just choose your chipset support.)
      <M> Intel 440LX/BX/GX, I8xx and E7x05 support
      (Enable your chipset instead of the above.)
   <M> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
      <M> (Select your graphics card from the list)
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
=== Compilar e instalar su kernel ===
</div>

<div class="mw-translate-fuzzy">
{{RootCmd|make && make modules_install}}
</div>

<div class="mw-translate-fuzzy">
No olvide configurar {{Path|grub.conf}} o {{Path|lilo.conf}} y ejecutar <code>/sbin/lilo</code> si usa LILO.
</div>

When using LILO, issue:

{{RootCmd|lilo}}

When using GRUB 2, run:

{{RootCmd|grub-mkconfig -o /boot/grub/grub.cfg}}

<div class="mw-translate-fuzzy">
=== Añadir su usario en el grupo video ===
</div>

<div class="mw-translate-fuzzy">
A continuación, incluya su usuario en el grupo video:
</div> 

{{RootCmd|gpasswd -a $USER video}}

==Configurar el renderizado directo==

=== Configurar Xorg ===

<div class="mw-translate-fuzzy">
Afortunadamente, solo añadir su usuario al grupo <code>video</code> es suficiente para activar el renderizado directo. Sin embargo, podría también necesitar crear una archivo en {{Path|/etc/X11/xorg.conf.d/}}. Puede nombrarlo como desee, solo asegúrese de que el nombre termine en {{Path|.conf}}. Ejecute su editor de texto favorito y cree un archivo con los siguiente en aquel:
</div> 

{{FileBox|filename=/etc/X11/xorg.conf.d/10-dri.conf|1=
Section "Device"
  Driver "radeon"
EndSection
Section "dri"
  Mode 0666
EndSection
}}

<div class="mw-translate-fuzzy">
Reemplaze radeon con el nombre de su controlador.
</div>

<div class="mw-translate-fuzzy">
=== Modificaciones en /etc/conf.d/modules ===
</div>

<div class="mw-translate-fuzzy">
Podría necesitar añadir el nombre del módulo que su tarjeta utiliza en {{Path|/etc/conf.d/modules}} para asegurárse de que el módulo es cargado automáticamente cuando el sistema arranca.
</div> 

<div class="mw-translate-fuzzy">
{{FileBox|filename=/etc/conf.d/modules|1=
modules="intel-agp" # Substitute with your driver
}}
</div>

<div class="mw-translate-fuzzy">
{{Note|Si compiló <code>agpgart</code> como un módulo, necesitará también añadirlo a {{Path|/etc/conf.d/modules}}.}}
</div>

== Probar la aceleración 3D ==

=== Reinicie con el nuevo núcleo ===

Reinicie su computador con el nuevo kernel e inicie sesión como un usuario normal. Es tiempo de saber si posee el rederizado directo y qué tan bueno es. Los comandos <code>glxinfo</code> y <code>glxgears</code> son parte del paquete {{Package|x11-apps/mesa-progs}}, así que asegúrese de haberlo instalado antes de intentar ejecutarlos.

{{Cmd|startx}}

No hay necesidad de cargar agpgart o los  modulos para su controlador, incluso si los compiló como módulos. Serán cargados automáticamente.

{{Cmd|glxinfo {{!}} grep rendering|output=<pre>
direct rendering: Yes
</pre>}}

<div class="mw-translate-fuzzy">
Si la salida es "No", usted no posee aceleración 3D.
</div>

{{Cmd|glxgears}}

Pruebe los cuadros por segundo (FPS) al tamaño predeterminado. El número debe ser significativamente más alto que antes de configurar DRM. Para hacerlo, mantenga el CPU los menos ocupado posible.

<div class="mw-translate-fuzzy">
{{Note|Los cuadros por segundo están limitados por la tasa de refresco de la pantalla, asi que mantenga esto en mente si <code>glxgears</code> reporta solo alrededor de 70-100 FPS. {{Package|games-fps/ut2004-demo}} u otro juego 3D son mejores herramientas de rendimiento, porque proporcionarán información de desempeño en el mundo real.}}
</div>

=== Aproveche al máximo el renderizado directo ===

<div class="mw-translate-fuzzy">
Si desea poder configurar más características, por rendimiento u otras razones, revise la [http://dri.freedesktop.org/wiki/FeatureMatrix matriz de características] en la página de DRI o [http://dri.sourceforge.net/doc/dri_driver_features.phtml la lista de características] en Sourceforge.
</div> 

== Resolución de problemas ==

<div class="mw-translate-fuzzy">
===No funciona. No renderiza y no puedo encontrar la razón===
</div>

Utilize <code>modprobe radeon</code> antes de iniciar el servidor X (reemplace <code>radeon</code> con el nombre de su controlador). También intente compilar agpgart dentro del kernel en lugar de hacerlo como módulo.

<div class="mw-translate-fuzzy">
===Cuando ejecuto startx, recibo el error: "[drm] failed to load kernel module agpgart" ===
</div>

<div class="mw-translate-fuzzy">
Esto se debe a que compiló agpgart dentro del kernel en lugar de compilarlo como módulo.
Ignórelo a menos que tenga problemas.
</div>

<div class="mw-translate-fuzzy">
=== Tengo una Radeon, y deseo utilizar TV-Out. ===
</div>

<div class="mw-translate-fuzzy">
Los controladores originalmente desarrollados por el proyecto [http://gatos.sf.net GATOS] fueron ya incluidos en el código principal de Xorg. No necesita hacer nada especial para utilizar TV-Out; {{Package|x11-drivers/xf86-video-ati}} funcionará bien.
</div>

<div class="mw-translate-fuzzy">
===No funciona. Mi tarjeta es tan increiblemente moderna y cool que no es soportada del todo===
</div>

<div class="mw-translate-fuzzy">
Pruebe con los controladores binarios. Para tarjetas AMD, use <code>ati-drivers</code>; un listado se encuentra en [http://support.amd.com/us/gpudownload/Pages/index.aspx http://support.amd.com/us/gpudownload/Pages/index.aspx]. Si tampoco funcionan, usa fbdev. Es lento, pero funciona.
</div>

<div class="mw-translate-fuzzy">
===Tengo una tarjeta PCI y no funciona ¡Ayuda!===
</div>

Cree un archivo de configuración en {{Path|/etc/X11/xorg.conf.d/}}; nombrelo como desee, siempre que termine en {{Path|.conf}}. Añádale lo siguiente: 

{{FileBox|filename=/etc/X11/xorg.conf.x/10-pcimode.conf|title=Adding ForcePCI Mode|1=
Section "Device"
  Option "ForcePCIMode" "True"
EndSection
}}

== Recursos externos ==

<div class="mw-translate-fuzzy">
* [https://forums.gentoo.org/viewtopic.php?t=46681 Direct rendering (DRI) using X11-DRM HOWTO] en Gentoo forums
* [https://forums.gentoo.org/viewtopic.php?t=29264 Radeon 7000-9700 DRI CVS Install Guide] en Gentoo forums
* [http://dri.freedesktop.org/ http://dri.freedesktop.org/]
</div>

[[Category:X.Org]] {{Migrated|originalauthors={{Dev|dberkholz}}, peesh, {{Dev|nightmorph}}}}
