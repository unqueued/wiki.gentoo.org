<languages/>

== 도입부 ==

지금까지는 로컬 호스트만 메일 보내기를 허용했습니다. 아쉽게도 postfix는 courier-authlib와 직접적으로 동작할 수능 없습니다. 대신, 절충안인 {{Package|dev-libs/cyrus-sasl}}이 있습니다. cyrus-sasl로 인증 정보를 가져오는 방법은 세가지가 있는데, 데이터베이스에서 직접 인증하거나, 로컬, 원격에서 처리하는 방법입니다. 이 방식의 설정은 다음과 같습니다.

<pre>
  courier-imap -> courier-authlib --\
                                     +--> database 
  postfix ------> cyrus-sasl -------/
</pre>

약간 더 복잡할지라도, cyrus-sasl은 courier-authlib와 소통하는데 사용하여 courier-authlib로 인증하도록 합니다.

<pre>
  courier-imap -----------\
                           +-> courier-authlib -> database
  postfix -> cyrus-sasl --/
</pre>

이상적으로 마지막 옵션이 해결책이 되겠지만, 사용할 인증 백엔드는 courier-authlib입니다. 허나, cyrus-sasl 플러그인은 courier-authlib와 유닉스 소켓을 통해서만 소통하므로 courier-authlib가 cyrus-sasl과 동일한 호스트에서 동작하지 않으면, 이 절차를 수행할 수 없습니다. 따라서 첫번째 접근 방식은 courier-authlib를 사용할 수 없을 때만 활용해야합니다.

== cyrus-sasl 설치 ==

cyrus-sasl의 핵심 기능은 <code>crypt</code> USE 플래그가 필요합니다. 데이터베이스로 인증할 수 없을때 활성화하며, 암호문을 암호화합니다. postfix를 이머지할 때, 올바른 USE 플래그를 통해 cyrus-sasl을 끌어와야 합니다. 암호화한 암호문을 데이터베이스에서 바로 사용하도록 지원하는 젠투 패치는 >cyrus-sasl-2.1.23 에서 사용할 수 없으므로, 각 버전을 사용할 때 courier-authlib를 통해 진행합니다.

{{USEflag|package=dev-libs/cyrus-sasl
|authdaemond++yes
|crypt++yes
}}

{{Note/ko|어떤 데이터베이스를 선택하든지간에 상관 없이 지원 기능을 빌드합니다. 어떤 보안 비슷한 이유로 추가 데이터베이스 코드를 원하지 않으면 데이터베이스 USE 플래그를 설정하지 않고 이머지할 수 있습니다.<br />
데이터베이스 USE 플래그는 cyrus-sasl을 사용하도록 설정하지 않은 상태에서 SQL 기능 지원을 넣고 컴파일할 때, cyrus-sasl에서 계속 오류 기록을 출력하기 때문에, 데이터베이스로 바로 인증하기보다 courier-authlib를 통해 인증한다면 제거해야합니다.}}

== cyrus-sasl과 postfix 설정 ==

postfix는 {{Path|main.cf}} 설정에서 sasl을 사용하겠다고 알리는 몇가지 옵션이 필요합니다. 기본 설정 파일에는 없으므로 추가해야합니다.

{{FileBox|filename=/etc/postfix/main.cf|title=postfix에 sasl 기능 지원 추가|1=
# Postifx to SASL authentication
broken_sasl_auth_clients = no
smtpd_sasl_auth_enable = yes
smtpd_sasl_security_options = noanonymous
smtpd_sasl_local_domain =
smtpd_sasl_authenticated_header = yes
smtpd_recipient_restrictions = permit_sasl_authenticated, permit_mynetworks, reject_unauth_destination
}}

{{Warning|<code>smtpd_sasl_authenticated_header</code> prints the username used to authenticate with cyrus when sending mail into the mail header. Especially dangerous for mails that go to publicly archived mailing lists, this header will be seen world wide. For testing purposes it is enabled here.}}

== cyrus-sasl 설정 ==

=== authdaemond 포함 ===

Postfix queries the socket created by authdaemond which is protected by the <tt>mail</tt> user and group and thus postfix needs to be granted access.

{{RootCmd|gpasswd -a postfix mail}}

Next cyrus-sasl needs to be told to authenticate with authdaemond:

{{FileBox|filename=/etc/sasl2/smtpd.conf|title=authdaemond 인증|1=
 pwcheck_method: authdaemond
mech_list: LOGIN PLAIN
sql_select: dummy 
authdaemond_path: /var/lib/courier/authdaemon/socket
 
log_level: 5
}}

=== postgresql 포함 ===

{{FileBox|filename=/etc/sasl2/smtpd.conf|title=직접 데이터베이스 인증|1=
sasl_pwcheck_method: auxprop
sasl_auxprop_plugin: pgsql
password_format: crypt
mech_list: LOGIN PLAIN
 
sql_engine: pgsql
#sql_hostnames: localhost
sql_database: postfix
sql_user: postfix
sql_passwd: $password
sql_select: SELECT password FROM mailbox WHERE local_part='%u' AND active='1'
}}

== 시험 ==

To verify sasl support telnet can be used to check for the <code>AUTH</code> statement:

{{Cmd|telnet foo.example.com 25|output=<pre>
220 foo.example.com ESMTP Postfix
EHLO example.com
250-foo.example.com
250-PIPELINING
250-SIZE 10240000
250-VRFY
250-ETRN
250-AUTH LOGIN PLAIN
250-ENHANCEDSTATUSCODES
250-8BITMIME
250 DSN
quit
221 2.0.0 Bye
Connection closed by foreign host.
</pre>}}

{{Note|If a mail-client is being used that does not work properly, <code>broken_sasl_auth_clients {{=}} yes</code> can be used in postfix's {{Path|main.cf}} to get an additional entry here, <code>250-AUTH&#61;LOGIN PLAIN</code>.}}

Next test is to use a remote host and try to login to send a test message.

{{Warning|Although it is quite common to authenticate against mail servers (pop/imap/webmail/smtp) through plain text logins it is incredibly insecure (and can be protected against, which is described later in this guide). When sending plain text login data (it is base64 encoded data so very easy to decode) over the big bad Internet, only use a testuser or at least a test password.}}

If perl with the base64 module is installed, it can be used to generate base64 encoded data. Otherwise [http://farhadi.ir/works/base64 base64 conversion] can be done online. Again, be very careful when using production data on untrusted sites.

{{Cmd|perl -MMIME::Base64 -e 'print encode_base64("testuser");'|output=<pre>dGVzdHVzZXI=</pre>}}

{{Cmd|telnet foo.example.com 25|output=<pre>
Trying 1.2.3.4...
Connected to foo.example.com.
Escape character is '^]'.
220 foo.example.com ESMTP Postfix
HELO example.com
250 foo.example.com
AUTH LOGIN
334 VXNlcm5hbWU6 (base64 decode: 'Username:')
dGVzdHVzZXI= (base64 encoded from: 'testuser')
334 UGFzc3dvcmQ6 (base64 decode: 'Password:')
c2VjcmV0 (base64 encoded from: 'secret')
235 2.7.0 Authentication successful
mail from:me@you.com
250 2.1.0 Ok
rcpt to:<validuser>@<validexternaldomain>.<tld>
250 2.1.5 Ok
data
354 End data with <CR><LF>.<CR><LF>
Subject: Test message
Test message to ensure Postfix is only relaying with smtp authorization.
.
250 2.0.0 Ok: queued as 82F97606
quit
221 2.0.0 Bye
Connection closed by foreign host.
</pre>}}

== Wrapping it up ==

Once everything is working as expected, debugging can be disabled (or the line can be removed entirely):

{{FileBox|filename=/etc/sasl2/smtpd.conf|title=Disable debugging|1=
log_level: 0
}}

Optionally <code>smtpd_sasl_authenticated_header</code> can be disabled again. It is very handy for tracking down mailing issues from users. It can however be potentially a security issue, as mentioned above, the users login name is written in the header. On the other hand, if the login name is the ''local_part'' of the e-mail address or even the e-mail address then the login name is already known anyway so no big harm there, right? Some caution is advised, but it shouldn't be a huge issue.

{{FileBox|filename=/etc/postfix/main.cf|title=Add sasl support to postfix.|1=
smtpd_sasl_authenticated_header = no
}}

[[Category:Mail Servers]]
