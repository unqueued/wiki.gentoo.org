<languages />


{{Metadata|abstract=Данное руководство является сборником альтернативных методов установки Gentoo, для людей с особенными требованиями к установке, например, отсутствующий CD-ROM, либо компьютер, который не может загружаться с CD.}}

Данное руководство является сборником альтернативных методов установки Gentoo, для людей с особенными требованиями к установке, например, отсутствующий CD-ROM, либо компьютер, который не может загружаться с CD.

== Об этом руководстве ==

Если стандартная установка загрузись-с-CD не работает (её невозможно использовать, либо просто не нравится), то здесь можно найти некоторые подсказки. Данное руководство дает список альтернативных методов установки Gentoo для тех, кому они нужны. Либо, если так больше нравится, это место, где можно разместить нестандартные методы установки. Если знаете метод установки, который считаете полезным, либо нашли удивительный метод установки Gentoo, не стесняйтесь написать что-нибудь о нем здесь, в этой статье.

== Загрузка с установочного CD с Smart BootManager ==

Скачайте Smart BootManager с [http://btmgr.sourceforge.net/download.html http://btmgr.sourceforge.net/download.html]. Доступен исходный код и бинарный формат под Linux, а также {{Path|.exe}} версия под Windows, также как и множество языковых пакетов. Однако в данное время самым лучшим методом будет использование бинарного формата, так как исходные коды не компилируются новыми версиями NASM. 

Либо скомпилируйте пакет из исходных кодов, либо просто возьмите скомпилированный файл. Существуют несколько опций, которые можно использовать при создании загрузочной дискеты, как можно видеть ниже. 

{{Invocation|sbminst --help|output=<pre>
sbminst [-t theme] [-d drv] [-b backup_file] [-u backup_file]
  
   -t theme       выбирает используемую тему, выбирать можно из:
                    us = English theme       de = German theme
                    hu = Hungarian theme     zh = Chinese theme
                    ru = Russian theme       cz = Czech theme
                    es = Spanish theme       fr = French theme
                    pt = Portuguese theme
  
   -d drv         выбирает диск, куда вы хотите установить Smart BootManager;
                  для Linux:
                    /dev/fd0 это первый floppy-диск,
                    /dev/hda это первый IDE жесткий диск.
                    /dev/sda это первый SCSI жесткий диск.
                  для DOS:
                    0   это первый floppy-диск
                    128 это первый жесткий диск;
  
   -c             заблокировать возможность загрузки с CD-ROM;
  
   -b backup_file сохранить данные, которые будут перезаписаны
                  для будущего удаления программы;
  
   -u backup_file удалить Smart BootManager, опция используется без других опций;
  
   -y             не спрашивать никаких вопросов и не выдавать предупреждений
</pre>}}

Для создания загрузочной дискеты используйте {{c|sbminst}}:

{{RootCmd|sbminst -t us  -d /dev/fd0}}

{{Note|Замените {{Path|fd0}} на необходимое имя устройства для floppy-диска.}}

Теперь просто вставьте дискету в дисковод для гибких дисков так же, как Установочный CD в привод, и запустите компьютер. 

Появится диалог Smart BootManager. Выберете CD-ROM и нажмите клавишу {{Key|Enter}} (Return) для загрузки Установочного CD. После загрузки следуйте стандартным инструкциям по установке. 

Более подробную информацию о Smart BootManager можно найти в [http://btmgr.sourceforge.net/ http://btmgr.sourceforge.net/].

== Установка с помощью не Gentoo LiveCD ==

=== Введение ===

{{Important|Разработчики Gentoo не смогут предоставить поддержку, если что-то пойдёт не так не с Gentoo LiveCD, поскольку нет возможности исправить, диагностировать и документировать каждую странность каждого LiveCD. Официально поддерживаются только LiveCD Gentoo. Пожалуйста, посетите [https://forums.gentoo.org/ Форумы Gentoo] для получения поддержки от сообщества при возникновении проблем с альтернативными установочными носителями.}}

Пользователи могут загружать другие LiveCD помимо тех, которые предоставлены Gentoo. Вне зависимости от этого, LiveCD предоставляет функциональную среду для использования во время компиляции и установки Gentoo. Приведённые здесь инструкции в принципе должны работать с практически любым другим LiveCD. 

В [https://distrowatch.com/search.php списке] указано очень много LiveCD, но возможно вы захотите попробовать [http://www.knoppix.org/ Knoppix]. Он имеет полностью графический интерфейс рабочего стола, с офисными приложениями, браузерами и играми, чтобы занять себя. Knoppix доступен только для пользователей {{Keyword|x86}}, так что в зависимости от потребностей пользователя, могут потребоваться другой LiveCD или другой метод установки. 

{{Warning|Имейте в виду, что если что-то сохранено в домашней папке пользователя LiveCD во время ожидания установки системы Gentoo, то это не будет доступно после перезагрузки в Gentoo. Убедитесь, что сохранили важные файлы на жёсткий диск или на какой-нибудь другой компьютер!}}

=== Инструкции по установке ===

Загрузитесь с LiveCD. Откройте терминал и выполните {{c|su -}}, чтобы можно было изменить пароль. Это позволит установить root пароль для CD. Теперь, если потребуется, sshd может быть настроен для удалённого входа. После этого, создайте точку монтирования {{Path|/mnt/gentoo}} – это необходимо. 

{{RootCmd|mkdir /mnt/gentoo}}

С этого момента может быть использовано стандартное руководство по установке – [[Handbook:AMD64/Installation/Disks/ru|Подготовка дисков]]. Однако, когда будет нужно примонтировать файловую систему proc, выполните следующую команду: 

{{RootCmd|mount -o bind /proc /mnt/gentoo/proc}}

При распаковке [[stage tarball|архива stage]] в [[Handbook:AMD64/Installation/Stage/ru#.D0.A0.D0.B0.D1.81.D0.BF.D0.B0.D0.BA.D0.BE.D0.B2.D0.BA.D0.B0_.D0.B0.D1.80.D1.85.D0.B8.D0.B2.D0.B0_stage|Распаковке архива stage]] убедитесь, что используете следующие опции команды {{c|tar}}, чтобы в распакованном stage были применены правильные ID группы: 

{{RootCmd|tar --numeric-owner --xattrs -xvjpf stage3-*.tar.bz2 -C /mnt/gentoo }}

Если используется Ubuntu, имейте в виду, что {{Path|/dev/shm}} – символьная ссылка на {{Path|/run/shm}}. Он должен быть связано смонтирован, или необходимо настроить tmpfs в этом расположении (в рамках chroot). Для связанного монтирования пути, выполните следующую команду (перед выполнением chroot):

{{RootCmd|mount --rbind /run/shm /mnt/gentoo/run/shm}}

Это нужно, чтобы избежать {{Bug|496328}}, когда Python определяет <code>sem_open()</code> как повреждённую (ввиду отсутствия {{Path|/dev/shm}}), и Portage считает это ошибкой (технически, конфигурирование Python будет продолжено и построено, предполагая, что включена переменная <var>POSIX_SEMAPHORES_NOT_ENABLED</var>, но это приведёт к очень неблагоприятной сборке Python).

Когда всё будет готово к выполнению chroot в распакованный stage в [[Handbook:AMD64/Installation/Base/ru|Установке базовой системы Gentoo]], придётся использовать другую последовательность команд для chroot. Это обеспечивает правильность установки переменных среды. 

{{Note|Некоторые LiveCD используют забавные настройки среды, поэтому выполните {{c|env -i}} для её очистки в приемлемое состояние.}}

{{RootCmd
|chroot /mnt/gentoo /bin/env -i TERM{{=}}$TERM /bin/bash
|env-update
|source /etc/profile
|export PS1{{=}}"(chroot) $PS1"
}}

Наконец, учитывайте, что некоторые Portage <var>FEATURES</var> могут не работать в LiveCD. Особенно остерегайтесь значений <code>userpriv</code> и <code>usersandbox</code>. Если случаются ошибки, попробуйте отключить некоторые или все опциональные <var>FEATURES</var>.

== Бездисковая установка с использованием PXE и ядра/initrd/squashfs с LiveCD ==

Данный способ проще в настройке, чем PXE-загрузка на основе iSCSI или NFS. Множество машин может загружаться с одинакового набора образов, распространяемых через TFTP, и загрузка запросто может быть расширена для работы по HTTP или по другим протоколам.

Наличие хорошего роутера или роутера, способного запускать такие прошивки с открытым исходным кодом как [https://lede-project.org/ LEDE] (преемник [https://openwrt.org/ OpenWRT]), – один из способов централизировать TFTP и DHCP. Получение прошивки онлайн может оказаться тяжёлым боем в зависимости от вашего опыта.

Некоторые другие дистрибутивы, включая Fedora, уже распространяют образы, необходимые для создания LiveCD или установочного CD. С Gentoo это не так. Вместо этого, пользователи должны

# Извлечь ядро, initrd и [[SquashFS|squashfs]] из live CD.
# Применить патч к содержимому initrd.
# Объединить squashfs с initrd.

Только после этого PXE загрузчик может быть настроен на загрузку образов и запуск системы.

Существуют различные виды PXE, но всем им понадобятся файлы ядра и initrd, поэтому давайте создадим их. Скачайте [https://www.gentoo.org/downloads/ минимальный установочный CD]. Затем выполните следующий сценарий с правами root. В указанном каталоге будут созданы новые файлы '''initrd''' и '''kernel'''.


{{CodeBox|title=pxe-craft-initrd-kernel|lang=bash|<nowiki>
#!/bin/bash -xe
# Create kernel and initrd files from a Gentoo LiveCD (DVD?) for PXE boot.

print-usage() {
  echo "Usage: $0 <output-dir> <gentoo-iso>" >&2
}

# Example Invocation
# sudo ./gen-pxe-initrd-kernel pxe-boot-files ~/Downloads/install-amd64-minimal-20171228T214501Z.iso

outdir="$1"
image="$2"
tmp="$outdir/tmp"

if [ $(id -u) -ne "0" ]; then
  echo "You must run as root or with sudo. This is necessary for the loop mount" && 
  print-usage &&
  exit 2
fi

test -z "$outdir" -o -z "$image" && print-usage && exit 1
test -e "$tmp" && echo "Temporary path '$tmp' already exists." >&2 && exit 1

iso="$tmp/iso"
initrd="$tmp/initrd.dir"

# prepare directories
mkdir -p "$outdir" "$tmp" "$iso" "$initrd/mnt/cdrom"

# extract files from ISO image
mount -o ro,loop "$image" "$iso"
cp "$iso"/{image.squashfs,isolinux/gentoo,isolinux/gentoo.igz} "$tmp"
umount "$iso"

# rename kernel
mv "$tmp/gentoo" "$tmp/kernel"

# patch initramfs and add squashfs to it
xz -dc "$tmp/gentoo.igz" | ( cd "$initrd" && cpio -idv )
patch -d "$initrd" -p0 <<'EOF'
--- init.orig	2016-01-02 00:00:00.000000000 +0100
+++ init	2016-01-02 00:00:00.000000000 +0100
@@ -455,9 +455,9 @@
 		CHROOT=${NEW_ROOT}
 	fi
 
-	if [ /dev/nfs != "$REAL_ROOT" ] && [ sgimips != "$LOOPTYPE" ] && [ 1 != "$aufs" ]; then
-		bootstrapCD
-	fi
+#	if [ /dev/nfs != "$REAL_ROOT" ] && [ sgimips != "$LOOPTYPE" ] && [ 1 != "$aufs" ]; then
+#		bootstrapCD
+#	fi
 
 	if [ "${REAL_ROOT}" = '' ]
 	then
@@ -591,7 +591,7 @@
 		else
 			bad_msg "Block device ${REAL_ROOT} is not a valid root device..."
 			REAL_ROOT=""
-			got_good_root=0
+			got_good_root=1
 		fi
 	done
 
@@ -670,7 +670,7 @@
 	[ -z "${LOOP}" ] && find_loop
 	[ -z "${LOOPTYPE}" ] && find_looptype
 
-	cache_cd_contents
+	#cache_cd_contents
 
 	# If encrypted, find key and mount, otherwise mount as usual
 	if [ -n "${CRYPT_ROOT}" ]
EOF
cp "$tmp/image.squashfs" "$initrd/mnt/cdrom"
( cd "$initrd" && find . -print | cpio -o -H newc | gzip -9 -c - ) > "$tmp/initrd"

mv "$tmp"/{kernel,initrd} "$outdir"
rm -rf "$tmp"
</nowiki>}}


Если вы знаете, что делаете, то вы свободны! Наслаждайтесь Gentoo на PXE. В противном случае, смотрите следующие инструкции в зависимости от вида PXE, который вы используете.

=== TFTP ===

Это будет необходимо в связке с DHCP сервером для многих ПК с PXE загрузкой. Но помните, что загрузку iPXE можно использовать без TFTP или DHCP сервера! См. [http://ipxe.org/ ipxe.org] для получения сведений о встраивании сценариев, поэтапной и ручной загрузке. У TFTP загрузки всё же есть такие преимущества как широкий спектр поддерживаемых устройств, поэтому приступим к использованию TFTP!

Установите {{Package|net-ftp/tftp-hpa}}, убедитесь, что он предоставляет {{Path|/tftproot}} и запустите его.

Теперь загрузочный сервис TFTP готов, поэтому следующим шагом будет настройка сервиса DHCP. 

=== DHCP ===

Настройка DHCP сервера на одинаковых устройствах возможна – просто убедитесь, что запущенные устройства подключены к нему. Или просто измените настройки существующего роутера.

Ниже находится пример конфигурации сервиса DHCP для OpenWRT:

{{FileBox|filename=/etc/config/dhcp|1=
config boot linux                   
        option filename boot/grub/i386-pc/core.0
        option servername boot
        option serveraddress 84.246.161.86
}}

С этого момента инструкции меняются в зависимости от того, какой у вас PXE (т.е. GRUB, iPXE). 


=== GRUB ===

After executing the '''pxe-craft-initrd-kernel''' script, run the following '''pxe-install-grub''' to output proper files into your tftp root directory.

{{CodeBox|title=pxe-install-grub|lang=bash|<nowiki>
#!/bin/bash -xe
# prepare boot data
 
print-usage() {
  echo "Usage: $0 -i [initrd-file] -k [kernel-file] <tftproot>" >&2
}
 
POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"
 
case $key in
    -i|--initrd)
    initrd="$2"
    shift # past argument
    shift # past value
    ;;
    -k|--kernel)
    kernel="$2"
    shift # past argument
    shift # past value
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters
 
tftproot="$1"
 
test ! -e "$initrd" && echo "initrd Not found" && print-usage && exit 1
test ! -e "$kernel" && echo "kernel Not found" && print-usage && exit 1
test -z "$tftproot" && echo "tftproot not specified" && print-usage && exit 1
                                                                          
echo "initrd:$initrd"
echo "kernel:$kernel"
echo "tftproot:$tftproot"
 
grub-mknetdir -v --net-directory="$tftproot"
cat > "$tftproot/boot/grub/grub.cfg" <<'EOF'
menuentry "Gentoo Live" {
    linux /boot/kernel root=/dev/ram0 init=/linuxrc loop=/image.squashfs looptype=squashfs cdroot=1 real_root=/
    initrd /boot/initrd
}
EOF
 
cp "$kernel" "$initrd" "$tftproot/boot"
</nowiki>}}


=== iPXE ===

Here are relevant stanzas for iPXE.

{{CodeBox|title=gentoo-pxe-boot|<nowiki>
#!ipxe                                                                    
menu THRONG OF BAZ                                                       
item --gap LAN
item gentoo Gentoo x86_64 minimal
 
:gentoo                                                                   
set g http://baz.com/ipxe/gentoo                                        
kernel ${g}/kernel root=/dev/ram0 init=/linuxrc loop=/image.squashfs looptype=squashfs cdroot=1 real_root=/
initrd ${g}/initrd                                                        
boot
</nowiki>}}

== Diskless install using PXE boot and NFS ==

=== Необходимые требования ===

PXE (Preboot eXecution Environment) is a method for booting computers over a PXE-capable network interface (and using a PXE-supporting BIOS). In case the system does not support PXE boot from the network interface or BIOS, PXE can also be used as a boot method from block devices (like CDs or USBs). In such cases, a minimal boot environment mimics the PXE supporting network card (see also [http://etherboot.org Etherboot/gPXE]). 

=== Базовая настройка сервера ===

Create directories: The first thing to do is to create the directories where the diskless system will be stored. Create a directory called {{Path|/diskless}} which houses a directory for each diskless client. For the remainder of this howto, the client that is being worked on will be called 'eta'. 

{{RootCmd|mkdir -p /diskless/eta}}

DHCP and TFTP setup: The client will get boot information using DHCP and download all the required files using TFTP. 

For dhcpd, just run {{c|emerge dhcp}} (or any other DHCP server of choice). Make sure that the correct interface is selected in {{Path|/etc/conf.d/dhcpd}}, and configure it accordingly. Then, add the following on {{Path|/etc/dhcp/dhcpd.conf}}. 

{{Note|This provides a static IP address for the client and the path of a PXE boot image, here {{Path|pxegrub}}. The MAC address of the ethernet card of the client in the example has to be replaced with the correct MAC address, as well as the directory where the client files will be stored.}}

{{FileBox|filename=dhcpd.conf|1=
option option-150 code 150 = text ;
ddns-update-style none ;
host eta {
hardware ethernet 00:00:00:00:00:00;
fixed-address ip.add.re.ss;
option option-150 "/eta/boot/grub.lst";
filename "/eta/boot/pxegrub";
}
}}

Next configure the interface in {{Path|/etc/conf.d/net}} so that it doesn't get cleared at bootup. See {{Path|/usr/share/doc/openrc-*/net.example.bz2}} for more information. 

{{FileBox|filename=/etc/conf.d/net|title=Убедимся, что интерфейс (здесь, в качестве примера eth0) не будет перенастроен во время загрузки|lang=bash|1=
config_eth0="noop"
}}

Для TFTP, установите пакет {{Package|net-ftp/tftp-hpa}}. В файле {{Path|/etc/conf.d/in.tftpd}} вставьте следующее: 

{{FileBox|filename=in.tftpd|title=|lang=bash|1=
INTFTPD_PATH="/diskless"
INTFTPD_USER="nobody"
INTFTPD_OPTS="-u ${INTFTPD_USER} -l -vvvvvv -p -c -s ${INTFTPD_PATH}"
}}

Установите GRUB:

{{Emerge|sys-boot/grub}}

После установки GRUB, создайте загрузочный каталог для бездисковых клиентов:

{{RootCmd|grub2-mknetdir --net-directory{{=}}/diskless/eta}}

Original way was to copy the PXE image to the diskless client but the path does not seem to exit anymore.

{{RootCmd
|mkdir /diskless/eta/boot
|cp /usr/lib/grub/pxegrub /diskless/eta/boot/pxegrub
}}

Далее, отредактируйте конфигурационный файл {{Path|grub.lst}}.

{{RootCmd|nano -w /diskless/eta/boot/grub.lst}}

{{FileBox|filename=grub.lst|lang=bash|1=
default 0
timeout 30
  
title=Diskless Gentoo
root (nd)
kernel /eta/bzImage ip=dhcp root=/dev/nfs nfsroot=ip.add.re.ss:/diskless/eta
  
# For the nfsroot option, the IP address is the one of the server and
the directory is the one where the diskless client files are located (on the server).
}}

NFS is quite easy to configure. The only thing that has to be done is to add a line on the {{Path|/etc/exports}} config file: 

{{FileBox|filename=/etc/exports|title=|lang=bash|1=
/diskless/eta eta(rw,sync,no_root_squash)
}}

One important thing to do now is to modify the {{Path|/etc/hosts}} file to fit requirements. 

{{FileBox|filename=/etc/hosts|lang=bash|1=
127.0.0.1 localhost
192.168.1.10 eta.example.com eta
192.168.1.20 sigma.example.com sigma
}}

=== Creating the system on the server ===

A next step is to reboot the server with a Gentoo installation CD (although experienced administrators can continue without if they are sufficiently versed in Gentoo installations). Follow the standard install procedure as explained in the [[Handbook:Main_Page|Gentoo Handbook]] BUT with the following differences: when mounting the file system, execute the next step (where {{Path|sdaX}} is the partition where the {{Path|/diskless}} directory was created).

{{RootCmd|mount /dev/sdaX /mnt/gentoo}}

Mounting any other partition is not needed as all of the files will reside in the {{Path|/diskless/eta}} directory. 

This example uses a stage3 tarball. Mount {{Path|/proc}} to the diskless directory and chroot into it to continue with the install. Then follow the installation manual until kernel configuration. 

{{Warning|Be very careful when extracting the stage tarball to its destination, so as to not end up extracting over an existing installation.}}

{{RootCmd
|cd /mnt/gentoo/diskless/eta/
|tar -xvjpf  /mnt/cdrom/gentoo/stage3-*.tar.bz2
|mount -t proc /proc /mnt/gentoo/diskless/eta/proc
|cp /etc/resolv.conf /mnt/gentoo/diskless/eta/etc/resolv.conf
|chroot /mnt/gentoo/diskless/eta/ /bin/bash
|env-update
|source /etc/profile
}}

When doing the {{c|make menuconfig}} of the kernel configuration, don't forget to enable the following options with the others recommended into the install guide. 

{{KernelBox|title=Necessary options for diskless installations|1=
- The network card device support
(In the kernel, *not* as a module!)
  
-*- Networking support --->  
  Networking options --->
    [*] TCP/IP networking
    [*] IP: kernel level autoconfiguration
    [*] IP: DHCP support
    [*] IP: BOOTP support
  
File systems --->
  [*] Network File Systems --->
    <*> NFS file system support
    [*] Provide NFSv3 client support
    [*] Root file system on NFS
}}

Save the kernel in the chrooted {{Path|/}} (not in {{Path|/boot}}) according to the pxegrub setting defined earlier. Next configure the diskless client's {{Path|/etc/fstab}}. 

{{FileBox|filename=/etc/fstab|<pre>
/dev/cdroms/cdrom0 /mnt/cdrom iso9660 noauto,ro 0 0
</pre>
}}

Now to prevent the client from running a filesystem check: 

{{RootCmd
|touch /fastboot
|echo "touch /fastboot" >> /etc/conf.d/local.start
}}

Install {{Package|net-fs/nfs-utils}} since the client will heavily depend on it: 

{{Emerge|net-fs/nfs-utils}}

Do not install another bootloader because there is already one - pxegrub. Simply finish the install and restart the server. Start the services that are needed to boot the new client: DHCP, TFTPD, and NFS. 

{{RootCmd
|service dhcp start
|service in.tftpd start
|service nfs start
}}

=== Загрузка нового клиента ===

For the new client to boot properly, the BIOS and the network card need to be configured to use PXE as the first boot method - before CD-ROM or floppy. For help with this consult the hardware manuals or manufacturers website. The network card should get an IP address using DHCP and download the GRUB PXE image using TFTP. Then, a nice black and white GRUB bootmenu should be displayed from where users can select the kernel to boot and press the {{Key|Enter}} (Return) key. If everything is okay the kernel should boot, mount the root filesystem using NFS and provide a login prompt. Enjoy.

== Установка Gentoo из уже установленного дистрибутива Linux ==

=== Необходимые требования ===

In order to install Gentoo from an existing Linux distribution it needs to have the chroot command installed, and have a copy of the Gentoo installation or ISO that's desired to install. A network connection is highly recommended as otherwise the installation can only work with the files available in the installation media. By the way, a tarball is just a file ending in {{Path|.tbz}} or {{Path|.tar.gz}}. Let's get started!

=== Общий обзор ===

First allocate a partition to Gentoo by resizing an existing Linux partition, mount the partition, untar the tarball to the partition that is mounted, chroot inside the pseudo-system and start building. Once the bootstrap process is done, do some final configuration on the system so as to make sure it boots, then reboot and use Gentoo. 

=== Как создать пространство для Gentoo? ===

The root partition is the filesystem mounted under {{Path|/}}. The first example shows the output of {{c|mount}} on a system. The second example uses {{c|df}} (disk free) to see how much space there is left and how it will be resized. Note that resizing the root partition is not mandatory! Anything else supported by the resizer can be resized, but let's talk about that later. 

{{RootCmd|mount|output=<pre>
/dev/sdb2 on / type ext3 (rw)
none on /proc type proc (rw)
none on /dev/pts type devpts (rw,gid=5,mode=620)
none on /dev/shm type tmpfs (rw,nodev,nosuid,noexec)
</pre>}}

{{RootCmd|df -h|output=<pre>
Filesystem           Size Used Avail Use% Mounted on
/dev/sdb2            4.0G 1.9G  2.4G  82% /
none                  38M    0   38M   0% /dev/shm
</pre>
}}

As can be seen, the partition mounted as {{Path|/}} named {{Path|/dev/sdb2}} has 2.4 GB free. In this case, it was decided to be resized as to leave 400 MB of free space, therefore allocating 2 GB for Gentoo. Not bad, it could have quite some stuff installed. However, 1 GB is deemed enough for most users. So now partition this thing!

=== Building parted to resize partition ===

{{Warning|This section is outdated and will be removed when the older parted versions have left the Gentoo Portage tree. The ability to resize partitions has been removed from parted, as explained [https://www.gnu.org/software/parted/manual/html_node/Command-explanations.html here].}}

{{Package|sys-block/parted}} is extremely useful for resizing partitions. It is included on the minimal installation CD.

{{Note|There are other tools for doing resize of partitions as well, but an elaborate description of these tools is outside the scope of this guide.}}

Look up on that page the type of file system to resize and see if {{c|parted}} can do it. If not: tough luck, some partitions might need to be destroyed to make space for Gentoo, and reinstall back. Go ahead by downloading the software and install it. In the next step, a problem arises. The Linux root partition needs to be resized, therefore a floppy disk with a minimal Linux system must be booted and to use a previously-compiled parted copied to a diskette in order to resize {{Path|/}}. If the partition can be unmounted while still running in Linux then the following steps are not needed. Just compile parted and run it on a chosen unmounted partition to resize. Here's how it was done on this system. 

{{Important|Make sure that the operations that are required for partitioning are supported by parted!}}

Get the mininux boot/root disk (a 2.4-powered mini Linux distribution on a floppy - free of charge) from [http://mininux.free.fr/uk/ http://mininux.free.fr/uk/], create a floppy as suggested in the Documentation that accompanies the software package and insert a new floppy in the drive for the next step. 

{{Note|Note again that Linux is synonym of "There's one more way to do it". The objective is to run parted on an unmounted partition so it can do its work. A boot/root diskset other than mininux can be used. This step might not even be needed to do at all: there may only be the need to umount the filesystem to repartition in the Linux session and run parted on it.}}

{{RootCmd|mkfs.minix /dev/fd0|output=<pre>
480 inodes
1440 blocks
Firstdatazone=19 (19)
Zonesize=1024
Maxsize=268966912
</pre>
}}

Proceed with the build of parted. Download and untar the utility, and {{c|cd}} into the corresponding directory. Now run the following set of commands to build the utility and copy it to the floppy disk. 

{{RootCmd|mkdir /floppy
|mount -t minix /dev/fd0 /floppy
|export CFLAGS{{=}}"-O3 -pipe -fomit-frame-pointer -static"
|./configure
|make
|cp parted/parted /floppy
|umount /floppy }}

Time to reboot and resize the partition. Do this only after taking a quick look at the parted documentation on the GNU website. The resize should take under 30 minutes for the largest hard-drives, be patient. Reboot the system with the mininux boot disk (just pop it inside), and once logged in, switch the disk in the drive with the utility disk that was created above and type {{c|mount /dev/fd0 /floppy}} to have parted under {{Path|/floppy}}. Run parted to be able to resize the partition. Once this lengthy process is done, continue with installing Gentoo. Reboot back into the old Linux system for now. The drive to operate on is the drive containing the partition that is going to be resized. For example, if the partition to be resized is {{Path|/dev/sda3}}, the drive is {{Path|/dev/sda}}. 

{{RootCmd|mount /dev/fd0 /floppy 
|cd /floppy
|./parted <drive>}}

{{Cmd|print|prompt=(parted) |output=<pre>
Disk geometry for /dev/sdb: 0.000-9787.148 megabytes
Disk label type: msdos
Minor    Start       End     Type      Filesystem  Flags
1          0.031   2953.125  primary   ntfs
3       2953.125   3133.265  primary   linux-swap
2       3133.266   5633.085  primary   ext3
4       5633.086   9787.148  extended
5       5633.117   6633.210  logical
6       6633.242   9787.148  logical   ext3</pre>}}

{{Cmd|help resize|prompt=(parted) |output=<pre>
(parted)  help resize 
  resize MINOR START END        resize filesystem on partition MINOR
  
        MINOR is the partition number used by Linux.  On msdos disk labels, the
        primary partitions number from 1-4, and logical partitions are 5
        onwards.
        START and END are in megabytes
</pre>}}

{{Cmd|resize 2 3133.266 4000.000|prompt=(parted) }}

{{Important|Be patient! The computer is working! Just look at the hard drive LED on the case to see its activity. This should take between 2 and 30 minutes.}}

Once the resize has finished, boot back into the old Linux as described. Then go to [[Handbook:AMD64/Installation/Disks|The Gentoo Handbook: Preparing the Disks]] and follow the instructions. When chrooting, use the following command to flush the environment: 

{{RootCmd
|env -i HOME{{=}}$HOME TERM{{=}}$TERM chroot /mnt/gentoo /bin/bash
|/usr/sbin/env-update
|source /etc/profile
}}

Наслаждайтесь!

[[Category:Core system]] {{Migrated|originalauthors=Gerald Normandin Jr., Travis Tilley, Oleg Raisky, Alex Garbutt, Alexandre Georges, Magnus Backanda, Faust A. Tanasescu, Daniel Ahlberg, Ken Nowack, Tiemo Kieft, Benny Chuang, Jonathan Smith, nightmorph}}
