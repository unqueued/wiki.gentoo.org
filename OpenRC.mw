{{InfoBox stack
|{{InfoBox todo|[[#Busybox specific init.d files|Busybox specific init.d files]]|header=true}}
}}
'''OpenRC''' is a dependency based init system that works with the system provided init program, normally {{path|/sbin/init}}. It is not a replacement for {{path|/sbin/init}}. OpenRC is 100% compatible with Gentoo init scripts, which means you can probably find one for the daemons you want to start in the Gentoo Portage Tree. OpenRC, however, is not exclusively used by Gentoo Linux and can be used on different Linux and BSD systems.

== Features ==
OpenRC provides a number of features touted as innovative by recent init systems like [[systemd]] or upstart, such as hardware initiated initscript run or [[cgroups]] support, without requiring large layout changes to accommodate radically different designs and dependencies. See also [[Comparison of init systems]].

== OpenRC Busybox Integration ==
Busybox can be used to replace most of the userspace needed by OpenRC (init, shell, awk and other posix tools), by using a complete busybox as shell for OpenRC all the calls that normally would cause a fork/exec would be spared, improving the overall speed. This process isn't yet streamlined.

Please note that are are currently many busybox applets that are incompatible with OpenRC. See {{Bug|468396}} for details.

=== Replacing init ===
The sysvinit inittab provided by Gentoo is not compatible to the busybox init.

{{File|/etc/inittab|Example inittab compatible with busybox init|<pre>
::sysinit:/sbin/rc sysinit
::wait:/sbin/rc boot
::wait:/sbin/rc
</pre>}}

In order to set a specific runlevel from the bootloader the variable `softlevel=` should be used.

=== Busybox specific init.d files ===
TODO: busybox provides a number of applets that could be used to replace third party software like acpid or dhcp/dhcpcd.

=== Replacing udev with mdev ===
See [[mdev]].

== Using runlevels ==
OpenRC can be controlled and configured using '''rc''', '''rc-update''' and '''rc-status'''.

=== Named runlevels ===
OpenRC runlevels are directories living in "/etc/runlevels" to create additional runlevels is enough to issue

{{RootCmd|install -d /etc/runlevels/$runlevel}}

=== Stacked runlevels ===
Is possible manage variants using '''rc-update -s'''

An usage example for using stacked runlevel on laptop to group networking services based on location is at [[OpenRC/StackedRunlevel]]

=== Select specific runlevel at boot ===
OpenRC reads the kernel commandline used at boot time, and will start the runlevel specified by the "softlevel" parameter if provided, instead of 'default'.

For instance, you can choose whether to boot into the 'default' or 'nonetwork' runlevels with the following example grub.conf configuration:
{{File|/boot/grub/grub.conf|Example grub.conf (grub legacy)|<pre>
...

title=Regular Start-up
...
kernel (hd0,0)/boot/kernel-3.7.10-gentoo-r1 root=/dev/sda3

title=Start without Networking
...
kernel (hd0,0)/boot/kernel-3.7.10-gentoo-r1 root=/dev/sda3 softlevel=nonetwork
</pre>}}

== Dependency behaviour ==
Changing the default dependencies of init scripts, might be needed to fit more complex setups. See {{Path|/etc/rc.conf}} for how to change the default behaviour; notice the ''rc_depend_strict'' option. In addition, next networking examples show how flexible OpenRC can be.

; ''Multiple network interfaces (example)''
The [[SSH|SSH service]] must come up with the internal network, for instance ''eth0'' and never ''wlan0''.

Change "net" to "net.eth0":
{{File|/etc/init.d/sshd||<pre>
#need net
need net.eth0
</pre>}}

; ''Multiple network interfaces in multiple runlevels (example)''
The SSH service must start with ''eth0'' (not ''wlan0'') in "default" runlevel, but in "office" runlevel it must start with ''wlan0'' (not ''eth0'').

Keep the default:
{{File|/etc/rc.conf||<pre>
#rc_depend_strict="YES"
</pre>}}
Comment out the default dependency:
{{File|/etc/init.d/sshd||<pre>
#need net
</pre>}}
Make additional symlinks to ''sshd'' with the network interface names:
{{RootCmd|ln -s sshd /etc/init.d/sshd.eth0
|ln -s sshd /etc/init.d/sshd.wlan0}}
Settings are read from {{Path|/etc/conf.d/sshd.eth0}} and {{Path|/etc/conf.d/sshd.wlan0}} now:
{{RootCmd|cp /etc/conf.d/sshd /etc/conf.d/sshd.eth0
|cp /etc/conf.d/sshd /etc/conf.d/sshd.wlan0}}
Add the dependencies:
{{RootCmd|echo <nowiki>'rc_need="net.eth0"'</nowiki> >> /etc/conf.d/sshd.eth0
|echo <nowiki>'rc_need="net.wlan0"'</nowiki> >> /etc/conf.d/sshd.wlan0
|echo <nowiki>'rc_need="net"'</nowiki> >> /etc/conf.d/sshd}}
In this example ''net.eth0'' and ''net.wlan0'' read their settings from {{Path|/etc/conf.d/net}}, or {{Path|/etc/conf.d/net.office}} depending on the active runlevel. Add all runscripts to the different runlevels:
{{RootCmd|rc-update add sshd.eth0 default
|rc-update add sshd.wlan0 office
|rc-update add net.eth0 default office
|rc-update add net.wlan0 default office}}

== Prefix usage ==
[http://www.gentoo.org/proj/en/gentoo-alt/prefix Gentoo Prefix] installs Gentoo within an offset, known as a prefix, allowing users to install Gentoo in another location in the filesystem hierarchy, hence avoiding conflicts. Next to this offset, Gentoo Prefix runs unprivileged, meaning no root user or rights are required to use it.

By using an offset (the "prefix" location), it is possible for many "alternative" user groups to benefit from a large part of the packages in the Gentoo Linux Portage tree. Currently users of the following systems successfully run Gentoo Prefix: Mac OS X on PPC and x86, Linux on x86, x86_64 and ia64, Solaris 10 on Sparc, Sparc/64, x86 and x86_64, FreeBSD on x86, AIX on PPC, Interix on x86, Windows on x86 (with the help of Interix), HP-UX on PARISC and ia64. 

OpenRC runscript already support prefix-installed daemons, during the [http://www.awa.tohoku.ac.jp/~benda/projects/openrc.html SummerOfCode2012] work will be done to implement full secondary/session daemon behaviour to complete the overall feature set provided by Prefix.

[[OpenRC/Prefix]], a tutorial for trying it out.

== Hotplug usage ==
OpenRC can be trigger by external events, such as new hardware from udev. See [[OpenRC/Event Driven]] for details.

== Other uses ==
* stateful init scripts and automatic respawning (run "rc")

== CGroups support ==
OpenRC starting with version 0.12 has extended cgroups support. See [[OpenRC/CGroups]] for details.

[[Category:OpenRC]]
