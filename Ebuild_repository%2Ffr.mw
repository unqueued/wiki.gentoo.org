<languages />
'''Un arbre alternatif (parfois appelé ''surcouche'') est un dépôt additionnel que Portage prend en compte lorsqu'il s'occupe des logiciels'''.

Within Gentoo Linux, users already have one "main" package repository, called the ''Portage Tree''. This main repository contains all the software packages (called [[Ebuild|ebuilds]]) maintained by Gentoo developers. But users can add additional repositories to the tree that are "layed over" the main tree - hence the name, ''overlays''.

Comme les dépôts de paquets ne sont rien de plus (ou de moins) que des jeux de fichiers (ebuilds, fichiers de méta-données, entrées de journaux de modifications, etc...), ces dépôts peuvent être tirés de dépôts publics (git, cvs, svn...) ou téléchargés en tant qu'archives tar et désarchivés à la main sur le système. Il est cependant recommandé d'utiliser des dépôts gérés par des tiers '' de confiance'' car tout arbre alternatif installé sera analysé par Portage au moment de décider quel logiciel installer.

== Traitement des arbres alternatifs ==

Portage utilise la variable <code>PORTDIR_OVERLAY</code>  pour établir un lien avec les arbres alternatifs installés sur le système. Cette variable utilise une liste de chemins sur le système, séparés par une espace, où Portage peut trouver la racine de ces dépôts additionnels.

=== Définir l'emplacement des arbres alternatifs à la main ===

To make a personal overlay, create a location ({{Path|/usr/local/myportage}} for example) in which the packages Portage is to look for are located. Then add the <code>PORTDIR_OVERLAY</code> variable to the {{Path|/etc/portage/make.conf}} file containing the path to the location of the custom overlay.

{{FileBox|filename=/etc/portage/make.conf|title=Example 1 - Adding a custom overlay|lang=bash|1=
PORTDIR_OVERLAY="/usr/local/myportage" 
}}

An example of an overlay being located in the a user's home directory:

{{FileBox|filename=/etc/portage/make.conf|title=Example 2 - Adding a custom overlay|lang=bash|1=
PORTDIR_OVERLAY="/home/user/overlay" # requires /home is readable for Portage
}}

=== Add user to Portage group ===

To add a user to the <tt>portage</tt> group, use the <tt>gpasswd</tt> command like so:

{{RootCmd|gpasswd -a larry portage}}

See also [[Knowledge_Base:Adding_a_user_to_a_group|adding a user to a group]].

=== Utilisation de  crossdev ===

[[crossdev]] placera automatiquement les ebuilds/catégories qu'il génère dans le premier arbre alternatif trouvé dans <code>PORTDIR_OVERLAY</code>. Vous voudrez peut-être empêcher [[crossdev]] de perturber les arbres alternatifs de  [[layman]] ou votre arbre alternatif personnel par machine (créé normalement dans {{Path|/usr/local/portage}}). Vous pouvez créer un arbre alternatif spécifiquement réservé à [[crossdev]]:

{{RootCmd|mkdir -p /usr/local/portage-crossdev/profiles
|echo local-crossdev > /usr/local/portage-crossdev/profiles/repo_name}}

Then instruct portage and crossdev to use this overlay:

{{FileBox|filename=/etc/portage/make.conf|title=Let crossdev to store its ebuild in local-crossdev and indicate that the local overlay should override every other overlay|lang=bash|1=
source /var/lib/layman/make.conf
PORTDIR_OVERLAY="/usr/local/portage-crossdev ${PORTDIR_OVERLAY} /usr/local/portage"
}}

{{FileBox|filename=/etc/portage/make.conf|title=Prevent crossdev from messing with the local overlay when not using layman|lang=bash|1=
PORTDIR_OVERLAY="/usr/local/portage-crossdev /usr/local/portage"
}}

=== Utilisation de layman ===

Pour faciliter la gestions d'arbres alternatifs multiples, un outil appelé [[Layman|layman]] a été développé. Cet outil est informé des arbres alternatifs populaires gérés par des utilisateurs et des développeurs et est capable de les installer et de les synchroniser tout autant que de les ajouter aux emplacements déclarés dans  <code>PORTDIR_OVERLAY</code>.

=== Arbre alternatif local ===

Pour savoir comment mettre en place et configurer un arbre alternatif local, reportez-vous à [[Overlay/Local_overlay]].

=== Priorités des arbres alternatifs ===

Chacun des arbres alternatifs dispose d'une priorité unique. Ceci fait que, dans le cas où une version spécifique serait trouvée dans plusieurs arbres alternatifs, la résolutions est non ambigüe. Les ''ebuilds'' des arbres alternatifs à la plus haute priorité sont prioritaires par rapport à ceux trouvés dans des arbres de priorité moindre.

{{Note| Cette manière  "naturelle" de gérer les priorités a été introduite en janvier 2011. Avant cette date, la résolution des priorités se faisait dans l'ordre inverse, c'est pourquoi des nombre négatifs correspondaient à des priorités plus élevées.}}

La commande suivante fournit la liste des arbres alternatifs avec leur priorité :

{{Cmd|emerge --info --verbose}}

Sauf si la variable  <code>PORTDIR_OVERLAY</code> a été modifiée de la manière décrite [[#Setting overlay priorities|plus bas]], l'arbre de Portage par défaut a une priorité de  -1000. Ceci signifie que tous les autres arbres alternatifs sont prioritaires par rapport à lui. Il s'agit du comportement par défaut, parce que les arbres alternatifs sont conçus, pour se situer au dessus de l'arbre de Portage.

==== Définir la priorité des arbres alternatifs ====

La priorité des arbres alternatifs est calculée d'après leur ordre d'apparition dans la variable <code>PORTDIR_OVERLAY</code>. Portage balaye cette variable de gauche à droite et incrémente la priorité en chemin. L'entrée la plus à gauche commence avec une priorité de 1, la suivante a une priorité de 2 et ainsi de suite.

{{Note|Il y a quelque temps, la priorité des arbres alternatifs pouvait être définie dans  {{Path|/etc/portage/repos.conf}}. Ceci n'a plus cours.}}

Sauf si  <code>PORTDIR_OVERLAY</code> contient une entrée pour l'arbre de Portage, l'arbre de Portage se voit toujours assigner une priorité de  -1000.
On peut facilement changer cela en plaçant  <code>PORTDIR</code> dans la variable <code>PORTDIR_OVERLAY</code>:

{{FileBox|filename=/etc/portage/make.conf|title=Manual portage tree priority setting|lang=bash|1=
PORTDIR_OVERLAY="/home/user/overlay ${PORTDIR}"
}}

Dans l'exemple précédent, l'arbre alternatif utilisateur  aura une priorité de 1 et l'arbre de Portage une priorité de 2. 

{{Note|If [[Layman|layman]] is used to manage overlays, then please refer to the article about [[Layman#Setting overlay priorities with layman|setting overlay priorities with layman]].}}

=== Utilisation d'arbres alternatifs non sûrs ===

Lorsque vous utilisez des arbres alternatifs importants ou des arbres dont la qualité est soit faible, soit inconnue, il est recommandé de masquer en dur tout l'arbre alternatif.

{{FileBox|filename=/etc/portage/package.mask|title=Mask all packages in an overlay|lang=bash|1=
*/*::overlay-name
}}

Après cela, il ne vous reste plus qu'à démasquer les paquets que vous voulez installer.

{{FileBox|filename=/etc/portage/package.unmask|title=Unmask a specific package in an overlay|lang=bash|1=
foo/bar::overlay-name
}}

De cette manière rien d'étrange ne se produira lors des mises à jour. De plus cela est plus sûr que de définir des priorités.

== Cache des méta-données ==

=== Génération du cache ===

Lorsque de grands arbres alternatifs sont installés, Portage peut mettre un temps très long pour réaliser des opérations telles que la résolution des dépendances. Ceci est dû au fait, qu'en général, les arbres alternatifs ne possèdent pas de cache des méta-données.

Generate a local metadata cache by running <tt>emerge --regen</tt> after syncing the overlays:

{{RootCmd|layman -S
|emerge --regen}}

Be careful, because <tt>emerge --regen</tt> takes a lot of time and it's not recommended for rsync users as rsync updates the cache using server-side caches (most of users of portage are rsync users). Rsync users should simply run <tt>emerge --sync</tt> (or <tt>eix-sync</tt>) to regenerate the cache. It's probably only users of very large overlays should try <tt>emerge --regen</tt>.

=== Intégration dans eix ===

==== eix-sync ====

eix-sync peut exécuter  <code>emerge --regen</code> après synchronisation de vos arbres alternatifs et et de l'arbre de portage.

{{FileBox|filename=/etc/eix-sync.conf||lang=bash|1=
# Sync all overlays
*
# Regenerate overlay metadata
@emerge --regen {{!}}{{!}} true
}}

==== eix-update ====

eix-update can utilize the metadata cache generated by <tt>emerge --regen</tt> for a speedup and better accuracy. To enable this, set the <code>OVERLAY_CACHE_METHOD</code> to <code>assign</code> in {{Path|/etc/eixrc/01-cache}}.

{{FileBox|filename=/etc/eixrc/01-cache|title=Setting OVERLAY_CACHE_METHOD|lang=bash|1=
OVERLAY_CACHE_METHOD="assign"
}}


[[Category:Portage]]
