<languages />
'''Un arbre alternatif (parfois appelé ''surcouche'') est un dépôt additionnel que Portage prend en compte lorsqu'il s'occupe des logiciels'''.

Au cœur de Gentoo, les utilisateurs disposent déjà d'un dépôt des paquets ''principal'', appelé ''arbre de Portage''. Ce dépôt principal contient tous les paquets logiciels (encore nommés [[Ebuild|ebuilds]]) qui sont maintenus par les développeurs de Gentoo. Les utilisateurs peuvent cependant disposer de dépôts qui, en s'y ajoutant,  constitue une alternative  à l'arbre de Portage d'où leur nom d'arbres alternatifs.

Comme les dépôts de paquets ne sont rien de plus (ou de moins) que des jeux de fichiers (ebuilds, fichiers de méta-données, entrées de journaux de modifications -changelogs-, etc...), ces dépôts peuvent être tirés de dépôts publics(git, cvs, svn...) ou téléchargés en tant qu'archives tar et désarchivés à la main sur le système. Il est cependant recommandé d'utiliser des dépôts gérés par des tiers '' de confiance'' car tout arbre alternatif installé sera analysé par Portage au moment de décider quel logiciel installer.

== Traitement des arbres alternatifs ==

Portage utilise la variable <code>PORTDIR_OVERLAY</code>  pour établir un lien avec les arbres alternatifs installés sur le système. Cette variable utilise une liste de chemins sur le système, séparés par une espace, où Portage peut trouver la racine de ces dépôts additionnels.

=== Définir l'emplacement des arbres alternatifs à la main ===

Lorsque vous voulez créer vous-même un arbre alternatif, créez un emplacement (par exemple {{Path|/home/user/overlay}}) dans lequel vous placerez les paquets dans lesquels vous voulez que Portage regarde en plus de l'arbre de Portage lui-même. Ensuite, ajoutez <code>PORTDIR_OVERLAY="/home/user/overlay"</code> à votre fichier {{Path|/etc/portage/make.conf}} :

{{File|/etc/portage/make.conf|Ajout manuel d'un arbre alternatif|<pre>
PORTDIR_OVERLAY="/home/user/overlay"
</pre>}}

=== Utilisation de  crossdev ===

[[crossdev]] placera automatiquement les ebuilds/categories qu'il génère dans le premier arbre alternatif trouvé dans <code>PORTDIR_OVERLAY</code>. Vous voudrez peut-être empêcher [[crossdev]] de perturber les arbres alternatifs de  [[layman]] out votre arbre alternatif personnel par machine (créé normalement dans {{Path|/usr/local/portage}}). Vous pouvez créer un arbre alternatif spécifiquement réservé à [[crossdev]]:

{{RootCmd|mkdir -p /usr/local/portage-crossdev/profiles
|echo local-crossdev > /usr/local/portage-crossdev/profiles/repo_name}}

Vous pouvez ensuite demander à Portage et à crossdev d'utiliser cet arbre alternatif :

{{File|/etc/portage/make.conf|Laisser crossdev ranger ses  ebuild  dans local-crossdev et indiquer que l'arbre alternatif local devrait écraser tout autre arbre alternatif|<pre>
source /var/lib/layman/make.conf
PORTDIR_OVERLAY="/usr/local/portage-crossdev ${PORTDIR_OVERLAY} /usr/local/portage"
</pre>}}

{{File|/etc/portage/make.conf|Empêche  crossdev de se mélanger avec votre arbre alternatif local quand layman n'est pas utilisé|<pre>
PORTDIR_OVERLAY="/usr/local/portage-crossdev /usr/local/portage"
</pre>}}

=== Utilisation de layman ===

Pour faciliter la gestions d'arbres alternatifs multiples, un outil appelé [[Layman|layman]] a été développé. Cet outil est informé des arbres alternatifs populaires gérés par des utilisateurs et des développeurs et est capable de les installer et de les synchroniser tout autant que de les ajouter aux emplacement déclarés dans  <code>PORTDIR_OVERLAY</code>.

=== Arbre alternatif local ===

Pour savoir comment mettre en place et configurer un arbre alternatif local, reportez-vous à [[Overlay/Local_overlay]].

=== Priorités des arbres alternatifs ===

Chacun des arbres alternatifs dispose d'une priorité unique. Ceci fait que, dans le cas où une version spécifique serait trouvée dans plusieurs arbres alternatifs, la résolutions est non ambigüe. Les ''ebuilds'' des arbres alternatifs à la plus haute priorité sont prioritaires par rapport à ceux trouvés dans des arbres de priorité moindre.

{{Note| Cette manière  "naturelle" de gérer les priorités a été introduite en janvier 2011. Avant cette date, la résolution des priorités se faisait dans l'ordre inverse, c'est pourquoi des nombre négatifs correspondaient à des priorités plus élevées.}}

La commande suivante fournit la liste des arbres alternatifs avec leur priorité :

{{Cmd|emerge --info --verbose}}

Sauf si la variable  <code>PORTDIR_OVERLAY</code> a été modifiée de la manière décrite [[#Setting overlay priorities|plus bas]], l'arbre de Portage par défaut a une priorité de  -1000. Ceci signifie que tous les autres arbres alternatifs sont prioritaires par rapport à lui. Il s'agit du comportement par défaut, parce que les arbres alternatifs sont conçus, pour se situer au dessus de l'arbre de Portage.

==== Définir la priorité des arbres alternatifs ====

La priorité des arbres alternatifs est calculée d'après leur ordre d'apparition dans la variable <code>PORTDIR_OVERLAY</code>. Portage balaye cette variable de gauche à droite et incrémente la priorité en chemin. L'entrée la plus à gauche commence avec une priorité de 1, la suivante a une priorité de 2 et ainsi de suite.

{{Note|Il y a quelque temps, la priorité des arbres alternatifs pouvait être définie dans  {{Path|/etc/portage/repos.conf}}. Ceci n'a plus cours.}}

Sauf si  <code>PORTDIR_OVERLAY</code> contient une entrée pour l'arbre de Portage, l'arbre de Portage se voit toujours assigner une priorité de  -1000.
On peut facilement changer cela en plaçant  <code>PORTDIR</code> dans la variable <code>PORTDIR_OVERLAY</code>:

{{File|/etc/portage/make.conf|Fixer la priorité de l'arbre de Portage à la main|<pre>
PORTDIR_OVERLAY="/home/user/overlay ${PORTDIR}"
</pre>}}

In the example above the user overlay will be assigned a priority of 1 and the portage tree will be assigned a priority of 2. 

{{Note|If you also use [[Layman|layman]] to manage your overlays, you may be interested in the article about [[Layman#Setting overlay priorities with layman|setting overlay priorities with layman]].}}

=== Using unsafe overlays ===

When using huge overlays or those with unknown/low quality it is best practice to hardmask the whole overlay.

{{File|/etc/portage/package.mask|Mask all packages in an overlay|<pre>
*/*::overlay-name
</pre>}}

After that you can unmask the packages you specifically want to emerge.

{{File|/etc/portage/package.unmask|Unmask a specific package in an overlay|<pre>
foo/bar::overlay-name
</pre>}}

This way nothing weird will happen on updates and it is safer than using priorities.

== Metadata cache ==

=== Cache generation ===

When large overlays are installed, portage may take a long time to perform operations like dependency resolution. This is because overlays do not usually contain a metadata cache.

You may generate a local metadata cache by running <code>emerge --regen</code> after syncing your overlays.

{{RootCmd|layman -S
|emerge --regen}}

=== eix integration ===

==== eix-sync ====

eix-sync can run <code>emerge --regen</code> after syncing your overlays and portage tree.

{{File|/etc/eix-sync.conf||<pre>
# Sync all overlays
*
  
# Regenerate overlay metadata
@emerge --regen || true
</pre>}}

==== eix-update ====

eix-update can utilize the metadata cache generated by <code>emerge --regen</code> for a speedup and better accuracy. To enable this, set the <code>OVERLAY_CACHE_METHOD</code> to "<code>assign</code>" in {{Path|/etc/eixrc/01-cache}}.

{{File|/etc/eixrc/01-cache|Setting OVERLAY_CACHE_METHOD|<pre>
OVERLAY_CACHE_METHOD="assign"
</pre>}}


[[Category:Portage]]
