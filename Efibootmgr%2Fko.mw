<languages/>
{{InfoBox stack
|{{InfoBox github|rhinstaller/efibootmgr|header=true}}
}}

{{Metadata|abstract=efibootmgr 프로그램은 시스템의 UEFI 펌웨어와 함께 동작하며, 리눅스(또는 다른 운영체제)를 부팅할 수 있게 하는 부팅 항목을 만들고 관리하려 EFI 설정을 다루는 잘 알려진 도구입니다.}}

<tt>efibootmgr</tt> 프로그램은 시스템의 UEFI 펌웨어와 함께 동작하며, 리눅스(또는 다른 운영체제)를 부팅할 수 있게 하는 부팅 항목을 만들고 관리하려 EFI 설정을 다루는 잘 알려진 도구입니다.

The {{Package|sys-boot/efibootmgr}} application is '''''not''''' a bootloader. It is a tool that interacts with the EFI firmware of the system, which itself is acting as a bootloader. Using {{c|efibootmgr}} boot entries can be created, reshuffled, edited, and removed.

== 설정 ==

=== Kernel ===

In order to boot directly from UEFI, the kernel needs to have <var>CONFIG_EFI</var>, <var>CONFIG_EFI_STUB</var>, and <var>CONFIG_EFI_VARS</var> support enabled:

{{KernelBox|title=Enable EFI stub support|1=
Processor type and features  --->
    [*] EFI runtime service support 
    [*]   EFI stub support
Firmware Drivers  --->
   EFI (Extensible Firmware Interface) Support  --->
       <*> EFI Variable Support via sysfs
}}

=== Emerge ===

{{Package|sys-boot/efibootmgr}} 프로그램은 어떤 설정도 필요하지 않습니다. 단지 설치하기만 하면 끝납니다.

{{Emerge|sys-boot/efibootmgr}}

== Configuration ==

=== EFI vars ===

그러나 <tt>efibootmgr</tt> 프로그램을 제대로 사용하려면 EFI 변수에서 파일 시스템에 접근할 수 있어야 합니다. 이게 가능하려면 시스템을 (BIOS가 아닌)EFI로 부팅해야 하며, 그렇지 않으면 EFI 변수 자체를 건드릴 수 없습니다.

When the system is in EFI mode, run the following command to check for the existence of efivarfs:

{{RootCmd|mount {{!}} grep efivars|output=<pre>
efivarfs on /sys/firmware/efi/efivars type efivarfs (rw,nosuid,nodev,noexec,relatime)
</pre>}}

아직 마운트하지 않았다면({{Path|sysfs}} 초기화 스크립트를 통해 마운드해야함), 다음과 같이 직접 마운트할 수 있습니다:

{{RootCmd|mount -t efivars efivars /sys/firmware/efi/efivars}}

== EFI 부팅 항목 관리 ==

=== 부팅 항목 살펴보기 ===

현재 부팅 항목을 살펴보려면, {{c|efibootmgr}} 명령을 사용하십시오. 추가 정보를 살펴보려면 <code>--verbose (-v)</code> 옵션을 사용하십시오:

{{RootCmd|efibootmgr -v|output=<pre>
BootCurrent: 0002
Timeout: 3 seconds
BootOrder: 0003,0003,0002,0000,0004
Boot0000* CD/DVD Drive  BIOS(3,0,00)
Boot0001* Hard Drive    BIOS(2,0,00)
Boot0002* Gentoo        HD(1,800,61800,6d98f360-cb3e-4727-8fed-5ce0c040365d)File(\EFI\boot\bootx64.efi)
Boot0003* Hard Drive    BIOS(2,0,00)P0: ST1500DM003-9YN16G
</pre>}}

=== 부팅 항목 만들기 ===

부팅 항목을 만들려면 <tt>efibootmgr</tt>에 전달할 매개 변수가 몇가지 있습니다:

* <code>--create (-c)</code> 로 새 항목을 만듭니다.
* <code>--part (-p)</code> 다음에 EFI 시스템 파티션을 제공할 파티션 번호를 붙입니다
* <code>--disk (-d)</code> 다음에 EFI 시스템 파티션을 제공할 디스크 장치를 언급합니다
* <code>--label (-L)</code> 다음에 부팅 항목에서 사용할 레이블을 붙입니다
* <code>--loader (-l)</code> 다음에 부팅할 EFI 이미지 경로를 붙입니다

{{Important|부팅할 EFI 이미지 경로 구분시 {{Key|/}}(슬래시)가 아닌 {{Key|\}}(역슬래시) 를 사용''해야''합니다.}}

예를 들자면:

{{RootCmd|efibootmgr -c -d /dev/sda -p 2 -L "Gentoo" -l "\efi\boot\bootx64.efi"}}

=== 부팅 항목 삭제 ===

항목을 삭제하기 전에 항목의 ID를 우선 확인하십시오.

아래에서 나타난 바와 같이 젠투 항목을 삭제(''Boot0002''가 식별자였음), {{c|efibootmgr}}에게 <code>--bootnum (-b)</code> 매개변수와 식별 번호를, 항목을 삭제하는 <code>--delete-bootnum (-B)</code> 매개 변수로, 2번 ID를 지닌 항목을 삭제하라고 요청하십시오.

{{RootCmd|efibootmgr -b 2 -B}}

== Removal ==

=== Unmerge ===

{{Unmerge|sys-boot/efibootmgr}}

== 추가 참조 ==

* [[EFI_stub_kernel|EFI stub kernel]] explains how to configure the Linux kernel to be able to be booted from EFI directly
* [[Handbook:AMD64/Installation/Bootloader#Alternative:_Using_efibootmgr|Alternative: Using efibootmgr]] in the Gentoo Handbook
