<languages />
<translate>

<!--T:67-->
{{Metadata|abstract=The Apache HTTP Server is an efficient, extensible web server. It is one of the most popular web servers used on the Internet.}}

<!--T:1-->
{{InfoBox stack
|{{InfoBox homepage|https://httpd.apache.org|header=true}}
|{{InfoBox wikipedia|Apache_HTTP_Server}}
|{{InfoBox github|apache/httpd}}
|{{InfoBox project|Apache}}
}}

<!--T:2-->
The '''Apache HTTP Server''' is [[Article description::an efficient, extensible [[:Category:Web Servers|web server]]. It is one of the most popular web servers used the Internet.]]

== Installation == <!--T:3-->

<!--T:4-->
{{Note|When updating between Apache versions, check the [[Project:Apache/Upgrading|Upgrade guide]].}}

=== USE flags === <!--T:6-->

<!--T:7-->
{{USEflag|package=www-servers/apache}}

=== Emerge === <!--T:111-->

==== Multi-Processing Module ==== <!--T:169-->

<!--T:170-->
If you want to use the Apache event or worker MPM, enable the Apache threads USE flag:
{{FileBox|filename=/etc/portage/package.use|title=Apache threads support|lang=bash|1=
www-servers/apache threads
}}

<!--T:162-->
If you want to use the Apache event MPM, then add the following to make.conf:
{{FileBox|filename=/etc/portage/make.conf|title=Apache event MPM|lang=bash|1=
APACHE2_MPMS="event"
}}

<!--T:163-->
If you want to use the Apache worker MPM, then add the following to make.conf:
{{FileBox|filename=/etc/portage/make.conf|title=Apache worker MPM|lang=bash|1=
APACHE2_MPMS="worker"
}}

<!--T:171-->
If no Multi-Processing Module (MPM) is selected, the default MPM is used.
The default MPM depends on platform capabilities (like threads support),
read more in the 
[https://httpd.apache.org/docs/current/en/mpm.html#defaults official Apache docs].


<!--T:165-->
Then ''emerge'' Apache:
{{Emerge|{{Package|www-servers/apache}}}}

=== Global support === <!--T:8-->

<!--T:113-->
Enabling the <code>apache2</code> global USE flag provides support for Apache in other packages. This may cause {{Package|www-servers/apache}} to be installed automatically if a package depending on Apache has been emerged.
 		 
{{FileBox|filename=/etc/portage/make.conf|title=Adding Apache to system USE flags|lang=bash|1=
USE="apache2"
}}

<!--T:10-->
After configuring USE variables, update the system so the changes take effect:

<!--T:11-->
{{Emerge|params+=--changed-use --deep|@world}}

== Configuration == <!--T:25-->

=== Files === <!--T:26-->

<!--T:27-->
There are two main files that configure Apache2's behavior on the system: 

<!--T:28-->
* Gentoo's Apache2 init script configuration file {{Path|/etc/conf.d/apache2}}

<!--T:29-->
* Apache2 server's conventional configuration file {{Path|/etc/apache2/httpd.conf}}

==== {{Path|/etc/conf.d/apache2}} ==== <!--T:30-->

<!--T:114-->
The {{Path|apache2}} file located in {{Path|/etc/conf.d}} is Gentoo's init script configuration file. The only active line in this file is the <var>APACHE2_OPTS</var> variable line:

<!--T:32-->
{{FileBox|filename=/etc/conf.d/apache2|lang=bash|1=
APACHE2_OPTS="-D DEFAULT_VHOST -D INFO -D SSL -D SSL_DEFAULT_VHOST -D LANGUAGE"
}}

<!--T:33-->
This line defines options that will be interpreted by the various configuration files using the <code><IfDefine option-name></code> statement to activate or deactivate some part of the whole configuration. This will be returned to later in the article.

==== {{Path|/etc/apache2/httpd.conf}} ==== <!--T:34-->

<!--T:115-->
The {{Path|httpd.conf}} file is Apache server's conventional configuration file. In fact this file is only an '''entry point''' for configuration. The whole configuration is split in many files in the {{Path|/etc/apache2/}} directory, that are assembled together using the <code>Include</code> directive. For example, the statement <code>Include /etc/apache2/modules.d/*.conf</code>, in {{Path|httpd.conf}}, aims at including all the files in {{Path|/etc/apache2/modules.d/}} which name ends with {{Path|.conf}}. 

<!--T:36-->
Taking into account what has been said in the subsection above, and as module configuration files (files in {{Path|/etc/apache2/modules.d}}) almost always start with the <code><IfDefine module-name></code>, the content of one file inside {{Path|/ect/apache2/modules.d}}, will ONLY be assembled with the rest of the configuration, if the matching option is set using a <code>-D module-name</code> flag in the <var>APACHE2_OPTS</var> variable in the {{Path|/etc/conf.d/apache2 }} file. The {{Path|00_default_settings.conf}} configuration file is an exception to this rule as it doesn't start with an <code>IfDefine</code> statement and therefore is always included in the resulting configuration.

=== Defaults === <!--T:37-->

<!--T:38-->
After a fresh install of an Apache server, the configuration resulting from the assemblage of the different configuration files is as follows. Start with the entry point {{Path|/etc/apache2/httpd.conf}}.

<!--T:39-->
{{Warning| This is ''only'' given for quick reference and to give an overall view. Users are strongly invited to review the comments included in the various files to understand the ins and out of the configuration. Please also refer to the Apache manual for an in depth understanding of Apache configuration.}}

<!--T:40-->
{{FileBox|filename=/etc/apache2/httpd.conf|lang=apache|1=
ServerRoot "/usr/lib64/apache2"
  
#Module loaded unconditionally, assuming the USE flag is no unset in
# /etc/portage/make.conf or in /etc/portage/package.use
LoadModule actions_modulemodules/mod_actions.so
...
#other modules loaded that way : alias_module, auth_basic_module, authn_alias_module,
# authn_anon_module, authn_dbm_module, authn_default_module, authn_file_module, 
# authz_dbm_module, authz_default_module, authz_groupfile_module, authz_host_module, 
# authz_owner_module, authz_user_module, autoindex_module,  cgi_module,  cgid_module, 
# deflate_module, dir_module, env_module, expires_module, ext_filter_module, filter_module,
#  headers_module, include_module,  log_config_module, logio_module, mime_module,  
# mime_magic_module, negotiation_module, rewrite_module, setenvif_module, 
# speling_module,ssl_module, status_module, unique_id_module, usertrack_module, host_alias_module
  
  
#Modules loaded conditionally, assuming matching USE flag is not unset in
# /etc/portage/make.conf or in /etc/portage/package.use (flag to be set in )
<IfDefine AUTHNZ_LDAP>
LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
</IfDefine>
#other modules loaded that way : cache_module, dav_module, dav_fs_module,
# dav_lock_module,disk_cache_module,  file_cache_module, info_module, ldap_module,
# mem_cache_module, userdir_module
  
  
User apache
Group apache
  
# Supplemental configuration
#**************************************************************************************vvv
#this part is included via Include /etc/apache2/modules.d/*.conf 
  
#included from /etc/apache2/modules.d/00_default_settings.conf-------------v
#this is always included as there is not option to deactivate it.
Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 15
UseCanonicalName Off
AccessFileName .htaccess
ServerTokens Prod
TraceEnable off
ServerSignature On 
HostnameLookups Off
EnableMMAP On
EnableSendfile On
FileEtag INode MTime Size
ContentDigest Off
ErrorLog /var/log/apache2/error_log
LogLevel warn
  
<Directory />
	Options FollowSymLinks
	AllowOverride None
	Require all denied
</Directory>
  
<IfModule dir_module>
	DirectoryIndex index.html index.html.var
</IfModule>
<FilesMatch "^\.ht">
	Require all denied
</FilesMatch>
#--------------------------------------------------------------------------^
  
#included from 00_mod_info.conf--------------------------------------------v
<IfDefine INFO>
<Location /server-info>
	SetHandler server-info
	Require host 127.0.0.1
</Location>
</IfDefine>
#--------------------------------------------------------------------------^
  
#--------------------------------------------------------------------------v
#included from 00_languages.conf
# Settings for hosting different languages.
<IfDefine LANGUAGE>
  
	AddLanguage ca .ca
	...
	AddLanguage zh-TW .zh-tw
  
	LanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn no pl pt pt-BR ru sv zh-CN zh-TW
  
	ForceLanguagePriority Prefer Fallback
  
	AddCharset us-ascii.ascii	.us-ascii
	AddCharset <nowiki>ISO-8859-1		.iso8859-1 .latin1</nowiki>
	...
	AddCharset shift_jis		.shift_jis .sjis
</IfDefine>
#---------------------------------------------------------------------------^
#**************************************************************************************^^^
  
  
#***************************************************************************************vvv
#this part is included via Include /etc/apache2/vhosts.d/*.conf 
#from 00_default_ssl_vhost.conf-----------------------------------------------------vv
<IfDefine SSL>
	<IfDefine SSL_DEFAULT_VHOST>
		<IfModule ssl_module>
			Listen 443
  
			<VirtualHost _default_:443>
				ServerName localhost
                                #------------------------------------------v
				# this part is included via Include /etc/apache2/vhosts.d/default_vhost.include
				ServerAdmin root@localhost
				DocumentRoot "/var/www/localhost/htdocs"
  
  	
				<Directory "/var/www/localhost/htdocs">
	   				Options Indexes FollowSymLinks
	   				AllowOverride All
	   				Require all granted
				</Directory>
  
				<IfModule alias_module>
	   				ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
				</IfModule>
  
				<Directory "/var/www/localhost/cgi-bin">
	   				AllowOverride None
	   				Options None
	   				Require all granted
				</Directory>
        			#end of Include ---------------------------^
  	
				ErrorLog /var/log/apache2/ssl_error_log
  
				<IfModule log_config_module>
					TransferLog /var/log/apache2/ssl_access_log
				</IfModule>
				SSLEngine on
				SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
				SSLCertificateFile /etc/ssl/apache2/server.crt
				SSLCertificateKeyFile /etc/ssl/apache2/server.key
  
				<FilesMatch "\.(cgi{{!}}shtml{{!}}phtml{{!}}php)$">
					SSLOptions +StdEnvVars
				</FilesMatch>
  
				<Directory "/var/www/localhost/cgi-bin">
					SSLOptions +StdEnvVars
				</Directory>
  
				<IfModule setenvif_module>
					BrowserMatch ".*MSIE.*" \
					nokeepalive ssl-unclean-shutdown \
					downgrade-1.0 force-response-1.0
				</IfModule>
  
  
				<IfModule log_config_module>
					CustomLog /var/log/apache2/ssl_request_log \
					"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
					</IfModule>
			</VirtualHost>
		</IfModule>
	</IfDefine>
</IfDefine>
#---------------------------------------------------------------------------------^^
#from 00_default_vhost.conf-------------------------------------------------------vv
<IfDefine DEFAULT_VHOST>
	Listen 80
	NameVirtualHost *:80
  
	<VirtualHost *:80>
		ServerName localhost
  
		#---------------------------------------------------------------v
		# this part is included via Include /etc/apache2/vhosts.d/default_vhost.include
		ServerAdmin root@localhost
		DocumentRoot "/var/www/localhost/htdocs"
  
  	
		<Directory "/var/www/localhost/htdocs">
	   		Options Indexes FollowSymLinks
	   		AllowOverride All
	   		Require all granted
		</Directory>
  
		<IfModule alias_module>
	   		ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
		</IfModule>
  
		<Directory "/var/www/localhost/cgi-bin">
	   		AllowOverride None
	   		Options None
	   		Require all granted
		</Directory>
        	#end of Include -----------------------------------------------^
  
		<IfModule mpm_peruser_module>
			ServerEnvironment apache apache
		</IfModule>
	</VirtualHost>
</IfDefine>
#-----------------------------------------------------------------------------------^^
# end of include ****************************************************************************************^^^
}}

=== First sign of life === <!--T:41-->

<!--T:42-->
As visible in the initial configuration above, the pre-installed virtual host's <code>DocumentRoot</code>  directory is {{Path|/var/www/localhost/htdocs}}, its server name is ''localhost''. In addition an index.html file is provided in the <code>DocumentRoot</code> directory, thus to check whether everything is correctly installed or not, point a browser to [http://localhost/ http://localhost/].

<!--T:43-->
An "It works!" message should be printed on the page.

<!--T:101-->
{{Warning|Out of the box, [[Firefox]] has a feature designed to help users who mis-typing URLs in the browser bar. If a URL fails to resolve, Firefox tries a couple of alterations of the URL to try find what the user 'might have' really intended, appending a <code>.com</code> or prefixing a <code>www.</code> to the host name portion of the URL to see if they resolve.
 
This feature, which was introduced in the early versions of Firefox, is somewhat annoying for developers. The feature means that when a server running on localhost fails to respond, Firefox decides to try <code>localhost.com</code> or <code>www.localhost.com</code>. This often resolves to a not found page.
 
To disable this feature:
 
# Enter <code>about:config</code> in the browser bar
# Click "I'll be careful" and enter the special configuration page
# Enter <code>browser.fixup.alternate.enabled</code> in the search box that appears
# Right click on the <code>browser.fixup.alternate.enabled</code> that appears in the filtered list below and choose toggle to set the value to false.
}}

=== Enabling mod_security === <!--T:44-->

<!--T:153-->
Install {{Package|www-apache/mod_security}}:

<!--T:45-->
{{Emerge|www-apache/mod_security}}

<!--T:154-->
Enable the <code>SECURITY</code> module in the {{Path|apache2}} file's <var>APACHE2_OPTS</var> variable:

<!--T:46-->
{{FileBox|filename=/etc/conf.d/apache2|title=Enabling the security module|lang=bash|1=
APACHE2_OPTS="... -D SECURITY"
}}

<!--T:47-->
Control this module by editing {{Path|/etc/apache2/modules.d/79_modsecurity.conf}} and {{Path|/etc/apache2/modules.d/80_modsecurity-crs.conf}} files. The file {{Path|/usr/share/doc/mod_security-2.9.1-r1/modsecurity.conf-recommended.bz2}} contains the recommended configuration https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#A_Recommended_Base_Configuration. Copy the basic configuration to the {{Path|/etc/apache2/modules.d/79_modsecurity.conf}} and tweak the settings according to your needs. Unpack the file {{Path|/usr/share/doc/modsecurity-crs-3.0.2/crs-setup.conf.example.bz2}} to a suitable location, e.g. {{Path|/etc/conf.d/crs-setup.conf}}, tweak it, and include the unpacked file in {{Path|/etc/apache2/modules.d/80_modsecurity-crs.conf}}. Finally, restart Apache. Look for the errors in the Apache log files of your sites and act accordingly.

=== Enabling PHP support === <!--T:48-->

<!--T:49-->
Install [[PHP]] with the <code>apache2</code> USE flag and enable the module:

<!--T:168-->
{{Important|1=With >=[https://packages.gentoo.org/packages/app-eselect/eselect-php app-eselect/eselect-php-0.8.1], the <var>APACHE2_OPTS</var> variable changed to <code>-D PHP</code> instead of <code>-D PHP5</code>. This allows for future major versions to flow smoothly.  As of eselect-php-0.9.4-r5, the compatibility shim was dropped after allowing 2 years to convert.}}

<!--T:50-->
{{FileBox|filename=/etc/conf.d/apache2|title=Enabling the PHP module|lang=bash|1=
APACHE2_OPTS="... -D PHP"
}}

<!--T:98-->
Before testing if the PHP module works, check that the file {{Path|/etc/apache2/modules.d/70_mod_php.conf}} exists and contains the following definition:

<!--T:99-->
{{FileBox|filename=/etc/apache2/modules.d/70_mod_php.conf|title=Verifying the PHP module will be loaded|lang=apache|1=
<IfDefine PHP>
	# The mod_php.so symlink is controlled by
	# eselect-php. However, the module name changed from
	# php5_module to php7_module so we can't blindly load whatever
	# is there. Instead we let eselect-php manage a small
	# configuration file that loads the appropriate module.
	#
	# This is relative to ServerRoot (see httpd.conf).
	Include ../../../var/lib/eselect-php/mod_php.conf
 
	# Tell apache that mod_php should handle PHP files.
	#
	# NOTE: Avoiding AddHandler/AddType for security (bug
	# #538822). Please read the related news item!
	<FilesMatch "\.(php{{!}}php[57]{{!}}phtml)$">
		SetHandler application/x-httpd-php
	</FilesMatch>
 
	# PHP source files which are meant to be displayed as
	# syntax-highlighted source code.
	<FilesMatch "\.phps$">
		SetHandler application/x-httpd-php-source
	</FilesMatch>
 
	DirectoryIndex index.php index.phtml
</IfDefine>
}}

<!--T:100-->
If it does not exist create it.

<!--T:51-->
To verify the PHP module works, create a test page:

<!--T:52-->
{{FileBox|filename=/var/www/localhost/htdocs/index.php|title=PHP test page|lang=php|1=
<html>
 <body>
  <?php phpinfo(); ?>
 </body>
</html>
}}

<!--T:53-->
Now, suppress or rename {{Path|/var/www/localhost/htdocs/index.html}} and open the test page: <code>http://localhost/</code>

<!--T:116-->
A table describing the PHP settings should be visible.

==== Modify PHP versions ==== <!--T:155--> 

<!--T:156-->
To change the version of PHP handled by Apache, first list the available versions for the <code>apache2</code> Server Application Programming Interface (SAPI):

<!--T:157-->
{{RootCmd|eselect php list apache2|output=<pre>
 [1]   php5.3
 [2]   php5.4 *
 [3]   php5.5
</pre>}}

<!--T:158-->
Change it to the version of choice:

<!--T:159-->
{{RootCmd|eselect php set apache2 N}}

<!--T:160-->
Substitute <code>N</code> in the example above to the requested number in the output of {{c|eselect php list apache2}} as displayed earlier on.

=== Virtual hosts === <!--T:54-->

<!--T:78-->
For each virtual host, provide a <code>DocumentRoot</code> directory that is reachable and accessible by the Apache daemon. Add a virtual host configuration file ({{Path|VirtualHost.conf}}) in the {{Path|/etc/apache2/vhosts.d}} directory which uses this <code>DocumentRoot</code> and the virtual host server name. Do not forget to add an entry for this domain name in {{Path|/etc/hosts}}.

<!--T:79-->
To assign the apache user/group ownership on the virtual host files, use {{c|chown}} like in the following example:

<!--T:80-->
{{RootCmd|chown apache:apache /var/www/sitename}}

<!--T:81-->
Below are two example virtual host definitions, one for domainname1.com and one for domainname2.com. Notice the different <code>DocumentRoot</code> and <code>ServerName</code> directives even though the host itself (<code>*:80</code>) remains the same:

<!--T:82-->
{{CodeBox|title=Example virtual host definitions|lang=apache|1=
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website1
    ServerName domainname1.com
</VirtualHost>
  
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website2
    ServerName domainname2.com
</VirtualHost>
}}

<!--T:83-->
It is recommended to provide an IP based virtual host definition as well. This allows the administrator to put up a message for users that try to reach a site through its IP address:

<!--T:84-->
{{CodeBox|title=IP-based virtual host|lang=apache|1=
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/html
    ServerName xxx.xxx.xxx.xxx
</VirtualHost>
}}

<!--T:85-->
After inserting virtual hosts, the server needs to be (gracefully) restarted for the new sites to become active.

=== Enabling PHP through fcgid === <!--T:86-->

<!--T:87-->
Install {{Package|www-apache/mod_fcgid}} and {{Package|dev-lang/php}}. The PHP package requires <code>cgi</code> to be set as a USE flag:

<!--T:88-->
{{Emerge|www-apache/mod_fcgid dev-lang/php}}

<!--T:89-->
Edit the {{Path|mod_fcgid.conf}} file:

<!--T:90-->
{{FileBox|filename=/etc/apache2/modules.d/20_mod_fcgid.conf|lang=apache|1=
<IfDefine FCGID>
LoadModule fcgid_module modules/mod_fcgid.so
SocketPath /var/run/fcgidsock
SharememPath /var/run/fcgid_shm
  
AddHandler php-fcgid .php
AddType application/x-httpd-php .php
Action php-fcgid /fcgid-bin/php-fcgid-wrapper
# max request 128mb
FcgidMaxRequestLen 134217728
<Location /fcgid-bin/>
        SetHandler fcgid-script
        Options +ExecCGI
</Location>
</IfDefine>
}}

<!--T:91-->
Create the needed directory: 

<!--T:92-->
{{RootCmd|mkdir /var/www/localhost/htdocs/fcgid-bin}}

<!--T:93-->
Symlink it for the PHP wrapper:

<!--T:94-->
{{RootCmd|ln -s /usr/bin/php-cgi /var/www/localhost/htdocs/fcgid-bin/php-fcgid-wrapper}}

<!--T:95-->
Enable the <code>FCGID</code> module:

<!--T:96-->
{{FileBox|filename=/etc/conf.d/apache2|title=Enabling the fcgid module|lang=bash|1=
APACHE2_OPTS="... -D FCGID"
}}

<!--T:97-->
Finally restart Apache and check the <code>phpinfo()</code> site created earlier. The value of <code>Server API</code> should be ''CGI/FastCGI''

=== Enabling PHP-FPM through mod_proxy_fcgi in Apache 2.4 === <!--T:102-->

<!--T:103-->
The following pre-requisites must be satisfied to enable PHP-FPM through mod_proxy_fcgi:
* >= PHP 5.3
* >= Apache 2.4

<!--T:166-->
Furthermore, there are a few restrictions on the availability of functionality within Apache 2.4:
* >= Apache 2.4.9, if you want to [https://wiki.apache.org/httpd/PHP-FPM#Performance_and_Pitfalls communicate with PHP-FPM over UNIX sockets]
* >= Apache 2.4.10, if you want to use [https://github.com/php/php-src/pull/694 SetHandler] instead of [https://wiki.apache.org/httpd/PHP-FPM#Example ProxyPassMatch].

<!--T:104-->
The following configuration will only work with Apache 2.4.10 and newer. It relies on the <code>FilesMatch</code> directive and be placed within the main server config or <code>VirtualHosts</code>.  The location of the UNIX socket is determined by the <code>listen</code> directive in the {{Path|php-fpm.conf}} configuration file, allowing for specifying separate pools per site or function.

<!--T:105-->
In the following example, <code>FilesMatch</code> is placed within the PHP module config file of Apache:

<!--T:106-->
{{FileBox|filename=/etc/apache2/modules.d/70_mod_php.conf|title=Using PHP-FPM (recommended for Apache 2.4.10 and newer)|lang=apache|1=
 <IfDefine PHP>
        <FilesMatch "\.php$">
                SetHandler "proxy:unix:/var/run/php-fpm/www.sock{{!}}fcgi://localhost"
        </FilesMatch>
  
	# Set it to handle the files
	<IfModule mod_mime.c>
		AddHandler application/x-httpd-php .php .php5 .phtml
		AddHandler application/x-httpd-php-source .phps
	</IfModule>
  
	DirectoryIndex index.php index.phtml
 </IfDefine>
}}

<!--T:107-->
Or, you can use ProxPassMatch -- the only option if the Apache version is between 2.4.0 and 2.4.8, inclusive.

<!--T:167-->
{{FileBox|filename=/etc/apache2/modules.d/70_mod_php.conf|title=Using PHP-FPM (recommended for Apache 2.4.8 and older)|lang=apache|1=
 <IfDefine PHP>
        # Send all requested PHP files to PHP-FPM via fcgi://PHP_FPM_LISTEN_ADDRESS:PHP_FPM_LISTEN_PORT/DOCUMENT_ROOT/$1
        ProxyPassMatch ^/(.*\.php)$ fcgi://127.0.0.1:9000/var/www/localhost/htdocs/$1
  
	# Set it to handle the files
	<IfModule mod_mime.c>
		AddHandler application/x-httpd-php .php .php5 .phtml
		AddHandler application/x-httpd-php-source .phps
	</IfModule>
  
	DirectoryIndex index.php index.phtml
 </IfDefine>
}}

<!--T:117-->
By default the <code>listen</code> directive is not set to a socket. First create the directory for the socket file:

<!--T:118-->
{{RootCmd|mkdir /var/run/php-fpm}}

<!--T:119-->
Next, update the {{Path|php-fpm.conf}} file as follows:

<!--T:120-->
{{FileBox|filename=php-fpm.conf|title=Updating listen directive|lang=apache|1=
; Set permissions for unix socket, if one is used. In Linux, read/write
; permissions must be set in order to allow connections from a web server. Many
; BSD-derived systems allow connections regardless of permissions.
; Default Values: user and group are set as the running user
;                 mode is set to 0666
listen.owner = nobody
listen.group = nobody
;listen.mode = 0666
 
 ; The address on which to accept FastCGI requests.
 ; Valid syntaxes are:
 ;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific address on
 ;                            a specific port;
 ;   'port'                 - to listen on a TCP socket to all addresses on a
 ;                            specific port;
 ;   '/path/to/unix/socket' - to listen on a unix socket.
 ; Note: This value is mandatory.
 ;listen = 127.0.0.1:9000
listen = /var/run/php-fpm/www.sock
}}

<!--T:108-->
Then enable both the <code>PHP</code> and <code>PROXY</code> modules:

<!--T:109-->
{{FileBox|filename=/etc/conf.d/apache2|title=Enabling PHP and proxy modules|lang=bash|1=
APACHE2_OPTS="... -D PHP -D PROXY"
}}

== Usage == <!--T:121-->

=== Services === <!--T:122-->

==== OpenRC ==== <!--T:123-->

<!--T:124-->
Start the Apache server:

<!--T:125-->
{{RootCmd|/etc/init.d/apache2 start}}

<!--T:126-->
Add Apache to the default runlevel:

<!--T:127-->
{{RootCmd|rc-update add apache2 default}}

<!--T:128-->
Restart the Apache service:

<!--T:129-->
{{RootCmd|/etc/init.d/apache2 restart}}

<!--T:130-->
Reload Apache configuration files:

<!--T:131-->
{{RootCmd|/etc/init.d/apache2 reload}}

==== systemd ==== <!--T:132-->

<!--T:133-->
Start the Apache server:

<!--T:134-->
{{RootCmd|systemctl start apache2}}

<!--T:135-->
Add Apache to the default runlevel: 

<!--T:136-->
{{RootCmd|systemctl enable apache2}}

<!--T:137-->
Restart the Apache service: 

<!--T:138-->
{{RootCmd|systemctl restart apache2}}

== Troubleshooting == <!--T:57-->

=== Resources === <!--T:139-->

<!--T:140-->
The Apache server can be difficult to configure properly. Below are some resources that may be helpful when issues occur:

<!--T:58-->
* [[Project:Apache/Troubleshooting|Troubleshooting guide]]
* {{Bug|www-servers/apache|search=package}}

=== Testing === <!--T:141-->

<!--T:142-->
Verifying IP interfaces and ports on which Apache2 is running on and listening to:

<!--T:143-->
{{RootCmd|netstat -tulpen {{!}} grep apache|output=<pre>
tcp     0     0 0.0.0.0:80      0.0.0.0:*     LISTEN     0     10932720     4544/apache2        
tcp     0     0 0.0.0.0:443     0.0.0.0:*     LISTEN     0     10932716     4544/apache2        
</pre>}}

<!--T:144-->
Testing if a connection to a Apache server is working on localhost:

<!--T:145-->
{{Cmd|telnet localhost 80|output=<pre>
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
</pre>}}

<!--T:146-->
Interrupt the connection test with {{Key|Ctrl}}+{{Key|c}} and {{Key|Enter}}.

=== apr_sockaddr_info_get() failed for <System_Hostname> === <!--T:147-->

<!--T:148-->
'''Error:'''

<!--T:149-->
<pre>apache2: apr_sockaddr_info_get() failed for System_Hostname</pre>

<!--T:150-->
'''Resolution:'''

<!--T:151-->
When this occurs, add the host name to the {{Path|/etc/hosts}} file:

<!--T:152-->
{{FileBox|filename=/etc/hosts|title=Adding a Hostname for Apache|1=
127.0.0.1 localhost System_Hostname
}}

== See also == <!--T:63-->

<!--T:64-->
* {{See also|Lighttpd}}
* {{See also|Nginx}}

== External resources == <!--T:65-->

<!--T:66-->
* [http://articles.slicehost.com/2010/12/2/installing-apache-on-gentoo Slicehost article: Installing Apache on Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-files-on-gentoo Slicehost article: Apache configuration files on Gentoo]
* [http://articles.slicehost.com/2010/12/3/configuring-the-apache-mpm-on-gentoo Slicehost article: Configuring the Apache MPM on Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-on-gentoo-part-1 Slicehost article: Apache configuration on Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-virtual-hosts-on-gentoo-part-1 Slicehost article: Apache Virtual Hosts on Gentoo]
* [http://articles.slicehost.com/2010/12/3/enabling-and-using-apache-s-mod_status-on-gentoo Slicehost article: Enabling and using apache's mod_status on Gentoo]
* [https://httpd.apache.org/docs/ apache.org documentation]
* [http://gentoo-en.vfose.ru/wiki/Apache2_mod_pagespeed Apache2 mod_pagespeed]

</translate>

[[Category:Web Servers]]
