<languages />

{{Metadata|abstract=SSH (Secure Shell) это программа терминала, использующая шифрование, которая заменяет классическую программу telnet на Unix и подобных ей операционных системах.}}

{{InfoBox stack
|{{InfoBox homepage|http://www.openssh.org|header=true}}
|{{InfoBox wikipedia|Secure Shell}}
}}
'''SSH''' ('''S'''ecure '''SH'''ell) это программа терминала, использующая шифрование, которая заменяет классическую программу [[Wikipedia:telnet|telnet]] на Unix и подобных ей операционных системах.

Кроме удаленного терминального доступа (который предоставляет главная программа '''ssh'''), пакет программ SSH вырос, и включает, например, '''scp''' (от слов Secure CoPy - безопасное копирование), и '''sftp''' (от слов Secure File Transfer Protocol - безопасный протокол передачи файлов).

Изначально SSH была не свободной программой. Однако сегодня самой популярной и де-факто стандартной версией SSH является реализация OpenSSH из операционной системы [http://www.openbsd.org/ OpenBSD]. Именно данная версия предустановлена на Gentoo.

== Установка ==

Большинство развернутых систем уже имеют установленный OpenSSH (из-за пакета {{Package|net-misc/openssh}}). Данный пакет использует следующие USE флаги

{{USEflag|package=net-misc/openssh
|bindist
|hpn
|pam
|tcpd
|kerberos
|ldap
|libedit
|selinux
|skey
|static
|X
|X509
}}

После изменения USE флагов не забудьте пересобрать OpenSSH:

{{emerge|net-misc/openssh}}

== Запускаем OpenSSH ==

=== Сервер ===

Add openssh to the default runlevel if this hasn't been done already.

{{RootCmd|rc-update add sshd default}}

Start sshd daemon with:

{{RootCmd|/etc/init.d/sshd start}}

The OpenSSH server can be controlled like any other [[OpenRC]]-managed service:

{{RootCmd|/etc/init.d/sshd start
|/etc/init.d/sshd stop
|/etc/init.d/sshd restart}}

{{Note|Active SSH connections to the server remain unaffected when issuing <code>/etc/init.d/sshd restart</code>.}}

== Конфигурация ==

=== Create Keys ===

In order to provide a secure shell, cryptographic keys are used to manage the encryption, decryption and hashing functionalities offered by SSH. 

On the first start of the SSH service, system keys will be generated. Keys can be (re)generated using the <code>ssh-keygen</code> command.

{{Note|Substitute <code>SecretPassphrase</code> in the examples with your own passphrase.}}

To generate the key used for SSH protocol version 1 (which usually is not enabled anymore as it has been deprecated in favor of protocol version 2):

{{RootCmd|/usr/bin/ssh-keygen -t rsa1 -b 1024 -f /etc/ssh/ssh_host_key -N "SecretPassphrase"}}

To generate the keys for SSH protocol version 2 (DSA and RSA algorithms):

{{RootCmd|/usr/bin/ssh-keygen -d -f /etc/ssh/ssh_host_dsa_key -N "SecretPassphrase"
|/usr/bin/ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N "SecretPassphrase"}}

=== Server configuration ===

Сервер SSH обычно конфигурируется в файле {{Path|/etc/ssh/sshd_config}}, хотя возможно провести дополнительную конфигурацию в файле OpenRC {{Path|/etc/conf.d/sshd}}, включая изменение местоположения файла конфигурации. Для более детальной информации о том, как сконфигурировать сервер, смотри [[man page|man-страницу]] ''sshd_config''.

Вы также можете изучить этот [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html гайд] для конфигурации, ориентированной на безопасность.

=== Конфигурация клиента ===

Клиент '''ssh''' и относящиеся к нему программы ('''scp''', '''sftp''' и другие) конфигурируются в следующих файлах
* {{Path|~/.ssh/config}}
* {{Path|/etc/ssh/ssh_config}}

 Для более детальной информации смотри документацию по <code>ssh_config</code>.

{{Cmd|man ssh_config}}

=== Беспарольная аутентификация ===

Полезна для работы с [[git]] сервером.

==== Клиент ====

На вашем клиенте запустите

{{Cmd|ssh-keygen -t rsa|output=<pre>
Generating public/private rsa key pair.
Enter file in which to save the key (/home/larry/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/larry/.ssh/id_rsa.
Your public key has been saved in /home/larry/.ssh/id_rsa.pub.
The key fingerprint is:
de:ad:be:ef:15:g0:0d:13:37:15:ad:cc:dd:ee:ff:61 larry@client
The key's randomart image is:
+--[ RSA 2048]----+
|                 |
|     .           |
| . .. n   .      |
|   . (: . .      |
|  o   . . : .    |
| . ..: >.) .     |
|  * ?. .         |
| o.. .. ..       |
| :. .  ! .       |
+-----------------+
</pre>}}

==== Сервер ====

Make sure an account for the user exists on the server, and then place the clients' {{Path|id_rsa.pub}} file into the {{Path|~/.ssh/authorized_keys}} file.

==== Проверка на одной машине ====

The above procedure can be tested out locally:

{{Cmd|ssh-keygen -t rsa|output=<pre>
Generating public/private rsa key pair.
Enter file in which to save the key (/home/larry/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
...
</pre>}}

{{Cmd|mv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys}}

{{Cmd|ssh localhost}}

== Если что-то пошло не так ==

Существует 3 различных уровня отладки. ''-v'' заставляет ssh печатать отладочные сообщения о своей работе. Это полезно при отладке соединения, проблемах с аутентификацией и конфигурацией. Несколько опций -v увеличивают количество сообщений. Максимально можно ввести 3 буквы v.

{{Cmd|ssh example.org -v
|ssh example.org -vv
|ssh example.org -vvv}}

=== Обрыв долгоживущих соединений ===

Многие устройства доступа к Интернету выполняют преобразование сетевых адресов ([[NAT]]). Это процесс, который позволяет устройствам в частной сети, такой, какая обычно находится дома или на работе, получить доступ к другим сетям, например, к Интернету, несмотря на то, что у всей сети есть только один IP адрес. Однако не все NAT-устройства одинаковы, и некоторые из них могут обрывать долгоживущие TCP-соединения, например, такие, которые используются SSH. Обычно это приводит к внезапной потере возможности взаимодействия с удаленным сервером, хотя программа '''ssh''' не прекращала свою работу.

Чтобы решить данную проблему, клиенты и сервера OpenSSH могут быть сконфигурированы посылать специальные невидимые сообщения 'keep alive', нацеленные на поддержку и подтверждение использования соединения.
* Для разрешения keep alive '''для всех клиентов, подсоединенных к вашему локальному серверу''', установите ''ClientAliveInterval 30'' (или некоторое другое значение, в секундах) в файле {{Path|/etc/ssh/sshd_config}}.
* Для разрешения keep alive '''для всех серверов, подсоединенных к вашему локальному клиенту''', установите ''ServerAliveInterval 30'' (или некоторое другое значение, в секундах) в файле {{Path|/etc/ssh/ssh_config}}.

=== X11 Forwarding Not Forwarding or Tunneling! ===

<b>Problem</b>: After you have made the necessary changes to the configuration files for permitting X11 Forwarding, you find X applications are executing on the server and are not being forwarded to the client.

<b>Solution</b>: What is likely occurring during SSH login into the remote server or host, the <code>$DISPLAY</code> variable is either being unset or is being set after the SSH session sets it.

Test for this scenario as follows after logging in remotely:

{{Cmd|echo $DISPLAY|output=<pre>
localhost:10.0
</pre>}}

You should get something similar to "localhost:10.0" or "localhost2.local:10.0" using server side <code>X11UseLocalhost no</code> setting.  If you're getting the usual ":0.0", check to make sure you are not unsetting or initializing the <code>$DISPLAY</code> variable within {{Path|$HOME/.bash_profile}}. If so, remove or comment your custom initialization of <code>$DISPLAY</code> or prevent {{Path|bash_profile}} from executing during SSH login:

{{Cmd|ssh -t me@localhost2 bash --noprofile}}

A trick would be to alias this within {{Path|bashrc}}.

== Смотри также ==
* [https://dev.gentoo.org/~swift/docs/security_benchmarks/openssh.html Securing OpenSSH] - Документация Gentoo-разработчика
* [http://www.gentoo.org/doc/en/articles/openssh-key-management-p1.xml OpenSSH Key Management Part1] - Документация Gentoo, просмотрите все 3 части.
* [KeyChain|Гайд по авторизации по ключам Gentoo Linux]
* [[autossh]] - Определяет, когда соединение SSH обрывается, и заново подсоединяется.


[[Category:SSH]]
[[Category:Server]]
[[Category:Daemons]]
