<languages />
<tt>emerge</tt>를 사용하여 꾸러미를 빌드할 때, 포티지에서 보통 잘 나오지 않는 알림 메시지가 뜹니다. 젠투 개발자들이 알려주는 중요한 정보가 있을지 모르기 때문에 읽어보시는 것이 좋지만, 화면 위로 너무 빨리 넘어가기 때문에 보통 불가능합니다. elog라고 하는 포티지 기능을 활성화하면 이 문제를 해결할 수 있는데, 나중에 다시 살펴볼 로그를 디스크에 저장하는 동작이 이 기능의 목적입니다. 그러나 마찬가지로 다른 로깅 기능도 있습니다...

== 포티지 elog 하위 시스템 ==

The Portage elog subsystem keeps track of specific, ebuild-provided log messages that developers have put in the ebuilds to attract attention of the administrator or user. Often, these messages contain important or interesting information related to the build of said package.

=== Setup ===

Select which kind of information should be logged through the <code>PORTAGE_ELOG_CLASSES</code> variable. Possible values are <code>info</code>, <code>warn</code>, <code>error</code>, <code>log</code> and <code>qa</code>:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_ELOG_CLASSES="log warn error"
}}

=== Configuring for file-based storage ===

Portage can handle the elog events in a number of ways.

In order to save the elog events to disk, enable the <code>save</code> module in the <code>PORTAGE_ELOG_SYSTEM</code> variable:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_ELOG_SYSTEM="save"
}}

The messages will be saved in {{Path|/var/log/portage/elog}} or in {{Path|${PORT_LOGDIR}/elog}} if said variable is set.

In order to create per-category elog files, enable the <code>split-elog</code> Portage feature. It will force Portage to create category-based subdirectories of the {{Path|/var/log/portage/elog}} location.

=== Configuring for e-mail ===

To mail logs to a recipient, enable the <code>mail</code> module. The mail option requires some additional variables to be set. Read {{Path|/usr/share/portage/config/make.conf.example}} for more information.

Below, an example setup is shown which is hopefully self-explanatory:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_ELOG_SYSTEM="mail"
# First the mail-to address, then the SMTP server
PORTAGE_ELOG_MAILURI="log-intake@example.com mail.example.com"
PORTAGE_ELOG_MAILFROM="portage@$(hostname).example.com"
PORTAGE_ELOG_MAILSUBJECT="${PACKAGE} is ${ACTION} on ${HOST}"
}}

Another example with nullmailer or sendmail:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORTAGE_ELOG_SYSTEM="mail"
# First the mail-to address, then the SMTP server
PORTAGE_ELOG_MAILURI="users@host /usr/sbin/sendmail"
PORTAGE_ELOG_MAILFROM="portage@$(hostname).example.com"
PORTAGE_ELOG_MAILSUBJECT="${PACKAGE} is ${ACTION} on ${HOST}"
}}

=== Related software ===

The following is a list of elog-related software packages:

* {{Package|app-portage/elogv}} - Curses based utility to parse the contents of elogs
* {{Package|app-portage/elogviewer}} - Python based elog viewer
* {{Package|app-portage/portage-mod_jabber}} - Module to support XMPP (Jabber) protocol for elog events

== Build logs ==

With the Portage elog subsystem, package build logs are saved on disk or mailed to a remote recipient, regardless of failure or success. This allows for administrators to review builds later or retrieve build logs for support tickets.

=== Setup ===

To enable Portage logging, edit {{Path|/etc/portage/make.conf}} and set <code>PORT_LOGDIR</code> to a location where the log files should be stored. By default, Portage will use {{Path|/var/log/portage}}:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PORT_LOGDIR="/var/log/portage"
}}

Next, a number of <code>FEATURES</code> settings influence how Portage handles build logs.

* With <code>binpkg-logs</code> set, even binary package deployments will have their logs saved
* When <code>clean-logs</code> is set, regular log file clean operations are executed. The command that is executed is defined by <code>PORT_LOGDIR_CLEAN</code> and defaults to a retention of the files of 7 days.
* With <code>split-log</code> set, build logs are stored in category-named subdirectories of <code>${PORT_LOGDIR}/build</code>

=== Cleaning up ===

When <code>clean-logs</code> is set, Portage will execute the command defined by <code>PORT_LOGDIR_CLEAN</code> after every build or unmerge operation. By default, the following command is used:

{{FileBox|filename=/usr/share/portage/config/make.globals|lang=bash|1=
PORT_LOGDIR_CLEAN="find \"\${PORT_LOGDIR}\" -type f ! -name \"summary.log*\" -mtime +7 -delete"
}}

When defining a custom command, do not forget to ''escape'' the <code>${PORT_LOGDIR}</code> variable (or immediately hardcode the right location).

== External resources ==

* [http://blog.siphos.be/2013/09/underestimated-or-underused-portage-elogging/ Underestimated or underused: Portage (e)logging] on ([[User:SwifT|Sven Vermeulen]]'s blog)

[[Category:Portage]]
