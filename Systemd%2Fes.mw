<languages />
{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|https://freedesktop.org/wiki/Software/systemd|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox github|https://github.com/systemd/systemd/|raw=true}}
}}

{{c|systemd}} es un reemplazo moderno del estilo SysV y de {{c|rc}} (run command)<ref>Eric S. Raymond. http://www.catb.org/jargon/html/R/rc-file.html Recuperado el 27 de junio de 2015</ref> para los sistemas Línux. Gentoo ofrece soporte como alternativa al sistema de inicio (init).
<!-- 
Los siguientes directorios de configuración son utilizados por OpenRC y systemd:

    {{Path|/etc/modules-load.d}},
    {{Path|/etc/sysctl.d}},
    {{Path|/etc/binfmt.d}}
-->

== Instalación ==

{{Note|If updating from <{{=}}sys-apps/systemd-203 check the [[Systemd/upgrade|upgrade sub-article]].}}

The core around which all distributions are built is the Linux kernel. It is the layer between the user programs and the system hardware. Gentoo provides its users several possible kernel sources. A full listing with description is available at the [[Kernel/Overview|Kernel overview page]]. 

For amd64-based systems, Gentoo recommends the [https://packages.gentoo.org/packages/sys-kernel/gentoo-sources sys-kernel/gentoo-sources] package.

Choose an appropriate kernel source and install it using emerge: 

{{RootCmd|emerge --ask sys-kernel/gentoo-sources}}

=== El núcleo de línux===

systemd hace uso de muchas características modernas del núcleo de Línux. Actualmente, la versión más antigua que los soporta es la 2.6.39. En versiones recientes de {{Package|sys-kernel/gentoo-sources}}, hay una forma eficaz de seleccionar las opciones del núcleo, tanto obligatorias como opcionales para systemd (leer la [[Kernel/Configuration/es|configuración del núcleo]] para obtener más información):

{{KernelBox|title=Configuración rápida usando gentoo-sources|<pre>
Gentoo Linux --->
        Support for init systems, system and service managers --->
                [*] systemd
</pre>}}

Para configurar las opciones del núcleo manualmente (que es la única opción cuando no utilice {{Package|sys-kernel/gentoo-sources}}), se requieren o recomiendan las siguientes opciones de configuración del núcleo:

<!-- Mirar https://cgit.freedesktop.org/systemd/systemd/plain/README -->
{{KernelBox|title=Opciones obligatorias|<pre>
General setup  --->
	[*] open by fhandle syscalls
	[*] Control Group support --->
	[ ] Enable deprecated sysfs features to support old userspace tools
	[*] Configure standard kernel features (expert users)  --->
		[*] Enable eventpoll support
		[*] Enable signalfd() system call
		[*] Enable timerfd() system call
[*] Networking support --->
Device Drivers  --->
	Generic Driver Options  --->
		[*] Maintain a devtmpfs filesystem to mount at /dev
File systems  --->
	[*] Inotify support for userspace
	Pseudo filesystems  --->
		[*] /proc file system support
		[*] sysfs file system support
</pre>}}

{{KernelBox|title=Opciones recomendadas|<pre>
General setup  --->
        [*] Checkpoint/restore support
	[*] Namespaces support  --->
		[*] Network namespace
[*] Enable the block layer  --->
	[*] Block layer SG support v4
Processor type and features  --->
	[*] Enable seccomp to safely compute untrusted bytecode
Networking support --->
	Networking options --->
		<*> The IPv6 protocol
Device Drivers  --->
	Generic Driver Options  --->
		()  path to uevent helper
		[ ] Fallback user-helper invocation for firmware loading
Firmware Drivers  --->
	[*] Export DMI identification via sysfs to userspace
File systems --->
	<*> Kernel automounter version 4 support (also supports v3)
	Pseudo filesystems --->
		[*] Tmpfs virtual memory file system support (former shm fs)
		[*]   Tmpfs POSIX Access Control Lists
		[*]   Tmpfs extended attributes
</pre>}}

Para un sistema UEFI active también las siguientes opciones:

{{KernelBox|title=Soporte para UEFI|<pre>
[*] Enable the block layer  --->
	Partition Types  --->
		[*] Advanced partition selection
		[*]   EFI GUID Partition support
Processor type and features  --->
	[*] EFI runtime service support
Firmware Drivers  --->
        EFI (Extensible Firmware Interface) Support -->
	        <*> EFI Variable Support via sysfs
</pre>}}

Si el sistema está utilizando el planificador BFQ, se recomienda, por los desarrolladores de BFQ, activar «BFQ hierarchical scheduling support» bajo «Enable the block layer -> IO Schedulers».

Para obtener una lista actualizada, consulte la sección «REQUIREMENTS» en el archivo [https://cgit.freedesktop.org/systemd/systemd/tree/README README].

==={{Path|/etc/mtab}}===

Los desarrolladores solo dan soporte al archivo {{Path|/etc/mtab}} siendo este un enlace simbólico de {{Path|/proc/self/mounts}}. Si no se crea este enlace simbólico también causará problemas con {{c|mount}} ({{bug|434090}}) y ({{c|df}}). En el pasado algunas utilidades escribieron información (como opciones de montaje) en {{Path|/etc/mtab}} y, por lo tanto, se dio por hecho que era un archivo normal. Hoy en día todo el software tiene en cuenta esto que para evitar dicho problema. Sin embargo, antes de cambiar el archivo para convertirse en un vínculo simbólico, revise {{bug|477498}} para asegurarse de que el sistema no está afectado por ninguna regresión reportada.

Para crear el enlace simbólico, ejecute:

{{RootCmd|ln -sf /proc/self/mounts /etc/mtab}}

=== Asegurarse de que /usr está presente en el arranque ===

Para una configuración separada de {{Path|/usr}}, utilice un [[initramfs]] para que monte {{Path|/usr}} antes de iniciar systemd. Por ahora, esto implica que se puede utilizar {{Package|sys-kernel/dracut}} o {{Package|sys-kernel/genkernel-next}} hasta que el apoyo a {{Path|/usr}} esté disponible en {{Package|sys-kernel/genkernel}}. Dele un tiempo para realizar la migración:

{{Emerge|params+=--unmerge|sys-kernel/genkernel}}
{{Emerge|sys-kernel/dracut}}
{{Emerge|sys-kernel/genkernel-next}}

Cuando utilice dracut, active el módulo usrmount, si no se ha activado por sí mismo al montar automáticamente {{Path|/usr}}.

{{FileBox|filename=/etc/dracut/dracut.conf|lang=bash|1=
# Módulos Dracut para añadir a los valores por defecto
add_dracutmodules+="usrmount"
}}

Cuando se utilice genkernel-next, antes de recompilar el núcleo, asegúrese de ajustar la variable <var>UDEV</var> en el archivo de configuración de {{c|genkernel}} a <code>yes</code>. Esto colocará {{path|/usr}} dentro de initramfs:

{{FileBox|filename=/etc/genkernel.conf|lang=bash|1=
# Utilice udev en lugar de mdev como el administrador de dispositivos por defecto para initramfs.
# Si utiliza systemd y, quizás también con LVM, entonces esta opción debe estar abierta.
UDEV="yes"
}}

{{RootCmd|genkernel --install all}}

Consulte la [[Initramfs/Guide|Guía de initramfs]] para conocer otras alternativas.

=== Utililizar LVM y initramfs ===

Cuando se utiliza [[LVM|sys-fs/lvm2]] y el sistema se arranca usando un initramfs, dicho initramfs tendrá que ser creado con {{Package|sys-kernel/genkernel-next}}, ejecutando:

{{RootCmd|genkernel --udev --lvm <target>}}

<code><target></code> es, o bien <code>initramfs</code>, o bien algún otro objetivo de genkernel que implique la creación de un initramfs. Para obtener más información, mire la salida de {{c|>genkernel --help}}:

{{Cmd|genkernel --help}}

Cuando se utiliza LVM, el demonio {{c|lvmetad}} debe iniciarse también. De lo contrario systemd será incapaz de montar volúmenes LVM. {{c|lvmetad}} se puede activar en {{Path|/etc/lvm/lvm.conf}}:

{{FileBox|filename=/etc/lvm/lvm.conf|title=Fragmento del cambio necesario en lvm.conf|lang=ini|1=
# Ajustar use_lvmetad a '1' para systemd
use_lvmetad {{=}} 1
}}

{{Note|En lugar de modificar {{Path|/etc/lvm/lvm.conf}}, esto, probablemente, podría lograrse a través de una unidad {{Path|lvmetad.socket}} que active un servicio {{Path|lvmetad.service}}, pero las versiones actuales de {{Package|sys-fs/lvm2}} no contienen dichas opciones aún.}}

=== Ajustes USE ===

{{USEflag|package=sys-apps/systemd}}

=== Instalación ===

Active el parámetro global de USE <code>systemd</code> (en {{Path|make.conf}}). Al mismo tiempo, el parámetro USE <code>consolekit</code> debe ser desactivado para evitar conflictos con el servicio {{c|systemd-logind}}. También es posible cambiar a un subperfil systemd para utilizar parámetros USE por defecto más coherentes, en cuyo caso no es necesario cambiar {{Path|make.conf}}:

{{RootCmd|eselect profile list}}

Finalmente, actualice el sistema con el nuevo perfil:

{{RootCmd|emerge -avDN @world}}

Cuando se producen problemas de dependencias (como {{Package|sys-fs/udev}} bloqueando {{Package|sys-apps/systemd}}), {{Package|sys-fs/udev}} podría ser que estuviera registrado en el archivo word. Trate de resolver esto desmarcándolo:

{{Package|sys-apps/systemd}} contiene udev. Una vez instalado, {{Package|sys-fs/udev}} puede eliminarse debido a que systemd será el proveedor del requisito {{Package|virtual/udev}}.

{{RootCmd|emerge --deselect sys-fs/udev}}

=== Cargador de arranque ===

Para poder arrancar systemd, hay que cambiar el  {{c|init}} que el núcleo (o initramfs) utiliza como ejecutable.

{{Warning|Los servicios que se establecen para el gestor de servicios previo no se inician automáticamente (en el otro). Esto se debe a que el sistema ha cambiado a un gestor de servicios diferente. Con el fin de obtener de nuevo la funcionalidad de dichos servicios, como la conexión de redes o el gestor de inicio de sesión, estos servicios tendrán que ser activados nuevamente. Más información sobre esto se proporciona más adelante en la sección [[#Servicios|«Servicios»]] de este artículo.}}

{{Note|Si la migración produce un estado inoperativo, siempre es posible arrancar de nuevo con el gestor de servicios por defecto (OpenRC) desandando los pasos para cambiar el init. Esto permite un retorno seguro y una manera de conseguir solucionar el problema a través de la sección [[#Solución de problemas|«Solución de problemas»]] del final de este artículo.}}

Las siguientes subsecciones documentan cómo intercambiar el {{c|init}} en uno de los gestores de arranque o en el núcleo.

==== GRUB Legacy (0.x) ====

El argumento <code>init=/usr/lib/systemd/systemd</code> debe ser añadido a la línea de órdenes del núcleo. Un extracto de ejemplo de {{Path|grub.conf}} se vería así:

{{FileBox|filename=/boot/grub/grub.conf|title=Ejemplo de configuración de GRUB para systemd|1=
title=Gentoo con systemd
root (hd0,0)
kernel /vmlinuz root=/dev/sda2 init=/usr/lib/systemd/systemd
}}

Si a pesar de esto el sistema arranca usando OpenRC, pruebe utilizando <code>real_init</code> en lugar de <code>init</code>.

==== GRUB 2 ====

Cuando se utiliza {{c|grub-mkconfig}}, añada la opción init a <var>GRUB_CMDLINE_LINUX</var>:

{{Note|Esto no es necesario cuando se utiliza un initramfs generado por {{c|dracut}} con systemd en su interior, dado que initramfs ya inicia systemd.}}

{{FileBox|filename=/etc/default/grub|title==Configurar GRUB2 para systemd|lang=bash|1=
# Añadir parámetros a la línea de órdenes del núcleo de línux
GRUB_CMDLINE_LINUX="init=/usr/lib/systemd/systemd"
}}

Cuando el archivo de configuración de GRUB2 esté hecho a mano (solo expertos), añada el parámetro <code>init=</code> a la orden <code>linux</code> o <code>linux16</code>.

{{FileBox|filename=/boot/grub/grub.cfg|title=Ejemplo de fragmento de configuración de GRUB2|1=
linux /vmlinuz-3.10.9 root=UUID=508868e4-54c6-4e6b-84b0-b3b28b1656b6 init=/usr/lib/systemd/systemd
}}


==== YABOOT ==== 

Yaboot is a boot loader for PowerPC-based hardware running Linux, particularly New World ROM Macintosh systems.

The <code>init=/usr/lib/systemd/systemd</code> argument should be added directly after the kernel command-line. An example from {{Path|yaboot.conf}}:

{{FileBox|filename=/etc/yaboot.conf|title=Example yaboot config for systemd|1=
image=/vmlinux 
   append="init=/usr/lib/systemd/systemd" 
   label=Linux 
   read-only 
   initrd=/initramfs 
   initrd-size=8192 
}}

You must run the <code>ybin</code> command each time you modify {{Path|yaboot.conf}} for the changes to take effect.


==== En la configuración del núcleo ====

La configuración de init también puede ser introducida en la configuración del núcleo. Consulte  {{Path|Processor type and features -> Built-in kernel command line}}. Tenga en cuenta que esta técnica funciona tanto para GRUB como para GRUB2.

== Upgrades ==

{{c|systemd}} has the ability to update in-place on a running system (no reboot necessary). After an upgrade to systemd has emerged, run the following command:

{{RootCmd|systemctl daemon-reexec}}

== Configuración ==

systemd soporta algunos archivos de configuración para ajustar los detalles más básicos del sistema.

{{Note|Si bien algunos parámetros de configuración del sistema se pueden actualizar mediante la modificación de los archivos de configuración apropiados, la mayoría de los ajustes se gestionan mediante utilidades que exigen que systemd esté corriendo. En este último caso, es seguro reiniciar el ordenador con systemd y utilizar las utilidades {{c|hostnamectl}}, {{c|localectl}} y {{c|timedatectl}} para hacer los ajustes que se necesiten.}}

=== Identificador de la máquina (Machine ID) ===

Crear un identificador de la máquina para que el journaling funcione. Esto se puede conseguir mediante la siguiente orden:

{{RootCmd|systemd-machine-id-setup}}

{{Note|The command <code>systemd-machine-id-setup</code> also has an impact on the <code>systemd-networkd</code> service. If you don't run this command, strange behavior like network interfaces not coming UP or network addresses not being applied will occur.}}

=== Nombre del equipo ===

Para establecer el nombre del equipo, cree/edite el archivo {{Path|/etc/hostname}} y simplemente ponga el nombre deseado para el equipo.

Cuando arranca con systemd, dispone de una herramienta llamada {{c|hostnamectl}} que permite editar {{Path|/etc/hostname}} y {{Path|/etc/machine-info}}. Para cambiar el nombre del equipo, ejecute:

{{RootCmd|hostnamectl set-hostname <NOMBREDELEQUIPO>}}

Remítase a {{c|man hostnamectl}} para obtener más información.

<!--{{FileBox|filename=/etc/machine-info|title=Fichero de configuración para la información de máquinas locales.|lang=bash|1=
PRETTY_NAME="El computador de Larry"
ICON_NAME="computador-portátil"
}}
-->

=== Idioma del sistema ===

Por lo general, los locales migrarán correctamente desde OpenRC al instalar systemd. Cuando sea necesario, el idioma se puede ajustar en {{Path|/etc/locale.conf}}, según las instrucciones dadas por el manual de Gentoo:

{{FileBox|filename=/etc/locale.conf|title=Configuración del idioma del sistema|lang=bash|1=
LANG="es_ES.utf8"
}}

Una vez arrancado el sistema con systemd, la herramienta {{c|localectl}} se puede utilizar para establecer la configuración regional y el mapa de teclas de la consola o de X11. Para cambiar la configuración regional del sistema, ejecute la siguiente orden:

{{RootCmd|localectl set-locale LANG<nowiki>=</nowiki><LOCALE>}}

Para cambiar el mapa de teclado de la consola virtual:

{{RootCmd|localectl set-keymap <KEYMAP>}}

Y, por último, para configurar la distribución del teclado en X11:

{{RootCmd|localectl set-x11-keymap <LAYOUT>}}

Si es necesario el modelo, variante y opciones pueden especificarse así:

{{RootCmd|localectl set-x11-keymap <LAYOUT> <MODEL> <VARIANT> <OPTIONS>}}


After doing any of the above, update the environment so the changes will take effect:
{{RootCmd|env-update && source /etc/profile}}

=== Fecha y hora ===

La fecha y hora del sistema se pueden ajustar mediante la utilidad {{c|timedatectl}}. Esto también permitirá a los usuarios configurar la sincronización horaria del sistema sin necesidad de depender de {{Package|net-misc/ntp}} o de otros proveedores que implementa el propio systemd.

Para aprender a utilizar {{c|timedatectl}} solo tiene que ejecutar:

{{RootCmd|timedatectl --help}}

=== Cargar módulos automáticamente ===

La carga automática de un módulo está configurada en un archivo diferente, o mejor dicho, en un directorio de archivos. Los archivos de configuración se almacenan en el directorio {{Path|/etc/modules-load.d}}. Al arranque, se carga cada archivo que contiene una lista de módulos. El formato del archivo es una lista de módulos separados por saltos de línea, y dicho archivo puede tener cualquier nombre, siempre y cuando termine en {{Path|.conf}}. La carga del módulo se puede separar por programa, servicio o cualquier forma que se adapte a sus preferencias personales. Un ejemplo para los módulos de  {{Path|virtualbox.conf}} se enumeran a continuación:

{{FileBox|filename=/etc/modules-load.d/virtualbox.conf|title=Archivo de ejemplo para los módulos de virtualbox|1=
vboxdrv
vboxnetflt
vboxnetadp
vboxpci
}}

=== Conexión de red ===

==== systemd-networkd ====

systemd-networkd es útil para realizar una configuración sencilla de las interfaces de red cableada. Está desactivado por defecto.

Para configurar systemd-networkd, cree un archivo {{Path|*.network}} dentro del directorio {{Path|/etc/systemd/network}}. Vea [https://www.freedesktop.org/software/systemd/man/systemd.network.html systemd.network(5)] como referencia. Una configuración de DHCP sencilla sería como sigue:

{{FileBox|filename=/etc/systemd/network/50-dhcp.network|lang=ini|1=
[Match]
Name=en*
 
[Network]
DHCP=yes
}}

{{RootCmd
|systemctl enable systemd-networkd.service
|systemctl start systemd-networkd.service
}}

Advierta que systemd-networkd no actualiza {{Path|resolv.conf}} de forma predeterminada. Para tener systemd administrando la configuración de DNS, sustituya {{Path|resolv.conf}} con un enlace simbólico y ponga en marcha systemd-resolved.

{{RootCmd
|ln -snf /run/systemd/resolve/resolv.conf /etc/resolv.conf
|systemctl enable systemd-resolved.service
|systemctl start systemd-resolved.service
}}

==== NetworkManager ====

A menudo NetworkManager se utiliza para configurar los ajustes de red. Para ello, solo tiene que ejecutar la siguiente orden cuando se utiliza un escritorio corriendo con X11:

{{RootCmd|nm-connection-editor}}

Si ese no es el caso y la red necesita ser configurada desde consola, dele a [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/sec-Using_the_NetworkManager_Command_Line_Tool_nmcli.html nmcli] una oportunidad, o siga un proceso de configuración asistida por {{c|nmtui}}:

{{RootCmd|nmtui}}

[https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/sec-Networking_Config_Using_nmtui.html nmtui] es una interfaz [http://es.wikipedia.org/wiki/Curses curses] que guiará al usuario en el proceso de configuración mientras se ejecuta en modo consola.

=== Manejar los archivos de registo ===

systemd tiene su propia manera de manejar los archivos de registro sin necesidad de depender de ningún sistema de registro externo (como {{Package|app-admin/syslog-ng}} or {{Package|app-admin/rsyslog}}). Los mensajes ahora se pueden leer con {{c|journalctl}}. Aún así, systemd puede ser configurado para utilizar una herramienta externa de su preferencia para el manejo de los registros. Vea {{c|man journald.conf}} para aprender acerca de cómo configurar journald para que se ajuste a sus necesidades personales.

If desired, the logging service be configured to pass log messages to external logging utilities such as sysklog or syslog-ng. See {{c|man journald.conf}} to learn how to configure the systemd-journald service to suit situational needs.

systemd's integrated logging service writes log messages in a secure, binary format. The logs are ''read'' by using the {{c|journalctl}} command, which is a separate executable from the systemd-journald logging service.

{{Important|When using systemd's systemd-journald.service for logging, which is typically the default for systems running systemd, standard users running the {{c|journalctl}} command will be ''unable to view system logs''. To view system logs as a non-root account, users must be in one of the following three user groups in order to view system logs: '''systemd-journal''', '''adm''', or '''wheel'''. The simplest method to allow a standard user to view logs is to use the systemd-journal group. Add a user by running the following command where <code>larry</code> is the desired username:<br /><br />
{{RootCmd|gpasswd --add larry systemd-journal}}

System logs can now be read by running {{c|journalctl --system}} as the user(s) added in the previous command.
}}

Algunas opciones comunes de {{c|journalctl}}:

{| class="table table-striped table-condensed"
|-
! Opciones de línea de órdenes para {{c|journalctl}} !! Resultado
|-
| {{c|journalctl}} sin opciones || Muestra todas las entradas del registro comenzando por la más antigua.
|-
| <code>-b</code>, <code>--boot</code> || Muestra todas las entradas del registro en este inicio del sistema.
|-
| <code>-r</code>, <code>--reverse</code> || En primer lugar la entrada más actual.
|-
| <code>-f</code>, <code>--follow</code> || Muestra las últimas entradas y las nuevas conforme se van produciendo.
|-
| <code>-p</code>, <code>--priority=</code> || Especifica la (mínema) prioridad para mostrar los mensajes, se puede elegir entre: "emerg" (0), "alert" (1), "crit" (2), "err" (3), "warning" (4), "notice" (5), "info" (6), "debug" (7).
|-
| <code>--since=</code>, <code>--until=</code> || Restringir entradas por su hora. Acepta el formato "YYYY-MM-DD hh:mm:ss" o las cadenas de caracteres "yesterday", "today" y "tomorrow" (ayer, hoy y mañana).
|-
| <code>-n</code>, <code>--lines=</code> || Restringe a un número de entradas.
|-
| <code>-k</code>, <code>--dmesg</code> || Restringe a los mensajes del núcleo.
|-
| <code>-u</code>, <code>--unit=</code> || Restringe a una determinada unidad de Systemd.
|}

Para obtener más información y muchas más opciones, eche un vistazo a {{c|man journalctl}}.

=== /tmp está ahora en tmpfs ===

A menos que algún otro sistema de archivos esté montado de forma explícita para {{Path|/tmp}} en {{Path|/etc/fstab}}, systemd montará {{Path|/tmp}} como tmpfs. Eso significa que se vacía en cada arranque y su tamaño se limitará a 50% del tamaño de la memoria RAM del sistema. Para saber por qué este se comporta así y cómo modificarlo, eche un vistazo a [https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems/ Sistemas de archivos API].

=== Configurar la verbosidad de proceso de arranque ===

Al migrar a systemd lo usuarios suelen notar diferencias en cuanto a la salida verbosa del proceso de arranque:

* La opción de arranque <code>quiet</code> no solo influye en la salida de información sobre el núcleo, sino también sobre la del propio systemd. No obstante, mientras se configura systemd para la máquina, la opción de monstrar los errores, que fue descartada, podría volver a surgir. Por tanto, después de configurar systemd, añada de nuevo la opción «quiet» para conseguir una salida concisa de información del arranque (y, por ende, un arranque más rápido).
* Incluso pasando la opción de arranque <code>quiet</code>, systemd todavía se puede configurar para mostrar su estado poniendo el parámetro <code>systemd.show_status=1</code>.
* Cuando no utilice la opción de arranque <code>quiet</code>, algunos mensajes podrían sobrescribir las consolas. Esto es causado por la configuración del núcleo (ver <kbd>man 5 proc</kbd> y buscar {{Path|/proc/sys/kernel/printk}}). Para ajustarlo pase el parámetro de arranque <code>loglevel=5</code> al núcleo (y actualice el valor de acuerdo a su preferencia, por ejemplo, establezca un valor más bajo, como 1).

== Servicios ==

En algún momento el sistema tendrá que ser reiniciado para que systemd se ponga marcha (en modo de sistema). Procure leer todo el presente documento para asegurarse de que systemd se configura tan completamente como sea posible antes de reiniciar (el equipo). Tenga en cuenta que, así como la utilidad {{c|journalctl}} funciona con systemd mientras este no está ejecutándose, por el contrario la utilidad {{c|systemctl}} no hará nada útil sin que systemd esté ejecutándose. Complete la configuración de los servicios (activación e iniciación de los servicios) después de entrar en el sistema que ejecuta systemd.

=== Servicios OpenRC ===

Aunque originalmente systemd intentó dar soporte a los antiguos scripts de init.d en ejecución, este apoyo no se adapta bien para un RC basado en dependencias como OpenRC y, por lo tanto, se desactiva por completo en Gentoo. OpenRC ofrece medidas adicionales para garantizar que los scripts de init.d no se ejecuten cuando no se utilice OpenRC para arrancar el sistema (de lo contrario los resultados serían impredecibles).

=== Listar servicios disponibles ===

Todas las unidades de servicios disponibles se pueden enumerar usando el argumento <code>list-units</code> con {{c|systemctl}}:

{{RootCmd|systemctl list-units|output=<pre>
UNIT                               LOAD   ACTIVE SUB       DESCRIPTION
boot.automount                     loaded active waiting   EFI System Partition Automount
proc-sys-fs-binfmt_misc.automount  loaded active waiting   Arbitrary Executable File Formats File System Automount Point
...
</pre>}}

Los siguientes sufijos de archivos son de interés:

{| class="table table-striped table-condensed"
! Sufijo
! Descripción
|-
| {{Path|.service}}
| archivos de servicio normal (por ejemplo, aquellos que se limitan a ejecutar un demonio directamente),
|-
| {{Path|.socket}}
| servicios que escuchan socket   (como ''inetd''),
|-
| {{Path|.path}}
| sistema de archivos que desencadenan servicios (servicios que se ejecutan cuando cambian los archivos, etc.).
|}

Por otro lado, la herramienta {{c|systemctl}} se puede utilizar para enumerar todos los servicios (incluidos los implícitos):

{{RootCmd|systemctl --all --full}}

Y, por último, para comprobar los servicios que fallaron al iniciar:

{{RootCmd|systemctl --failed}}

=== Activar, desactivar, iniciar y detener servicios ===

La forma habitual de activar un servicio es usando la siguiente orden:

{{RootCmd|systemctl enable foo.service}}

Los servicios pueden ser igualmente desactivados:

{{RootCmd|systemctl disable foo.service}}

Estas órdenes activan los servicios utilizando el nombre por defecto en el target por defecto (ambos especificados en la sección «Install» del archivo de servicio). Sin embargo, algunos servicios, o bien no proporcionan esta información, o bien los usuarios prefieren tener otro nombre/target.

Tenga en cuenta que estas órdenes solo activan o desactivan el servicio en cuestión cuando el sistema se inicie de nuevo en un próximo arranque; para iniciar el servicio inmediatamente (si necesidad de reinicio del sistema), utilice:

{{RootCmd|systemctl start foo.service}}

Los servicios también pueden ser detenidos:

{{RootCmd|systemctl stop foo.service}}

=== Instalar archivos de unidad personalizados ===

Los archivos de unidad personalizados se pueden colocar en {{Path|/etc/systemd/system}}, donde van a ser reconocidos después de ejecutar {{c|systemctl daemon-reload}}:

{{RootCmd|systemctl daemon-reload}}

{{Path|/usr/lib/systemd/system}} está reservado para los archivos de servicios instalados por el gestor de paquetes.

=== Personalizar archivos de unidad ===

Cuando solo se necesitan cambios menores en una unidad, no hay necesidad de crear una copia completa del archivo de unidad original en {{Path|/etc/systemd/system}}. Sobrescribir la configuración en una unidad proporcionada por el gestor de paquetes se puede lograr mediante archivos colocados en un directorio llamado {{Path|*.d}} precedido con el nombre de la unidad original (por ejemplo {{Path|apache2.d}}) en {{Path|/etc/systemd/system/}}.

{{FileBox|filename=/etc/systemd/system/apache2.d/mem-limit.conf|title=Ejemplo de adición/modificación de la configuración de un archivo de servicio|lang=ini|1=
[Service]
MemoryLimit{{=}}1G
}}

Se necesita una recarga de los servicios para informar a systemd de los cambios:

{{RootCmd|systemctl daemon-reload}}

A continuación, es necesario reiniciar el servicio para aplicar los cambios:

{{RootCmd|systemctl restart apache2}}

Compruebe que la propiedad cambiada se ha aplicado al servicio:

{{RootCmd|systemctl show --property{{=}}MemoryLimit apache2|output=<pre>MemoryLimit=1074000000</pre>}}

=== Activar un servicio bajo un nombre personalizado ===

Cuando el nombre proporcionado por «Alias» en la sección «[Install]» de la unidad no cumple con sus expectativas y proporciona un nuevo valor permanente para este a través de una [[#Personalizar archivos de unidad|personalización]] que no es el valor deseado, se puede crear manualmente un enlace simbólico en {{Path|/etc/systemd/system/*.wants/}} (que apunte a otro servicio/target). El nombre del directorio {{Path|*.wants}} puede especificar un target u otro servicio que dependerá de otro nuevo.

Por ejemplo, para instalar el servicio  {{Path|mysqld.service}} como {{Path|db.service}} en el target {{Path|multi-user.target}}:

{{RootCmd|ln -s /usr/lib/systemd/system/mysqld.service /etc/systemd/system/multi-user.target.wants/db.service}}

Para desactivar el servicio, basta con retirar el enlace simbólico:

{{RootCmd|rm /etc/systemd/system/multi-user.target.wants/db.service}}

=== Servicios nativos ===

Algunos de los paquetes de Gentoo ya instalan archivos de unidad de systemd. Para estos servicios, no se necesita mas que activarlos. Un breve resumen de los archivos de unidad que instalan los paquetes, se puede ver en [https://qa-reports.gentoo.org/output/eclass-usage/systemd.txt systemd eclass users list].

La siguiente tabla, lista las coincidencias de los servicios de systemd con los de OpenRC:

{| class="table table-striped table-condensed" style="text-align: left;"
|+ Gráfico de migración
|-
! scope="col" | Paquete de Gentoo
! scope="col" | Servicio de OpenRC
! scope="col" | Unidad de systemd 
! scope="col" | Notas
|-
! scope="row" rowspan="28" | {{Package|sys-apps/openrc}}
| bootmisc || systemd-tmpfiles-setup.service || activado siempre, utiliza {{Path|tmpfiles.d}}
|-
| consolefont || systemd-vconsole-setup.service || activado siempre, utiliza {{Path|vconsole.conf}}
|-
| devfs ||  || 
|-
| dmesg ||  || 
|-
| fsck || fsck*.service || lanzado de forma implícita por los montajes
|-
| functions.sh || Véase nota || {{Bug|373219}}
|-
| hostname || (integrado) || {{Path|/etc/hostname}}
|-
| hwclock || Véase nota || activado siempre como parte de systemd (es decir, incorporado al mismo y no es una unidad)
|-
| keymaps || systemd-vconsole-setup.service || activado siempre, utiliza {{Path|vconsole.conf}}
|-
| killprocs ||  || 
|-
| local ||  || 
|-
| localmount || local-fs.target || las unidades reales son creadas implícitamente desde {{Path|/etc/fstab}}
|-
| modules || systemd-modules-load.service || activado siempre, utiliza {{Path|/etc/modules-load.d/*.conf}}
|-
| mount-ro ||  || 
|-
| mtab ||  || 
|-
| netmount || remote-fs.target || 
|-
| numlock ||  || 
|-
| procfs || (integrado) || 
|-
| root || remount-rootfs.service || 
|-
| savecache || n/a || parte interna de OpenRC
|-
| staticroute ||  || 
|-
| swap || swap.target || las unidades reales son creadas implícitamente desde {{Path|/etc/fstab}}
|-
| swclock ||  || 
|-
| sysctl || systemd-sysctl.service || {{Path|sysctl.conf}} y {{Path|sysctl.d/}}
|-
| sysfs || (integrado) || 
|-
| termencoding || systemd-vconsole-setup.service || activado siempre, utiliza {{Path|vconsole.conf}}
|-
| scope="row" rowspan="2" | urandom
| systemd-random-seed-load.service || 
|-
| systemd-random-seed-save.service || 
|-
! scope="row" | {{Package|app-admin/rsyslog}}
| rsyslog || rsyslog.service || 
|-
! scope="row" | {{Package|app-admin/syslog-ng}}
| syslog-ng || syslog-ng.service || 
|-
! scope="row" rowspan="2" | {{Package|media-sound/alsa-utils}}
| scope="row" rowspan="2" | alsasound
| alsa-store.service || (activado por defecto)
|-
| alsa-restore.socket || (activado por defecto)
|-
! scope="row" | {{Package|net-misc/dhcpcd}}
| dhcpcd || dhcpcd.service || 
|-
! scope="row" rowspan="5" | {{Package|net-misc/netifrc}} 
| scope="row" rowspan="5" | net.*
| net@.service || scripts de systemd wrapper para net.* scripts (viene con {{Package|net-misc/netifrc}})
|-
| netctl@.service || {{Package|net-misc/netctl}} es originariamente una herramienta de Arch Linux.
|-
| NetworkManager.service || Para &lt;networkmanager-0.9.8.4 : active NetworkManager-dispatcher.service para que los scripts de dispatcher.d funcionen. <br /> Active NetworkManager-wait-online.service para detectar que el sistema tiene una conexión viable de Internet.<br />Desactive el resto de gestores de red (por ejemplo, wicd, dhcpcd) y wpa_supplicant.
|-
| dhcpcd.service || Proporcionado por {{Package|net-misc/dhcpcd}}
|-
| systemd.networkd.service || Parte de systemd
|-
! scope="row" | {{Package|net-misc/openntpd}}
| ntpd || ntpd.service ||
|-
! scope="row" rowspan="2" | {{Package|net-misc/openssh}}
| scope="row" rowspan="2" | sshd
| sshd.service || ejecuta sshd como un demonio
|-
| sshd.socket || ejecuta sshd sobre una base similar a inetd (por cada conexión entrante)
|-
! scope="row" rowspan="2" | {{Package|net-wireless/wpa_supplicant}}
| scope="row" rowspan="2" | wpa-supplicant
| wpa_supplicant.service || Demonio controlador de D-Bus (por ejemplo, para [[NetworkManager#Systemd|NetworkManager]])
|-
| wpa_supplicant@.service || interfaz específica de wpa_supplicant (usado como {{Path|wpa_supplicant@wlan0.service}})
|-
! scope="row" rowspan="3" | {{Package|net-print/cups}}
| scope="row" rowspan="3" | cupsd
| cups.service || forma clásica de iniciar el servicio al arranque
|-
| cups.socket
| scope="row" rowspan="2" | activación de socket y de ruta (para iniciar cups solo bajo demanda)
|-
| cups.path
|-
! scope="row" | {{Package|net-wireless/bluez}}
| bluetooth || bluetooth.service || 
|-
! scope="row" rowspan="2" | {{Package|sys-apps/dbus}}
| scope="row" rowspan="2" | dbus
| dbus.service || 
|-
| dbus.socket || 
|-
! scope="row" | {{Package|sys-apps/irqbalance}}
| irqbalance || irqbalance.service || soporte solo en modo demonio
|-
! scope="row" | {{Package|sys-apps/microcode-ctl}}
| microcode_ctl ||  || Configura ''microcode'' como un '''módulo''' para que cargue su propio microcódigo. Ir a «Processor type and features» -> «CPU microcode loading support» y recuerde agregar la opción correcta, dependiendo del procesador, Intel o AMD, que maneje el sistema.
|-
! scope="row" rowspan="4" | {{Package|sys-fs/udev}}
| udev || udev.service || 
|-
| udev-mount || (integrado) || {{Path|/dev}} es montado como tmpfs
|-
| udev-postmount || udev-trigger.service || 
|-
| || udev-settle.service || 
|-
! scope="row" | {{Package|sys-power/acpid}}
| acpid || acpid.service || La mayor parte de su funcionalidad la realiza systemd por sí mismo, de modo que, quizás debería considerar la posibilidad de desactivar este servicio
|-
! scope="row" | {{Package|x11-apps/xdm}}
| (xdm) || xdm.service || OpenRC utiliza comúnmente el init.d «xdm» instalado por {{Package|x11-base/xorg-server}}. Con systemd necesitará activar el correspondiente fichero de unidad para cada gestor de inicio de sesión (gdm.service, kdm.service...)	
|-	
! scope="row" rowspan="2" | {{Package|net-firewall/iptables}}	
| scope="row" rowspan="2" | iptables	
| iptables-store.service || 	
|-	
| iptables-restore.service ||	
|-
|}

=== Servicios con temporizador ===

Desde la versión 197, systemd soporta temporizadores, haciendo de cron un programa innecesario en un sistema systemd. Desde la versión 212, se da soporte a los servicios persistentes, reemplazando, incluso, a anacron. Los temporizadores persistentes se ejecutan en la próxima oportunidad, si el sistema se apaga cuando se programó el temporizador.

El siguiente es un ejemplo de cómo hacer un temporizador simple que se ejecuta en el contexto de un usuario. Será ejecutado incluso si el usuario no inicia sesión. Cada servicio con temporizador necesita un temporizador, y un archivo de servicio que se activa por el temporizador de la siguiente manera:

{{FileBox|filename=~/.local/share/systemd/user/backup-work.timer|title=Ejemplo de un temporizador que se ejecuta todos los días laborables|lang=ini|1=
[Unit]
Description=daily backup work
RefuseManualStart=no
RefuseManualStop=no
 
[Timer]
Persistent=false
OnCalendar=Mon-Fri *-*-* 11:30:00
Unit=backup-work.service
 
[Install]
WantedBy=default.target
}}

{{FileBox|filename=~/.local/share/systemd/user/backup-work.service|title=Ejemplo de un servicio que ejecuta una copia de seguridad|lang=ini|1=
[Unit]
Description=daily backup work
RefuseManualStart=no
RefuseManualStop=yes
 
[Service]
Type=oneshot
ExecStart=/home/<nombredeusuario>/scripts/backup-work.sh
}}

En primer lugar, hay que decirle a systemd que recargue los archivos de servicio:

{{Cmd|systemctl --user daemon-reload}}

Es posible realizar la copia de seguridad manualmente ejecutando la siguiente orden:

{{Cmd|systemctl --user start backup-work.service}}

Se puede iniciar y detener el temporizador manualmente de la siguiente manera:

{{Cmd|systemctl --user start backup-work.timer}}
{{Cmd|systemctl --user stop backup-work.timer}}

Por último, para activar el temporizador en cada inicio del sistema, ejecute:

{{Cmd|systemctl --user enable backup-work.timer}}

Para comprobar los últimos resultados de la ejecución del servicio:

{{Cmd|systemctl --user list-timers}}

==== Correos electrónicos para comunicar fallos ====

Si un servicio programado se ejecuta y falla, se puede enviar un correo electrónico al usuario o administrador para informarle. Esto es posible con la línea «onfailure» que especifica lo que debería suceder si un servicio falla. Un fallo es detectado cuando el script invocado devuelve un código distinto de cero.

Habrá que cambiar el script de la siguiente manera:

{{FileBox|filename=~/.local/share/systemd/user/backup-work.service|title=Ejemplo de un servicio que ejecuta una copia de seguridad|lang=ini|1=
[Unit]
Description=daily backup work
RefuseManualStart=no
RefuseManualStop=yes
OnFailure=failure-email@%i.service
 
[Service]
Type=oneshot
ExecStart=/home/<nombredeusuario>/scripts/backup-work.sh
}}

Esto requiere que tenga el servicio {{Path|failure-email@.service}} instalado, que se puede encontrar en 
[https://github.com/kylemanna/systemd-utils/tree/master/onfailure kylemanna's systemd-utils repository].

==== Sustituir cron ====

Los archivos con temporizador y de servicios vistos antes también se pueden añadir a {{Path|/usr/lib/systemd/system}} para hacerlos disponibles a todo el sistema. La sección «install» debería decir entonces <code>WantedBy=multi-user.target</code> para activar el servicio al iniciar el sistema.

Sin embargo, también cron ejecuta los scripts situados en {{Path|/etc/cron.daily}} y otros lugares. Varios paquetes colocan scripts allí donde se espera que se ejecuten diariamente. Este comportamiento puede ser emulado con systemd instalando {{Package|sys-process/systemd-cron}}. Luego active el nuevo reemplazo de cron con las siguientes órdenes:

{{RootCmd|systemctl enable cron.target}}
{{RootCmd|systemctl start cron.target}}

== Solución de problemas == <!--T:176-->

* {{Bug|systemd|search=package}}
* {{Bug|systemd|search=product|site=fdo}}
* [https://freedesktop.org/wiki/Software/systemd/Debugging Upstream debugging guide]

=== /dev/kmsg buffer overrun, some messages lost ===

; Problema: Cuando se inicia el sistema, se muestra el mensaje <code>/dev/kmsg buffer overrun, some messages lost</code> en un bucle infinito. La pantalla de acceso no se llega a mostrar ya que no se alcanza ese punto del proceso de arranque.

; Solución: En la mayoría de los casos este problema está causado porque la opción <var>CONFIG_POWER_SUPPLY_DEBUG</var> está habilitada en el núcleo. La solución actual consiste en deshabilitar esta opción en el núcleo, recompilar, instalar e iniciar el nuevo núcleo. Se puede encontrar la descripción de la solución en [https://forums.gentoo.org/viewtopic-t-977530-postdays-0-postorder-asc-start-0.html este hilo] de los foros de Gentoo. Tal y como indica un usuario del foro, este problema se ha observado también cuando se utiliza una EEPROM I2C en un sistema incrustado<ref>https://forums.gentoo.org/viewtopic-t-977530-postdays-0-postorder-asc-start-25.html Recuperado el 12 de marzo de 2016</ref>. La solución en este caso consiste en deshabilitar la opción <var>CONFIG_I2C_DEBUG_CORE</var> del núcleo.

=== Sesiones gráficas abiertas en lugares aleatorios ===

Por defecto, systemd lanza únicamente un proceso {{c|getty}} cuando se va a utilizar. Esto causa que algunos gestores gráficos (como GDM) utilicen los  TTYs que queden para abrir sesiones gráficas bajo demanda lo cual puede resultar en tener las consolas y las sesiones gráficas repartidas de forma aleatoria dependiendo en el orden en el que se hayan utilizando.

Para que el comportamiento sea más "clásico" (esto es, las consolas se emplazan desde la  {{Path|tty1}} a la {{Path|tty6}} y las sesiones gráficas utilizan los TTY que quedan) forzar a lanzar siempre {{c|getty}} en ellas:

{{RootCmd|systemctl enable getty@tty{2,3,4,5,6}.service}}

=== LVM ===

Cuando se cambia de OpenRC a systemd y se necesita LVM para montar correctamente los volúmenes del sistema, hay que activar el servicio LVM:

{{RootCmd|systemctl enable lvm2-monitor.service}}

A pesar de que este servicio podría no ser necesario para la activación del volumen raíz (si LVM está integrado en initramfs), podrían no funcionar sin él otros volúmenes LVM, a menos que se active el servicio.

=== systemd-bootchart ===

Asegurarse de que <var>CONFIG_DEBUG_KERNEL</var>, <var>CONFIG_SCHED_DEBUG</var> y <var>CONFIG_SCHEDSTATS</var> están habilitadas.

{{KernelBox|title=Habilitar el soporte para systemd-bootchart|1=<pre>
File systems  --->
	Pseudo filesystems --->
	[*] /proc file system support
Kernel hacking  --->
	[*] Kernel debugging
	[*] Collect scheduler debugging info
	[*] Collect scheduler statistics
</pre>}}

A continuación habilitar {{Path|systemd-bootchart.service}}:

{{RootCmd|systemctl enable systemd-bootchart}}

El resultado de los cambios producirán un informe gráfico de arranque en formato SVG localizado en {{Path|/run/log/}} después de cada inicio. Se puede visualizar utilizando cualquier navegador Web actual.

Como alternativa a systemd-bootchart, el arranque de los servicios se puede visualizar con:

{{RootCmd|systemd-analyze plot > plot.svg}}

=== Fuente syslog-ng para systemd ===

''No es necesario'' añadir <code>unix-dgram('/dev/log');</code> al fichero de configuración {{Path|/etc/syslog-ng/syslog-ng.conf}}. Causará el fallo de {{c|syslog-ng}} (al menos en la versión syslog-ng-3.7.2). Actualizar la línea <code>source src { ...; };</code> mencionada en el [[Syslog-ng#Sources|artículo sobre syslog-ng]] como se muestra a continuación:

{{FileBox|filename=/etc/syslog-ng/syslog-ng.conf|1=
# Configuración por defecto para openrc
#source src { system(); internal(); };
 
# systemd
source src { systemd-journal(); internal(); };
}}

=== Configuración de sys-fs/cryptsetup ===

systemd no parece respetar {{Path|/etc/conf.d/dmcrypt}} (vea {{bug|429966}}) por lo que necesita ser configurado a través del archivo {{Path|/etc/crypttab}}:

{{FileBox|filename=/etc/crypttab|title=Archivo de configuración para dispositivos de bloque cifrado|1=
crypt-home UUID=c25dd0f3-ecdd-420e-99a8-0ff2eaf3f391 -
}}

Asegúrese de actualizar el ajuste USE  <code>cryptsetup</code> para {{Package|sys-apps/systemd}}. Se instalará {{Path|/usr/lib/systemd/system-generators/systemd-cryptsetup-generator}} el cual creará de forma automática un servicio (<code>cryptsetup@crypt-home.service</code> para el ejemplo de arriba) para cada una de las entradas en el momento del inicio.

=== Comprobar la unidades que fallan al inicio ===

Compruebe si hay unidades que no pudieron comenzar con:

{{RootCmd|systemctl --failed}}

=== Activar modalidad de depuración de errores ===

Para obtener más información estableca lo siguiente en {{Path|/etc/systemd/system.conf}}:

{{FileBox|filename=/etc/systemd/system.conf|lang=bash|1=
LogLevel=debug
}}

O, active la depuración de errores en consola, que abre una terminal en tty9. Esto ayuda a depurar errores de los servicios durante el proceso de arranque.

{{RootCmd|systemctl enable debug-shell.service}}

=== La utilización de e4rat ===

Recuerde editar {{Path|/etc/e4rat.conf}} para configurar 'init' para {{Path|/usr/lib/systemd/systemd}}, de lo contrario se mantendrá el arranque de OpenRC.

=== Rigidez de GRSecurity ===

Con grsecurity activado, systemd-networkd podría registrar el error siguiente:

{{CodeBox|title=systemd-networkd error|1=could not find udev device: Permission denied}}

El error aumenta debido a que cuando systemd-networkd trabaja bajo un usuario no root, grsecurity denegará el acceso a la estructura completa de {{Path|/sys}} para dichos usuarios. Para desactivar esta opción, desactive la opción del núcleo  <var>CONFIG_GRKERNSEC_SYSFS_RESTRICT</var>.

También se pueden encontrar alguno problemas con los permisos si se ha activado <var>CONFIG_GRKERNSEC_PROC</var>, leer más en la incidencia {{Bug|472098}}.

=== shutdown -rF no fuerza la ejecución de fsck ===

El servicio {{c|systemd-fsck}} es el responsable de lanzar {{c|fsck}} cuando se necesita. No aplica para la opción <code>-rF</code> de {{c|shutdown}} per en lugar de eso se aplica a los siguientes parámetros de inicio del núcleo.

{| class="table table-striped table-condensed" style="text-align: left; width: auto;" 
|-
! scope="col" width="15%" | Parámetro de inicio
! scope="col" width="15%" | Opciones soportadas
! Descripción
|-
| <code>fsck.mode</code>
| <code>auto</code><br /><code>force</code><br /><code>skip</code>
| Controla el modo de operación. El valor por defecto es <code>auto</code> el cual asegura que se realizan comprobaciones del sistema de archivos cuando el comprobador del sistema de archivos lo estima necesario. <code>force</code> resulta en la comprobación completa del sistema de archivos incondicionalmente. <code>skip</code> evita cualquier comprobación del sistema de archivos.
|-
| <code>fsck.repair</code>
| <code>preen</code><br /><code>yes</code><br /><code>no</code>
| Controla el modo de operación. El valor por defecto es <code>preen</code> el cual reparará de forma automática problemas que se pueden resolver de forma segura.  <code>yes</code> contestará sí a todas las preguntas realizadas por fsck y <code>no</code> contestará no a todas esas preguntas.
|}

== Véase también ==

* [[Comparison of init systems]] - Un artículo donde se comparan y contrastan las diferencias de los sistemas init de Gentoo.
* [[Sakaki's_EFI_Install_Guide|Sakaki's EFI Install Guide]] - En particular, el capítulo [[Sakaki's_EFI_Install_Guide/Configuring_systemd_and_Installing_Necessary_Tools|Configuring systemd and installing necessary tools]]
* [[OpenRC to Systemd Cheatsheet]]

== Recursos externos ==

* [https://www.freedesktop.org/wiki/Software/systemd/FrequentlyAskedQuestions FAQ]
* [https://www.freedesktop.org/wiki/Software/systemd/TipsAndTricks Tips and tricks]

== Referencias ==

{{reflist}}

[[Category:Init systems]]
