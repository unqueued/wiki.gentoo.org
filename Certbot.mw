{{Stub}}

From the website: "Anyone who has gone through the trouble of setting up a secure website knows what a hassle getting and maintaining a certificate can be. Letâ€™s Encrypt automates away the pain and lets site operators turn on and manage HTTPS with simple commands."

There are several options.

== Preliminary ==
Point an external IP at http (port 80/tcp) and https (port 443/tcp) at a webserver and setup DNS for it.  This is important.  You have to prove you own the IP/domain.  You could use dynamic DNS if necessary.

== app-crypt/letsencrypt ==
This is the ebuild for the official client which can be tricky to set up:  Here are the official docs - https://letsencrypt.readthedocs.org/en/latest/intro.html

== acme-tiny ==
acme-tiny is a short Python script which is useful for a quick way to get started

Grab this: https://github.com/diafygi/acme-tiny/ via GIT and put the .py in /usr/local/bin or:

{{RootCmd|wget https://github.com/diafygi/acme-tiny/raw/master/acme_tiny.py
|mv acme_tiny.py /usr/local/bin
|chmod +x /usr/local/bin/acme_tiny.py}}

* Make a directory for challenges to be created in
{{RootCmd|mkdir /var/www/localhost/acme-challenge/}}

* Add this to your Apache http vhost - ie port 80 vhost
{{FileBox|filename=/etc/apache2/vhosts.d/00_default_vhost.conf|title=Challenge alias in Apache|1=
/alias /.well-known/acme-challenge/ /var/www/localhost/acme-challenge/ 

<Directory /var/www/localhost/acme-challenge/> 
       AllowOverride None 
       Require all granted 
</Directory>
}}

* Set these in your Apache https vhost - ie port 443 vhost
{{FileBox|filename=/etc/apache2/vhosts.d/00_default_ssl_vhost.conf|title=SSL certificate settings for Apache|1=
SSLCertificateFile /var/lib/letsencrypt/chained.pem
SSLCertificateKeyFile /var/lib/letsencrypt/domain.key
}}

* Make a directory to hold the various files related to LE
{{RootCmd|mkdir /var/lib/letsencrypt
|cd /var/lib/letsencrypt
}}

* Create an account key, domain key and a CSR (replace www.example.co.uk with your host name)
{{RootCmd|openssl genrsa 4096 > account.key
|openssl genrsa 4096 > domain.key
|openssl req -new -sha256 -key domain.key -subj "/CN=www.example.co.uk" > domain.csr
}}

* Register and create the various certificate files
{{RootCmd|python acme_tiny.py --account-key ./account.key --csr ./domain.csr --acme-dir  /var/www/localhost/acme-challenge/ > ./signed.crt
|wget -O - https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.pem > intermediate.pem
|cat signed.crt intermediate.pem > chained.pem
}}

* Restart Apache (systemd)
{{RootCmd|systemctl restart apache2}}
* Restart Apache (OpenRC)
{{RootCmd|/etc/init.d/apache2 restart}}

* Renewal script
{{FileBox|filename=/usr/bin/local/renew-le-cert|title=LetsEncrypt Cert renew script|1=
<pre>
#!/bin/sh
python /var/lib/letsencrypt/acme_tiny.py --account-key /var/lib/letsencrypt/account.key --csr /var/lib/letsencrypt/domain.csr --acme-dir /var/www/localhost/acme-challenge/ > /tmp/signed.crt || exit
wget -O - https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.pem > intermediate.pem
cat /tmp/signed.crt intermediate.pem > /var/lib/letsencrypt/chained.pem
systemctl restart apache2
</pre>
}}

* Add a monthly cronjob
{{FileBox|filename=CRONJOB|1=
# Renew Lets Encrypt certificate
0 0 1 * * /usr/local/bin/renew-le-cert.sh 2>> /var/log/acme_tiny.log
}}

== References ==
* Website: https://letsencrypt.org/getting-started/

[[Category:Software]]
