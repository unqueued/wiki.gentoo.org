{{InfoBox stack
|{{InfoBox homepage|https://letsencrypt.org/|header=true}}
|{{InfoBox wikipedia|Let's Encrypt}}
|{{InfoBox github|certbot/certbot}}
|{{InfoBox odoc|https://letsencrypt.readthedocs.org/en/latest/}}
|{{InfoBox irc|letsencrypt}}
}}

Let's Encrypt is a free, automated, and open certificate authority. 

From the official website: "Anyone who has gone through the trouble of setting up a secure website knows what a hassle getting and maintaining a certificate can be. Letâ€™s Encrypt automates away the pain and lets site operators turn on and manage HTTPS with simple commands."<ref>https://letsencrypt.org/getting-started/</ref>

== Preliminary ==

Point an external IP at http (port 80/tcp) and https (port 443/tcp) at a web server and setup DNS for it.  This is important. You have to prove you own the IP/domain. You could use dynamic DNS if necessary.

== Client Software ==

=== Official Let's Encrypt Client ===

==== Installation ====

{{Tip|The ebuild for the official client can be tricky to set up. It is helpful to read the [https://letsencrypt.readthedocs.org/en/latest/intro.html official documentation] ''before'' proceeding with this article.}}

{{Emerge|app-crypt/letsencrypt}}

==== Usage ====

{{RootCmd|letsencrypt --help|output=<pre>
letsencrypt [SUBCOMMAND] [options] [-d domain] [-d domain] ...

The Let's Encrypt agent can obtain and install HTTPS/TLS/SSL certificates.  By
default, it will attempt to use a webserver both for obtaining and installing
the cert. Major SUBCOMMANDS are:

  (default) run        Obtain & install a cert in your current webserver
  certonly             Obtain cert, but do not install it (aka "auth")
  install              Install a previously obtained cert in a server
  revoke               Revoke a previously obtained certificate
  rollback             Rollback server configuration changes made during install
  config_changes       Show changes made to server config during installation
  plugins              Display information about installed plugins

Choice of server plugins for obtaining and installing cert:

  (the apache plugin is not installed)
  --standalone      Run a standalone webserver for authentication
  (nginx support is experimental, buggy, and not installed by default)
  --webroot         Place files in a server's webroot folder for authentication

OR use different plugins to obtain (authenticate) the cert and then install it:

  --authenticator standalone --installer apache

More detailed help:

  -h, --help [topic]    print this message, or detailed help on a topic;
                        the available topics are:

   all, automation, paths, security, testing, or any of the subcommands or
   plugins (certonly, install, nginx, apache, standalone, webroot, etc)
</pre>}}

=== acme-tiny (Alternative, minimalist client) ===

[https://github.com/diafygi/acme-tiny/ app-crypt/acme-tiny] is a short, auditable Python script which avoids a lot of the bloat included in the official client.  It is currently available in the [[User:NP-Hardass|NP-Hardass]]' overlay.

==== Installation ====

{{RootCmd
|layman -a np-hardass-overlay
|emerge -av app-crypt/acme-tiny
}}

==== Configuration ====

The documentation on [https://github.com/diafygi/acme-tiny/] is the best place to look for the most up to date information, but has been summarized below:

Make a directory for challenges to be created in:

{{RootCmd|mkdir /var/www/localhost/acme-challenge/}}

Add this to the Apache http vhost; IE port 80 vhost:

{{FileBox|filename=/etc/apache2/vhosts.d/00_default_vhost.conf|title=Challenge alias in Apache|1=
/alias /.well-known/acme-challenge/ /var/www/localhost/acme-challenge/ 

<Directory /var/www/localhost/acme-challenge/> 
       AllowOverride None 
       Require all granted 
</Directory>
}}

Set these in the Apache https vhost; IE port 443 vhost:

{{FileBox|filename=/etc/apache2/vhosts.d/00_default_ssl_vhost.conf|title=SSL certificate settings for Apache|1=
SSLCertificateFile /var/lib/letsencrypt/chained.pem
SSLCertificateKeyFile /var/lib/letsencrypt/domain.key
}}

Make a directory to hold the various files related to LE:

{{RootCmd|mkdir /var/lib/letsencrypt
|cd /var/lib/letsencrypt
}}

Create an account key, domain key and a CSR (replace www.example.co.uk with your host name):

{{RootCmd
|openssl genrsa 4096 > account.key
|openssl genrsa 4096 > domain.key
|openssl req -new -sha256 -key domain.key -subj "/CN=www.example.co.uk" > domain.csr
}}

Register and create the various certificate files:

{{RootCmd
|/usr/bin/acme_tiny --account-key ./account.key --csr ./domain.csr --acme-dir  /var/www/localhost/acme-challenge/ > ./signed.crt
|wget -O - https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.pem > intermediate.pem
|cat signed.crt intermediate.pem > chained.pem
}}

Reload configs for webserver:

{{RootCmd|service apache2 reload}}
or
{{RootCmd|service nginx reload}}
or
{{RootCmd|service lighttpd reload}}

Sample renewal script: 

{{FileBox|filename=/usr/bin/local/renew-le-cert|title=LetsEncrypt Cert renew script|1=
<pre>
#!/bin/sh
python /var/lib/letsencrypt/acme_tiny.py --account-key /var/lib/letsencrypt/account.key --csr /var/lib/letsencrypt/domain.csr --acme-dir /var/www/localhost/acme-challenge/ > /var/lib/letsencrypt/signed.crt || exit
wget -O - https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.pem > intermediate.pem
cat /var/lib/letsencrypt/signed.crt intermediate.pem > /var/lib/letsencrypt/chained.pem
service apache2 reload
</pre>
}}

Add a monthly cron job:

{{FileBox|filename=CRONJOB|1=
# Renew Lets Encrypt certificate
0 0 1 * * /usr/local/bin/renew-le-cert.sh 2>> /var/log/acme_tiny.log
}}

=== Manual (Get HTTPS For Free) ===
For those that are not interested in using scripts or want to configure things manually the first time,  the author of acme-tiny has provided a webpage that gives step by step instructions along with javascript to help walk you through setting up your certificates.  The guide may be found on [https://gethttpsforfree.com/ Get HTTPS for Free]

== See also ==

* [[Apache]] - The most popular HTTP server used the Internet.
* [[Nginx]] - A small, robust, and high-performance HTTP server and reverse proxy.
* [[Lighttpd]] - a very lightweight HTTP server.

== External resources ==

* [https://letsencrypt.readthedocs.org/en/latest/using.html#installation Manual installation] - In the event manual installation is preferred. Note: Portage will not track the installation if the Let's Encrypt is manually installed; this is ''not'' recommended by Gentoo developers.

[[Category:Software]]
