<languages />


{{Metadata|abstract=这篇指南介绍了LDAP的基础知识以及向你展示如何安装针对一组计算机认证目的的OpenLDAP。}}


这篇指南介绍了LDAP的基础知识以及向你展示如何安装针对一组计算机认证目的的OpenLDAP。


== OpenLDAP入门 ==

=== 什么是LDAP？ ===

LDAP代表着''轻量组目录访问协议''。基于X.500它包含了它的绝大部分主要功能，但是缺少X.500的更加深奥的功能。现在什么是这个X.500以及为什么会有一个LDAP？ 

X.500是一个OSI概念中的目录服务模型。它包含了命名空间定义和目录查询和更新协议。然而，X.500在很多场景中都太大了。进入LDAP。像X.500它为目录和协议提供一个数据/命名空间模型。不过，LDAP是为直接通过TCP/IP栈进行而设计。可以看出LDAP是X.500的一个瘦身版本。 

=== 我不理解。什么是目录？ ===

目录是为频繁查询但不频繁更新而设计的一个特殊的数据库。不像其它常规数据库，它们不包含事件支持或回滚功能。目录很容易复用以提供可用性和可靠性。当目录被复用，允许临时的不一致直到得到最终同步。 

=== 信息结构是什么样？ ===

目录中的所有信息都是垂直结构。更多的是，如果你想输入向目录中输入数据，目录必须知道如何在树中储存这个数据。让我们看看一个虚构的公司和一个像互联网的树。 

{{CodeBox|title=GenFic的组织架构，一家虚构的Gentoo公司|1=
dc:         com
             {{!}}
dc:        genfic         ## （组织）
          /      \
ou:   People   servers    ## （组织单元）
      /    \     ..
uid: ..   John            ## （组织单元特有的数据）
}}

因为您不能像上图一样使用ascii图形码向一个数据库中输入数据，所以这样一个树形结构中的每一个节点都要被定义。为了定义这样一个节点，LDAP使用“命名方案（Naming Scheme）”。大多数的LDAP发行版（包括OpenLDAP）已经包括了一揽子预定义（以及共同认可）的命名方案，如“inetOrgPerson”，或者“posixAccount”，“posixAccount”用来定义一个用户（user）的Unix/Linux相关属性，它是非常常用的。值得一提的是您可以考虑采用图形化的基于web的工具来管理LDAP，这样能轻松很多。参见[[#Working_with_OpenLDAP|实际使用OpenLDAP]]

感兴趣的用户推荐阅读 [http://www.openldap.org/doc/admin24/ OpenLDAP Admin Guide]

=== 所以……它可以用来做什么？ ===

LDAP可以用来做许多不同的事情呢。这篇文档聚焦于如何集中管理用户，把所有用户的信息保存在统一的LDAP目录里（统一并不意味着只有一台服务器，LDAP是支持高可用性与高冗余性的），另外还有其它一些目标也可以通过LDAP来实现。 

* 公钥基础架构

* 共享日历

* 共享地址簿

* 存储DHCP，DNS，......

* 系统级的配置管理（跟踪多台服务器的配置）

* 集中认证 (PosixAccount)

* ...

== OpenLDAP服务器配置 ==

域名“genfic.com”是这份指南中的一个例子，您当然想改变它，但是请确保其顶级节点是官方的合法域名，如net、com、cc、be......


我们首先要emerge OpenLDAP。请确保如下USE标记被使用：''berkdb, crypt, gnutls, ipv6, sasl, ssl, syslog, -minimal''

{{Emerge|openldap}}


OpenLDAP有一个主要用户，它被称为“rootdn（Root Distinguished Name）”，这个用户已经在应用中被写死，不可更改。但是与Unix中的root用户不同，rootdn仍然需要被指定适当的权限。rootdn用户可能仅在配置的上下文中被使用，也可能被用于目录的定义，相应地，rootdn用户可以使用配置文件里的密码和目录树中的密码来认证他们自己。（译者注：这里不太好理解，我的个人理解是：openldap的服务器采用/etc/slapd.conf来做配置，里面有一个rootdn条目，这里面指定的dn，例如cn=Manager,dc=genfic,dc=com就是ldap里面最牛的管理员，它可以在LDAP里面干任何事儿，另外openldap运行起来之后，它会维护一个用户信息数据库，这个数据库里面是可以没有cn=Manager,dc=genfic,dc=com这个dn的，当没有这个dn时，这个叫Manager的用户就是只可以管理ldap目录及其内容，但不能用这个用户在ldap客户端上登录，也不能保存关于Manager的个人信息，如电话、地址等，因为ldap没有存储这些信息的地方。但是您也可以在数据库中自己加上这个用户的相应节点，这时这个用户就可以像其它用户一样享受在客户端登录，保存个人信息等“福利”了。）

为了验证目的的用户密码（不管是rootdn的还是其它用户的）都可以被存储为明文或者哈希过的。很多哈希算法都是可用的，但是使用太弱（比MD5更弱）的加密算法是不被推荐的。SHA当前被认为是足够安全的算法。

下面的命令创建了一个给定口令的哈希值，命令的输出结果可以被用在{{Path|slapd.conf}} 配置文件中，或者目录中某一个用户的口令属性中。

{{RootCmd|slappasswd|output=<pre>
New password: my-password
Re-enter new password: my-password
{SSHA}EzP6I82DZRnW+ou6lyiXHGxSpSOw2XO4
</pre>
}}


现在我们编辑LDAP服务器的配置文件： {{Path|/etc/openldap/slapd.conf}}。这份 {{Path|slapd.conf}}是从openLDAP原包里来的，下面是一个范例配置，您可以用它替换掉系统中原来的文件来开始您的工作。 

{{FileBox|filename=/etc/openldap/slapd.conf|1=
include	/etc/openldap/schema/core.schema
include /etc/openldap/schema/cosine.schema
include /etc/openldap/schema/inetorgperson.schema
include /etc/openldap/schema/nis.schema
include	/etc/openldap/schema/misc.schema
 
pidfile  /var/run/openldap/slapd.pid
argsfile /var/run/openldap/slapd.args
 
## ## ServerID used in case of replication
serverID 0 
loglevel 0
 
## ## Certificate/SSL Section
TLSCipherSuite normal
TLSCACertificateFile /etc/openldap/ssl/ldap.crt
TLSCertificateFile /etc/openldap/ssl/ldap.pem
TLSCertificateKeyFile /etc/openldap/ssl/ldap.key
TLSVerifyClient never
 
## ## Access Controls
access to dn.base="" by * read
access to dn.base="cn=Subschema" by * read
access to *
  by self write
  by users read
  by anonymous read
 
## ## Database definition
database hdb
suffix "dc=genfic,dc=com"
checkpoint 32 30
rootdn "cn=Manager,dc=genfic,dc=com"
## ## rootpwd generated earlier via slappasswd command
rootpw "{SSHA}EzP6I82DZRnW+ou6lyiXHGxSpSOw2XO4" 
directory "/var/lib/openldap-data"
index objectClass eq
 
## ## Synchronisation (pull from other LDAP server)
syncrepl rid=000
  provider=ldap://ldap2.genfic.com
  type=refreshAndPersist
  retry="5 5 300 +"
  searchbase="dc=genfic,dc=com"
  attrs="*,+"
  bindmethod="simple"
  binddn="cn=ldapreader,dc=genfic,dc=com"
  credentials="ldapsyncpass"
 
index entryCSN eq
index entryUUID eq
 
mirrormode TRUE
 
overlay syncprov
syncprov-checkpoint 100 10
}}

要想深入了解配置文件的含义，我们建议您研读OpenLDAP Administrator's Guide。 

=== 验证配置 ===

在定制化{{Path|slapd.conf}} 配置文件之后，您可以使用下面的命令检查验证其是否配置无误：

{{Cmd|slaptest -v -d 1 -f /etc/openldap/slapd.conf}}

或者您也可以使用OLC风格的配置文件：

{{Cmd|slaptest -v -d 1 -F /etc/openldap/slapd.d}}

改变debug级别（上面的"-d 1"）可以得到更多的信息。如果顺利的话，您会看到“config file testing succeeded”。
如果发生错误，<code>slaptest</code>将会列出造成错误的行号（位于{{Path|slapd.conf}}）

需要注意的是：从2.4.23版本开始，OpenLDAP从传统的扁平的配置文件({{Path|slapd.conf}}) 切换到OLC风格的配置文件，并且将是缺省的配置方法。使用OLC风格的配置文件的一大好处是当配置需要被更改时，这一动态的后台配置（cn=config）不需要重启服务就可以生效。老用户可以通过设置了-f和-F参数的命令<code>slaptest</code> 将现有配置迁移到新的OLC风格的配置。传统的OLC是以ldif格式（这样可以保证可读性）保存在{{Path|/etc/openldap/slapd.d}} 目录中的。Gentoo用户目前还不一定需要进行这一配置文件的转换，但是未来老的方法将可能不被支持。

如果您想改变OpenLDAP服务器的配置，您必须至少要对<code>cn=config</code>赋予写权限（或者管理权限 ）。

下面的例子展示了如何在OLC（“cn=config”数据库）中向系统管理员赋予管理权限 ，我们需要在 {{Path|slapd.conf}} 的末尾添加一行配置：

{{FileBox|filename=/etc/openldap/slapd.conf|title=Granting root Linux account manage rights to cn{{=}}config|1=
database config
access to *
        by dn.exact="gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth" manage
        by * none
}}

{{RootCmd|mkdir /etc/openldap/slapd.d}}
{{RootCmd|slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d}}
{{RootCmd|chown -R ldap /etc/openldap/slapd.d}}

上面的命令将会转换并翻译配置文件（slapd.conf->OLC），您可能曾经想过用准备好的ldif文件来完成OLC配置文件的升级，不过假如您对此不那么熟悉，你就可以像我们这样先编辑 {{Path|slapd.conf}} ，然后用slaptest命令将其翻译为OLC配置文件（最终保存于 {{Path|slapd.d/}}中），最后不要忘记检查这个目录的权限是否可以被ldap系统用户访问。

您可以从产生的文件的注释中获取更多的指导。

下面这一行配置用于使能{{Path|slapd.d/}}（OLC）配置方法。 

{{FileBox|filename=/etc/conf.d/slapd|lang=bash|1=
OPTS="-F /etc/openldap/slapd.d -h 'ldaps:// ldap:// ldapi://%2fvar%2frun%2fopenldap%2fslapd.sock'"
}}

最后我们创建 {{Path|/var/lib/openldap-data}}目录（用于保存目录的实际数据）。 

{{RootCmd|mkdir -p /var/lib/openldap-data
|chown ldap:ldap /var/lib/openldap-data
|chmod 700 /var/lib/openldap-data}}


启动slapd服务： 

{{RootCmd|/etc/init.d/slapd start}}

如果启动服务没能成功，您可以将 {{Path|slapd.conf}}配置中''loglevel''的值设为4或更大，然后查看 {{Path|/var/log/messages}} 来获取更多的信息。

==== OLC样式的LDIF更新示例 ====

一些OLC风格的配置文件升级范例可以参见下文。

例如，改变OLC配置文件的存放路径：

{{FileBox|filename=fix-configs.ldif|1=
dn: cn=config
changetype: modify
delete: olcConfigFile
dn: cn=config
changetype: modify
replace: olcConfigDir
olcConfigDir: /etc/openldap/slapd.d
}}

改变OpenLDAP服务的日志级别：

{{FileBox|filename=loglevel.ldif|1=
dn: cn=config
changetype: modify
replace: olcLogLevel
olcLogLevel: stats sync
}}

为了确认这些改变，可以运行下面的命令：

{{RootCmd|ldapmodify -Y EXTERNAL -H ldapi:/// -f loglevel.ldif}}

== 配置OpenLDAP客户端工具 == 

编辑LDAP客户端的配置文件。这个文件会被ldapsearch和其它ldap命令行工具读取。

{{FileBox|filename=/etc/openldap/ldap.conf|title=添加以下|1=
BASE         dc=genfic, dc=com
URI          ldap://ldap.genfic.com:389/ ldap://ldap1.genfic.com:389/ ldap://ldap2.genfic.com:389/
TLS_REQCERT  allow
TIMELIMIT    2
}}

您可以用下面的命令测试运行中的服务器。 

{{Cmd|ldapsearch -x -D "cn{{=}}Manager,dc{{=}}genfic,dc{{=}}com" -W}}

如果您收到错误信息，您可以用 <code>-d 255</code>这个参数来增加debug级别，以便获取更详细的信息用于解决问题。

== 集中式认证客户端配置 ==

有很多方法/工具可以被用来做远程认证。一些发行版也提供了它们自己的很好用的配置工具。下面列出一些，排名不分先后。把本地用户认证与集中认证同时结合在一起是可行的。这一点非常重要，因为万一LDAP服务器不可用，至少您还可以通过root用户进行本地登录。

* SSSD  (Single Sign-on Services Daemon). 它主要的功能是为远程身份认证提供一个通用的框架，提供缓存与不在线的支持。它提供PAM与NSS模块，将来还会为扩展用户信息支持D-Bus接口。它也提供了一个更好的数据库来存储本地用户和扩展用户的数据。

* 使用 <code>pam_ldap</code> 登录到LDAP服务器并认证。口令不会在网络上以明文的方式发送。  

* NSLCD (Name Service Look up Daemon)。与SSSD类似，但更古老。

* NSS (Name Service Switch) 使用传统的 <code>pam_unix</code> 模块从网络上获取哈希口令。如果要允许用户变更他们的口令，还需要结合<code>pam_ldap</code>方法一起使用。

下面我们会用最少的必要配置来演示前两个方法使之工作。

=== 客户端PAM配置SSSD方法 ===

操作方法很简单，只有三个文件需要被编辑，如下： 

{{FileBox|filename=/etc/sssd/sssd.conf|lang=ini|1=
[sssd]
config_file_version = 2
services = nss, pam
domains = genfic
debug_level = 5
  
[nss]
filter_users = root,ldap,named,avahi,haldaemon,dbus,radiusd,news,nscd
  
[domain/genfic]
id_provider = ldap
auth_provider = ldap
ldap_search_base = dc=genfic,dc=com
ldap_tls_reqcert = never
# primary and backup ldap servers below [first server and],[second server]
ldap_uri = ldap://X.X.X.X,ldap://X.X.X.X
}}


按照如下文件所示增加“sss”到每一行的末尾，这样就可以将（对用户信息的）查询工作转交给sssd系统服务，你完成对这个文件的编辑后，就可以将sssd的后台服务启动起来了。

{{FileBox|filename=/etc/nsswitch.conf|title=Example nsswitch.conf with SSSD support|1=
passwd:     files sss
shadow:     files sss
group:      files sss
  
netgroup:   files sss
automount:  files sss
sudoers:    files sss
}}

最后一个文件是非常关键的。请在编辑它之前先打开另外一个终端窗口以便失败时退回（译者注：我因为开始一点也不懂pam的这个配置文件的原理，也没有重视这一条要求，当时就编辑错了，导致还得用引导盘引导系统后用root用户重新编辑这个文件，直至系统恢复）。文件中在行尾标注了 <code>#</code>的行即是用于使能远程认证。注意使用{{Path|pam_mkhomedir.so}} 来支持在用户登录时创建主目录（如果是首次在某一客户端登录的话）。

{{FileBox|filename=/etc/pam.d/system-auth|title=Enable pam_sss support|1=
#%PAM-1.0
# This file is auto-generated.
# User changes will be destroyed the next time authconfig is run.
auth        required      pam_env.so
auth        sufficient    pam_unix.so nullok try_first_pass
auth        requisite     pam_succeed_if.so uid >= 500 quiet
auth        sufficient    pam_sss.so use_first_pass                                         #
auth        required      pam_deny.so
  
account     required      pam_unix.so
account     sufficient    pam_localuser.so
account     sufficient    pam_succeed_if.so uid < 500 quiet
account     [default=bad success=ok user_unknown=ignore] pam_sss.so                         #
account     required      pam_permit.so
  
password    requisite     pam_cracklib.so try_first_pass retry=3
password    sufficient    pam_unix.so md5 shadow nullok try_first_pass use_authtok
password    sufficient    pam_sss.so use_authtok                                            #
password    required      pam_deny.so
  
session     required      pam_mkhomedir.so skel=/etc/skel/ umask=0077
session     optional      pam_keyinit.so revoke
session     required      pam_limits.so
session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
session     required      pam_unix.so
session     optional      pam_sss.so                                                        #
}}

好了，现在就可以试着从另外一个终端进行登录了。

=== 客户端PAM配置pam_ldap模块方法 ===

首先我们要配置PAM来允许LDAP认证。安装 {{Package|sys-auth/pam_ldap}}程序包以便让PAM支持LDAP授权，然后是 {{Package|sys-auth/nss_ldap}}以支持您的系统从LDAP服务器获取额外信息为 ({{Path|nsswitch.conf}})所用。 

{{Emerge|pam_ldap nss_ldap}}

最后一个文件是最关键的。在编辑之前请打开几个额外的root用户登录终端作好准备。行尾标有 <code>#</code> 的表示使能远程认证。

{{FileBox|filename=/etc/pam.d/system-auth|1=
#%PAM-1.0
 
auth       required     pam_env.so
auth       sufficient   pam_unix.so try_first_pass likeauth nullok
auth       sufficient   pam_ldap.so use_first_pass                                                    #
auth       required     pam_deny.so
 
account    sufficient   pam_ldap.so                                                                   #
account    required     pam_unix.so
 
password   required     pam_cracklib.so difok=2 minlen=8 dcredit=2 ocredit=2 try_first_pass retry=3
password   sufficient   pam_unix.so try_first_pass use_authtok nullok md5 shadow
password   sufficient   pam_ldap.so use_authtok use_first_pass                                        #
password   required     pam_deny.so
 
session    required     pam_limits.so
session    required     pam_unix.so
session    optional     pam_ldap.so                                                                   #
}}

改变 {{Path|/etc/ldap.conf}}为只读权限。 

{{FileBox|filename=/etc/ldap.conf|1=
## #host 127.0.0.1
## #base dc=padl,dc=com
 
base dc=genfic,dc=com
## #rootbinddn uid=root,ou=People,dc=genfic,dc=com
bind_policy soft
bind_timelimit 2
ldap_version 3
nss_base_group ou=Group,dc=genfic,dc=com
nss_base_hosts ou=Hosts,dc=genfic,dc=com
nss_base_passwd ou=People,dc=genfic,dc=com
nss_base_shadow ou=People,dc=genfic,dc=com
pam_filter objectclass=posixAccount
pam_login_attribute uid
pam_member_attribute memberuid
pam_password exop
scope one
timelimit 2
uri ldap://ldap.genfic.com/ ldap://ldap1.genfic.com ldap://ldap2.genfic.com
}}

下一步，把(OpenLDAP) {{Path|ldap.conf}} 文件从服务器拷贝到客户端，这样客户端就可以理解LDAP环境了。 

{{RootCmd|scp ldap-server:/etc/openldap/ldap.conf /etc/openldap}}

Finally, configure your clients so that they check the LDAP for system accounts: 

{{FileBox|filename=/etc/nsswitch.conf|1=
passwd:         files ldap
group:          files ldap
shadow:         files ldap
}}

If you noticed one of the lines you pasted into your {{Path|/etc/ldap.conf}} was commented out (the <code>rootbinddn</code> line): you don't need it unless you want to change a user's password as superuser. In this case you need to echo the root password to {{Path|/etc/ldap.secret}} in plaintext. This is '''DANGEROUS''' and should be chmoded to 600. What you might want to do is keep that file blank and when you need to change someone's password that's both in the LDAP and {{Path|/etc/passwd}}, put the pass in there for 10 seconds while changing the users password and remove it when done.

== 迁移已有数据到LDAP ==

Configuring OpenLDAP for centralized administration and management of common Linux/Unix items isn't easy, but thanks to some tools and scripts available on the Internet, migrating a system from a single-system administrative point-of-view towards an OpenLDAP-based, centralized managed system isn't hard either. 

Go to [http://www.padl.com/OSS/MigrationTools.html http://www.padl.com/OSS/MigrationTools.html] and fetch the scripts there. You'll need the migration tools and the {{Path|make_master.sh}} script. 

Next, extract the tools and copy the {{Path|make_master.sh}} script inside the extracted location: 

{{RootCmd|mktemp -d|output=<pre>
/tmp/tmp.zchomocO3Q
</pre>}}

{{RootCmd|cd /tmp/tmp.zchomocO3Q
|tar xvzf /path/to/MigrationTools.tgz
|mv /path/to/make_master.sh MigrationTools-47
|cd MigrationTools-47</pre>}}

The next step now is to migrate the information of your system to OpenLDAP. The {{Path|make_master.sh}} script will do this for you, after you have provided it with the information regarding your LDAP structure and environment. 

At the time of writing, the tools require the following input: 

{| class="wikitable" style="text-align: left;" 
|- 
! Input
! Description
! Example
|- 
| LDAP BaseDN
| The base location (root) of your tree
| dc=genfic,dc=com
|- 
| Mail domain
| Domain used in e-mail addresses
| genfic.com
|- 
| Mail host
| FQDN of your mail server infrastructure
| smtp.genfic.com
|- 
| LDAP Root DN
| Administrative account information for your LDAP structure
| cn=Manager,dc=genfic,dc=com
|- 
| LDAP Root Password
| Password for the administrative account, cfr earlier <code>slappasswd</code> command
| 
|-
|}

The tool will also ask you which accounts and settings you want to migrate. 

{{Warning| You don't need to make changes to pam.d/system-auth}}

== Replication ==

=== High availability ===

To setup replication of changes across multiple LDAP systems. Replication within OpenLDAP is, in this guide, set up using a specific replication account ( <code>ldapreader</code> ) which has read rights on the primary LDAP server and which pulls in changes from the primary LDAP server to the secondary. 

This setup is then mirrored, allowing the secondary LDAP server to act as a primary. Thanks to OpenLDAP's internal structure, changes are not re-applied if they are already in the LDAP structure.

=== Setting Up Replication ===

To setup replication, first setup a second OpenLDAP server, similarly as above. However take care that, in the configuration file:

* The ''sync replication provider'' is pointing to the ''other'' system

* The ''serverID'' of each OpenLDAP system is different

Next, create the synchronisation account. We will create an LDIF file (the format used as data input for LDAP servers) and add it to each LDAP server: 

{{Cmd|slappasswd -s myreaderpassword|output=<pre>
 {SSHA}XvbdAv6rdskp9HgFaFL9YhGkJH3HSkiM
</pre>}}

{{Cmd|cat ldapreader.ldif|output=<pre>
dn: cn=ldapreader,dc=genfic,dc=com
userPassword: {SSHA}XvbdAv6rdskp9HgFaFL9YhGkJH3HSkiM
objectClass: organizationalRole
objectClass: simpleSecurityObject
cn: ldapreader
description: LDAP reader used for synchronization
</pre>}}

{{Cmd|ldapadd -x -W -D "cn{{=}}Manager,dc{{=}}genfic,dc{{=}}com" -f ldapreader.ldif|output=<pre>
Password: ## enter the administrative password
</pre>}}

== LDAP Server Security Settings ==

=== OpenLDAP permissions ===

If we take a look at {{Path|/etc/openldap/slapd.conf}} you'll see that you can specify the ACLs (permissions if you like) of what data users can read and/or write: 

{{FileBox|filename=/etc/openldap/slapd.conf|1=
access to attrs=userPassword,gecos,description,loginShell
  by self write
  
access to *
  by dn="uid=root,ou=People,dc=genfic,dc=com" write
  by users read
  by anonymous auth
}}

This gives you access to everything a user should be able to change. If it's your information, then you got write access to it; if it's another user their information then you can read it; anonymous people can send a login/pass to get logged in. There are four levels, ranking them from lowest to greatest: <code>auth search read write</code>. 

The next ACL is a bit more secure as it blocks normal users to read other people their shadowed password: 

{{FileBox|filename=/etc/openldap/slapd.conf|1=
access to attrs="userPassword"
  by dn="uid=root,ou=People,dc=genfic,dc=com" write
  by dn="uid=John,ou=People,dc=genfic,dc=com" write
  by anonymous auth
  by self write
  by * none
 
access to *
  by dn="uid=root,ou=People,dc=genfic,dc=com" write
  by dn="uid=John,ou=People,dc=genfic,dc=com" write
  by * search
}}

This example gives root and John access to read/write/search for everything in the the tree below {{Path|dc{{=}}genfic,dc{{=}}com}}. This also lets users change their own <code>userPassword</code>'s. As for the ending statement everyone else just has a search ability meaning they can fill in a search filter, but can't read the search results. Now you can have multiple ACLs but the rule of the thumb is it processes from bottom up, so your toplevel should be the most restrictive one.

== Working with OpenLDAP ==

=== Maintaining the directory ===

You can start using the directory to authenticate users in apache/proftpd/qmail/samba. You can manage it with [https://www.ldap-account-manager.org/lamcms/ LAM (Ldap Account Manager)], phpldapadmin, diradm, jxplorer, or lat, which provide easy management interfaces.

== Acknowledgements ==

We would like to thank Matt Heler for lending us his box for the purpose of this guide. Thanks also go to the cool guys in #ldap @ irc.freenode.net 

[[Category:Server and Security]] {{Migrated|originalauthors=Benjamin Coles, swift, Brandon Hale, Benny Chuang, jokey, nightmorph}}
