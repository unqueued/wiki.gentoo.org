<languages />


<div class="mw-translate-fuzzy">
{{Metadata|abstract=Questo documento è una guida per far funzionare l'accelerazione 3D usando DRM con Xorg su Gentoo Linux.}}
</div>

<div class="mw-translate-fuzzy">
Questo documento è una guida per far funzionare l'accelerazione 3D usando DRM con Xorg su Gentoo Linux.
</div>

== Introduzione ==

=== Che cos'è l'accelerazione 3D e perché la voglio? ===

<div class="mw-translate-fuzzy">
Con l'accelerazione hardware 3D, il rendering tridimensionale usa il processore grafico della scheda video invece di occupare preziose risorse della CPU disegnando immagini 3D. Viene chiamata anche "accelerazione hardware" invece di "accelerazione software" in quanto senza questa accelerazione 3D la CPU stessa viene forzata a disegnare tutto quanto da sola usanto le librerie di rendering software Mesa, che richiedono parecchia potenza di calcolo. Mentre Xorg supporta tipicamente l'accelerazione hardware 2D, spesso è priva dell'accelerazione 3D. L'accelerazione hardware tridimensionale è preziosa in situazioni che richiedono il rendering di oggetti 3D come giochi, CAD 3D, e la realizzazione di modelli 3D.
</div> 

While Xorg typically supports 2D hardware acceleration, it often lacks hardware 3D acceleration. Three-dimensional hardware acceleration is valuable in situations requiring rendering of 3D objects such as games, 3D CAD, and modeling.

<div class="mw-translate-fuzzy">
=== Come ottengo l'accelerazione hardware 3D? ===
</div>

<div class="mw-translate-fuzzy">
In molti casi, esistono sia i driver binari sia quelli open-source. I driver open source sono da preferire in quanto si è su un sistema Linux e l'open source è uno dei suoi principi di base. Talvolta, i driver binari sono l'unica opzione, specialmente se la propria scheda grafica è talmente recente che non sono ancora stati scritti dei driver open source che supportino le sue funzionalità. I driver binari comprendono {{Package|x11-drivers/nvidia-drivers}} per le schede grafiche nVidia e {{Package|x11-drivers/ati-drivers}} per quelle AMD/ATI.
</div>

=== Che cos'è DRI? ===

<div class="mw-translate-fuzzy">
L'[http://dri.freedesktop.org/wiki/ Infrastruttura di Rendering Diretto (Direct Rendering Infrastructure)], anche conosciuta come DRI, è un framework che permette un accesso diretto all'hardware grafico in maniera efficiente e sicura. Esso comprende cambiamenti al server X, a numerosi librerie client ed al kernel. L'uso principale per DRI è quello di creare implementazioni OpenGL veloci.
</div> 

=== Che cos'è DRM e come si relaziona con Xorg? ===

DRM (Direct Rendering Manager) è un ''enhancement'' a Xorg che aggiunge l'accelerazione 3D alle schede grafiche aggiungendo i moduli del kernel necessari al rendering diretto. 

=== Scopo ===

Questa guida è rivolta alle persone che non riescono a far funzionare il rendering diretto con Xorg. DRM funziona per i seguenti driver: 

<div class="mw-translate-fuzzy">
* 3dfx
* intel
* matrox
* nouveau
* rage128
* radeon
* mach64
* sis300
* via
</div>

<div class="mw-translate-fuzzy">
Consultare la [http://dri.freedesktop.org/ homepage di DRI] per ulteriori informazioni e per la documentazione.
</div>

<div class="mw-translate-fuzzy">
== Installare Xorg e configurare il kernel ==
</div>

=== Installare Xorg ===

Si prega di consultare la[ https://wiki.gentoo.org/wiki/Xorg/Guide/it Guida di Configurazione di Xorg] per rendere Xorg pronto e funzionante. 

<div class="mw-translate-fuzzy">
=== Configurare il kernel ===
</div>

<div class="mw-translate-fuzzy">
Ricercare il proprio processore ed abilitare solo quello.
</div> 

<div class="mw-translate-fuzzy">
{{Emerge|pciutils}}
</div>

{{RootCmd|lspci {{!}} grep AGP|output=<pre>
# 00:01.0 PCI bridge: Intel Corp. 440BX/ZX/DX - 82443BX/ZX/DX AGP bridge (rev 03)
</pre>
}}

<div class="mw-translate-fuzzy">
Il risultato del comando sopra può non corrispondere a causa di hardware diverso.
</div>

<div class="mw-translate-fuzzy">
Se il proprio processore non è supportato dal kernel, si può tentare di passare <code>agp=try_unsupported</code> come parametro al kernel. Ciò userà le routine generiche di Intel per il supporto AGP. Per aggiungere questo parametro, modificare il file di configurazione del bootloader!
</div>

La maggior parte, se non tutti, i kernel dovrebbero avere queste opzioni. Quanto di seguito è stato configurato usando un kernel standard {{Package|sys-kernel/gentoo-sources}}.

{{RootCmd|ls -l /usr/src/linux |output=<pre>
lrwxrwxrwx 1 root root 22 2007-02-14 20:12 /usr/src/linux -> linux-2.6.18-gentoo-r4
</pre>}}

<div class="mw-translate-fuzzy">
Assicurarsi che {{Path|/usr/src/linux}} punti al proprio kernel attuale.
</div>

<div class="mw-translate-fuzzy">
{{RootCmd|cd /usr/src/linux
|make menuconfig}}
</div>


<div class="mw-translate-fuzzy">
{{KernelBox|title=Opzioni di accelerazione hardware|
<pre>
Processor type and features --->
  <*> MTRR (Memory Type Range Register) support
Device drivers --->
  Graphics support --->
    <M> /dev/agpgart (AGP Support) --->
      (The agpgart option is not present on 64-bit kernels;
      just choose your chipset support.)
      <M> Intel 440LX/BX/GX, I8xx and E7x05 support
      (Enable your chipset instead of the above.)
    <M> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
    <M> (Select your graphics card from the list)
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
=== Compilare ed installare il kernel ===
</div>

<div class="mw-translate-fuzzy">
{{RootCmd|make && make modules_install}}
</div>

<div class="mw-translate-fuzzy">
Non dimenticare di configurare {{Path|grub.conf}} oppure {{Path|lilo.conf}} ed eseguire <code>/sbin/lilo</code> se si usa LILO.
</div>

When using LILO, issue:

{{RootCmd|lilo}}

When using GRUB 2, run:

{{RootCmd|grub-mkconfig -o /boot/grub/grub.cfg}}

<div class="mw-translate-fuzzy">
=== Aggiungere il proprio utente al gruppo video ===
</div>

<div class="mw-translate-fuzzy">
Successivamente, aggiungere il/i proprio/propri utente/i al gruppo video:
</div> 

{{RootCmd|gpasswd -a $USER video}}

== Configurare il rendering diretto ==

=== Configurare Xorg ===

<div class="mw-translate-fuzzy">
Teoricamente aggiungere il proprio utente al gruppo <code>video</code>  è sufficiente per abilitare il rendering diretto. Tuttavia, può essere necessario creare un file in {{Path|/etc/X11/xorg.conf.d/}}. Si può chiamarlo come si vuole; l'importante è che finisca con {{Path|.conf}}. Aprire il proprio editor di testo e creare un file con il seguente contenuto:
</div> 

{{FileBox|filename=/etc/X11/xorg.conf.d/10-dri.conf|1=
Section "Device"
  Driver "radeon"
EndSection
Section "dri"
  Mode 0666
EndSection
}}

<div class="mw-translate-fuzzy">
Sostituire radeon con il nome del proprio driver.
</div>

=== Cambiamenti a /etc/conf.d/modules ===

Sarà necessario aggiungere il nome del modulo che viene usato dalla propria scheda grafica a {{Path|/etc/conf.d/modules}} per assicurarsi che il modulo sia caricato automaticamente quando il sistema si avvia. 

{{FileBox|filename=/etc/conf.d/modules|1=
modules="intel-agp" # Sostituire con il proprio driver
}}

{{Note/it|Se si è compilato <code>agpgart</code> come modulo, è necessario aggiungere anch'esso a {{Path|/etc/conf.d/modules}}.}}

== Testare l'accelerazione 3D ==

=== Riavviare con il nuovo kernel ===

Riavviare il proprio computer con il nuovo kernel ed effettuare l'accesso come normale utente. È giunto il momento di controllare se il rendering diretto è presente e se funziona bene. <code>glxinfo</code> e <code>glxgears</code> sono parte del pacchetto {{Package|x11-apps/mesa-progs}}, quindi è meglio assicurarsi che sia installato prima di eseguire questi comandi.

{{Cmd|startx}}

Non c'è bisogno di caricare moduli per il proprio driver o agpgart, nemmeno se sono stati compilati come moduli. Verranno caricati automaticamente.

{{Cmd|glxinfo {{!}} grep rendering|output=<pre>
direct rendering: Yes
</pre>}}

<div class="mw-translate-fuzzy">
Se il risultato è "No", allora non si ha acccelerazione 3D.
</div>

{{Cmd|glxgears}}

Controllare i frame al secondo (frames per second - FPS) con la dimensione predefinita. Il numero dovrebbe essere significativamente più grande rispetto a prima di configurare DRM. Effettuare questo controllo mentre la CPU è il più inattiva possibile.

<div class="mw-translate-fuzzy">
{{Note/it|Gli FPS possono essere limitati dal tasso di aggiornamento del proprio schermo, quindi è bene ricordarlo se <code>glxgears</code> riporta dei valori compresi tra 70 e 100 FPS. {{Package|games-fps/ut2004-demo}} o altri giochi 3D sono strumenti di benchmark migliori, in quanto forniscono dei risultati effettivi delle prestazioni.}}
</div>

=== Ottenere il massimo dal rendering diretto ===

<div class="mw-translate-fuzzy">
Se si vogliono più funzionalità, per prestazioni od altre ragioni, controllare la [http://dri.freedesktop.org/wiki/FeatureMatrix matrice delle caratteristiche] sul sito web DRI oppure la [http://dri.sourceforge.net/doc/dri_driver_features.phtml lista delle caratteristiche] su Sourceforge.
</div> 

== Risoluzione dei problemi ==

<div class="mw-translate-fuzzy">
=== Non funziona. Il rendering non c'è e non so dire il perché. ===
</div>

Eseguire <code>modprobe radeon</code> prima di cominciare il server X (sostituire <code>radeon</code> con il nome del proprio driver). Inoltre, provare a compilare agpgart nel kernel anziché come modulo.

<div class="mw-translate-fuzzy">
=== Quando eseguo startx, ottengo questo errore: "[drm] failed to load kernel module agpgart" ===
</div>

<div class="mw-translate-fuzzy">
Ciò è dovuto al fatto che agpgart è stato compilato nel kernel anziché come modulo. Ignorare il messaggio a meno che non si abbiano problemi.
</div>

<div class="mw-translate-fuzzy">
=== Ho una scheda grafica Radeon, e voglio l'uscita TV. ===
</div>

<div class="mw-translate-fuzzy">
I driver sviluppati originariamente dal progetto [http://gatos.sf.net GATOS] sono stati uniti al codice di base di Xorg. Non si ha bisogno di alcunché di speciale per l'uscita TV; {{Package|x11-drivers/xf86-video-ati}} funzionerà bene.
</div>

<div class="mw-translate-fuzzy">
=== Non funziona. La mia scheda grafica è così incredibilmente nuova e forte che non è affatto supportata. ===
</div>

<div class="mw-translate-fuzzy">
Provare i driver binari. Per schede AMD, usare <code>ati-drivers</code>; un elenco è disponibile su  [http://support.amd.com/us/gpudownload/Pages/index.aspx http://support.amd.com/us/gpudownload/Pages/index.aspx]. Se essi non la supportano, usare fbdev. È lento, ma funziona.
</div>

<div class="mw-translate-fuzzy">
=== Ho una scheda PCI e non funziona. Aiuto! ===
</div>

Creare un file di configurazione in {{Path|/etc/X11/xorg.conf.d/}}; chiamarlo come si ritiene opportuno a patto che termini con il suffisso {{Path|.conf}}. Inserire il seguente codice: 

{{FileBox|filename=/etc/X11/xorg.conf.x/10-pcimode.conf|title=Aggiungere ForcePCI Mode|1=
Section "Device"
  Option "ForcePCIMode" "True"
EndSection
}}

== Risorse esterne ==

<div class="mw-translate-fuzzy">
* [https://forums.gentoo.org/viewtopic.php?t=46681 Rendering diretto (DRI) usando X11-DRM] sui forum di Gentoo
* [https://forums.gentoo.org/viewtopic.php?t=29264 Guida all'installazione di Radeon 7000-9700 DRI CVS] sui forum di Gentoo
* [http://dri.freedesktop.org/ http://dri.freedesktop.org/]
</div>

[[Category:X.Org]] {{Migrated|originalauthors={{Dev|dberkholz}}, peesh, {{Dev|nightmorph}}}}
