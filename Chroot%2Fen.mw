<languages />

{{InfoBox stack
|{{InfoBox wikipedia|header=true}}
}}

Chroot ('''Ch'''ange '''root''') is a Unix system utility used to change the apparent root directory to create a new environment logically separate from the main system's root directory. This new environment is known as a "chroot jail." A user operating inside the jail cannot see or access files outside of the environment they have been locked into.

One of the main uses for chrooting is to create a separate Linux system on top of a the current one for the purpose of testing or software compatibility. Chroot is often seen as a lightweight alternative to virtualization because it is able to run without the overhead of a hypervisor.

== Prerequisites ==

=== Setting up the environment ===

When creating a new chroot setup, the first thing needed is a directory for the chroot to reside in. For example, a chroot could be created in {{Path|/mnt/mychroot}}:

{{Cmd
|mkdir /mnt/mychroot
|cd /mnt/mychroot
}}

To mount an existing installation from a partition the following command can be ran. Be sure to replace the <code><DEVICE></code> string in the example below with the drive and partition of the existing installation:

{{Cmd
|mkdir /mnt/mychroot
|mount /dev/<DEVICE> /mnt/mychroot
}}

If an installation has been previously created in a sub directory of the current root file system the above steps can be skipped.

=== Unpacking system files and the Portage tree (new installations) ===

When building a new install, the next step is to download the stage3 and Portage tarballs and set them up in the chroot location. For more information on this process please see [[Handbook:AMD64/Installation/Stage#Downloading_the_stage_tarball|Downloading the stage tarball]] and [[Handbook:AMD64/Installation/Stage#Unpacking_the_stage_tarball|Unpacking the stage tarball]] in the Gentoo [[Handbook:Main_Page|Handbook]].

{{RootCmd
|links http://distfiles.gentoo.org/releases/amd64/autobuilds/
|tar xvjpf stage3-*.tar.bz2 -C /mnt/mychroot
|links http://distfiles.gentoo.org/snapshots/
|tar xvjf portage-*.tar.bz2 -C /mnt/mychroot/usr
}}

== Configuration ==

Before entering the chroot a number of directories need to be mounted:

{{RootCmd
|mount --rbind /dev /mnt/mychroot/dev
|mount --make-rslave /mnt/mychroot/dev
|mount -t proc /proc /mnt/mychroot/proc
|mount --rbind /sys /mnt/mychroot/sys
|mount --make-rslave /mnt/mychroot/sys
|mount --rbind /tmp /mnt/mychroot/tmp
}}

Some basic configuration files will need to be copied from the host, do not copy over {{Path|make.conf}} when using an existing installation:

{{Cmd
|cp /etc/portage/make.conf /mnt/mychroot/etc/portage # When using an existing installation, skip this command.
|cp /etc/resolv.conf /mnt/mychroot/etc
}}

== copypasta option (optional)  ==
It's possible to invoke this command to save time if you're able to copy+paste.

{{Warning|Do not forgett to change <b>/mnt/mychrooto</b> AND <b>/dev/sda4</b> for your variables if neccesary!!}}

{{RootCmd
| mkdir /mnt/mychroot && cd /mnt/mychroot && mount /dev/sda4 /mnt/mychroot && mount --rbind /dev /mnt/mychroot/dev && mount --make-rslave /mnt/mychroot/dev && mount -t proc /proc /mnt/mychroot/proc && mount --rbind /sys /mnt/mychroot/sys && mount --make-rslave /mnt/mychroot/sys  && mount --rbind /tmp /mnt/mychroot/tmp && chroot /mnt/mychroot /bin/bash}}

In Chroot environment do not forgett on:

{{RootCmd
|source /etc/profile
|env-update
|export PS1{{=}}"(chroot) $PS1"
}}

== Usage ==

Once done enter the chroot environment by executing the following commands:

{{RootCmd
|chroot /mnt/mychroot /bin/bash
|env-update
|source /etc/profile
|<nowiki>export PS1="(chroot) $PS1"</nowiki>
}}

When creating a new installation Portage should be synced to make sure everything is up to date.

{{RootCmd|emerge --sync}}

The system is now ready; feel free to install software, mess with settings, test experimental packages and configurations without having any effect on the main system. To leave the chroot simply type {{c|exit}} or press {{Key|Ctrl}}+{{Key|d}}. Doing so will return the console back to the normal environment. Do not forget to {{c|umount}} the directories that have been mounted.

=== Init scripts ===

If setting up chroots is a task that is needed to be performed often, it is possible to speed up the mounting of the directories by using an init script. The script could be added to the default runlevel and therefore set up automatically on system boot:

{{FileBox|filename=/etc/init.d/mychroot|lang=bash|1=
#!/sbin/openrc-run
 
depend() {
   need localmount
   need bootmisc
}
 
start() {
     ebegin "Mounting chroot directories"
     mount -o rbind /dev /mnt/mychroot/dev > /dev/null &
     mount -t proc none /mnt/mychroot/proc > /dev/null &
     mount -o bind /sys /mnt/mychroot/sys > /dev/null &
     mount -o bind /tmp /mnt/mychroot/tmp > /dev/null &
     eend $? "An error occurred while mounting chroot directories"
}
 
stop() {
     ebegin "Unmounting chroot directories"
     umount -f /mnt/mychroot/dev > /dev/null &
     umount -f /mnt/mychroot/proc > /dev/null &
     umount -f /mnt/mychroot/sys > /dev/null &
     umount -f /mnt/mychroot/tmp > /dev/null &
     eend $? "An error occurred while unmounting chroot directories"
}
}}

When using a different directory or partition, add the necessary mounting commands in the <code>start()</code> function and change {{Path|/mnt/chroot}} to the appropriate name.

== See also ==

* [[Project:X86/Chroot Guide|Chroot Guide]]
* [[Chrooting_proxy_services|Chrooting proxy services]]
* {{See also|Security Handbook/Chrooting and virtual servers}}


[[Category:Core system]]
