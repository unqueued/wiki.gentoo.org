<languages />


{{Metadata|abstract=This article will provide instructions on to set up the Fluxbox window manager for X11.}}

This article will provide instructions on to set up the Fluxbox window manager for X11.

== Introduction ==

=== Introduction to the Fluxbox window manager ===

For those who are unfamiliar with Linux's desktop model, window managers (WMs) are the applications which are run by X11 to manage other graphical programs. WMs control where each window is placed, its size, and which desktop(s) have access to it. This can be done automatically via a set of user-defined rules or can be done at runtime with the mouse and possibly keyboard shortcuts, depending on the specific WM. 

Some WMs, however, take on more functionality than just window management. Fluxbox also provides a platform for launching applications, configuring keyboard shortcuts and background images, as well as displaying information with the slit. GNOME's default WM, Metacity, does not include these things, but they are available through other GNOME programs. Thus, one cannot truly say that Fluxbox is a lightweight WM. However, since Fluxbox includes everything necessary for a basic desktop, many people use it in place of larger desktop suites like [[GNOME]] or [[KDE]].

To make things even more confusing, however, Fluxbox can replace the default WM for GNOME or KDE. For example, some people find that Metacity, GNOME's window manager, simply does not have the flexibility they need, but that Fluxbox does not have all the built-in applications and integration they desire from a complete desktop environment. Thus, a person could use Fluxbox to manage the windows and GNOME for the rest. Note, however, that with this setup there are some issues caused by overlapping feature sets. 

Fluxbox can also be expanded by third party software. This is often ideal in situations where hardware resources are limited, or even just as a matter of personal taste. 

This guide is aimed at those who are new to Fluxbox, curious, or who are just wanting to get more out of the Gentoo/Fluxbox experience. This guide will also illustrate how to get more (yet quite optional) functionality by using third party programs which work well with Fluxbox. 

== Installing Fluxbox ==

First, make sure a working X environment has been installed, as shown in the [https://wiki.gentoo.org/wiki/Xorg/Configuration X Server's configuration article].

=== USE flags ===

{{USEflag|package=x11-wm/fluxbox|desc=Optional USE flags for {{Package|x11-wm/fluxbox}}:
|bidi
|imlib
|nls
|slit
|toolbar
|truetype
|vim-syntax
|xinerama
}}

=== Base installation ===

Before installing Fluxbox take a look at some of the available USE flags (listed above). 

While the <code>gnome</code> and <code>kde</code> USE flags are provided to give compatibility with these environments, it has been the author's experience that these USE flags are not needed. If you desire qt, gtk+, or any KDE/GNOME utility then you are free to emerge and configure those independently. The <code>gnome</code> and <code>kde</code> flags simply add support for the respective protocols, and do not depend on external libraries. However, they do increase the Fluxbox binary size. 

There is also a <code>vim-syntax</code> flag to make configuration easier later on. This flag will install <code>fluxbox-syntax</code>, a special Fluxbox color scheme for <code>vim</code>. This enables users to more readily see the contents of their keys and init files for Fluxbox. It's a tiny extension for vim, so it's highly recommended. 

Finally, there are two flags that customize the functionality of Fluxbox, <code>slit</code> and <code>toolbar</code>. These flags are provided so that users who don't need the [http://fluxbox-wiki.org/index.php?title=Faqs#What_is_the_slit slit] or the [http://fluxbox.org/features/ toolbar] can compile Fluxbox without them. This is useful if you want to run an extremely minimal environment, or if you plan to use different applications that provide these features, such as standalone panels or docks. 

Once the USE flags have been decided, add them to the {{Path|/etc/portage/package.use}} file. For example, the following command will setup Fluxbox to use <code>truetype</code> and <code>vim-syntax</code> but will keep the binary small by not pulling in support for KDE or GNOME protocols:

{{RootCmd|echo "x11-wm/fluxbox -gnome -kde truetype vim-syntax" >> /etc/portage/package.use}}

It is also necessary to have a program lock the X display to prevent unauthorized access, so it would be wise to also emerge <code>xlockmore</code>. The vast majority of users will also want the ability to set their own background, so we will emerge <code>eterm</code>, which doubles as a nice X11 terminal.

{{Emerge|x11-misc/xlockmore x11-terms/eterm}}

=== Emerge ===

{{Emerge|x11-wm/fluxbox}}

That is it; Fluxbox is now installed! However, it is likely it will not be used efficiently with just those tools. The following sections will help install other potentially necessary packages, and configure Fluxbox and the third party programs to work better for the user. Keep in mind that all these steps are optional, so feel free to pick and choose from what is presented as best suited.

== Configuring Fluxbox ==

=== Preparing X11 ===

Fluxbox is simply another program that runs on X11. If desired, one can <tt>startx</tt> and then type <tt>fluxbox</tt> at in an <tt>xterm</tt> window. However, to say the least, this is annoying. If one does not desire to boot to the GUI, but instead wants to start X11 manually, it is possible to have X automatically load Fluxbox by executing, as a normal (non-root) user: 

{{Cmd|echo "exec startfluxbox" > ~/.xinitrc}}

The above method also not ideal for most users, as they want to have the desktop environment ''all'' the time; it is a pain to type <tt>startx</tt> when desiring to use a GUI every time the system boots. It also presents a security risk to the unaware. If the X11 display is locked using <tt>xlock</tt>, but run X11 from a console, then someone with physical access to the system can switch to that console, kill X11, and use whatever account is logged in. The only way to prevent this is to either background X11 or run it in <tt>screen</tt>, detach the <tt>screen</tt> session, then logout of the console. This tedious task should not have to be performed. When graphical login manager this problem does not exist. However, graphical login managers require running X11 as root, which may be a bad thing. There are, as of this writing, no exploits that the author is aware of for the current version, but if one is concerned, then do not use X11 at all or use the above method with <tt>screen</tt>. Note that this is not a Fluxbox issue; it is an issue with X11 itself. 

There are a number of graphical login managers to choose from; we will be using [http://slim.berlios.de SLiM]. You may use another manager at your option, but SLiM works well for Fluxbox, as well as any other environments you may have installed such as GNOME, KDE, or Xfce. 

{{Emerge|slim}}
{{RootCmd|rc-update add xdm default}}

{{RootCmd|rc-update add xdm default}}

{{Important|Be sure to emerge <code>slim</code> and add '''xdm''' to the bootscript, and not the other way around! Switching these will cause failure. We will also need to modify one system-wide config file:}}

{{FileBox|filename=/etc/conf.d/xdm|title=Setting the display manager to slim|lang=bash|1=
DISPLAYMANAGER="slim"
}}

=== Themes and Artwork ===

This section can be skipped for a minimal footprint, however it is nice to allow users to customize their WM's appearance. Themes specific to Fluxbox, Gentoo artwork for any WM, and themes that can be used on any *box WM will be installed. 

{{Emerge|commonbox-styles commonbox-styles-extra fluxbox-styles-fluxmod gentoo-artwork}}

=== Running Fluxbox for the first time ===

Now Fluxbox ready to run for the first time. It will create a directory called {{Path|~/.fluxbox/}} in each user's home directory, which is where Fluxbox will store its settings and populate them with some default values. 

{{Cmd|startx}}

If SLiM or another display manager has been installed, be sure to start it by becoming root and running: 

{{RootCmd|/etc/init.d/xdm start}}

Then choose Fluxbox as your session and login with your regular user. 

Once Fluxbox is running, it will look pretty plain. You should see a blank desktop with a toolbar at the bottom. You can then right-click anywhere on your desktop to bring up the menu. From there you should be able to start up any X applications you would like to run, or open up a terminal from which you can run anything you like. 

=== Fluxbox Keys ===

Fluxbox comes with a very weak set of default keysets. It enables a user to switch windows and desktops, and no more. Before changing it, there are a few things necessary to know. In the Fluxbox keys file, there are some strange modifiers. Mod1 is commonly known as the "Alt" key, and Mod4 is the unspeakable (windows) key. Control and Shift are Control and Shift. However, it is usually best to use Alt/Windows keys because other X11 programs tend to use Control and Shift for their own shortcuts. 

All of these are independent, so feel free to leave out anything not desired, or modify this to your own needs. This guide uses what the author assumes to be the most common programs, so also substitute the name of the package used if it differs from what appears here. For more information, read the man page for Fluxbox. 

With that out of the way, fire up a text editor (non-root user), point it to {{Path|~/.fluxbox/keys}}, and begin enhancing some shortcuts! 

{{FileBox|filename=~/.fluxbox/keys|title=Modifying keyboard shortcuts|1=
# locks X11 display to the current user
Mod4 l   :ExecCommand xlock
  
# opens a number of programs with quickkeys. These are just examples, I am sure
# you get the point...
Mod1 f   :ExecCommand firefox
Mod1 t   :ExecCommand thunderbird
Mod1 o   :ExecCommand oowriter
Mod1 v   :ExecCommand gvim
  
# Fluxbox has no sound control, so we need to do a hack to get one
# (assumes alsa usage. if you use oss, then you are on your own)
Mod1 e   :ExecCommand Eterm -name alsa -e alsamixer
  
# This launches fbrun, which in turn launches other programs
Mod1 r   :ExecCommand fbrun
  
# Program Control. It just makes life simpler...
Mod1 4   :Close
Mod1 m   :Minimize
  
# if you have aterm (emerge x11-terms/aterm), then this opens a really nice
# transparent aterm with no borders, fitting nicely with 1024x768
# resolution, while still leaving room for conky. Once again, feel free to
# modify.
Mod1 a   :ExecCommand aterm -name aterm -sl 3000 -tr +sb -sr -sk -bg black -fg \
white -fade 90 -bl -tn xterm -fn \
-misc-fixed-medium-r-normal-*-*-120-*-*-c-*-iso8859-15 -g 116x57
  
# similar to the above, but opens a transparent rooted terminal. you must, of
# course, know the root password to use this
Mod1 s   :ExecCommand aterm -name aterm -sl 3000 -tr +sb -sr -sk -bg black -fg \
white -fade 90 -bl -tn xterm -fn \
-misc-fixed-medium-r-normal-*-*-120-*-*-c-*-iso8859-15 -g 116x57 -e su -
}}

=== System Monitor ===

It is a common desire to setup a system monitor for X11 on desktop systems. Gkrellm ({{Package|app-admin/gkrellm}} is a commonly used monitor, but in the spirit of Fluxbox minimalism, a simpler monitor will be used. Welcome <tt>conky</tt>. If desired, use another monitor; there are plenty of instructions elsewhere on the wiki. 

{{Emerge|app-admin/conky}}

The default config file for Conky is rather weak, but more info can be found by reading the manpage or the [[Conky/HOWTO|Gentoo Linux Conky Howto]].

=== Icons ===

Fluxbox does not come with a utility or program to draw icons to the desktop; everything is handled by keyboard shortcuts, or the right-click menu. iDesk is a program that can be used to fulfill this need. It is aimed at users of minimal WMs like ourselves who want to display icons in the root window, and it even supports funky graphic effects like transparency! Despite its name, iDesk is not affiliated with Apple or Mac (to the best of the author's knowledge). Installing iDesk is as simple as: 

{{Emerge|idesk}}

Once installed, it will be necessary to configure iDesk so that it is able to display the icons we desire. Its configuration file can be found at {{Path|~/.ideskrc}}. This is a rather lengthy task, and can't be well covered in this guide. The following resources might be useful in order to help you configure iDesk: <code>man idesk</code>, [http://idesk.sourceforge.net/wiki/index.php/Idesk-usage iDesk's Usage Guide] and this [https://forums.gentoo.org/viewtopic-t-87262.html thread in the Gentoo Forums].

=== Graphical File Manager Options ===

It is important to note that Gentoo does not need a file manager. It is perfectly possible, and indeed simpler (in the author's humble opinion), to do file manipulation by command-line. However, not everyone agrees...

Many users who are new to Gentoo/Fluxbox are put off by the lack of a graphical file manager such as <code>nautilus</code> in GNOME. Fluxbox itself does not provide such a program, but as always, it is simple to acquire one. There are many choices, but this guide will present three, one for the [[#Gentoo File Manager - Minimalism|gentoo]] who likes text only and two for the user who likes [[#Rox File Manager - Includes Icons|rox]] to [[#Thunar File Manager|thunar]]. It is also possible, of course, to install all three and try them out.

==== Gentoo File Manager ====

Gentoo is a minimalistic file manager which seeks to provide the benefits of a GUI interface without the bloat which is commonly associated. 

{{Emerge|gentoo}}

{{Note|The Gentoo file manager is a separate project from the Gentoo Linux distribution. For more information on this, see the Gentoo [http://www.gentoo.org/main/en/name-logo.xml#doc_chap4 Name and Logo Usage Guidelines].}}

The Gentoo file manager aims to be fully configurable via GUI, so feel free to tweak.

=== Rox File Manager - Includes Icons ===

Rox is a file manager which uses icons as well as text and is much like Windows' Explorer. 

{{Emerge|rox}}

Rox behaves much like "traditional" file managers, so its interface should be intuitive. If not, there always are manpages.

==== Thunar File Manager ====

[http://thunar.xfce.org/ Thunar] is a lightweight, fast file manager that, like Rox, behaves much like "traditional" file managers. It includes icons and text, and it is easy to use. Though originally designed for [http://www.xfce.org Xfce], it makes a nice complement to a Fluxbox-based system. 

{{Emerge|xfce-base/thunar}}

=== Picture Viewer ===

Many WMs come with utilities to view pictures in a directory. These applications are small and lightweight, and do not allow for editing (which is assumed to be done by the <code>gimp</code> or similar). This is necessary if you use a command line, <code>gentoo</code>, or <code>rox</code> for a file manager. Though <code>thunar</code> can display image thumbnails, a separate lightweight image viewer is still a good idea. 

{{Emerge|gqview}}

<tt>gqview</tt> can be launched in any directory, and can browse through any supported picture format. 

=== Setting a theme, background, and a startup script ===

Fluxbox has a number of themes that can be accessed by the right click menu, then "Fluxbox menu," and "System Styles." These themes usually set their own background, which is either a single color or a gradient of some type. Most people prefer to set their own background, and keep it no matter what theme they chose. To do so, we need to edit another of Fluxbox's files, which governs startup behavior. So fire up that text editor again, and point it to {{Path|~/.fluxbox/startup}}.

If this file exists, then clear it. Add the following to the newly created file, uncommenting as needed, and filling in values for the CAPS.

{{FileBox|filename=~/.fluxbox/startup|title=Editing startup scripts for Fluxbox|lang=bash|1=
# Gentoo's Fluxbox startup script
  
# Programs which need to run constantly, as opposed to a one time execution,
# this means they need an "&" (ampersand) at the end of the command.
  
# Show the Fluxbox splash-screen
#fbsetbg -C /usr/share/fluxbox/splash.jpg
  
# This sets a desktop background image. A program must be setup
# to do this (x11-terms/eterm is recommended)
#fbsetbg -f PATH_TO_IMAGE
  
# Custom fonts directory
#xset +fp PATH_TO_FONT_DIRECTORY
  
# Starts the icons program
#idesk &
  
# This MUST be the last command!
exec /usr/bin/fluxbox -log ~/.fluxbox/log
}}

=== Menu generation ===

The author uses a text editor to create menus. If this sounds appealing, please skip this section and proceed to [[#Editing Menus by Hand|Editing Menus by Hand]]. 

It is possible to edit {{Path|~/.fluxbox/menu}} by hand after using an automatic generator (see next section), to add packages or delete those which are not used. Note when something is deleted from this menu, it does not delete the package from the system; only a link is removed from the individual user's menu. The program can still be run by command-line or alternate methods (hotkeys, etc.). 

There is a program already on your system called <tt>fluxbox-generate_menu</tt>, which can be used to generate menus. To run it (as a non-root user): 

{{Cmd|fluxbox-generate_menu -is -ds}}

It is recommended <tt>fluxbox-generate_menu</tt> (listed above) is used instead of other programs that accomplish similar tasks. The reason for the recommendation is that other programs may not understand Gentoo's filesystem directory structure, where <tt>fluxbox-generate_menu</tt> does.

This can also be done from the Fluxbox menu itself. There is usually an entry in the "Fluxbox" menu called "Regen Menu" which will re-run this script, looking for any new applications that have been installed since the last time you ran it. 

{{Note|It is possible to use this method to auto-generate the menu and still have some manual control over it. Creating and editing a {{Path|~/.fluxbox/usermenu}} file by hand (see the next section for syntax) will give the user a personalized menu which will not be erased the next time the script has been run.}}

=== Editing Menus by Hand ===

Fluxbox's menu is a text file that follows a quite simple syntax, described in this section. The default menu definition is present in the {{Path|~/.fluxbox/menu}} file. 

Menu entries for executing applications are defined by the <code>[exec]</code> element. You can define an entry, either under the <code>[begin]</code> definition (the menu root), or between a <code>[submenu]</code> and its corresponding <code>[end]</code> line (submenu definitions), for example: 

{{FileBox|filename=~/.fluxbox/menu|title=Defining new menu entries|1=
# Custom fluxbox menu
[begin] (Fluxbox)
  (...)
  [exec] (XTerm White on Black) {xterm -ls -fg white -bg black}
  (...)
  [submenu] (More terminals)
    [exec] (Aterm default) {aterm}
    [exec] (Rxvt default) {rxvt}
  [end]
  (...)
[end]
}}

The root menu definition begins with the <code>[begin]</code> tag, followed by its name, between parentheses and ends with its corresponding <code>[end]</code> tag. All the menu commands (called here, tags) are enclosed by square brackets, menu names will be enclosed between parentheses and the actual commands are enclosed between braces. Comments are allowed in this file, for lines beginning with <code>#</code>. 

In the example shown above, the first <code>[exec]</code> line defines a new entry named "XTerm White on Black", which will execute <kbd>xterm -ls -fg white -bg black</kbd> as if from a command line. Next is a submenu which is defined using the <code>[submenu]</code> tag, and after that a section called "More terminals", with two more <code>[exec]</code> commands. Any submenu definition must have its corresponding <code>[end]</code> tag. 

There are other menu commands that can be used in the {{Path|~/.fluxbox/menu}} file. Read the [http://fluxbox.org/docbook.php official documentation] available online for more information. 

=== External resources ===

* The [http://fluxbox-wiki.org Fluxbox wiki]
* Fluxbox developers and users in #fluxbox on chat.freenode.net

=== Summary ===

Congratulations! Fluxbox is now installed, configured, and ready to go. If any questions or suggestions come to mind, please email the author and/or file a bug report at Gentoo's [https://bugs.gentoo.org/ Bugzilla].

[[Category:Window manager]] {{Migrated|originalauthors=Jonathan Smith, Alin Dobre, Joshua Saddler, lack}}
