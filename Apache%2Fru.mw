<languages />

{{Metadata|abstract=HTTP-сервер Apache — это эффективный и расширяемый веб-сервер. Он является одним из самых популярных веб-серверов в Интернете.}}

{{InfoBox stack
|{{InfoBox homepage|http://httpd.apache.org|header=true}}
|{{InfoBox wikipedia|Apache HTTP Server}}
|{{InfoBox gdoc|Apache}}
|{{InfoBox github|apache/httpd}}
}}

'''HTTP-сервер Apache''' — это эффективный и расширяемый [[:Category:Web Servers|веб-сервер]]. Он является одним из самых популярных веб-серверов в Интернете.

== Установка ==

{{Note|When updating between Apache versions, check the [[Project:Apache/Upgrading|Upgrade guide]].}}

=== USE-флаги ===

{{USEflag|package=www-servers/apache}}

=== Emerge ===

Если вы хотите использовать event MPM (Multi-Processing Module) для Apache, то добавьте следующую строку в make.conf:
{{FileBox|filename=/etc/portage/make.conf|title=Apache event MPM|lang=bash|1=
APACHE2_MPMS="event"
}}

Если вы хотите использовать worker MPM для Apache, то добавьте следующее в make.conf:
{{FileBox|filename=/etc/portage/make.conf|title=Apache event MPM|lang=bash|1=
APACHE2_MPMS="worker"
}}

И включите USE-флаг threads для Apache:
{{FileBox|filename=/etc/portage/package.use|title=Поддержка потоков в Apache|lang=bash|1=
www-servers/apache threads
}}

Далее установите Apache с помощью ''emerge'':
{{Emerge|{{Package|www-servers/apache}}}}

=== Поддержка в других пакетах ===

Включение глобального USE-флага <code>apache2</code>  добавит поддержку Apache в других пакетах. Это приведёт к тому, что при установке зависимого от него пакета {{Package|www-servers/apache}} будет установлен автоматически.

{{FileBox|filename=/etc/portage/make.conf|title=Добавление Apache к системным USE-флагам|lang=bash|1=
USE="apache2"
}}

После настройки переменной USE потребуется обновить систему, чтобы изменения вступили в силу:

{{Emerge|params+=--changed-use --deep|@world}}

== Конфигурация ==

=== Файлы ===

Существуют два основных файла, которые настраивают поведение Apache2 в системе: 

* Конфигурационный файл сценария инициализации Apache2 в Gentoo: {{Path|/etc/conf.d/apache2 }}

* Стандартный файл конфигурации сервера Apache2: {{path|/etc/apache2/httpd.conf}}

==== {{Path|/etc/conf.d/apache2}} ====

Файл {{Path|apache2}}, находящийся в {{Path|/etc/conf.d}}, является конфигурационным файлом для Gentoo init-скрипта. Единственная незакомментированная строка содержит переменную <var>APACHE2_OPTS</var>:

{{FileBox|filename=/etc/conf.d/apache2|lang=bash|1=
APACHE2_OPTS="-D DEFAULT_VHOST -D INFO -D SSL -D SSL_DEFAULT_VHOST -D LANGUAGE"
}}

Эта строка определяет параметры, которые будут переданы различным конфигурационным файлам, использующим выражение <code><IfDefine option-name></code> для включения или отключения некоторой части настроек. Вернемся к этому чуть позже в этой статье.

==== {{Path|/etc/apache2/httpd.conf}} ====

Файл {{Path|httpd.conf}} является стандартным конфигурационным файлом сервера Apache. На самом деле это файл является лишь '''точкой входа''', так как вся конфигурация разбита на множество файлов в каталоге {{Path|/etc/apache2/}}, которые собираются вместе посредством директивы <code>Include</code>. Например, директива <code>Include /etc/apache2/modules.d/*.conf</code> в {{Path|httpd.conf}} предназначена для включения всех файлов из {{Path|/etc/apache2/modules.d/}}, имя которых оканчивается на {{Path|.conf}}. 

Принимая во внимание то, о чём говорилось в предыдущем разделе, и то, что конфигурационные файлы модулей (файлы в {{Path|/etc/apache2/modules.d}}) почти всегда начинаются с <code><IfDefine module-name></code>, получаем, что содержимое одного файла в {{Path|/etc/apache2/modules.d}} будет объединено с остальной конфигурацией ТОЛЬКО в том случае, если соответствующий параметр установлен с помощью флага <code>-D module-name</code> для переменной <var>APACHE2_OPTS</var> в файле {{Path|/etc/conf.d/apache2}}. Конфигурационный файл {{Path|00_default_settings.conf}} является исключением из этого правила, так как не начинается с выражения <code>IfDefine</code> и, следовательно, всегда включается в конечную конфигурацию.

=== Настройки по умолчанию ===

Ниже приведена конфигурация свежей установки сервера Apache, получающаяся объединением различных конфигурационных файлов. Начнём с точки входа {{Path|/etc/apache2/httpd.conf}}.

{{Warning|Листинг приведён ''только'' для быстрого ознакомления и общего представления. Крайне рекомендуем обратить внимание на комментарии, включённые в различные файлы, это поможет пониманию деталей настройки. Для более глубокого понимания следует обратиться руководству Apache.}}

{{FileBox|filename=/etc/apache2/httpd.conf|lang=apache|1=
ServerRoot "/usr/lib64/apache2"
  
# Модуль загружается в любом случае в предположении, что USE-флаг
# не отключён в /etc/portage/make.conf или /etc/portage/package.use
LoadModule actions_modulemodules/mod_actions.so
...
#other modules loaded that way : alias_module, auth_basic_module, authn_alias_module,
# authn_anon_module, authn_dbm_module, authn_default_module, authn_file_module, 
# authz_dbm_module, authz_default_module, authz_groupfile_module, authz_host_module, 
# authz_owner_module, authz_user_module, autoindex_module,  cgi_module,  cgid_module, 
# deflate_module, dir_module, env_module, expires_module, ext_filter_module, filter_module,
#  headers_module, include_module,  log_config_module, logio_module, mime_module,  
# mime_magic_module, negotiation_module, rewrite_module, setenvif_module, 
# speling_module,ssl_module, status_module, unique_id_module, usertrack_module, host_alias_module
  
  
# Модуль загружается по условию в предположении, что соответствующий USE-флаг
# не отключён в /etc/portage/make.conf или /etc/portage/package.use
# (т. е. USE-флаг установлен)
<IfDefine AUTHNZ_LDAP>
LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
</IfDefine>
# другие модули, загружающиеся таким образом: cache_module, dav_module, dav_fs_module,
# dav_lock_module,disk_cache_module,  file_cache_module, info_module, ldap_module,
# mem_cache_module, userdir_module
  
  
User apache
Group apache
  
# Дополнительные настройки
#**************************************************************************************vvv
# эта часть включается через Include /etc/apache2/modules.d/*.conf
  
# из файла /etc/apache2/modules.d/00_default_settings.conf-------------v
# включается всегда, так как нет соответствующего отключающего параметра.
Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 15
UseCanonicalName Off
AccessFileName .htaccess
ServerTokens Prod
TraceEnable off
ServerSignature On 
HostnameLookups Off
EnableMMAP On
EnableSendfile On
FileEtag INode MTime Size
ContentDigest Off
ErrorLog /var/log/apache2/error_log
LogLevel warn
  
<Directory />
	Options FollowSymLinks
	AllowOverride None
	Order deny,allow
	Deny from all
</Directory>
  
<IfModule dir_module>
	DirectoryIndex index.html index.html.var
</IfModule>
<FilesMatch "^\.ht">
	Order allow,deny
	Deny from all
</FilesMatch>
#--------------------------------------------------------------------------^
  
#included from 00_mod_info.conf--------------------------------------------v
<IfDefine INFO>
<Location /server-info>
	SetHandler server-info
	Order deny,allow
	Deny from all
	Allow from 127.0.0.1
</Location>
</IfDefine>
#--------------------------------------------------------------------------^
  
#--------------------------------------------------------------------------v
# включено из 00_languages.conf
# Настройки для поддержки страниц на разных языках.
<IfDefine LANGUAGE>
  
	AddLanguage ca .ca
	...
	AddLanguage zh-TW .zh-tw
  
	LanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn no pl pt pt-BR ru sv zh-CN zh-TW
  
	ForceLanguagePriority Prefer Fallback
  
	AddCharset us-ascii.ascii	.us-ascii
	AddCharset <nowiki>ISO-8859-1		.iso8859-1 .latin1</nowiki>
	...
	AddCharset shift_jis		.shift_jis .sjis
</IfDefine>
#---------------------------------------------------------------------------^
#**************************************************************************************^^^
  
  
#***************************************************************************************vvv
# эта часть включается через Include /etc/apache2/vhosts.d/*.conf
# из 00_default_ssl_vhost.conf-----------------------------------------------------vv
<IfDefine SSL>
	<IfDefine SSL_DEFAULT_VHOST>
		<IfModule ssl_module>
			Listen 443
  
			<VirtualHost _default_:443>
				ServerName localhost
                                #------------------------------------------v
				# эта часть включается через Include /etc/apache2/vhosts.d/default_vhost.include
				ServerAdmin root@localhost
				DocumentRoot "/var/www/localhost/htdocs"
  
  	
				<Directory "/var/www/localhost/htdocs">
	   				Options Indexes FollowSymLinks
	   				AllowOverride All
	   				Order allow,deny
	   				Allow from all
				</Directory>
  
				<IfModule alias_module>
	   				ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
				</IfModule>
  
				<Directory "/var/www/localhost/cgi-bin">
	   				AllowOverride None
	   				Options None
	   				Order allow,deny
	   				Allow from all
				</Directory>
        			# конец блока Include ---------------------------^
  	
				ErrorLog /var/log/apache2/ssl_error_log
  
				<IfModule log_config_module>
					TransferLog /var/log/apache2/ssl_access_log
				</IfModule>
				SSLEngine on
				SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
				SSLCertificateFile /etc/ssl/apache2/server.crt
				SSLCertificateKeyFile /etc/ssl/apache2/server.key
  
				<FilesMatch "\.(cgi{{!}}shtml{{!}}phtml{{!}}php)$">
					SSLOptions +StdEnvVars
				</FilesMatch>
  
				<Directory "/var/www/localhost/cgi-bin">
					SSLOptions +StdEnvVars
				</Directory>
  
				<IfModule setenvif_module>
					BrowserMatch ".*MSIE.*" \
					nokeepalive ssl-unclean-shutdown \
					downgrade-1.0 force-response-1.0
				</IfModule>
  
  
				<IfModule log_config_module>
					CustomLog /var/log/apache2/ssl_request_log \
					"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
					</IfModule>
			</VirtualHost>
		</IfModule>
	</IfDefine>
</IfDefine>
#---------------------------------------------------------------------------------^^
#из 00_default_vhost.conf-------------------------------------------------------vv
<IfDefine DEFAULT_VHOST>
	Listen 80
	NameVirtualHost *:80
  
	<VirtualHost *:80>
		ServerName localhost
  
		#---------------------------------------------------------------v
		# эта часть включается через Include /etc/apache2/vhosts.d/default_vhost.include
		ServerAdmin root@localhost
		DocumentRoot "/var/www/localhost/htdocs"
  
  	
		<Directory "/var/www/localhost/htdocs">
	   		Options Indexes FollowSymLinks
	   		AllowOverride All
	   		Order allow,deny
	   		Allow from all
		</Directory>
  
		<IfModule alias_module>
	   		ScriptAlias /cgi-bin/ "/var/www/localhost/cgi-bin/"
		</IfModule>
  
		<Directory "/var/www/localhost/cgi-bin">
	   		AllowOverride None
	   		Options None
	   		Order allow,deny
	   		Allow from all
		</Directory>
        	# конец блока Include -----------------------------------------------^
  
		<IfModule mpm_peruser_module>
			ServerEnvironment apache apache
		</IfModule>
	</VirtualHost>
</IfDefine>
#-----------------------------------------------------------------------------------^^
# конец блока include
****************************************************************************************^^^
}}

=== Первые признаки жизни ===

Как видно из приведенной выше первоначальной конфигурации, предварительно установленным каталогом для виртуального хоста <code>DocumentRoot</code> является {{Path|/var/www/localhost/htdocs}}, именем соответствующего сервера — ''localhost''. К тому же в каталог для <code>DocumentRoot</code> устанавливается файл index.html, так что, чтобы проверить все ли правильно установлено, можно зайти браузером на [http://localhost/ http://localhost/].

На странице должно появиться сообщение «It works!».

{{Warning|По умолчанию у [[Firefox]] включена возможность, предназначенная для помощи пользователям, которые ошиблись при наборе URL в адресной строке. Если URL не удаётся разрешить, то Firefox перепробует несколько альтернатив, пытаясь угадать, что пользователь 'мог' иметь в виду: добавляет <code>.com</code> в конец или <code>www.</code> в начало имени хоста и проверяет, разрешаются ли полученные URL.

Эта возможность была введена в ранних версиях Firefox и стала раздражающим фактором для разработчиков. Если запущенный на локальной машине сервер не отвечает, Firefox будет пробовать <code>localhost.com</code> или <code>www.localhost.com</code>, часто заканчивается страницей «Не найдено».

Чтобы отключить эту возможность:

# Введите <code>about:config</code> в адресной строке.
# Нажмите «Я обещаю, что буду осторожен» и войдите на специальную страницу конфигурации.
# Введите <code>browser.fixup.alternate.enabled</code> в появившейся строке поиска.
# Щёлкните правой кнопкой мыши на появившийся ниже пункт <code>browser.fixup.alternate.enabled</code> и переключите его значение в положение false.
}}

=== Включение mod_security ===

Установите {{Package|www-apache/mod_security}}:

{{emerge|mod_security}}

Включите модуль <code>SECURITY</code> в переменной <var>APACHE2_OPTS</var> файла {{Path|apache2}}:

{{FileBox|filename=/etc/conf.d/apache2|title=Включение модуля безопасности|lang=bash|1=
APACHE2_OPTS="... -D SECURITY"
}}

Для настройки этого модуля отредактируйте {{Path|/etc/apache2/modules.d/79_modsecurity.conf}} и {{Path|/etc/apache2/modules.d/80_modsecurity-crs.conf}} файлы, а затем перезапустите Apache.

=== Включение поддержки PHP ===

Установите [[PHP]] с USE-флагом <code>apache2</code> и включите соответствующий модуль:

{{FileBox|filename=/etc/conf.d/apache2|title=Включение модуля PHP|lang=bash|1=
APACHE2_OPTS="... -D PHP5"
}}

Перед тем как проверить, работает ли модуль PHP, убедитесь, что файл {{Path|/etc/apache2/modules.d/70_mod_php5.conf}} существует и содержит следующее определение:

{{FileBox|filename=/etc/apache2/modules.d/70_mod_php5.conf|title=Проверка загрузки модуля PHP|lang=apache|1=
<IfDefine PHP5> 
        # Load the module first 
        <IfModule !mod_php5.c> 
                LoadModule php5_module    modules/libphp5.so 
        </IfModule> 
  
        # Set it to handle the files 
        <IfModule mod_mime.c> 
                AddHandler application/x-httpd-php .php .php5 .phtml 
                AddHandler application/x-httpd-php-source .phps 
        </IfModule> 
  
        DirectoryIndex index.php index.phtml 
</IfDefine>
}}

Если он не существует, то создайте его.

Чтобы проверить, работает ли модуль PHP, создайте тестовую страницу:

{{FileBox|filename=/var/www/localhost/htdocs/index.php|title=Тестовая страница PHP|lang=php|1=
<html>
 <body>
  <?php phpinfo(); ?>
 </body>
</html>
}}

Теперь удалите или переименуйте {{Path|/var/www/localhost/htdocs/index.html}} и откройте тестовую страницу: <code>http://localhost/</code>.

Должна отобразиться таблица с настройками PHP.

==== Выбор версии PHP ==== 

Чтобы изменить версию PHP обработчика для Apache, нужно сперва вывести список доступных Server Application Programming Interface (SAPI) для <code>apache2</code>:

{{RootCmd|eselect php list apache2|output=<pre>
 [1]   php5.3
 [2]   php5.4 *
 [3]   php5.5
</pre>}}

Измените на необходимую версию:

{{RootCmd|eselect php set apache2 N}}

В приведенном выше примере замените <code>N</code> на необходимый номер из вывода {{c|eselect php list apache2}}, который был показан ранее.

=== Виртуальные хосты ===

Для каждого виртуального хоста необходимо иметь каталог <code>DocumentRoot</code>, который демон Apache сможет открыть и прочитать. Добавьте файл конфигурации виртуального хоста ({{Path|VirtualHost.conf}}) в каталоге {{Path|/etc/apache2/vhosts.d}}, который будет использовать данный <code>DocumentRoot</code> и данное имя сервера виртуального хоста. Не забудьте добавить запись для данного доменного имени в {{Path|/etc/hosts}}.

Чтобы назначить файлам виртуального хоста пользователя/группу apache, используйте {{c|chown}}, как показано в следующем примере:

{{RootCmd|chown apache:apache /var/www/sitename}}

Ниже приведены два примера определения виртуальных хостов, один для domainname1.com, а второй для domainname2.com. Обратите внимание, что директивы <code>DocumentRoot</code> и <code>ServerName</code> различаются, хотя сам хост (<code>*:80</code>) один и тот же:

{{CodeBox|title=Пример определения виртуальных хостов|lang=apache|1=
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website1
    ServerName domainname1.com
</VirtualHost>
  
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/website2
    ServerName domainname2.com
</VirtualHost>
}}

Также рекомендуется дать определение виртуального хоста на основании IP-адреса. Это позволит администратору оставить сообщение пользователям, которые пытаются зайти на сайт по IP-адресу:

{{CodeBox|title=Виртуальный хост на основании IP|lang=apache|1=
<VirtualHost *:80>
    ServerAdmin email@site.com
    DocumentRoot /var/www/html
    ServerName xxx.xxx.xxx.xxx
</VirtualHost>
}}

После добавления новых хостов сервер нужно (мягко) перезапустить, чтобы новые сайты стали активны.

=== Включение PHP через fcgid ===

Установите {{Package|www-apache/mod_fcgid}} и {{Package|dev-lang/php}}. Пакет PHP требует включения USE-флага <code>cgi</code>:

{{Emerge|www-apache/mod_fcgid dev-lang/php}}

Отредактируйте файл {{Path|mod_fcgid.conf}}:

{{FileBox|filename=/etc/apache2/modules.d/20_mod_fcgid.conf|lang=apache|1=
<IfDefine FCGID>
LoadModule fcgid_module modules/mod_fcgid.so
SocketPath /var/run/fcgidsock
SharememPath /var/run/fcgid_shm
  
AddHandler php-fcgid .php
AddType application/x-httpd-php .php
Action php-fcgid /fcgid-bin/php-fcgid-wrapper
# max request 128mb
FcgidMaxRequestLen 134217728
<Location /fcgid-bin/>
        SetHandler fcgid-script
        Options +ExecCGI
</Location>
</IfDefine>
}}

Создайте необходимый каталог: 

{{RootCmd|mkdir /var/www/localhost/htdocs/fcgid-bin}}

Сделайте символическую ссылку для PHP-wrapper:

{{RootCmd|ln -s /usr/bin/php-cgi /var/www/localhost/htdocs/fcgid-bin/php-fcgid-wrapper}}

Включите модуль <code>fcgid</code>:

{{FileBox|filename=/etc/conf.d/apache2||title=Включение модуля fcgid|lang=bash|1=
APACHE2_OPTS="... -D FCGID"
}}

В конце перезапустите Apache и проверьте сайт <code>phpinfo()</code>, который мы создали раньше. Значение <code>Server API</code> должно быть ''CGI/FastCGI''

=== Включение PHP-FPM через mod_proxy_fcgi в Apache 2.4 ===

Следующие условия должны быть выполнены, чтобы включить PHP-FPM через mod_proxy_fcgi:
* >= PHP 5.3
* >= Apache 2.4

Кроме того, есть несколько ограничений доступной функциональности в Apache 2.4:
* >= Apache 2.4.9, если вы хотите [https://wiki.apache.org/httpd/PHP-FPM#Performance_and_Pitfalls взаимодействовать с PHP-FPM через UNIX сокет]
* >= Apache 2.4.10, если вы хотите использовать [https://github.com/php/php-src/pull/694 SetHandler] вместо [https://wiki.apache.org/httpd/PHP-FPM#Example ProxyPassMatch].

Следующая конфигурация будет работать только с Apache 2.4.10 и выше. Это основано на директиве <code>FilesMatch</code> и располагается непосредственно в главном конфигурационного файле или в конкретных <code>VirtualHost</code>. Расположение UNIX-сокета определяется в файле {{Path|php-fpm.conf}} директивой <code>listen</code> с возможностью указать различные UNIX-сокеты для различных сайтов или функций.

В следующем примере <code>FilesMatch</code> размещена в конфигурационном файле модуля PHP:

{{FileBox|filename=/etc/conf.d/modules.d/70_mod_php5.conf|title=Использование PHP-FPM
(рекомендуется для Apache 2.4.10 и выше)|lang=apache|1=
 <IfDefine PHP5>
        <FilesMatch "\.php$">
                SetHandler "proxy:unix:/var/run/php-fpm/www.sock{{!}}fcgi://localhost/"
        </FilesMatch>
  
	# Set it to handle the files
	<IfModule mod_mime.c>
		AddHandler application/x-httpd-php .php .php5 .phtml
		AddHandler application/x-httpd-php-source .phps
	</IfModule>

	DirectoryIndex index.php index.phtml
 </IfDefine>
}}

Или вы можете использовать ProxyPassMatch — единственный вариант, если версия Apache между 2.4.0 и 2.4.8 включительно.

{{FileBox|filename=/etc/apache2/modules.d/70_mod_php5.conf|title=Использование PHP-FPM (рекомендуется для Apache 2.4.8 и старее)|lang=apache|1=
 <IfDefine PHP5>
        # Send all requested PHP files to PHP-FPM via fcgi://PHP_FPM_LISTEN_ADDRESS:PHP_FPM_LISTEN_PORT/DOCUMENT_ROOT/$1
        ProxyPassMatch ^/(.*\.php)$ fcgi://127.0.0.1:9000/var/www/localhost/htdocs/$1
  
	# Set it to handle the files
	<IfModule mod_mime.c>
		AddHandler application/x-httpd-php .php .php5 .phtml
		AddHandler application/x-httpd-php-source .phps
	</IfModule>
  
	DirectoryIndex index.php index.phtml
 </IfDefine>
}}

По умолчанию директива <code>listen</code> не настроена для использования сокета. Сперва создайте каталог для файла сокета:

{{RootCmd|mkdir /var/run/php-fpm}}

Затем обновите {{Path|php-fpm.conf}} файл следующим образом:

{{FileBox|filename=php-fpm.conf|title=Изменение директивы listen|lang=apache|1=
; Set permissions for unix socket, if one is used. In Linux, read/write
; permissions must be set in order to allow connections from a web server. Many
; BSD-derived systems allow connections regardless of permissions.
; Default Values: user and group are set as the running user
;                 mode is set to 0666
listen.owner = nobody
listen.group = nobody
;listen.mode = 0666
 
 ; The address on which to accept FastCGI requests.
 ; Valid syntaxes are:
 ;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific address on
 ;                            a specific port;
 ;   'port'                 - to listen on a TCP socket to all addresses on a
 ;                            specific port;
 ;   '/path/to/unix/socket' - to listen on a unix socket.
 ; Note: This value is mandatory.
 ;listen = 127.0.0.1:9000
listen = /var/run/php-fpm/www.sock
}}

Затем подключите модули <code>PHP</code> и <code>PROXY</code>:

{{FileBox|filename=/etc/conf.d/apache2|title=Включение модулей PHP и proxy|lang=bash|1=
APACHE2_OPTS="... -D PHP5 -D PROXY"
}}

== Использование ==

=== Сервисы ===

==== OpenRC ====

Запуск сервера Apache:

{{RootCmd|/etc/init.d/apache2 start}}

Добавление Apache в уровень запуска по умолчанию:

{{RootCmd|rc-update add apache2 default}}

Перезапуск службы Apache:

{{RootCmd|/etc/init.d/apache2 restart}}

Перезагрузка конфигурационных файлов Apache:

{{RootCmd|/etc/init.d/apache2 reload}}

==== systemd ====

Запуск сервера Apache:

{{RootCmd|systemctl start apache2}}

Добавление Apache в уровень запуска по умолчанию: 

{{RootCmd|systemctl enable apache2}}

Перезапуск службы Apache: 

{{RootCmd|systemctl restart apache2}}

== Устранение проблем ==

=== Ссылки ===

Сервер Apache бывает трудно настроить правильно. Ниже приведены некоторые ссылки, которые могут быть полезны при возникновении проблем:

* [[Project:Apache/Troubleshooting|Руководство по устранению проблем]]
* {{Bug|www-servers/apache|search=package}}

=== Тестирование ===

Проверка IP-интерфейсов и портов, на которых Apache2 работает и слушает их:

{{RootCmd|netstat -tulpen {{!}} grep apache|output=<pre>
tcp     0     0 0.0.0.0:80      0.0.0.0:*     LISTEN     0     10932720     4544/apache2        
tcp     0     0 0.0.0.0:443     0.0.0.0:*     LISTEN     0     10932716     4544/apache2        
</pre>}}

Проверка соединения с запущенным на localhost сервером Apache:

{{Cmd|telnet localhost 80|output=<pre>
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^&#93;'.
</pre>}}

Тестовое соединение можно разорвать нажатием {{Key|Ctlr}}+{{Key|c}} и {{Key|Enter}}.

=== apr_sockaddr_info_get() failed for <System_Hostname> ===

'''Ошибка:'''

<pre>apache2: apr_sockaddr_info_get() failed for System_Hostname</pre>

'''Решение:'''

Когда такое происходит, добавьте имя хоста в файл {{Path|/etc/hosts}}:

{{FileBox|filename=/etc/hosts|title=Добавление имени хоста для Apache|1=
127.0.0.1 localhost System_Hostname
}}

== Смотрите также ==

* [[Lighttpd]] — быстрый, легковесный веб-сервер.
* [[Nginx]] — небольшой, надёжный и высокопроизводительный HTTP-сервер и обратный прокси.

== Ссылки ==

* [http://articles.slicehost.com/2010/12/2/installing-apache-on-gentoo Статья Slicehost: Установка Apache в Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-files-on-gentoo Статья Slicehost: Конфигурационые файлы Apache в Gentoo]
* [http://articles.slicehost.com/2010/12/3/configuring-the-apache-mpm-on-gentoo Статья Slicehost: Настройка Apache MPM в Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-configuration-on-gentoo-part-1 Статья Slicehost: Настройка Apache в Gentoo]
* [http://articles.slicehost.com/2010/12/3/apache-virtual-hosts-on-gentoo-part-1 Статья Slicehost: Виртуальные хосты Apache в Gentoo]
* [http://articles.slicehost.com/2010/12/3/enabling-and-using-apache-s-mod_status-on-gentoo Статья Slicehost: Включение и использование модуля Apache mod_status в Gentoo]
* [http://httpd.apache.org/docs/ Документация apache.org]
* [http://gentoo-en.vfose.ru/wiki/Apache2_mod_pagespeed Apache2 mod_pagespeed]


[[Category:Web Servers]]
