{{Dirty}}
<languages />

{{Metadata|abstract=La commande sudo est un moyen simple et sécurisé de permettre à des utilisateurs ordinaires d'exécuter des commandes en tant que ''root'' (ou un autre utilisateur), avec ou sans mot de passe.}}

<div class="mw-translate-fuzzy">
{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://www.sudo.ws/|header=true}}
|{{InfoBox wikipedia|sudo}}
|{{InfoBox gitweb|http://www.sudo.ws/repos/sudo|raw=true}}
}}
</div>

La commande {{c|sudo}} procure un moyen sûr et simple de configurer une escalade de privilèges, par exemple, permettre à des utilisateurs normaux d'exécuter certaines (ou toutes les) commandes en tant que ''root'' ou au nom d'un autre utilisateur, sans qu'ils aient à connaître le mot de passe de l'utilisateur auquel ils se substituent.

Lorsque vous voulez que certaines personnes accomplissent certaines tâches administratives sans leur donner un accès total en tant que [[Wikipedia:Superuser|''root'']], utiliser {{c|sudo}} est la meilleure option. En effet, {{c|sudo}} permet de contrôler qui peut faire quoi. Ce guide est une petite introduction à ce puissant outil.

Cet article est une rapide introduction. Le paquet {{Package|app-admin/sudo}} est bien plus puissant que ce qui est décrit ici. Il a des options supplémentaires permettant l'édition de fichier en tant qu'autre utilisateur ({{c|sudoedit}}), s'exécuter depuis un script (donc reste en arrière-plan, lit le mot de passe depuis l'entrée standard et non depuis le clavier,…), etc.

Merci de lire les pages de manuel de {{c|sudo}} et de {{c|sudoers}} pour plus d'informations.

== Installation ==

=== Options de la variable USE  ===

{{USEflag|package=app-admin/sudo}}

=== Emerge ===

{{Emerge|app-admin/sudo}}

== Configuration ==

=== Journalisation ===

<div class="mw-translate-fuzzy">
Un autre avantage de {{c|sudo}} est qu'il peut enregistrer tous les essais (réussis ou non) de lancement d'applications. C'est très utile pour retrouver la personne qui a fait l'erreur que l'on a mis 10 heures à corriger :)
</div>

=== Accorder des autorisations ===

Le paquet {{Package|app-admin/sudo}} permet à l'administrateur système d'autoriser certains utilisateurs à exécuter des applications auxquelles ils n'ont normalement pas accès. À la différence de {{c|setuid}}, {{c|sudo}} permet un contrôle plus fin de ''qui'' peut exécuter une certaine commande, et ''quand''.

<div class="mw-translate-fuzzy">
Avec <tt>sudo</tt> vous pouvez établir une liste claire de ''qui'' peut exécuter une application donnée. Si vous utilisiez le bit ''setuid'', n'importe quel utilisateur ( ou n'importe quel utilisateur d'un groupe donné, selon l'autorisation accordée) serait capable d'exécuter cette application. Vous pouvez (et devriez probablement) demander à l'utilisateur de fournir un mot de passe lorsqu'il désire exécuter l'application concernée.
</div>

<div class="mw-translate-fuzzy">
La configuration de <tt>sudo</tt> est gérée par le fichier {{Path|/etc/sudoers}}. Ce fichier ne devrait jamais être édité via <tt>nano /etc/sudoers</tt> ou <tt>vim /etc/sudoers</tt> ou n'importe quel autre éditeur. Lorsque vous désirez changer ce fichier, vous devriez utiliser <tt>visudo</tt> .
</div>

=== Syntaxe de base ===

<div class="mw-translate-fuzzy">
La partie la plus difficile de <tt>sudo</tt>, c'est la syntaxe du fichier {{Path|/etc/sudoers}}. La syntaxe de base ressemble à ceci :
</div>

{{CodeBox|title=Syntaxe de base de /etc/sudoers |1=
user  host = commands
}}

<div class="mw-translate-fuzzy">
Cette syntaxe indique à <code>sudo</code> que l'utilisateur, identifié par ''user'' et connecté au système ''host'' peut exécuter n'importe quelle commande listée dans ''commands'' en tant qu'utilisateur ''root''. Un exemple plus réel pourrait rendre cela plus clair : autoriser l'utilisateur ''swift'' à exécuter <code>emerge</code> s'il est connecté à l'hôte local :
</div>

A more real-life example might make this more clear: To allow the user {{c|larry}} to execute {{c|emerge}} when he is logged in on {{c|localhost}}:

<div class="mw-translate-fuzzy">
{{Code|Exemple réaliste de /etc/sudoers |<pre>
swift  localhost = /usr/bin/emerge
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
{{Note|Le nom d'hôte doit corresponde à ce que retourne la commande <code>hostname</code>.}}
</div>

{{Note|In the simplest case, commands must be fully qualified paths to executables: hence <code>/usr/bin/emerge</code> not just <code>emerge</code>. Paths can also contain wildcards and may refer to entire directories. See the manpage for details.}}

<div class="mw-translate-fuzzy">
{{Warning/fr|N'autorisez pas un utilisateur à exécuter une application  qui lui permette d'élever ses autorisations. Par exemple, autoriser des utilisateurs à exécuter <code>emerge</code>  en tant que ''root'' peut en effet leur donner un accès complet au système en tant que ''root'' parce qu'<code>emerge</code> peut être manipulé pour changer le système de fichier actif à l'avantage de l'utilisateur. Si vous ne faites pas confiance à vos utilisateurs de  <code>sudo</code>, ne leur donnez aucune autorisation.}}
</div>

<div class="mw-translate-fuzzy">
Le nom d'utilisateur peut aussi être remplacé par un nom de groupe. Dans ce cas, vous devriez commencer le nom du groupe avec un signe <code>%</code>. Par exemple, pour autoriser n'importe quel utilisateur du groupe <code>wheel</code> à exécuter <code>emerge</code> :
</div>

<div class="mw-translate-fuzzy">
{{Code|Autoriser les membres du groupe wheel à éxecuter emerge|<pre>
%wheel  localhost = /usr/bin/emerge
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
Vous pouvez étendre la ligne pour autoriser plusieurs commandes (au lieu de faire une entrée simple pour chacune des commandes). Par exemple, pour autoriser le même utilisateur à exécuter, pas seulement  <code>emerge</code> ,mais aussi <code>ebuild </code> et  <code>emerge-webrsync</code>  en tant que ''root'' :
</div>

<div class="mw-translate-fuzzy">
{{Code|Commandes multiples |<pre>
swift  localhost = /usr/bin/emerge, /usr/bin/ebuild, /usr/sbin/emerge-webrsync
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
Vous pouvez aussi spécifier une commande précise et pas seulement un outil. Ceci est utile pour restreindre l'utilisation d'un outil donné à un certain jeu d'options de commande. L'outil <code>sudo</code>  autorise les passe-partout du style shell (aussi connu sous le nom de meta caractères ou de caractères glob) à être utilisés dans les noms de fichiers ou dans les arguments de la ligne de 
commande dans le fichier ''sudoers''. Notez qu'il ne s'agit ''pas'' d'expressions régulières.
</div>

<div class="mw-translate-fuzzy">
Testons cela :
</div>

<div class="mw-translate-fuzzy">
{{Cmd|sudo emerge -uDN world|output=<pre>
We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:
  
    #1- Respect the privacy of others.
    #2- Think before you type.
    #3- With great power comes great responsibility.
  
Password: ## (Enter the user password, not root!)
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
Le mot de passe requis par  <code>sudo</code> est le propre mot de passe de l'utilisateur, pas celui de ''root''. Ceci garantit qu'aucun terminal que vous avez laissé accidentellement ouvert aux autres ne pourra être utilisé par des gens mal intentionnés.
</div>

<div class="mw-translate-fuzzy">
Vous devriez savoir que <code>sudo</code> ne modifie pas la variable <code>${PATH}</code> : toute commande placée après <code>sudo</code> est traitée dans ''votre'' environnement. Si vous voulez que l'utilisateur exécute un outil dans {{Path|/sbin}} par exemple, il devrait fournir le chemin complet à <code>sudo</code> de cette manière :
</div>

=== Syntaxe de base avec LDAP ===

<div class="mw-translate-fuzzy">
Les options suivantes de la variable USE sont nécessaire pour la prise en charge de  LDAP.
{{USEflag|package=app-admin/sudo
|ldap++yes
|pam++Yes
}}
</div>

Lorsque vous utilisez sudo avec LDAP, sudo  lira la configuration depuis le serveur LDAP Server également.
C'est pourquoi vous devez éditer deux fichiers.

<div class="mw-translate-fuzzy">
{{File|/etc/ldap.conf.sudo|Utilisez chmod 400 après avoir terminé|<pre>
# Voir ldap.conf(5) et  README.LDAP pour les détails
# Ce fichier ne devrait être lisible que par root
  
# directives prises en charge: host, port, ssl, ldap_version
# uri, binddn, bindpw, sudoers_base, sudoers_debug
# tls_{checkpeer,cacertfile,cacertdir,randfile,ciphers,cert,key}
  
host ldap.example.com
port 389
  
base dc=example,dc=com
  
uri ldap://ldap.example.com/
#uri ldapi://%2fvar%2frun%2fopenldap%2fslapd.sock
  
ldap_version 3
#ssl start_tls
  
sudoers_base ou=SUDOers,dc=example,dc=com
#sudoers_debug 2
  
bind_policy soft
</pre>}}
</div>

<div class="mw-translate-fuzzy">
{{File|/etc/nsswitch.conf|Ajoutez la ligne des sudoers |<pre>
sudoers:     ldap files
</pre>}}
</div>

Vous devez aussi ajouter l'entrée LDAP suivante pour sudo.

{{Note|Il a été conçu pour que la branche des  sudoers soit au sommet de l'arbre pour des raisons de sécurité.  Vous pouvez donc avoir des droits d'accès différents de  ldap pour lire/écrire dans cette  branche}}

<div class="mw-translate-fuzzy">
{{Code|Ldap Entry for Sudo|<pre>
version: 1
DN: ou=SUDOers,dc=example,dc=com
objectClass: organizationalUnit
objectClass: top
objectClass: domainRelatedObject
associatedDomain: example.com
ou: SUDOers
  
DN: cn=defaults,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: defaults
description: Default sudoOption's go here
sudoOption: env_reset
  
DN: cn=root,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: root
sudoCommand: ALL
sudoHost: ALL
sudoUser: root
  
DN: cn=%wheel,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: %wheel
sudoCommand: ALL
sudoHost: ALL
sudoOption: !authenticate
sudoUser: %wheel
</pre>}}
</div>

<div class="mw-translate-fuzzy">
{{Code|Entrée Ldap Entry pour le groupe wheel |<pre>
version: 1
DN: cn=wheel,ou=Group,dc=example,dc=com
objectClass: top
objectClass: posixGroup
cn: wheel
description: Wheel Group
gidNumber: 10
memberUid: useradmin1
memberUid: root
</pre>}}
</div>

<div class="mw-translate-fuzzy">
La  configuration des sudoer sur LDAP est similaire à celles des fichiers avec quelques différences. Lisez à propos de  sudo avec LDAP à partir du lien ci-dessous .<ref name="test">[http://www.sudo.ws/sudo/sudoers.ldap.man.html]Sudoers LDAP man Page</ref>
</div>

=== Utiliser des alias  ===

<div class="mw-translate-fuzzy">
Dans des environnements plus étendus, avoir à entrer tous les utilisateurs encore et encore (ou des hôtes, ou des commandes) peut sembler très rébarbatif. Pour faciliter l'administration de  {{Path|/etc/sudoers}}, vous pouvez définir des ''alias''. Le format pour déclarer un alias est très simple :
</div>

<div class="mw-translate-fuzzy">
{{Code|Déclarer des alias dans  /etc/sudoers|<pre>
Host_Alias hostalias = hostname1, hostname2, ...
User_Alias useralias = user1, user2, ...
Cmnd_Alias cmndalias = command1, command2, ...
</pre>
}}
</div>

Un alias qui marche toujours, pour toute position, est l'alias <code>ALL</code> (pour faire une distinction claire entre ce qui est un alias et ce qui ne l'est pas, il est recommandé d'utiliser des lettres capitales  dans les alias). Comme vous l'avez sans doute déduit, l'alias <code>ALL</code> est un alias représentant tout ce qui est possible en matière de réglage.

<div class="mw-translate-fuzzy">
Un exemple d'utilisation de l'alias <code>ALL</code> pour autoriser n'importe quel utilisateur à exécuter la commande <code>shutdown</code> lorsqu'il est connecté localement est :
</div>

<div class="mw-translate-fuzzy">
{{Code|Autoriser n'importe quel utilisateur à éxecuter shutdown|<pre>
ALL  localhost = /sbin/shutdown
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
Un autre exemple consiste à autoriser l'utilisateur <code>swift</code> à exécuter la commande <code>emerge</code> en tant que ''root'' sans tenir compte de l'hôte auquel il est connecté :
</div>

<div class="mw-translate-fuzzy">
{{Code|Autoriser un utilisateur à exécuter une application sans tenir compte de l'hôte auquel il est connecté|<pre>
swift   ALL = /usr/bin/emerge
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
Plus intéressant encore, consiste à définir un jeu d'utilisateurs qui peuvent exécuter des programmes d'administration (tels que  <code>emerge</code> et <code>ebuild</code> ) sur le système et un groupe d'administrateurs qui peuvent changer le mot de passe de n'importe quel utilisateur, exception faite de ''root'' !
</div>

<div class="mw-translate-fuzzy">
{{Code|Utiliser des alias pour des utilisateurs et des commandes|<pre>
User_Alias  SOFTWAREMAINTAINERS = swift, john, danny
User_Alias  PASSWORDMAINTAINERS = swift, sysop
Cmnd_Alias  SOFTWARECOMMANDS    = /usr/bin/emerge, /usr/bin/ebuild
Cmnd_Alias  PASSWORDCOMMANDS    = /usr/bin/passwd [a-zA-Z0-9_-]*, !/usr/bin/passwd root
  
SOFTWAREMAINTAINERS  localhost = SOFTWARECOMMANDS
PASSWORDMAINTAINERS  localhost = PASSWORDCOMMANDS
</pre>
}}
</div>

=== Non-root execution ===

It is also possible to have a user run an application as a different, non-root user. This can be very interesting if you run applications as a different user (for instance {{c|apache}} for the web server) and want to allow certain users to perform administrative steps as that user (like killing zombie processes).

Inside {{Path|/etc/sudoers}} you list the user(s) in between <code>(</code> and <code>)</code> before the command listing:

{{CodeBox|title=Non-root execution syntax|1=
users  hosts = (run-as) commands
}}

For instance, to allow {{c|larry}} to run the {{c|kill}} tool as the {{c|apache}} or {{c|gorg}} user:

{{CodeBox|title=Non-root execution example|1=
Cmnd_Alias KILL = /bin/kill, /usr/bin/pkill
 
larry   ALL = (apache, gorg) KILL
}}

With this set, the user can run {{c|sudo -u}} to select the user he wants to run the application as:

{{Cmd|sudo -u apache pkill apache}}

You can set an alias for the user to run an application as using the <code>Runas_Alias</code> directive. Its use is identical to the other <code>_Alias</code> directives we have seen before.

=== Passwords and default settings ===

By default, {{c|sudo}} asks the user to identify himself using his own password. Once a password is entered, {{c|sudo}} remembers it for 5 minutes, allowing the user to focus on his tasks and not repeatedly re-entering his password.

Of course, this behavior can be changed: you can set the <code>Defaults:</code> directive in {{Path|/etc/sudoers}} to change the default behavior for a user.

For instance, to change the default 5 minutes to 0 (never remember):

{{CodeBox|title=Changing the timeout value|1=
Defaults:larry  timestamp_timeout=0
}}

A setting of <code>-1</code> would remember the password indefinitely (until the system reboots).

A different setting would be to require the password of the user that the command should be run as and not the users' personal password. This is accomplished using <code>runaspw</code>. In the following example we also set the number of retries (how many times the user can re-enter a password before {{c|sudo}} fails) to <code>2</code> instead of the default 3:

{{CodeBox|title=Requiring the root password instead of the user's password|1=
Defaults:john   runaspw, passwd_tries=2
}}

Another interesting feature is to keep the <code>DISPLAY</code> variable set so that you can execute graphical tools:

{{CodeBox|title=Keeping the DISPLAY variable alive|1=
Defaults:john env_keep=DISPLAY
}}

You can change dozens of default settings using the <code>Defaults:</code> directive. Fire up the {{c|sudoers}} manual page and search for <code>Defaults</code>.

If you however want to allow a user to run a certain set of commands without providing any password whatsoever, you need to start the commands with <code>NOPASSWD:</code>, like so:

{{CodeBox|title=Allowing emerge to be ran as root without asking for a password|1=
larry     localhost = NOPASSWD: /usr/bin/emerge
}}

=== Bash completion ===

Users that want bash completion with sudo need to run this once.

{{Cmd|sudo echo "complete -cf sudo" >> $HOME/.bashrc}}

=== Zshell completion ===

Users that want zsh completion for sudo can set the following in {{Path|.zprofile}} and {{Path|.zshrc}} respectively

{{FileBox|filename=.zprofile|title=Adding zshell completion|lang=bash|1=
if [[ $EUID != 0 ]]; then
    typeset -xT SUDO_PATH sudo_path
    typeset -U sudo_path
    sudo_path=({,/usr/local,/usr}/sbin(N-/))
    alias sudo="sudo env PATH=\"SUDO_PATH:$PATH\""
fi
}}

{{FileBox|filename=.zshrc|title=Adding zshell completion|lang=bash|1=
zstyle ':completion:*:sudo:*' environ PATH="$SUDO_PATH:$PATH"
}}

With the above change, all commands in the {{Path|/sbin}}, {{Path|/usr/sbin}} and {{Path|/usr/local/sbin}} locations will be available to the shell for completion when the command is prefaced with 'sudo'.

<div class="mw-translate-fuzzy">
== Utiliser sudo ==
</div>

=== Lister les privilèges ===

<div class="mw-translate-fuzzy">
Pour connaître vos propres autorisations, exécutez la commande <tt>sudo -l</tt> :
</div>

<div class="mw-translate-fuzzy">
{{Cmd|sudo -l|output=<pre>
User swift may run the following commands on this host:
    (root)   /usr/libexec/xfsm-shutdown-helper
    (root)   /usr/bin/emerge
    (root)   /usr/bin/passwd [a-zA-Z0-9_-]*
    (root)   !/usr/bin/passwd root
    (apache) /usr/bin/pkill
    (apache) /bin/kill
</pre>
}}
</div>

Si des commandes se trouvent dans {{Path|/etc/sudoers}} qui ne requièrent pas que vous saisissiez un mot de passe, il ne sera pas non plus nécessaire de saisir un mot de passe pour lister les entrées. Autrement, on pourrait vous demander votre mot de passe s'il n'est pas mémorisé.

=== Prolonger le temps de mémorisation du mot de passe  ===

<div class="mw-translate-fuzzy">
Par défaut, si un utilisateur a saisi son mot de passe pour s'identifier auprès de <code>sudo</code>, ce mot de passe est mémorisé 5 minutes. Si l'utilisateurs désire prolonger ce bail, il peut exécuter  <code>sudo -v</code> pour remettre à zéro le compteur de temps de manière telle qu'il dispose d'encore 5 minutes avant que  <code>sudo</code> ne lui réclame à nouveau son mot de passe
</div>

{{Cmd|sudo -v}}

<div class="mw-translate-fuzzy">
L'inverse consiste à tuer le compteur avec <code>sudo -k</code>.
</div>

== References ==
{{reflist}}

[[Category:Software]]
