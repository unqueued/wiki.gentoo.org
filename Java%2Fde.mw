<languages />
{{InfoBox stack
|{{InfoBox wikipedia|Java_(programming_language)|header=true}}
|{{InfoBox project|Java}}
}}
<div class="mw-translate-fuzzy">
Diese Seite gibt eine Einführung in Java und erklärt die Nutzung von Java unter Gentoo.
</div>

== Was ist Java? ==

=== Übersicht ===

<div class="mw-translate-fuzzy">
Java ist eine Programmiersprache die von Sun Microsystems entwickelt wurde. Die Sprache ist objektorientiert. Javaprogramme sind auf verschiedenen Platformen lauffähig, ohne das sie neu kompiliert werden müssen. Es ist zwar möglich Javacode für spezielle Platformen zu kompilieren, aber gerade die Portabilität ist, neben etwa dem Garbage Collector, ein Grund für Javas Popularität. Um die Platformunabhängigkeit zu gewährleisten, erstellt der Javacompiler sogenannten "Java Bytecode". Dies ist eine Zwischenstufe zwischen Quelltext und ausführbarem Binärformat. Dieser Bytecode wird nicht direkt sondern in einer Java Laufzeitumgebung (JRE) ausgeführt.
</div> 

<div class="mw-translate-fuzzy">
Um Java Bytecode auszuführen, muss eine Java Laufzeitumgebung (JRE) installiert sein. Sie stellt die nötigen Bibliotheken sowie die platformabhängige Java Virtual Machine (JVM) bereit. Ein Java Development Kit (JDK) enthält zusätzliche Entwicklungswerkzeuge, etwa einen Java Bytecode Compiler und einen Debugger.
</div>

=== JVM languages ===

The Java virtual machine is not used exclusively by Java programming language. Multiple programming languages use the Java platform and run on the JVM. Examples of such include: [[Wikipedia:Clojure|Clojure]], [[Wikipedia:Apache Groovy|Apache Groovy]], [[Wikipedia:Kotlin (programming language)|Kotlin]] or [[Wikipedia:Scala (programming language)|Scala]].

<div class="mw-translate-fuzzy">
==Eine virtuelle Maschine installieren ==
</div>

=== Die Auswahl ===

<div class="mw-translate-fuzzy">
Gentoo bietet viele verschiedene Laufzeitumgebungen (JREs) und Development Kits (JDKs) an. Unter anderem sind dies:
</div> 

<div class="mw-translate-fuzzy">
{| class="wikitable" style="text-align: left;" 
|- 
! Anbieter
! JDK
! JRE
|- 
| IcedTea Open Java SE (früher icedtea6-bin)
| dev-java/icedtea-bin
| 
|- 
| Oracle Java 7 SE
| dev-java/oracle-jdk-bin
| dev-java/oracle-jre-bin
|- 
| Sun Java 6 SE (maskiert, inaktiv nach der Übernahme von Sun durch Oracle)
| dev-java/sun-jdk
| dev-java/sun-jre-bin
|- 
| IBM Java SE
| dev-java/ibm-jdk-bin
| dev-java/ibm-jre-bin
|-
|}
</div>

<div class="mw-translate-fuzzy">
=== Eine JRE/JDK installieren ===
</div>

<div class="mw-translate-fuzzy">
Um das im aktuellen Profil als Standard gesetzte JDK zu installieren, reicht es <code> emerge virtual/jdk </code> auszuführen. Für die JRE entsprechend <code>emerge virtual/jre</code>.
</div>

{{Emerge|virtual/jdk}}

To install the profile's default '''JRE''' run:

{{Emerge|virtual/jre}}

<div class="mw-translate-fuzzy">
Einige JDKs und JREs, z.B. die Packete von Sun, besitzen spezielle Lizenzen. Ohne diese, z.B. dlj-1.1, explizit via ACCEPT_LICENSE in {{Path|/etc/portage/make.conf}} zu akzeptieren, können die entsprechenden Packete nicht installiert werden. Informationen wie eine Lizenz in {{Path|make.conf}} akzeptiert werden kann, befinden sich im [http://www.gentoo.org//doc/de/handbook/handbook-x86.xml?part=2&chap=1#doc_chap4 Portage Handbuch]
</div>

<div class="mw-translate-fuzzy">
Um Schwierigkeiten mit Lizenzen zu vermeiden, kann auf <code>icedtea-bin</code> zurückgegriffen werden. Dies ist eine freie Java Implementierung aus dem OpenJDK Projekt.
</div> 

<div class="mw-translate-fuzzy">
{{Note|Ein JDK beinhaltet stets auch eine JRE, es ist also nicht notwendig neben einem JDK eine JRE zu installieren.}}
</div>

=== Installing IcedTea GCJ Virtual Machine ===

{{Important|{{c|gcj}} is deprecated and is removed in GCC versions 7.0 and greater. It is unavailable from GCC 6.0 on Gentoo. Consider this section deprecated.}}

The IcedTea virtual machine is provided in source code and requires compilation by a Java bytecode compiler. This bootstrapping can be executed by the GNU Compiler for Java (GCJ). This compiler is available when GCC is built with the <code>gcj</code> USE flag.

When GCC is rebuilt with this USE flag set, the {{Package|dev-java/icedtea}} package can be installed. Because of a Portage bug, users need to install {{Package|dev-java/gcj-jdk}} and {{Package|dev-java/ant-core}} explicitly first if they are not already present.

{{Emerge|dev-java/gcj-jdk dev-java/ant-core|params+=--oneshot}}
{{Emerge|dev-java/icedtea:7}}

=== Installation von "fetch-restricted" virtuellen Maschinen ===

<div class="mw-translate-fuzzy">
Einige JDKs und JREs benötigen einige extra Schritte vor der Installation. <code>emerge</code> weist beim ersten Installationsversuch darauf hin.
</div>

<div class="mw-translate-fuzzy">
In den ebuild-Dateien oder in der Ausgabe von emerge finden sich Informationen wo die benötigten Dateien manuell heruntergeladen werden können. Diese müssen, wie angegeben, in {{Path|/usr/portage/distfiles}} abgelegt werden. Danach kann die Installation wie üblich via emerge durchgeführt werden.
</div>

=== Setting up a headless JRE === 

Sometimes there is no need for a full JRE with all the capabilities of java. Using java on a server often does not require any GUI, graphical, sound or even printer related features. To install a simplified (sometimes also referred to as headless) JRE, a few USE flags need to be changed for the selected JRE flavor.

{{FileBox|filename=/etc/portage/package.use|title=Required USE flag changes|1=
dev-java/icedtea headless-awt -alsa -cups
dev-java/icedtea-bin headless-awt -alsa -cups
dev-java/oracle-jre-bin headless-awt -alsa -cups
}}

Depending on the current Gentoo profile, this might already be the case. As usual, the USE flag settings that are applicable to a particular package can be checked by running {{c|emerge}} in pretend mode:

{{Cmd|emerge --pretend --verbose virtual/jre}}

<div class="mw-translate-fuzzy">
== Die virtuelle Maschine konfigurieren ==
</div>

=== Übersicht ===

Gentoo bietet die Möglichkeit mehrere JDKs oder JREs parallel zu benutzen. 

<div class="mw-translate-fuzzy">
Mit <code>java-config</code>, können die systemweiten Einstellungen geändert werden. Dazu sind natürlich Root-Rechte nötig. <code>java-config</code> kann aber auch als einfacher Benutzer verwendet werden um die eigenen Einstellungen anzupassen.
</div> 

<div class="mw-translate-fuzzy">
{{Note|Die System- oder Benutzer-Einstellungen können auch via ''eselect'' gesetzt werden. Siehe <code>eselect java-vm help</code>.}}
</div>

=== Setzen der Standard virtuellen Maschine ===

<div class="mw-translate-fuzzy">
Mit dem Kommando <code>java-config --list-available-vms</code> erhält man eine Liste aller auf dem System installierten JDKs und JREs. Eine Beispielausgabe ist:
</div> 

<div class="mw-translate-fuzzy">
{{RootCmd|java-config --list-available-vms|output=<pre>
The following VMs are available for generation-2:
1&#41;      IcedTea-bin 1.10.4 [icedtea-bin]
2&#41;      Sun JDK 1.5.0.20 [sun-jdk-1.5] (Build Only)
*&#41;      Sun JDK 1.6.0.16 [sun-jdk-1.6]
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
{{Note|Virtuelle Machinen die als "Build Only" markiert sind können Sicherheitslücken enthalten oder nicht mehr aktiv betreut sein. Es ist empfehlenswert diese weder als System- noch als Benutzer-VM zu setzen.}}
</div>

<div class="mw-translate-fuzzy">
Der ''*'' markiert die aktuelle VM (Systemweit oder für den Benutzer, falls gesetzt). Der Name in eckigen Klammern ist das Handle der entsprechenden VM. Mit <code>java-config --set-system-vm</code> und dem Handle oder der ID kann die aktuelle VM gesetzt werden. Hier ist ein Beispiel:
</div>

Setzen der System-VM via Handle (bevorzugte Methode):

<div class="mw-translate-fuzzy">
{{RootCmd|java-config --set-system-vm sun-jdk-1.6|output=<pre>
Now using sun-jdk-1.6 as your generation-2 system JVM
</pre>}}
</div>

<div class="mw-translate-fuzzy">
Alternativ kann die VM durch die ID gewählt werden:
</div>

<div class="mw-translate-fuzzy">
{{RootCmd|java-config --set-system-vm 3|output=<pre>
Now using sun-jdk-1.6 as your generation-2 system JVM
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
Als normaler Benutzer, kann <code>java-config --set-user-vm</code> verwendet werden.
</div> 

<div class="mw-translate-fuzzy">
{{Note|Es ist nicht länger nötig <code>source</code> zu verwenden um die Äderungen der System-/Nutzer-VM wirksam zu machen.}}
</div>

<div class="mw-translate-fuzzy">
=== Build-Only-VM ===
</div>

<div class="mw-translate-fuzzy">
Einige virtuelle Machinen sind als "build-only" markiert. Dies kann an bekannten Sicherheitslücken oder an der fehlenden aktiven Betreuung des Projekts liegen. Diese VMs werden von Gentoo nicht automatisch zum Ausführen von Anwendungen benutzt. Trotzdem sind sie noch verfügbar, da sie von einigen Packete beim komplieren benötigt werden. Vom Setzen solcher VMs als aktive System- oder Nutzer-VM wird dringend abgeraten. Andernfalls werden diese VMs bei der Ausführung von {{Path|/usr/bin/{java,javac,..}}} oder von Packeten die nicht die Gentoo Startskripte benutzen verwendet.
</div>

== Setzen des standard Klassenpfads, CLASSPATH ==

<div class="mw-translate-fuzzy">
{{Warning|Die Optionen in diesem Abschnitt sind veraltet und werden in Zukunft nicht mehr unterstützt. Es wird daher dringend davon abgeraten sie zu benutzen. Java-Projekte verwalten idealerweise ihren Klassenpfad selbst. Wenn explizit ein Klassenpfad via CLASSPATH gesetzt wird, können einige Anwendungen eventuell fehlerhaft ausgeführt werden. Etwa weil sich im Klassenpfad plötzlich Klassen befinden die die Anwendung dort nicht erwartet hat.}}
</div>

<div class="mw-translate-fuzzy">
<code>java-config</code> kann benutzt werden um einen systemweiten oder benutzerspezifischen Klassenpfad zu setzten.
</div> 

<div class="mw-translate-fuzzy">
Zu erst ist es zweckmäßig eine Liste mit auf dem System verfügbaren Java-Bibliotheken zu erstellen. Dies sind Kandidaten für die Aufnahme in CLASSPATH.
</div> 

{{RootCmd|java-config --list-available-packages|output=<pre>
[xerces-2] The next generation of high performance, fully compliant XML parsers in the Apache Xerces family (/usr/share/xerces-2/package.env)
[junit] Simple framework to write repeatable tests (/usr/share/junit/package.env)
[bsh] BeanShell: A small embeddable Java source interpreter (/usr/share/bsh/package.env)
[bcel] The Byte Code Engineering Library: analyze, create, manipulate Java class files (/usr/share/bcel/package.env)
[log4j] A low-overhead robust logging package for Java (/usr/share/log4j/package.env)
...
</pre>
}}

<div class="mw-translate-fuzzy">
Hier sind die Namen in eckigen Klammern die IDs oder Handles die an <code>java-config --set-system-classpath</code> übergeben werden können. Hier ist ein Beispiel:
</div> 

{{RootCmd|java-config --set-system-classpath log4j,xerces-2}}

<div class="mw-translate-fuzzy">
{{Note|Das aktuelle Arbeitsverzeichnis ({{Path|.}}) ist nicht Teil des systemweiten Klassenpfads. Dies sollte im Loginprofil angepasst werden.}}
</div>

<div class="mw-translate-fuzzy">
Es ist notwendig die Umgebung durch "sourcen" von {{Path|/etc/profile}} oder durch Ab- und Anmelden zu aktualisieren.
</div>

<div class="mw-translate-fuzzy">
Für Benutzer erstellt <code>java-config --set-user-classpath</code> die Datei {{Path|~/.gentoo/java-env-classpath}}. Diese sollte dann vom Shell-Profil gesourced werden.
</div> 

<div class="mw-translate-fuzzy">
{{Code|Sourcen des benutzerspezifischen Klassenpfads|<pre>
if [[ -f "${HOME}/.gentoo/java-env-classpath" ]]; then
       source ${HOME}/.gentoo/java-env-classpath
fi
</pre>
}}
</div>

<div class="mw-translate-fuzzy">
Um einen systemweiten Klassenpfad zu setzen, kann folgendes in Shell-Profil eingetragen werden. Wie bereits erwähnt ist aber dringend davon abzuraten.
</div> 

{{RootCmd|export CLASSPATH{{=}}"${CLASSPATH}:$(java-config --classpath log4j,xerces-2)"}}

<div class="mw-translate-fuzzy">
== Java Browser Plugins ==
</div>

{{Important|The Java plugin support had been deprecated in JDK 9<ref>[https://www.java.com/en/download/faq/jdk9_plugin.xml JDK 9 and the Java Plugin], java.com. Retrieved on November 30, 2018</ref>.}}

The Java [[:Category:Web_browser|browser]] plugin used to be managed via {{c|eselect java-nsplugin}}. This has now been removed in favor of a simpler out-of-the-box experience. For basic usage, simply emerge the chosen JVM with the <code>nsplugin</code> USE flag enabled. Note that Oracle's plugin is only available for {{Keyword|amd64}} and {{Keyword|x86}}.

{{Note|Note that [[Chromium]]-based browsers since version 42 and [[Firefox]] since version 52 no longer support [[Wikipedia:NPAPI|NPAPI]]-based plugins<ref>[https://java.com/en/download/help/enable_browser.xml How do I enable Java in my web browser?], java.com. Retrieved on November 30, 2018</ref>. This effectively disables the Java plugin on modern browsers.}}

For more information, including JVM selection, Web Start, and multilib, see [https://gitweb.gentoo.org/repo/gentoo.git/plain/dev-java/icedtea-web/files/README.gentoo-r1 the README installed with icedtea-web].

== USE-Flags für Java ==

=== Setzen der USE-Flags ===

<div class="mw-translate-fuzzy">
Für mehr Informationen über USE-Flags sei auf das[http://www.gentoo.org//doc/de/handbook/handbook-x86.xml?part=2&chap=2 USE-Flag Kapitel] im Gentoo-Handbuch verwiesen.
</div>

<div class="mw-translate-fuzzy">
=== Die USE-Flags ===
</div>

<div class="mw-translate-fuzzy">
* '''java''' aktiviert die Java Unterstützung in diversen Programmen.
* '''nsplugin''' fügt Unterstüzung für Java-Browser-Plugins hinzu. Die wird zur Benutzung von Java-Applets im Webbrowser benötigt.
* '''source'''  installiert ein Archiv mit den Quelltexten des Packets. Die wird typischerweise von IDEs um den Code von verendeten Bibliotheken anzuzeigen.
* '''jce''' aktiviert Unterstützung für die Java Cryptographic Engine.
* '''doc''', für Java-Packete wird mit Hilfe von javadoc eine API-Dokumentation erstellt.
</div>

Following USE flags go in [[Gentoo_Java_USE_flags|JAVA_PKG_IUSE]].
* The [https://packages.gentoo.org/useflags/source <code>source</code>] flag installs a zip of the source code of a package. This is traditionally used for IDEs to 'attach' source to the libraries that are being use;
* For Java packages, the [https://packages.gentoo.org/useflags/doc <code>doc</code>] flag will build API documentation using javadoc.

== See also ==

* [[Java Developer Guide]]
* [[Project:Java/Why_build_from_source]]
* [[Project:Java/Getting_Involved]]

== External resources ==

<div class="mw-translate-fuzzy">
* The [http://www.gentoo.org/proj/en/java/ Java Project Page] 
* The [http://news.gmane.org/gmane.linux.gentoo.java gentoo-java], [http://news.gmane.org/gmane.linux.gentoo.user gentoo-user], and [http://news.gmane.org/gmane.linux.gentoo.devel gentoo-dev] mailing list archives
* [http://www.gentoo.org/irc://irc.gentoo.org/gentoo #gentoo] and [http://www.gentoo.org/irc://irc.gentoo.org/gentoo-java #gentoo-java] on IRC
* [http://en.wikipedia.org/wiki/Java_programming_language Wikipedia's entry for Java] 
* Fragen oder Anregungen bezüglich dieser Seite können per {{Mail|java@gentoo.org}} an das Gentoo-Java-Team gerichtet werden.
</div>

<div class="mw-translate-fuzzy">
* java-config man Page
* <code>java-config --help</code>
</div>

* {{c|man java-config}}
* {{c|java-config --help}}

For suggestions or questions regarding this document, please email the Gentoo Java team: {{Mail|java@gentoo.org}}

== References ==

{{Reflist}}

[[Category:Programming_language]]

{{Migrated|originalauthors=Joshua Nichols, Karl Trygve Kalleberg, {{Dev|nightmorph}}}}
