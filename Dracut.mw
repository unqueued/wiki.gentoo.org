Dracut is an initramfs infrastructure and aims to have as little as possible hard-coded into the initramfs. It originated from the [http://fedoraproject.org/wiki/Dracut Fedora Project] and was ported to Gentoo in the [http://www.google-melange.com/gsoc/project/google/gsoc2010/aidecoe/2 2010 Google Summer of Code]. For more detailed information, refer to the [http://www.kernel.org/pub/linux/utils/boot/dracut/dracut.html#dracut.kernel documentation] at kernel.org.

== Installation ==
Before you can use the images generated by dracut, your kernel must include [[initramfs]] support. The ebuild will warn you if your kernel is missing the required options:
{{Kernel|Enabling the initramfs|<pre>
    General setup  --->
      [*] Initial RAM filesystem and RAM disk (initramfs/initrd) support
[*] Enable loadable module support
    Device Drivers --->
      Generic Driver Options --->
        [*] Maintain a devtmpfs filesystem to mount at /dev   
</pre>}}

The behavior of dracut is controlled by dracut modules (not to be confused with kernel modules). Each dracut module you include in your initramfs produces certain additional behavior at boot time. By default,  {{package|sys-kernel/dracut}} installs a set of base modules that are most commonly needed for systems where the rootfs is found on a simple local block device. If you need additional features, such as RAID, LVM, or NFS mounted root support, you can install optional modules by listing them in the {{highlight|DRACUT_MODULES}} expansion variable in {{path|/etc/make.conf}}:
{{File|/etc/make.conf||<pre>
DRACUT_MODULES="gensplash nfs"
</pre>}}

Certain modules also require additional {{highlight|USE}} flags to be set (see [[#Optional_Modules]] for details). In general, you should not enable any of the {{highlight|USE}} flags for {{package|sys-kernel/dracut}} unless Portage asks you to. It will tell you if there are any missing {{highlight|REQUIRED_USE}} constraints when you attempt to merge:
{{genericCmd|<pre>
  The following REQUIRED_USE flag constraints are unsatisfied:
    dracut_modules_lvm? ( device-mapper ) dracut_modules_nfs? ( net )
</pre>}}

Since {{package|sys-kernel/dracut}} is still unstable, if you are not already running ~arch, you will need to keyword it:
{{RootCmd|echo "sys-kernel/dracut" >> /etc/portage/package.keywords|emerge {{package|sys-kernel/dracut}}}}

== Building An initramfs Image ==

=== Default Images ===
Once you have installed dracut, you can use it to build an initramfs image. The simplest way to do this is to just run
{{RootCmd|mount /boot
|RootCmd|dracut}}

The initramfs image created this way is a generic image, which will include all installed modules and system tools that it can find, suitable for booting a variety of machines. If you are producing an initramfs for just a single machine, you can specify that dracut should go into host-only mode:

{{RootCmd|dracut --host-only}}

The produced image will contain only those elements used by the local machine for booting. Certain modules behave differently in host-only mode. The kernel-modules module, for example, will only include the tools and modules used by the current rootfs file system, and the i18n module will install the fonts and keymaps for the local machine. Otherwise, every available file system, font, etc. would be included.

By default, dracut will produce an image suitable for booting the currently active kernel; it will pull the kernel modules needed for that kernel, etc. The output will be written into your {{path|/boot}} folder (which you should already have mounted), in a file called {{path|/boot/initramfs-<kernel version>.img}}. You can override both options by specifying a new file name and kernel version on the command line, in that order. Both parameters are optional, but if you want to override the kernel version and keep the default file name you need to pass a placeholder empty string as the first parameter:

{{RootCmd|dracut --host-only <nowiki>''</nowiki> 3.2.5-hardened}}

=== Default Modules ===

When installed without any use flags, dracut installs a basic set of modules that can boot a system using a locally attached block device for its rootfs. The purpose of each module is to arrange for files to be included in the final initramfs image. In addition, dracut exposes hooks that run at certain points, which modules can hook into to perform required boot actions.

{| class="wikitable"
! Module !! Description !! Default
|-
| dash || includes /bin/dash as /bin/sh || enabled
|-
| i18n || includes keymaps, console fonts, etc. || enabled
|-  
| rpmversion || includes dracut version in initramfs || disabled
|-
| kernel-modules || includes the kernel modules for root filesystems and other boot-time devices || enabled
|-
| fstab-sys || arranges for arbitrary partitions to be mounted before rootfs || disabled
|-
| resume || allows initramfs to resume from low-power state || enabled
|- 
| rootfs-block || arranges for the block device containing the rootfs to be mounted || enabled
|-
| terminfo || includes a terminfo file || enabled 
|-
| udev-rules || includes udev and some basic rules || enabled
|-
| securityfs || arranges for the securityfs to be mounted early || disables
|-
| usrmount || arranges for /usr to be mounted  || enabled
|-
| base || includes most basic utilities || enabled
|- 
| fs-lib || includes filesystem tools (including mount) || enabled
|-
| img-lib || includes tools to decompress images || disabled 
|-
| shutdown || sets up hooks to run on shutdown || enabled
|}

=== Adding Modules ===

When run without any additional parameters, dracut will include the default enabled modules. You can override these options in two ways: command line, or configuration file. Editing your configuration file will set up dracut to be re-run easily when you change kernels or other boot-time options. Options specified in {{path|/etc/dracut.conf}} can be overridden by files in {{path|/etc/dracut.conf.d}}, which are installed by various dracut-aware packages. Both options can be overridden by command-line parameters. The following configuration options deal with the default modules list:

{{File|/etc/dracut.conf||<pre>
# Equivalent to -H
hostonly="yes"

# Equivalent to -m "module module module"
dracutmodules+="dash kernel-modules rootfs-block udev-rules usrmount base fs-lib shutdown"

# Equivalent to -a "module"
add_dracutmodules+="module"

# Equivalent to -o "module"
omit_dracutmodules+="module"
</pre>}}

Specifying <code>dracutmodules</code> (or the <code>-m</code> parameter) will override the default list and install only those modules you specified. This can help cut down significantly on your image size (for example, if you don't need any kernel modules, or i18n support, etc.) If you aren't sure which modules you need, you should build one fully-features image and keep it in {{path|/boot}} while you experiment. If anything goes wrong, you can edit your grub.conf at boot to switch to that.

The other options can be used to add or remove items from the default list, including your own [[#Custom_Modules|custom modules]].

=== Optional Modules ===

Adding additional modules to your installation involves setting the appropriate values for your {{highlight|DRACUT_MODULES}} variable, as described in the [[#Installation]] section. Each additional module you include brings with it additional prerequisite packages, and may require {{highlight|USE}} flag changes to either {{package|sys-kernel/dracut}} or other modules. In most cases, you should already have the additional packages installed. If dracut tries to bring in a lot of additional packages you should confirm that you are asking for the correct module.

The optional modules included as of {{package|sys-kernel/dracut-016}} are listed below, with their additional requirements:

{|class="wikitable sortable"
! Module !! Purpose !! USE Flag !! Additional Packages
|-
| biosdevname || || || {{package|sys-apps/biosdevname}}, {{package|sys-apps/pciutils}}
|-
| btrfs || || || {{package|sys-fs/btrfs-progs}}
|-
| caps || || || {{package|sys-libs/libcap}}
|- 
| crypt || || <code>device-mapper</code><sup>1</sup>, <code>static-libs</code><sup>4</sup> || {{package|cryptsetup}}
|-
| crypt-gpg || (requires <code>crypt</code> module) || || {{package|app-crypt/gnupg}}
|-
| dmraid || || <code>device-mapper</code><sup>1</sup> || {{package|sys-fs/multipath-tools}}, {{package|sys-fs/dmraid}}
|-
| dmsquash-live || || <code>device-mapper</code><sup>1</sup></sup> ||
|-
| gensplash || || <code>static-libs</code><sup>4</sup> || {{package|media-gfx/splashutils}}
|-
| iscsi || || <code>net</code><sup>2</sup> || {{package|sys-block/open-iscsi}}
|- 
| livenet || (requires <code>dmsquash-live</code> modules) || <code>device-mapper</code><sup>1</sup>, <code>net</code><sup>2</sup> ||
|-
| lvm  || || <code>device-mapper</code><sup>1</sup> || {{package|sys-fs/lvm2}}
|-
| mdraid || || || {{package|sys-fs/mdadm}}
|-
| multipath || || || {{package|sys-fs/multipath-tools}}
|-
| nbd || || <code>net</code><sup>2</sup> || {{package|sys-block/ndb}}
|-
| nfs || || <code>net</code><sup>2</sup> || {{package|net-fs/nfs-utils}} {{package|net-nds/rpcbind}}
|- 
| plymouth || || <code>libkms</code><sup>3</sup> || {{package|sys-boot/plymouth}}
|-
| ssh-client || || <code>net</code><sup>2</sup> || {{package|dev-libs/openssl}}
|-
| syslog || || || {{package|app-admin/syslog-ng}} or {{package|app-admin/rsyslog}}
|}

# The {{highlight|<code>device-mapper</code>}} flag will require ''either'' {{package|sys-fs/device-mapper}} ''or'' {{package|sys-fs/lvm2}}
# The {{highlight|<code>net</code>}} flag will require {{package|net-misc/curl}}, {{package|net-misc/dhcp}}, ''and'' {{package|sys-apps/iproute2}}
# {{package|sys-boot/plymouth}} requires that {{package|x11-libs/libdrm}} be built with the {{highlight|<code>libkms</code>}} flag
# The additional packages require that one or more dependency libraries be built with the {{highlight|<code>static-libs</code>}} flag

== Booting The initramfs ==

Once you have the image built, the final step is to include the image in the boot loader. To do this, simply add a line in your grub.conf:

{{File|/boot/grub/grub.conf||<pre>
kernel /boot/vmlinuz root=UUID=00000000-0000-0000-0000-000000000000
initrd /boot/initramfs.img
</pre>}}

It is recommended that you use the UUID= (or LABEL=) form of the root specification; to guard against your device names changing between boots. You can find the UUID of your root device by running this command:

{{RootCmd|ls -alF /dev/disk/by-id}}

Any parameters you need to pass to the dracut modules are passed on the kernel command line. If you are net booting, the DHCP server can also provide command-line parameters. The dracut scripts parse the kernel command line very early in the boot process and use the information found there to adjust their behavior. The list of options, by module, can be found in the man dracut.cmdline page.

== Tasks ==

=== NFS Boot ===
For an NFS boot, you need only 3 modules and the nfs dracut module. 
{{USEflag
|net++yes+Set of helper modules providing networking support.
|dracut_modules_nfs++yes+Support NFS.}}
{{RootCmd|dracut -m "nfs network base" initramfs-nfs-only.img}}


Booting is done with the following line in your [[Syslinux_Bootloader|PXE config]]. The rd.ip=auto let's it auto detect the NFS settings through DHCP. The NFS boot path is provided to the client through the DHCP option "root-path" with the following value: <SERVER>:<NFS Export>
{{File|/var/lib/tftpboot/pxelinux.cfg/default||<pre>
...
 APPEND initrd=initramfs-nfs-only.img rd.ip=auto root=dhcp
...
</pre>}}

=== NBD Boot ===
For an NBD boot, you need only 3 modules and the nbd dracut module. 
{{USEflag
|net++yes+Set of helper modules providing networking support.
|dracut_modules_nbd++yes+Support NBD.}}
{{RootCmd|dracut -m "nbd network base" initramfs-nbd-only.img}}


Booting is done with the following line in your [[Syslinux_Bootloader|PXE config]]. The rd.ip=auto let's it auto detect the NBD settings through DHCP. The NBD boot path is provided to the client through the DHCP option "root-path" with the following value: nbd:<SERVER>:<NBD_PORT>:<FS>
{{Note|Connecting to name based exports is not supported.}}
{{File|/var/lib/tftpboot/pxelinux.cfg/default||<pre>
...
 APPEND initrd=initramfs-nbd-only.img rd.ip=auto root=dhcp
...
</pre>}}

=== Other Filesystems ===
Other filesystems than the ones that are available through the Dracut modules can be installed using the {{Highlight|filesystems}} parameter. To include kernel modules, the {{Highlight|kernel-modules}} Dracut module also has to be included. This module is installed by default.
{{RootCmd|dracut -m "kernel-modules base" --filesystems "squashfs" initramfs-with-squashfs.img}}

== Custom Modules ==
This stub paragraph refers to [http://rich0gentoo.wordpress.com/2012/01/21/a-quick-dracut-module/ this description] for now.

[[Category:Core system]]
[[Category:Google Summer of Code]]
