Gentoo/FreeBSD is a Gentoo system based on FreeBSD. It is FreeBSD with the following changes:

* Portage replaces ports.
* The base system is managed by portage.
* Software in ./contrib and ./crypto is replaced with Gentoo Linux versions.
* The rc system is replaced with [[OpenRC]].
* Python, wget and bash are included in the base system to support portage.
* FreeBSD's bootloader is removed from the base system (useful for jails).

{{Note|Gentoo FreeBSD is not 100% binary-compatibility with regular FreeBSD due to SONAME differences. It is possible to workaround that by running regular FreeBSD in either a jail or chroot on Gentoo FreeBSD or vice versa.

Gentoo FreeBSD is also not 100% script-compatible with regular FreeBSD by default. Script compatibility can be restored by installing sys-freebsd/ubin-wrappers. This makes it possible to use *BSD software like pkgsrc.
}}

== Installation ==

=== Caution ===
Since this guide has only minimal information, knowledge of both Gentoo/Linux and FreeBSD may be needed. The [http://www.gentoo.org/doc/en/handbook/ Gentoo/Linux Handbook] and [http://www.freebsd.org/handbook/ FreeBSD Handbook] are your friends. 

=== Preparation ===
The installation media of FreeBSD 9.0 to which the LiveCD function was added are used for installation.
Please get the more suitable one of [http://ftp.freebsd.org/pub/FreeBSD/releases/i386/i386/ISO-IMAGES/9.0/ i386] or [http://ftp.freebsd.org/pub/FreeBSD/releases/amd64/amd64/ISO-IMAGES/9.0/ amd64]. Of course, -bootonly.iso can be used to install Gentoo/FreeBSD.

Please use the LiveDVD or LiveUSB of [http://www.pcbsd.org/ PC-BSD] if you want to use X Window System to G/FBSD installation.

Write to a CD or memory stick as necessary. 

Boot the PC using the installation CD.
Wait a moment while watching the boot process.
Please choose Live CD, if a Welcome screen is displayed. 
Then login prompt, enter root.

{{Note|If you have 4KB/sector HDD (aka AFT Drive)

Please select "2. [Esc]ape to loader prompt" at boot time if you have a 4KB/sector HDD.

Set the device name of your HDD with 4KB sectors in the boot loader. ada1 and ada2... to increase if you have more than one.

<pre>
set kern.cam.ada.0.quirks="1"
boot
</pre>
}}

==== Network setting ====
First, create a directory /tmp/bsdinstall_etc to rewrite the resolv.conf. 
{{RootCmd|mkdir -p /tmp/bsdinstall_etc}}

Identify your network devices. This example is em0. 
{{RootCmd|ifconfig|output=
<pre>em0: flags=8843&lt;UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST&gt; metric 0 mtu 1500
        options=209b&lt;RXCSUM,TXCSUM,VLAN_MTU,VLAN_HWTAGGING,VLAN_HWCSUM,WOL_MAGIC&gt;
        ether 00:00:00:00:00:00
        nd6 options=29&lt;PERFORMNUD,IFDISABLED,AUTO_LINKLOCAL&gt;
        media: Ethernet autoselect (1000baseT &lt;full-duplex&gt;)
        status: active
lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; metric 0 mtu 16384
        options=3&lt;RXCSUM,TXCSUM&gt;
        inet6 ::1 prefixlen 128
        inet6 fe80::1%lo0 prefixlen 64 scopeid 0x3
        inet 127.0.0.1 netmask 0xff000000
        nd6 options=21&lt;PERFORMNUD,AUTO_LINKLOCAL&gt;</pre>}}

Set the default gateway and IP address. 

If you not use DHCP (IP address is an example)
{{RootCmd|ifconfig em0 192.168.0.100
|route add default 192.168.0.1
|echo "nameserver 8.8.8.8" > /etc/resolv.conf (example used a Google Public DNS)}}

If you use DHCP
{{RootCmd|dhclient em0}}

==== Optional: want to install via ssh ====
So far we could not use ssh. If you want to install via ssh from this step. 

{{RootCmd| mkdir -p /tmp/etc
| mount -t tmpfs tmpfs /tmp/etc
| mount -t unionfs /tmp/etc /etc
| passwd
| echo "PermitRootLogin yes" &gt;&gt; /etc/ssh/sshd_config
| /etc/rc.d/sshd onestart}}

Please connect with any ssh client. The username is root.

==== Setting the Partition ====
The installation target device of serial ATA and IDE are /dev/ada*.
SCSI and USB drive are /dev/da*.
Please identify the HDD using ls /dev/ada* or dmesg | grep ada.
In this case, the device is ada0. 

{{RootCmd|dmesg {{!}} grep ada|output=<pre>
ada0 at ata0 bus 0 scbus0 target 0 lun 0
ada0: <QEMU HARDDISK 0.15.> ATA-7 device
ada0: 16.700MB/s transfers (WDMA2, PIO 8192bytes)
ada0: 12288MB (25165824 512 byte sectors: 16H 63S/T 16383C)
ada0: Previously was known as ad0
</pre>}}

===== If you want to use the UFS2 file system (GPT) =====
{{Note|GPT partition is the standard FreeBSD 9.0.
Please read the next MBR section if you want use MBR partition.}}

This example is simple only two partitions.
If necessary, you can split /, /usr, /var, /tmp, and /home.
Please set using gpart.

{| class="wikitable"
! Partition
! Filesystem
! Size
! Description
|-
|/dev/ada0p1
|none
|just a bit
|Reserved for bootloader
|-
|/dev/ada0p2
|UFS2 + SU
|entire disk - swap space
|Root partition
|-
|/dev/ada0p3
|swap
|Rest of the disk
|Swap partition
|}
{{Note|Please add options -a 4k to gpart add command of all, if you have AFT drive (4096bytes/sector). Start of the partition is properly configured, you can get the best performance.}}

{{RootCmd| gpart create -s GPT ada0
| gpart add -s 64k -t freebsd-boot ada0
| gpart add -s 10G -t freebsd-ufs -l root ada0
| gpart add -t freebsd-swap -l swap ada0}}

Please run gpart show in order to verify the partition could be set. 

{{RootCmd|gpart show|output=
<pre>
=&gt;      34  25165757  ada0  GPT  (12G)
        34       128     1  freebsd-boot  (64k)
       162  20971520     2  freebsd-ufs  (10G)
  20971682   4194109     3  freebsd-swap  (2G)</pre>}}

Results when you create a partition with option -a 4k.

{{RootCmd|gpart show|output=
<pre>
=&gt;      34  25165757  ada0  GPT  (12G)
        34         6        - free -  (3.0k)
        40       128     1  freebsd-boot  (64k)
       168  20971520     2  freebsd-ufs  (10G)
  20971688   4194096     3  freebsd-swap  (2G)
  25165784         7        - free -  (3.5k)
</pre>}}

===== If you want to use the UFS2 file system (MBR) =====

{| class="wikitable"
! Partition
! Filesystem
! Size
! Description
|-
|/dev/ada0s1a
|UFS2 + SU
|entire disk - swap space
|Root partition
|-
|/dev/ada0s1b
|swap
|Rest of the disk
|Swap partition
|}

{{RootCmd| gpart create -s mbr ada0
| gpart add -t freebsd ada0
| gpart set -a active -i 1 ada0
| gpart create -s bsd ada0s1
| gpart add -s 10G -t freebsd-ufs ada0s1
| gpart add -t freebsd-swap ada0s1}}

===== If you want to use the ZFS file system (experimental) / (GPT) =====
{{RootCmd|gpart create -s GPT ada0
|gpart add -s 64k -t freebsd-boot ada0
|gpart add -t freebsd-zfs -l zfs-system ada0}}

==== Creating and mounting a file system ====
===== If you want to use the UFS2 file system =====
Please do not forget newfs -L option to label. 

{{Note|Add option -j to newfs if you want to enable soft updates journaling.}}

Your choice GPT)
{{RootCmd|newfs -L gfbsdroot -U /dev/ada0p2}}

Your choice MBR)
{{RootCmd|newfs -L gfbsdroot -U /dev/ada0s1a}}

And mount it. 
{{RootCmd|mount /dev/ufs/gfbsdroot /mnt
|swapon /dev/gpt/swap (GPT)
|swapon /dev/ada0s1b (MBR)}}

===== If you want to use the ZFS file system (experimental) =====
Load the kernel module in order to enable ZFS.
{{RootCmd|kldload zfs}}

Prepare the RAM disk to write /boot/zfs/zpool.cache.
{{RootCmd|mount -t tmpfs tmpfs /boot/zfs}}

Please use gnop if you have 4KB/sector HDD. You can get the best performance.
{{RootCmd|gnop create -S 4096 /dev/gpt/zfs-system}}

Creates a new storage pool. if you are using gnop, please specify /dev/gpt/zfs-system.nop instead of /dev/gpt/zfs-system.

{{RootCmd|zpool create zsys /dev/gpt/zfs-system
|zfs set mountpoint{{=}}none zsys}}

Creates a new ZFS file system.
{{RootCmd|zfs create zsys/root
|zfs set mountpoint{{=}}/mnt zsys/root
|zfs mount -a
|zfs create zsys/root/usr
|zfs create zsys/root/var}}
{{RootCmd|zfs create zsys/root/tmp
|zfs create zsys/home
|zfs create -V 8gb zsys/swap
|zfs set org.freebsd:swap{{=}}on zsys/swap
|zfs set checksum{{=}}off zsys/swap}}
{{RootCmd|mkdir /mnt/home
|mount -t zfs zsys/home /mnt/home}}

==== Downloading the Stage3 Tarball and Portage snapshot ====
Now, Gentoo/FreeBSD 9.0 stage3 is available.

If you want to use amd64-fbsd, also available 9.1_rc2 version. 9.1_rc2 version is a critical problem in Gentoo/FreeBSD has been fixed. 

Please select 9.1_rc2 if you think no problem using RC version of FreeBSD.

{{RootCmd|cd /mnt
|fetch http://dev.gentoo.org/~aballier/fbsd9.0/x86/stage3-i686-freebsd-9.0.tar.bz2 (for x86-fbsd users)
|fetch http://dev.gentoo.org/~aballier/fbsd9.0/amd64/stage3-amd64-freebsd-9.0.tar.bz2 (for amd64-fbsd users / wants 9.0-release based stage3)
|fetch http://dev.gentoo.org/~aballier/fbsd9.1_rc2/stage3-amd64-freebsd-9.1_rc2.tar.bz2 (for amd64-fbsd users / wants 9.1-RC2 based stage3)
|fetch http://distfiles.gentoo.org/snapshots/portage-latest.tar.bz2}}

==== Unpacking stage3 and Portage snapshot ====
{{RootCmd|cd /mnt
|setenv LANG "en_US.UTF-8"
|tar xjpf stage3-*.tar.bz2 -C /mnt
|tar xjf portage-latest.tar.bz2 -C /mnt/usr}}

==== Entering the new Environment ====
{{RootCmd|mount -t devfs devfs /mnt/dev
|cp /etc/resolv.conf /mnt/etc/
|chroot /mnt /bin/bash}}

=== Settings and install more in chroot environment ===

==== The first settings and time zone settings ====
env-update and time zone settings. Of course, you can modify /etc/portage/make.conf. 

{{RootCmd|env-update && source /etc/profile
|cp /usr/share/zoneinfo/GMT /etc/localtime (please select your time zone)
|emerge -u sys-apps/portage ; emerge sys-devel/libtool app-admin/eselect
|emerge app-editors/nano
|mv /etc/make.conf /etc/portage/ (if /etc/make.conf is exist.)
|nano -w /etc/portage/make.conf (if necessary)
|prompt=(chroot) root #}}

==== Migrate to lib from lib64 (for amd64-fbsd users, 9.0 stage3 only) ====
{{Important|Do not skip this chapter!}}

If you are using 9.0 stage3 of amd64-fbsd, you will need to migrate to lib from lib64 first.

If you skip this step, all the commands you will not be able to run when upgrade sys-apps/baselayout. For details, see {{Bug|436560}}

{{RootCmd|wget -O /tmp/migrate_libdir.sh "http://git.overlays.gentoo.org/gitweb/?p{{=}}proj/gentoo-bsd.git;a{{=}}blob_plain;f{{=}}scripts/migrate_libdir.sh;hb{{=}}HEAD"
|bash /tmp/migrate_libdir.sh
|emerge sys-apps/baselayout
|prompt=(chroot) root #}}

==== Bug fixes (for all users, 9.0 stage3 only) ====
Bugs have been fixed in several packages. Please upgrade them. For details, see {{Bug|324445}}, {{Bug|412319}}, {{Bug|417031}} and {{Bug|421191}}.

{{RootCmd|emerge sys-devel/gcc-config
|emerge sys-freebsd/freebsd-mk-defs sys-freebsd/freebsd-lib app-arch/libarchive dev-libs/libedit
|prompt=(chroot) root #}}

==== Special settings for ZFS ====
If you select ZFS file system, the following additional work is required.

{{RootCmd|emerge gentoolkit
|euse -E zfs
|emerge sys-devel/flex
|emerge sys-freebsd/freebsd-cddl
|emerge sys-freebsd/freebsd-lib sys-freebsd/freebsd-ubin sys-freebsd/boot0
|prompt=(chroot) root #}}

==== Installing a kernel source ====
Unlike Gentoo/Linux, freebsd-sources package is the only sources.

{{RootCmd|USE{{=}}symlink emerge freebsd-sources
|prompt=(chroot) root #}}

==== Compiling and installing kernel ====
Now let's compile the kernel.
Copy the GENERIC in conf, you can change it by changing the kernel configuration.
For more information see the [http://www.freebsd.org/doc/handbook/kernelconfig.html FreeBSD Handbook].

{{RootCmd|emerge -u sys-devel/flex
|cd /usr/src/sys/i386/conf (case of x86-fbsd)
|cd /usr/src/sys/amd64/conf (case of amd64-fbsd)
|cp GENERIC.hints /boot/device.hints
|prompt=(chroot) root #}}
{{RootCmd|config GENERIC
|cd ../compile/GENERIC
|make cleandepend &amp;&amp; make depend &amp;&amp; make -j3 &amp;&amp; make install
|prompt=(chroot) root #}}

==== Installing the boot loader ====
Let's install a boot loader to boot the Gentoo/FreeBSD.
Boot loader configuration is done after exiting the chroot.

{{Note|gcc 4.5.x is required in order to compile boot0. Details, see {{Bug|409815}}
}}

{{RootCmd|emerge -u '<sys-devel/gcc-4.6'
|prompt=(chroot) root #}}

{{RootCmd|ls /usr/bin/gcc-4.5*|output=
/usr/bin/gcc-4.5.4
|prompt=(chroot) root #}}

{{RootCmd|CC{{=}}gcc-4.5.4 emerge sys-freebsd/boot0
|prompt=(chroot) root #}}

==== System setting ====
Familiar setting. 
Please refer to [http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml?part=1&amp;chap=8 Gentoo Linux Handbook] if you need more information.

If you select UFS2
{{RootCmd|nano -w /etc/fstab|output=
<pre># Device	Mountpoint	FStype	Options	Dump	Pass#
/dev/ufs/gfbsdroot	/		ufs	rw	1	1

#your choice GPT (don't forget comment out)
#/dev/gpt/swap	none		swap	sw	0	0

#your choice MBR (don't forget comment out)
#/dev/ada0s1b	none		swap	sw	0	0
</pre>
|prompt=(chroot) root #}}

If you select ZFS
{{RootCmd|nano -w /etc/fstab|output=
<pre># Device	Mountpoint	FStype	Options	Dump	Pass#
#/dev/ad0s1a	/		ufs	rw	1	1
#/dev/ad0s1b	none		swap	sw	0	0
zsys/root	/		zfs	rw	0	0
</pre>
|prompt=(chroot) root #}}

Setting the host name
{{RootCmd|nano -w /etc/conf.d/hostname|output=
<pre># (Set the hostname variable to your host name)
hostname="daemon"
</pre>
|prompt=(chroot) root #}}

Editing network setting
{{RootCmd|nano -w /etc/conf.d/net|output=
<pre># (Set the dns_domain variable to your domain name)
dns_domain_lo="homenetwork"

# Manually setting)
config_em0="192.168.0.100 netmask 255.255.255.0"
routes_em0="default via 192.168.0.1"

# Using DHCP)
config_em0="dhcp"
</pre>
|prompt=(chroot) root #}}

Adding net.em0 to the default runlevel
{{RootCmd|cd /etc/init.d
|ln -s net.lo0 net.em0
|rc-update add net.em0 default
|prompt=(chroot) root #}}

Setting the root password

{{RootCmd|passwd
|prompt=(chroot) root #}}

You can also be configured to run at startup <i>sshd</i>.

{{RootCmd|emerge -u net-misc/openssh
|rc-update add sshd default
|prompt=(chroot) root #}}

===== Special settings for ZFS =====
If you select ZFS file system, the following additional work is required.

{{RootCmd|rc-update add zfs boot
|rc-update add zvol default
|echo 'zfs_load{{=}}"YES"' >> /boot/loader.conf
|echo 'vfs.root.mountfrom{{=}}"zfs:zsys/root"' >> /boot/loader.conf
|prompt=(chroot) root #}}

==== Installing the required packages ====
If dhcpcd is required if you use DHCP.
{{RootCmd|emerge '<net-misc/dhcpcd-5.6'
|prompt=(chroot) root #}}

==== Exit from chroot environment ====
Work done in the chroot environment.
exit from chroot environment.

{{RootCmd|exit
|prompt=(chroot) root #}}

=== Writes boot loader and Cleaning up ===
Do you want to reboot now ? Just a minute. We forgot to setting the boot loader.

If you select UFS2 (GPT)
{{RootCmd|gpart bootcode -b /mnt/boot/pmbr ada0
|gpart bootcode -p /mnt/boot/gptboot -i 1 ada0}}

If you select UFS2 (MBR)
{{RootCmd|gpart bootcode -b /mnt/boot/boot0 ada0
|gpart bootcode -b /mnt/boot/boot ada0s1}}

If you select ZFS
{{RootCmd|gpart bootcode -b /mnt/boot/pmbr ada0
|gpart bootcode -p /mnt/boot/gptzfsboot -i 1 ada0}}

==== Special settings for ZFS ====
If you select ZFS file system, the following additional work is required.

{{RootCmd|umount /mnt/dev
|cd /
|zpool set bootfs{{=}}zsys/root zsys
|zpool export zsys
|gnop destroy /dev/gpt/zfs-system.nop (please run if you are using gnop)}}
{{RootCmd|zpool import zsys
|mkdir /mnt/boot/zfs
|cp /boot/zfs/zpool.cache /mnt/boot/zfs/
|zfs unmount -a}}
{{RootCmd|zfs set mountpoint{{=}}none zsys
|zfs set mountpoint{{=}}/usr zsys/root/usr
|zfs set mountpoint{{=}}/var zsys/root/var
|zfs set mountpoint{{=}}/tmp zsys/root/tmp
|zfs set mountpoint{{=}}/home zsys/home
|zfs set mountpoint{{=}}legacy zsys/root}}

==== reboot! ====
Don't have a problem? Now we restart.
Don't forget to remove the Installation CD of FreeBSD.

{{RootCmd|shutdown -r now}}

== Howto run G/FBSD in vanilla FreeBSD's jail ==
Details of jail, please see the [http://www.freebsd.org/handbook/jails.html FreeBSD Handbook].

=== Preparing directory ===
{{RootCmd|mkdir -p /usr/jail/gfbsd
|cd /usr/jail/gfbsd}}

=== Downloading and Unpacking the Stage3 Tarball and Portage snapshot ===
{{RootCmd|fetch http://dev.gentoo.org/~aballier/fbsd9.0/x86/stage3-i686-freebsd-9.0.tar.bz2 (for x86-fbsd users)
|fetch http://dev.gentoo.org/~aballier/fbsd9.0/amd64/stage3-amd64-freebsd-9.0.tar.bz2 (for amd64-fbsd users)
|fetch http://distfiles.gentoo.org/snapshots/portage-latest.tar.bz2
|tar xjpf stage3-*.tar.bz2
|tar xjf portage-latest.tar.bz2 -C /usr/jail/gfbsd/usr}}

=== Setting ===
Configure jail to start with FreeBSD.
{{File|/etc/rc.conf|Example for start automatically jail|
<pre>
jail_enable="YES"
jail_list="gfbsd"

jail_gfbsd_rootdir="/usr/jail/gfbsd"
jail_gfbsd_hostname="gfbsd.example.org"
jail_gfbsd_ip="192.168.0.10"
jail_gfbsd_devfs_enable="YES"

# You will also need to add the following line if you need network access.
# em0, please specify your network devices.
ifconfig_em0_alias0="inet 192.168.0.10 netmask 255.255.255.0"
</pre>}}

Setting to operate Gentoo/FreeBSD in jail.
{{RootCmd|echo 'rc_sys{{=}}"jail"' >> /usr/jail/gfbsd/etc/rc.conf
|echo 'hostname{{=}}"gfbsd"' > /usr/jail/gfbsd/etc/conf.d/hostname
|echo 'syslogd_args{{=}}"-ss"' >> /usr/jail/gfbsd/etc/conf.d/syslogd}}

{{RootCmd|chroot /usr/jail/gfbsd /bin/bash}}
{{RootCmd|rc-update add vixie-cron default
|exit
|prompt=(chroot) root #}}

=== run jail ===
Let's run jail.

{{Note|em0, please specify your network devices.}}

{{RootCmd|ifconfig em0 192.168.0.10 alias (please run if you need network access)
|/etc/rc.d/jail start}}

Verify that worked.
{{RootCmd|jls|output=
<pre>
   JID  IP Address      Hostname                      Path
     1  192.168.0.10    gfbsd                         /usr/jail/gfbsd
</pre>}}

To enter the jail environment will use the jexec command.
{{RootCmd|jexec 1 /bin/bash}}

== Major Upgrade howto ==
This guide will show you how to upgrade Gentoo/FreeBSD 9.0 from 8.x version.

{{Note|Tested using stage3-i686-freebsd-8.0.tar.bz2, with 20120531 portage snapshot}}

=== Preparation ===

==== Updating the @system ====
The update to eliminate the problems caused by outdated versions of installed packages.

{{Note|FEATURES{{=}}"preserve-libs" is set by default. Add FEATURES{{=}}"preserve-libs" to make.conf, please skip if you do not have special settings.}}

{{RootCmd|emerge portage
|gsed -i '/LDFLAGS{{=}}/d' /etc/make.conf
|echo 'FEATURES{{=}}"preserve-libs ${FEATURES}"' >> /etc/make.conf
|emerge findutils freebsd-ubin cvs
|emerge -uDN system}}

==== Change profile ====
To emerge related to FreeBSD 9.0 is necessary to change the [[profile]].

Get a list of available profiles:
{{RootCmd|eselect profile list|output=
<pre>
Available profile symlink targets:
  [1]   default/bsd/fbsd/x86/8.2
  [2]   default/bsd/fbsd/x86/9.0
</pre>}}

Set the profile of 9.0:
{{RootCmd|eselect profile set 2}}

==== Kernel update ====
First of all, you need to update your kernel.
It is because the package of a userland may use the new function of a kernel. 

Please be sure to update a kernel first !

{{RootCmd|USE{{=}}symlink emerge freebsd-sources flex
|cd /usr/src/sys/i386/conf (case of x86-fbsd)
|cd /usr/src/sys/amd64/conf (case of amd64-fbsd)
|cp GENERIC.hints /boot/device.hints}}
{{RootCmd|config GENERIC
|cd ../compile/GENERIC
|make cleandepend &amp;&amp; make depend &amp;&amp; make -j3 &amp;&amp; make install
}}

Don't have a problem? Now we restart.

{{RootCmd|shutdown -r now}}

After rebooting your machine, please check if the kernel is new. 

{{RootCmd|uname -a|output=
<pre>FreeBSD daemon 9.0-Gentoo FreeBSD Gentoo 9.0 #0: Fri Jan 20 00:01:04 JST 2012
     root@daemon:/usr/src/sys-9.0-r0/amd64/compile/GENERIC  amd64
</pre>}}

=== Updating userland ===
The first emerge the core library. 

{{RootCmd|emerge -1 freebsd-mk-defs
|cd /usr/portage/sys-freebsd/freebsd-lib
|wget http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/sys-freebsd/freebsd-lib/freebsd-lib-9.0-r1.ebuild
|ebuild freebsd-lib-9.0-r1.ebuild digest
|emerge -1 --nodeps {{=}}freebsd-lib-9.0-r1
}}

Update the userland of FreeBSD.

{{RootCmd|emerge -a1 boot0 freebsd-bin freebsd-contrib freebsd-lib freebsd-libexec freebsd-mk-defs freebsd-pam-modules freebsd-sbin freebsd-share freebsd-ubin freebsd-usbin}}

Change CHOST, and emerge binutils gcc. (FYI, [http://www.gentoo.org/doc/en/change-chost.xml Changing the CHOST variable])

x86-fbsd users)
{{RootCmd|gsed -i 's:CHOST{{=}}.*:CHOST{{=}}"i686-gentoo-freebsd9.0":g' /etc/make.conf}}
amd64-fbsd users)
{{RootCmd|gsed -i 's:CHOST{{=}}.*:CHOST{{=}}"x86_64-gentoo-freebsd9.0":g' /etc/make.conf}}

emerge binutils gcc

{{emerge|params=-1
|sys-devel/binutils
|sys-devel/gcc
}}

check gcc's 8.x stuff

{{RootCmd|gcc-config -l|output=
<pre> * broken config file: /etc/env.d/gcc/i686-gentoo-freebsd8.0-4.4.3
 [1] i686-gentoo-freebsd8.0-4.4.3 *
 [2] i686-gentoo-freebsd9.0-4.6.3
</pre>}}

remove 8.x stuff.

{{RootCmd|emerge -C '&lt;gcc-4.6'}}

{{RootCmd|gcc-config -c|output=<pre>
i686-gentoo-freebsd9.0-4.6.3
</pre>}}

also check binutils

{{RootCmd|binutils-config -l|output=<pre>
 [1] i686-gentoo-freebsd9.0-2.20.1 *
</pre>}}

{{RootCmd|binutils-config -c|output=<pre>
i686-gentoo-freebsd9.0-2.20.1
</pre>}}

remove FreeBSD 8.x env data.

{{RootCmd|cd /etc/env.d/
|grep gentoo-freebsd8. *|output=<pre>
04gcc-i686-gentoo-freebsd8.0:PATH="/usr/i686-gentoo-freebsd8.0/gcc-bin/4.4.3"
04gcc-i686-gentoo-freebsd8.0:ROOTPATH="/usr/i686-gentoo-freebsd8.0/gcc-bin/4.4.3"
04gcc-i686-gentoo-freebsd8.0:MANPATH="/usr/share/gcc-data/i686-gentoo-freebsd8.0/4.4.3/man"
04gcc-i686-gentoo-freebsd8.0:INFOPATH="/usr/share/gcc-data/i686-gentoo-freebsd8.0/4.4.3/info"
04gcc-i686-gentoo-freebsd8.0:LDPATH="/usr/lib/gcc/i686-gentoo-freebsd8.0/4.6.3
04gcc-i686-gentoo-freebsd8.0:/usr/lib/gcc/i686-gentoo-freebsd8.0/4.4.3"
05gcc-i486-gentoo-freebsd8.0:MANPATH="/usr/share/gcc-data/i486-gentoo-freebsd8.0/4.4.3/man"
05gcc-i486-gentoo-freebsd8.0:INFOPATH="/usr/share/gcc-data/i486-gentoo-freebsd8.0/4.4.3/info"
05gcc-i486-gentoo-freebsd8.0:LDPATH="/usr/lib/gcc/i486-gentoo-freebsd8.0/4.4.3"
05gcc-i486-gentoo-freebsd8.0:PATH="/usr/i486-gentoo-freebsd8.0/gcc-bin/4.4.3"
05gcc-i486-gentoo-freebsd8.0:ROOTPATH="/usr/i486-gentoo-freebsd8.0/gcc-bin/4.4.3"
</pre>}}

target file name is 04gcc-i686-gentoo-freebsd8.0, 05gcc-i486-gentoo-freebsd8.0 in this case.

{{RootCmd|rm 04gcc-i686-gentoo-freebsd8.0 05gcc-i486-gentoo-freebsd8.0
|env-update &amp;&amp; source /etc/profile
|emerge -av1 libtool
|/usr/share/gcc-data/i686-gentoo-freebsd9.0/4.6.3/fix_libtool_files.sh 4.6.3 --oldarch i686-gentoo-freebsd8.0
}}

Recreate all packages.
{{Important|don't forget etc-update !}}
{{RootCmd|emerge -ae world
|etc-update}}

Failure to compile the package if any, 'emerge --resume --skipfirst' is your friend.
Also, please bug report the problem if you like.

{{Note|If emerge fails to compile sys-freebsd/boot0, please see [[#Troubleshooting]].}}

=== Cleaning ===
Let's remove the backup files when you have finished all the steps.
{{RootCmd|emerge @preserved-rebuild}}

== How to use X Window System with vesa video card ==
{{Important|Please check {{Bug|428112}} and {{Bug|435640}} and {{Bug|435648}} first.
Please to create your own overlay. And, please apply the patch attached to the bug.}}

{{Note|Please update wiki if you know a better way.

Also welcome to fix the problem. Please file a bug.}}

{{RootCmd|emerge portage ; emerge libtool app-admin/eselect
|mv /etc/make.conf /etc/portage/make.conf (be careful !)
|emerge -u gentoolkit
|euse -E python X}}

{{RootCmd|echo 'INPUT_DEVICES{{=}}"keyboard mouse"' >> /etc/portage/make.conf
|echo 'VIDEO_CARDS{{=}}"vesa"' >> /etc/portage/make.conf
|echo "media-libs/mesa -~amd64-fbsd -~x86-fbsd amd64" >> /etc/portage/package.keywords}}

{{RootCmd|emerge -p xorg-x11
|emerge xorg-x11
|emerge x11-drivers/xf86-input-mouse
|emerge xorg-drivers
|emerge xterm twm xclock
|Xorg -configure
|mv /root/xorg.conf.new /etc/X11/xorg.conf}}

Check the device for mouse
{{RootCmd|grep /dev /etc/X11/xorg.conf|output=
<pre>        Option      "Device" "/dev/sysmouse"</pre>
}}

OK, In this case /dev/sysmouse has been detected.
{{RootCmd|/etc/init.d/moused start
|rc-update add moused default
|startx}}

=== Other video cards ===
xf86-video-vmware)
{{RootCmd|ACCEPT_KEYWORDS{{=}}amd64 emerge --nodeps '<x11-drivers/xf86-video-vmware-12.0.0'}}

=== Q&A ===
Q. mouse does not work

A. PS/2 mouse is /dev/psm0、USB mouse is /dev/usm0. another one is /dev/sysmouse.
Please specify in xorg.conf correctly.
You need to start moused to use /dev/sysmouse. Run /etc/init.d/moused start.

== Troubleshooting ==

=== amd64-fbsd ===

==== All commands is not working after emerge sys-apps/baselayout ====

After failing to emerge baselayout, all commands will not work. Details, see {{Bug|436560}}

{{RootCmd|ls|output=<pre>
Shared object "libutil.so.9" not found, required by "ls"
</pre>}}

If you have not restarted the PC, please run this command first.
{{RootCmd|export LD_LIBRARY_PATH{{=}}"/lib64:/usr/lib64"}}

If you restart or turn off your PC already has a need to restore your system using the installation CD of FreeBSD.

# boot using the installation media of FreeBSD.
# Live CD select
# Mount the root partition of G/FBSD (eg. mount /dev/ufs/gfbsdroot /mnt)
# cd /mnt (Please replace to /mnt/,/mnt/usr... from /,/usr... )

Please check lib in /, /usr, /usr/local.

{{RootCmd|ls -l /lib /usr/lib /usr/local/lib|output=<pre>
ls: /lib: No such file or directory
lrwxr-xr-x  1 root  wheel  5 Oct 14 06:41 /usr/lib -> lib64

lrwxr-xr-x  1 root  wheel  5 Oct 14 06:41 /usr/local/lib -> lib64
</pre>}}

In this case, the symbolic link /lib is simply removed. Let's re-create symbolic link /lib.

{{RootCmd|ln -s lib64 /lib}}

You need to migrate from lib64 to lib before run emerge baselayout so far. Run the script for migration.

If you have to recover by using FreeBSD's installation media, please enter in G/FBSD run chroot /mnt !

{{RootCmd|wget -O /tmp/migrate_libdir.sh "http://git.overlays.gentoo.org/gitweb/?p{{=}}proj/gentoo-bsd.git;a{{=}}blob_plain;f{{=}}scripts/migrate_libdir.sh;hb{{=}}HEAD"
|bash /tmp/migrate_libdir.sh
|emerge sys-apps/baselayout}}

==== can not boot a kernel panic always occurs ====
Details, see {{Bug|408019}}

workaround is to use gcc 4.3 or clang to compile the kernel.

==== amd64 kernel + x86 stage environment, tar will not work successfully. ====
Details, see {{Bug|413865}}

Error messages:
<pre>
tar: getvfsbyname failed: No such file or directory
tar: Error exit delayed from previous errors.
</pre>

workaround fix
{{RootCmd|emerge {{=}}libarchive-3.0.3}}

==== gcc fails to compile, Error message is recompile -fPIC ====
Details, see {{Bug|415185}} .

workaround fix
{{emerge|sys-devel/gcc}}

=== Architecture Independent Issues ===

==== The kernel fails to mount a ZFS root filesystem with error 2 ====
Your /boot/zfs/zpool.cache file is missing information about the pool containing your root filesystem.

Boot a FreeBSD LiveCD and enter the shell. Then import your pool using the name of your pool intead of "rpool":
{{RootCmd|zpool import -f -N rpool}}

Inform ZFS what your root dataset is using its name instead of "rpool/ROOT/freebsd":
{{RootCmd|zfs set mountpoint{{=}}/ rpool/ROOT/freebsd}}

Export the pool
{{RootCmd|zpool export rpool}}

Import the pool again, except this time over your Live CD's root filesystem:
{{RootCmd|zpool import rpool}}

Now force the system to reboot and it should work. This procedure originally described on the [http://forums.freebsd.org/showpost.php?p=153410&postcount=2 FreeBSD forums].

==== Emerge fails net-misc/openssh ====
Details, see {{Bug|391011}}

workaround fix for openssh
{{RootCmd|EXTRA_ECONF{{=}}'--disable-utmp --disable-wtmp' emerge '>net-misc/openssh-6.0'}}

==== Emerge fails app-misc/screen ====
Details, see {{Bug|393039}} and {{Bug|409819}}.

Please use app-misc/tmux instead of app-misc/screen.

==== lex: not found ====
{{emerge|sys-devel/flex}}

==== cc: not found ====
Details, see {{Bug|412319}}

{{RootCmd|emerge '>{{=}}sys-devel/gcc-config-1.7.1'}}

==== Emerge fails sys-freebsd/boot0 using >gcc-4.6 ====
Details, see {{Bug|409815}}

workaround:
{{RootCmd|emerge -u '<sys-devel/gcc-4.6'
|CC{{=}}gcc-4.5.4 emerge boot0
}}

== Contacts ==
* gentoo-bsd mailing list ( [http://www.gentoo.org/main/en/lists.xml Gentoo Mailing Lists])
* IRC Channel #gentoo-bsd on freenode ( [http://www.gentoo.org/main/en/irc.xml Gentoo Linux IRC Resources] )

== See also ==
* [http://www.gentoo.org/proj/en/gentoo-alt/bsd/fbsd/ Gentoo/FreeBSD Project page]
* [http://www.gentoo.org/doc/en/gentoo-freebsd.xml A short guide to Gentoo/FreeBSD]
* [http://www.gentoo.org/doc/en/handbook/ Gentoo/Linux Handbook]
* [http://www.freebsd.org/handbook/ FreeBSD Handbook]
* [http://www.freebsd.org/cgi/man.cgi FreeBSD Man Pages]
* [http://wiki.freebsd.org/ZFSTuningGuide ZFSTuningGuide - FreeBSD Wiki]
* [http://wiki.freebsd.org/ FreeBSD Wiki]

[[Category:Core system]]
