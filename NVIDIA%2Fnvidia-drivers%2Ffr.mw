<languages />
'''nvidia''' est le pilote graphique propriétaire pour les cartes graphiques nVidia. [[nouveau]] est une alternative open source à ce pilote.

Les pilotes nVidia de l'arbre sont compilés pour une prise en charge par le noyau Linux. Ils contiennent un objet binaire (blob) qui fait l'essentiel du travail de discussion avec la carte. Ils comprennent deux parties, un module du noyau et un pilote X11. Les deux parties sont incluses dans un paquet unique. À cause de la manière dont nVidia empaquettent leurs pilotes, vous devrez  fixer quelques options avant de les installer.

Le paquet '''nvidia-drivers'''  contient la dernière version des pilotes nVidia qui prennent en charge ''toutes'' les cartes, avec plusieurs versions disponibles selon l'âge de votre carte. Il a recours à une eclass pour détecter le type de carte que vous utilisez et installer ainsi la version adaptée.

== Compatibilité du pilote ==
Le paquet {{Package|x11-drivers/nvidia-drivers}} prend en charge de nombreuses cartes nVidia. De multiples versions sont disponibles selon la (les) carte(s) que vous avez. Reportez-vous à la page [http://www.nvidia.fr/object/legacy_drivers_fr.html Qu'est-ce qu'un « Legacy GPU »?],de la documentation officielle de nVidia pour déterminer la version du pilote que vous devriez utiliser.

Si vous avez identifiée votre carte comme étant une carte patrimoniale, vous devez masquer les versions plus récentes des pilotes {{Package|nvidia-drivers}}, c'est à dire : 
{{RootCmd|echo ">x11-drivers/nvidia-drivers-174" >> /etc/portage/package.mask}}

Notez bien que Gentoo ne fournit pas les versions 71.86.xx. Si votre carte requiert ces pilotes, nous vous conseillons d'utiliser le pilote [[nouveau]].

==Noyau==
Comme nous l'avons mentionné plus haut, le pilote noyau nVidia s'installe et fonctionne en lien avec votre noyau courant. Il est compilé en tant que module, c'est pourquoi votre noyau doit prendre en charge le chargement de modules. Si vous avez utilisé '''genkernel all''' pour configurer votre noyau, c'est déjà le cas. Si vous avez procédé différemment, regardez attentivement votre configuration du noyau pour vérifier que cette prise en charge est activée :
{{Kernel||<pre>
Loadable module support --->
    [*] Enable loadable module support
</pre>
}}

Vous devez aussi activer ''Memory Type Range Register'' dans votre noyau :
{{Kernel||<pre>
Processor and Features --->
    [*] MTRR (Memory Type Range Register) support
</pre>}}

De plus, si vous avez une carte graphique AGP, vous pouvez ajouter en option la prise en charge '''agpgart''' à votre noyau, soit incorporée au noyau, soit en tant que module.
Si vous ne choisissez pas d'utiliser la version incorporée de agpgart, alors les pilotes utiliseront leur propre mise en œuvre de '''agpgart''', appelée '''NvAGP'''. Sur certains systèmes, cela conduit à de meilleures performances, sur d'autres c'est l'inverse. Vous devrez apprécier cela vous-même sur votre système pour trouver ce qui apporte la meilleure performance. S'il vous reste un doute, utilisez la mise en œuvre incorporée au noyau :
{{Kernel||<pre>
Device Drivers --->
    Graphics Support --->
        -*- /dev/agpgart (AGP Support) --->
</pre>}}

{{Note|Sur amd64,  IOMMU gère les réglages agpgart.}}

{{Important|Pour les processeurs x86 et AMD64, le pilote de [[framebuffer]] (tampon de trames) entre en conflit avec le pilote binaire fournit par nVidia. Si vous compilez votre noyau pour ces processeurs, vous devez retirez la prise en charge du pilote incorporé de la manière suivante :
{{Kernel||<pre>
Device Drivers --->
    Graphics Support --->
        <*> Support for frame buffer devices --->
            < >   nVidia Framebuffer Support
            < >   nVidia Riva support
</pre>}}
}}

Il existe un tampon de trames alternatif, [[uvesafb]], qui peut être installé en parallèle aux pilotes nvidia.

L'ebuild '''nvidia-drivers''' détecte automatiquement la version de votre noyau en se basant sur le lien symbolique {{Path|/usr/src/linux}}. Assurez-vous que ce lien symbolique pointe bien sur les bonnes sources et que votre noyau est bien configuré.
Reportez-vous à la section "Configurer votre noyau" du [http://www.gentoo.org/doc/fr/handbook/ Manuel de Gentoo] pour une plus ample information sur la manière de configurer votre noyau.

Vous devez, d'abord choisir les bonnes sources du noyau à l'aide de '''eselect'''. Si vous utilisez les sources '''gentoo-sources-3.7.10''', la liste des noyaux retournée par eselect devrait ressembler à ceci :
{{RootCmd|eselect kernel list|output=<pre>
Available kernel symlink targets:
  [1]   linux-3.7.10-gentoo *
  [2]   linux-3.7.9-gentoo
</pre>}}

Dans la liste ci-dessus, vous noterez que le noyau '''linux-3:7:10-gentoo''' est marqué d'un astérisque ('''*''') pour montrer qu'il est le noyau pointé par le lien symbolique.

Si le lien symbolique ne pointe pas sur les bonnes sources, vous devez le mettre à jour en choisissant le numéro correspondant aux sources du noyau que vous voulez utiliser, comme dans l'exemple ci-dessus.
{{RootCmd|eselect kernel set 1}}

==Pilotes==
Il est temps maintenant d'installer les pilotes. Vous pouvez le faire en suivant les directives du [http://www.gentoo.org/doc/fr/xorg-config.xml guide de configuration du serveur X ] et définissant la variable '''VIDEO_CARDS=''nvidia''''' dans {{Path|/etc/portage/make.conf}}. Quand vous installerez le serveur X, il installera la bonne version du pilote '''nvidia-drivers''' pour vous.

{{Note|Les pilotes peuvent être installés en positionnant l'option '''gtk''' de la variable USE dans le fichier {{Path|/etc/portage/make.conf}}. Cela installera le paquet '''media-video/nvidia-settings''', un outil convivial pour voir et configurer de nombreux aspects de votre carte nVidia.}}

{{Important|À chaque fois que vous [http://www.gentoo.org/doc/fr/kernel-upgrade.xml compilez un nouveau noyau] ou recompilez le noyau courant, vous devez réinstaller les modules du noyau  nVidia. Une manière aisée de connaître les modules installés par des ebuilds (comme '''nvidia-drivers''')consiste à installer '''sys-kernel/module-rebuild'''. Une fois que vous l'avez installé, exécutez tout simplement la commande '''module-rebuild populate''' pour repeupler sa base de données avec la liste des paquets à recompiler. Après en avoir terminé avec la compilation ou la recompilation d'un noyau, exécutez simplement  la commande '''module-rebuild rebuild''' pour recompiler les pilotes pour votre nouveau noyau.}}

Une fois l'installation terminée, exécutez '''modprobe nvidia''' pour charger le module du noyau en mémoire. S'il s'agit d'une mise à jour, vous devez préalablement retirer le module précédent.
{{RootCmd
|lsmod {{!}} grep nvidia
|rmmod nvidia
|modprobe nvidia
}}

Pour ne pas avoir à charger manuellement le module à chaque démarrage, et pour automatiser cette tâche, éditez le fichier {{Path|/etc/conf.d/modules}} et ajoutez-y '''nvidia'''.

{{Important|Si vous avez compilé '''agpgart''' en tant que module, vous devez aussi l'ajouter au fichier {{Path|/etc/conf.d/modules}}.}}

===Le serveur X===
Dès lors que les pilotes appropriés sont installés, vous devez configurer le serveur X pour qu'il utilise les pilotes '''nvidia''' plutôt que le pilote par défaut '''nv'''.
{{VIDEO_CARDS/xorg.conf|nvidia}}

Exécutez '''eselect''' pour faire en sorte que le serveur X utilise les bibliothèques GLX de nVidia :
{{RootCmd|eselect opengl set nvidia}}

===Droits d'accès===
{{VIDEO_CARDS/Permissions/fr|nvidia}}

==Tester votre carte==
Pour tester votre carte nVidia, lancez X et exécutez la commande '''glxinfo'', qui fait partie du paquet '''mesa-progs'''. Elle devrait vous notifier que le rendu direct est activé :
{{Cmd|glxinfo {{!}} grep direct|output=<pre>
direct rendering: Yes
</pre>}}

Pour vérifier votre FPS (mombre de trames par seconde), exécutez '''glxgears'''.

==Activer la prise en charge de nvidia==
Certains outils, comme '''mplayer''' et '''xine-lib''' utilisent une option locale de la variable USE appelée '''xvmc''' qui active la prise en charge de XvMCNVIDIA - utile lorsque vous regardez des films en haute définition. Ajoutez '''xvmc''' aux options de votre variable USE globale dans le fichier  {{Path|/etc/portage/make.conf}}  ou ajoutez-la aux options de la variable USE du(des) paquet(s) en question ('''media-vidéo/mplayer''' et/ou '''media-libs/xine-lib''') dans le fichier {{Path|/etc/portage/package.use}}.

Les processeurs graphiques des séries GeForce 8 et postérieures sont fournis avec la prise en charge VDPAU qui a supplanté la prise en charge  XvMCNVIDIA. Reportez-vous à l'article [[VDPAU]] pour savoir comment activer la prise en charge VDPAU.

Il y a également quelques applications qui ont besoin de l'option '''nvidia''' de la variable USE, aussi désirerez-vous peut-être l'ajouter au fichier {{Path|/etc/portage/make.conf}}.

Exécutez ensuite '''emerge -uD --newuse @world''' pour recompiler les applications qui bénéficient du changement d'option de la variable USE.

===Utiliser l'outil de configuration de NVidia===
nVidia fournit également un outil de configuration. Cet outil vous permet de voir et de modifier des réglages graphiques sans avoir à redémarrer le serveur X. Il est disponible dans l'arbre de Portage sous le nom  '''media-video/nvidia-settings'''. Comme indiqué plus haut, il sera automatiquement installé si vous installez les pilotes avec l'option '''gtk''' de la variable USE activée, soit dans {{Path|/etc/portage/make.conf}}, soit dans {{Path|/etc/portage/package.use}}.

===Activer Opengl/Opencl===

Pour activer opengl et opencl.

{{RootCmd|eselect opengl set nvidia}}
{{RootCmd|eselect opencl set nvidia}}

La configuration de opengl exige que vos systèmes X11 ne soient pas en service.

== Dépannage ==
* {{Bug|nvidia-drivers|search=package}}

===Faire fonctionner le mode 2D sur des machines possédant 4 Mo de mémoire ou plus===
Si vous rencontrez des problèmes avec l'accélération 2D de nVidia, il est probable que ce soit parce que vous ne pouvez pas définir une plage mémoire associée au mode write-combining pour les MTTR (Memory Type Range Registers). Pour le savoir, vérifiez le contenu de {{Path|/proc/mtrr}}:
{{RootCmd|cat /proc/mtrr}}

Chacune des lignes devrait contenir ''write-back'' ou ''write-combining''. Si vous apercevez une ligne avec ''uncachable'' vous devez changer un paramètre de votre BIOS pour régler ce problème.

Redémarrez et entrer dans la configuration du BIOS (probablement sous ''Paramètres du processeur''). Changez le paramètre ''continuous'' en ''discrete'' et redémarrer votre Linux. Vous verrez alors qu'il n'y a plus d'entrée ''uncachable'' et que l'accélération 2D fonctionne sans problème.

===Lorsque j'essaye de charger le module du noyau, je reçois un message ''no such device''===
Ceci est généralement dû à un des problèmes suivants :

1. Vous n'avez aucune carte nVidia. Vérifiez la sortie de la commande '''lspci''' pour vérifier si vous avez une carte graphique nVidia installée et reconnue.

2. La version installée courante du paquet x11-drivers/nvidia-drivers ne prend pas en charge votre modèle de carte. Lisez le fichier README dans  /usr/share/nvidia-drivers-*/ pour obtenir la liste des périphériques pris en charge, ou utilisez la recherche de pilotes sur la page http://www.geforce.com/drivers. Reportez-vous à la section [[NVidia/nvidia-drivers#Which_version.3F|Which Version]] ci-dessus.

3. Un autre pilote du noyau gère le matériel. Vérifiez la sortie de la commande '''lspci -k''' pour savoir si un autre pilote, tel que ''nouveau'' est attaché à la carte graphique. Si oui, vous devrez désactiver ce pilote ou le mettre en liste rouge.

=== Xorg dit qu'il ne peut trouver aucun écran ===
Lorsque vous démarrez votre ordinateur  et vous retrouvez avec un écran noir, ou une invite de commande en console au lieu de votre interface graphique ; vous pouvez utiliser la combinaison de touches  Ctrl+Alt+F2 pour obtenier une invite de commande si ce n'est pas déjà le cas. Ensuite, vous pouvez exécuter la commande : 
{{RootCmd| /etc/init.d/xdm stop}}
{{Cmd| startx}}
 pour voir la sortie de Xorg. Si l'une des premières erreurs est que Xorg est incapable de trouver un écran, suivez les étapes suivantes pour résoudre votre problème..<br />
Exécuter les commandes suivantes devrait suffire avant de redémarrer :
{{Cmd| nvidia-xconfig}}
Se cela ne fonctionne pas, exécutez lspci et vous quelque chose concernant votre carte graphique qui débute par :
01:00.0 VGA compatible controller: make and model of videocard <br />
Prenez la première partie, ''01.00.0'' et placez-la dans votre fichier /etc/X11/xorg.conf avec l'option BusID :
{{File|/etc/X11/xorg.conf||<pre>
# this is not the whole file, only the part that needs edited
# the file should already exist after running nvidia-xconfig

<!--T:46-->
Section "Device"
    Identifier     "Device0"
    Driver         "nvidia"
    VendorName     "NVIDIA Corporation"
    BusID          "PCI:1:0:0"
EndSection


<!--T:47-->
</pre>}}

Section "Device"
    Identifier     "Device0"
    Driver         "nvidia"
    VendorName     "NVIDIA Corporation"
    BusID          "PCI:1:0:0"
EndSection


</pre>}}

== Expert Configuration ==

=== Documentation ===
The nVidia driver package also comes with comprehensive documentation. This is installed into '''/usr/share/doc''' and can be viewed with the following
command:
{{Cmd|less /usr/share/doc/nvidia-drivers-*/README.gz}}

=== Kernel module parameters ===
The '''nvidia''' kernel module accepts a number of parameters (options) which you can use to tweak the behaviour of the driver. Most of these are mentioned in the documentation. To add or change the values of these parameters, edit the file '''/etc/modprobe.d/nvidia.conf'''. Remember to run '''update-modules''' after modifying this file, and bear in mind that you will need to reload the '''nvidia''' module before the new settings take effect.

Edit /etc/modprobe.d/nvidia.conf in your favourite editor:
{{RootCmd|nano -w /etc/modprobe.d/nvidia.conf}}

Update module information:
{{RootCmd|update-modules}}

Unload the nvidia module...
{{RootCmd|modprobe -r nvidia}}

...and load it once again:
{{RootCmd|modprobe nvidia}}

=== Advanced X configuration ===
The GLX layer also has a plethora of options which can be configured. These control the configuration of TV out, dual displays, monitor frequency detection, etc. Again, all of the available options are detailed in the documentation.

If you wish to use any of these options, you need to list them in the relevant Device section of your X config file (usually '''/etc/X11/xorg.conf'''). For example, suppose I wanted to disable the splash logo:

{{File|/etc/X11/xorg.conf|Disable the splash logo|<pre>
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  Driver     "nvidia"
  Option     "NoLogo" "true"
  VideoRam   65536
EndSection
</pre>}}

== Acknowledgements ==
We would like to thank the following authors and editors for their contributions to this guide: Sven Vermeulen, Joshua Saddler, M Curtis Napier and Chris Gianelloni.

== See also ==
* [[nouveau & nvidia-drivers switching]]

[[Category:Graphics Adapters]]
[[Category:Binary kernel modules]]
