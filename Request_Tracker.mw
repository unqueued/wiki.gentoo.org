{{InfoBox stack
|{{InfoBox todo|Update Apache FastCGI instructions|Update Lighttpd instructions|Add instructions about fetching emails/generating tickets}}
}}

[https://www.bestpractical.com/rt/ Request Tracker (RT)] is a battle-tested issue tracking system which thousands of organizations use for bug tracking, help desk ticketing, customer service, workflow processes, change management, network operations, youth counselling and even more. [https://www.bestpractical.com/rt/who.html Organizations around the world] have been running smoothly thanks to RT for over 10 years.

== About This Guide ==

This guide was written using the latest version of RT available, which at the time of this writing is 4.2.9.

This guide assumes that you are familiar enough with [[Apache]] or [[Lighttpd]] and will not delve into the details of either.

Whether or not you use virtual hosting holds no bearing on the bulk of this guide. It will be noted if there's something significantly different that must be done in a virtual hosting environment.

== Installation ==

=== USE Flags ===
{{USEflag|package=www-apps/rt
|fastcgi
|lighttpd
|mysql
|postgres
|vhosts
}}

=== Requirements ===

RT requires a database backend and works equally well with either [[MySQL]] or [[PostgreSQL]]. You must enable at most one of their USE flags:

{{RootCmd|echo "www-apps/rt mysql" >> /etc/portage/package.use}}

{{RootCmd|echo "www-apps/rt postgres" >> /etc/portage/package.use}}

RT also requires a Web server. The default is to run on [[Apache]], but you can use [[lighttpd]]. To use lighttpd, you must enable its USE flag:

{{RootCmd|echo "www-apps/rt lighttpd" >> /etc/portage/package.use}}

=== Emerge ===

Many of the packages RT depends on, including RT's own package, are keyword masked. Use the following command to have a patch automatically generated for you.

{{RootCmd|emerge -av --autounmask-write {{=}}www-apps/rt-4.2.9}}

Once the previous command has finished, use <code>dispatch-conf</code> to apply the patch:

{{RootCmd|dispatch-conf}}

Run emerge again:

{{RootCmd|emerge -av www-apps/rt}}

If you have the <code>vhosts</code> USE flag enabled, you'll need to run <code>webapp-config</code> to finish the installation:

{{RootCmd|webapp-config -I -h localhost -d rt rt 4.2.9}}

== Setup and Configuration ==

=== Database ===

RT provides a script called <code>rt-setup-database</code> which creates the initial database and a database user for you.

{{RootCmd|/var/www/localhost/rt-4.2.9/sbin/rt-setup-database --action init --dba dbasuperuser --prompt-for-dba-password|output=<pre>
In order to create or update your RT database, this script needs to connect to your
Pg instance on localhost (port '') as postgres
Please specify that user's database password below. If the user has no database
password, just press return.

Password: 
Working with:
Type:   Pg
Host:   localhost
Port:
Name:   rt4
User:   rt_user
DBA:    postgres
Now creating a Pg database rt4 for RT.
Done.
Now populating database schema.
Done.
Now inserting database ACLs.
Done.
Now inserting RT core system objects.
Done.
Now inserting data.
Done inserting data.
Done.
</pre>}}
=== Configuring RT ===

RT uses an overlay system for configuration. This means that the default configuration is declared in {{Path|/var/www/localhost/rt-4.2.9/etc/RT_Config.pm}}, and that custom configurations are declared in {{Path|/var/www/localhost/rt-4.2.9/etc/RT_SiteConfig.pm}}. {{Path|RT_SiteConfig.pm}} will not exist until you create it. Any custom configuration in {{Path|RT_SiteConfig.pm}} will be preserved in upgrades, while the default configurations, {{Path|RT_Config.pm}}, will be overwritten.

You can copy just certain sections from {{Path|RT_Config.pm}} to {{Path|RT_SiteConfig.pm}}, or you can create a full copy.

{{RootCmd|cd /var/www/localhost/rt-4.2.9/etc
|cp RT_Config.pm RT_SiteConfig.pm
|chmod u+w RT_SiteConfig.pm
|$EDITOR RT_SiteConfig.pm}}

The configuration file is well documented, but you may want to consult the [https://www.bestpractical.com/docs/ official documentation].

=== Configuring the Web Server ===

Request Tracker can be run on any [http://plackperl.org/ PSGI compliant server]. However, [[Apache]] and [[Lighttpd]] are proven platforms.

==== Apache ====

Only information pertinent to RT will be covered. Additional information about [[Apache]] is covered elsewhere.

There's little information about which method works better for RT on Apache, and benchmarks have shown mod_perl and FastCGI to be nearly equal.

===== mod_perl =====

Save the following snippet within the individual <code>VirtualHost</code> tags you installed RT to or {{Path|/etc/apache2/vhosts.d/default_vhost.include}}.

{{CodeBox|lang=apache|1=
# Replace /rt with the proper URL path after the domain name
<Location /rt>
    SetHandler modperl
    PerlResponseHandler Plack::Handler::Apache2
    # Correct this path
    PerlSetVar psgi_app /var/www/localhost/rt-4.2.9/sbin/rt-server
</Location>

<Perl>
    use Plack::Handler::Apache2;
    # Correct this one, too
    Plack::Handler::Apache2->preload("/var/www/localhost/rt-4.2.9/sbin/rt-server");
</Perl>
}}

In case you haven't done so already, instruct Apache to start with mod_perl enabled.

{{FileBox|filename=/etc/conf.d/apache2|1=
APACHE2_OPTS="... -D PERL"
}}

You may need to change the owner and group of RT's Mason data directory.

{{RootCmd|chown -R apache:apache /var/www/localhost/rt-4.2.9/var/mason_data}}

===== mod_fastcgi =====

NOTE: If you wish to use <code>mod_fastcgi</code>, you need to instruct <code>webapp-config</code> to install <code>rt</code> with appropriate permissions. Edit <code>/etc/vhosts/webapp-config</code>:

{{FileBox|filename=/etc/vhosts/webapp-config|1=VHOST_DEFAULT_UID="rt"
VHOST_DEFAULT_GID="rt"}}

RT comes with a Gentoo-specific Apache configuration file. It can be found in <code>/var/www/myrt/rt-3.6.1/etc/rt_apache2_fcgi.conf</code>

Copy it to the Apache vhosts directory and edit to set <code>MY_RT_DOMAIN</code> and [=[[ServerAdmin]]]:

{{RootCmd
|cp /var/www/myrt/rt-3.6.1/etc/rt_apache2_fcgi.conf /etc/apache2/vhosts.d/
|vim /etc/apache2/vhosts.d/rt_apache2_fcgi.conf}}

Edit <code>/etc/conf.d/apache2</code> to instruct <code>apache2</code> to start with <code>FASTCGI</code> and enabled.

{{FileBox|filename=/etc/conf.d/apache2|1=APACHE2_OPTS="-D FASTCGI"}}

If this is your first time installing apache, you will want it to start on bootup.

{{RootCmd|rc-update add apache2 default}}

Restart apache so that all changes made so far will take effect.

{{RootCmd|/etc/init.d/apache2 restart}}

==== lighttpd (untested) ====

You can run RT on <code>lighttpd</code> + <code>fastcgi</code>. The ebuild will install an initscript <code>/etc/init.d/rt</code> and a config file <code>/etc/conf.d/rt</code>.

NOTE: If you wish to use <code>mod_fastcgi</code>, you need to instruct <code>webapp-config</code> to install <code>rt</code> with appropriate permissions. Edit <code>/etc/vhosts/webapp-config</code>:

{{FileBox|filename=/etc/vhosts/webapp-config|1=VHOST_DEFAULT_UID="rt"
VHOST_DEFAULT_GID="rt"}}

You will need to edit <code>/etc/conf.d/rt</code> to set [[RTPATH]] to the root of your installation. You shouldn't need to edit anything else in that file.

Also note that, under the default configuration, the socket in <code>$FCGI_SOCKET_PATH</code> is owned by rt:lighttpd, and is chmod-ded to g+rwx. This means that user <code>lighttpd</code> needs to be in the <code>rt</code> group. One way to do that is to use <code>vigr</code>. If you don't like that, edit <code>/etc/init.d/rt</code> to suit your needs.

You will also need to edit <code>/etc/lighttpd.conf</code> to enable <code>mod_fastcgi</code>.

* Uncomment <code>mod_fastcgi</code> under <code>server.modules</code>
* set <code>server.document-root</code>
* set <code>fastcgi.server</code> to something like this:
{{fileBox|filename=/etc/lighttpd.conf|1=
 fastcgi.server = ( "/rt" =&gt;
 ( "rt" =&gt;
 (
 "socket" =&gt; "/var/www/localhost/rt-3.6.1/var/appSocket",
 "check-local" =&gt; "disable"
 )
 )
 )
}}
Be sure to set the correct path to socket (same as <code>$FCGI_SOCKET_PATH</code> in <code>/etc/conf.d/rt</code>).

Now, start <code>rt</code> and <code>lighttpd</code>:

{{RootCmd
|/etc/init.d/rt start
|/etc/init.d/lighttpd start}}

If things don't seem to be working, check the <code>lighttpd</code> logs in <code>/var/log/lighttpd</code> and edit <code>/etc/init.d/rt</code> as per the comments in the file to make the <code>rt</code> daemon more verbose.

Note: you should be able to use this initscript with any <code>fastcgi</code>-enabled webserver. Please send me an email if you get <code>rt</code> to work with any other webserver.

== Log In ==

Use your browser to log into RT. Username is <code>root</code>, and password is <code>password</code>. Change your password.

== Special Thanks ==

Thank you to all those who worked on the [http://requesttracker.wikia.com/wiki/GentooInstallGuide original version] of this guide.
