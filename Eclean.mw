{{Lowercase title}}

'''eclean''' is a tool for cleaning Portage source files and binary packages.

== Installation ==
Install {{Package|app-portage/gentoolkit}}:
{{Emerge|gentoolkit}}

== Usage ==
By default, source files are in {{Path|/usr/portage/distfiles}}, while binary packages are in {{Path|/usr/portage/packages}}; this can be changed by altering the <code>DISTDIR</code> and the <code>PKGDIR</code> variables respectively in {{Path|/etc/portage/make.conf}}. Both locations can grow quite big if not periodically cleaned.

You can clean the source files directory with the following command:
{{RootCmd|eclean distfiles}}

For the directory with the binary packages you should use the following command instead:
{{RootCmd|eclean packages}}

By default, source files and binary packages corresponding to any ebuild in the current Portage tree will not be deleted. This way, the user can easily downgrade a package or install a previously removed package, provided that it is still in the current Portage tree.

Let's make an example. Suppose packages <code>foo-1.0</code> and <code>foo-1.1</code> are both in the Portage tree. You update from <code>foo-1.0</code> to <code>foo-1.1</code>, and then you run <code>eclean distfiles</code>: source files for both versions will be kept, so if you have any problem with <code>foo-1.1</code> you can easily re-install <code>foo-1.0</code> without re-downloading anything.

The other possible case is installing a previously removed package. Suppose you have package <code>foo</code> (any version) in the Portage tree. You (inadvertently) remove it, and then you run <code>eclean distfiles</code>: again, source files for <code>foo</code> will be kept, so you can re-install it without re-downloading anything.

The same examples also apply for binary packages.

If you want to save more disk space you can add the <code>--destructive</code> option: every source file or binary package that does not correspond to some currently installed package version will be deleted. Please notice that this way you won't be protected in case you need to downgrade a package or re-install a previously removed package.

As an alternative, you can use both the <code>--destructive</code> and the <code>--package-names</code> options: every source file or binary package that does not correspond to some currently installed package (version does not matter) will be deleted. You still won't be protected in case you need to re-install a previously removed package, but you will be protected if you need to downgrade a package.

For more details read the eclean(1) man page:
{{Cmd|man 1 eclean}}

== See also ==
* [[Gentoolkit]]

[[Category:Portage tools]]
