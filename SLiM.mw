{{InfoBox stack
|{{InfoBox homepage|http://slim.berlios.de|header=true}}
|{{InfoBox wikipedia}}
}}
'''SLiM''' ('''S'''imple '''L'''og'''i'''n '''M'''anager) is a desktop-independent graphical [[display manager]]. Being fast and having only a few dependencies, it is a popular choice amongst users of lightweight window managers such as [[Openbox]]. 

== Installation ==
Install {{Package|x11-misc/slim}}:
{{USEflag|package=x11-misc/slim
|branding+yes
|consolekit+yes
|pam+yes
}}

{{Emerge|x11-misc/slim}}

{{Note|Enable the <code>pam</code> USE flag for {{Package|x11-misc/slim}} if the <code>slimlock</code> command is needed for locking the screen.}}

== Configuration ==

=== Boot service ===
==== OpenRC ====
Set SLiM as the default [[display manager]]:
{{FileBox|filename=/etc/conf.d/xdm|lang=bash|1=
DISPLAYMANAGER="slim"
}}

To start SLiM on boot, add xdm to the default runlevel:
{{RootCmd|rc-update add xdm default}}

To start SLiM now:
{{RootCmd|/etc/init.d/xdm start}}

==== Systemd ====
To start SLiM on boot:
{{RootCmd|systemctl enable slim}}

To start SLiM now:
{{RootCmd|systemctl start slim}}

=== Upstream-style configuration ===

Make this section look like this:

{{FileBox|filename=/etc/slim.conf|title=Modifying slim.conf|1=
# login_cmd           exec /bin/sh - ~/.xinitrc %session
login_cmd           exec /bin/bash -login ~/.xinitrc %session
# login_cmd           exec /bin/bash -login /usr/share/slim/Xsession %session
}}

Proceed to setup a window manager of choice that will be used as the default session.

=== Default configuration (no default session) ===
Most global configuration is done in the {{Path|/etc/slim.conf}} file.

{{Note|In the following paragraphs [[Awesome|Awesome window manager]] is used as an example window manager.}}

By default, SLiM is configured to make all sessions in {{Path|/etc/X11/Sessions/}} accessible â€” they can be cycled through by pressing the {{Key|F1}} key. This behavior is acquired by setting the options below:

{{FileBox|filename=/etc/slim.conf|name=Editing session behavior|1=
login_cmd            exec /bin/bash -login /usr/share/slim/Xsession %session
...
sessiondir           /etc/X11/Sessions
}}

If no changes are made to {{Path|/etc/X11/Sessions/}} then users will need to press {{Key|F1}} while logging-in to select the desired session. 

In following sections several methods of setting one session as the default are described.

{{Warning|Some window managers do not provide session file and therefore cannot be seen in {{Path|/etc/X11/Sessions/}} by SLiM. In that case use the [[#Per-user_default_session_using_the_customized_.7E.2F.xsession_file|second method]] of setting a default session for one user (using a custom {{Path|~/.xsession}} file), because neither global nor "per-user bundled session files" methods will work. You may also want to file a bug, asking a developer to add a session file to the ebuild.}}

=== Setting a global default session ===
Set a default session for all users of the computer by modifying the ''XSESSION'' variable. To do this, create and edit file {{Path|/etc/env.d/90xsession}} file. The example below sets the Awesome window manager as the default session.

{{FileBox|filename=/etc/env.d/90xsession|lang=bash|1=
XSESSION="awesome"
}}

After saving the file run <tt>env-update</tt>:
{{RootCmd|env-update}}

=== Setting a default session for one user ===
Besides (or instead of) setting ''global default'' sessions, it is possible to let each user choose a default session. 

There are three approaches to accomplishing the task. You can either:
* Use the SLiM session script ({{Path|/usr/share/slim/Xsession}}) to trigger session script from {{Path|/etc/X11/Sessions/}}
* Use the SLiM session script to trigger user-created session script
* Force users to set everything by themselves

The first and second possibilities are generally preferred. However, if for any reason you do not want to set any defaults, you may choose the third approach. 

==== Per-user default session using bundled session files ====
The simplest way to set a default session for one user is to make a symbolic link from the session file to {{Path|~/.xsession}}
{{Cmd|ln -s /etc/X11/Sessions/awesome ~/.xsession}}

An alternative is to put session command in the {{Path|~/.xsession}} file:
{{FileBox|filename=~/.xsession|1=/etc/X11/Sessions/awesome}}
You will only need to make sure the file is executable:
{{Cmd|chmod u+x ~/.xsession}}

==== Per-user default session using the customized ~/.xsession file ====
Sometimes you need to customize the launcher script, e.g. to run other programs before starting the window manager or to start WM with a customized command. The method above does not allow such modifications, but it can be achieved by using default session script (instead of the one provided by window manager) and launching WM through the {{Path|~/.xsession}} file.

To run your sessions this way, make sure you have no global default session set (or set it to ''XSESSION="custom"'' in {{Path|/etc/env.d/90xsession}} like described above). Then edit your {{Path|~/.xsession}} file, putting your WM launcher at the end.

The file may look like this:
{{FileBox|filename=~/.xsession|lang=bash|1=
#!/bin/sh

# Run urxvt daemon
urxvtd -q -o -f
# Set xserver parameters
xset s 0
xset dpms 0 0 1800
# Launch awesome
exec /usr/bin/awesome
}}
You may also look at the WM session files in {{Path|/etc/X11/Sessions/}} to find "how things are done".
{{Important| By default SLiM evaluates {{Path|/usr/share/slim/Xsession}} first, then {{Path|/etc/X11/Sessions/Xsession}}, and {{Path|~/.xsession}} is called last, so there is no need to duplicate entries from that two previous files.}}

Finally, remember to make sure the file is executable:
{{Cmd|chmod u+x ~/.xsession}}

==== Per-user default session without using any default session files ====
If you do not like '''any''' defaults from {{Path|/usr/share/slim/Xsession}} and {{Path|/etc/X11/Sessions/Xsession}}, you can let your users set everything by themselves. It is generally not a good idea, but sometimes you may need it.
{{Warning|You must be sure that '''every''' user will know what he is expected to do and that he/she will have enough knowledge to create {{Path|~/.xinitrc}} by himself. For example, when configuring SLiM in this way, neither {{Path|.Xresources}} nor {{Path|.Xkbmap}} files are read by default and no errorfiles are created.}}

Start by editing {{Path|/etc/slim.conf}} in the following way:
{{FileBox|filename=/etc/slim.conf|1=
#login_cmd            exec /bin/bash -login /usr/share/slim/Xsession %session
login_cmd           exec /bin/bash -login ~/.xinitrc %session
...
#sessiondir           /etc/X11/Sessions
sessions            awesome,i3
}}
In the ''sessions'' line you may put the names of window managers you are planning to use.

Then create and edit {{Path|~/.xinitrc}} file, which may look as below:
{{FileBox|filename=~/.xinitrc|lang=bash|1=
#!/bin/sh
#
# Custom xinitrc file for Gentoo

DEFAULT_SESSION="awesome"

# Redirect errors to a file in user's home directory if we can
for errfile in "$HOME/.wm-errors" "${TMPDIR-/tmp}/wm-$USER" "/tmp/wm-$USER"
do
    if ( cp /dev/null "$errfile" 2> /dev/null )
    then
        chmod 600 "$errfile"
        exec > "$errfile" 2>&1
        break
    fi
done

# Define Xresources
userresources=$HOME/.Xresources

# Merge what is available
if [ -f "$userresources" ]; then
    xrdb -merge "$userresources"
fi

# Run urxvt daemon
urxvtd -q -o -f
# Set xserver parameters
xset s 0
xset dpms 0 0 1800

# Start WM
case $1 in 
awesome|i3)
        exec $1
        ;;
*)
        exec $DEFAULT_SESSION
        ;;
esac
}}
Finally make sure the file is executable:
{{Cmd|chmod u+x ~/.xinitrc}}

=== More tweaks ===

==== Theme selection ====
{{Note|You can install the package {{Package|x11-themes/slim-themes}} for having various nice-looking themes you can choose from.}}
Theme selection is done by changing the following line:
{{FileBox|filename=/etc/slim.conf|1=
current_theme    slim-gentoo-simple
}}
You can easily find what themes are available on your system:
{{Cmd|ls /usr/share/slim/themes/}}
You can preview a theme by running the following command while Xorg is running:
{{Cmd|slim -p /usr/share/slim/themes/<theme name>}}

==== NumLock state on login ====
The NumLock key can be turned on or off by default:
{{FileBox|filename=/etc/slim.conf|1=
numlock    on
}}

==== Autologin ====
Change $USER to the user name you want to log in as.
{{FileBox|filename=/etc/slim.conf|1=
default_user        $USER
auto_login          yes
}}
for me i would insert
default_user        666threesixes666

If you have <code>sudo</code> this is easiest quickest automated way to insert this.

{{Cmd
|sudo echo "default_user $USER" >> /etc/slim.conf
|sudo echo "auto_login yes" >> /etc/slim.conf
}}

==== Unlock keyrings ====
The following section will describe how to make SLiM automatically unlock different keychains automatically when you log in.
===== GNOME Keyring =====
First make sure you have {{Package|gnome-base/gnome-keyring}} (include {{Package|app-crypt/seahorse}} if you want a GUI).
To configure SLiM to unlock your GNOME Keyring automatically you have to edit its PAM configuration file.
To do so open /etc/pam.d/slim and modify it to look similar to the text below. Lines ending with comment "#keyring" should be added.
{{FileBox|filename=/etc/pam.d/slim|1=
auth	include		system-local-login
auth  optional	pam_gnome_keyring.so #keyring
account	include		system-local-login
session	include		system-local-login
session optional	pam_gnome_keyring.so auto_start #keyring
}}
Once this change has been made your keyring should be automatically unlocked next time you log in.

=== Troubleshooting ===
==== Failed to connect to socket /var/run/dbus/system_bus_socket: ====
This error is caused when dbus hasn't been started. It is possible that it wasn't added to the default run level. To fix this type the following:
{{RootCmd|rc-update add dbus default}}
This will ensure that dbus is running when you boot up your computer. It may be that this has already been added by other WM, but I had to do this when using awesome WM.

[[Category:Display manager]]
