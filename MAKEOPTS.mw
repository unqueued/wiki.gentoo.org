The <var>MAKEOPTS</var> variable content as defined in {{Path|[[:/etc/portage/make.conf#MAKEOPTS|/etc/portage/make.conf]]}} is passed on to the make jobs launched from Portage and is most often used to allow parallel jobs.

The parallel jobs entry ensures that, when {{c|make}} is invoked, it knows how many parallel sessions it is allowed to trigger (when parallel sessions are possible of course). This is completely within the scope of that make command and has no influence on parallel installations (which is triggered through {{c|emerge}} with {{c|--jobs{{=}}X}} option). The recommended value is the number of logical processors in the CPU. 

On a system with one i7 CPU the following command shows the numbering of the available logical CPUs.

{{RootCmd|lscpu|output=<pre>
Architecture:        x86_64
CPU op-mode(s):      32-bit, 64-bit
Byte Order:          Little Endian
CPU(s):              8
On-line CPU(s) list: 0-8
Thread(s) per core:  2
Core(s) per socket:  4
Socket(s):           1
</pre>}}

In this example 8 logical CPUs are available, 4 physical cores each with 2 threads, hence one can set the <var>MAKEOPTS</var> variable to:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
MAKEOPTS="-j8"
}}

Another item to consider is RAM usage.  Recent gcc versions have been known to take 1 GB to 1.5 GB of RAM per job.
If the system has the 8 logical CPUs from the previous example, but only 4 GB RAM, the <var>MAKEOPTS</var> value should be lowered to <code>-j3</code>. This is so that the system has RAM to run the basics as well as compile without hitting swap very often slowing things down.

For example, to measure the time needed to compile the package midnight commander with for 4 threads one can run:

{{RootCmd|time MAKEOPTS{{=}}"-j4" emerge app-misc/mc}}

== See also ==

* [https://blogs.gentoo.org/ago/2013/01/14/makeopts-jcore-1-is-not-the-best-optimization/ MAKEOPTS=”-j${core} +1″ is NOT the best optimization]
* [https://www.preney.ca/paul/archives/341 Parallel Builds With Gentoo’s Emerge]

[[Category:Portage]]
