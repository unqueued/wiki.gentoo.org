I recently obtained a DreamPlug and installed Gentoo on it, “roughly” following [http://dev.gentoo.org/~armin76/arm/sheevaplug/install.xml armin76’s (un)official howto] and [https://sites.google.com/site/richardgroux/tools/dreamplug richardgroux’ blog post]

I plan to write a full howto below.

--[[User:Hook|Hook]] 18:10, 24 March 2012 (UTC)

== Hardware ==
{| class="wikitable"
|+ Technical specifications of the DreamPlug
|System on Chip
|Kirkwood MV88F6281-A1
|-
|CPU
|Feroceon 88FR131 rev 1 (v5l) a.k.a. Marvel Sheeva 1.2 GHz (ARMv5TE)
|-
|RAM
|512 MiB 16bit DDR2-800 MHz
|-
|Internal storage
|4 GiB on board micro-SD
|-
|Internet connectivity
|
* 2 x Gigabit Ethernet 10/100/1000 Mbps 
* WiFi 802.11 b/g 
* Bluetooth BT2.1 + EDR 
* JTAG and UART connections for external module
|-
|External storage and connectivity
|
* 2 x USB 2.0 ports (Host) 
* 1 x eSATA 2.0 port -3Gbps SATAII 
* 1 x SD socket for user expansion/application
|-
|Audio interfaces	Headphone (analogue) out
|
* Mic In 
* Fiber Optics (SP/DIF) out
|-
|Power suppy
|5V3A DC power supply (yes, it consumes <5 W!)
|-
|Physical dimensions
|120mm (L) x 90mm (W) x 30mm (H)
|}

== Disk partitions ==

The existing disk partitions are as follows:

* /dev/sda is the internal SD card and separated so sda1 is a ~100 MiB FAT16 partition with kernel uImages and sda2 is a ~4 GiB ext3 partition carrying the stock (in my case Debian) OS.
* /dev/sdb seems to be the external SD card slot (I don’t use it)
* /dev/sdc is the first external disk via USB or eSATA
* …the rest follows in the same logic.

== U-boot ==

A clean u-boot environment that first boots from the external USB disk and if that doesn’t exist from the internal SD (check yours with printenv):

bootdelay=3
baudrate=115200
ethact=egiga0
ethaddr=F0:AD:4E:00:B0:8E
eth1addr=F0:AD:4E:00:B0:8F
clear_kernel_in_mem=echo Purging kernel in memory; mw 0x6400000 0x0 0x300000
ipaddr=192.168.1.103
serverip=192.168.1.111
x_bootcmd_usb=usb start
x_bootcmd_ethernet=192.168.1.1
stock_bootargs=root=/dev/sda2 rootdelay=10 console=ttyS0,115200
gentoo_bootargs=root=/dev/sdc2 rootdelay=10 console=ttyS0,115200
stock_load_kernel=fatload usb 0 0x6400000 uImage
stock_bootcmd=usb start; fatload usb 0 0x6400000 uImage; setenv bootargs root=/dev/sda2 rootdelay=10 console=ttyS0,115200; bootm 0x6400000;
gentoo_bootcmd=usb start; fatload usb 0 0x6400000 uImage; setenv bootargs root=/dev/sdc2 rootdelay=10 console=ttyS0,115200; bootm 0x6400000;
bootcmd=clear_kernel_in_mem; run gentoo_bootcmd; run stock_bootcmd
stdin=serial
stdout=serial
stderr=serial

Environment size: 838/4092 bytes


Don’t forget to `saveenv` if you want to keep the environment after the reboot.

Note: you have to escape ; with \ if you want to use it in setenv.
Note: if you want to remove a setenv line, just call setenv with the variable, but no definition (e.g. `setenv x_boot_lala` will delete the line that defines x_boot_lala).

== Kernel ==

=== Option 1: Updating u-boot ===
(At least in theory) since 3.4 the vanilla kernel (and therefore gentoo-sources) should support DreamPlug, but you need to use dev-embedded/u-boot-tools-2012.10 or newer to create the uImage.

First, we need the following packages for compiling our own kernel:

=== Option 2: Without updating u-boot ===
Apparently this is an easier alternative.

# build the kernel with CONFIG_ARM_APPENDED_DTB enabled
# after the kernel is built, run make kirkwood-dreamplug.dtb
# cat  >> arm/boot/dts/kirkwood-dreamplug.dtb arch/arm/boot/bzImage
# make uImage

=== Option 3: Pre-built kernel images ===

You can still use a pre-built kernel image, like the ones available on [http://www.plugcomputer.org/plugforum/index.php?board=2.0 PlugComputer Forums] …but then again, what’s the fun in that? ;)

[[Category:Computers]]
