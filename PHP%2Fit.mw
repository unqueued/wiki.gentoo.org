<languages />
{{InfoBox stack
|{{InfoBox homepage|http://www.php.net|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox ohloh}}
}}

'''PHP''' è un linguaggio di scripting general-purpose lato server per produrre pagine web.

== Installazione ==

=== USE flags ===

Portage riconosce la USE flag globale <code>php</code> per abilitare il supporto per PHP negli altri pacchetti. Abilitare questa USE flag farà in modo di inserire automaticamente il pacchetto {{Package|dev-lang/php}} all'aggiornamento delle dipendenze profonde nell'impostazione di @world. Per prima cosa impostare la USE flag globale sul file {{Path|/etc/portage/make.conf}}:

{{FileBox|filename=/etc/portage/make.conf|title=Aggiungere php come USE flag globale|lang=bash|1=
USE="php"
}}

Le USE flags più importanti del pacchetto PHP, cioè le USE flags SAPI (Server API), sono {{c|apache2}}, {{c|cgi}}, e {{c|fpm}}. Unitamente a queste flags, c'è anche una elaborata lista di flags utili per abilitare varie caratteristiche dell'interprete PHP:

{{USEflag|package=dev-lang/php}}

Di default l'ebuild installa la versione di sviluppo {{Path|php.ini}}. Per installare la versione production, che ha impostazioni di sicurezza maggiori ma potrebbe essere più difficile eseguirgli il debug, aggiungere al file {{Path|make.conf}} la seguente riga:

{{FileBox|filename=/etc/portage/make.conf|title=Installare il file  production php.ini|lang=bash|1=
PHP_INI_VERSION="production"
}}

Entrambe le versioni di {{Path|php.ini}} si trovano su {{Path|/usr/share/doc/php-*}}.

Dopo aver selezionato la versione scelta di {{Path|php.ini}}, PHP dovrebbe essere reinstallato utilizzando il comando riportato sotto nella [[#Emerge|Sezione di Emerge]]

=== Estensioni ===

Per installare le estensioni, per prima cosa decidere per quale versione di PHP bisogna compilare tali estensioni. Questo va fatto impostando la variabile <var>PHP_TARGETS</var>:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PHP_TARGETS="php5-6"
}}

Possono essere impostate più di una versione; basta aggiungere un'altra versione separata da spazio. Notare che lo slot php è chiamato "5.6" e il corrispondente valore di <var>PHP_TARGETS</var> è <code>php5-6</code>. Questo è dovuto alla corrente restrizione sul nome USE.

=== Emerge ===

Dopo aver effettuato la configurazione sopra descritta della USE flag è necessario aggiornare il sistema così che le variazioni abbiano effetto:

{{Emerge|params+=--update --changed-use --deep|@world}}

== Eseguire versioni multiple di PHP ==

Uno dei maggiori vantaggi per utilizzare Gentoo per lo sviluppo di PHP è l'utilizzo delle versioni slot. E' veramente facile muoversi tra le versioni multiple di PHP, è come eseguirle simultaneamente. Tutto ciò è fatto con il comando {{c|eselect}} fornito dal pacchetto {{Package|app-eselect/eselect-php}}, il quale dovrebbe essere installato automaticamente insieme al pacchetto PHP. Per esempio, selezionando differenti versioni di PHP permette al sistema di eseguire PHP 7.0 per il cli SAPI ma PHP 5.6 per il server web di sistema. Esso permette anche di testare rapidamente un'applicazione su versioni differenti di PHP.

Per elencare le versioni disponibili per il '''cli''' SAPI, utilizzare il seguente comando:

{{RootCmd|eselect php list cli|output=<pre>
 [1]   php5.5 
 [2]   php5.6 *   
 [3]   php7.0
</pre>}}

La versione segnata con <code>*</code> è la versione attualmente attiva, e per verificare le altre sostituire <code>cli</code> con <code>fpm</code>,<code>cgi</code> oppure <code>apache2</code>.

Per scambiare versioni utilizzare il seguente comando:

{{RootCmd|eselect php set cli 3}}

Il numero <code>3</code> in questo esempio corrisponde al numero dell'output del sotto-comando <code>list</code> utilizzato sopra. La versione 7.0 di PHP viene così utilizzata con il seguente comando:

{{RootCmd|php -v|output=<pre>
PHP 7.0.10-pl0-gentoo (cli) (built: Aug 23 2016 12:38:44) ( NTS )
</pre>}}

== Configurazione ==

La configurazione di PHP si trova nel file {{Path|/etc/php}}, il quale contiene una sottodirectory per ogni SAPI e per ogni versione di PHP. Per esempio, i files di configurazione per il SAPI apache2 PHP-5.6 sono installati in {{Path|/etc/php/apache2-php5.6}}.

=== Web servers ===

Per utilizzare PHP dal lato server, deve essere installato e configurato per utilizzare PHP un web server. Qualche web server popolare è brevemente menzionato successivamente.

==== Nginx ====

Per installare [[Nginx|nginx]] basta semplicemente emergerlo:

{{Emerge|www-servers/nginx}}

{{Important|Se i valori <var>NGINX_MODULES_HTTP</var> sono lasciati di default in {{Path|make.conf}}, assicurarsi che il modulo <code>fastcgi</code> sia abilitato.}}

Una volta che Nginx è installato, modificare la sezione server in {{Path|/etc/nginx/nginx.conf}} come di seguito: 

{{FileBox|filename=/etc/nginx/nginx.conf|title=Parte della configurazione di nginx per abilitare PHP tramite FastCGI|1=
        server {
                listen 127.0.0.1;
                server_name localhost;
 
                access_log /var/log/nginx/localhost.access_log main;
                error_log /var/log/nginx/localhost.error_log info;
 
                root /var/www/localhost/htdocs;
 
                location ~ .php$ {
                        fastcgi_pass 127.0.0.1:9000;
                        include fastcgi.conf;
                }
        }
}}

Ora avviare i relativi servizi per avere un sito funzionante. Lo script init {{Path|php-fpm}} avvia il Process Manager PHP FastCGI. FastCGI permette ai web servers di scaricare i calcoli PHP per questo process manager.

{{RootCmd
|service nginx start
|service php-fpm start
}}

==== lighttpd ====

{{Warning|Non abilitare la USE flag <code>php</code> per il pacchetto {{Package|www-servers/lighttpd}}. Attualmente potrebbe bloccare la compilazione.}}

Assicurarsi che lighttpd venga compilato con il supporto per <code>fastcgi</code> e che la USE flag <code>php</code> sia disabilitata:

{{FileBox|filename=/etc/portage/package.use|1=
www-servers/lighttpd fastcgi -php
}}

Lighttpd lavora con il file di configurazione FastCGI di default, ma sfortunatamente questo file è scritto per lavorare solo con il PHP FCGI SAPI vecchio invece che con l'impostazione FCGI generale. Dopo che la USE flag <code>php</code> è stata disabilitata tale impostazione non è più inclusa, ed è giusto così. Tuttavia è fornita una buona base per il file di configurazione che può essere utilizzato con FPM. 

Editare {{Path|/etc/lighttpd/mod_fastcgi.conf}} simile al seguente: 

{{FileBox|filename=/etc/lighttpd/mod_fastcgi.conf|title=Abilitare FastCGI su lighttpd|lang=lua|1=
server.modules += ("mod_fastcgi")
fastcgi.server = ( ".php" =>
  ( "localhost" =>
    (
      "host" => "127.0.0.1",
      "port" => "9000"
    )
  )
)
}}

Notare la parti <code>host</code> e <code>port</code>. 

Da quando Gentoo lavora con un file {{Path|php-fpm.ini}} funzionante situato in {{Path|/etc/php/fpm-php5/php-fpm.ini}} e lo script init, tutto quello che è necessario è l'avvio dei servizi: 

{{RootCmd
|/etc/init.d/php-fpm start
|/etc/init.d/lighttpd start
}}

==== Apache (mod_php) ====

Per configurare Apache in modo che sia in grado di caricare il modulo PHP5 (mod_php), aggiungere <code>-D PHP</code> sulla variabile <var>APACHE2_OPTS</var> nel file {{Path|/etc/conf.d/apache2}}. Gli utenti si dovrebbero ricordare che anche in precedenza la versione PHP doveva essere aggiunta (tipo <code>-D PHP5</code>). Tuttavia, dalla versione 0.8.1 del pacchetto {{Package|app-eselect/eselect-php}} la variabile è cambiata in <code>-D PHP</code>, per permettere che eventuali future nuove versioni maggiori possano essere facilmente integrate.

{{FileBox|filename=/etc/conf.d/apache2|title=Configurare Apache per caricare mod_php|lang=bash|1=
## (settings for PHP5 and above)
APACHE2_OPTS="-D PHP"
}}

Assicurarsi che PHP sia compilato con la USE flag <code>apache2</code>.

Se per qualche ragione sul sistema manca il file di integrazione del modulo PHP {{Path|/etc/apache2/modules.d/70_mod_php.conf}}, file attualmente fornito dal pacchetto {{Package|app-eselect/eselect-php}} quando questo viene compilato con la USE flag <code>apache2</code> impostata, inserirlo manualmente. Il suo contenuto è quello mostrato qui sotto.

{{FileBox|filename=/etc/apache2/modules.d/70_mod_php.conf|lang=apache|1=
<IfDefine PHP>
	# The mod_php.so symlink is controlled by
	# eselect-php. However, the module name changed from
	# php5_module to php7_module so we can't blindly load whatever
	# is there. Instead we let eselect-php manage a small
	# configuration file that loads the appropriate module.
	#
	# This is relative to ServerRoot (see httpd.conf).
	Include ../../../var/lib/eselect-php/mod_php.conf
 
	# Tell apache that mod_php should handle PHP files.
	#
	# NOTE: Avoiding AddHandler/AddType for security (bug
	# #538822). Please read the related news item!
	<FilesMatch "\.(php{{!}}php[57]{{!}}phtml)$">
		SetHandler application/x-httpd-php
	</FilesMatch>
 
	# PHP source files which are meant to be displayed as
	# syntax-highlighted source code.
	<FilesMatch "\.phps$">
		SetHandler application/x-httpd-php-source
	</FilesMatch>
 
	DirectoryIndex index.php index.phtml
</IfDefine>}}

Sebbene sul sistema possono essere installate multiple versioni di PHP, Apache ne può utilizzare soltanto una. Con il comando {{c|eselect php}} si sceglie la versione di PHP da utilizzare.

== See also ==

* [[PHP/Upgrading_to_PHP_5.6|Upgrading to PHP 5.6]], guide to upgrade older installations to 5.6
* [[Apache#Enabling_PHP_support|Enabling PHP support]] in the Apache article

[[Category:Programming language]]
