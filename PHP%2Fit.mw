<languages />
{{InfoBox stack
|{{InfoBox homepage|http://www.php.net|header=true}}
|{{InfoBox wikipedia}}
|{{InfoBox ohloh}}
}}

'''PHP''' è un linguaggio di scripting general-purpose lato server per produrre pagine web.

== Installazione ==

=== USE flags ===

Portage riconosce la USE flag globale <code>php</code> per abilitare il supporto per PHP negli altri pacchetti. Abilitare questa USE flag farà in modo di inserire automaticamente il pacchetto {{Package|dev-lang/php}} all'aggiornamento delle dipendenze profonde nell'impostazione di @world. Per prima cosa impostare la USE flag globale sul file {{Path|/etc/portage/make.conf}}:

{{FileBox|filename=/etc/portage/make.conf|title=Aggiungere php come USE flag globale|lang=bash|1=
USE="php"
}}

Le USE flags più importanti del pacchetto PHP, cioè le USE flags SAPI (Server API), sono {{c|apache2}}, {{c|cgi}}, e {{c|fpm}}. Unitamente a queste flags, c'è anche una elaborata lista di flags utili per abilitare varie caratteristiche dell'interprete PHP:

{{USEflag|package=dev-lang/php}}

Di default l'ebuild installa la versione di sviluppo {{Path|php.ini}}. Per installare la versione production, che ha impostazioni di sicurezza maggiori ma potrebbe essere più difficile eseguirgli il debug, aggiungere al file {{Path|make.conf}} la seguente riga:

{{FileBox|filename=/etc/portage/make.conf|title=Installare il file  production php.ini|lang=bash|1=
PHP_INI_VERSION="production"
}}

Entrambe le versioni di {{Path|php.ini}} si trovano su {{Path|/usr/share/doc/php-*}}.

Dopo aver selezionato la versione scelta di {{Path|php.ini}}, PHP dovrebbe essere reinstallato utilizzando il comando riportato sotto nella [[#Emerge|Sezione di Emerge]]

=== Estensioni ===

Per installare le estensioni, per prima cosa decidere per quale versione di PHP bisogna compilare tali estensioni. Questo va fatto impostando la variabile <var>PHP_TARGETS</var>:

{{FileBox|filename=/etc/portage/make.conf|lang=bash|1=
PHP_TARGETS="php5-6"
}}

Possono essere impostate più di una versione; basta aggiungere un'altra versione separata da spazio. Notare che lo slot php è chiamato "5.6" e il corrispondente valore di <var>PHP_TARGETS</var> è <code>php5-6</code>. Questo è dovuto alla corrente restrizione sul nome USE.

=== Emerge ===

Dopo aver effettuato la configurazione sopra descritta della USE flag è necessario aggiornare il sistema così che le variazioni abbiano effetto:

{{Emerge|params+=--update --changed-use --deep|@world}}

== Eseguire versioni multiple di PHP ==

Uno dei maggiori vantaggi per utilizzare Gentoo per lo sviluppo di PHP è l'utilizzo delle versioni slot. E' veramente facile muoversi tra le versioni multiple di PHP, è come eseguirle simultaneamente. Tutto ciò è fatto con il comando {{c|eselect}} fornito dal pacchetto {{Package|app-eselect/eselect-php}}, il quale dovrebbe essere installato automaticamente insieme al pacchetto PHP. Per esempio, selezionando differenti versioni di PHP permette al sistema di eseguire PHP 7.0 per il cli SAPI ma PHP 5.6 per il server web di sistema. Esso permette anche di testare rapidamente un'applicazione su versioni differenti di PHP.

Per elencare le versioni disponibili per il '''cli''' SAPI, utilizzare il seguente comando:

{{RootCmd|eselect php list cli|output=<pre>
 [1]   php5.5 
 [2]   php5.6 *   
 [3]   php7.0
</pre>}}

La versione segnata con <code>*</code> è la versione attualmente attiva, e per spuntare l'altra sostituire <code>cli</code> con <code>fpm</code>,<code>cgi</code> oppure <code>apache2</code>.

To swap versions, use:

{{RootCmd|eselect php set cli 3}}

The number <code>3</code> in this example corresponds to the number in the output of the <code>list</code> sub-command used above. PHP version 7.0 is now used for the command-line:

{{RootCmd|php -v|output=<pre>
PHP 7.0.10-pl0-gentoo (cli) (built: Aug 23 2016 12:38:44) ( NTS )
</pre>}}

== Configuration ==

The PHP configuration is at {{Path|/etc/php}}, which contains one subdirectory for each SAPI and for each PHP version. For instance, configuration files for the PHP-5.6 apache2 SAPI are installed in {{Path|/etc/php/apache2-php5.6}}.

=== Web servers ===

To use PHP in a server-side fashion, a web server needs to be installed and configured to use PHP. A number of popular web servers are briefly touched upon next.

==== Nginx ====

Simply emerge [[Nginx|nginx]] to install it:

{{Emerge|www-servers/nginx}}

{{Important|If custom <var>NGINX_MODULES_HTTP</var> values are set in {{Path|make.conf}}, make sure that the <code>fastcgi</code> module is enabled.}}

Once Nginx has been installed, modify the server section of {{Path|/etc/nginx/nginx.conf}} to look something like this: 

{{FileBox|filename=/etc/nginx/nginx.conf|title=Part of the nginx configuration to enable PHP through FastCGI|1=
        server {
                listen 127.0.0.1;
                server_name localhost;
 
                access_log /var/log/nginx/localhost.access_log main;
                error_log /var/log/nginx/localhost.error_log info;
 
                root /var/www/localhost/htdocs;
 
                location ~ .php$ {
                        fastcgi_pass 127.0.0.1:9000;
                        include fastcgi.conf;
                }
        }
}}

Now start the related services to have a working site. The {{Path|php-fpm}} init script starts the PHP FastCGI Process Manager. FastCGI allows web servers to offload the PHP calculations to this process manager.

{{RootCmd
|service nginx start
|service php-fpm start
}}

==== lighttpd ====

{{Warning|Do not enable the <code>php</code> USE flag for {{Package|www-servers/lighttpd}}. It could actually break the build.}}

Make sure that lighttpd is built with support for <code>fastcgi</code> and that the <code>php</code> USE flag is disabled:

{{FileBox|filename=/etc/portage/package.use|1=
www-servers/lighttpd fastcgi -php
}}

Lighttpd ships with a default FastCGI config file, but unfortunately, it is written to work with the old PHP FCGI SAPI only, instead of a general FCGI setup. Since the <code>php</code> USE flag has been disabled, it will not be included, and rightly so. However it does provide a good foundation for a configuration file that can be used with FPM. 

Edit {{Path|/etc/lighttpd/mod_fastcgi.conf}} to look something like this: 

{{FileBox|filename=/etc/lighttpd/mod_fastcgi.conf|title=Enable FastCGI on lighttpd|lang=lua|1=
server.modules += ("mod_fastcgi")
fastcgi.server = ( ".php" =>
  ( "localhost" =>
    (
      "host" => "127.0.0.1",
      "port" => "9000"
    )
  )
)
}}

Note the <code>host</code> and <code>port</code> parts. 

Since Gentoo ships with a working {{Path|php-fpm.ini}} file, located in {{Path|/etc/php/fpm-php5/php-fpm.ini}}, and init script, starting the services is all that is needed: 

{{RootCmd
|/etc/init.d/php-fpm start
|/etc/init.d/lighttpd start
}}

==== Apache (mod_php) ====

To configure Apache to load the PHP5 module (mod_php), add <code>-D PHP</code> to <var>APACHE2_OPTS</var> variable in {{Path|/etc/conf.d/apache2}}. Users might remember that previously, the PHP version had to be added as well (like <code>-D PHP5</code>). However, since {{Package|app-eselect/eselect-php}} version 0.8.1, the variable is changed to just <code>-D PHP</code> to allow future major versions to be easily integrated.

{{FileBox|filename=/etc/conf.d/apache2|title=Configure Apache to load mod_php|lang=bash|1=
## (settings for PHP5 and above)
APACHE2_OPTS="-D PHP"
}}

Make sure that PHP is built with the <code>apache2</code> USE flag.

If for some reason the system is missing the PHP module integration file {{Path|/etc/apache2/modules.d/70_mod_php.conf}}, currently provided by {{Package|app-eselect/eselect-php}} when installed with <code>apache2</code> USE flag set, manually insert it. Its current content is displayed below.

{{FileBox|filename=/etc/apache2/modules.d/70_mod_php.conf|lang=apache|1=
<IfDefine PHP>
	# The mod_php.so symlink is controlled by
	# eselect-php. However, the module name changed from
	# php5_module to php7_module so we can't blindly load whatever
	# is there. Instead we let eselect-php manage a small
	# configuration file that loads the appropriate module.
	#
	# This is relative to ServerRoot (see httpd.conf).
	Include ../../../var/lib/eselect-php/mod_php.conf
 
	# Tell apache that mod_php should handle PHP files.
	#
	# NOTE: Avoiding AddHandler/AddType for security (bug
	# #538822). Please read the related news item!
	<FilesMatch "\.(php{{!}}php[57]{{!}}phtml)$">
		SetHandler application/x-httpd-php
	</FilesMatch>
 
	# PHP source files which are meant to be displayed as
	# syntax-highlighted source code.
	<FilesMatch "\.phps$">
		SetHandler application/x-httpd-php-source
	</FilesMatch>
 
	DirectoryIndex index.php index.phtml
</IfDefine>}}

Although multiple PHP versions can be installed on a system, Apache can only use a single PHP version. The {{c|eselect php}} command is used to switch between active PHP versions.

== See also ==

* [[PHP/Upgrading_to_PHP_5.6|Upgrading to PHP 5.6]], guide to upgrade older installations to 5.6
* [[Apache#Enabling_PHP_support|Enabling PHP support]] in the Apache article

[[Category:Programming language]]
