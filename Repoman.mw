{{lowercase title}}{{Stub}}
{{InfoBox stack
|{{InfoBox gdoc|Portage|header=true}}
|{{InfoBox gitweb|portage.git/log/?id{{=}}refs/heads/repoman}}
}}

repoman is a Python program used to enforce a minimal level of quality assurance in packages added to the Portage tree. It is installed with Portage and therefore included on every Gentoo install.

== Installation ==

=== Emerge ===

See [[Portage#Installation|installing Portage]].

== Usage ==

=== Invocation ===

{{Note|{{c|repoman commit}} only works inside local cvs, git, or subversion repositories.}}

{{Note|Messages pertaining to specific lines may be inaccurate in the presence of continuation lines from use of the \ character in BASH.}}

{{RootCmd|repoman --help|output=<pre>
usage: repoman [options] [mode]

Modes: ci | commit | fix | full | help | manifest | manifest-check | scan

optional arguments:
  -h, --help            show this help message and exit
  -a, --ask             Request a confirmation before commiting
  -m COMMITMSG, --commitmsg COMMITMSG
                        specify a commit message on the command line
  -M COMMITMSGFILE, --commitmsgfile COMMITMSGFILE
                        specify a path to a file that contains a commit
                        message
  --digest <y|n>        Automatically update Manifest digests for modified
                        files
  -p, --pretend         don't commit or fix anything; just show what would be
                        done
  -q, --quiet           do not print unnecessary messages
  --echangelog <y|n|force>
                        for commit mode, call echangelog if ChangeLog is
                        unmodified (or regardless of modification if 'force'
                        is specified)
  --experimental-inherit <y|n>
                        Enable experimental inherit.missing checks which may
                        misbehave when the internal eclass database becomes
                        outdated
  -f, --force           Commit with QA violations
  -S, --straight-to-stable
                        Allow committing straight to stable
  --vcs VCS             Force using specific VCS instead of autodetection
  -v, --verbose         be very verbose in output
  -V, --version         show version info
  -x, --xmlparse        forces the metadata.xml parse check to be carried out
  --if-modified <y|n>   only check packages that have uncommitted
                        modifications
  -i, --ignore-arches   ignore arch-specific failures (where arch != host)
  --ignore-default-opts
                        do not use the REPOMAN_DEFAULT_OPTS environment
                        variable
  -I, --ignore-masked   ignore masked packages (not allowed with commit mode)
  --include-arches ARCHES
                        A space separated list of arches used to filter the
                        selection of profiles for dependency checks
  -d, --include-dev     include dev profiles in dependency checks
  -e <y|n>, --include-exp-profiles <y|n>
                        include exp profiles in dependency checks
  --unmatched-removal   enable strict checking of package.mask and
                        package.unmask files for unmatched removal atoms
  --without-mask        behave as if no package.mask entries exist (not
                        allowed with commit mode)
  --output-style {column,default}
                        select output type
  --mode {ci,commit,fix,full,help,manifest,manifest-check,scan}
                        specify which mode repoman will run in (default=full)

For more help consult the man page.
</pre>}}

== Removal ==

Properly removing {{c|repoman}} would mean removing Portage. Removing Portage is removing the heart of Gentoo. This is generally a bad idea.

== See also ==

* [[Equery]] - A tool to make several common Portage operations simpler.
* [[Portageq]] - A tool to quickly query Portage information.

[[Category:Portage]]
