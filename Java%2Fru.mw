<languages />


Это руководство ознакомит Вас с языком Java и объяснит как использовать Java с Gentoo Linux.

== Что такое Java? ==

=== Общий обзор ===

Java - это язык программирования, разрабатываемый инженерами Sun Microsystems. Язык объектно-ориентирован и предназначен для запуска на различных платформах без необходимости перекомпиляции кода для каждой платформы. Хотя программа на Java и может быть скомпилирована в нативный код, основная популярность Java может быть приписана ее портируемости, наряду с другими особенностями, такими как сборка мусора. Чтобы сделать платформенную независимость возможной, компилятор Java компилирует Java-код в промежуточное представление, называемое байт-код Java (Java bytecode), которое запускается на JRE (среде выполнения Java), а не прямо на операционной системе. 

Для запуска байт-кода Java, необходимо наличие установленной JRE (Java Runtime Environment). JRE предоставляет доступ к основным библиотекам, платформо-зависимой виртуальной машине Java, плагинам для браузеров, в числе прочих вещей. JDK (Java Development Kit) добавляет программные инструменты, такие как компилятор в байт-код и отладчик. 

== Установка виртуальной машины ==

=== Возможности на выбор ===

Gentoo предоставляет различные JRE (среды выполнения) и JDK (пакеты средств разработки программного обеспечения). В числе текущих вариантов, имеются: 

{| class="wikitable" style="text-align: left;" 
|- 
! Vendor
! JDK
! JRE
|- 
| The IcedTea Open Java SE (ранее icedtea6-bin)
| dev-java/icedtea-bin
| 
|- 
| Oracle's Java 7 SE
| dev-java/oracle-jdk-bin
| dev-java/oracle-jre-bin
|- 
| Sun's Java 6 SE
| dev-java/sun-jdk
| dev-java/sun-jre-bin
|- 
| The IBM Java SE
| dev-java/ibm-jdk-bin
| dev-java/ibm-jre-bin
|-
|}

=== Установка JRE/JDK ===

Для установки JDK Вашего профиля по умолчанию, Вы можете запустить <code>emerge virtual/jdk</code>. Или, чтобы установить JRE Вашего профиля по умолчанию, запустите <code>emerge virtual/jre</code>. 

Некоторые JDK и JRE, включая пакеты Sun, требуют принятия пользовательского соглашения (End User License Agreement), или EULA. Если их лицензия (такая как dlj-1.1) не перечислена в переменной ACCEPT_LICENSE в {{Path|/etc/portage/make.conf}}, то Вы не сможете установить JDK/JRE. Чтобы получить больше информации о том, как добавить подходящие лицензии в {{Path|make.conf}}, пожалуйста, прочитайте [http://www.gentoo.org//doc/en/handbook/handbook-x86.xml?part=2&chap=1#doc_chap4 Настольную книгу Portage] . 

Чтобы избежать какой-либо суматохи с лицензионными ограничениями, рассмотрите установку <code>icedtea-bin</code>, который является открытой реализацией Java из проекта OpenJDK. 

{{Note/ru|JDK также включает JRE, поэтому если Вы его установили, Вам не требуется также устанавливать JRE.}}

=== Установка виртуальных машин с ограничениями на скачивание исходного кода ===

Некоторые JDK и JRE требуют, чтобы Вы преодолели несколько препятствий перед установкой. Просто запустите команду emerge как обычно. Ebuild-файлы затем проинструктируют Вас куда нужно перейти и что загрузить. 

Вам необходимо скачать отмеченные файлы в {{Path|/usr/portage/distfiles}} . По завершении, Вы сможете перезапустить команду emerge, после чего начнется установка JRE/JDK. 

== Настройка виртуальной машины ==

=== Общий обзор ===

На Gentoo, возможна установка множества разных JDK и JRE без вызова конфликтов. 

Используя инструмент <code>java-config</code>, Вы можете установить JRE и JDK для использованию по умолчанию глобально (при условии, что Вы обладаете доступом root). Пользователи также могут использовать <code>java-config</code> для установки их персональных JRE и JDK по умолчанию. 

{{Note/ru|Вы также можете пользоваться командой ''eselect'' для изменения системной и пользовательской виртуальной машины. Смотри <code>eselect java-vm help</code>.}}

=== Установка виртуальной машины по умолчанию ===

Запуск команды <code>java-config --list-available-vms</code> выведет Вам список всех JRE и JDK, установленных на Вашу систему. Ниже приведен пример работы команды: 

{{RootCmd|java-config --list-available-vms|output=<pre>
The following VMs are available for generation-2:
1      IcedTea-bin 1.10.4 [icedtea-bin]
2      Sun JDK 1.5.0.20 [sun-jdk-1.5] (Build Only)
*      Sun JDK 1.6.0.16 [sun-jdk-1.6]
</pre>
}}


{{Note/ru|Виртуальные машины, помеченные как Build Only, могут содержать уязвимости безопасности и/или быть неподдерживаемыми продуктами - EOL (end of life). Gentoo не рекомендует установку этих виртуальных машин в качестве системной или пользовательской машины. Пожалуйста, обратитесь к разделу [http://www.gentoo.org/java.xml#build-only Build Only VM] для более подробной информации.}}

''*'' обозначает что эта виртуальная машина активна на данный момент (системная виртуальная машина или пользовательская виртуальная машина, когда это установлено). Имя в скобках (''[]'') является именем или идентификатором этой отдельной машины. Вы можете использовать имя или число в команде <code>java-config --set-system-vm</code>. Здесь представлен пример того как настроить системную виртуальную машину. 

Установка системной виртуальной машины с использованием имени (рекомендуемый способ):

{{RootCmd|java-config --set-system-vm sun-jdk-1.6|output=<pre>
Now using sun-jdk-1.6 as your generation-2 system JVM
</pre>}}

Вы также можете выбрать ее, указав число:

{{RootCmd|java-config --set-system-vm 3|output=<pre>
Now using sun-jdk-1.6 as your generation-2 system JVM
</pre>
}}

Если Вы являетесь обычным пользователем, Вы можете использовать <code>java-config --set-user-vm</code>. 

{{Note/ru|Вам больше на требуется выполнять команду <code>source</code> для текущего профиля с целью выполнения обновлений пользовательской/системной машин.}}

=== Виртуальные машины Build Only ===

Некоторые виртуальные машины отмечены как build-only, вследствие завершения жизненного цикла (EOL) и/или содержания уязвимостей. Эти виртуальные машины не будут автоматически использованы Gentoo для запуска приложений, использующих запускатели приложений (launchers) Gentoo, но все еще доступны для использования средой сборки Gentoo, так как некоторые пакеты могут потребовать их для сборки. Настройка этих виртуальных машин в качестве системной или пользовательской машины строго не рекомендуется, так как эти виртуальные машины будут в таком случае использованы при запуске исполнимых файлов {{Path|/usr/bin/{java,javac,...}}} и также будут использованы любыми пакетами, не использующими сценарии запускателей Gentoo. 

=== Предпочитаемые Build VM ===

При установке Java-пакетов, виртуальная машина используемая для сборки может иногда отличаться от той, которая установлена в качестве системной виртуальной машины. 

Переключение виртуальных машин во время установки требуется когда, например, ваша системная машина имеет номер версии 1.6, а устанавливаемый пакет требует виртуальную машину версии 1.5. При установке, он выберет для использования машину 1.5, оставив системную виртуальную машину без изменений. 

Чтобы определить какая виртуальная машина выбрана, когда требуется переключение, мы создали список поддерживаемых виртуальных машин - "default/supported VMs" для каждой архитектуры. Вы можете их найти в {{Path|/usr/share/java-config-2/config/jdk-defaults.conf}}. 

Вы можете переписать значения по умолчанию (и даже выбранную Вами системную виртуальную машину) в {{Path|/etc/java-config-2/build/jdk.conf}} и получить полный контроль над тем какая машина будет использована при установке пакета.

Например, чтобы всегда использовать <code>sun-jdk</code>:

{{File|/etc/java-config-2/build/jdk.conf|Установка sun-jdk|<pre>
*=sun-jdk
</pre>
}}

Или, чтобы всегда использовать <code>sun-jdk-1.5</code> там, где это возможно, исключая те случаи, когда явно требуется виртуальная машина версии 1.4 или 1.3:

{{File|/etc/java-config-2/build/jdk.conf|Установка sun-jdk-1.5 для виртуальных машин версии 1.5|<pre>
*=sun-jdk-1.5
</pre>
}}

Или, чтобы использовать различных поставщиков для разных версий, таких как требующих <code>sun-jdk-1.4</code> если запрашивается виртуальная машина версии 1.3 (да-да, 1.3, Вы не ошиблись), и возвращения обратно к <code>ibm-jdk-bin</code> в другом случае:

{{File|/etc/java-config-2/build/jdk.conf|Использование множественных выражений|<pre>
1.3=sun-jdk-1.4 ibm-jdk-bin
1.5=sun-jdk
</pre>
}}


{{Warning/ru|Вам ''не нужно'' редактировать этот файл. Если вы выбрали эти параметры для использования неподдерживаемой виртуальной машины, что-нибудь возможно сломается. По причине широкого выбора доступных виртуальных машин, мы не имеем достаточно ресурсов для тестирования и проверки того, что каждый пакет работает на всех этих машинах. Сообщения о багах на неподдерживаемых машинах не будут иметь больший приоритет, чем баги, присутствующие в поддерживаемых машинах.}}

== Компиляторы ==

Стандартным компилятором Java используемым для сборки является <code>javac</code, который поставляется с каждым JDK. В дополнение к конфигурации виртуальной машины используемой во время сборки, также возможно настроить то, какой компилятор будет использоваться. По сути, Вы определяете список Ваших предпочтений того, какой компилятор использовать в {{Path|/etc/java-config-2/build/compilers.conf}}. 

{{File|/etc/java-config-2/build/compilers.conf|Установка предпочтений для компилятора|<pre>
COMPILERS="ecj-X.Y jikes javac"
</pre>
}}

Некоторые компиляторы не поддерживают все возможные аргументы -target и -source. Следовательно, каждый компилятор в списке проверяется на то, поддерживает ли он желаемые -source/-target. javac будет работать во всех случаях, поэтому, если не найдено другого подходящего компилятора, он будет использован вместо него. 

Больше подробностей по каждому компилятору представлено ниже: 

{| class="wikitable" style="text-align: left;" 
|- 
! Имя
! Название
! Пакет
! Описание
|- 
| javac
| javac
| N/A
| Используемый по умолчанию компилятор, поставляемый с каждым JDK.
|- 
| jikes
| jikes
| dev-java/jikes
| Jikes первоначально разрабатывался IBM. От случая к случаю, он, в основном, быстрее чем javac. Однако, стоит отметить, что он более педантичен, и откажется работать в тех обстоятельствах, когда у javac не возникает проблем. Он также не поддерживает синтаксис Java 1.5 в настоящее время.
|- 
| Eclipse Compiler for Java
| ecj
| dev-java/eclipse-ecj
| ECJ - компилятор используемый комплектом средств разработки Eclipse. Он весьма функционален и достаточно быстр. Он также поддерживает синтаксис Java 1.5.
|-
|}

== Установка переменной CLASSPATH по умолчанию ==

{{Warning/ru|Параметры описываемые в этом разделе должны рассматриваться как устаревшие и, скорее всего, будут убраны в будущем. Мы настоятельно рекомендуем не использовать их, потому что Ваши Java-проекты или приложения должны, в идеале, управлять их собственными параметрами classpath. Если Вы решили указать CLASSPATH по умолчанию, некоторые приложения могут вести себя неожиданным образом, потому что классы, которых они не ожидали, будут перечислены в параметре classpath.}}

<code>java-config</code> может быть также использован для установки параметра CLASSPATH по умолчанию на всей системе, также как и для пользовательского параметра по умолчанию CLASSPATH. 

Во-первых, Вам нужно перечислить доступные библиотеки Java, установленные на Вашей системе, которые, возможно, потребуется поместить в CLASSPATH. Ниже приведен пример результата работы команды: 

{{RootCmd|java-config --list-available-packages|output=<pre>
[xerces-2] The next generation of high performance, fully compliant XML parsers in the Apache Xerces family (/usr/share/xerces-2/package.env)
[junit] Simple framework to write repeatable tests (/usr/share/junit/package.env)
[bsh] BeanShell: A small embeddable Java source interpreter (/usr/share/bsh/package.env)
[bcel] The Byte Code Engineering Library: analyze, create, manipulate Java class files (/usr/share/bcel/package.env)
[log4j] A low-overhead robust logging package for Java (/usr/share/log4j/package.env)
...
</pre>
}}

И снова, имена в квадратных скобках ("[]") являются идентификаторами, которые Вам необходимо передать команде <code>java-config --set-system-classpath</code>. Ниже приведен пример: 


{{RootCmd|java-config --set-system-classpath log4j,xerces-2}}

{{Note/ru|Текущий каталог ({{Path|.}}) не будет являться частью системного параметра classpath, так как это должно быть добавлено в профиль входа в систему.}}

Вам также потребуется обновить настройки среды выходом из системы, а затем входом обратно; или запуском файла {{Path|/etc/profile}}. 

Для пользователей, команда <code>java-config --set-user-classpath</code> создаст файл {{Path|~/.gentoo/java-env-classpath}}, который Вы затем должны запустить из командной оболочки. 

{{Code|Запуск команд пользовательского файла classpath|<pre>
if [[ -f "${HOME}/.gentoo/java-env-classpath" ]]; then
       source ${HOME}/.gentoo/java-env-classpath
fi
</pre>
}}

Если Вы действительно хотите системный или пользовательский параметр classpath по умолчанию, Вы можете добавить что-то наподобие следующего в файл инициализации оболочки. Но мы этого не рекомендуем. 

{{RootCmd|export CLASSPATH{{=}}"${CLASSPATH}:$(java-config --classpath log4j,xerces-2)"}}

== Java-плагины браузера ==

=== Установка плагина ===

Вы можете установить Java-плагин для веб-браузера установив Java VM с USE-флагом <code>nsplugin</code>.

{{Note/ru|<code>nsplugin</code> не доступен для всех архитектур. Проверьте доступные на Вашей архитектуре плагины перед тем, как установить VM, запустив команду <code>emerge -pv <java-vm></code>.}}

Портеж разрешает установку множественных версий Java-плагинов, хотя только один будет использован Вашим браузером. Вы можете проверить список доступных плагинов, запустив команду: 

{{RootCmd|eselect java-nsplugin list|output=<pre>
   [1]   sun-jre-bin-1.6
   [2]   icedtea-bin
</pre>
}}

В этом примере, <code>sun-jre-bin<code> выбран в качестве плагина браузера. 

{{RootCmd|eselect java-nsplugin set sun-jre-bin-1.6}}

Проверьте, что был выбран правильный плагин: 

{{RootCmd|eselect java-nsplugin list|output=<pre>
   [1]   sun-jre-bin-1.6  current
   [2]   icedtea-bin
</pre>
}}

Java.com также предоставляет ссылку для [http://java.com/en/download/installed.jsp проверки установленного плагина]. Вдобавок, если Вы пользуетесь браузером, основанным на Mozilla, Вы можете проверить Ваш Java-плагин, набрав <code>about:plugins</code> в адресной строке. 

=== Плагины на системах multilib ===

Если Вы пользуетесь смешанной 64 и 32- битной системой multilib (например, на AMD64), Вы можете использовать 64-битные и 32-битные Java-плагины. Если только Вы не имеете острую потребность в запуске 32-битных Java-приложений, мы рекомендуем пользоваться нативными 64-битными плагинами на 64-битных веб-браузерах. 

Доступно несколько нативных 64-битных плагинов для браузера. Пары JDK/JRE по умолчанию, <code>sun-jdk</code> и <code>sun-jre-bin</code>, обе включают плагины для браузера. Просто установите одну из них с включенным USE-флагом <code>nsplugin</code>. 

{{RootCmd|echo "dev-java/sun-jre-bin nsplugin" >> /etc/portage/package.use
|emerge sun-jre-bin}}

Чтобы пользоваться 32-битным плагином на 32-битном браузере, Вам потребуется установить <code>emul-linux-x86-java</code> с включенным USE-флагом <code>nsplugin</code>. 

{{RootCmd|echo "app-emulation/emul-linux-x86-java nsplugin" >> /etc/portage/package.use
|emerge emul-linux-x86-java}}

Затем, проверьте какие плагины доступны: 

{{RootCmd|eselect java-nsplugin list|output=<pre>
Available 32-bit Java browser plugins
  [1]   emul-linux-x86-java-1.5
  [2]   emul-linux-x86-java-1.6
Available 64-bit Java browser plugins
  [1]   icedtea-bin
  [2]   sun-jre-bin-1.6
</pre>
}}

А теперь, выберите подходящий плагин для Ваших браузеров: 

{{RootCmd|eselect java-nsplugin set 32bit emul-linux-x86-java-1.6
|eselect java-nsplugin set 64bit sun-jre-bin-1.6}}

Проверьте, что был выбран правильный плагин: 

{{RootCmd|eselect java-nsplugin list|output=<pre>
Available 32-bit Java browser plugins
  [1]   emul-linux-x86-java-1.5
  [2]   emul-linux-x86-java-1.6  current
Available 64-bit Java browser plugins
  [1]   icedtea-bin
  [2]   sun-jre-bin-1.6  current
</pre>
}}

== USE-флаги для использования с Java ==

=== Установка USE-флагов ===

Чтобы найти больше информации по USE-флагам, обратитесь к главе [http://www.gentoo.org//doc/en/handbook/handbook-x86.xml?part=2&chap=2 USE-флаги] настольной книги Gentoo. 

=== Флаги ===

* '''java''' флаг добавляет поддержку Java во множестве программ
* флаг '''nsplugin''' добавляет поддержку браузеров, подобных Mozilla (включая Firefox). Вам это потребуется для просмотра Java-апплетов в вашем браузере Mozilla.
* флаг '''source''' устанавливает zip-архив с исходными кодами пакета. Он традиционно используется интегрированными средами разработки, чтобы добавить исходный код к библиотекам, которые Вы используете.
* флаг '''jce''' добавляет поддержку Java Cryptography Engine
* Для Java-пакетов, '''doc''' флаг собирает документацию по API, используя javadoc.

== Внешние источники ==

=== Источники оффлайн ===

* ман-страница java-config
* <code>java-config --help</code>

=== Ссылки онлайн ===

* [http://www.gentoo.org/proj/en/java/ страница проекта Java]
* архивы списков рассылки [http://news.gmane.org/gmane.linux.gentoo.java gentoo-java], [http://news.gmane.org/gmane.linux.gentoo.user gentoo-user], и [http://news.gmane.org/gmane.linux.gentoo.devel gentoo-dev]
* [http://www.gentoo.org/irc://irc.gentoo.org/gentoo #gentoo] и [http://www.gentoo.org/irc://irc.gentoo.org/gentoo-java #gentoo-java] на IRC
* [http://en.wikipedia.org/wiki/Java_programming_language Статья Wikipedia по Java] 
* Если у Вас есть предложения или вопросы по этому документу, направьте их по следующему email-адресу: {{Mail|java@gentoo.org}}

== Благодарности ==

Мы хотели бы поблагодарить следующих авторов и редакторов за их вклад в это руководство:


* Joshua Nichols
* Karl Trygve Kalleberg
* Joshua Saddler
