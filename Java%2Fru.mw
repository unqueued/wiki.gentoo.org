<languages />
{{InfoBox stack
|{{InfoBox wikipedia|Java_(programming_language)|header=true}}
|{{InfoBox gdoc|Java}}
}}
{{Metadata|abstract=This guide introduces the reader to Java and explains how to use Java with Gentoo Linux.}}
This guide introduces the reader to Java and explains how to use Java with Gentoo Linux.

== Что такое Java? ==

=== Общий обзор ===

Java — это язык программирования, разрабатываемый инженерами Sun Microsystems. Язык является объектно-ориентированным и предназначен для запуска на различных платформах без необходимости перекомпиляции кода для каждой платформы. Хотя программа на Java и может быть скомпилирована в нативный код, изрядную долю популярности языку принесла портируемость, а также некоторые другие возможности, такие как сборка мусора. Чтобы сделать независимость от платформы возможной, компилятор Java компилирует Java-код в промежуточное представление, называемое «байт-кодом Java» (Java bytecode), которое запускается в JRE (среде выполнения Java), а не непосредственно в операционной системе. 

Для запуска байт-кода Java, необходимо наличие установленной JRE (Java Runtime Environment). JRE предоставляет доступ к основным библиотекам, зависящей от платформы виртуальной машине Java, плагинам для браузеров и другим вещам. JDK (Java Development Kit) добавляет программные инструменты, такие как компилятор в байт-код и отладчик. 

== Установка виртуальной машины ==

=== Выбор ===

Gentoo provides numerous Java Runtime Environments (JREs) and Java Development Kits (JDKs). The current choices include: 

{| class="table table-condensed table-striped" style="text-align: left;" 
|- 
! Vendor
! JDK
! JRE
|- 
| The IcedTea Open Java SE (ранее icedtea6-bin)
| {{Package|dev-java/icedtea}} и {{Package|dev-java/icedtea-bin}}
| 
|- 
| Oracle's Java 7 SE
| {{Package|dev-java/oracle-jdk-bin}}
| {{Package|dev-java/oracle-jre-bin}}
|- 
| The IBM Java SE
| {{Package|dev-java/ibm-jdk-bin}}
| {{Package|dev-java/ibm-jre-bin}}
|-
|}

=== Установка JRE/JDK ===

To install the profile's default '''JDK''' run:

{{Emerge|virtual/jdk}}

To install the profile's default '''JRE''' run:

{{Emerge|virtual/jre}}

Some JDKs and JREs, including the Sun packages, require accepting an End User License Agreement, or EULA. If its license (such as dlj-1.1) is not listed in the <var>ACCEPT_LICENSE</var> variable (found in {{Path|/etc/portage/make.conf}}), then the JDK/JRE will be unable to be installed. For more information on how to add acceptable licenses to {{Path|make.conf}} read the [[Handbook:X86/Working/Portage#Licenses|Licenses chapter]] of the Portage Handbook. 

Чтобы избежать какой-либо суматохи с лицензионными ограничениями, рассмотрите установку icedtea-bin, который является открытой реализацией Java из проекта OpenJDK. 

{{Note|Be aware each ''JDK'' will include a ''JRE''; installing a JRE is not necessary if a JDK has been emerged.}}

=== Установка виртуальных машин с ограничениями на скачивание исходного кода ===

Some of the JDKs and JREs require a few extra steps in their configurations. Emerge the packages as normal. If additional steps are required the ebuilds will provide instruction for the user on where to go and what to download.

Download the indicated file(s) into {{Path|/usr/portage/distfiles}} Once the files are in the right directories, rerun the {{c|emerge}} command, at which point the JRE/JDK will be begin to install.

=== Setting up a headless JRE === 

Sometimes there is no need for a full JRE with all the capabilities of java. Using java on a server often does not require any GUI, graphical, sound or even printer related features. To install a simplified (sometimes also referred to as headless) JRE, a few USE flags need to be changed. 

{{FileBox|filename=/etc/portage/package.use|title=Required USE flag changes|1=
virtual/jre headless-awt -alsa -cups
}}

Depending on the current Gentoo profile, this might already be the case. As usual, the USE flag settings that are applicable to a particular package can be checked by running {{c|emerge}} in pretend mode:

{{Cmd|emerge --pretend --verbose virtual/jre}}

== Настройка виртуальной машины java ==

=== Общий обзор ===

На Gentoo, возможна установка множества разных JDK и JRE без вызова конфликтов. 

Using the {{c|java-config}} tool with root privileges, a system-wide default java virtual machine (VM) can be set. Users can also use java-config to custom set their personal VM on a user-by-user basis. 

{{Note|Также, можете пользоваться командой {{c|eselect}} для изменения системной и пользовательской виртуальной машины. Обратитесь к {{c|eselect java-vm help}}.}}

=== Установка виртуальной машины по умолчанию ===

Запуск команды {{c|java-config}} с опцией <code>--list-available-vms</code> выведет список всех JRE и JDK, установленных в системе. Ниже приведен пример работы команды: 

{{RootCmd|java-config --list-available-vms|output=<pre>
The following VMs are available for generation-2:
1)      IcedTea JDK 7.2.6.3 [icedtea-7]
*)      IcedTea JDK 3.0.0_pre07 [icedtea-8]
</pre>
}}

{{Note|VMs marked as 'Build Only' may contain security vulnerabilities and/or be end of life (EOL). Gentoo recommends not setting these VMs as the system's ''or'' the user's VM. Please see [[Java#Build_Only_VM|Build Only VM]] for more information.}}

The ''*'' indicates this is the current active JVM (system-vm or user-vm when set). The name in the brackets (''[]'') is the handle or ID for that particular VM. The handle or the number to {{c|java-config --set-system-vm}} can be used to set the VM. The following text provides an example of how to set the system VM.

Установка системной виртуальной машины с использованием имени (рекомендуемый способ):

{{RootCmd|java-config --set-system-vm sun-jdk-1.6|output=<pre>
Now using sun-jdk-1.6 as your generation-2 system JVM
</pre>}}

Alternate method: select VM by number handle number:

{{RootCmd|java-config --set-system-vm 3|output=<pre>
Now using sun-jdk-1.6 as your generation-2 system JVM
</pre>
}}

As a regular user, use java-config <code>--set-user-vm</code>. 

{{Note|{{c|source}}-ing the profile is no longer needed for updates to the user's or the system's VM.}}

=== Build only VM ===

Некоторые виртуальные машины отмечены как build-only, вследствие завершения жизненного цикла (EOL) и/или содержащихся уязвимостей. Эти виртуальные машины не выбираются системой автоматически с использованием Gentoo Launchers (скрипт, созданный для переключения виртуальных машин в Java), но все еще доступны для использования средой сборки Gentoo, так как некоторые пакеты могут потребовать их для сборки. Настройка такой виртуальной машины в качестве системной или пользовательской машины строго не рекомендуется, так как в таком случае она будет использоваться для запуска {{Path|/usr/bin/{java,javac,...}}}, а также ее будут использовать пакеты, не использующие стандартные скрипты Gentoo для запуска Java-приложений.

=== Preferred build VM ===

При установке Java-пакетов, виртуальная машина используемая для сборки может иногда отличаться от той, которая установлена в качестве системной виртуальной машины. 

This merge time VM switching is needed when, for example, the system-vm is set to a 1.6 VM and the package being merge requires a 1.5 VM. While merging it will select and use a 1.5 VM, leaving the system-vm choice intact. 

To define which VM is selected when a switch is needed, a list of ''default/supported VMs'' per arch has been created. It can be found in {{Path|/usr/share/java-config-2/config/jdk-defaults.conf}}. 

These defaults can be over written (even the selected system VM) in {{Path|/etc/java-config-2/build/jdk.conf}} for complete control over which VM will get used for merging.

Например, чтобы всегда использовать sun-jdk:

{{FileBox|filename=/etc/java-config-2/build/jdk.conf|title=Требование sun-jdk|1=
*=sun-jdk
}}

Или, чтобы всегда использовать sun-jdk-1.5 там, где это возможно, исключая те случаи, когда явно требуется виртуальная машина версии 1.4 или 1.3:

{{FileBox|filename=/etc/java-config-2/build/jdk.conf|title=Требование sun-jdk-1.5 для виртуальных машин версии 1.5|1=
*=sun-jdk-1.5
}}

Или, чтобы использовать различных поставщиков для разных версий, таких как требующих <code>sun-jdk-1.4</code> если запрашивается виртуальная машина версии 1.3 (да-да, 1.3), и возвращения обратно к ibm-jdk-bin в другом случае:

{{FileBox|filename=/etc/java-config-2/build/jdk.conf|title=Использование множественных выражений|1=
1.3=sun-jdk-1.4 ibm-jdk-bin
1.5=sun-jdk
}}


{{Warning|This file does not ''have'' to be edited. If these options are changed to use a unsupported VM, things could possibly break. Because of the wide variety of available VMs, the resources are not available to test and verify every package works on all of them. Bugs reported with a unsupported VM will not be prioritized as much as bugs present within supported VMs.}}

== Компиляторы ==

The standard Java compiler used for building is {{c|javac}}, which comes with each JDK. In addition to configuring the VM used at build time, it is also possible configure which compiler is used. Essentially, define a list with preference for which compiler to use in {{Path|/etc/java-config-2/build/compilers.conf}}. 

{{FileBox|filename=/etc/java-config-2/build/compilers.conf|title=Установка предпочтений для компилятора|1=
COMPILERS="ecj-X.Y jikes javac"
}}

Некоторые компиляторы не поддерживают все возможные аргументы <code>-target</code> и <code>-source</code>. Следовательно, каждый компилятор в списке проверяется на то, поддерживает ли он желаемые <code>-source</code>/<code>-target</code>. javac будет работать во всех случаях, поэтому, если не найдено другого подходящего компилятора, он будет использован вместо него. 

Больше подробностей по каждому компилятору представлено ниже: 

{| class="table table-condensed table-striped" style="text-align: left;" 
|- 
! Name
! Handle
! Package
! Description
|- 
| javac
| javac
| N/A
| This is the default compiler that will be used, and comes with each JDK.
|- 
| jikes
| jikes
| dev-java/jikes
| Jikes was originally developed by IBM. Anecdotally, it is generally quicker than javac. Note however, that it is more pedantic, and will fail under a few circumstances where javac has no issue. It also does not support Java 1.5 syntax yet.
|- 
| Eclipse Compiler for Java
| ecj
| dev-java/eclipse-ecj
| ECJ is the compiler used by the Eclipse software development kit. It is very full featured, and is pretty fast. It does support Java 1.5 syntax.
|-
|}

== Установка переменной CLASSPATH по умолчанию ==

{{Warning|The options explained in this section should be considered deprecated and will most likely be removed in the future. It is strongly recommended against using these, because Java projects or applications should ideally manage their own classpaths. When choosing to specify a default <var>CLASSPATH</var>, some applications may behave unexpectedly, because classes they were not expecting to be on the classpath.}}

{{c|java-config}} can also be used to set a system-wide default <var>CLASSPATH</var>, as well a user-specific default <var>CLASSPATH</var>. 

First, list available Java libraries installed on the system to possibly put in the <var>CLASSPATH</var> variable. Here is an example of output: 

{{RootCmd|java-config --list-available-packages|output=<pre>
[xerces-2] The next generation of high performance, fully compliant XML parsers in the Apache Xerces family (/usr/share/xerces-2/package.env)
[junit] Simple framework to write repeatable tests (/usr/share/junit/package.env)
[bsh] BeanShell: A small embeddable Java source interpreter (/usr/share/bsh/package.env)
[bcel] The Byte Code Engineering Library: analyze, create, manipulate Java class files (/usr/share/bcel/package.env)
[log4j] A low-overhead robust logging package for Java (/usr/share/log4j/package.env)
...
</pre>
}}

Again, the names in brackets ([]) are the IDs to pass to {{c|java-config --set-system-classpath}}. Here is an example: 


{{RootCmd|java-config --set-system-classpath log4j,xerces-2}}

{{Note/ru|Текущий каталог ({{Path|.}}) не будет являться частью системного параметра classpath, так как это должно быть добавлено в профиль входа в систему.}}

Update the environment by logging out, then in again or by typing {{c|source {{Path|/etc/profile}}}} 

For users, java-config --set-user-classpath will create {{Path|~/.gentoo/java-env-classpath}}, which should then source from the shell's profile. 

{{CodeBox|title=Запуск команд пользовательского файла classpath|1=
if [[ -f "${HOME}/.gentoo/java-env-classpath" ]]; then
       source ${HOME}/.gentoo/java-env-classpath
fi
}}

If desiring a system wide or user default classpath add something like the following to the shell's profile. This is advised against: 

{{RootCmd|export CLASSPATH{{=}}"${CLASSPATH}:$(java-config --classpath log4j,xerces-2)"}}

== Java browser plugins ==

=== Установка плагина ===

It is possible to install a Java plugins for a web browsers by emerging a Java VM with the <code>nsplugin</code> USE flag set.

{{Note|<code>nsplugin</code> is not available for all architectures. Check for available plugins for the specific arch before trying to install a VM by running {{c|emerge -pv <java-vm>}}}}

Portage will allow installations of multiple Java plugins versions, though only one will be used by the web browser. Check the list of available plugins by running: 

{{RootCmd|eselect java-nsplugin list|output=<pre>
   [1]   sun-jre-bin-1.6
   [2]   icedtea-bin
</pre>
}}

In this example, {{c|sun-jre-bin}} is selected for the browser plugin. 

{{RootCmd|eselect java-nsplugin set sun-jre-bin-1.6}}

Проверьте, что был выбран правильный плагин: 

{{RootCmd|eselect java-nsplugin list|output=<pre>
   [1]   sun-jre-bin-1.6  current
   [2]   icedtea-bin
</pre>
}}

Java.com also provides a link to [http://java.com/en/download/installed.jsp verify the installed plugin]. Additionally, if a Mozilla-based browser is being used, verification of the Java plugin can be performed by typing {{c|about:plugins}} into the address bar.

=== Плагины на системах с multilib ===

If running a mixed 64-bit and 32-bit multilib system (for example, on {{Keyword|amd64}}), use both 64-bit and 32-bit Java plugins. Unless there is a pressing need to run 32-bit Java applications, users have been recommended to use native 64-bit plugins on 64-bit web browsers. 

There are several native 64-bit browser plugins available. The default JDK/JRE pair, <code>sun-jdk</code> and <code>sun-jre-bin</code>, both include browser plugins. Just emerge one of them with <code>nsplugin</code> USE enabled. 

{{RootCmd|echo "dev-java/sun-jre-bin nsplugin" >> /etc/portage/package.use
|emerge sun-jre-bin}}

To use a 32-bit plugin on a 32-bit browser, the {{Package|app-emulation/emul-linux-x86-java}} package will need to be emerged with <code>nsplugin</code> USE enabled. 

{{RootCmd|echo "app-emulation/emul-linux-x86-java nsplugin" >> /etc/portage/package.use
|emerge emul-linux-x86-java}}

Затем, проверьте какие плагины доступны: 

{{RootCmd|eselect java-nsplugin list|output=<pre>
Available 32-bit Java browser plugins
  [1]   emul-linux-x86-java-1.5
  [2]   emul-linux-x86-java-1.6
Available 64-bit Java browser plugins
  [1]   icedtea-bin
  [2]   sun-jre-bin-1.6
</pre>
}}

Now select the right plugin for the browser: 

{{RootCmd|eselect java-nsplugin set 32bit emul-linux-x86-java-1.6
|eselect java-nsplugin set 64bit sun-jre-bin-1.6}}

Проверьте, что был выбран правильный плагин: 

{{RootCmd|eselect java-nsplugin list|output=<pre>
Available 32-bit Java browser plugins
  [1]   emul-linux-x86-java-1.5
  [2]   emul-linux-x86-java-1.6  current
Available 64-bit Java browser plugins
  [1]   icedtea-bin
  [2]   sun-jre-bin-1.6  current
</pre>
}}

== USE-флаги для использования с Java ==

=== Настройка USE-флагов ===

For more information regarding [[USE flag]]s, refer to the USE flags chapter from the [[Handbook:X86/Working/USE|Gentoo Handbook]].

=== USE-флаги ===

* The [https://packages.gentoo.org/useflags/java <code>java</code>] flag adds support for Java in a variety of programs;
* The [https://packages.gentoo.org/useflags/nsplugin <code>nsplugin</code>] flag adds support for Mozilla-like browsers (including Firefox). This is needed for viewing Java applets in a Mozilla-like browser;
* The [https://packages.gentoo.org/useflags/jce <code>jce</code>] flag adds support for the Java Cryptography Engine;

Following USE flags go in [[Gentoo_Java_USE_flags|JAVA_PKG_IUSE]].
* The [https://packages.gentoo.org/useflags/source <code>source</code>] flag installs a zip of the source code of a package. This is traditionally used for IDEs to 'attach' source to the libraries that are being use;
* For Java packages, the [https://packages.gentoo.org/useflags/doc <code>doc</code>] flag will build API documentation using javadoc.

== Смотрите также ==

* [[Project:Java/User_Guide|Java руководство пользователя]] на Java project

== Ссылки ==

* The [http://news.gmane.org/gmane.linux.gentoo.java gentoo-java], [http://news.gmane.org/gmane.linux.gentoo.user gentoo-user], and [http://news.gmane.org/gmane.linux.gentoo.devel gentoo-dev] mailing list archives
* {{IRC|gentoo}} and {{IRC|gentoo-java}} on IRC
* [https://forums.gentoo.org/viewtopic-t-901036.html Java 7 and bootstrapping icedtea] on the Gentoo forums

More information can be found offline:

* {{c|man java-config}}
* {{c|java-config --help}}

For suggestions or questions regarding this document, please email the Gentoo Java team: {{Mail|java@gentoo.org}}

[[Category:Programming_language]]

{{Migrated|originalauthors=Joshua Nichols, Karl Trygve Kalleberg, Joshua Saddler}}
