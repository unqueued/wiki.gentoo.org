<languages />

{{Metadata|abstract=このガイドでは、あなたのドメインとローカルネットワークにBINDをインストールし設定する方法を説明しています。}}

このガイドでは、あなたのドメインとローカルネットワークにBINDをインストールし設定する方法を説明しています。

== はじめに ==

このチュートリアルでは、BIND をインストールし設定する方法を示しています。BIND は、インターネット上で最も利用されているDNSサーバです。ここでは、あなたのドメインについて、ローカルネットワーク向けと全世界向けでそれぞれ異なる内容を、<code>bind</code> に設定します。そのために、それぞれのビューを使います。つまり、内部ゾーン（ローカルネットワーク）のビューと、外部ゾーン（全世界）のビューです。 

== この例で使用しているデータ ==

{| class="wikitable" style="text-align: left;" 
|- 
! キーワード
! 説明
! 例
|- 
| YOUR_DOMAIN
| あなたのドメイン名
| gentoo.org
|- 
| YOUR_PUBLIC_IP
| ISPから提供されているグローバルIPアドレス
| 204.74.99.100
|- 
| YOUR_LOCAL_IP
| ローカルのIPアドレス
| 192.168.1.5
|- 
| YOUR_LOCAL_NETWORK
| ローカルのネットワーク
| 192.168.1.0/24
|- 
| SLAVE_DNS_SERVER
| あなたのドメインで利用しているスレーブDNSサーバのIPアドレス
| 209.177.148.228
|- 
| ADMIN
| DNSサーバの管理者のユーザ名
| root
|- 
| MODIFICATION
| ゾーンファイルの更新日に連番を加えたもの
| 2009062901
|-
|}

== BIND の設定 ==

=== インストール ===

まず、 {{Package|net-dns/bind}} をインストールしましょう。 

{{Emerge|net-dns/bind}}

=== /etc/bind/named.conf の設定 ===

最初に、{{Path|/etc/bind/named.conf}} を設定します。このステップでの1番目の作業は、bind のルートディレクトリ、及び、各IPアドレスで開くポート、 pid ファイル、IPv6 プロトコルに関する行を設定です。

{{Code|options セクション|<pre>
options {
        directory "/var/bind";
  
        listen-on-v6 { none; };
        listen-on port 53 { 127.0.0.1; YOUR_LOCAL_IP; };
  
        pid-file "/var/run/named/named.pid";
};
</pre>
}}

{{Path|named.conf}} に関する2番目の作業は、ローカルネットワークに対する内部ビューです。 

{{Code|内部ビュー|<pre>
view "internal" {
        match-clients { YOUR_LOCAL_NETWORK; localhost; };
        recursion yes;
  
        zone "YOUR_DOMAIN" {
                type master;
                file "pri/YOUR_DOMAIN.internal";
                allow-transfer { any; };
        };
};
</pre>
}}

{{Path|named.conf}} に関する3番目の作業は、あなたのドメイン名が全世界でも引け、他のドメイン名をあなた（及びあなたのDNSサーバを利用する誰も）が引けるようにするための外部ビューです。 

{{Code|外部ビュー|<pre>
view "external" {
        match-clients { any; };
        recursion no;
  
        zone "." IN {
                type hint;
                file "named.ca";
        };
  
        zone "127.in-addr.arpa" IN {
                type master;
                file "pri/127.zone";
                allow-update { none; };
                notify no;
        };
  
        zone "YOUR_DOMAIN" {
                type master;
                file "pri/YOUR_DOMAIN.external";
                allow-query { any; };
                allow-transfer { SLAVE_DNS_SERVER; };
        };
};
</pre>
}}

{{Path|named.conf}} に関する最後の作業は、ロギングポリシーの設定です。 

{{Code|外部ビュー|<pre>
logging {
        channel default_syslog {
                file "/var/log/named/named.log" versions 3 size 5m;
                severity debug;
                print-time yes;
                print-severity yes;
                print-category yes;
        };
       category default { default_syslog; };
};
</pre>
}}

{{Path|/var/log/named/}} ディレクトリが存在し、その所有権が <code>named</code> にある必要があります。 

{{RootCmd|mkdir -p /var/log/named/
|chmod 770 /var/log/named/
|touch /var/log/named/named.log
|chmod 660 /var/log/named/named.log
|chown -R named /var/log/named/
|chgrp -R named /var/log/named/}}

=== 内部ゾーンファイルの作成 ===

上記ネットワーク例のホスト名とIPアドレスを使用すると以下のとおりです。（すべてではないものの）ほとんどのドメイン名は「.」（ドット）で終わっていますので、気をつけてください。 

{{Code|/var/bind/pri/YOUR_DOMAIN.internal|<pre>
$TTL 2d
@	IN SOA	ns.YOUR_DOMAIN.	ADMIN.YOUR_DOMAIN. (
	MODIFICATION	; serial
	3h	; refresh
	1h	; retry
	1w	; expiry
	1d )	; minimum
  
YOUR_DOMAIN.		IN MX	0 mail.YOUR_DOMAIN.
YOUR_DOMAIN.		IN TXT	"v=spf1 ip4:YOUR_PUBLIC_IP/32 mx ptr mx:mail.YOUR_DOMAIN ~all"
YOUR_DOMAIN.		IN NS	ns.YOUR_DOMAIN.
YOUR_DOMAIN.		IN NS	SLAVE_DNS_SERVER
www.YOUR_DOMAIN.	IN A	192.168.1.3
ns.YOUR_DOMAIN.		IN A	192.168.1.5
mail.YOUR_DOMAIN.	IN A	192.168.1.3
router.YOUR_DOMAIN.	IN A	192.168.1.1
hell.YOUR_DOMAIN.	IN A	192.168.1.3
heaven.YOUR_DOMAIN.	IN A	192.168.1.5
desktop.YOUR_DOMAIN.	IN A	192.168.1.4
</pre>
}}

=== 外部ゾーンファイルの作成 ===

あとは、外部クライアント（wwwやmail、ns）のためのサブドメインの設定だけが残っています。 

{{Code|/var/bind/pri/YOUR_DOMAIN.external|<pre>
$TTL 2d
@	IN SOA	ns.YOUR_DOMAIN.	ADMIN.YOUR_DOMAIN. (
	MODIFICATION	;serial
	3h	;refresh
	1h	;retry
	1w	;expiry
	1d )	;minimum
  
YOUR_DOMAIN.		IN MX	0 mail.YOUR_DOMAIN.
YOUR_DOMAIN.		IN TXT	"v=spf1 ip4:YOUR_PUBLIC_IP/32 mx ptr mx:mail.YOUR_DOMAIN ~all"
YOUR_DOMAIN.		IN NS	ns.YOUR_DOMAIN.
YOUR_DOMAIN.		IN NS	SLAVE_DNS_SERVER
www.YOUR_DOMAIN.	IN A	YOUR_PUBLIC_IP
ns.YOUR_DOMAIN.		IN A	YOUR_PUBLIC_IP
mail.YOUR_DOMAIN.	IN A	YOUR_PUBLIC_IP
</pre>
}}

=== 設定を完了する ===

<code>named</code> を default ランレベルに追加しましょう: 

{{RootCmd|rc-update add named default}}

== クライアント側の設定 ==

これで、あなた用のDNSサーバを利用して、あなたのローカルネットワーク上のすべてのマシンでドメイン名が引けるようになります。あなたのローカルネットワーク上のすべてのマシンで、{{Path|/etc/resolv.conf}} ファイルを書換えましょう。 

{{Code|/etc/resolv.conf を編集|<pre>
search YOUR_DOMAIN
nameserver YOUR_DNS_SERVER_IP
</pre>
}}

Note that YOUR_DNS_SERVER_IP is the same as YOUR_LOCAL_IP we used in this document. In the picture the example is 192.168.1.5. 

== テスト ==

We are able to test our new DNS server. First, we need to start the service. 

{{RootCmd|/etc/init.d/named start}}

Now, we are going to make some <code>host</code> commands to some domains. We can use any computer of our local network to do this test. If you don't have <code>net-dns/host</code> installed you can use <code>ping</code> instead. Otherwise, first run <code>emerge host</code> . 

{{Cmd|host www.gentoo.org|output=<pre>
www.gentoo.org has address 209.177.148.228
www.gentoo.org has address 209.177.148.229
</pre>}}

{{Cmd|host hell|output=<pre>
hell.YOUR_DOMAIN has address 192.168.1.3
</pre>}}

{{Cmd|host router|output=<pre>
router.YOUR_DOMAIN has address 192.168.1.1
</pre>}}


== iptables によるサーバ保護 ==

If you use iptables to protect your server, you can add these rules for DNS service. 

{{Code|Iptables のルール|<pre>
iptables -A INPUT -p udp --sport 53 -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -p udp --dport 53 -j ACCEPT
iptables -A INPUT -p tcp --sport 53 -j ACCEPT
iptables -A INPUT -p tcp --dport 53 -j ACCEPT
</pre>
}}

== 謝辞 ==

このガイドに対する以下の作者及び編集者の貢献にお礼申しあげます。

* Vicente Olivert Riera
* nightmorph


[[Category:Server]]
[[Category:Daemons]]
