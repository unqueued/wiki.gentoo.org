The Raspberry Pi is an ARM device (BCM2835, ARMv6) with 256 MB RAM and uses an SD(HC) card for storage. This document describes how to install Gentoo on the Raspberry Pi.

== Preparing the SD card ==

=== Partitioning ===
Check that your SD card is compatible. [http://elinux.org/RPi_VerifiedPeripherals#SD_cards]

Create at least two partitions on the card. One FAT32 for the boot partition, and one (with your preferred filesystem) for the root partition.
{{ContentBox|Example partitioning|<pre>
Disk /dev/sdb: 16.6 GB, 16574840832 bytes
255 heads, 63 sectors/track, 2015 cylinders, total 32372736 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x1db42224

   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1   *        2048      835379      416666    c  W95 FAT32 (LBA)
/dev/sdb2          835380    31889024    15526822+  83  Linux
/dev/sdb3        31889025    32372735      241855+   5  Extended
/dev/sdb5        31889088    32372735      241824   82  Linux swap / Solaris
</pre>}}
For optimal compatibility, it is recommended to use 255H/63S geometry. [http://elinux.org/RPi_Advanced_Setup]

=== boot ===
The /boot partition needs the following proprietary [https://github.com/raspberrypi/firmware firmware files], provided by the Raspberry Pi foundation.
{{ContentBox|/boot|<pre>
bootcode.bin
loader.bin
start.elf
</pre>}}
Create a file called cmdline.txt containing the necessary kernel parameters. Example:
{{File|/boot/cmdline.txt||<pre>
root=/dev/mmcblk0p2 rootdelay=2
</pre>}}

=== stage3 ===
Download the appropriate stage3:
{{RootCmd| wget [http://distfiles.gentoo.org/releases/arm/autobuilds/current-stage3-armv6j_hardfp/ http://distfiles.gentoo.org/releases/arm/autobuilds/current-stage3-armv6j_hardfp/]stage3-armv6j_hardfp-YYYYMMDD.tar.bz2}}
Extract to the root filesystem on the SD card:
{{RootCmd| tar xfj stage3-armv6j_hardfp-YYYYMMDD.tar.bz2 -C /mnt/raspberrypiroot/}}
{{File|/etc/make.conf||<pre>
CFLAGS="-O2 -mcpu=arm1176jzf-s -mfpu=vfp -mfloat-abi=hard"
CXXFLAGS="${CFLAGS}"
</pre>}}
Don't forget to adjust /etc/fstab and /etc/shadow root password.

=== portage ===
Download the latest portage:
{{RootCmd|wget [http://distfiles.gentoo.org/snapshots/portage-latest.tar.bz2] http://distfiles.gentoo.org/snapshots/portage-latest.tar.bz2}}
Untar portage on the SD card:
{{RootCmd|tar xjvpf -C /mnt/raspberrypiroot/usr portage-latest.tar.bz2}}

== Compiling the kernel ==

=== crossdev ===
Install crossdev:
{{Emerge|sys-devel/crossdev}}

Create a cross toolchain for ARM: (drop -S if you plan to run an unstable system)
{{RootCmd|crossdev -S -v -t armv6j-hardfloat-linux-gnueabi}}

== Kernel and modules ==
Download kernel sources for Raspberry Pi from github [https://github.com/raspberrypi/linux] then configure, compile and install:
{{RootCmd
|make ARCH{{=}}arm bcmrpi_cutdown_defconfig
|make ARCH{{=}}arm CROSS_COMPILE{{=}}/usr/bin/armv6j-hardfloat-linux-gnueabi- oldconfig
|make ARCH{{=}}arm CROSS_COMPILE{{=}}/usr/bin/armv6j-hardfloat-linux-gnueabi- -j2
|make ARCH{{=}}arm CROSS_COMPILE{{=}}/usr/bin/armv6j-hardfloat-linux-gnueabi- modules_install INSTALL_MOD_PATH{{=}}/mnt/raspberrypiroot/
}}

Create a kernel.img file using the [https://github.com/raspberrypi/tools Raspberry Pi mkimage tool] from github:
{{RootCmd
|imagetool-uncompressed.py arch/arm/boot/Image
|cp kernel.img /mnt/raspberrypiroot/boot/
}}
That's it! You should all be set now.

== Tips and Tricks ==
* Storage is rather slow, even with the couple of compatible SDHC class 10 cards. If you want to run emerge on the Raspberry Pi, putting /usr/portage on squashfs will speed up things dramatically.
* There is no hardware RTC on the Raspberry Pi. Use the /etc/init.d/ntp-client init script to set correct time at boot. A fallback incremental clock can be archived by /etc/init.d/swclock (replaces hwclock).
* If you require more RAM for Linux, use one of the alternative GPU firmware files that reduce the amount reserved for video memory.
* More recent, unofficial kernel releases for the Raspberry Pi might be found at Chris Boot's repository: [https://github.com/bootc/linux/branches]

[[Category:Computers]]
