<languages />

이 안내서에서는 info 명령을 사용하여 info 페이지를 둘러보는 방법을 보여드리려 합니다.

== 도입부 ==

=== info란 무엇인가요? ===

아마 대부분 <code>man</code> 문서 시스템에 익숙할 것입니다. man 에서는 항목을 빨리 찾아보는데 좋지만 맨 페이지를 서로 연결하는 구조는 빠져있습니다. 그래서 <code>info</code>가 도입됐습니다. info 페이지는 <code>texinfo</code> 도구를 사용하여 만들었으며, 다른 페이지로 연결할 수 있고, 메뉴를 만들 수 있으며, 일반적으로 탐색이 용이해졌습니다. 다음 장에서는 어떻게 info 페이지를 배치하는지 보도록 하겠습니다. 

=== info 페이지 배치 ===

주로 info 페이지는 {{Path|/usr/share/info}}에 있습니다. man 디렉터리 배치 방식과는 달리 {{Path|/usr/share/info}}에는 압축을 풀어낼 수 있는 내용이 있습니다. 이 파일은 다음 형식을 지니고 있습니다: 

{{Code|info 파일 형식|<pre>
pagename.info[-node].gz
</pre>
}}

<code>pagename</code>은 페이지의 실제 이름입니다(예: <code>wget</code>). <code>[-node]</code>는 다른 노드 레벨을 설계하는 추가 생성자입니다(보통 질문에 대해 info 문서의 최상단 레벨을 참조합니다). 디스크 공간을 절약하려는 목적으로 info 페이지를 <code>gzip</code> 압축 형식으로 압축합니다. 추가 info 페이지는 <code>INFOPATH</code> 환경 변수로 조회 할 수 있습니다(보통 {{Path|/etc/env.d}}의 다양한 파일을 통해 설정합니다). 시작한다면 {{Path|/usr/share/info/dir}} 파일을 참고하는 것이 중요합니다. 이 특별한 파일은 매개 변수 없이 info를 실행할 때 사용합니다. 사용자가 탐색할 수 있는 모든 info 페이지 목록이 들어있습니다.  info에서 이리저리 탐색하기 위해, 인자를 사용하지 않고 바로 실행해서 가져오도록 해보겠습니다: 

{{Cmd|info}}

이제 다음 장에서 기본 info 탐색에 대해 알아보겠습니다.

== info 페이지 다루기 ==

=== 메뉴 탐색 ===

이제 info를 시작하면 다음과 같은 화면을 보게 됩니다: 

{{Code|info 화면 예제|<pre>
File: dir,      Node: Top       This is the top of the INFO tree
 
  This (the Directory node) gives a menu of major topics.
  Typing "q" exits, "?" lists all Info commands, "d" returns here,
  "h" gives a primer for first-timers,
  "mEmacs<Return>" visits the Emacs manual, etc.
 
  In Emacs, you can click mouse button 2 on a menu item or cross reference
  to select it.
 
* Menu:
 
User Interface Toolkit
* GDK: (gdk).           The General Drawing Kit
* GTK: (gtk).           The GIMP Toolkit
 
GNU programming tools
* Autoconf v2.1: (autoconf).         Create source code configuration scripts.
</pre>
}}

바로 지금 앞에 별표 문자가 붙은 수많은 항목을 보고 있습니다. 다른 노드 레벨에서 탐색할 메뉴 항목입니다.  메뉴를 선택하는데는 두가지 방법이 있습닌다. 먼저번의 방법은 지금 보고 다른 방법은 나중에 보도록 하겠습니다. 먼저 <code>wget</code> info 페이지로 이동하겠습니다. 아래로 이동하려면 wget 줄에 도달할 때까지 아래 화살표 키를 사용하십시오: 

{{Code|wget info 메뉴 항목 탐색|<pre>
Network Applications
* GnuTLS: (gnutls).                     Package for Transport Layer Security.
* Wget: (wget).         The non-interactive network downloader.
* certtool: (gnutls)Invoking certtool.  Manipulate certificates and keys.
* gnutls-cli: (gnutls)Invoking gnutls-cli.      GNU TLS test client.
* gnutls-cli-debug: (gnutls)Invoking gnutls-cli-debug.  GNU TLS debug client.
* gnutls-serv: (gnutls)Invoking gnutls-serv.    GNU TLS test server.
* srptool: (gnutls)Invoking srptool.    Simple SRP password tool.
</pre>
}}

해당 줄로 이동하고 나서 메뉴 항목을 선택하려면 {{Key|Enter}}키를 치십시오. <code>wget</code>에 대한 info 페이지를 가져옵니다: 

{{Code|wget info 페이지|<pre>
File: wget.info,  Node: Top,  Next: Overview,  Up: (dir)
 
Wget 1.10.2
***********
 
This manual documents version 1.10.2 of GNU Wget, the freely available
utility for network downloads.
 
   Copyright (C) 1996-2005 Free Software Foundation, Inc.
 
* Menu:
 
* Overview::            Features of Wget.
* Invoking::            Wget command-line arguments.
* Recursive Download::  Downloading interlinked pages.
* Following Links::     The available methods of chasing links.
* Time-Stamping::       Mirroring according to time-stamps.
* Startup File::        Wget's initialization file.
</pre>
}}

이제 info 페이지를 띄우겠습니다. 다음장에서 기본 탐색 방법을 살펴보겠습니다.

=== 기본 탐색 방법 ===

노드 용어 중에 wget 페이지의 <code>Top</code> 노드를 고려합니다. <code>Top</code> 노드는 각 일부 info 페이지에 대한 목차와 같다는 점을 고려하십시오. 이제 실제 페이지 자체를 탐색하면 몇가지 다른 방식의 진행을 볼 수 있습니다. 먼저 방법은 표준 info 방식입니다. 이 방식은 다음 페이지를 이동할때 {{Key|Space}}키를 사용하며 이전 페이지를 이동하려면 {{Key|Backspace}}/{{Key|Delete}} 키를 사용합니다. 이 방식은 문서상에서 적당한 노드로 자동으로 앞으로 이동하거나 뒤로 이동하는 방식이므로 추천합니다. 이 방식을 통해 맨페이지에서 사용한 선형 탐색 같은 탐색 동작이 가능합니다. 다른 방법은 {{Key|Page up}}/{{Key|Page down}} 키를 통한 방법입니다. 동작은 하는데 {{Key|Space}}/{{Key|Backspace}}/{{Key|Delete}} 키를 조작하는 것처럼 동작하지는 않습니다. {{Key|Space}}/{{Key|Backspace}}/{{Key|Delete}}를 사용하여 전체 노드를 건너뛰려면 {{Key|[}} (완전히 뒤로)키와 {{Key|]}}(완전히 앞으로)키를 사용할 수 있습니다. 

앞에서 말했던 바와 같이 메뉴 탐색에는 두가지 방식이 있습니다. 다른 방법은 이제 여기서 설명할 것입니다. <code>1-9</code> 숫자키를 문서상의 첫번째~아홉번째 메뉴 항목을 참조하는데 사용할 수 있습니다. 이 동작은 문서를 빨리 충분히 읽을때 사용합니다. 예를 들어 <code>Recursive Download</code> 메뉴 항목으로 이동하는데 {{Key|3}}키를 사용해보겠습니다. {{Key|3}} 키를 누르면 <code>Recursive Download</code> 화면을 띄웁니다: 

{{Code|Recursive Download 결과 화면|<pre>
File: wget.info,  Node: Recursive Download,  Next: Following Links,  Prev: Invoking,  Up: Top
 
3 Recursive Download
********************
 
GNU Wget is capable of traversing parts of the Web (or a single HTTP or
FTP server), following links and directory structure.  We refer to this
as to "recursive retrieval", or "recursion".
</pre>
}}

이제 <code>Recursive Download</code> 화면을 띄운 상태입니다. 이제 몇가지를 알아둘 적절한 때가 왔습니다. 최상단 헤더 섹션이 첫번째입니다. 여기 헤더는 일부 화면에서 탐색할 수 있는 항목을 보여줍니다. <code>Next:</code> 로 나타난 페이지는 {{Key|n}} 키를 누르면 접근할 수 있고, <code>Prev:</code>로 나타난 페이지는 {{Key|p}} 키를 누르면 접근할 수 있습니다. 참고로 이 방법은 동일한 레벨에서만 동작합니다. 과도하게 사용하면 전혀 관련 없는 내용으로 이동할 수 있습니다. 연속된 방식으로 탐색하는 {{Key|Space}}/{{Key|Backspace}}/{{Key|Delete}}/{{Key|[}}/{{Key|]}} 키 사용 방식이 더 좋습니다. 

어떤 이유로 인해 탐색 대상을 잃었다면, 해당 상황에서 빠져나올 수 있는 몇가지 방법이 있습니다. 첫번째는 {{Key|t}} 키의  사용입니다. 탐색중인 info 페이지 일부에 대해 최상단(목차)로 바로 이동하게 합니다. 보던 마지막 페이지로 되돌아가려면 {{Key|l}} 키를 사용할 수 있습니다. 상위 레벨로 이동하려면 {{Key|u}} 키로 이동할 수 있습니다. 페이지를 탐색하는 몇가지 방법을 알아냈고, 이제 다음 장에서 컨텐트를 검색하는 방법을 살펴보겠습니다.

== info 에서 검색하기 ==

=== 다른 info 페이지 탐색 ===

Now that you can navigate an individual info page, it's important to look at accessing other info pages. The first obvious way is to go to the info page through the <code>dir</code> index listing of info pages. To get to the <code>dir</code> index from deep within a document, simply press the {{Key|d}} key. From there you can search for the appropriate page you want. However, if you know the actual page, there is an easier way through the <code>Goto node ({{Key|g}} key)</code> command. To go to an info page by name, type {{Key|g}} to bring up the prompt and enter the name of the page in parentheses: 

{{Code|이름으로 info 페이지 이동|<pre>
* Startup File::        Wget's initialization file.
* Examples::            Examples of usage.
* Various::             The stuff that doesn't fit anywhere else.
* Appendices::          Some useful references.
* Copying::             You may give out copies of Wget and of this manual.
--zz-Info: (wget.info.gz)Top, 24 lines --Top-------------------------------
Goto node: (libc)
</pre>
}}

이 동작은 아래와 같이 libc 페이지를 띄울 것입니다: 

{{Code|goto node 명령 결과|<pre>
File: libc.info,  Node: Top,  Next: Introduction,  Prev: (dir),  Up: (dir)
 
Main Menu
*********
 
This is Edition 0.10, last updated 2001-07-06, of `The GNU C Library
Reference Manual', for Version 2.3.x of the GNU C Library.
 
* Menu:
 
* Introduction::                 Purpose of the GNU C Library.
</pre>
}}

이제 이름을 사용하여 info 페이지를 이동하는 방법을 알았습니다. 다음장에서 info 페이지 색인을 사용하여 정보 일부를 검색하는 방법을 살펴보도록 하겠습니다.

=== 색인을 사용한 검색 ===

이 예제를 통해 <code>libc</code> info 페이지 색인을 사용하여 C 라이브러리의 <code>printf</code> 함수를 어떻게 찾는지 살펴보도록 하겠습니다. 지금 아마도 여전히 libc info 페이지의 마지막 장에 있을텐데, 그렇지 않다면 마지막 장에 머무르기 위해 goto node 명령을 사용하십시오. 색인 검색을 활용하려면 {{Key|i}} 키로 프롬프트를 띄우고 검색 단어를 입력하십시오. 아래에서 <code>printf</code>를 검색해보겠습니다: 

{{Code|색인 검색 요청 입력|<pre>
* Character Set Handling::       Support for extended character sets.
* Locales::                      The country and language can affect the
                                   behavior of library functions.
* Message Translation::          How to make the program speak the user's
                                   language.
--zz-Info: (libc.info.gz)Top, 1291 lines --Top-- Subfile: libc.info-1.gz-----
Index entry: printf
</pre>
}}

After pressing enter upon completion of our query, we're brought to the <code>libc</code> definition for <code>printf</code>: 

{{Code|색인 검색 요청의 결과|<pre>
File: libc.info,  Node: Formatted Output Functions,  Next: Dynamic Output,  Prev: Other Output Conversions,  Up: Formatted Output
 
12.12.7 Formatted Output Functions
----------------------------------
 
This section describes how to call `printf' and related functions.
Prototypes for these functions are in the header file `stdio.h'.
Because these functions take a variable number of arguments, you _must_
declare prototypes for them before using them.  Of course, the easiest
way to make sure you have all the right prototypes is to just include
</pre>
}}

We've now successfully performed a search using the <code>libc</code> info page index. However, sometimes what we want is in the page itself. The next section will look at performing searches within the page.

=== 검색 명령을 사용한 검색 ===

Starting from the previous location at the <code>Formatted Output Functions</code> node, we'll look at searching for the <code>sprintf</code> variation of the <code>printf</code> function. To perform a search, press the {{Key|s}} key to bring up the search prompt, and then enter the query (sprintf in this case): 

{{Code|검색 요청 입력|<pre>
 -- Function: int wprintf (const wchar_t *TEMPLATE, ...)
     The `wprintf' function prints the optional arguments under the
     control of the wide template string TEMPLATE to the stream
     `stdout'.  It returns the number of wide characters printed, or a
--zz-Info: (libc.info.gz)Formatted Output Functions, 127 lines --Top-- Subfile: libc.info-3.gz--
Search for string []: sprintf
</pre>
}}

Hit <code>ENTER</code> and it will show the result of the query: 

{{Code|검색 요청 결과|<pre>
-- Function: int sprintf (char *S, const char *TEMPLATE, ...)
     This is like `printf', except that the output is stored in the
     character array S instead of written to a stream.  A null
     character is written to mark the end of the string.
 
     The `sprintf' function returns the number of characters stored in
     the array S, not including the terminating null character.
</pre>
}}

이제 우리가 원하는 함수를 찾았습니다.

== 결론 ==

This concludes the overview of using info to view info pages. As always comments are both welcome and appreciated.

=== 추가 프로그램 자원 ===

좀더 친숙한 그래픽 인터페이스를 통해 info 페이지를 탐색하려는 쉬운 방법을 갖추는데 다음 수단이 있습니다: 

* app-text/info2html - Convert info pages to a browse-able HTML format
* app-text/pinfo - <code>ncurses</code> based info viewer
* app-text/tkinfo - a <code>tcl/tk</code> based info browser
* app-vim/info - a <code>vim</code> based info browser

The <code>KDE</code> browser <code>Konqueror</code> also allows you to browse info pages through the <code>info:</code> URI.

== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:

* Chris White
