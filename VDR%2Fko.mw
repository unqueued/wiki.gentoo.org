<languages />


{{Metadata|abstract=이 안내서는 DVB와 VDR을 젠투 리눅스에서 준비하는 방법을 보여드립니다.}}

이 안내서에서는 DVB와 VDR을 젠투 리눅스에서 준비하는 방법을 보여드립니다.

== DVB 일반 정보 ==

=== DVB란 무엇인가요? ===

''DVB''는 ''Digital Video Broadcasting''의 약어입니다. DVB는 TV, 라디오, MHP, EPG, 텔레텍스트 같은 대화식 서비스의 디지털 데이터를 전송하는 방법입니다. HDTV에 대해 MPEG-2 또는 H-264로 데이터를 압축하여 같은 주파수에서도 다양한 채널로 데이터를 전송할 수 있습니다. 데이터를 좀 더 압축하여 더 많은 채널을 전송할 수 있지만, 화질이나 음질이 깨질 수 있습니다. 

DVB는 다양한 방법으로 전송할 수 있습니다. 마지막에 붙은 문자가 전송 방식을 구분하는데 DVB-''T''는 지상 전송 방식을 의미합니다. 이 말고도 몇가지 방식이 또 있습니다: 

* DVB-S 는 위성 전송 방식입니다
* DVB-C 는 물리 회선 전송 방식입니다
* DVB-H 모바일 장치 전송 (지상) 방식입니다
* DVB-IPI 는 IP 기반 네트워크 전송 방식입니다 예:인터넷
* DVB-RC(S/C/T) 는 데이터 서비스 전송 채널을 반환합니다. 예: 광대역 인터넷

=== 형식과 필요한 DVB 카드 ===

DVB 스트림을 받으려 제각각의 방식이 있기 전에 내용 출력 방식에 따라 카드를 구분합니다. {{Path|/dev/video}} 장치에서 스트림에 직접 접근하는 방식을 제공하는 디코더 구현체 카드가 있습니다. 이런 카드는 ''완벽한 기능을 갖춘 카드'' 입니다. 다른 카드는 자체 구현 인코더가 없으며 컴퓨터의 소프트웨어 디코더가 필요하고 이런 카드를 ''버짓 카드''라고 합니다. 이 경우 상당한 수준의 시스템 사양이 필요함을 암시합니다. 여러분의 컴퓨터에 붙은 CPU는 최소한 600MHz에 256MB 용량의 RAM이 있어야 합니다. 카드를 확인하는데는 [http://linuxtv.org/wiki/index.php/DVB_Card_Venders 이 목록]이 제격입니다. 

== 시스템 준비 ==

=== 커널 설정하기 ===

먼저 커널에서 DVB를 지원하고 보유하고 있는 DVB 장치를 지원하는지 확인해야 합니다. 2.6 커널부터는 필요한 드라이버가 있습니다. 커널 설정을 확인하고, 다음 옵션을 정적 드라이버 또는 모듈로 선택했는지 확인하십시오. 

{{Kernel|Required kernel options|<pre>
Input Device Support --->
* Event Interface
Device Drivers --->
Multimedia Devices --->
Digital Video Broadcasting Devices --->
    [*] DVB For Linux
     *  DVB Core Support
   M  [Your driver]
</pre>
}}

Additionally we have to select the proper driver for your hardware. To find out the right module for your card, we mark every driver as module. If you have a PCI card, install <code>pciutils</code> if you haven't already. If you want built-in drivers or you don't own a PCI card, skip this step and continue with [[#Checking the kernel output|Checking the kernel output]]. 

{{Emerge|pciutils}}

새 커널로 부팅한 다음 필요한 모듈을 보기 위해 <code>pcimodules</code>를 실행하겠습니다. 

{{RootCmd|pcimodules|output=<pre>
ohci-hcd
ehci-hcd
sis900
snd-emu10k1
b2c2-flexcop-pci
nvidia
nvidiafb
</pre>
}}

In this case we have to load the module <code>b2c2-flexcop-pci</code>. We add the name to {{Path|/etc/conf.d/modules}}. 

{{File|/etc/conf.d/modules||<pre>
modules="b2c2-flexcop-pci"
</pre>
}}

=== 커널 출력 확인 ===

It's recommended to mark every driver as module, so that you can add the required module dynamically, especially if you don't know the module name. If you already know the module name, select the driver as a built-in driver. Compile the kernel, install the modules and boot it. You can check if your kernel has successfully detected your card by using <code>dmesg</code>. 

테라텍 시너지 T2를 가지고 있다면 출력 내용은 다음과 같습니다:

{{RootCmd|dmesg {{!}} grep DVB|output=<pre>
DVB: registering new adaptor (TerraTec/qanu USB2.0 Highspeed DVB-T Receiver).
input: TerraTec/qanu USB2.0 Highspeed DVB-T Receiver remote control as /class/input/input2
</pre>
}}

== VDR 설치 ==

VDR을 설치하려면, 그냥 이머지 하시면 됩니다. 

{{Emerge|vdr}} 

== 원격 조종기 설치 ==

There are at least two ways to control VDR via an infrared remote control. If your TV card has an onboard IR receiver you can use <code>vdr-remote</code>. Otherwise, you most likely need to use LIRC. 

=== vdr-remote 설치 ===

emerge 로 먼저 플러그인을 설치하십시오: 

{{RootCmd|emerge vdr-remote
|eselect vdr-plugin enable remote}}

DVB 카드의 적외선 포트에 대한 remote 플러그인을 사용할때 기본 설정으로 보통 만족합니다. 자동으로 "dvb" 이름을 가진 입력 장치를 사용합니다. 좀 더 전문적으로 활용하려면 {{Path|/etc/conf.d/vdr.remote}} 파일을 살펴보십시오. 

=== 대안: LIRC 설치 ===

If your card can be remotely controlled (but you cannot or do not want to use <code>vdr-remote</code> ), you may wish to configure LIRC. LIRC interprets the pressed keys and returns a name for each one. A program that supports LIRC waits for key events and runs the action configured in the config file, mostly stored in the config directory of the executing program (e.g. <code>mplayer</code> loads the file {{Path|~/.mplayer/lircrc}} ). Before we install LIRC, you have to add <code>lirc</code> to your USE flags and add an additional entry to {{Path|/etc/portage/make.conf}}: <code>LIRC_DEVICES</code>. Use [http://www.lirc.org/html/table.html this list] to find the proper arguments for the option. 

{{File|/etc/portage/make.conf||<pre>
# (Replace "devinput" with the proper driver)
LIRC_DEVICES="devinput"
USE="lirc"</pre>}}

{{Emerge|lirc}}

At first we have to define each key code with a name. Most supported remote controls are configured already, take a look at the [http://lirc.sourceforge.net/remotes/ remote list]. Download the required file and save it as {{Path|/etc/lircd.conf}}. Now we have to find out where to access your remote control. Run the following command to get a list of the current input devices (make sure your device is running). 

{{RootCmd|cat /proc/bus/input/devices|output=<pre>
I: Bus=0000 Vendor=0000 Product=0000 Version=0000
N: Name="TerraTec/qanu USB2.0 Highspeed DVB-T Receiver remote control"
P: Phys=usb-0000:00:1d.7-1/input0
S: Sysfs=/class/input/input2
H: Handlers=kbd event1
B: EV=100003
B: KEY=108fc210 2043 0 0 0 0 8000 2080 1 9e1680 0 0 ffc
</pre>
}}

In this case we have the Terratec Cinergy T2 device plugged in, so we can access the device over {{Path|/dev/input/event1}}. Replace <code>event1</code> with the matching device in your output. 

<code>lircd</code> needs to know the device to use. Add the following line to {{Path|/etc/conf.d/lircd}}. Remember to replace<code>devinput</code> with the name of your driver and<code>event1</code> with the actual device. 

{{File|/etc/conf.d/lircd||<pre>
LIRCD_OPTS="-H devinput -d /dev/input/event1"
</pre>
}}

이제 <code>lircd</code>를 시작할 때입니다: 

{{RootCmd|/etc/init.d/lircd start}}

Now it should be possible to watch <code>lircd</code> capturing and decoding key presses. Just run the command <code>irw</code>. Stop it by pressing Ctrl+C when you have enough. 

{{RootCmd|irw|output=<pre>
0000000000001aa2 00 Exit Technisat_TTS35AI.conf
0000000000001a8d 00 Mute Technisat_TTS35AI.conf
0000000000000a97 00 OK Technisat_TTS35AI.conf
0000000000000a97 01 OK Technisat_TTS35AI.conf
0000000000000a92 00 Menu Technisat_TTS35AI.conf
</pre>
}}

다음, 기본 런레벨에 추가하여 부팅할 때 자동으로 시작하도록 하십시오. 

{{RootCmd|rc-update add lircd default}}

원격 조종기를 쓸 수 있으려면 VDR에 LIRC 지원을 활성화 해야 합니다. {{Path|/etc/conf.d/vdr}}에 다음 줄을 추가하십시오: 

{{File|/etc/conf.d/vdr||<pre>
IR_CTRL="lirc"
</pre>
}}

== 동영상 출력 방식 ==

You now need to decide on one (and only one!) of the following video output devices which show the picture and the overlayed On Screen Display (OSD). 

=== Hardware decoding: full-featured DVB cards ===

Users of these expensive cards need not install anything else, so you may continue with [[#Creating a Channel List|Creating a Channel List]]. 

=== Hardware decoding: DXR3/Hollywood+ cards ===

To use a DXR3 card for VDR output we need the <code>vdr-dxr3</code> plugin. 

{{Emerge|vdr-dxr3}}

{{File|/etc/conf.d/modules||<pre>
modules="em8300"
</pre>
}}

The em8300 module need some configuration that depends on the exact revision of that card. 

=== Hardware decoding: PVR350 cards ===

As PVR350 cards have an onboard MPEG-Decoder chip we want to make use of that. We need to install the <code>vdr-pvr350</code> plugin. If <code>ivtv-driver</code> is not yet installed emerge will automatically install it for you. To have the ivtv module loaded at boot we add it to {{Path|/etc/conf.d/modules}}: 

{{Emerge|vdr-pvr350}}

{{File|/etc/conf.d/modules||<pre>
modules="ivtv"
</pre>
}}

=== Software decoding: vdr-softdevice ===

To install it, we have to emerge <code>vdr-softdevice</code>. Don't forget to enable the plugin. 

{{Emerge|vdr-softdevice}}

{{RootCmd|eselect vdr-plugin enable softdevice}}

To select the proper video and audio output, edit {{Path|/etc/conf.d/vdr.softdevice}}. 

For now, we will only describe the shm ("shared memory") method. This is already enabled in the installed config file (Setting SOFTDEVICE_VIDEO_OUT). Later you need to start <code>ShmClient</code> to get a window showing the picture. 

{{Note|If you do not want to think about a separate keyboard layout for controlling VDR, there are remote configuration files available at Matthias Schwarzott's [http://dev.gentoo.org/~zzam/vdr_remote_conf/ devspace]. There are files for softdevice/shm and xineliboutput (more coming). You will need the relevant file to {{Path|/etc/vdr/remote.conf}} and run <code>chown vdr:vdr</code> on the file to get it working.}}

=== Software decoding: vdr-xineliboutput ===

Some people prefer to use <code>vdr-xineliboutput</code>, because it can also work remotely. We'll now teach you how to configure <code>vdr-xineliboutput</code> on your host and client. First, the host setup: 

{{Emerge|vdr-xineliboutput}}

{{RootCmd|eselect vdr-plugin enable xineliboutput}}

Adding command line options at this point is crucial for xineliboutput to work. For more options, see <code>vdr --help</code>. 

{{File|/etc/conf.d/vdr.xineliboutput||<pre>
_EXTRAOPTS="--local=none --remote=37890"
</pre>
}}

The next step is to edit {{Path|/etc/vdr/svdrphosts.conf}}. This file describes a number of host addresses that are allowed to connect to the SVDRP port of the video disk recorder running on the host system. 

{{File|/etc/vdr/svdrphosts.conf||<pre>
# (The proper syntax is: IP-Address[/Netmask])
127.0.0.1             (always accept localhost)
192.168.1.0/24        (any host on the local net)
#204.152.189.113      (a specific host)
#0.0.0.0/0            (any host on any net - USE THIS WITH CARE!)
</pre>
}}

If you only want to use <code>vdr-xineliboutput</code> to view the picture on the same computer as the one running VDR you can continue with creating the channel list. 

Otherwise, you now simply <code>emerge media-plugins/vdr-xineliboutput</code> on your client: 

{{Emerge|vdr-xineliboutput}}

Later (after having started VDR) you will use the command <code>vdr-sxfe xvdr://hostname</code> to connect to VDR and view its picture and OSD. 

{{Note|There is also a plugin which just simulates the existance of a real output device (<code>vdr-dummydevice</code>) for some fancy uses like record-only servers, but that is more advanced than a normal VDR setup.}}

== Creating a Channel List ==

To make VDR really useful you need to create an appropriate channel list. There is more than one way to get a working list of channels (besides downloading one). The channel list installed by default is for DVB-S reception on Astra on 19.2° E. 

=== Using dvbscan from linuxtv-dvb-apps ===

{{Emerge|linuxtv-dvb-apps}}

Find the correct frequency list for your region and type of reception. These files are stored under {{Path|/usr/share/dvb}}. For reception with DVB-T in Germany, Berlin you need to use {{Path|/usr/share/dvb/dvb-t/de-Berlin}}.

{{Cmd|dvbscan -o vdr /usr/share/dvb/dvb-t/de-Berlin > /etc/vdr/channels.conf}}

=== Using vdr-reelchannelscan ===

First, delete the contents of the existing channel list. 

{{RootCmd|rm /etc/vdr/channels.conf}}

{{Emerge|vdr-reelchannelscan}}

{{RootCmd|eselect vdr-plugin enable reelchannelscan}}

=== Channels for systems using vdr-analogtv ===

You'll probably want to configure your channels at this point. The VDR project provides you with some examples which can be found at {{Path|/usr/share/doc/vdr-analogtv-$version/examples/}}, as long as you've installed >= <code>media-plugins/vdr-analogtv-1.0.00-r1</code>. 

== Starting VDR ==

After having all basic software parts ready on the system you need to configure VDR with its OSD. 

If you use a hardware decoder for picture output you should switch on the connected TV now. If you use software output the client for this must be started after VDR. 

First, you should learn your key definitions; that is, connecting keys on your remote control to VDR's internal commands. 

{{Note|Just in case you need to edit the keyboard configuration, or (more likely) want to delete it to go back to learning the keys: VDR stores its key-definitions in {{Path|/etc/vdr/remote.conf}}.}}

We begin with starting VDR: 

{{RootCmd|/etc/init.d/vdr start|output=<pre>
* Preparing start of vdr:
*   config files ...                                        [ ok ]
*   Waiting for prerequisites (devices nodes etc.) ...      [ ok ]
* Starting vdr ...                                          [ ok ]
* First start of vdr: No check for running vdr possible
* until control device (remote/keyboard) keys are learnt!
</pre>
}}

{{Note|Users of software decoders should now start the client program that opens the window to show the TV picture and the OSD.}}

For users of vdr-softdevice:

{{RootCmd|ShmClient}}

For users of vdr-xineliboutput:

{{RootCmd|vdr-sxfe xvdr://hostname}}

The most useful keys for VDR are: 

* Cursor keys (Left/Right/Up/Down)
* Menu/Exit/Ok
* Colors (Red/Green/Yellow/Blue)
* Number keys (0-9)

{{Important|If you don't have many keys, make sure to assign these. (Some remotes have Play/Pause/etc. on the same keys as the colors, so use them for the colors).}}

Now that the basic installation is over, you need to configure VDR. Switch to your output screen and follow the on-screen instructions. VDR asks you to press various keys on your remote control to learn the correct key codes. If you don't own a remote control, you can use your keyboard. 

Now you can add the VDR initscript to the default runlevel to get it started every time your computer boots up. 

{{RootCmd|rc-update add vdr default}}

== Troubleshooting ==

{{Note|If you need any help, you can always ask someone in [http://www.gentoo.org/irc://irc.gentoo.org/gentoo-vdr #gentoo-vdr], or look around on our [http://forums.gentoo.org/ forums].}}

== Acknowledgements ==

We would like to thank the following authors and editors for their contributions to this guide:


* Norman Golisz
* Dimitry Bradt
* Matthias Schwarzott
* Joshua Saddler
