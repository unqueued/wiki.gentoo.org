<languages />


{{Metadata|abstract=이 안내서는 DVB와 VDR을 젠투 리눅스에서 준비하는 방법을 보여드립니다.}}

이 안내서에서는 DVB와 VDR을 젠투 리눅스에서 준비하는 방법을 보여드립니다.

== DVB 일반 정보 ==

=== DVB란 무엇인가요? ===

''DVB''는 ''Digital Video Broadcasting''의 약어입니다. DVB는 TV, 라디오, MHP, EPG, 텔레텍스트 같은 대화식 서비스의 디지털 데이터를 전송하는 방법입니다. HDTV에 대해 MPEG-2 또는 H-264로 데이터를 압축하여 같은 주파수에서도 다양한 채널로 데이터를 전송할 수 있습니다. 데이터를 좀 더 압축하여 더 많은 채널을 전송할 수 있지만, 화질이나 음질이 깨질 수 있습니다. 

DVB는 다양한 방법으로 전송할 수 있습니다. 마지막에 붙은 문자가 전송 방식을 구분하는데 DVB-''T''는 지상 전송 방식을 의미합니다. 이 말고도 몇가지 방식이 또 있습니다: 

* DVB-S 는 위성 전송 방식입니다
* DVB-C 는 물리 회선 전송 방식입니다
* DVB-H 모바일 장치 전송 (지상) 방식입니다
* DVB-IPI 는 IP 기반 네트워크 전송 방식입니다 예:인터넷
* DVB-RC(S/C/T) 는 데이터 서비스 전송 채널을 반환합니다. 예: 광대역 인터넷

=== 형식과 필요한 DVB 카드 ===

DVB 스트림을 받으려 제각각의 방식이 있기 전에 내용 출력 방식에 따라 카드를 구분합니다. {{Path|/dev/video}} 장치에서 스트림에 직접 접근하는 방식을 제공하는 디코더 구현체 카드가 있습니다. 이런 카드는 ''완벽한 기능을 갖춘 카드'' 입니다. 다른 카드는 자체 구현 인코더가 없으며 컴퓨터의 소프트웨어 디코더가 필요하고 이런 카드를 ''버짓 카드''라고 합니다. 이 경우 상당한 수준의 시스템 사양이 필요함을 암시합니다. 여러분의 컴퓨터에 붙은 CPU는 최소한 600MHz에 256MB 용량의 RAM이 있어야 합니다. 카드를 확인하는데는 [http://linuxtv.org/wiki/index.php/DVB_Card_Venders 이 목록]이 제격입니다. 

== 시스템 준비 ==

=== 커널 설정하기 ===

먼저 커널에서 DVB를 지원하고 보유하고 있는 DVB 장치를 지원하는지 확인해야 합니다. 2.6 커널부터는 필요한 드라이버가 있습니다. 커널 설정을 확인하고, 다음 옵션을 정적 드라이버 또는 모듈로 선택했는지 확인하십시오. 

{{KernelBox|title=필요한 커널 옵션|1=
Input Device Support --->
* Event Interface
Device Drivers --->
<M> Multimedia Support --->
  [*] Digital TV support
   M  [Your driver]
}}

추가적으로 하드웨어에 대산 적당한 드라이버를 선정해야 합니다. 카드에 대한 올바른 모듈을 찾는 방법은, 모든 드라이버를 모듈로 지정하는 것입니다. PCI 카드를 보유하고 있고, <code>pciutils</code>가 없다면 이 꾸러미를 설치하십시오. 내장 드라이버를 보유하고 있고 PCI 카드를 가지고 있지 않다면, 이 과정을 건너뛰고 [[#.EC.BB.A4.EB.84.90_.EC.B6.9C.EB.A0.A5_.ED.99.95.EC.9D.B8|커널 출력 확인]]으로 계속 진행하셔도 됩니다. 

{{Emerge|pciutils}}

새 커널로 부팅한 다음 필요한 모듈을 보기 위해 <code>pcimodules</code>를 실행하겠습니다. 

{{RootCmd|pcimodules|output=<pre>
ohci-hcd
ehci-hcd
sis900
snd-emu10k1
b2c2-flexcop-pci
nvidia
nvidiafb
</pre>
}}

이 경우 <code>b2c2-flexcop-pci</code> 모듈을 불러와야 합니다.  {{Path|/etc/conf.d/modules}} 파일에 이름을 추가하겠습니다. 

{{FileBox|filename=/etc/conf.d/modules|1=
modules="b2c2-flexcop-pci"
}}

=== 커널 출력 확인 ===

모든 드라이버를 모듈로 표시하는 방법을 추천합니다. 따라서 특히 모듈 이름을 모를 경우 필요한 모듈을 동적으로 추가할 수 있습니다. 모듈 이름을 이미 알고 있다면 내장 드라이버로 선택하십시오. 커널을 컴파일하고 모듈을 설치한  후 부팅하십시오. <code>dmesg</code> 명령을 사용하여 커널에서 카드를 성공적으로 감지했는지 확인하십시오. 

테라텍 시너지 T2를 가지고 있다면 출력 내용은 다음과 같습니다:

{{RootCmd|dmesg {{!}} grep DVB|output=<pre>
DVB: registering new adaptor (TerraTec/qanu USB2.0 Highspeed DVB-T Receiver).
input: TerraTec/qanu USB2.0 Highspeed DVB-T Receiver remote control as /class/input/input2
</pre>
}}

== VDR 설치 ==

VDR을 설치하려면, 그냥 이머지 하시면 됩니다. 

{{Emerge|vdr}} 

== 원격 조종기 설치 ==

적외선 원격 조종기를 통해 VDR을 조정하는 최소한 두가지의 방법이 있습니다. TV 카드에 보드 내장 적외선 수신 모듈이 붙어있다면, <code>vdr-remote</code>를 사용할 수 있습니다. 그렇지 않으면 LIRC를 사용해야 할 지도 모릅니다. 

=== vdr-remote 설치 ===

emerge 로 먼저 플러그인을 설치하십시오: 

{{RootCmd|emerge vdr-remote
|eselect vdr-plugin enable remote}}

DVB 카드의 적외선 포트에 대한 remote 플러그인을 사용할때 기본 설정으로 보통 만족합니다. 자동으로 "dvb" 이름을 가진 입력 장치를 사용합니다. 좀 더 전문적으로 활용하려면 {{Path|/etc/conf.d/vdr.remote}} 파일을 살펴보십시오. 

=== 대안: LIRC 설치 ===

카드를 원격으로 조종할 수 있다면(그러나 <code>vdr-remote</code>를 사용할 수 없거나 사용하기 싫다면), LIRC를 설정하려 할 것입니다. LIRC는 눌린 키를 해석하고 각각의 이름을 반환합니다. LIRC를 지원하는 프로그램은 키 동작을 기다렸다가 설정 파일에 설정한 동작을 실행하는데, 대부분 실행 프로그램의 설정 디렉터리에 저장되어 있습니다.(예: <code>mplayer</code>는 {{Path|~/.mplayer/lircrc}} 파일을 불러옵니다). LIRC를 설치하기 전에 <code>lirc</code>를 USE 플래그로 추가해야 하고 <code>LIRC_DEVICES</code> 추가 항목을 {{Path|/etc/portage/make.conf}}에 넣어야 합니다. 옵션에 대한 적당한 인자를 찾으려면 [http://www.lirc.org/html/table.html 이 목록]을 활용하십시오. 

{{File|/etc/portage/make.conf||<pre>
# (Replace "devinput" with the proper driver)
LIRC_DEVICES="devinput"
USE="lirc"</pre>}}

{{Emerge|lirc}}

먼저 각각의 키 코드를 이름으로 정의해야 합니다. 대부분 지원하는 원격 조종기는 이미 설정되어 있으므로 [http://lirc.sourceforge.net/remotes/ 원격 조종기 목록]을 살펴보십시오. 필요한 파일을 다운로드 하고 {{Path|/etc/lircd.conf}} 파일로 저장하십시오. 이제 원격 조종기 접근 위치를 찾아야 합니다. 다음 명령을 실행하여 현재 입력 장치 목록을 가져오십시오(장치가 동작중인지 확인하십시오). 

{{RootCmd|cat /proc/bus/input/devices|output=<pre>
I: Bus=0000 Vendor=0000 Product=0000 Version=0000
N: Name="TerraTec/qanu USB2.0 Highspeed DVB-T Receiver remote control"
P: Phys=usb-0000:00:1d.7-1/input0
S: Sysfs=/class/input/input2
H: Handlers=kbd event1
B: EV=100003
B: KEY=108fc210 2043 0 0 0 0 8000 2080 1 9e1680 0 0 ffc
</pre>
}}

이 경우 테라텍 시너지 T2 장치를 연결했으므로 {{Path|/dev/input/event1}}을 통해 장치에 접근할 수 있습니다. 출력에 일치하는 장치로 <code>event1</code>를 바꾸십시오. 

<code>lircd</code>에서 사용하려는 장치를 알아야 합니다. 다음 줄을 {{Path|/etc/conf.d/lircd}}에 추가하십시오. <code>devinput</code>를 드라이버 이름으로 <code>event1</code>을 실제 장치로 바꿔야 함을 기억하십시오. 

{{File|/etc/conf.d/lircd||<pre>
LIRCD_OPTS="-H devinput -d /dev/input/event1"
</pre>
}}

이제 <code>lircd</code>를 시작할 때입니다: 

{{RootCmd|/etc/init.d/lircd start}}

Now it should be possible to watch <code>lircd</code> capturing and decoding key presses. Just run the command <code>irw</code>. Stop it by pressing Ctrl+C when you have enough. 

{{RootCmd|irw|output=<pre>
0000000000001aa2 00 Exit Technisat_TTS35AI.conf
0000000000001a8d 00 Mute Technisat_TTS35AI.conf
0000000000000a97 00 OK Technisat_TTS35AI.conf
0000000000000a97 01 OK Technisat_TTS35AI.conf
0000000000000a92 00 Menu Technisat_TTS35AI.conf
</pre>
}}

다음, 기본 런레벨에 추가하여 부팅할 때 자동으로 시작하도록 하십시오. 

{{RootCmd|rc-update add lircd default}}

원격 조종기를 쓸 수 있으려면 VDR에 LIRC 지원을 활성화 해야 합니다. {{Path|/etc/conf.d/vdr}}에 다음 줄을 추가하십시오: 

{{File|/etc/conf.d/vdr||<pre>
IR_CTRL="lirc"
</pre>
}}

== 동영상 출력 방식 ==

You now need to decide on one (and only one!) of the following video output devices which show the picture and the overlayed On Screen Display (OSD). 

=== 하드웨어 디코드: 완전한 기능을 갖춘 DVB 카드 ===

이런 고가의 카드의 사용자라면 다른 요소를 설치할 필요가 없으므로 [[#.EC.B1.84.EB.84.90_.EB.AA.A9.EB.A1.9D_.EB.A7.8C.EB.93.A4.EA.B8.B0|채널 목록 만들기]]로 가셔도 됩니다. 

=== 하드웨어 디코드: DXR3/Hollywood+ cards ===

VDR 출력에 대해 DXR3 카드를 활용하려면 <code>vdr-dxr3</code> 플러그인이 필요합니다. 

{{Emerge|vdr-dxr3}}

{{File|/etc/conf.d/modules||<pre>
modules="em8300"
</pre>
}}

em8300 모듈은 카드의 정확한 리비전에 따라 추가 설정이 필요합니다. 

=== 하드웨어 디코드: PVR350 카드 ===

PVR350 카드 같은 곳에서는 우리가 사용하려는 MPEG-디코더 칩이 있습니다. <code>vdr-pvr350</code> 플러그인을 설치해야 합니다. <code>ivtv-driver</code> 꾸러미가 아직 설치되어 있지 않다면 이머지에서 자동으로 설치합니다. ivtv 모듈을 부팅할때 불러오도록 {{Path|/etc/conf.d/modules}} 에 추가하겠습니다: 

{{Emerge|vdr-pvr350}}

{{File|/etc/conf.d/modules||<pre>
modules="ivtv"
</pre>
}}

=== 소프트웨어 디코드: vdr-softdevice ===

이걸 설치하려면, <code>vdr-softdevice</code>를 이머지해야 합니다. 플러그인 활성화를 잊지 마십시오. 

{{Emerge|vdr-softdevice}}

{{RootCmd|eselect vdr-plugin enable softdevice}}

적당한 영상 음성 출력을 선택하려면, {{Path|/etc/conf.d/vdr.softdevice}}를 편집하십시오. 

For now, we will only describe the shm ("shared memory") method. This is already enabled in the installed config file (Setting SOFTDEVICE_VIDEO_OUT). Later you need to start <code>ShmClient</code> to get a window showing the picture. 

{{Note|VDR을 제어할 다른 키보드 배치를 생각하지 않는다면, Matthias Schwarzott의 [http://dev.gentoo.org/~zzam/vdr_remote_conf/ devspace]에 있는 리모콘 설정 파일을 활용해보십시오. 소프트장치/shm과 xineliboutput(더 많은 대상 추가 예정)에 대한 파일이 있습니다. {{Path|/etc/vdr/remote.conf}}와 관련된 파일이 필요하며, 설정 파일을 동작하게 하려면 <code>chown vdr:vdr</code>을 실행하십시오.}}

=== 소프트웨어 디코드: vdr-xineliboutput ===

Some people prefer to use <code>vdr-xineliboutput</code>, because it can also work remotely. We'll now teach you how to configure <code>vdr-xineliboutput</code> on your host and client. First, the host setup: 

{{Emerge|vdr-xineliboutput}}

{{RootCmd|eselect vdr-plugin enable xineliboutput}}

이 과정에서 명령행 옵션을 추가하는 것은 xineliboutput을 동작하게 하는 중요한 행위입니다. 더 많은 옵션은 <code>vdr --help</code> 출력 내용을 보십시오. 

{{File|/etc/conf.d/vdr.xineliboutput||<pre>
_EXTRAOPTS="--local=none --remote=37890"
</pre>
}}

다음 단계에서는 {{Path|/etc/vdr/svdrphosts.conf}}를 편집합니다. 이 파일에는 호스트 시스템에서 실행중인 동영상 디스크 레코더의 SVDRP 포트로 어떤 호스트 주소를 연결할지에 대한 내용이 있습니다. 

{{File|/etc/vdr/svdrphosts.conf||<pre>
# (The proper syntax is: IP-Address[/Netmask])
127.0.0.1             (always accept localhost)
192.168.1.0/24        (any host on the local net)
#204.152.189.113      (a specific host)
#0.0.0.0/0            (any host on any net - USE THIS WITH CARE!)
</pre>
}}

If you only want to use <code>vdr-xineliboutput</code> to view the picture on the same computer as the one running VDR you can continue with creating the channel list. 

Otherwise, you now simply <code>emerge media-plugins/vdr-xineliboutput</code> on your client: 

{{Emerge|vdr-xineliboutput}}

Later (after having started VDR) you will use the command <code>vdr-sxfe xvdr://hostname</code> to connect to VDR and view its picture and OSD. 

{{Note|기록 전용 서버처럼 사용하려는 목적으로 실제 출력 장치 (<code>vdr-dummydevice</code>) 확장을 시험하는 플러그인도 있지만 일반 VDR 설정보다 좀 더 앞선면이 있습니다.}}

== 채널 목록 만들기 ==

VDR을 제대로 쓸모있게 만들려면 적당한 채널 목록을 만들어야 합니다. 동작하는 채널 목록을 가져오는 방법은 한 가지 이상이 있습니다(채널을 다운로드 하는 방법 이전에). 19.2° E에 있는 아스트라 DVB-S 리셉션에 대한 채널 목록이 기본으로 설치되어 있습니다. 

=== linuxtv-dvb-apps의 dvbscan 활용 ===

{{Emerge|linuxtv-dvb-apps}}

여러분의 거주지역에 대한 올바른 주파수 목록과 리셉션 형식을 찾으십시오. {{Path|/usr/share/dvb}}에 저장되어 있습니다.  독일의 베를린에서 DVB-T 리셉션 방식을 찾으려면 {{Path|/usr/share/dvb/dvb-t/de-Berlin}} 파일을 사용해야 합니다.

{{Cmd|dvbscan -o vdr /usr/share/dvb/dvb-t/de-Berlin > /etc/vdr/channels.conf}}

=== vdr-reelchannelscan 활용하기 ===

먼저 기존의 채널 목록 내용을 삭제하십시오. 

{{RootCmd|rm /etc/vdr/channels.conf}}

{{Emerge|vdr-reelchannelscan}}

{{RootCmd|eselect vdr-plugin enable reelchannelscan}}

=== vdr-analogtv를 활용하여 시스템 채널 찾기 ===

이 시점에서 채널을 설정하려 할 것입니다. >= <code>media-plugins/vdr-analogtv-1.0.00-r1</code>를 설치했다면, VDR 프로젝트에서는 {{Path|/usr/share/doc/vdr-analogtv-$version/examples/}}에 있는 몇가지 예제를 제공합니다. 

== VDR 시작 ==

시스템의 모든 기본 소프트웨어 부분에 대해 준비가 끝나면 OSD와 VDR을 설정해야 합니다. 

화면 출력에 하드웨어 디코더를 사용한다면 연결한 TV로 전환해야 합니다. 소프트웨어 출력을 활용한다면 VDR을 시작한 다음에 전용 클라이언트를 시작해야 합니다. 

먼저, 키 정의를 익혀두십시오. VDR의 내부 명령에 원격 조종기의 키를 연결하라는 의미입니다. 

{{Note|이 경우 키보드 설정을 편집하거나, (거의 아마도) 키 학습으로 돌아가서 설정을 삭제해야 할지도 모릅니다. VDR은 {{Path|/etc/vdr/remote.conf}}에서 키 정의를 저장힙니다.}}

VDR을 시작할 차례입니다: 

{{RootCmd|/etc/init.d/vdr start|output=<pre>
* Preparing start of vdr:
*   config files ...                                        [ ok ]
*   Waiting for prerequisites (devices nodes etc.) ...      [ ok ]
* Starting vdr ...                                          [ ok ]
* First start of vdr: No check for running vdr possible
* until control device (remote/keyboard) keys are learnt!
</pre>
}}

{{Note|소프트웨어 디코더 사용자는 TV 화면과 OSD를 표시하려 창을 따로 여는 클라이언트 프로그램을 시작해야합니다.}}

vdr-softdevice 사용자라면:

{{RootCmd|ShmClient}}

vdr-xineliboutput 사용자에 대해:

{{RootCmd|vdr-sxfe xvdr://hostname}}

VDR에서 쓸모있는 대부분의 키는 다음과 같습니다: 

* 커서 키(좌/우/상/하)
* 메뉴/나가기/확인
* 색상(적/녹/황/청)
* 숫자 키(0-9)

{{Important|보유한 키가 많이 없다면, 해당 키 할당을 확인하십시오(어떤 리모콘은 재생/일시정지 등을 지니고 있습니다. 색상이 동일하다면, 해당 색상의 키를 사용하십시오.)}}

이제 기본 설치 과정이 끝났고, VDR을 설정할 차례입니다. 출력 화면을 바꾸고 다음의 화면상 절차를 따르십시오. VDR에서는 원격 조종기의 올바른 키 코드 값을 알아내기 위해 몇가지 키를 누르라 요구할 것입니다. 원격 조종기가 없다면 키보드를 사용할 수 있습니다. 

이제 VDR 초기화 스크립트를 기본 런레벨에 추가하고 컴퓨터를 부팅할때마다 자동으로 시작하도록 하십시오. 

{{RootCmd|rc-update add vdr default}}

== 문제 해결 ==

{{Note|도움이 필요하다면 [http://www.gentoo.org/irc://irc.gentoo.org/gentoo-vdr #gentoo-vdr] 또는 [http://forums.gentoo.org/ 포럼]<sup style="color:#ff0077">en</sup>에서 언제든 아무에게나 질문할 수 있습니다.}}

{{Migrated|originalauthors=Norman Golisz, Dimitry Bradt, Matthias Schwarzott, Joshua Saddler}}
