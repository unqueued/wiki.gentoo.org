<languages />

{{Metadata|abstract=La orden sudo ofrece una forma simple y segura de configurar el escalado de privilegios, esto es, permitir a los usuarios lanzar ciertas órdenes (o todas) como el usuario root o cualquier otro, y con la posibilidad de hacerlo sin introducir una contraseña.}}

{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://www.sudo.ws/|header=true}}
|{{InfoBox wikipedia|sudo}}
|{{InfoBox gitweb|http://www.sudo.ws/repos/sudo|raw=true}}
}}

La orden {{c|sudo}} ofrece una forma sencilla y segura de configurar el escalado de privilegios, esto es, permitir a los usuarios normales correr algunas (o todas) las órdenes que se deseen como root o como otro usuario, posiblemente sin tener que suministrar una contraseña.

Cuando quiera que varias personas realicen ciertas tareas administrativas en su sistema sin que tenga que concederles un acceso total como root, el uso de sudo es la mejor opción. Con sudo puede controlar quién puede hacer según qué. Esta guía le ofrece una pequeña introducción a esta maravillosa herramienta.

__TOC__

Este artículo pretende ser una introducción rápida. El paquete {{Package|app-admin/sudo}} es mucho más potente que lo que aquí se describe. Tiene características especiales para la edición de ficheros con un usuario distinto ({{c|sudoedit}}), se puede lanzar desde un guión (por lo que puede estar en segundo plano, leer la contraseña desde la entrada estándar en lugar del teclado, ...), etc. 

Por favor, lea las páginas del manual de {{c|sudo}} y de {{c|sudoers}} para obtener más información.

== Instalación ==

=== Ajustes USE ===

{{USEflag|package=app-admin/sudo}}

=== Emerge === 

{{Emerge|app-admin/sudo}}

== Configuración == 

=== Registrar la actividad === 

One additional advantage of {{c|sudo}} is that it can log any attempt (successful or not) to run an application. This is very useful if you want to track who made that one fatal mistake that took you 10 hours to fix :) 

=== Conceder permisos === 

The {{Package|app-admin/sudo}} package allows the system administrator to grant permission to other users to execute one or more applications they would normally have no right to. Unlike using the <code>setuid</code> bit on these applications {{c|sudo}} gives a more fine-grained control on ''who'' can execute a certain command and ''when''. 

With {{c|sudo}} you can make a clear list ''who'' can execute a certain application. If you would set the setuid bit, any user would be able to run this application (or any user of a certain group, depending on the permissions used). You can (and probably even should) require the user to provide a password when he wants to execute the application. 

The {{c|sudo}} configuration is managed by the {{Path|/etc/sudoers}} file. This file should never be edited through {{c|nano /etc/sudoers}} or {{c|vim /etc/sudoers}} or any other editor you might like. When you want to alter this file, you should use {{c|visudo}}. 

Esta herramienta se asegura que no haya dos administradores del sistema editando el fichero al mismo tiempo, conserva sus permisos y realiza una comprobación de la sintaxis para cerciorarse de que no se cometan errores fatales en el fichero. 

=== Sintaxis básica ===

The most difficult part of {{c|sudo}} is the {{Path|/etc/sudoers}} syntax. The basic syntax is like so: 

{{CodeBox|title=Sintaxis básica de /etc/sudoers|1=
usuario nombre_de_equipo = órdenes
}}

This syntax tells {{c|sudo}} that the user, identified by <code>user</code> and logged in on the system <code>host</code> can execute any of the commands listed in <code>commands</code> as the root user. A more real-life example might make this more clear: allow the user {{c|larry}} to execute {{c|emerge}} if he is logged in on localhost: 

{{CodeBox|title=Ejemplo real del fichero /etc/sudoers|1=
larry localhost = /usr/bin/emerge
}}

{{Note|The hostname must match with what the {{c|hostname}} command returns.}}

{{Warning|Do not allow a user to run an application that can allow people to elevate privileges. For instance, allowing users to execute {{c|emerge}} as root can indeed grant them full root access to the system because {{c|emerge}} can be manipulated to change the live file system to the user's advantage. If you do not trust your {{c|sudo}} users, don't grant them any rights.}}

The user name can also be substituted with a group name - in this case you should start the group name with a <code>%</code> sign. For instance, to allow any one in the {{c|wheel}} group to execute {{c|emerge}}: 

{{CodeBox|title=Permitir la ejecución de emerge a los miembros del grupo wheel|1=
%wheel localhost = /usr/bin/emerge
}}

You can extend the line to allow for several commands (instead of making a single entry for each command). For instance, to allow the same user to not only run {{c|emerge}} but also {{c|ebuild}} and {{c|emerge-webrsync}} as root: 

{{CodeBox|title=Multiples órdenes|1=
larry localhost = /usr/bin/emerge, /usr/bin/ebuild, /usr/sbin/emerge-webrsync
}}

You can also specify a precise command and not only the tool itself. This is useful to restrict the use of a certain tool to a specified set of command options. The {{c|sudo}} tool allows shell-style wildcards (AKA meta or glob characters) to be used in path names as well as command-line arguments in the sudoers file. Note that these are ''not'' regular expressions. 

Pongamos todo esto a prueba: 

{{Cmd|sudo emerge -uDN world|output=<pre>
We trust you have received the usual lecture from the local System Administrator. It usually boils down to these three things:
(Confiamos en que haya recibido las indicaciones normales del Administrador del Sistema Local. Normalmente consisten en estas tres cosas;)

    #1&#41; Respect the privacy of others (Respete la privacidad del resto).
    #2&#41; Think before you type (Piense antes de escribir).
    #3&#41; With great power comes great responsibility (Grandes poderes conllevan grandes responsabilidades).

Contraseña: ## (Introduzca la contraseña del usuario ¡No la de root!)
</pre>
}}

The password that {{c|sudo}} requires is the user's own password. This is to make sure that no terminal that you accidentally left open to others is abused for malicious purposes. 

You should know that {{c|sudo}} does not alter the <code>${PATH}</code> variable: any command you place after {{c|sudo}} is treated from ''your'' environment. If you want the user to run a tool in for instance {{Path|/sbin}} he should provide the full path to {{c|sudo}}, like so: 

{{Cmd|sudo /usr/sbin/emerge-webrsync}}

=== Sintaxis básica con LDAP === 

The <code>ldap</code> and <code>pam</code> USE flags are needed for the LDAP support.

Cuando se utiliza sudo con LDAP, sudo también leerá la configuración del servidor LDAP, por lo que necesitará editar estos dos ficheros.

{{FileBox|filename=/etc/ldap.conf.sudo|title=Por favor, haga chmod 400 cuando haya terminado|1=
# Lea ldap.conf(5) y README.LDAP para más detalles
# Este fichero debería poder leerlo únicamente root

# Directivas ofrecidas: host, port, ssl, ldap_version
# uri, binddn, bindpw, sudoers_base, sudoers_debug
# tls_{checkpeer,cacertfile,cacertdir,randfile,ciphers,cert,key}

host ldap.example.com
port 389

base dc=example,dc=com

uri ldap://ldap.example.com/
#uri ldapi://%2fvar%2frun%2fopenldap%2fslapd.sock 

ldap_version 3
#ssl start_tls

sudoers_base ou=SUDOers,dc=example,dc=com
#sudoers_debug 2

bind_policy soft
}}

{{FileBox|filename=/etc/nsswitch.conf|title=Por favor, añada la línea sudoers|1=
sudoers: ldap files
}}

También necesitará añadir la siguiente entrada LDAP para sudo.

{{Note|Debido al diseño, la rama Sudoers está encima del árblo por razones de seguridad. Puede tener distintos derechos de acceso desde ldap para leer o escribir en esta rama}}

{{CodeBox|title=Ldap Entry for Sudo|lang=ldif|1=
version: 1
DN: ou=SUDOers,dc=example,dc=com
objectClass: organizationalUnit
objectClass: top
objectClass: domainRelatedObject
associatedDomain: example.com
ou: SUDOers

DN: cn=defaults,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: defaults
description: Las opciones por defecto de sudo van aquí
sudoOption: env_reset

DN: cn=root,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: root
sudoCommand: ALL
sudoHost: ALL
sudoUser: root

DN: cn=%wheel,ou=SUDOers,dc=example,dc=com
objectClass: top
objectClass: sudoRole
cn: %wheel
sudoCommand: ALL
sudoHost: ALL
sudoOption: !authenticate
sudoUser: %wheel
}}

{{CodeBox|title=Ldap Entry for wheel Group|lang=ldif|1=
version: 1
DN: cn=wheel,ou=Group,dc=example,dc=com
objectClass: top
objectClass: posixGroup
cn: wheel
description: Grupo Wheel
gidNumber: 10
memberUid: useradmin1
memberUid: root
}}

Las configuraciones del sudoer en LDAP son similares a los ficheros con algunas diferencias. Por favor, lea más sobre sudo con LDAP en el enlace de abajo [http://www.sudo.ws/sudo/sudoers.ldap.man.html página del manual de Sudoers LDAP]

<references />

=== Utilizar alias ===

En entornos más extensos que tengan que dar acceso a todos los usuarios una y otra vez (o equipos u órdenes) las tareas pueden ser más costosas de realizar. Para facilitar la administración de {{Path|/etc/sudoers}}, puede definir "alias". El formato para declarar los alias es muy fácil: 

{{CodeBox|title=Declararar alias en /etc/sudoers|1=
Host_Alias hostalias = equipo1, equipo2, ...
User_Alias useralias = usario1, usuario2, ...
Cmnd_Alias cmndalias = orden1, orden2, ...
}}

Un alias que siempre funciona, en cualquier posición, es <code>ALL</code> (para distinguir correctamente entre lo que son y no son alias, se recomienda utilizar mayúsculas para los alias). Como indudablemente habrá deducido, el alias <code>ALL</code> sirve para todas los valores posibles. 

A sample use of the <code>ALL</code> alias to allow ''any'' user to execute the {{c|shutdown}} command if he is logged on locally is: 

{{CodeBox|title=Permitir que cualquier usuario puede ejecutar shutdown|lang=bash|1=
ALL localhost = /sbin/shutdown
}}

Another example is to allow the user {{c|larry}} to execute the {{c|emerge}} command as root, regardless of where he is logged in from: 

{{CodeBox|title=Permitir al usuario lanzar una aplicación independientemente de su localización|1=
larry ALL = /usr/bin/emerge
}}

More interesting is to define a set of users who can run software administrative applications (such as {{c|emerge}} and {{c|ebuild}}) on the system and a group of administrators who can change the password of any user, except root! 

{{CodeBox|title=Utilizar un alias para usuarios y órdenes|1=
User_Alias SOFTWAREMAINTAINERS = larry, john, danny
User_Alias PASSWORDMAINTAINERS = larry, sysop
Cmnd_Alias SOFTWARECOMMANDS = /usr/bin/emerge, /usr/bin/ebuild
Cmnd_Alias PASSWORDCOMMANDS = /usr/bin/passwd [a-zA-Z0-9_-]*, !/usr/bin/passwd root

SOFTWAREMAINTAINERS localhost = SOFTWARECOMMANDS
PASSWORDMAINTAINERS localhost = PASSWORDCOMMANDS
}}

=== Ejecución como no root ===

It is also possible to have a user run an application as a different, non-root user. This can be very interesting if you run applications as a different user (for instance {{c|apache}} for the web server) and want to allow certain users to perform administrative steps as that user (like killing zombie processes). 

Dentro de {{Path|/etc/sudoers}} se lista el o los usuarios entre <code>&#40;</code> y <code>&#41;</code> antes del listado de órdenes: 

{{CodeBox|title=Sintaxis de ejecución para usuarios no root|1=
usuarios  equipos = (lanzar-cómo) órdenes
}}

For instance, to allow {{c|larry}} to run the {{c|kill}} tool as the {{c|apache}} or {{c|gorg}} user: 

{{CodeBox|title=Ejemplo de ejecución como usuario no root|1=
Cmnd_Alias KILL = /bin/kill, /usr/bin/pkill
  
larry   ALL = (apache, gorg) KILL
}}

With this set, the user can run {{c|sudo -u}} to select the user he wants to run the application as: 

{{Cmd|sudo -u apache pkill apache}}

Mediante la directiva <code>Runas_Alias</code> se puede establecer un alias para el usuario con el que se va a lanzar una aplicación. Su uso es idéntico al de otras directivas <code>_Alias</code> mostradas anteriormente. 

=== Contraseñas y configuraciones por defecto ===

By default, {{c|sudo}} asks the user to identify himself using his own password. Once a password is entered, {{c|sudo}} remembers it for 5 minutes, allowing the user to focus on his tasks and not repeatedly re-entering his password. 

Este comportamiento, por supuesto, se puede cambiar: se puede establecer la directiva <code>Defaults:</code> en  {{Path|/etc/sudoers}} para cambiar el comportamiento por defecto para un usuario. 

Por ejemplo, para cambiar los cinco minutos preestablecidos a cero (no recordarla nunca): 

{{CodeBox|title=|1=Cambiar el valor para el tiempo de expiración|1=
Defaults:larry  timestamp_timeout=0
}}

Definiendo la opción a <code>-1</code> permite recordar la contraseña indefinidamente (hasta que se reinicie el sistema). 

A different setting would be to require the password of the user that the command should be run as and not the users' personal password. This is accomplished using <code>runaspw</code>. In the following example we also set the number of retries (how many times the user can re-enter a password before {{c|sudo}} fails) to <code>2</code> instead of the default 3: 

{{CodeBox|title=Solicitar la contraseña de root en lugar de la del usuario|1=
Defaults:john   runaspw, passwd_tries=2
}}

Otra característica interesante es mantener definida la variable <code>DISPLAY</code> de modo que se puedan lanzar herramientas gráficas: 

{{CodeBox|title=Mantener viva la variable DISPLAY|1=
Defaults:john env_keep=DISPLAY
}}

You can change dozens of default settings using the <code>Defaults:</code> directive. Fire up the {{c|sudoers}} manual page and search for <code>Defaults</code>. 

Si, no obstante, desea permitir a cierto usuario lanzar un conjunto de órdenes sin proporcionar ningún tipo de contraseña, necesita entonces lanzar las órdenes con <code>NOPASSWD:</code>, así: 

{{CodeBox|title=Permitir lanzar emerge como root sin solicitar la contraseña|1=
larry     localhost = NOPASSWD: /usr/bin/emerge
}}

=== Completado de órdenes en bash ===

Los usuarios que quieran tener completado de órdenes en bash con sudo, tendrán que lanzar esto una sola vez.

{{Cmd|sudo echo "complete -cf sudo" >> $HOME/.bashrc}}

=== Completado de órdenes en zshell ===

Los usuarios que deseen completado de órdenes en zsh para sudo pueden definir lo siguiente en {{Path|.zprofile}} y en {{Path|.zshrc}} respectivamente.

{{FileBox|filename=.zprofile|title=Añadir completado de órdenes en zshell|lang=bash|1=
if [[ $EUID != 0 ]]; then
    typeset -xT SUDO_PATH sudo_path
    typeset -U sudo_path 
    sudo_path=({,/usr/local,/usr}/sbin(N-/))
    alias sudo="sudo env PATH=\"SUDO_PATH:$PATH\""
fi
}}

{{FileBox|filename=.zshrc|title=Añadir completado de órdenes en zshell|lang=bash|1=
zstyle ':completion:*:sudo:*' environ PATH="$SUDO_PATH:$PATH"
}}

Con el cambio de arriba, todas las órdenes en las localizaciones {{Path|/sbin}}, {{Path|/usr/sbin}} y {{Path|/usr/local/sbin}} estarán disponibles al intérprete de órdenes para completado cuando a la orden se le anteponga 'sudo'.

== Utilización ==

=== Listar privilegios ===

To inform yourself what your capabilities are, run {{c|sudo -l}} : 

{{Cmd|sudo -l|output=<pre>
El usuario larry puede lanzar las siguiente órdenes en este equipo:
  (root) /usr/libexec/xfsm-shutdown-helper
  (root) /usr/bin/emerge
  (root) /usr/bin/passwd [a-zA-Z0-9_-]*
  (root) !/usr/bin/passwd root
  (apache) /usr/bin/pkill
  (apache) /bin/kill
</pre>
}}

Si tiene cualquier orden en {{Path|/etc/sudoers}} que no le pida que introduzca una contraseña, tampoco se le pedirá una contraseña para listar las
entradas. De no ser así, se le podría pedir su contraseña si no se recuerda. 

=== Prolongar la caducidad de la contraseña ===

By default, if a user has entered their password to authenticate their self to {{c|sudo}}, it is remembered for 5 minutes. If the user wants to prolong this period, he can run {{c|sudo -v}} to reset the time stamp so that it will take another 5 minutes before {{c|sudo}} asks for the password again. 

{{Cmd|sudo -v}}

The inverse is to kill the time stamp using {{c|sudo -k}}. 


[[Category:Software]]
