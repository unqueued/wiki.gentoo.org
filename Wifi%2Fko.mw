<languages />

{{InfoBox stack
|{{InfoBox homepage|http://wireless.kernel.org/|header=true}}
|{{InfoBox wikipedia|Wi-Fi}}
}}

This article describes the setup of a wifi (wireless) network device.

== WiFi 설치 과정 ==

If a wifi connection is needed while installing Gentoo, note that the Gentoo minimal install CD has a limited number of drivers available, and provides only {{c|wpa_cli}} (and not {{c|wpa_gui}}) for configuring for WPA/WPA2/Enterprise connections.

If the minimal install CD does not contain the required drivers or the graphical frontend to {{c|[[wpa_supplicant]]}} is preferred, choose a different live CD such as the [http://sysresccd.org System Rescue CD]. Be aware that some [[Installation_alternatives#Installation_from_non-Gentoo_LiveCDs|special steps]] may be required when using a non-Gentoo live CD.

== 하드웨어 감지 ==

First detect the wifi controllers. {{c|[[Hardware detection|lspci]]}} or {{c|[[Hardware detection|lsusb]]}} are command-line tools that can be used for this task. 

If a Linux (LiveCD/USB) is booted that makes a wifi connection:

{{RootCmd|lspci -k}}

The driver will be identified on one of the lines starting with <code>Kernel driver in use:</code>.

If the booted system does not make a wifi connection, then obtain a full list of hardware identifiers from the current system. This list can be used to identify the proper driver later:

{{RootCmd|lspci -n}}

명령에서 나타내는 PCIID 목록을 복사한 후 http://kmuto.jp/debian/hcl/ 에 붙여넣으십시오.

USB 장치에 대해 동일한 접근 방식을 취할 수 있습니다. 우선 시스템에서 발견한 USB 장치 목록을 확인하십시오:

{{Cmd|lsusb}}

이 명령은 PCI ID, 제조사, 제조, 모델, 시스템에 붙은 모든 USB 장치 칩셋을 나타냅니다. 여기서 칩셋 정보는 상당히 쓸만한 정보가 될 수 있습니다. ''linuxwireless.org <chipset>''으로 구글에서 검색하면 보통 USB NIC 드라이버 및 펌웨어 이름을 간단하게 금방 찾을 수 있습니다.

대신, {{c|lshw}} 명령을 활용하여 필요한 정보를 확인할 수 있습니다:

{{RootCmd|lshw {{!}} grep -i driver}}

이 명령은 PCI 또는 USB 기반에 상관 없이 모든 드라이버 목록을 보여줍니다.

== Kernel ==

드라이버를 확인했으면, 리눅스 커널을 설정할 차례죠.

=== IEEE 802.11 ===

{{:Wifi/IEEE 802.11/ko}}

=== WEXT ===

The "cfg80211 [https://wireless.wiki.kernel.org/en/developers/documentation/wireless-extensions wireless extensions] compatibility" option aka WEXT will support old {{c|[[Handbook:Parts/Networking/Wireless#Wireless_tools|wireless-tools]]}} and {{c|[https://wireless.wiki.kernel.org/en/users/documentation/iw/replace-iwconfig iwconfig]}}.

{{KernelBox|1=
[*] Networking support  --->
    [*] Wireless  --->
        [*]     cfg80211 wireless extensions compatibility
}}

=== 장치 드라이버 ===

다음, 앞서 드라이버와 하드웨어를 발견한대로 각각의 적절한 커널 옵션을 활성화해야합니다.  [http://forums.gentoo.org/viewtopic-p-7640140.html#7640140 추천 방식]은 [[Kernel_Modules#Compile-in-kernel_modules_vs_Loadable_kernel_modules_.28LKMs.29|모듈 방식의 드라이버]]를 빌드하는 방법입니다. 또한 무선 네트워크 카드에서 WPA 또는 WPA2 암호화를 활용한다면 커널에서 AES 암호화를 지원하도록 활성화했는지 확인하십시오.

{{KernelBox|<pre>
    Device Drivers  --->
    [*] Network device support  --->
        [*] Wireless LAN  --->
 
            Select the driver for your Wifi network device, e.g.:
            <M> Broadcom 43xx wireless support (mac80211 stack) (b43)
            [M]    Support for 802.11n (N-PHY) devices
            [M]    Support for low-power (LP-PHY) devices
            [M]    Support for HT-PHY (high throughput) devices
            <M> Intel Wireless WiFi Next Gen AGN - Wireless-N/Advanced-N/Ultimate-N (iwlwifi)
            <M>    Intel Wireless WiFi DVM Firmware support                             
            <M>    Intel Wireless WiFi MVM Firmware support
            <M> Intel Wireless WiFi 4965AGN (iwl4965)
            <M> Intel PRO/Wireless 3945ABG/BG Network Connection (iwl3945)
            <M> Ralink driver support  --->
                <M>   Ralink rt27xx/rt28xx/rt30xx (USB) support (rt2800usb)
 
-*- Cryptographic API --->
    -*- AES cipher algorithms
    -*- AES cipher algorithms (x86_64)
    <*> AES cipher algorithms (AES-NI)
</pre>}}

{{Important|드라이버를 모듈(<code><M></code>)로 빌드하는 대신, 커널에 넣어(<code><*></code>) 빌드하면, 펌웨어도 마찬가지로 [[Kernel_Modules#Compile-in-kernel_modules_vs_Loadable_kernel_modules_.28LKMs.29|커널에 넣어야]] 합니다.
<br />잊지 마시고, 설정을 바꾼 다음 [[Kernel/Rebuild|커널을 다시 빌드]] 하십시오.}}

=== LED 지원 ===

패킷 수신/전송 활동에 대한 LED 동작을 활성화하려면 다음 옵션을 넣어 커널을 컴파일하십시오:

{{KernelBox|<pre>
Device Drivers  --->
    [*] LED Support  --->
        <*>   LED Class Support
 
[*] Networking support  --->
    [*] Wireless  --->
        [*] Enable LED triggers
</pre>
}}

== 펌웨어 ==

커널 드라이버 말고도, 일부 칩셋에서는 펌웨어가 필요합니다. 필요하다면, 다음 목록을 가리킨 후 설치하십시오:

{{Emerge|sys-kernel/linux-firmware}}

<div class="mw-collapsible">
{| class="table table-condensed table-striped"
|-
! Wifi device
! Driver
! Firmware
! Note
|-
| Atheros AR9271 & AR7010 
| ath9k_htc
| {{Package|sys-kernel/linux-firmware}}
|
|-
| Broadcom 43xx wireless support
| b43 / b43legacy
| {{Package|sys-firmware/b43-firmware}}
| Aircrack-ng ready, most probably the best choice [http://wireless.kernel.org/en/users/Drivers/b43#Supported_devices if your bcm43xx device is supported]
|-
| Broadcom PCIe and SDIO/USB devices
| [https://wireless.wiki.kernel.org/en/users/drivers/brcm80211?s%5b%5d=brcmsmac brcmsmac] / [https://wireless.wiki.kernel.org/en/users/drivers/brcm80211?s%5b%5d=brcmfmac brcmfmac]
| {{Package|sys-kernel/linux-firmware}}
| Lacks powersaving, LED support and [http://wireless.kernel.org/en/users/Drivers/brcm80211#To_be_done_for_softmac_driver other features]
|-
| Broadcom 43xx wireless support
| wl
| {{Package|net-wireless/broadcom-sta}}
| Proprietary, no AP or Monitor modes, [http://wireless.kernel.org/en/users/Drivers/b43#Comparison_of_recent_drivers Comparison of bcm43xx drivers]
|-
| Intel PRO/Wireless 2200BG
| ipw2200
| {{Package|sys-firmware/ipw2200-firmware}}
|
|-
| [[Intel Corporation PRO/Wireless 3945ABG|Intel PRO/Wireless 3945ABG/BG]]
| [[Intel_Corporation_PRO/Wireless_3945ABG#Device_driver_iwl3945|iwlegacy]]
| {{Package|sys-kernel/linux-firmware}}
|
|-
| Intel Wireless WiFi 4965AGN
| iwl4965
| {{Package|sys-kernel/linux-firmware}}
|
|-
| All other Intel Wireless devices
| [[iwlwifi]]
| {{Package|sys-kernel/linux-firmware}}
| See the [[iwlwifi]] article for detailed instructions.
|-
| [[Qualcomm Atheros QCA6174]]
| ath10k_pci
| ath10k-firmware
| See [[Qualcomm_Atheros_QCA6174#Firmware]]
|-
| Ralink/MediaTek USB devices
| e.g. [https://wireless.wiki.kernel.org/en/users/drivers/rt2800usb?s%5b%5d=rt2800usb rt2800usb]
| {{Package|sys-kernel/linux-firmware}}
|
|-
| Realtek RTL8191SE & RTL8192SE
| rtl8192se
| {{Package|sys-kernel/linux-firmware}}
|
|-
| Realtek 8723AU/8723BU/8191EU/8192EU/8188EU/8188RU
| rtl8xxxu
| {{Package|sys-kernel/linux-firmware}}
| May need the <var>CONFIG_RTL8XXXU_UNTESTED</var> kernel option to find all devices. Only those verified by kernel developers are enabled by default.
|}
</div>

드라이버에서 펌웨어를 요구하지만 목록에 없다면 직접 다운로드하여  {{Path|/lib/firmware}} 디렉터리에 넣어야 합니다.

== Network device names ==

{{:Eudev/Network device names/en}}

== WPA supplicant ==

무선 네트워크를  WPA 또는 WPA2로 설정하면, {{c|[[wpa_supplicant]]}}를 활용해야합니다. 젠투 리눅스에서 무선 네트워크를 설정하는데 필요한 정보를 찾는다면, 젠투 핸드북의 [[Handbook:AMD64/Networking/Wireless/ko|무선 네트워크 장]]을 읽어보십시오.

{{:Wifi/Testing/ko}}

=== dmesg ===

Check the output of {{c|dmesg}}. 

{{Cmd|dmesg {{!}} grep -i -E 'xx:xx.x{{!}}wlan{{!}}iwl{{!}}80211'}}

Be sure to replace
* <code>xx:xx.x</code> with the identifier (PCIID) from [[#Hardware detection|lspci]], 
* <code>wlan</code> with the [[#Network_device_names|network interface name]] and 
* <code>iwl</code> with the name of the [[#Hardware detection|<code>Kernel driver in use</code>]].

== 문제 해결 ==

* [https://forums.gentoo.org/viewtopic-p-7888312.html#7888312 포럼 글타래: wireless lan can't get ip from access point] which explains about 169.254.x.x ([[wikipedia:Link-local_address|link local address]]) 잘못된 IP 주소
* [https://forums.gentoo.org/viewtopic-p-7647960.html#7647960 포럼 글타래: iwlwifi fails to load after upgrade to 3.17.0]
* [https://forums.gentoo.org/viewtopic-t-1016976-start-3.html 포럼 글타래: Where is my network !?]

== 추가 참조 ==

* [[Handbook:AMD64/Networking/Wireless]]
* [[AC1200 Wireless Adapters]]
* [[iproute2]]
* [[iwlwifi]]
* [[Qualcomm Atheros QCA6174]]

== 외부 자료 ==

* [https://wiki.archlinux.org/index.php/Wireless_network_configuration Wireless network configuration] at ArchLinux


[[Category:Network devices]]
[[Category:Network management]]
