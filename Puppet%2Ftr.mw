<languages />

{{Metadata|abstract=Puppet, Ruby ile yazılmış bir konfigürasyon yönetimi sistemidir. Sistemlerinize uygulama yükleme/güncelleme işlemi sırasında yardımcı olur.}}

<div class="mw-translate-fuzzy">
{{InfoBox stack
|{{InfoBox wikipedia|Puppet (software)|header=true}}
|{{InfoBox ohloh}}
}}
</div>

'''Puppet''' [[Ruby]] ile yazılmış bir konfigürasyon yönetimi sistemidir. Sistemlerinize uygulama yükleme/güncelleme işlemi sırasında yardımcı olur.

<div class="mw-translate-fuzzy">
== Kurulum ==
Puppet Gentoo'da {{Package|app-admin/puppet}} paketi ile sunulmaktadır.
Şu anda istemci ve sunucu paketleri arasında bir ayrım bulunmadığından her ikisinde de kurulum aynı şekildedir.
</div>

Puppet is provided by the {{Package|app-admin/puppet}} package.

Currently, there is no distinction between server and client, so the basic installation procedure is the same for both.

=== Emerge ===

<div class="mw-translate-fuzzy">
Öncelikle, Puppet'i <tt>emerge</tt> ile kuralım:
{{Emerge|puppet}}
</div>

{{Emerge|app-admin/puppet}}

<div class="mw-translate-fuzzy">
== Yapılandırma ==
Puppet genellikle {{Path|/etc/puppet/puppet.conf}} dosyasından yapılandırılabilir ve yorum olan satırlar diyez (<tt>#</tt>) ile işaretlenmiş durumda kurulacaktır.
Ayar dosyası birçok bölümden oluşmaktadır:
</div>

Puppet is mainly configured through {{Path|/etc/puppet/puppet.conf}} in an INI-style format. Comments are marked with a hash sign (<code>#</code>).

The configuration file is separated into several sections, or blocks:

<div class="mw-translate-fuzzy">
* <tt>[main]</tt> bölümü Puppet'in aşağıdaki bölümlerde özel olarak belirtilmemiş yapılandırma ayarları yok ise geçerli olacak genel ayarları içerir:
** <tt>[master]</tt> bölümündeki ayarlar Puppetmaster (<tt>puppet yönetim birimi</tt>), veya CA aracı (<tt>puppet sertifika yönetimi</tt>) içindir
** <tt>[agent]</tt> bölümündeki ayarlar Puppet agent (<tt>puppet istemcisi</tt>) yönetimi içindir
</div>

Daha derin şekilde bilgiyi (diğer olası yapılandırma bölümleri ile birlikte) [http://docs.puppetlabs.com/guides/configuring.html resmi Puppet dökümanlarında] bulabilirsiniz. 
Ayrıca [http://docs.puppetlabs.com/references/stable/configuration.html tüm geçerli değişkenleri] de inceleyebilirsiniz. Tabi ki bazıları yalnızca sunucu veya yalnızca istemci için işe yaramakta.

=== Sunucu (Puppetmaster) Yapılandırması ===

Ebuild'den kurulumda öntanımlı olarak gelen {{Path|puppet.conf}} dosyası olduğu gibi kullanılabilir. Puppet 2.7.3'de sunucu ile ilgili bölümler şöyle görülmekte:

{{FileBox|filename=/etc/puppet/puppet.conf|title=Öntanımlı sunucu ayarları|lang=ini|1=
[main]
    # The Puppet log directory. (Puppet log dizini)
    # The default value is '$vardir/log'. (öntanımlı değer '$vardir/log')
    logdir = /var/log/puppet
  
# Where Puppet PID files are kept. (Puppet PID dosyasının yeri)
    # The default value is '$vardir/run'. (öntanımlı değer '$vardir/run')
    rundir = /var/run/puppet
  
# Where SSL certificates are kept. (SSL sertifikalarının saklandığı yer)
    # The default value is '$confdir/ssl'. (öntanımlı değer '$vardir/ssl')
    ssldir = $vardir/ssl
}}

<div class="mw-translate-fuzzy">
==== Dosya sunucusunun ayarlanması ====
Dosyaları istemcilere gönderebilmek için dosya sunucusunu yapılandırmalıyız. Bu iş için yapıalndırma dosyası {{Path|/etc/puppet/fileserver.conf}}'dur. Öntanımlı olarak herhangi bir dosya servis edilmez.
</div>

To be able to send files to the clients, the file server has to be configured. This is done in {{Path|/etc/puppet/fileserver.conf}}. By default, there are no files being served.

{{FileBox|filename=/etc/puppet/fileserver.conf|title=<tt>files</tt> paylaşımının ayarlanması|lang=ini|1=
[files]
    path /var/lib/puppet/files
    allow 192.168.0.0/24
}}

<div class="mw-translate-fuzzy">
Yukardaki ayar parçası {{Path|/var/lib/puppet/files}} dizininden dosyalarını alan ve yalnızca 192.168.0.0/24 ağına servis sunan <tt>files</tt> isminde (hatırlatma olarak atanmış bir isim) bir paylaşım ayarlamakta. Özel olarak bir adres/blok engellemek istiyorsanız <tt>deny</tt> komutunu kullanabilirsiniz.
</div>

<div class="mw-translate-fuzzy">
==== Puppetmaster Servisini Başlatmak ====
{{Note|İstemcilerin Puppetmaster'a hostname olarak <tt>puppet</tt> kullanarak erişebilmesi tavsiye edilmektedir. Dilerseniz bu davranışı değiştirebilirsiniz ancak yapılandırma dosyalarında biraz değişiklik yapmanız gerekir.}}
</div>

{{Note|It is recommended that the Puppetmaster is reachable from the clients using the host name <code>puppet</code>. However, the name can be overridden, which of course causes configuration effort.}}

<div class="mw-translate-fuzzy">
{{Important|Bu noktada istemciler tarafından görülen sunucu adının <tt>hostname -f</tt> komutunun çıktısı ile aynı olması gerekmektedir. Bunun için {{Path|/etc/hosts}} dosyasını düzenlemeniz veya elle sertifika üretmeniz gerekebilir (aşağıda anlatılmakta).}}
</div>

<div class="mw-translate-fuzzy">
Puppetmaster'ı başlatmak için kendi init scriptini kullanabiliriz:
{{RootCmd|/etc/init.d/puppetmaster start}}
</div>

{{RootCmd|/etc/init.d/puppetmaster start}}

<div class="mw-translate-fuzzy">
İlk çalışması sırasında Puppet, Puppetmaster sunucusu için bir SSL sertifikası üretip <tt>ssldir</tt> ile tanımladığımız dizine yerleştirecektir.
</div>

<div class="mw-translate-fuzzy">
8140/TCP portundan dinleme yapan servisin bu porttan istemciler ile iletişime geçmesini engelleyecek bir güvenlik duvarı/ağ filtresi olmadığına emin olun.
</div>

<div class="mw-translate-fuzzy">
==== Örnek bir manifesto ====
Manifestolar Puppet'de istemci cihazlar için yapılandırma ayarlarıdır.
Manifestoların yazım formatı ile ilgili bilgi için [http://docs.puppetlabs.com/guides/language_guide.html detaylı belgeyi] inceleyebilirsiniz.
</div>

Manifests, in Puppet's terminology, are the files in which the client configuration is specified.
The documentation contains a [http://docs.puppetlabs.com/guides/language_guide.html comprehensive guide] about the manifest markup language.

Basit bir örnek olarak istemcide bir ''günün mesajı'' (motd) dosyası oluşturalım. Puppetmaster üzerinde önceden tanımladığımız <tt>files</tt> paylaşımının dizini içinde bir dosya oluşturalım:

{{FileBox|filename=/var/lib/puppet/files/motd|title=Sunucudaki MOTD dosyası|1=
Puppet ile yönetilen bu cihaza hoşgeldiniz!
}}

<div class="mw-translate-fuzzy">
Ardından <tt>manifests</tt> dizininde ana manifestoyu oluşturmalıyız. Dosyanın adı <tt>site.pp</tt>:
</div>

{{FileBox|filename=/etc/puppet/manifests/site.pp|title=Sunucudaki ana manifesto dosyası|lang=ruby|1=
node default {
  file { '/etc/motd':
    source => 'puppet://puppet/files/motd'
  }
}
}}

<div class="mw-translate-fuzzy">
<tt>default</tt> tanımı, eğer host için farklı bir <tt>node</tt> tanımı yapılarak özel bir yapılandırma sağlanmadığında tüm ''node''lara (istemciler için kullanılan isimdir) uygulanır.
<tt>file</tt> (dosya) kaynağını kullanarak <tt>puppet</tt> cihazında <tt>files</tt> paylaşımındaki <tt>motd</tt> dosyasının istemcinin {{Path|/etc/motd}} konumunda bulunmasını istedik. Eğer sunucu (puppetmaster) farklı bir isimle anılıyorsa,  <tt>source</tt> adresini buna göre ayarlamanız gerekmektedir.
</div>

<div class="mw-translate-fuzzy">
=== İstemci Yapılandırması ===
{{Important/tr|İstemciler Puppetmaster ile '''yakın sürümler''' kullanmak '''zorundadır'''. Puppet'in 2.7.1 sürümünü kullanan bir Puppetmaster ile 2.7.2 sürümünü kullanan istemciler problemsiz çalışacaktır. Ancak 2.6 kullanan bir sunucu ile 2.7 kullanan istemciler muhtemelen problem yaşayacaktır.}}
</div>

{{Important|The client '''must''' have the '''same major and minor version''' as the Puppetmaster. Using a 2.7.1 Puppetmaster with 2.7.2 clients is fine, but using 2.6 for the server and 2.7 for clients can cause unexpected issues at any time.}}

<div class="mw-translate-fuzzy">
{{Note/tr|Eğer puppetmaster <tt>puppet</tt> adresiyle erişilemiyorsa,  {{Path|/etc/puppet/puppet.conf}} dosyasındaki <tt>[main]</tt> bölümünde bulunan <tt>server{{=}}</tt> değişkenini gerçek hostname ile değiştirin.}}
</div>

<div class="mw-translate-fuzzy">
Puppet agent'in (istemci) ilk çalıştırılması sırasında, puppetmaster tarafından cihazın sertifikasının imzalanmasını beklemelisiniz. Sertifika talep etmek ve ilk yapılandırmanızı tamamlamak için aşağıdaki kodu çalıştırın:
</div>

{{RootCmd|puppet agent --test --waitforcert 60|prompt=root@client #
|output=<pre>
info: Creating a new certificate request for client
info: Creating a new SSL key at /var/lib/puppet/ssl/private_keys/client.pem
notice: Did not receive certificate
</pre>}}

<div class="mw-translate-fuzzy">
İstemcinin bağlanabilmesi için, öncelikle sunucuda sertifikayı onaylamanız gerekmekte. İstemciden talep gönderdikten sonra sunucuda sertifika bekleyen node'ların listesinde istemcimiz görülüyor olmalı:
{{RootCmd|puppet cert --list
|prompt=root@server #
|output=client}}
</div>

{{RootCmd|puppet cert --list
|prompt=root@server #
|output=client}}

<div class="mw-translate-fuzzy">
İstemci (client) için sertifikayı imzalayalım:
{{RootCmd|puppet cert --sign client
|prompt=root@server #}}
</div>

{{RootCmd|puppet cert --sign client
|prompt=root@server #}}

<div class="mw-translate-fuzzy">
İstemci sertifikanın onaylanıp onaylanmadığını her 60 saniyede bir kontrol edecektir. Onay alınmasının ardından yapılandırma devam eder:
{{GenericCmd|<pre>
info: Caching catalog for client
info: Applying configuration version '1317317379'
notice: /Stage[main]//Node[default]/File[/etc/motd]/ensure: defined content as '{md5}30ed97991ad6f591b9995ad749b20b00'
notice: Finished catalog run in 0.05 seconds
</pre>}}
</div>

{{GenericCmd|<pre>
info: Caching catalog for client
info: Applying configuration version '1317317379'
notice: /Stage[main]//Node[default]/File[/etc/motd]/ensure: defined content as '{md5}30ed97991ad6f591b9995ad749b20b00'
notice: Finished catalog run in 0.05 seconds
</pre>}}

<div class="mw-translate-fuzzy">
Bu mesajı gördüyseniz, herşey yolunda demektir. Artık istemcideki {{Path|/etc/motd}} dosyasını inceleyebilirsiniz:
{{Cmd|cat /etc/motd
|prompt=user@client $
|output=Puppet ile yönetilen bu cihaza hoşgeldiniz!}}
</div>

{{Cmd|cat /etc/motd
|prompt=user@client $
|output=Welcome to this Puppet-managed machine!}}

==== OpenRC ====

<div class="mw-translate-fuzzy">
Artık puppet agent'ı servis olarak başlatabilir ve açılışta çalışması için ayarlayabilirsiniz:
{{RootCmd|/etc/init.d/puppet start
|rc-update add puppet default
|prompt=root@client #}}
</div>

{{RootCmd|/etc/init.d/puppet start
|rc-update add puppet default
|prompt=root@client #}}

==== Systemd ====

Conversely, when running systemd:

{{RootCmd|systemctl start puppet
|systemctl enable puppet
|prompt=root@client #}}

<div class="mw-translate-fuzzy">
== Diğer Başlıklar ==
</div>

<div class="mw-translate-fuzzy">
=== Elle Sertifika Üretimi ===
Sertifika üretmek için <tt>puppet cert</tt> aracını kullanabilirsiniz.
Üretilen sertifikaları yerel Puppet Certificate Authority (CA - Puppet Sertifika Otoritesi) kimliğiniz ile imzalayarak puppet yapılandırmasında tanımladığımız <tt>ssldir</tt> dizinine kaydedecektir.
</div>

To manually generate a certificate, use the {{c|puppet cert}} utility.
It will place all generated certificates into the <var>ssldir</var> defined directory as set in the puppet configuration and will sign them with the key of the local Puppet Certificate Authority (CA).

<div class="mw-translate-fuzzy">
Basit bir örnek olarak '''yalnızca bir Common Name: (alan adı)''' kullanarak sertifika üretmek için:
{{RootCmd|puppet cert --generate host1}}
</div>

{{RootCmd|puppet cert --generate host1}}

<div class="mw-translate-fuzzy">
Eğer '''birden fazla hostname''' için geçerli olacak bir sertifika gerekliyse <tt>--certdnsnames</tt> parametresini kullanıp, farklı alan adlarını iki nokta ile ayırın:
{{RootCmd|puppet cert --generate --certdnsnames puppet:puppet.domain.invalid host1.domain.invalid}}
</div>

{{RootCmd|puppet cert --generate --certdnsnames puppet:puppet.domain.invalid host1.domain.invalid}}

Bu şekilde üretilen bir sertifika belirtilen üç alan adı için de geçerli olacaktır.

=== Refreshing agent certificates ===

This is the process used to manually refresh agent certificates.

# (on master) {{RootCmd|puppet cert clean ${AGENT_HOSTNAME} }}
# (on agent) {{RootCmd|rm /etc/puppet/ssl/{certs,certificate_requests}/${AGENT_HOSTNAME}.pem}}
#* This will cause the Puppet agent to regenerate the CSR with the existing SSL key.
#* The old certificate is no longer valid, as it was nuked on the master.
#* When one of the above steps is forgotten, an error will pop up about the certificate mis-matching between agent and master.
#* To replace the SSL keys (optional): {{RootCmd|rm /etc/puppet/ssl/{public,private}_keys/${AGENT_HOSTNAME}.pem}}
# (on agent) {{RootCmd|puppet agent --onetime --no-daemonize --verbose --test --waitforcert 30}}
#* When using auto-signing, no further steps are needed.
# (on master) {{RootCmd|puppet cert list ${AGENT_HOSTNAME} }}
# Verify that the fingerprint listed in the previous two outputs matches
# (on master) {{RootCmd|puppet cert sign ${AGENT_HOSTNAME} }}
# (on agent) {{RootCmd|puppet agent --onetime --no-daemonize --verbose --test}}

<div class="mw-translate-fuzzy">
=== Puppet ile slotları yönetmek ===
Puppet ile gelen öntanımlı portage besleyicisi paket slotlarını desteklemese de, 3. parti eklentiler sayesinde bu özelliği ekleyebilirsiniz.
* [https://github.com/gentoo/puppet-portage puppet-portage]
* [https://github.com/whatbox/PortageGT PortageGT]
</div>

While the default portage provider in puppet does support slots there are puppet modules available which also have this functionality.

For instance, with {{Package|app-admin/puppet}} version 4.6.0 and higher, and/or {{Package|app-admin/puppet-agent}}, the slot functionality is supported like to:

{{CodeBox|title=Defining an absent slotted package|1=
    package { 'dev-lang/python:3.3': ensure => absent }
}}

Additional modules are:
* [https://github.com/gentoo/puppet-portage puppet-portage]
* [https://github.com/whatbox/PortageGT PortageGT]

== See also ==

* [[Puppet module for Gentoo]]

<div class="mw-translate-fuzzy">
== Harici kaynaklar ==
* [http://puppetlabs.com/ Proje sitesi]
* [http://projects.puppetlabs.com/projects/puppet/wiki Puppet Wiki]
</div>

* [http://puppetlabs.com/ Upstream website]
* [http://projects.puppetlabs.com/projects/puppet/wiki Puppet Wiki]


[[Category:Server]]
[[Category:Security]]
