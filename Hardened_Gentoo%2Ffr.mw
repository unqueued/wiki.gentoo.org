<languages />
Gentoo Hardened est un projet Gentoo qui  offre de nombreux services de sécurité qui s'ajoutent à l'installation bien connue de Gentoo Linux. Bien que chacun d'eux puisse être sélectionné individuellement, Gentoo Hardened active plusieurs options d'atténuation du risque dans la chaîne des outils et prend en charge PaX, grSecurity, SE Linux, TPE et plus encore.

Que vous utilisiez un serveur Internet ou une station de travail flexible, lorsque vous devez faire face à de multiples menaces, vous souhaitez durcir votre système au delà de la simple application des correctifs de sécurité « Durcir » un système signifie que vous prenez des mesures additionnelles contre les attaques et contre d'autres risques. Cela se combine le plus souvent avec un ensemble d'actions que vous faites sur le système.

Dans Gentoo Hardened, plusieurs projets sont actifs pour vous aider à durcir votre système Gentoo via :
* L'activation d'options dans la chaîne des outils (compilateur, éditeur de liens ...) comme le forçage d'exécutables indépendants de la position (PIE), la protection de la pile contre les dépassements de tampon et des vérifications de tampons en compilation.
* L'activation des extensions PaX dans le le noyau Linux, qui apporte des mesures de protection additionnelles  comme la distribution aléatoire de l'espace mémoire et la mémoire non exécutable.
* L'activation des extensions grSecurity dans le noyau Linux, y compris les restrictions additionnelles sur le changement de racine, des audits additionnels, des restrictions de processus, etc..
* L'activation des extensions [[Hardened Gentoo/SELinux|SELinux]] dans le noyau Linux, qui offre un système de contrôle d'accès obligatoire qui améliore les restrictions dues aux droits d'accès standards de Linux.
* L'activation des technologies relatives à l'[[Integrity|Intégrité]] comme l'architecture de mesure de l'intégrité, pour rendre les systèmes capable de récupérer des altérations consécutives aux attaques.

Bien entendu, ceci inclut les utilitaires de l'espace utilisateur nécessaires à la gestion de ces extensions.

== Commuter vers un profil durci ==

Choisissez un [[profile|profil]] durci, de telle manière que la « gestion des paquets » soit faite d'une manière durcie.

{{RootCmd|eselect profile list}}
{{RootCmd|eselect profile set [number of hardened profile]}}
{{RootCmd|source /etc/profile}}

By choosing the hardened profile, certain package management settings (masks, USE flags, etc) become default for your system.  This applies to many packages, including the toolchain.  The toolchain is used for building/compiling your programs, and includes: the GNU Compiler Collection (GCC), binutils (linker, etc.), and the GNU C library (glibc).  By re-emerging the toolchain, these new default settings will apply to the toolchain, which will allow all future ''package compiling'' to be  done in a hardened way.

{{emerge|params=--oneshot|binutils gcc virtual/libc}}

The above command rebuilt GCC, which can now be used to compile hardened software.  Make sure that the hardened option is selected for GCC.

{{RootCmd|gcc-config -l
|output=<pre>
[1] i686-pc-linux-gnu-4.5.3 *
[2] i686-pc-linux-gnu-4.5.3-hardenednopie
[3] i686-pc-linux-gnu-4.5.3-hardenednopiessp
[4] i686-pc-linux-gnu-4.5.3-hardenednossp
[5] i686-pc-linux-gnu-4.5.3-vanilla
</pre>}}

In the example output above, the hardened GCC profile is the one without a suffix. If you want to disable PIE or SSP, choose the relevant '''hardenedno'''('''pie'''|'''ssp''') or both, '''hardenednopiessp'''. The '''vanilla''' profile is of course the one with hardening disabled. Finally source your new profile settings:

{{RootCmd|source /etc/profile}}

If you use the "prelink" package, remove it, since it isn't compatible with the hardened profile:

{{emerge|params=--depclean|prelink}}

Now you can reinstall all packages with your new hardened toolchain:

{{emerge|params=--emptytree --verbose|@world}}

Install hardened kernel sources, so that the kernel will *manage your running system* in a hardened way (especially using PaX):

{{emerge|hardened-sources}}

Now configure/compile the sources and add the new kernel to your boot manager (ie., GRUB).

== Tips & Tricks ==

=== Hardened Gentoo/Grsecurity chroot ===

If you want to chroot to a copied environment where the CONFIG_GRKERNSEC_CHROOT is enabled you must use the cd grub and change the root(cd) kernel(cd) initrd(cd) setting to from (cd) to (hdx,y).

Now you can install the grub environment.

=== Per Package Hardening Settings ===

{{Warning|This method is not supported by Gentoo.}}

Changing the GCC profile to deal with specific packages can be a pain. A way to avoid this is to set per-package C(XX)FLAGS using [[:/etc/portage/env|package.env]]. Create the file /etc/portage/env/nossp and add to that:

{{File|/etc/portage/env/nossp|Disable SSP|<pre>
CFLAGS="${CFLAGS} -fno-stack-protector"
CXXFLAGS="${CXXFLAGS} -fno-stack-protector"
</pre>}}

To allow for disabling PIE, create and add to {{Path|/etc/portage/env/nopie}}:

{{File|/etc/portage/env/nopie|Disable PIE|<pre>
CFLAGS="${CFLAGS} -nopie"
CXXFLAGS="${CXXFLAGS} -nopie"
LDFLAGS="${LDFLAGS} -nopie"
</pre>}}

Finally add the package you want to disable either PIE or SSP for to /etc/portage/package.env and the relevant /etc/portage/env/<filename>, for this example {{Package|sys-libs/zlib}} is used here:

{{File|/etc/portage/package.env|Disable PIE for sys-libs/zlib|<pre>
sys-libs/zlib nopie
</pre>}}

== See also ==

For more information, check out the following resources:
* [http://www.gentoo.org/proj/en/hardened/ Gentoo Hardened Project]
* [http://www.gentoo.org/proj/en/hardened/selinux/ Gentoo Hardened SELinux Project]
* http://www.gentoo.org/proj/en/hardened/grsecurity.xml
* http://www.gentoo.org/proj/en/hardened/pax-quickstart.xml

== External resources ==

* http://www.rockfloat.com/howto/gentoo-hardened.html#kernel


[[Category:Security]]
