An iSCSI initiator is a machine that connects to a storage machine on the network. The opposite side of the connection, the storage machine itself, is referred to as the [[iSCSI#iSCSI_Target|iSCSI Target]]. Multiple iSCSI initiators can be pointed to one iSCSI Target.

__TOC__

== Installation ==

=== Kernel configuration ===

{{KernelBox|title=Enabling the iSCSI driver: <code>CONFIG_INET=y</code>, <code>CONFIG_BLK_DEV_SD=y</code>, <code>CONFIG_SCSI_LOWLEVEL=y</code>, and <code>CONFIG_ISCSI_TCP=y</code>|1=
[*] Networking support  --->
   Networking options  --->
      [*] TCP/IP networking 

Device Drivers  --->
  SCSI device support  --->
     <*> SCSI disk support
     [*] SCSI low-level drivers  --->
       <*> iSCSI Initiator over TCP/IP
}}

{{Note|When connecting a tape device, RAID device, or any other special device via iSCSI, remember to select the proper drivers for each device in the kernel. If the device are known is best to enable the appropriate options in the kernel now, instead of waiting to a later time.}}

In-kernel support can be enabled by building the driver into the kernel (as suggested with the <code>*</code> above). If building the driver as an external module running the {{c|make modules_install}} command will install all the modules into the kernel, which is essentially the same as building in the modules initially. Built-in modules for an active kernel are listened in the {{Path|/lib/modules/$(uname -r)/modules.builtin}} file. To check to see if if the iscsi_tcp.ko driver has been built-in, run:

{{Cmd|cat /lib/modules/$(uname -r)/modules.builtin {{!}} grep iscsi_tcp.ko|output=
kernel/drivers/scsi/libiscsi_tcp.ko
kernel/drivers/scsi/iscsi_tcp.ko
}}

=== USE flags ===

{{USEflag|package=sys-block/open-iscsi|desc=Optional USE flags for {{Package|sys-block/open-iscsi}}:
|debug
|slp+++Support for openslp, an open-source implementation of Service Location Protocol
}}

=== Emerge ===

After USE flags have been set (or unset) {{c|emerge}} the iSCSI package:

{{Emerge|sys-block/open-iscsi}}

== Configuration ==

=== Loading the module ===

{{Note|This section is only applicable when the driver has been built as a loadable kernel module (modules are ''external'' to the kernel). If the kernel configuration was set and then built as as suggested above, then the driver will be built-in to the kernel effectively rendering this section unnecessary. Skip down to [[#Usage|Usage]] if this is the case.}}

Before {{c|iscsid}} startup the {{c|lsmod}} command can be used to confirm the module has been loaded:

{{RootCmd|lsmod {{!}} grep iscsi_tcp}}

If output is seen from the command above, then the following step is not needed:

{{RootCmd|modprobe iscsi_tcp}}

== Usage ==

=== Services ===

==== OpenRC ====

Start the iSCSI daemon:

{{RootCmd|/etc/init.d/iscsid start}}

=== Target discovery ===

Discover the targetnames:

{{RootCmd|iscsiadm -m discovery -t st -p <ip> -P 1}}

=== Adding targets ===

Add a target to the configuration:

{{RootCmd|iscsiadm -m node -T iqn.2004-04.com.<targethost>:<targetname> [-p <ip[:port]>] -l}}

=== Target persistence ===

And tell the {{c|iscid}} service to start a target automatically on startup

{{RootCmd|iscsiadm -m node -T iqn.2004-04.com.<targethost>:<targetname> [-p <ip[:port]>] -o update -n node.startup -v automatic}}

== See also ==

* [[ISCSI/Target|iSCSI Target]] - The storage half of an iSCSI configuration.
