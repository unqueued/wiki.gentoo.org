<languages />
{{InfoBox stack
|{{InfoBox homepage|http://gnu.org/software/grub/|header=true}}
|{{InfoBox wikipedia|GNU_GRUB#GRUB 2}}
|{{InfoBox gitweb|http://git.savannah.gnu.org/cgit/grub.git/|raw=true}}
|{{InfoBox odoc|http://gnu.org/software/grub/grub-documentation.html}}
}}

'''GRUB2''' は今やGRUB Legacyと呼ばれるようになった[[GRUB|GRUB1]]の後継となるブートローダです。GRUB2はGRUB Legacyとは全く別のコードベースを持ち、より高度なスクリプティングを可能にするためシェルライクな構文を利用できるのが特徴です。

ショットガンアプローチが必要なら、[[GRUB2 Quick Start]]を参照してください。

== インストール ==

The {{Package|sys-boot/grub}} package is slotted. Both grub-0.97 ([[GRUB|GRUB Legacy]]) and grub-2.00 may be installed at the same time; however, only one version of GRUB may be installed in a Master Boot Record (MBR) at a time.

== 前提条件 ==

デフォルトでは、GRUB2はデフォルトのプラットフォームターゲットをビルド時に推測します。これは {{Path|make.conf}} において <var>GRUB_PLATFORMS</var> 変数をセットすることでオーバーライドできます。

{{FileBox|filename=/etc/portage/make.conf|title=EMU, EFIとPCをサポートするGRUB_PLATFORMS変数の設定例|lang=bash|1=
GRUB_PLATFORMS="emu efi-32 efi-64 pc"
}}

ターゲットのCPU毎に、次のプラットフォームがサポートされています:

{| class="table"
!
! colspan="7" | Target
|-
! Platform
! i386
! ia64
! mips
! mipsel
! powerpc
! spac64
! x86_64
|-
! arc
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
|-
! coreboot
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| style="background: PaleTurquoise; text-align: center" | 32-bit
|-
! efi
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
|-
! emu
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|-
! ieee1275
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| style="background: PaleTurquoise;  text-align: center" | 32-bit
|-
! loongson
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
|-
! multiboot
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| style="background: PaleTurquoise; text-align: center" | 32-bit
|-
! qemu
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| style="background: PaleTurquoise; text-align: center" | 32-bit
|-
! qemu-mips
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
|-
! pc
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| style="background: PaleTurquoise; text-align: center" | 32-bit
|-
|}

{{Note| いかなる場合でも環境変数<var>GRUB_PLATFORMS</var>の値が変更された際には、変更されたバイナリをビルドするためGRUB2を必ず再emergeする必要があります。以下の[[#Emerge|emerge section]]で示したとおり、必ず<code>--newuse --deep</code>オプションを使用してください。}}

The {{Keyword|amd64}} profiles enable support for EFI functionality by default. When using a BIOS-based system, set <var>GRUB_PLATFORMS</var> to "emu" to avoid unneeded dependencies.

=== Emerge ===

通常の {{c|emerge}} シンタックスを用いてGRUB2をインストールします。

{{Emerge|sys-boot/grub:2|params+=--newuse --deep}}

=== 追加のソフトウェア ===

Optionally, install the {{c|os-prober}} utility (provided through the {{Package|sys-boot/os-prober}} package) to have GRUB2 probe for other operating systems when running the {{c|grub-mkconfig}} command. In most instances, this will enable GRUB2 to automatically detect other operating systems including Windows 7, 8.1, 10, other distributions of Linux, etc.

{{Emerge|sys-boot/os-prober|params+=--newuse}}

GRUB2(と、場合によっては{{Package|sys-boot/os-prober}})をインストールしても、ブートローダは自動では有効になりません。これらは、オペレーティングシステムにソフトウェアをインストールするのみで、(システムのブート時にそれが使われるようにするために)システムそのものにブートローダをインストールするには、追加のステップが必要になります。これについては[[#Configuration|設定]]セクションで解説します。

== 設定 ==

GRUB2 の設定には２つの重要な作業があります:

# GRUB2 のソフトウェアを、システムのブートローダーとしてインストール
# GRUB2 ブートローダー自体の設定

GRUB2ソフトウェアのインストールはシステムのタイプによってそれぞれ異なり、[[#Installing the boot loader|ブートローダーのインストール]]で解説します。まず、ブートローダそのものの設定について解説します。

=== メインの設定ファイル ===

grubの設定を生成するために、{{c|grub-mkconfig}} スクリプトを使います。これは {{Path|/etc/grub.d/*}} 以下のスクリプト及び {{Path|/etc/default/grub}} 設定ファイルを用い、最終的な {{Path|/boot/grub/grub.cfg}} を――GRUB2自体が使用する唯一の設定ファイルを――生成します。 

{| class="table"
|-
! ファイル !! フォーマット !! 編集すべきか? !! 説明
|-
| {{Path|/usr/sbin/grub-mkconfig}} || POSIX シェルスクリプト || {{No}} || {{Package|sys-boot/grub}}:2 パッケージの一部としてインストールされます。 下に説明されるファイルを設定した後、このスクリプトを実行して {{Path|/boot/grub/grub.cfg}} を生成します。
|-
| {{Path|/boot/grub/grub.cfg}} || GRUB2 シェルスクリプト || {{No}} || {{c|grub-mkconfig}} が生成するファイルです。このファイルはGRUB2のビルトインスクリプトインタプリタによって評価されるもので、必ずしもすべてのPOSIXコマンドやシンタックスをサポートするものではありません。サポートされる機能については、GRUBマニュアルの [https://www.gnu.org/software/grub/manual/grub.html#Shell_002dlike-scripting scripting reference] を参照してください。このファイルに対する変更は、次回 grub-mkconfig が実行されたとき保持されないことに注意してください。
|-
| {{Path|/etc/grub.d/*}} || POSIX シェルスクリプト || {{Partial|Maybe}} || {{Path|/etc/grub.d/*}} 以下の、実行可能属性がセットされたスクリプトは順番に評価され、標準出力が結合されて最終的な {{Path|/boot/grub/grub.cfg}}(もしくは {{c|grub-mkconfig}} <code>-o</code> オプションで指定された何らかのファイル)を形成します。これらのスクリプトはその時のシステムのシェルを使うので、あらゆるサポートされたシンタックスを使うことができます。理想的にはPOSIX互換のスクリプトであるべきであり、また、出力されるスクリプトはGRUB2のインタプリタと互換性のあるものでなければなりません。スクリプトを無効にしたり追加したりすることが必要かもしれません。例えば、自動では生成できないようなメニュー項目を追加したい時など。
|-
| {{Path|/boot/grub/custom.cfg}} || GRUB2 shell script || {{Partial|Maybe}} || このファイルが存在する場合、/etc/grub.d/41_custom のスクリプトがこのファイルを参照して起動時に読み込まれます。このファイルは新たなメニュー項目やコマンドを追加するために提供されており、grub.cfgを再生成する必要がありません。
|-
| {{Path|/etc/default/grub}} || POSIX シェルスクリプト || {{Yes}} || ほとんどの場合、直接変更されるべきファイルはこのファイルただ一つです。これは主に、 {{Path|/etc/grub.d}} のスクリプトで用いられる変数を設定して、使える設定ファイルを生成するために利用されます。サポートされる変数については、[[GRUB2/Config_Variables|GRUB2 configuration variables]] もしくは [https://www.gnu.org/software/grub/manual/grub.html#Simple-configuration official reference] を参照してください。
|}

GRUB2は、([[GRUB|GRUB Legacy]] や [[LILO]] のような)管理者によるブートオプション設定の手動での維持を必要としません。その代わりに、{{c|grub2-kconfig}} コマンドを用いて、設定ファイル({{Path|/boot/grub/grub.cfg}})を生成することができます。このユーティリティは {{Path|/etc/grub.d/}} にあるスクリプトと {{Path|/etc/default/grub}} の設定を使用します。

{{Warning|ソフトウェアRAIDを使用しているとき、{{c|grub-mkconfig}} ユーティリティは正しく動作しません。{{Path|/etc/grub.d/}} にあるスクリプトの手動設定が必要になり、そうしなければ、インストール後にシステムはブート不能な状態におかれることになるでしょう。}}

何らかの設定を変更したら、{{c|grub-mkconfig}} ユーティリティを {{Path|/boot/grub/grub.cfg}}にある出力ファイル(これはGRUB2のデフォルトの出力場所です)を指定した <code>-o</code> オプション付きで実行します:

{{RootCmd|grub-mkconfig -o /boot/grub/grub.cfg|output=<pre>
Generating grub.cfg ...
Found linux image: /boot/vmlinuz-3.3.0-gentoo
done
</pre>}}

{{c|grub-mkconfig}} ユーティリティが呼ばれるたびに、新しい設定が生成されます。 

{{Warning|もし {{c|grub-mkconfig}} が見つかった項目を報告してこない場合、それはひとつも項目が見つかっていないということです。この場合、GRUB2はシステムの再起動のあとブートオプションをひとつも提供してくれないことになり、解決に時間のかかるトリッキーな状況になるかもしれません。システムを再起動する前に、出力が申し分ないかどうか確かめてください。}}

=== 設定パラメータのセット ===

{{Path|/etc/default/grub}} にある次の変数はGRUB2がどのように機能するかをコントロールするために設定される最も一般的なものです:

{| class="table"
! 変数
! 説明
! デフォルト値
|-
| <var>GRUB_DEFAULT</var>
| ブート時に最初に選択される項目を定義する変数です。番号の数字かメニュータイトル、あるいは"saved"を設定します。
| 最初に検出された項目がデフォルトになります。
|-
| <var>GRUB_TIMEOUT</var> 
| デフォルトのメニュー項目をブートする前の遅延を秒で指定します。<code>0</code>に設定すると瞬時にブートし、<code>-1</code>にすると無期限に待ちつづけます。
| デフォルトは5秒です。
|-
| <var>GRUB_CMDLINE_LINUX</var>
| すべてのLinuxメニュー項目のカーネルコマンドラインに与える引数を設定します。例えば、ハイバーネーションをサポートするためには、swapパーティションが {{Path|/dev/sdXY}} なら、 <code>GRUB_CMDLINE_LINUX="resume=/dev/sdXY"</code> を追加する必要があります。
| 
|-
| <var>GRUB_CMDLINE_LINUX_DEFAULT</var>
| リカバリ以外のLinuxメニュー項目のカーネルコマンドラインに与える引数を設定します。
| 
|-
| <var>GRUB_DEVICE</var> 
| 初期ルートデバイス(つまり、カーネルの <code>root=</code> 引数)を設定します。これを設定すると、 {{c|grub-mkconfig}} コマンドの自動検知したルートデバイスがオーバーライドされます。例えば、 <code>GRUB_DEVICE=/dev/ram0</code> と設定すると、カーネルコマンドラインで強制的に <code>root=/dev/ram0</code> が使われるようになります。
| 
|}

より完全なリストについては、[[GRUB2/Config_Variables|GRUB2 configuration variables]]サブページを参照してください。

パラメータを変更したら、{{c|grub-mkconfig}} でGRUB2の設定ファイルを再生成してください。

=== 設定スクリプトの有効化と無効化 ===

{{Path|/etc/grub.d/}} ディレクトリには、 {{c|grub-mkconfig}} が {{Path|grub.cfg}} ファイルの生成に用いるスクリプトが含まれます。デフォルトでは、このディレクトリの中身は次のようなものであるはずです:

{{Cmd|ls /etc/grub.d/|output=<pre>
00_header  10_linux  20_linux_xen  30_os-prober  40_custom  41_custom README
</pre>}}

GRUB2は、インストールされたスクリプトのうち、実行可能に設定されたすべてのスクリプト(デフォルトでは全部がそうです)を利用します。いずれかのスクリプトを無効にするには、 {{c|chmod}} コマンドを用い、単にスクリプトのファイルパーミッションから実行可能ビットを取り除いてください。次の例では、 {{Path|00_header}} と {{Path|10_linux}} を除く全てのスクリプトを無効にします。

{{RootCmd|chmod -x /etc/grub.d/<nowiki>{</nowiki>20_linux_xen,30_os-prober,40_custom,41_custom<nowiki>}</nowiki>}}

スクリプトを変更したり、実行可能ビットを取り除いたりした後は、 {{c|grub-mkconfig}} を用いてGRUB2の設定ファイルを再生成してください。

=== 設定スクリプトに手を加える ===

いくつかのGRUB2の機能は、設定スクリプトの書き換えによってのみ利用することができます。例えば、FreeBSDとのデュアルブートをサポートするには次の操作が必要です。

{{Path|/etc/grub.d/40_custom}} スクリプトを以下のように変更します:  

{{FileBox|filename=/etc/grub.d/40_custom|title=デュアルブートの追加|<pre>
menuentry "FreeBSD" --class freebsd --class bsd --class os {
 insmod ufs2
 insmod bsd
 set root=(hd0,1)
 kfreebsd /boot/kernel/kernel
 kfreebsd_loadenv /boot/device.hints
 set kFreeBSD.vfs.root.mountfrom=ufs:/dev/ada0s1a
 set kFreeBSD.vfs.root.mountfrom.options=rw
 set kFreeBSD.hw.psm.synaptics_support=1
}
</pre>}}

{{Path|/dev/sda1}} もしくは <code>(hd0,1)</code> が、FreeBSDが置かれているパーティションです。FreeBSDパーティションに通常のUFSインストールが行われたなら、{{Path|/dev/sda1}} はコンテナになっています(論理パーティションのようなものです)。これはswapとルートパーティションからなります。{{c|ls -la /etc/grub.d/40_custom}} を実行し、{{Path|40_custom}} が実行可能であることを確認してください。もし実行可能ビットがセットされていない場合は、{{c|chmod u+x 40_custom}} コマンドでセットしてください。  

次に、{{c|grub-install}} コマンドを用いてGRUB2をインストールし、GRUB2の設定ファイルを更新してください。

{{RootCmd|grub-install /dev/sda
|grub-mkconfig -o /boot/grub/grub.cfg}}

== ブートローダーのインストール ==

GRUB2をシステムのブートローダーとしてインストールする方法は、システムがどのようにブートするのか([[BIOS]]かUEFIか)と、ブートローダーがインストールされるディスクがどのようにパーティションされているのか(パーティションレイアウトがMBRかGPTか)によって変わってきます。

この記事では次の場合についてをカバーします:

* [[#BIOS と MBR|BIOS と MBR]]
* [[#BIOS と GPT|BIOS と GPT]]
* [[#UEFI と GPT|UEFI と GPT]]

システムに対して適切なインストール方法の解説を選んでください。

=== BIOS と MBR ===

{{Note|このシステムでMicrosoft Windowsとデュアルブートする場合、システムにUEFIファームウェアがないことを確認してください。このようなシステムがLegacy BIOSモードで起動されると、Microsoft Windowsは起動を拒否します。}}

{{Path|/boot}} を確実に利用可能にしてください。もしこれが独立したパーティションなら、確実にマウントしてください:

{{RootCmd|mount /boot}}

関連するファイルを {{Path|/boot/grub}} にコピーするために、 {{c|grub-install}} コマンドを実行してください。PCプラットフォームではさらに、これによってマスターブートレコード(MBR)かパーティションのブートセクタにブートイメージがインストールされます。もしすべてがうまくいけば、 {{c|grub-install}} の実行後、以下のような出力が得られることが期待されます:

{{RootCmd|grub-install /dev/sda|output=<pre>
Installation finished. No error reported.
</pre>}}

{{c|grub-install}} は、CPUアーキテクチャとシステムプラットフォームを指定するための <code>--target</code> オプションを受け付けます。指定しなかった場合、 {{c|grub-install}} は適切な値を推測しようとします。{{Keyword|amd64}}/{{Keyword|x86}} システムにおいては、デフォルトで <code>i386-pc</code> が使用されます。 {{c|grub-install}} はまた、GRUB2のブートファイルを探す場所をGRUB2インストーラに知らせるための <code>--boot-directory</code> オプションを受け付けます。これはデフォルトでは {{Path|/boot}} ですが、ルートパーティションを移動しようとしている場合などに有用です。

==== BIOS と MBR でのパーティショニング ====

最初のパーティションの前に十分な空き領域を用意しておいてください。最初のパーティションをセクタ2048で開始すれば、少なくとも1MiBのディスク領域がマスターブートレコードに残されることになります。GRUBのための"BIOSブートパーティション"とよばれる追加パーティションを作成することが(必須ではありませんが)推奨されます。このパーティションは定義される必要があるだけで、フォーマットは必要ありません。これは後からシステムがGPTパーティションレイアウトに移行される時に必要です。MBRを使い続ける限りは必要ありません。


もし[[Handbook:Main_Page|Gentoo installation instructions]]に従ったのなら、BIOSブートパーティションはすでに有効なはずです。

=== BIOS と GPT ===

{{Note|このシステムでMicrosoft Windowsとデュアルブートする場合、システムにUEFIファームウェアがないことを確認してください。このようなシステムがLegacy BIOSモードで起動されると、Microsoft Windowsは起動を拒否します。また古いMicrosoft WindowsのシステムはGPTをサポートしないでしょうが、ハイブリッドMBR-GPT という方法が使用できます。[[Hybrid partition table]]参照のこと。}}

もし {{Path|/boot}} パーティションが必要ならば、 {{Path|/boot}} パーティションのマウントから始めましょう。

{{RootCmd|mount /boot}}

すべてがうまくいけば、 {{c|grub-install}} コマンドの実行後、以下のような出力が得られることが期待されます:

{{RootCmd|grub-install /dev/sda|output=<pre>
Installation finished. No error reported.
</pre>}}

{{c|grub-install}} は、CPUアーキテクチャとシステムプラットフォームを指定するための <code>--target</code> オプションを受け付けます。指定しなかった場合、 {{c|grub-install}} は正しい値を推測しようとします。{{Keyword|amd64}}/{{Keyword|x86}} システムにおいては、デフォルトで <code>i386-pc</code> が使用されます。 {{c|grub-install}} はまた、GRUB2のブートファイルを探す場所をGRUB2インストーラに知らせるための <code>--boot-directory</code> オプションを受け付けます。これはデフォルトでは {{Path|/boot}} ですが、ルートパーティションを移動しようとしている場合などに有用です。

==== BIOS と GPT でのパーティショニング ====

GPTパーティションテーブルがシステムに存在するとき、タイプ <code>EF02</code> の小さな"BIOSブートパーティション"(タイプ <code>EF00</code> の"EFIシステムパーティション(ESP)"とは異なります)を有効にする必要があります。動作させるには1MiBで十分ですが、2-4MiBがより安全な選択でしょう。このBIOSブートパーティションがブートローダーのステージ2を保持することになります。BIOSブートパーティションはファイルシステムでフォーマットされる必要はありません。{{c|grub-install}} コマンドが独自のファイルシステムで既存のファイルシステムを上書きします。

{{Important|BIOSブートパーティションと一般的に{{Path|/boot}}がマウントされるパーティションは同じでは'''ありません'''。 {{Path|/boot}} と BIOSブートは別のパーティションにあるため、それぞれ別々に扱われるべきです。BIOSブートパーティションは絶対にシステムにはマウント''されません''。  (例えば{{Path|/etc/fstab}}に定義されていないはずです)。対して{{Path|/boot}}パーティションは何ら問題なく必ずマウントされるので、{{Path|/etc/fstab}}ファイルで定義することもできます。}}

パーティションをBIOSパーティションとして設定するには、コマンドラインツールの {{c|parted}} ({{Package|sys-block/parted}}) を用い、以下のようにタイプしてください(<code>1</code>をBIOSブートパーティションに設定したいパーティションの番号に置きかえてください!):

{{RootCmd|set 1 bios_grub on|prompt=(parted) |color=white}}

{{Package|sys-apps/gptfdisk}} の {{c|cgdisk}} ユーティリティでは、これはパーティションタイプを <code>0xEF02</code> に設定し、 <code>gptbios</code> というラベルを設定することで全うされます。

EFIシステムパーティションは必要ではありませんが、システムのマザーボードがUEFIのボードにアップグレードされたとき、後からこれに変更できるよう、BIOSブートパーティションを十分大きくしておくのはまともな判断でしょう。

次に示すのは、BIOSブート [0xEF02] パーティションとEFI [0xEF00] パーティションの両方を含むGPTパーティションのディスクで {{c|gdisk}} ユーティリティを用い、 {{Key|p}} キーを押したときの出力です:

{{RootCmd|gdisk /dev/sdc|output=<pre>
GPT fdisk (gdisk) version 0.8.1
 
Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present
 
Found valid GPT with protective MBR; using GPT.
 
Command (? for help): p
Disk /dev/sdc: 976773168 sectors, 465.8 GiB
Logical sector size: 512 bytes
Disk identifier (GUID): AA369F4D-37A4-4C0D-A357-DC24B99A6337
Partition table holds up to 128 entries
First usable sector is 34, last usable sector is 976773134
Partitions will be aligned on 2048-sector boundaries
Total free space is 2014 sectors (1007.0 KiB)
 
Number  Start (sector)    End (sector)  Size       Code  Name
   1            2048       828377087   395.0 GiB   8E00  Linux LVM
   2       828377088       891291647   30.0 GiB    0700  Microsoft basic data
   3       891291648       975177727   40.0 GiB    0700  Microsoft basic data
   4       975177728       976754687   770.0 MiB   8300  Linux filesystem
   5       976754688       976756735   1024.0 KiB  EF02  BIOS boot partition
   6       976756736       976773134   8.0 MiB     EF00  EFI System
 
Command (? for help): 
</pre>}}

{{Note|{{c|fdisk}}をGPTで用いるときは、十六進数の<code>0x</code>接頭辞の入力は必要ありません。}}

同様のセットアップに対し、{{c|parted}} ユーティリティはやや異なる記法で出力を返します:

{{RootCmd|parted /dev/sdc|output=<pre>
GNU Parted 3.0
Using /dev/sdc
(parted) print
...
Sector size (logical/physical): 512B/512B
Partition Table: gpt
  
Number  Start   End    Size    File system  Name                  Flags
 1      1049kB  424GB  424GB                Linux LVM             lvm
 2      424GB   456GB  32.2GB               Microsoft basic data
 3      456GB   499GB  42.9GB               Microsoft basic data
 4      499GB   500GB  807MB   ext2         Linux filesystem
 5      500GB   500GB  1049kB               BIOS boot partition   bios_grub
 6      500GB   500GB  8396kB               EFI System            boot
  
(parted)
</pre>}}

{{c|gdisk}} でのパーティションの作成は、すでに {{c|fdisk}} パーティショニングユーティリティに慣れているユーザーにとっては理解しやすいでしょう。{{c|gdisk}} を開始したら、メインメニューで(newを意味する) {{Key|n}} をタイプし、(必要なら)開始と終了のセクタを与え、EFIシステムパーティションに <code>EF00</code> パーティションタイプを設定してください。

[[Handbook:Main_Page|Gentoo installation instructions]]に従ったユーザーならば、すでに適切なパーティションレイアウトに設定されているはずです。

=== UEFI と GPT ===

{{Path|/boot}} が利用可能であることを確認してください。もし別のパーティションにあるなら、マウントされていることを確認してください：

{{RootCmd|mount /boot}}

Run the {{c|grub-install}} command to copy the relevant files to {{Path|/boot/grub}}. This should install GRUB2 in {{Path|/boot/grub}}, copy the core image to {{Path|/boot/efi/EFI/gentoo/grubx64.efi}}, and call [[Efibootmgr|efibootmgr]] to add a boot entry.

{{RootCmd|grub-install --efi-directory{{=}}/boot/efi|output=<pre>
Installation finished. No error reported.
</pre>}}

上のコマンドは、vfatの[[EFIシステムパーティション]](ESP)が {{Path|/boot/efi}} にマウントされていることを前提にします。もしESPが {{Path|/boot}} に直接マウントされているなら、<code>--efi-directory=/boot</code> としてください。 

{{c|grub-install}} は、CPUアーキテクチャとシステムプラットフォームを指定するための <code>--target</code> オプションを受け付けます。指定がない場合、{{c|grub-install}}は適切な値の推測を試みます。
{{Keyword|amd64}}/{{Keyword|x86}} システムにおいては、デフォルトで <code>i386-pc</code> が使用されます。 {{c|grub-install}} はまた、GRUB2のブートファイルを探す場所をGRUB2インストーラに知らせるための <code>--boot-directory</code> オプションを受け付けます。これはデフォルトでは {{Path|/boot}} ですが、ルートパーティションを移動しようとしている場合などに有用です。

==== UEFI と GPT でのパーティショニング ====

GRUB2によるUEFI GPTブートには、システムに''必ず''FATファイルシステムを含んだ専用のパーティションが必要です。

The EFI partition can ''replace'' having a {{Path|/boot}} partition on {{Path|/dev/sda1}} by having a {{Path|/boot/efi}} partition on {{Path|/dev/sda1}}. This is to say a successful UEFI boot scenario using GRUB2 ''can'' operate with two partitions total (three total if a swap partition is needed): a root partition and an EFI partition. Using this configuration, the {{Path|/boot}} ''folder'' will be located in the root {{Path|/}} ''partition'' (at {{Path|/boot}}) and the EFI ''partition'' will mount ''in'' the boot ''folder'' (at {{Path|/boot/efi}}). For further clarification, see the example {{Path|/etc/fstab}} file below.

{{FileBox|filename=/etc/fstab|title=UEFIに対応したswapパーティションを含む {{Path|/etc/fstab}} ファイルの例:|<pre>
/dev/sda1		/boot/efi	vfat		noauto,noatime	1 2
/dev/sda2		none		swap		sw		0 0
/dev/sda3		/		ext4		noatime		0 1
</pre>}}

{{Path|/boot/efi}} は100MBもあれば複数の {{Path|*.efi}} ファイルを格納するのには十分です（そもそも複数のエントリが必要になることは滅多になく、ほとんどのシステムは1つしか使いません）。

Create the partition using the partitioning [[Partition#GUID_Partition_Table_.28GPT.29|tool of choice]]. The {{c|gdisk}} ({{Package|sys-apps/gptfdisk}}) and {{c|parted}} ({{Package|sys-block/parted}}) tools fit nicely for this purpose. When using the {{c|gdisk}} utility, be sure to use type <code>EF00</code>.

続いて次の例のように、 {{c|mkdosfs}} を用いてEFIシステムパーティション上にFATファイルシステムを作成し、 {{Path|/etc/fstab}} へ項目を追加してください。

{{RootCmd|mkdosfs -F 32 -n efi-boot /dev/sda1
|mkdir /boot/efi}}

{{FileBox|filename=/etc/fstab|title=/boot/efi マウント項目の追加|<pre>
/dev/sda1		/boot/efi	vfat		noauto,noatime	1 2
</pre>}}

{{RootCmd|mount /boot/efi}}

{{Note|{{Path|/etc/portage/make.conf}}ファイルにて 環境変数<var>GRUB_PLATFORMS</var> を設定しておくと便利です。これはGRUB2が適切なEFIターゲットを検出する際にどのオプションを用いるかを決定する助けになるでしょう。32ビットUEFIシステムには <code>efi-32</code> を、64ビットシステムには <code>efi-64</code> を利用してください。}}

{{Important|GRUB2を適切にインストールするためには {{c|grub-install}} コマンドを実行する前に、''必ず''EFIディレクトリがマウントされていて、''かつ'' <code>efivars</code> カーネルモジュールもロードされている必要があります}}

==== 代替案: デフォルトのUEFIファームウェアの場所を利用する ====

If the system's UEFI firmware fails to find GRUB2's EFI bootloader file, using the default boot loader location should provide a working solution. This circumvents the boot menu managed by [[Efibootmgr|efibootmgr]] and thus offers reduced functionality, but is less error prone. To do this, verify the EFI partition is mounted at {{Path|/boot/efi}} then copy the file {{Path|grubx64.efi}} located at {{Path|/boot/efi/EFI/gentoo/grubx64.efi}} to {{Path|/boot/efi/EFI/BOOT/BOOTX64.EFI}}. This example assumes a 64-bit UEFI system, adjust accordingly for 32-bit UEFI systems.

== 拡張機能 ==

GRUB2は、その多くの機能によって、非常にパワフルなブートローダーとなっています。サポートされる機能は:

* UEFIパーティションからのブート
* ハイブリッドMBRを必要としない、GPTでパーティションされたドライブからのブート(ハイブリッドMBRは、必要なら互換性と移植性のために有効にできます)
* [[btrfs]] でフォーマットされた {{Path|/boot}} パーティションからのブート
* 初期マウントセットアップのための [[initramfs]] を必要としない、[[btrfs]] raidセットからの直接のブート
* 論理ボリューム管理からの直接のブート(たとえば [[LVM|LVM2]])
* DM-RAID(RAID 0, 1, 4, 5, 6, 9 と 10)をサポートしたブート
* 暗号化されたデバイス(LUKS)からのブート

次にいくつかの項目について詳しく説明します。

=== チェーンロード ===

GRUB2 は GRUB Legacy よりはるかに優れたチェーンロードモードが備わっています。他のブートローダーをチェーンロードするには、 <code>chainloader</code> オプションを利用してください。

{{FileBox|filename=/boot/grub/grub.cfg|title=Chainloading another bootloader|<pre>
menuentry "Custom Super Bootloader Example" {
     insmod part_msdos
     insmod chain
     chainloader (hd1,1)+1
}
</pre>}}

さらなるチェーンロードの情報については [[GRUB2/Chainloading|Chainloading]] サブ記事を参照してください。

=== フレームバッファディスプレイを使う ===

GRUB2で [[framebuffer]] のグラフィカルな表示を利用するには、 <code>truetype</code> USE flag を有効にして再emergeしてください。これによりfont変換ツールの他にデフォルトの True Type フォントがインストールされます。

{{Emerge|--newuse sys-boot/grub:2}}

次に、{{Path|/etc/default/grub}} にあるGRUB2のデフォルト設定ファイルを設定します。例えば、

{{FileBox|filename=/etc/default/grub|title=フレームバッファに関する設定|lang=bash|1=
# 解像度と色深度の設定
GRUB_GFXMODE=1366x768x32
 
# カーネルのロードの際に解像度を保つ
GRUB_GFXPAYLOAD_LINUX=keep
 
# 背景画像の設定
GRUB_BACKGROUND="/boot/grub/bg.png"
 
# grub-mkfontユーティリティで変換したカスタムフォントを使う
GRUB_FONT="/boot/grub/fonts/roboto.pf2"
}}

システムのグラフィックカードがどのディスプレイモードをサポートしているか調べるためには、GRUB2シェルで以下に示すコマンドを使ってください:

{{Cmd|prompt=(grub)|color=white|insmod all_video|videoinfo}}

== トラブルシューティング ==

ほとんどの問題は、正しいパーティションレイアウトを確実に設定することで解決できます。ディスクの最初のパーティションの前に十分な領域を確保するか、任意で確実に"BIOSブートパーティション"が利用できるようにしてください。さらに、{{Path|/boot/grub/grub.cfg}} が {{c|grub-mkconfig}} で正しく生成されているか確認するか、あるいはカスタムのメニュー項目で生成してください。

さらなるGRUB2のトラブルシューティングについては、[[GRUB2/Troubleshooting|Troubleshooting]]サブ記事を参照してください。

=== os-prober and UEFI in chroot ===

The {{Package|sys-boot/os-prober}} utility is used to discover alternate installs, such as Microsoft Windows. To function properly, it needs to have access to information from the live environment's udev to test for the EFI System Partition.

Run these commands in the host environment to provide the required files (example shows Gentoo mounted on {{Path|/mnt/gentoo}} like in the [[Handbook:AMD64|Handbook]]):

{{RootCmd
|mkdir -p /mnt/gentoo/run/udev
|mount -o bind /run/udev /mnt/gentoo/run/udev
|mount --make-rslave /mnt/gentoo/run/udev
}}

== 参考 ==

いくつかのGRUB2の機能について独立のページがあります：

* In [[GRUB2/Chainloading|Chainloading]] GRUB2で他のブートローダーを利用する方法が書かれています。これはデュアルブートやISOファイルのブートを構成する必要がある場合には重要です。
* In [[GRUB2/AdvancedStorage|Advanced storage]] RAIDや論理ボリューム、暗号化ファイルシステムなど、より最新のストレージを利用する際のGRUB2インストール方法や利用方法が書かれています。
* In [[GRUB2/Config_Variables|Configuration variables]] {{Path|/etc/default/grub}} で利用可能なすべての GRUB2 configuration variable がまとめられています。
* In [[GRUB2/Troubleshooting|Troubleshooting]] よくあるGRUB2のエラー（とそれらの解決策）が挙げられています。
* In [[Hybrid_partition_table|Hybrid partition table]] MBR/GPTが混合したハイブリッドパーティションの設定方法と、そのGRUB2での利用方法がまとめられています。

== 外部の情報 ==

さらなる情報については、以下を参照してください:

* [https://www.gnu.org/software/grub/manual/grub.html GNU GRUB 2 manual page]
** [https://www.gnu.org/software/grub/manual/grub.html#Network Network (PXE) section of GRUB2]
* [http://www.rodsbooks.com/gdisk/bios.html Legacy BIOS issues with GPT article]
* [http://www.rodsbooks.com/gdisk/hybrid.html GPT and Hybrid MBR article]
* [http://www.rodsbooks.com/gdisk/ GPT fdisk utility page]
* [https://wiki.archlinux.org/index.php/GRUB2 Arch Linux GRUB2 wiki article]
* [https://fedoraproject.org/wiki/GRUB_2?rd=Grub2#Encountering_the_dreaded_GRUB_2_boot_prompt Fedora GRUB2 wiki article : Encountering the dreaded GRUB2 boot prompt]
* [https://help.ubuntu.com/community/UEFIBooting ubuntu UEFI booting help]
* [http://unix.stackexchange.com/questions/109272/dualboot-freebsd-gentoo-with-grub2-mbr http://unix.stackexchange.com/questions/109272/dualboot-freebsd-gentoo-with-grub2-mbr]
* [http://daniel-lange.com/archives/75-Securing-the-grub-boot-loader.html A blog post entry on locking specific GRUB2 boot entries with a password]


[[Category:Bootloaders]]
