<languages />


{{Metadata|abstract=近年は電力管理が、完全なラップトップを探求する際の判断基準のひとつになっています。しかしながらオペレーティングシステムは、さまざまな省電力機能もサポートしなければなりません。このガイドでは、電力の少ないリソースでも柔軟にかつ自動的な方法で管理する Gentoo 環境のセットアップ方法を示します。}}

近年は電力管理が、完全なラップトップを探求する際の判断基準のひとつになっています。しかしながらオペレーティングシステムは、さまざまな省電力機能もサポートしなければなりません。このガイドでは、電力の少ないリソースでも柔軟にかつ自動的な方法で管理する Gentoo 環境のセットアップ方法を示します。

== はじめに ==

=== この文書について ===

この文書では、あなたのラップトップに電力管理機能をセットアップする方法を説明しています。このガイドのいくつかの情報は、サーバの電力管理にも当てはまるかもしれません。しかしこの文書はそのような場合を意図していませんので、このガイドをラップトップシステム以外に当てはめる際には留意してください。 

この文書中では、laptop mode tools について主に着目しています。各機能が完全に揃っているからです。しかしながら個々の設定においては、より詳細なアプローチができるであろう他のツールにも言及しています。そのようなときには、laptop mode tools の機能を無効にして、双方のツールが同じリソースの制御を取り合わないようにしなければなりません。 

=== laptop_mode について ===

<code>laptop_mode</code> の設定では、カーネル内のコンフィグレーション設定で、ディスクの回転を適切に抑える（また、要求された処理の直後すぐに始動しないようにする）入出力の最適化を行います。 

=== laptop-mode-tools について ===

''Laptop Mode Tools'' は、ソフトウェアパッケージ ( <code>app-laptop/laptop-mode-tools</code> ) で、ユーザは省電力機能を最適化することができます。Linux カーネル内の<code>laptop_mode</code> の設定を管理することができますし、システムの電力関連設定を調整するその他の機能も利用することができます。 

== Linux カーネル コンフィグレーション ==

=== 最小限のカーネルセットアップ ===

Portage には、異なるカーネルソースが複数あります。<code>gentoo-sources</code>の利用をおすすめしますが、もしも高度な休止状態（ハイバネーション）のサポートを求めるのならば <code>tuxonice-sources</code> が必要かもしれません。Linuxカーネルにおいて適切な電力管理機能を有効化するには、少なくとも以下の設定を有効にします。 

{{Kernel|電力管理のための最小限のカーネルセットアップ|<pre>
General setup --->
  [*] Configure standard kernel features (expert users) --->
  
Power management and ACPI options --->
  [*] Run-time PM core functionality
  [*] ACPI (Advanced Configuration and Power Interface) Support --->
    <*> AC Adapter
    <*> Battery
    -*- Button
    -*- Video
    <*> Fan
    <*> Processor
    <*> Thermal Zone
    [*] Power Management Timer Support
  
  [*] CPU Frequency scaling --->
    [*] CPU Frequency scaling
    <*>   'performance' governor
    <*>   'powersave' governor
    <*>   'userspace' governor
    <*>   'ondemand' governor
    <*>   'conservative' governor
    <*> ACPI Processor P-States driver
</pre>
}}

あなたの CPU に対応する CPU 周波数調整ドライバも有効にすることを忘れないでください。その設定は、上記 ''ACPI Processor P-States driver'' の直後にあります。 

（必要ならば）新たなカーネルのビルドおよびインストールをして、再起動します。 

== Laptop Mode Tools の利用 ==

=== インストール ===

''Laptop Mode Tools'' ソフトウェアのインストールが <code>emerge laptop-mode-tools</code> で容易にできることは驚くに値しないでしょう。しかし、このパッケージは、USE フラグを設定することで、追加の機能も選択することができます。ですからまず、対応している USE フラグと、このパッケージに適用される意義を確認しましょう。 

{| class="wikitable" style="text-align: left;" 
|- 
! USE フラグ
! 説明
! この場合におすすめ
|- 
| acpi
| <code>sys-power/acpid</code> にもとづいてシステムの変化を捕捉し、省電力機能を自動的に有効・無効にします。
| あなたのラップトップがそれほど古くない場合（2003年ころ以降）
|- 
| apm
| <code>sys-apps/apmd</code> にもとづいてシステムの変化を捕捉し、省電力機能を自動的に有効および無効にします。
| あなたのラップトップがとても古い場合
|- 
| bluetooth
| <code>net-wireless/bluez</code> にもとづいて、 <code>laptop-mode-tools</code> の bluetooth 設定管理を有効にします。（電池の状態に応じて、サービスを有効・無効にします。
| あなたのラップトップ（およびカーネル）が bluetooth に対応している場合
|- 
| scsi
| <code>sys-apps/sdparm</code> にもとづいて、 <code>laptop-mode-tools</code> の SCSI ディスク (ここでは SATA を''含まない'') の管理を有効にします。
| あなたのラップトップがSCSIディスクを利用している場合
|-
|}

ご覧のとおり、<code>acpi</code> と <code>apm</code> の2つの USE フラグは競合しているようにみえます。どう扱うべきでしょうか? 

* <code>apm</code> USE フラグは、''Advanced Power Management'' をサポートします。これは、より古い(2000年以前)のシステム電力管理機能の標準でした。
* <code>acpi</code> USE フラグは、 ''Advanced Configuration and Power Interface'' をサポートします。APM の後継です。現在的なすべてのラップトップが ACPI に対応しています。

あなたのシステムによって、<code>acpi</code> もしくは <code>apm</code> の組合せが必要です。この説明の最後として申し上げると、憶測ですが、あなたのラップトップは ACPI を利用している程度に最近のものなのではないかと思います。 

さて、 USE フラグをセットしたら、 <code>laptop-mode-tools</code> をインストールしましょう。 

{{Emerge|laptop-mode-tools}}

=== 設定 ===

<code>laptop-mode-tools</code>をシステムにインストールするだけでは、必要であろう電源管理の機能は自動的に有効にはなりません。
{{Path|/etc/laptop-mode/laptop-mode.conf}}を見て、まずはこのパッケージの設定をしてください。
このファイルはメインの設定ファイルで(コメントで)説明が豊富に付いています。 

But it is not the only configuration file to work with. The Laptop Mode Tools package supports plugins (or modules) which have their own configuration file(s). These files are located in {{Path|/etc/laptop-mode/conf.d}} and are named after the module they represent (such as {{Path|intel-sata-powermgmt.conf}} ). 

Now, one of the important settings in each configuration file is if the Laptop Mode Tools package should govern a particular setting or not. This is important when you want to combine <code>laptop-mode-tools</code> with other services like <code>cpufreqd</code> . In this example case, you will need to set <code>CONTROL_CPU_FREQUENCY=0</code> : 

{{File|/etc/laptop-mode/conf.d/cpufreq.conf||<pre>
CONTROL_CPU_FREQUENCY=0
</pre>
}}

The next few sections will help you configure <code>laptop-mode-tools</code> to suit your needs. When you are finished, start the <code>laptop_mode</code> service and make sure it is started when you boot up your system. 

{{RootCmd|/etc/init.d/laptop_mode start
|rc-update add laptop_mode default}}

=== laptop-mode-tools はどのように動作するのか ===

When running the <code>laptop_mode</code> service, the software will check in which state your system is in. The states are defined as: 

*  ''Battery'' , which is active when the system is running on battery power; the configuration files use the <code>BATT_</code> prefix for settings related to this state
*  ''AC'' , which is active when the system is running on AC power; the configuration files use the <code>AC_</code> prefix for settings related to this state
*  ''Laptop Mode'' , which is active when ''laptop mode'' is enabled; the configuration files use the <code>LM_</code> prefix for settings related to this state
*  ''No Laptop Mode'' , which is active when ''laptop mode'' is disabled; the configuration files use the <code>NOLM_</code> prefix for settings related to this state

The <code>AC/BATT_</code> and <code>LM/NOLM_</code> prefixes can be combined (so you can have a <code>AC_LM_</code> prefix). 

When the <code>laptop_mode</code> service is started, it will switch modes based on events that occur (and of course based on the configuration settings). For instance, the setting <code>ENABLE_LAPTOP_MODE_ON_BATTERY=1</code> will make sure that the laptop mode tools switch to ''laptop mode'' when battery power is used. If that is the case, then the settings starting with <code>LM_</code> , <code>LM_BATT_</code> , <code>BATT_LM_</code> and <code>BATT_</code> will be used. 

To make sure settings to not collide, it is not allowed to have overlapping settings. In the next example, the first set (for <code>CPU_MAXFREQ</code> ) is valid, but the second one (for <code>CPU_GOVERNOR</code> ) isn't. 

{{Code|Colliding settings|<pre>
## Valid set
BATT_CPU_MAXFREQ=fastest
LM_AC_CPU_MAXFREQ=fastest
NOLM_AC_CPU_MAXFREQ=fastest
  
## Invalid set
BATT_CPU_MINFREQ=fastest
LM_AC_CPU_MINFREQ=fastest
# The following includes AC and BATT, but BATT is already defined
NOLM_CPU_MINFREQ=fastest
</pre>
}}

=== CPU 周波数管理の設定 ===

The support for CPU frequency management in the laptop mode tools allows switching frequencies. It supports setting the CPU frequency governor, minimum frequency and maximum frequency. The configuration file used here is {{Path|/etc/laptop-mode/conf.d/cpufreq.conf}} . 

The ''CPU frequency governor'' is a kernel-level policy that defines how the kernel will select the CPU frequency. We already selected the governors we want to use in the kernel configuration earlier. Let's recap: 

*  <code>performance</code> always picks the highest frequency
*  <code>powersave</code> always picks the lowest frequency
*  <code>userspace</code> does not pick anything, but let the user decide (or any process that the user is running that will decide for the user)
*  <code>ondemand</code> will scale the CPU frequency up to the highest frequency when load is available
*  <code>conservative</code> will scale the CPU frequency up gradually when load is available

When switching between AC or battery, or (no) laptop mode, the appropriate governor (as well as its minimum and maximum frequency) is selected. 

=== ディスプレイの明るさの設定 ===

With {{Path|/etc/laptop-mode/conf.d/lcd-brightness.conf}} , you can have the laptop mode tools govern the brightness of your LCD screen. 

The file currently  uses the {{Path|/proc/acpi/video/VID/LCD/brightness}} file ([https://bugs.gentoo.org/show_bug.cgi?id=499544 bug 499544]) to set brightness values. Recent kernels do not provide this anymore - you will need to adjust this to {{Path|/sys/class/backlight/acpi_video0/brightness}} instead. 

The values you can use are between 0 and 15, with 0 being the lowest brightness value.

=== その他のサービスを設定する ===

An interesting feature of <code>laptop-mode-tools</code> is to support reloading particular services (like the system logger) after switching its configuration file. This is handled through {{Path|/etc/laptop-mode/conf.d/configuration-file-control.conf}} . 

If enabled, the <code>laptop_mode</code> application will switch the configuration file(s) of the mentioned services with the same file, but suffixed with {{Path|-nolm-ac}} , {{Path|-lm-ac}} or {{Path|-batt}} . It willl then signal or reload the appropriate services so they can use the new configuration file. 

== cpufreqd の利用 ==

{{Warning|package sys-power/cpufreqd is deprecated and has been removed from the portage tree}}

=== インストール ===

The <code>cpufreqd</code> application allows you to manage CPU frequencies in a more granular approach then what <code>laptop-mode-tools</code> supports. But before we dive into the installation of <code>cpufreqd</code> , let's first look at the USE flags it supports. 

{| class="wikitable" style="text-align: left;" 
|- 
! USE flag
! Description
! Suggested when...
|- 
| acpi
| Enable support for ACPI, allowing <code>cpufreqd</code> to be notified about specific events as well as govern power through the ACPI interface
| your laptop is not too old (~ year 2003 and later)
|- 
| apm
| Enable support for APM, allowing <code>cpufreqd</code> to be notified about specific events as well as govern power through the APM interface
| your laptop is very old
|- 
| lm_sensors
| Enable support for the Linux hardware sensors (through <code>sys-apps/lm_sensors</code> ), allowing to switch profiles based on hardware sensor results
| you want to use advanced events through lm_sensors
|- 
| nforce2
| Enable support for NForce, allowing <code>cpufreqd</code> to change the NForce FSB clock and video card frequency
| you have an NVidia graphical card based on the NForce chipset
|- 
| nvidia
| Enable support for NVidia graphical card configuration (through the NVidia ''nvclock'' interface), allowing <code>cpufreqd</code> to change the video card frequency of NVidia graphical cards
| you have an NVidia graphical card
|- 
| pmu
| Enable the Power Management Unit plug-in of <code>cpufreqd</code> . This allows the software to poll the Linux kernel Power Supply interface, getting more detailed information on battery charge.
| your laptop does not support ACPI or APM
|-
|}

The USE flags <code>acpi</code> , <code>apm</code> and <code>pmu</code> overlap, so you should only have one active. If your laptop is sufficiently recent, <code>acpi</code> is your best bet. If not, <code>apm</code> offers all that is needed. When even APM isn't supported, you can try <code>pmu</code> . 

With the USE flags configured, it is time to install <code>cpufreqd</code> . 

{{Emerge|cpufreqd}}

=== 設定 ===

The <code>cpufreqd</code> application monitors the status of the system through several plugins. Based on the feedback it receives from those plugins, it will adjust the policy used to govern the CPU frequency. 

<code>cpufreqd</code> can be configured by editing {{Path|/etc/cpufreqd.conf}} . It contains three different sections: 

# The <code>[General]...[/General]</code> section contains general configuration information
# The <code>[Profile]...[/Profile]</code> section defines the policies that the <code>cpufreqd</code> daemon can switch to. The section is very similar to the information you use when manually setting the CPU frequency policy using <code>cpufreq-set</code> .
# The <code>[Rule]...[/Rule]</code> section is the work-horse of the <code>cpufreqd</code> daemon, defining when the daemon decides to switch to a different profile.

Let's take a quick look at an example rule. 

{{File|/etc/cpufreqd.conf|Sample cpufreqd rule|<pre>
[...]
  
[Profile]
name=On Demand High
minfreq=40%
maxfreq=100%
policy=ondemand
[/Profile]
  
[Rule]
name=AC Off - High Power
ac=off
battery_interval=70-100
profile=On Demand High
[/Rule]
  
[...]
</pre>
}}

In the above example, <code>cpufreqd</code> will switch the system to the ''On Demand High'' profile (also shown in the above excerpt). This profile by itself uses the <code>ondemand</code> governor with a minimum frequency of 40% (iow, a CPU of 2 GHz will have by this policy a minimum frequency of 800 MHz). 

As you can see, the <code>cpufreqd</code> application can offer a more granular approach on CPU frequency scaling. But not only that, you can tweak the CPU frequency scaling based on various other metrics available. The default configuration offers a sample rule for when you watch a movie, where you want maximum performance, unless the CPU temperature is getting too high. 

When you have configured <code>cpufreqd</code> , it is time to start it (and make sure the service is loaded automatically). Make sure that CPU frequency handling by other tools (like <code>laptop-mode-tools</code> ) is disabled! 

{{RootCmd|rc-update add cpufreqd default
|/etc/init.d/cpufreqd start}}

== Resources ==

=== ツール ===

*  [http://samwel.tk/laptop_mode/ Laptop Mode Tools Homepage] , includes [http://samwel.tk/laptop_mode/laptop_mode About laptop mode] .
*  [https://01.org/powertop PowerTOP] , an interactive application helping users to find out which processes are forcing wakeups on the CPU most often.

=== 記事およびガイド ===

* A ThinkWiki article on [http://www.thinkwiki.org/wiki/How_to_reduce_power_consumption How to reduce power consumption] (on Linux). This article offers an exhaustive list of measures one can take. However, it should be noted that the laptop mode tools implements the majority of these (if properly configured).

== 謝辞 ==

このガイドに対する以下の作者及び編集者の貢献にお礼申しあげます。


* swift

[[Category:Power management]]
