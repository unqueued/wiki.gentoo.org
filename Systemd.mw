{{Lowercase title}}

[http://freedesktop.org/wiki/Software/systemd systemd] is a modern sysvinit & RC replacement for Linux systems. It is supported in Gentoo as an alternate init system.

= Installation =

== Prerequisites: kernel ==

systemd makes use of many modern Linux kernel features. Right now, the lower bound on kernel version is set in the ebuild to 2.6.38. In addition to that, the following kernel configuration options should be enabled:

{{Kernel|Kernel features required or suggested by systemd|<pre>
General setup  --->
    [*] Control Group support
Device Drivers --->
    Generic Driver Options  --->
        [*] Maintain a devtmpfs filesystem to mount at /dev
File systems --->
    [*] Filesystem wide access notification
    <M> Kernel automounter version 4 support (also supports v3)
Networking support --->
    Networking options --->
        TCP/IP networking --->
            <M> The IPv6 protocol
</pre>}}

== Prerequisites: udev ==

Newer versions of systemd (> 29) require newer udev than one available in Gentoo right now. In order to use them, you have to use live udev ebuild and masked systemd ebuilds:

{{RootCmd|flaggie sys-apps/systemd sys-fs/udev +**}}

You can still use systemd-29 without keywording those packages.

== Installing ==

Installing systemd is as simple as emerging {{Package|sys-apps/systemd}}.

{{RootCmd|emerge sys-apps/systemd}}

== Enabling ==

Before doing this, please [[#Configuration|configure]] systemd first.

In order to run systemd, you have to switch the ''init'' executable kernel (or your initramfs) uses.

With simple kernels, the ''init=/bin/systemd'' argument should be added to the kernel command-line. An example excerpt from ''grub.conf'' would look like:

{{File|/boot/grub/grub.conf|Example GRUB config for systemd with simple kernel|<pre>
title=Gentoo with systemd
root (hd0,0)
kernel /vmlinuz root=/dev/sda2 init=/bin/systemd
</pre>}}

When using initramfs, other command-line argument will be needed. For example, genkernel uses ''real_init='' there:

{{File|/boot/grub/grub.conf|Example GRUB config for systemd with genkernel|<pre>
title=Gentoo with systemd
root (hd0,0)
kernel /my-genkernel... root=/dev/hda2 real_init=/bin/systemd
initrd /initramfs-genkernel...
</pre>}}

= Configuration =

== Listing available services ==

All global service files are installed in ''/lib/systemd/system'' directory. Thus, the simplest way of looking up available service units is listing that directory:

{{RootCmd|ls /lib/systemd/system|output=<pre>
acpid.service                            runlevel2.target
alsa-restore.service                     runlevel2.target.wants
alsa-store.service                       runlevel3.target
autovt@.service                          runlevel3.target.wants
avahi-daemon.service                     runlevel4.target
avahi-daemon.socket                      runlevel4.target.wants
avahi-dnsconfd.service                   runlevel5.target
basic.target                             runlevel5.target.wants
...
</pre>}}

The following file suffixes are of interest:
* ''.service'' - plain service files (e.g. ones just running a daemon directly),
* ''.socket'' - socket listeners (much like ''inetd''),
* ''.path'' - filesystem triggers for services (running services when files change etc.).

Alternatively, ''systemctl'' tool can be used to list all services (including implicit ones):

{{RootCmd|systemctl --all --full}}

And finally, if {{Package|sys-apps/systemd}} was built with ''USE=gtk'', the ''systemadm'' graphical tool can be used.

== Installing custom service files ==

Any custom service files should be copied to ''/etc/systemd/system'' directory. The ''/lib/systemd/system'' directory is reserved for service files installed by ebuilds.

== Enabling and disabling services ==

The usual way of enabling a service is using:

{{RootCmd|systemctl enable foo.service}}

Services can be disabled likewise:

{{RootCmd|systemctl disable foo.service}}

These commands enable services using their default name in default target (both specified in ''Install'' section of the service file). However, sometimes services either don't provide that information or you want to use another name/target.

== Enabling a service under a custom name ==

This is especially a case for template services -- services in which part of the name following ''@'' (at sign) is used as a parameter to the service. This is often used to specify the terminal on which getty will run.

To enable a service under custom name, you have to create a symlink to the service file in correct ''/etc/systemd/system/*.wants'' directory. The name of that directory can either specify a target or another service which will depend on the new one.

For example, to enable stand-alone {{Package|net-wireless/wpa_supplicant}} on ''wlan0'', type:

{{RootCmd|ln -s /lib/systemd/system/wpa_supplicant@.service /etc/systemd/system/multi-user.target.wants/wpa_supplicant@wlan0.service}}

To disable the service, just remove the symlink:

{{RootCmd|rm /etc/systemd/system/multi-user.target.wants/wpa_supplicant@wlan0.service}}

[[Category:Core system]]
