{{Lowercase title}}
{{InfoBox stack
|{{InfoBox homepage|http://freedesktop.org/wiki/Software/systemd|header=true}}
|{{InfoBox wikipedia|systemd}}
}}
'''systemd''' is a modern sysvinit & RC replacement for Linux systems. It is supported in Gentoo as an alternate init system.

See also: [[Comparison of init systems]]

== Installation ==
{{Note|If you're only updating, see the [[/changelog|changelog]].}}

=== Prerequisites: kernel ===
systemd makes use of many modern Linux kernel features. Right now, the lower bound on kernel version is set in the ebuild to 2.6.39. In addition to that, the following kernel configuration options should be enabled:
{{Kernel|Mandatory options|<pre>
General setup  --->
    [*] Control Group support
Device Drivers --->
    Generic Driver Options  --->
        [*] Maintain a devtmpfs filesystem to mount at /dev
File systems --->
    <*> Kernel automounter version 4 support (also supports v3)
</pre>}}

{{Kernel|Optional options|<pre>
File systems --->
    [*] Filesystem wide access notification
Networking support --->
    Networking options --->
        TCP/IP networking --->
            <*> The IPv6 protocol
</pre>}}

=== Prerequisites: filesystem ===

==== /run directory ====
The {{Path|/run}} directory is used by systemd (and some applications) as a non-persistent storage for runtime data like pidfiles, sockets and state files.

The systemd package will create {{Path|/run}} directory itself. However, please note that this change will trigger automatic mounting of it in OpenRC as well, and may trigger using it by different software packages.

==== /etc/mtab symlink ====
Upstream suggests that the {{Path|/etc/mtab}} file should be a symlink to {{Path|/proc/self/mounts}}. This is not obligatory and can create problems with ''mount -o user'' and NFS mounts.

To create the symlink:
{{RootCmd|ln -sf /proc/self/mounts /etc/mtab}}

==== /etc/machine-id ====
Often systemd guides mention creating the file {{Path|/etc/machine-id}} as a global replacement for the D-Bus specific {{Path|/var/lib/dbus/machine-id}}. This is already done in the {{Package|sys-apps/dbus}} package.

=== Software ===
{{Note|systemd is still masked right now. You will need to unmask it and it's dependencies.}}
Portage knows the local USE flag ''systemd'' for enabling support for systemd in other packages. Enabling this USE flag will pull in {{Package|sys-apps/systemd}} automatically:
{{File|/etc/portage/make.conf||<pre>
USE="... systemd ..."
</pre>}}

The USE flags of systemd are:
{{USEflag|package=sys-apps/systemd
|acl+yes
|audit
|cryptsetup
|lzma
|pam+yes
|selinux
|tcpd+yes
}}

After setting this you want to update your system so the changes take effect:
{{RootCmd|emerge --ask --changed-use --deep world}}

== Configuration ==

=== Shared configuration files===
systemd comes with some degree of OpenRC compatibility, so it will gracefully read most of the base system options from its files. This includes the following files:
* {{Path|/etc/conf.d/hostname}} for hostname,
* {{Path|/etc/profile.env}} for locale (created by ''env-update'' from ''/etc/env.d''),
* {{Path|/etc/rc.conf}} for the ''unicode'' console setting,
* {{Path|/etc/conf.d/consolefont}} for the console font settings,
* {{Path|/etc/conf.d/keymaps}} for the keymap setting (but only the actual ''keymap'').

Additionally, the following configuration directories are both used by OpenRC and systemd:
* {{Path|/etc/modules-load.d}},
* {{Path|/etc/sysctl.d}},
* {{Path|/etc/binfmt.d}}

Alternatively, you can migrate your system to use [[#Native systemd configuration files|Native systemd configuration files]]. Bear in mind that upstream has made it clear that at some point in the future it will stop supporting configuration files for specific distributions, and it will only support the native systemd configuration files. If you plan to use systemd exclusively, please use its native configuration files.

=== Native configuration files ===
systemd supports a few system configuration files to set the most basic system details.

;/etc/hostname: A trivial file containing the system hostname. Replaces {{Path|/etc/conf.d/hostname}}.

{{File|/etc/hostname|Setting an example hostname of ''frobnicator''|<pre>
frobnicator
</pre>}}

;/etc/vconsole.conf: Configuration file specifying console font and keymap. Replaces {{Path|/etc/conf.d/consolefont}} and {{Path|/etc/conf.d/keymaps}}, yet it doesn't support all features of those init.d scripts.

{{File|/etc/vconsole.conf|An example, simple console configuration|<pre>
KEYMAP=pl2
FONT=LatArCyrHeb-16
</pre>}}

;/etc/locale.conf: Configuration file for locale settings. The file supports same syntax as shell locale variables, so you can basically rename {{Path|/etc/env.d/02locale}} or a similar file.

{{File|/etc/locale.conf|An example for utf8|<pre>
LANG="pl_PL.UTF-8"
LC_ALL="pl_PL.UTF-8"
</pre>}}

;/etc/machine-info: Configuration file for local machine informations

{{File|/etc/machine-info||<pre>
PRETTY_NAME="Larry's Computer"
ICON_NAME="computer-laptop"
</pre>}}

;/etc/os-release: Configuration file for operation system identification.

{{File|/etc/os-release||<pre>
NAME="Gentoo"
ID="gentoo"
PRETTY_NAME="Gentoo Linux"
ANSI_COLOR="1;34"
</pre>}}

=== systemd-logind & pam_systemd ===
systemd intends to provide an integrated [[ConsoleKit]] replacement called logind. Some applications (like [[NetworkManager]] and {{Package|sys-auth/polkit}}) provide support for it through ''USE=systemd''. Please note that this flag usually disables ConsoleKit support as well and thus packages may stop working as expected if the procedure described below is not fulfilled.

In order to enable session tracking for systemd-logind, you have to enable the ''pam_systemd'' PAM module first. This can be done using USE=systemd on {{Package|sys-auth/pambase}}.

Except for tracking user logins (like ConsoleKit does), this will cause all user processes to belong to a cgroup. You can add ''controllers=...'' to provide additional cgroup controllers (like ''cpu'' for CPU load balancing). You can also add ''kill-session-processes=1'' to ensure that all processes spawned by user are killed on logout. For more information, take a look at ''man pam_systemd''.

=== Enabling ===
In order to run systemd, you have to switch the ''init'' executable kernel (or your initramfs) uses.

With simple kernels, the ''init=/bin/systemd'' argument should be added to the kernel command-line. An example excerpt from ''grub.conf'' would look like:

{{File|/boot/grub/grub.conf|Example GRUB config for systemd with simple kernel|<pre>
title=Gentoo with systemd
root (hd0,0)
kernel /vmlinuz root=/dev/sda2 init=/bin/systemd
</pre>}}

When using initramfs, other command-line argument will be needed. For example, genkernel uses ''real_init='' there:

{{File|/boot/grub/grub.conf|Example GRUB config for systemd with genkernel|<pre>
title=Gentoo with systemd
root (hd0,0)
kernel /my-genkernel... root=/dev/hda2 real_init=/bin/systemd
initrd /initramfs-genkernel...
</pre>}}

=== Listing available services ===
All global service files are installed in {{Path|/usr/lib/systemd/system}}. Thus, the simplest way of looking up available service units is listing that directory:

{{RootCmd|ls /usr/lib/systemd/system|output=<pre>
acpid.service                            runlevel2.target
alsa-restore.service                     runlevel2.target.wants
alsa-store.service                       runlevel3.target
autovt@.service                          runlevel3.target.wants
avahi-daemon.service                     runlevel4.target
avahi-daemon.socket                      runlevel4.target.wants
avahi-dnsconfd.service                   runlevel5.target
basic.target                             runlevel5.target.wants
...
</pre>}}

The following file suffixes are of interest:
* ''.service'' - plain service files (e.g. ones just running a daemon directly),
* ''.socket'' - socket listeners (much like ''inetd''),
* ''.path'' - filesystem triggers for services (running services when files change etc.).

Alternatively, ''systemctl'' tool can be used to list all services (including implicit ones):
{{RootCmd|systemctl --all --full}}

And finally the ''systemadm'' graphical tool can be used. It can be installed with the {{Package|sys-apps/systemd-ui}} package.

=== Installing custom service files ===
Any custom service files should be copied to the {{Path|/etc/systemd/system}} directory. The {{Path|/usr/lib/systemd/system}} directory is reserved for service files installed by ebuilds.

=== Enabling and disabling services ===
The usual way of enabling a service is using
{{RootCmd|systemctl enable foo.service}}

Services can be disabled likewise:
{{RootCmd|systemctl disable foo.service}}

These commands enable services using their default name in default target (both specified in ''Install'' section of the service file). However, sometimes services either don't provide that information or you want to use another name/target.

=== Enabling a service under a custom name ===
This is especially a case for template services -- services in which part of the name following ''@'' (at sign) is used as a parameter to the service. This is often used to specify the terminal on which getty will run.

To enable a service under custom name, you have to create a symlink to the service file in correct {{Path|/etc/systemd/system/*.wants}} directory. The name of that directory can either specify a target or another service which will depend on the new one.

For example, to enable stand-alone {{Package|net-wireless/wpa_supplicant}} on ''wlan0'', type:

{{RootCmd|ln -s /lib/systemd/system/wpa_supplicant@.service /etc/systemd/system/multi-user.target.wants/wpa_supplicant@wlan0.service}}

To disable the service, just remove the symlink:
{{RootCmd|rm /etc/systemd/system/multi-user.target.wants/wpa_supplicant@wlan0.service}}

== Services ==

=== Native services ===
Some of Gentoo packages already install systemd unit files. For these services, it is enough to enable them. A quick summary of packages installing unit files can be seen on [http://qa-reports.gentoo.org/output/eclass-usage/systemd.txt systemd eclass users list].

The following table lists systemd services matching OpenRC ones:
{| class="wikitable" style="text-align: center;"
|+ Migration chart
|-
! scope="col" | Gentoo package
! scope="col" | OpenRC service
! scope="col" | systemd unit 
! scope="col" | Notes
|-
! scope="row" rowspan="30" | {{Package|sys-apps/openrc}}
| bootmisc || systemd-tmpfiles-setup.service || always enabled, uses {{Path|tmpfiles.d}}
|-
| consolefont || systemd-vconsole-setup.service || always enabled, uses {{Path|vconsole.conf}}
|-
| devfs ||  || 
|-
| dmesg ||  || 
|-
| fsck || fsck*.service || pulled in implicitly by mounts
|-
| functions.sh || See note || {{Bug|373219}}
|-
| hostname || (builtin) || {{Path|/etc/hostname}}
|-
| hwclock ||  || 
|-
| keymaps || systemd-vconsole-setup.service || always enabled, uses {{Path|vconsole.conf}}
|-
| killprocs ||  || 
|-
| local ||  || 
|-
| localmount || local-fs.target || actual units are created implicitly from fstab
|-
| modules || systemd-modules-load.service || always enabled, uses {{Path|/etc/modules-load.d/*.conf}}
|-
| mount-ro ||  || 
|-
| mtab ||  || 
|-
| net.lo ||  || 
|-
| netmount || remote-fs.target || 
|-
| network ||  || 
|-
| numlock ||  || 
|-
| procfs || (builtin) || 
|-
| root || remount-rootfs.service || 
|-
| savecache || n/a || OpenRC internals
|-
| staticroute ||  || 
|-
| swap || swap.target || actual units are created implicitly from fstab
|-
| swclock ||  || 
|-
| sysctl || systemd-sysctl.service || {{Path|sysctl.conf}} and {{Path|sysctl.d/}}
|-
| sysfs || (builtin) || 
|-
| termencoding || systemd-vconsole-setup.service || always enabled, uses {{Path|vconsole.conf}}
|-
| scope="row" rowspan="2" | urandom
| systemd-random-seed-load.service || 
|-
| systemd-random-seed-save.service || 
|-
! scope="row" | {{Package|app-admin/rsyslog}}
| rsyslog || rsyslog.service || 
|-
! scope="row" rowspan="2" | {{Package|media-sound/alsa-utils}}
| scope="row" rowspan="2" | alsasound
| alsa-store.service || (enabled by default)
|-
| alsa-restore.socket || (enabled by default)
|-
! scope="row" | {{Package|net-misc/dhcpcd}}
| dhcpcd || dhcpcd.service || 
|-
! scope="row" rowspan="2" | {{Package|net-misc/openssh}}
| scope="row" rowspan="2" | sshd
| sshd.service || runs sshd as a daemon
|-
| sshd.socket || runs sshd on a inetd-like basis (for each incoming connection)
|-
! scope="row" rowspan="2" | {{Package|net-misc/wpa_supplicant}}
| scope="row" rowspan="2" | wpa-supplicant
| wpa_supplicant.service || D-Bus controlled daemon (e.g. for NetworkManager)
|-
| wpa_supplicant@.service || interface-specific wpa_supplicant (used like {{Path|wpa_supplicant@wlan0.service}})
|-
! scope="row" rowspan="3" | {{Package|net-print/cups}}
| scope="row" rowspan="3" | cupsd
| cups.service || classic on-boot start up service
|-
| cups.socket
| scope="row" rowspan="2" | socket and path activation (cups only started on-demand)
|-
| cups.path ||
|-
! scope="row" | {{Package|net-wireless/bluez}}
| bluetooth || bluetooth.service || 
|-
! scope="row" rowspan="2" | {{Package|sys-apps/dbus}}
| scope="row" rowspan="2" | dbus
| dbus.service || 
|-
| dbus.socket || 
|-
! scope="row" | {{Package|sys-apps/irqbalance}}
| irqbalance || irqbalance.service || supports daemon mode only
|-
! scope="row" rowspan="4" | {{Package|sys-fs/udev}}
| udev || udev.service || 
|-
| udev-mount || (builtin) || <tt>/dev</tt> is mounted as tmpfs
|-
| udev-postmount || udev-trigger.service || 
|-
| || udev-settle.service || 
|-
! scope="row" | {{Package|sys-power/acpid}}
| acpid || acpid.service || 
|-
! scope="row" | {{Package|x11-apps/xdm}}
| (xdm) || xdm.service || OpenRC uses common xdm init.d installed by {{Package|x11-base/xorg-server}}
|}

=== OpenRC services ===
Although systemd originally intended to support running old init.d scripts, that support is not suited well for a dependency-based RC like OpenRC and thus is completely disabled on Gentoo. OpenRC provides additional measures to ensure that init.d scripts can't be run when OpenRC was not used to boot the system (otherwise the results would be unpredictable).

== Troubleshooting ==
* {{Bug|systemd|search=package}}
* {{Bug|systemd|search=product|site=fdo}}

=== Enable debug mode ===
To get more informations you need to set the following in {{Path|/etc/systemd/system.conf}}:
{{File|/etc/systemd/system.conf||
LogLevel{{=}}debug
}}

== External resources ==
* [http://www.freedesktop.org/wiki/Software/systemd/FrequentlyAskedQuestions FAQ]
* [http://www.freedesktop.org/wiki/Software/systemd/TipsAndTricks Tips and tricks]

[[Category:Core system]]
