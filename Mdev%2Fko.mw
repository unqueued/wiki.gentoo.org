<languages />
{{Lowercase title}}

이 페이지를 작성한 목적은 리눅스의 [[udev/ko|udev]] 를 mdev로 바꾸는 방법을 문서로 남겨, [[initramfs/ko|initramfs]] 없이도 별도의 {{Path|/usr}} 분할 영역을 만들 수 있게 하는데 있습니다. 작성자는 IceWM을 창 관리자로 하는 젠투 리눅스 배포판을 사용합니다. 여기 나와있는 설명에는 설정 조정 방법과 다른 배포판에 적용하는 방법도 들어있습니다.

== 시스템에서 mdev가 동작할까요? ==

{{c|mdev}} 프로그램은 완전한 구색을 갖춘 데스크톱 환경을 사용하지 않는 시스템 같은 곳에 알맞습니다. 참고로 데스크톱 환경에서는 아비워드, 파이어폭스, 김프, 그뉴메릭, 등을 꼭 실행할 필요는 없습니다. 그러나 KMail 같은 KOffice 프로그램은 KDE에 붙어 나옵니다.  일반적으로 KDE나 그놈을 사용할 때 {{c|mdev}}는 적합하지 않습니다. 또한 [[LVM]]을 함께 사용하면 문제가 생길 수도 있습니다.

기본 젠투 프로파일을 활용하면 매우 잘 동작합니다:

* ''default/linux/x86/13.0''
* ''default/linux/amd64/13.0''

다음 명령으로 현재 사용하는 프로파일을 확인하십시오:

{{Cmd|eselect profile list|output=<pre>
Current /etc/portage/make.profile symlink:
  default/linux/amd64/13.0
</pre>}}

{{Note|evdev 최근 버전({{package|x11-drivers/xf86-input-evdev}}로 제공)과 {{package|www-client/chromium}} 에서 udev가 필요합니다. udev가 없으면 빌드할 수 없습니다.}}

젠투 사용자가 udev에 의존하여 시스템을 사용할 수 있는지 확인할 목적으로 한가지 이상의 무결성 검사 진행 사항이 있습니다.

=== 무결성 검사 ===

어떤 꾸러미가 udev에 의존하는지 대략적인 일반 정보를 확인하십시오. 출력 내용은 다음과 비슷해야합니다:

{{Cmd|equery d udev|output=<pre>
 * These packages depend on udev:
media-libs/mesa-9.0.1 (gbm ? virtual/udev)
sys-apps/hwids-20130329 (udev ? >=virtual/udev-197-r1)
sys-apps/util-linux-2.22.2 (udev ? virtual/udev)
virtual/dev-manager-0 (virtual/udev)
x11-base/xorg-server-1.13.4 (udev ? >=virtual/udev-150)
x11-drivers/xf86-video-intel-2.20.13 (udev ? virtual/udev)
x11-libs/cairo-1.10.2-r3 (drm ? >=virtual/udev-136)
</pre>}}

다음 줄을 {{Path|/etc/portage/package.mask/mdev}}(아직 없다면 만들 수 있음) 파일에 추가하십시오:

{{FileBox|filename=/etc/portage/package.mask/mdev|title=Mask away udev|1=
sys-fs/udev
}}

{{Path|/etc/portage/make.conf}}에서 <code>udev</code> USE 플래그를 전체적으로 비활성화하십시오:

{{RootCmd|euse -D udev}}

<code>-udev</code> USE 플래그를 넣어 모든 꾸러미를 다시 빌드하십시오.

{{Emerge|params=-uDNvp|@world}}

{{Package|virtual/dev-manager}}에서 요구하여 포티지에서 udev를 설치할 수 없는 오류만 뜬다면 다음 단계로 진행하십시오. 그렇지 않으면, 시스템에 설치한 하나 이상의 꾸러미에서 {{Package|sys-fs/udev}}에 강 의존성이 걸려있을 수도 있습니다.

== 추가 과정이 필요한 프로그램 ==

=== ATI/AMD 바이너리 블롭 ===

일부 ATI/AMD 라데온 카드에는 바이너리 블롭이 필요합니다. 젠투  {{Package|sys-firmware/radeon-ucode}} 꾸러미에서는 여러가지 각각의 모델을 지원하는 [http://people.freedesktop.org/~ag5f/radeon_ucode/ http://people.freedesktop.org/~ag5f/radeon_ucode/] 사이트에서 모든 바이너리 블롭을 끌어옵니다.

모든 바이너리 블롭을 라이브러리 디렉터리에 넣고 나면, 커널에서 udev에 어떤 바이너리 블롭을 불러올 지 발견하도록 지시해야합니다. 바이너리 블롭 전체 중 하나라도 제거하면, 제대로 된 바이너리 블롭만 라이브러리 디렉터리에 남겨두고 바이너리 블롭을 자동으로 불러옵니다.

=== udev를 mdev로 바꾸기 ===

{{Warning|리눅스 시스템을 부팅하지 못하게 만들 수도 있는 치명적인 과정입니다. 위 방식을 통해 udev 추가 의존성이 나타나지 않을 때만 진행하십시오.}}

=== devtmpfs 커널 설정 ===

devtmpfs [[filesystem/ko|파일 시스템]]을 {{Path|/dev}}에서 지원하고 자동으로 마운트하도록 설정하십시오:

{{KernelBox|title=devtmpfs 활성화|1=
Device Drivers --->
    Generic Driver Options --->
        [*] Maintain a devtmpfs filesystem to mount at /dev
        [*] Automount devtmpfs at /dev, after the kernel mounted the rootfs
}}

설정을 바꾸고 나면 커널을 다시 빌드하십시오 아직 다시 부팅하지 '''마십시오'''.

=== busybox 이머지 ===

{{Package|sys-apps/busybox}} 꾸러미에 <code>mdev</code> USE 플래그를 설정했는지 확인하십시오.  <code>static</code> USE 플래그를 설정하시는 것도 좋습니다. {{Path|/etc/portage/package.use/mdev}} 파일에 다음 줄을 추가하십시오:

{{FileBox|filename=/etc/portage/package.use/mdev|1=
sys-apps/busybox static mdev}}

이제 busybox를 (다시)설치하십시오:

{{Emerge|params+=--oneshot|busybox}}

=== devpts 마운트 ===

devpts 파일 시스템은 비표준 동작을 막습니다. 부팅할 때 또는 {{c|mount -a}} 명령으로 자동 마운트를 진행하지 않습니다. 분명하게 {{c|mount devpts}} 명령을 실행해야 합니다. udev 기반 표준 해결책은 루트 권한으로 {{c|rc-update add udev-mount sysinit}} 명령을 실행하고 시스템 시동 시 udev-mount 스크립트에 마운트 동작을 진행하도록 하는 방법입니다. mdev 기반 시스템에서는 udev를 설치하지 않겠죠. 그래서 대신, {{Path|/etc/local.d/}}에 셸 스크립트로 {{c|mount devpts}} 명령을 넣습니다. 이 예제에서는 {{Path|/etc/local.d/000.start}} 파일을 활용합니다.

udev-mount를 사용하지 않아 발생하는 또다른 문제점은  {{Path|/dev/shm}}을 루트 계정으로만 기록할 수 있다는 점입니다. 기본 동작을 복원하려면 {{c|chmod 1777 /dev/shm}} 명령을 내려야합니다. 이 명령은 시작 스크립트에서도 실행합니다.

{{FileBox|filename=/etc/local.d/000.start|title=부팅할 때 devpts 를 마운트하고  /dev/shm 권한 바꾸기|lang=bash|1=
#!/bin/bash
mount devpts
chmod 1777 /dev/shm
}}

{{Note|{{Path|/etc/local.d/}}에서 활용하는 스크립트는
* 실행 가능해야 하고
* 시작 스크립트는 ".start" 확장자로 끝나야 하고
* 시스템 종료시 실행할 스크립트는 ".stop" 확장자로 끝나야합니다
}}

=== udev 서비스 교체 ===

서비스 목록에서 udev를 제거하고 mdev로 바꾸십시오:

{{RootCmd
|rc-update del udev sysinit
|rc-update add mdev sysinit
}}

=== 재부팅 ===

새 커널로 다시 부팅하십시오. 시스템은 mdev로 동작해야합니다.

=== 정리 ===

시스템에서 udev를 제거하십시오:

{{RootCmd|emerge --unmerge sys-fs/udev}}

{{Path|/etc/portage/package.mask}} 파일(또는 이 디렉터리의 파일)에 <code>sys-fs/udev</code>를 추가하십시오.

이제 udev가 완전히 사라진 머신이 됐습니다.

== CUPS에서 실행할 USB 프린터 설정 ==

=== 부팅 시간 초기에 '찾기' 동작 활성화 ===

{{RootCmd
|cd /bin
|ln -s /bin/busybox find
}}

=== 커널 다시 빌드 ===

For libusb (and hence CUPS) to see the USB ports, set <code>CONFIG_USB_DEVICE_CLASS=y</code> and <code>CONFIG_USB_DEVICEFS=y</code> in the kernel configuration.  Also enable <code>CONFIG_USB_PRINTER=y</code>, despite the injunction in the cups-1.5.2 ebuild to disable it.  When using {{c|make menuconfig}}, these items are found here:

{{KernelBox|title=부팅할 때 USB 장치 생성 활성화|1=
  Device Drivers --->
    [*] Support for Host-side USB
      [*] USB device filesystem [DEPRECATED]
      [*] USB device class-devices [DEPRECATED]
    [*] USB Printer support
}}

{{Note|오래된 항목에 대한 경고에 걱정하지 마십시오.}}

=== 부트로더에 새 커널을 설정하고 새 커널로 다시 부팅하십시오 ===

=== 새 장치 노드 출현 검증 ===

장치 노드 계층은 {{Path|/dev/bus/usb/}}에 나타나야합니다. 프린터를 켜면 프린터 노드가 {{Path|/dev/lp0}}에 나타나야합니다. {{c|lsusb}} 명령은 제대로 동작해야 하며 프린터 세부 정보를 표시해야합니다.

=== CUPS에서 프린터 설정 ===

[[Printing/ko|일반적인 방식]]으로 CUPS를 설정하십시오. CUPS에서 프린터를 찾고 {{Path|parallel:/dev/lp0}}과 같은 URI를 나타내야합니다.

== 문제 해결 ==

=== 부팅 과정에서 리눅스 모듈 빠짐 ===

If Linux modules are required and not loaded on boot after migration, execute one or more of the following solutions:

* {{Path|/etc/conf.d/modules}}에 리눅스 모듈을 추가하십시오

* 리눅스 커널에 모듈을 넣어 컴파일 하시고 요청할 때 불러오지 않게 하십시오.

* 개별 모듈 로더를 작성하십시오:
: {{FileBox|filename=/sbin/hotplug|lang=bash|1=
#!/bin/sh
test -n "$MODALIAS" && modprobe "$MODALIAS";
exec /sbin/mdev
}}

Install it as the hotplug handler instead of mdev.  Note that the earlier this gets executed, the better.  Consider naming this script {{Path|/sbin/hotplug}}, since that is the default value of {{Path|/proc/sys/kernel/hotplug}} (or change the default value in the kernel configuration).

== 기타 ==

{{Note|This set of instructions was originally written by Walter Dnes and hosted at his personal website. It was imported to the Gentoo wiki with some editing by [[User:Short Circuit|Michael Mol]] per discussion on the gentoo-user mailing list.}}

* mdev unlike udev does not support auto-modules loading. Use {{Path|/etc/conf.d/modules}} and put all the modules there that should be loaded (nvidia, wl, etc.). Also, {{Path|/etc/conf.d/modules}} have their own <code>_args</code> variables as it does not support {{Path|/etc/modprobe.d}}. It might be necessary to move the module configuration to this location.

* {{c|mdev -s}} does not create {{Path|/dev/mapper}} nodes. Either manually create them or use {{c|dmsetup mknodes}} from lvm2. It is a good idea to add it after {{c|mdev -s}} in the init script.

* Use mouse and keyboard drivers for xorg inputs. Evdev needs udev to be built. Mousedrv (for the mouse driver) may conflict with the synaptics driver when both are loaded.

* The Kernel configuration option <var>CONFIG_INPUT_EVDEV</var> not only provides the keyboard and mouse as input device events, it will provide lid and button events to acpid as well.

== 추가 참조 ==

* [[Mdev/Automount USB‎]]

== 외부 자료 ==

* [https://github.com/slashbeast/mdev-like-a-boss mdev like a boss] project.



[[Category:Core system]]
[[Category:Daemons]]
