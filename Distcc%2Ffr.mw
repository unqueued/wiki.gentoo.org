<languages />

{{Metadata|abstract=Distcc est un programme conçu pour répartir les tâches de compilation à des hôtes participants sur un réseau.Il comprend un programme serveur, ditccd, et un programme client distcc. Distcc peut travailler de manière transparente avec  ccache, Portage, et automake après un minimum de configuration.}}

[http://distcc.samba.org Distcc]  est un programme conçu pour répartir les tâches de compilation à travers un réseau à des hôtes participants. Il comprend un serveur, <code>distccd</code> et un client, <code>distcc</code>. Distcc peut travailler en toute transparence avec [http://ccache.samba.org ccache], Portage et Automake moyennant un minimum de configuration. 

Si vous envisagez d'utiliser distcc pour vous aider à préparer la chaîne des outils de compilation pour  une installation de Gentoo, lisez d'abord la section [[#Utiliser_Distcc_pour_compiler_les_outils_de_compilation|Utiliser  Distcc pour compiler les outils de compilation]]. 

== Configuration ==

=== Dépendances ===

Afin d'utiliser Distcc, tous les ordinateurs sur votre réseau doivent posséder la même version de GCC. Pour être plus précis, mélanger 3.3.x (avec x variable) est accepté, mais mélanger 3.3.x avec 3.2.x '''peut''' conduire à des erreurs de compilation ou des erreurs en exécution. 

=== Installer Distcc ===

Il y a quelques options dont vous devriez être conscient avec d'installer distcc. 

Distcc arrive avec un surveillant graphique pour surveiller les tâches qu'un ordinateur envoie à l'extérieur pour compilation, activé avec l'option <code>gtk</code> de la variable <code>USE</code>.

{{Emerge|distcc}}

{{Important|Rappelez-vous que vous devez installer distcc sur tous les ordinateurs participants.}}

=== Configurer  Portage pour l'utilisation de  Distcc ===

Configurer Portage pour l'utilisation de distcc est simple. Exécutez les étapes suivantes sur chacun des systèmes qui devraient participer à la compilation distribuée : 

{{Emerge|distcc}}

Maintenant, définissez les variables <code>MAKEOPTS</code> et <code>FEATURES</code> comme indiqué ci-dessous. Une stratégie courante consiste à définir  N à la valeur double du nombre de CPU  (locaux + distants) + 1 et  M comme le nombre de CPU locaux. Au cas où des hôtes distcc ne seraient pas disponibles, ou au cas où les ebuild exigeraient des compilation uniquement locales (par exemple gcc), l'option <code>-lM</code> empêche de créer trop de tâches.

{{File|/etc/portage/make.conf|Setting MAKEOPTS and FEATURES|<pre>
MAKEOPTS="-jN -lM"
FEATURES="distcc"
</pre>
}}

Par exemple, si vous êtes connecté à deux hôtes quadruple cœur qui exécute <code>distcc</code> et que votre PC  local possède un double cœur, alors la variable   <code>MAKEOPTS</code> devrait ressembler à ceci :

{{File|/etc/portage/make.conf|exemple de MAKEOPTS pour  2 quad-core (hôtes) et un dual core (PC local) |<pre>
# 2 remote hosts with 4 cores each = 8 cores remote
# 1 local host with 2 cores = 2 cores local
# total number of cores is 10, so N = 2*10+1 and M=2
MAKEOPTS="-j21 -l2"
</pre>
}}

=== Spécifier les hôtes participants  ===

Utilisez la commande <code>distcc-config</code> pour définir la liste des participants. Voici un exemple de quelques hôtes qui pourraient se trouver dans votre liste : 

{{Code|Exemples de définition d'hôtes participant|<pre>
192.168.0.1          192.168.0.2                       192.168.0.3
192.168.0.1/2        192.168.0.2                       192.168.0.3/10
192.168.0.1:4000/2   192.168.0.2/1                     192.168.0.3:3632/4
@192.168.0.1         @192.168.0.2:/usr/bin/distccd     192.168.0.3
</pre>
}}

Il y a aussi plusieurs autres méthodes pour définir les hôtes. Reportez-vous à la page de manuel pour plus de détail.

Si vous désirez compiler sur la machine locale, vous devriez mettre 'localhost' dans la liste des participants. Inversement, si vous ne voulez pas que la machine locale participe (ce qui est souvent le cas) omettez la de la liste. Sur une machine lente, utiliser localhost peut ralentir les choses. Vérifiez la performance de votre configuration.

Cela peut paraître compliqué, mais dans la plupart des cas, une variante des lignes 1 ou 2 fonctionne. 

Comme la plupart des gens n'utilisent pas les lignes 3 ou 4, reportez-vous à [http://distcc.samba.org/man/distcc_1.html à la documentation de distcc] (man distcc) pour une information plus complète qui inclut comment exécuter distcc à travers une connexion SSH. 

Par exemple, pour définir la première ligne de l'exemple précédent : 

{{RootCmd|/usr/bin/distcc-config --set-hosts "192.168.0.1 192.168.0.2 192.168.0.3"}}

Éditez le fichier  {{Path|/etc/conf.d/distccd}} en fonction de vos besoins et assurez-vous de définir la directive <code>--allow</code> pour seulement les hôtes auxquels vous accordez votre confiance. Pour une sécurité renforcée, vous devriez utiliser  aussi la directive  <code>--listen</code> afin de dire au démon distcc quelles adresses IP écouter (pour des systèmes multi-adresses). Une information complémentaire sur la sécurité avec distcc est disponible à l'adresse [http://distcc.samba.org/security.html Distcc Security Design] . 

{{Important|Il est important d'utiliser --allow et --listen. Lisez la page de manuel de distcc (distccd manpage) ou le document cité précédemment sur la sécurité pour en savoir plus. }}

Maintenant démarrez votre démon distcc sur tous les ordinateurs participants : 

{{RootCmd|rc-update add distccd default
|/etc/init.d/distccd start}}

=== Configurer  Distcc pour qu'il fonctionne avec Automake ===

Ceci est, dans certains cas, plus facile que de configurer Portage. Ce que vous avez à faire, c'est mettre votre variable <code>PATH</code> à jour pour qu'elle inclut  {{Path|/usr/lib/distcc/bin}} en face du répertoire qui contient  <code>gcc</code> ( {{Path|/usr/bin}} ). Cependant, il faut savoir que si vous utilisez ''ccache'', vous devez placer ''distcc'' après la partie ''ccache'' : 

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

Vous pouvez placer ceci dans votre fichier {{Path|~/.bashrc}},  ou son équivalent, pour avoir une variable PATH définie à chaque entrée dans la session.

Ensuite, là où vous taperiez normalement  <code>make</code> , vous devriez taper  <code>make -jN</code> (où N est un entier). 

=== Configurer  Distcc pour travailler avec ssh ===

Configure distcc via ssh demande d'éviter quelques pièges. Tout d'abord, générez une paire de clés ssh sans définir le mot de passe. Soyez conscient que Portage compile les programmes en tant qu'utilisateur ''portage''. Le dossier home de l'utilisateur ''portage'' est {{Path|/var/tmp/portage}}, ce qui veut dire que les clés doivent être stockées dans {{Path|/var/tmp/portage/.ssh}}.

{{RootCmd|ssh-keygen -b 2048 -t rsa -f /var/tmp/portage/.ssh/id_rsa}}

Ensuite, créez une section pour chacun des hôtes dans le fichier de configuration ssh :

{{File|/var/tmp/portage/.ssh/config|Ajout de sections par hôte|<pre>
Host test1
    HostName 123.456.789.1
    Port 1234
    User UserName
 
Host test2
    HostName 123.456.789.2
    Port 1234
    User UserName
</pre>
}}

Assurez-vous également que chaque hôte est disponible dans le fichier {{Path|known_hosts}} et ajoutez votre clé publique au fichier {{Path|authorized_keys}} des hôtes. Pour configurer les hôtes test1 et test2, exécutez :

{{RootCmd|/usr/bin/distcc-config --set-hosts "@test1 @test2"}}

Notez le signe  '@' qui spécifie les hôtes ssh à  <code>distcc</code>.

== Compilation croisée ==

La compilation croisée consiste à utiliser une architecture pour compiler les programmes pour une autre architecture. Ce peut être l'utilisation d'un Athlon (i686) pour compiler un programme destiné à un K6-2 (i586), ou l'utilisation d'un Sparc pour compiler un programme destiné à un ppc. Ceci est documenté dans notre [[Distcc/Cross-Compiling|DistCC Guide de compilation croisée de Distcc]].

== Utiliser  Distcc pour amorcer ==

=== Étape 1: Configurer Portage ===

Démarrer votre machine sur le LiveCD de Gentoo Linux et suivez les [http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=1 instruction d'installation ] jusqu'à la partie concernant le démarrage. (voir la  [[FAQ|FAQ de Gentoo ]] pour une plus ample information sur le démarrage.) Ensuite configurer Portage pour utiliser distcc: 

{{File|/etc/portage/make.conf|Configurer Portage pour utiliser distcc|<pre>
FEATURES="distcc"
MAKEOPTS="-jN"
</pre>
}}

{{RootCmd|export PATH{{=}}"/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"}}

=== Étape 2: obtenir Distcc ===

Installer distcc: 

{{RootCmd|USE{{=}}'-*' emerge --nodeps sys-devel/distcc}}

=== Étape 3: configurer Distcc ===

Exécutez la commande <code>distcc-config --install</code> pour configurer distcc; remplacez <code>host*</code> par les adresses IP ou les noms d'hôte des nœuds participant à  DistCC.

{{RootCmd|/usr/bin/distcc-config --set-hosts "localhost host1 host2 host3 ..."}}

Distcc est maintenant configurer pour le démarrage ! Continuez avec les instructions d'installation  officielles et ''n'oubliez pas'' de re-installer distcc après <code>emerge system</code>. Ceci pour être sûr que toutes les dépendance que vous désirez sont elles aussi installées. 

{{Note|Pendant le démarrage et  <code>emerge system</code> distcc peut sembler non utilisé. Ceci est prévisible car certains ebuild ne fonctionnent pas bien avec distcc et l'ont intentionnellement désactivé.}}

== Dépannage ==

=== Quelques paquets n'utilisent pas  Distcc ===

Tandis que vous installez des paquets variés, vous noterez que la compilation de quelques uns d'entre-eux n'est pas répartie (et ils ne sont pas compilés en parallèle). Ceci peut survenir du fait que le Makefile du paquet ne prend pas en charge les opérations en parallèle à cause d'un problème identifié. 

Parfois  distcc peut faire échouer la compilation d'un paquet. Si cela arrive, [https://bugs.gentoo.org/ rapportez] le nous.

=== Versions mélangées de  GCC  ===

Si vous avez des versions différentes de GCC sur vos hôtes, vous rencontrerez probablement des problèmes étranges. La solution est de faire en sorte que certains hôtes aient la même version de GCC. 

Des mises à jour récentes de Portage ont fait que Portage utilise  <code>${CHOST}-gcc</code> au lieu de <code>gcc</code> . Ceci veut dire que si vous mélangez des machines i686 avec d'autres  types (i386, i586) vous rencontrerez des problèmes. Un contournement à cela peut être d'exporter les variables <code>CC='gcc' et CXX='c++'</code> ou de les mettre dans {{Path|/etc/portage/make.conf}} 

{{Important|Faire cela redéfinit explicitement quelques comportements de Portage et peut conduire à des résultats étranges dans le futur. Ne faites cela que si vous mélangez les  CHOSTs.}}

=== -march=native ===

À partir de GCC 4.3.0, le compilateur prend en charge le commutateur <code>-march=native</code> qui active l'autodétection des processeur et les optimisations qui en valent la peine sur le processeur sur lequel GCC tourne. Il s'agit d'un problème avec  <code>distcc</code> car il autorise le mélange de codes optimisés pour différents processeurs (tels que AMD Athlon et Intel Pentium). N'utilisez ''pas''  <code>-march=native</code> ou <code>-mtune=native</code> dans vos <code>CFLAGS</code> ou <code>CXXFLAGS</code> lorsque vous compilez avec  <code>distcc</code>.

Pour connaître les options que GCC devrait activer lorsqu'il est appelé avec <code>-march=native</code>, exécutez ce qui suit :

{{Cmd|gcc -march{{=}}native -E -v - &lt;/dev/null 2&gt;&amp;1 {{!}} grep cc1|output=<pre>
/usr/libexec/gcc/x86_64-pc-linux-gnu/4.7.3/cc1 -E -quiet -v - -march=corei7-avx \
  -mcx16 -msahf -mno-movbe -mno-aes -mpclmul -mpopcnt -mno-abm -mno-lwp -mno-fma \
  -mno-fma4 -mno-xop -mno-bmi -mno-bmi2 -mno-tbm -mavx -mno-avx2 -msse4.2 -msse4.1 \
  -mno-lzcnt -mno-rdrnd -mno-f16c -mno-fsgsbase --param l1-cache-size=32 \
  --param l1-cache-line-size=64 --param l2-cache-size=6144 -mtune=corei7-avx
</pre>}}

== Suppléments Distcc  ==

=== Surveillant Distcc  === 

Distcc arrive avec deux surveillants. L'un à base de texte est toujours compilé et est appelé   <code>distccmon-text</code>. Le lancer pour la première fois peut paraître confus, mais il est réellement facile à utiliser. Si vous exécutez le programme sans paramètre, il fonctionnera une fois. Cependant, si vous lui passez un nombre N, il se mettra à jour toutes les N secondes. 

L'autre surveillant n'est activé qu'à travers l'option <code>gtk</code> de la variable <code>USE</code>.  TIl est basé sur GTK+ , tourne dans un environnement X et est très agréable. Pour Gentoo, le surveillant graphique a été appelé  <code>distccmon-gui</code> pour éviter la confusion. Par ailleurs, on peut aussi l'appeler <code>distccmon-gnome</code>.

{{RootCmd|distccmon-text N}}

ou exécutez <code>distccmon-gui</code>:

{{RootCmd|distccmon-gui}}

Pour surveiller l'utilisation de distcc par  Portage vous pouvez utiliser :
{{RootCmd|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-text N
|DISTCC_DIR{{=}}"/var/tmp/portage/.distcc/" distccmon-gui}}

{{Important|Si votre répertoire  distcc est ailleurs, changez la variable DISTCC_DIR en conséquence.}}

== Remerciements ==

Nous tenons à remercier les auteurs, éditeurs et traducteurs suivants pour leur contribution à ce guide :

* Lisa Seelye
* Mike Frysinger
* Erwin
* Sven Vermeulen
* Lars Weiler
* Tiemo Kieft
* nightmorph
