This page documents a tutorial for setting up complicated networking with the help of stacked runlevel. Along the tutorial other tricked for OpenRC are also expected.

The short version is that

{{File|rc-update manpage|stack runlevel|<pre>
If the -s, --stack option is given then we either add or remove the runlevel from the runlevel. 
This allows inheritance of run‚Äêlevels.
</pre>}}

= senario =
We have a university library which provides wireless network, with the following steps:
# associate with the AP with no authentication
# setup a [http://en.wikipedia.org/wiki/Pptp PPTP] VPN through NAT against an internal server
# using an [http://en.wikipedia.org/wiki/Http_proxy HTTP proxy] to access the websites

There are big advantages:
* [http://en.wikipedia.org/wiki/Generic_Routing_Encapsulation GRE] protocol used by [http://en.wikipedia.org/wiki/Pptp PPTP] uses source ip to identify client, thus do not support tunneling through NAT. There is enhanced GRE for such perpose, but routers has different implementations and only considered PPTP clients for Microsoft Windows and Apple Mac OS X, not for Linux[http://article.gmane.org/gmane.comp.misc.pptpclient.devel/2934].
* The author, as a server administratior, need ssh at least. http proxy, a limit gateway to the internet, sucks.

Besides complaining to library manager and network technician, then waiting forever, we can hack our own reliable way out. 

= solution =
* For Linux box not being able to use PPTP VPN through NAT, the author selected his phone to do the job. Apple's Iphone has Mac OS X, and it's PPTP client happens to work with the router in the library.
  Actually we can also use a virtual machine running Windows for the PPTP connection. That would be another story. The author's laptop is too weak to have virtual machine running smoothly.
* For pushing the limit of http proxy, the author selected [http://www.tinc-vpn.org tinc] to connect to his home router as the full functioned gateway.

= tutorial =
The solution is there. The procedures are complex and very boring and error-prone to set it up manually. OpenRC's stacked runlevel comes as a rescue.

We can make a new runlevel right away for the remaining tutorial:
{{RootCmd|mkdir /etc/runlevels/lwifi}}

Add our default runlevel into it:
{{RootCmd|rc-update -s add default lwifi}}

== iphone tethering ==
