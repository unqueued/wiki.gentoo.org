<languages />


{{Metadata|abstract=이 문서는 AMD64용 젠투 리눅스 배포판에 대한 자주 묻는 질문입니다}}

이 문서는 AMD64용 젠투 리눅스 배포판에 대한 자주 묻는 질문입니다

== 도입부 ==

This document contains the most commonly asked questions about using Gentoo Linux on AMD64 systems. Many of these questions come from the [//forums.gentoo.org/ forums], IRC, and various [//www.gentoo.org/main/en/lists.xml mailing lists]. The [//www.gentoo.org/proj/en/base/amd64/ Gentoo/AMD64 Project] provides support for Gentoo Linux on this architecture. If you have suggestions or questions about this FAQ, you are welcome to send an e-mail to {{Mail|amd64@gentoo.org}}.

== 설치 ==

=== AMD64 와 EM64T의 차이점은 뭔가요? ===

Both refer to 64-bit processors, one from AMD (AMD64) and the other from Intel (EM64T). AMD's 64-bit processors include the Athlon&nbsp;64, Turion, Neo, Phenom, and Opteron families. Intel's 64-bit processors include the Core&nbsp;2, Core&nbsp;i ''X'', Celeron, Xeon, and Pentium (all based on the Core&nbsp;2 architecture). The [//en.wikipedia.org/wiki/x86-64#Intel_64 last few versions] of the old Pentium&nbsp;4 and Xeon chips also support EM64T.

The AMD line of 64-bit processors were released well ahead of Intel's offering. Therefore, for historical reasons, the arch keyword for all x86-64 compatible architectures in Gentoo is {{keyword|amd64}}. As such, ''AMD64'' is a generic reference to 64-bit chips, whether AMD or Intel.

=== CFLAGS를 뭐라고 써야 할까요? ===

You should use simple <code>CFLAGS</code> to avoid future problems with your system. Supported <code>CFLAGS</code> are <code>-O2 -march=native -pipe</code> for both AMD and Intel (EM64T) systems.

=== 어떤 커널을 사용해야 하나요? ===

포티지에 있는 대부분의 커널 소스를 쓸 수 있습니다. 젠투 리눅스용으로 특별하게 설계한 커널인 {{Package|sys-kernel/gentoo-sources}} 사용을 권장합니다. AMD64용 패치가 들어있어 해당 커널은 젠투/AMD64만 공식적으로 지원합니다.

커널에 <code>IA32_EMULATION</code> 옵션이 활성화 됐는지 확인하십시오.

{{RootCmd|cd /usr/src/linux
|make menuconfig}}

{{KernelBox|title=IA32 에뮬레이션 활성화|1=
Executable file formats / Emulations  --->
  [*] IA32 Emulation
}}

{{Warning/ko|이 옵션을 비활성화 하면 [[multilib]] 시스템에서 빌드 실패를 경험할지도 모릅니다.}}

=== Will I have a performance upgrade if I use a 64-bit system instead of 32-bit? ===

That is a difficult question to answer. In some cases, you will experience a performance improvement, in other cases you will not. For everyday use, there is almost no difference between 64-bit and 32-bit. 64-bit is generally faster when it comes to floating point computing, which is normally the case in multimedia applications and 3D rendering. Linux.com's articles [http://www.linux.com/articles/114024?tid=121 "64-bit performance in Gentoo Linux"] and [http://www.linux.com/feature/43873 "64-bit Linux and BSD are maturing steadily"] may interest you. There's also a nice thread, [https://forums.gentoo.org/viewtopic-t-349691.html "Article: 64-bit performance in Gentoo Linux"] in our forums.

=== multilib은 무엇이고 어떻게 사용할 수 있나요? ===

Every AMD64 processor is able to run 32-bit code as well as 64-bit code. However, when you have a 32-bit application, you are unable to mix it with 64-bit libraries or vice versa. You can, however, natively (without emulation) run 32-bit applications if all shared libraries it needs are available as 32-bit objects. You can choose whether you want [[multilib]] support or not by selecting the according profile. The default is a multilib-enabled profile.

{{Warning|Switching from a no-multilib to a multilib-enabled profile is currently not supported ([http://jkroon.blogs.uls.co.za/it/gentoo/gentoo-converting-no-multilib-to-multilib conversion hints]), so think over your decision twice before you use the no-multilib profile.}}

=== 32비트 chroot를 어떻게 만드나요? ===

[[Project:AMD64/32-bit_Chroot_Guide|32비트 chroot 안내서]]를 읽어보십시오.

=== Can I upgrade from my x86 system to AMD64 by doing <code>emerge -e @world</code>? ===

Due to several differences between {{keyword|x86}} (32-bit) and {{keyword|amd64}} (64-bit) installations, it is impossible to upgrade this way. Please perform a fresh install using the [[Handbook:AMD64|AMD64 Handbook]].

Note that binary files created on an x86 system most likely cannot be read by packages on an AMD64 system. In particular, databases such as MySQL, innoDB, Berkeley&nbsp;DB, SQLite, OpenLDAP, etc. cannot simply be copied as-is. You will need to dump the database into an architecture-independent format, such as a text file, before attempting to restore it on an AMD64 system.

=== Reiser4를 쓸 수 있나요? ===

젠투 커널 프로젝트에서 제공하는 어떤 커널도 Reiser4는 없습니다. 따라서 AMD64팀은 지원하지 않습니다. 결국 대답은 "아니요"입니다.

== 하드웨어 ==

=== NVIDIA/ATI 드라이버가 동작할까요? ===

Yes, NVIDIA and ATI provide drivers that work on AMD64. You can install them by executing <kbd>emerge x11-drivers/nvidia-drivers</kbd> or <kbd>emerge x11-drivers/ati-drivers</kbd>. If you have more questions about these drivers, you should read the [[NVidia/nvidia-drivers|nvidia-drivers guide]] or the [[ATI FAQ]].

=== Cool'n'Quiet/PowerNow/SpeedStep 기능을 어떻게 사용하나요? ===

{{Dated|section}}

이 기능을 지원하는 요소와 함께 커널을 컴파일해야 합니다. 아래와 같이 기능을 활성화 하면 됩니다: 

{{KernelBox|title=Cool'n'Quiet/PowerNow/SpeedStep의 커널 옵션|1=
Power management options --->
  [*] Run-time PM core functionality
  [*] ACPI (Advanced Configuration and Power Interface) Support --->
    <*>   Processor
    <*>     Thermal Zone
  CPU Frequency scaling --->
  [*] CPU Frequency scaling
         Default CPUFreq governor (ondemand) --->
  -*-   'performance' governor
  <*>   'userspace' governor for userspace frequency scaling
  -*-   'ondemand' cpufreq policy governor
  <*>   ACPI Processor P-States driver
  <*>   AMD Opteron/Athlon64 PowerNow!
-*- CPU idle PM support
}}

Then <kbd>emerge sys-power/cpufrequtils</kbd> and edit {{Path|/etc/conf.d/cpufrequtils}} with a preferred text editor. 

{{FileBox|filename=/etc/conf.d/cpufrequtils|title=설정 예제|1=
# Options when starting cpufreq (given to the 'cpufreq-set' program)
START_OPTS="--governor ondemand"
  
# Options when stopping cpufreq (given to the 'cpufreq-set' program)
STOP_OPTS="--governor performance"
}}

Now you only have to run <kbd>rc-update add cpufrequtils boot</kbd> to make sure it is started every time the system boots. 

{{Note|You may want to read the [[Power management/Guide|Power Management Guide]] for more tips on CPU power management.}}

== 프로그램 ==

== 동작하는 플래시를 구할 수 있나요? ==

Yes. Emerge {{Package|www-plugins/adobe-flash}}. Be sure to read any messages displayed by the ebuild once it has been emerged.

=== 아무개 패키지를 설치하려는데 emerge가 (masked by: ~amd64 keyword)라고 하네요? ===

This means that the package is still in the 'testing' tree. Please read Portage's manual page (<kbd>man portage</kbd>) or the [http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml?part=3&chap=3 Mixing Software Branches] chapter of the [http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml AMD64 Handbook] for more information.

=== 아무개 패키지를 설치하려는데 emerge가 (masked by: missing keyword)라고 하네요? ===

이는 이 패키지가 아직 제대로 시험이 되지 않았다는 의미입니다. 패키지가 동작하지 않아 "불필요함"을 의미합니다. 이 패키지를 활용하려면 다른 아키텍처(또는 아키텍처 집합)를 수용하도록 마스크를 해제할 수 있습니다. 다음 예제에서 주어진 패키지의 어떤 키워드에 대한 설치를 수용하라고 포티지에 알릴 수 있는 예제를 보여드립니다.

{{RootCmd|echo "category/packagename **" >> /etc/portage/package.accept_keywords
|emerge packagename}}

잘 동작한다면 [https://bugs.gentoo.org/ 젠투 버그질라]에 버그를 알려, AMD64팀이 패키지에 키워드를 포함하고 여러분의 테스트로 혜택을 볼 수 있게 해주십시오. 

{{Warning|Do not try to invoke commands like <kbd>ACCEPT_KEYWORDS{{=}}"~x86" emerge packagename</kbd>. It will most certainly break the Portage tree and render the system useless.}}

== 젠투/AMD64 프로젝트를 어떻게 돕죠? ==

=== 어떻게 도울까요? ===

AMD64 아키텍처 사용자가 늘어남에 따라, 점점 더 많은 도움이 필요합니다. 젠투/AMD64의 질을 개선하기 위해 해야 할 일이 너무나 많습니다. 평균적으로 사용자가 우리를 도와줄 수 있는 일은: 

* 일반적인 버그 보고서 작성
* <code>~amd64</code> 키워드에서 아직 시험하지 못한 프로그램 시험
* [http://www.gentoo.org//proj/en/base/amd64/at/ 아키텍처 테스터 프로젝트] 참여
* 메일링 리스트, 포럼, IRC 채널의 질문에 대한 대답 도와주기
* 패치 보내기

== 기타 자료 ==

=== 젠투/AMD64에 대해 더 많은 도움이나 정보는 어디서 얻나요? ===

여기에 없는 질문이 있다면, [http://www.gentoo.org/proj/en/base/amd64/ 프로젝트 홈페이지]에 있는 다른 자료를 찾아볼 수 있습니다. <code>chat.freenode.net</code>의 <code>#gentoo-amd64</code> 채널, [https://forums.gentoo.org/viewforum-f-46.html 젠투/AMD64 포럼], <code>gentoo-amd64@lists.gentoo.org</code> 메일링 리스트에서 (영어로!!) 질문할 수도 있습니다.

[[Category:Core system]] {{Migrated|originalauthors= Simon Stelling, Luis Medinas, Gerald J. Normandin Jr., Xavier Neys, nightmorph+}}
